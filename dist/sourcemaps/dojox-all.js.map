{"version":3,"sources":["dojox-all.js"],"names":["define","require","module","has","isBrowser","window","location","document","global","this","doc","element","createElement","cache","config","name","add","test","now","force","process","versions","node","v8","load","Packages","addEventListener","navigator","maxTouchPoints","msMaxTouchPoints","screen","availWidth","innerWidth","form","attributes","length","clearElement","innerHTML","normalize","id","toAbsMid","tokens","match","i","get","skip","term","req","onLoad","parentRequire","loaded","result","p","src","rawConfig","adviseHas","featureSet","prefix","booting","dojoConfig","djConfig","locale","language","userLanguage","toLowerCase","item","dijit","dojox","dojo","scopeMap","packageMap","map","_scopeName","noGlobals","baseUrl","isAsync","async","rev","version","major","minor","patch","flag","revision","NaN","toString","v","Function","exit","exitcode","quit","console","tn","cn","tcn","a","Array","prototype","slice","call","arguments","unshift","join","_fake","isDebug","deprecated","experimental","behaviour","extra","removal","message","warn","moduleName","modulePaths","paths","replace","moduleUrl","url","toUrl","_hasResource","main"],"mappings":"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","file":"../dojox-all.js","sourcesContent":["define('dojo/has',[\"require\", \"module\"], function(require, module){\r\n\r\n\t// module:\r\n\t//\t\tdojo/has\r\n\t// summary:\r\n\t//\t\tDefines the has.js API and several feature tests used by dojo.\r\n\t// description:\r\n\t//\t\tThis module defines the has API as described by the project has.js with the following additional features:\r\n\t//\r\n\t//\t\t- the has test cache is exposed at has.cache.\r\n\t//\t\t- the method has.add includes a forth parameter that controls whether or not existing tests are replaced\r\n\t//\t\t- the loader's has cache may be optionally copied into this module's has cahce.\r\n\t//\r\n\t//\t\tThis module adopted from https://github.com/phiggins42/has.js; thanks has.js team!\r\n\r\n\t// try to pull the has implementation from the loader; both the dojo loader and bdLoad provide one\r\n\t// if using a foreign loader, then the has cache may be initialized via the config object for this module\r\n\t// WARNING: if a foreign loader defines require.has to be something other than the has.js API, then this implementation fail\r\n\tvar has = require.has || function(){};\r\n\tif(!has(\"dojo-has-api\")){\r\n\t\tvar\r\n\t\t\tisBrowser =\r\n\t\t\t\t// the most fundamental decision: are we in the browser?\r\n\t\t\t\ttypeof window != \"undefined\" &&\r\n\t\t\t\ttypeof location != \"undefined\" &&\r\n\t\t\t\ttypeof document != \"undefined\" &&\r\n\t\t\t\twindow.location == location && window.document == document,\r\n\r\n\t\t\t// has API variables\r\n\t\t\tglobal = (function () { return this; })(),\r\n\t\t\tdoc = isBrowser && document,\r\n\t\t\telement = doc && doc.createElement(\"DiV\"),\r\n\t\t\tcache = (module.config && module.config()) || {};\r\n\r\n\t\thas = function(name){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn the current value of the named feature.\r\n\t\t\t//\r\n\t\t\t// name: String|Integer\r\n\t\t\t//\t\tThe name (if a string) or identifier (if an integer) of the feature to test.\r\n\t\t\t//\r\n\t\t\t// description:\r\n\t\t\t//\t\tReturns the value of the feature named by name. The feature must have been\r\n\t\t\t//\t\tpreviously added to the cache by has.add.\r\n\r\n\t\t\treturn typeof cache[name] == \"function\" ? (cache[name] = cache[name](global, doc, element)) : cache[name]; // Boolean\r\n\t\t};\r\n\r\n\t\thas.cache = cache;\r\n\r\n\t\thas.add = function(name, test, now, force){\r\n\t\t\t// summary:\r\n\t\t\t//\t \tRegister a new feature test for some named feature.\r\n\t\t\t// name: String|Integer\r\n\t\t\t//\t \tThe name (if a string) or identifier (if an integer) of the feature to test.\r\n\t\t\t// test: Function\r\n\t\t\t//\t\t A test function to register. If a function, queued for testing until actually\r\n\t\t\t//\t\t needed. The test function should return a boolean indicating\r\n\t\t\t//\t \tthe presence of a feature or bug.\r\n\t\t\t// now: Boolean?\r\n\t\t\t//\t\t Optional. Omit if `test` is not a function. Provides a way to immediately\r\n\t\t\t//\t\t run the test and cache the result.\r\n\t\t\t// force: Boolean?\r\n\t\t\t//\t \tOptional. If the test already exists and force is truthy, then the existing\r\n\t\t\t//\t \ttest will be replaced; otherwise, add does not replace an existing test (that\r\n\t\t\t//\t \tis, by default, the first test advice wins).\r\n\t\t\t// example:\r\n\t\t\t//\t\tA redundant test, testFn with immediate execution:\r\n\t\t\t//\t|\thas.add(\"javascript\", function(){ return true; }, true);\r\n\t\t\t//\r\n\t\t\t// example:\r\n\t\t\t//\t\tAgain with the redundantness. You can do this in your tests, but we should\r\n\t\t\t//\t\tnot be doing this in any internal has.js tests\r\n\t\t\t//\t|\thas.add(\"javascript\", true);\r\n\t\t\t//\r\n\t\t\t// example:\r\n\t\t\t//\t\tThree things are passed to the testFunction. `global`, `document`, and a generic element\r\n\t\t\t//\t\tfrom which to work your test should the need arise.\r\n\t\t\t//\t|\thas.add(\"bug-byid\", function(g, d, el){\r\n\t\t\t//\t|\t\t// g\t== global, typically window, yadda yadda\r\n\t\t\t//\t|\t\t// d\t== document object\r\n\t\t\t//\t|\t\t// el == the generic element. a `has` element.\r\n\t\t\t//\t|\t\treturn false; // fake test, byid-when-form-has-name-matching-an-id is slightly longer\r\n\t\t\t//\t|\t});\r\n\r\n\t\t\t(typeof cache[name]==\"undefined\" || force) && (cache[name]= test);\r\n\t\t\treturn now && has(name);\r\n\t\t};\r\n\r\n\t\t// since we're operating under a loader that doesn't provide a has API, we must explicitly initialize\r\n\t\t// has as it would have otherwise been initialized by the dojo loader; use has.add to the builder\r\n\t\t// can optimize these away iff desired\r\n\t\thas.add(\"host-browser\", isBrowser);\r\n\t\thas.add(\"host-node\", (typeof process == \"object\" && process.versions && process.versions.node && process.versions.v8));\r\n\t\thas.add(\"host-rhino\", (typeof load == \"function\" && (typeof Packages == \"function\" || typeof Packages == \"object\")));\r\n\t\thas.add(\"dom\", isBrowser);\r\n\t\thas.add(\"dojo-dom-ready-api\", 1);\r\n\t\thas.add(\"dojo-sniff\", 1);\r\n\t}\r\n\r\n\tif(has(\"host-browser\")){\r\n\t\t// Common application level tests\r\n\t\thas.add(\"dom-addeventlistener\", !!document.addEventListener);\r\n\r\n\t\t// Do the device and browser have touch capability?\r\n\t\thas.add(\"touch\", \"ontouchstart\" in document\r\n\t\t\t|| (\"onpointerdown\" in document && navigator.maxTouchPoints > 0)\r\n\t\t\t|| window.navigator.msMaxTouchPoints);\r\n\r\n\t\t// Touch events support\r\n\t\thas.add(\"touch-events\", \"ontouchstart\" in document);\r\n\r\n\t\t// Pointer Events support\r\n\t\thas.add(\"pointer-events\", \"onpointerdown\" in document);\r\n\t\thas.add(\"MSPointer\", \"msMaxTouchPoints\" in navigator); //IE10 (+IE11 preview)\r\n\r\n\t\t// I don't know if any of these tests are really correct, just a rough guess\r\n\t\thas.add(\"device-width\", screen.availWidth || innerWidth);\r\n\r\n\t\t// Tests for DOMNode.attributes[] behavior:\r\n\t\t//\t - dom-attributes-explicit - attributes[] only lists explicitly user specified attributes\r\n\t\t//\t - dom-attributes-specified-flag (IE8) - need to check attr.specified flag to skip attributes user didn't specify\r\n\t\t//\t - Otherwise, in IE6-7. attributes[] will list hundreds of values, so need to do outerHTML to get attrs instead.\r\n\t\tvar form = document.createElement(\"form\");\r\n\t\thas.add(\"dom-attributes-explicit\", form.attributes.length == 0); // W3C\r\n\t\thas.add(\"dom-attributes-specified-flag\", form.attributes.length > 0 && form.attributes.length < 40);\t// IE8\r\n\t}\r\n\r\n\thas.clearElement = function(element){\r\n\t\t// summary:\r\n\t\t//\t Deletes the contents of the element passed to test functions.\r\n\t\telement.innerHTML= \"\";\r\n\t\treturn element;\r\n\t};\r\n\r\n\thas.normalize = function(id, toAbsMid){\r\n\t\t// summary:\r\n\t\t//\t Resolves id into a module id based on possibly-nested tenary expression that branches on has feature test value(s).\r\n\t\t//\r\n\t\t// toAbsMid: Function\r\n\t\t//\t Resolves a relative module id into an absolute module id\r\n\t\tvar\r\n\t\t\ttokens = id.match(/[\\?:]|[^:\\?]*/g), i = 0,\r\n\t\t\tget = function(skip){\r\n\t\t\t\tvar term = tokens[i++];\r\n\t\t\t\tif(term == \":\"){\r\n\t\t\t\t\t// empty string module name, resolves to 0\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// postfixed with a ? means it is a feature to branch on, the term is the name of the feature\r\n\t\t\t\t\tif(tokens[i++] == \"?\"){\r\n\t\t\t\t\t\tif(!skip && has(term)){\r\n\t\t\t\t\t\t\t// matched the feature, get the first value from the options\r\n\t\t\t\t\t\t\treturn get();\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t// did not match, get the second value, passing over the first\r\n\t\t\t\t\t\t\tget(true);\r\n\t\t\t\t\t\t\treturn get(skip);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// a module\r\n\t\t\t\t\treturn term || 0;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\tid = get();\r\n\t\treturn id && toAbsMid(id);\r\n\t};\r\n\r\n\tif (require.isBrowser===false) { // for build,will be changed with better implementation. by LWF\r\n\t\thas.load = function (name, req, onLoad, config) {\r\n\t        onLoad();\r\n\t    };\t\t\r\n\t} else {\r\n\t\thas.load = function(id, parentRequire, loaded){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConditional loading of AMD modules based on a has feature test value.\r\n\t\t\t// id: String\r\n\t\t\t//\t\tGives the resolved module id to load.\r\n\t\t\t// parentRequire: Function\r\n\t\t\t//\t\tThe loader require function with respect to the module that contained the plugin resource in it's\r\n\t\t\t//\t\tdependency list.\r\n\t\t\t// loaded: Function\r\n\t\t\t//\t Callback to loader that consumes result of plugin demand.\r\n\r\n\t\t\tif(id){\r\n\t\t\t\tparentRequire([id], loaded);\r\n\t\t\t}else{\r\n\t\t\t\tloaded();\r\n\t\t\t}\r\n\t\t};\t\t\r\n\t}\r\n\r\n\r\n\treturn has;\r\n});\r\n\ndefine('dojo/_base/config',[\"../has\", \"require\"], function(has, require){\r\n\t// module:\r\n\t//\t\tdojo/_base/config\r\n\r\n/*=====\r\nreturn {\r\n\t// summary:\r\n\t//\t\tThis module defines the user configuration during bootstrap.\r\n\t// description:\r\n\t//\t\tBy defining user configuration as a module value, an entire configuration can be specified in a build,\r\n\t//\t\tthereby eliminating the need for sniffing and or explicitly setting in the global variable dojoConfig.\r\n\t//\t\tAlso, when multiple instances of dojo exist in a single application, each will necessarily be located\r\n\t//\t\tat an unique absolute module identifier as given by the package configuration. Implementing configuration\r\n\t//\t\tas a module allows for specifying unique, per-instance configurations.\r\n\t// example:\r\n\t//\t\tCreate a second instance of dojo with a different, instance-unique configuration (assume the loader and\r\n\t//\t\tdojo.js are already loaded).\r\n\t//\t\t|\t// specify a configuration that creates a new instance of dojo at the absolute module identifier \"myDojo\"\r\n\t//\t\t|\trequire({\r\n\t//\t\t|\t\tpackages:[{\r\n\t//\t\t|\t\t\tname:\"myDojo\",\r\n\t//\t\t|\t\t\tlocation:\".\", //assume baseUrl points to dojo.js\r\n\t//\t\t|\t\t}]\r\n\t//\t\t|\t});\r\n\t//\t\t|\r\n\t//\t\t|\t// specify a configuration for the myDojo instance\r\n\t//\t\t|\tdefine(\"myDojo/config\", {\r\n\t//\t\t|\t\t// normal configuration variables go here, e.g.,\r\n\t//\t\t|\t\tlocale:\"fr-ca\"\r\n\t//\t\t|\t});\r\n\t//\t\t|\r\n\t//\t\t|\t// load and use the new instance of dojo\r\n\t//\t\t|\trequire([\"myDojo\"], function(dojo){\r\n\t//\t\t|\t\t// dojo is the new instance of dojo\r\n\t//\t\t|\t\t// use as required\r\n\t//\t\t|\t});\r\n\r\n\t// isDebug: Boolean\r\n\t//\t\tDefaults to `false`. If set to `true`, ensures that Dojo provides\r\n\t//\t\textended debugging feedback via Firebug. If Firebug is not available\r\n\t//\t\ton your platform, setting `isDebug` to `true` will force Dojo to\r\n\t//\t\tpull in (and display) the version of Firebug Lite which is\r\n\t//\t\tintegrated into the Dojo distribution, thereby always providing a\r\n\t//\t\tdebugging/logging console when `isDebug` is enabled. Note that\r\n\t//\t\tFirebug's `console.*` methods are ALWAYS defined by Dojo. If\r\n\t//\t\t`isDebug` is false and you are on a platform without Firebug, these\r\n\t//\t\tmethods will be defined as no-ops.\r\n\tisDebug: false,\r\n\r\n\t// locale: String\r\n\t//\t\tThe locale to assume for loading localized resources in this page,\r\n\t//\t\tspecified according to [RFC 3066](http://www.ietf.org/rfc/rfc3066.txt).\r\n\t//\t\tMust be specified entirely in lowercase, e.g. `en-us` and `zh-cn`.\r\n\t//\t\tSee the documentation for `dojo.i18n` and `dojo.requireLocalization`\r\n\t//\t\tfor details on loading localized resources. If no locale is specified,\r\n\t//\t\tDojo assumes the locale of the user agent, according to `navigator.userLanguage`\r\n\t//\t\tor `navigator.language` properties.\r\n\tlocale: undefined,\r\n\r\n\t// extraLocale: Array\r\n\t//\t\tNo default value. Specifies additional locales whose\r\n\t//\t\tresources should also be loaded alongside the default locale when\r\n\t//\t\tcalls to `dojo.requireLocalization()` are processed.\r\n\textraLocale: undefined,\r\n\r\n\t// baseUrl: String\r\n\t//\t\tThe directory in which `dojo.js` is located. Under normal\r\n\t//\t\tconditions, Dojo auto-detects the correct location from which it\r\n\t//\t\twas loaded. You may need to manually configure `baseUrl` in cases\r\n\t//\t\twhere you have renamed `dojo.js` or in which `<base>` tags confuse\r\n\t//\t\tsome browsers (e.g. IE 6). The variable `dojo.baseUrl` is assigned\r\n\t//\t\teither the value of `djConfig.baseUrl` if one is provided or the\r\n\t//\t\tauto-detected root if not. Other modules are located relative to\r\n\t//\t\tthis path. The path should end in a slash.\r\n\tbaseUrl: undefined,\r\n\r\n\t// modulePaths: [deprecated] Object\r\n\t//\t\tA map of module names to paths relative to `dojo.baseUrl`. The\r\n\t//\t\tkey/value pairs correspond directly to the arguments which\r\n\t//\t\t`dojo.registerModulePath` accepts. Specifying\r\n\t//\t\t`djConfig.modulePaths = { \"foo\": \"../../bar\" }` is the equivalent\r\n\t//\t\tof calling `dojo.registerModulePath(\"foo\", \"../../bar\");`. Multiple\r\n\t//\t\tmodules may be configured via `djConfig.modulePaths`.\r\n\tmodulePaths: {},\r\n\r\n\t// addOnLoad: Function|Array\r\n\t//\t\tAdds a callback via dojo/ready. Useful when Dojo is added after\r\n\t//\t\tthe page loads and djConfig.afterOnLoad is true. Supports the same\r\n\t//\t\targuments as dojo/ready. When using a function reference, use\r\n\t//\t\t`djConfig.addOnLoad = function(){};`. For object with function name use\r\n\t//\t\t`djConfig.addOnLoad = [myObject, \"functionName\"];` and for object with\r\n\t//\t\tfunction reference use\r\n\t//\t\t`djConfig.addOnLoad = [myObject, function(){}];`\r\n\taddOnLoad: null,\r\n\r\n\t// parseOnLoad: Boolean\r\n\t//\t\tRun the parser after the page is loaded\r\n\tparseOnLoad: false,\r\n\r\n\t// require: String[]\r\n\t//\t\tAn array of module names to be loaded immediately after dojo.js has been included\r\n\t//\t\tin a page.\r\n\trequire: [],\r\n\r\n\t// defaultDuration: Number\r\n\t//\t\tDefault duration, in milliseconds, for wipe and fade animations within dijits.\r\n\t//\t\tAssigned to dijit.defaultDuration.\r\n\tdefaultDuration: 200,\r\n\r\n\t// dojoBlankHtmlUrl: String\r\n\t//\t\tUsed by some modules to configure an empty iframe. Used by dojo/io/iframe and\r\n\t//\t\tdojo/back, and dijit/popup support in IE where an iframe is needed to make sure native\r\n\t//\t\tcontrols do not bleed through the popups. Normally this configuration variable\r\n\t//\t\tdoes not need to be set, except when using cross-domain/CDN Dojo builds.\r\n\t//\t\tSave dojo/resources/blank.html to your domain and set `djConfig.dojoBlankHtmlUrl`\r\n\t//\t\tto the path on your domain your copy of blank.html.\r\n\tdojoBlankHtmlUrl: undefined,\r\n\r\n\t// ioPublish: Boolean?\r\n\t//\t\tSet this to true to enable publishing of topics for the different phases of\r\n\t//\t\tIO operations. Publishing is done via dojo/topic.publish(). See dojo/main.__IoPublish for a list\r\n\t//\t\tof topics that are published.\r\n\tioPublish: false,\r\n\r\n\t// useCustomLogger: Anything?\r\n\t//\t\tIf set to a value that evaluates to true such as a string or array and\r\n\t//\t\tisDebug is true and Firebug is not available or running, then it bypasses\r\n\t//\t\tthe creation of Firebug Lite allowing you to define your own console object.\r\n\tuseCustomLogger: undefined,\r\n\r\n\t// transparentColor: Array\r\n\t//\t\tArray containing the r, g, b components used as transparent color in dojo.Color;\r\n\t//\t\tif undefined, [255,255,255] (white) will be used.\r\n\ttransparentColor: undefined,\r\n\t\r\n\t// deps: Function|Array\r\n\t//\t\tDefines dependencies to be used before the loader has been loaded.\r\n\t//\t\tWhen provided, they cause the loader to execute require(deps, callback) \r\n\t//\t\tonce it has finished loading. Should be used with callback.\r\n\tdeps: undefined,\r\n\t\r\n\t// callback: Function|Array\r\n\t//\t\tDefines a callback to be used when dependencies are defined before \r\n\t//\t\tthe loader has been loaded. When provided, they cause the loader to \r\n\t//\t\texecute require(deps, callback) once it has finished loading. \r\n\t//\t\tShould be used with deps.\r\n\tcallback: undefined,\r\n\t\r\n\t// deferredInstrumentation: Boolean\r\n\t//\t\tWhether deferred instrumentation should be loaded or included\r\n\t//\t\tin builds.\r\n\tdeferredInstrumentation: true,\r\n\r\n\t// useDeferredInstrumentation: Boolean|String\r\n\t//\t\tWhether the deferred instrumentation should be used.\r\n\t//\r\n\t//\t\t* `\"report-rejections\"`: report each rejection as it occurs.\r\n\t//\t\t* `true` or `1` or `\"report-unhandled-rejections\"`: wait 1 second\r\n\t//\t\t\tin an attempt to detect unhandled rejections.\r\n\tuseDeferredInstrumentation: \"report-unhandled-rejections\"\r\n};\r\n=====*/\r\n\r\n\tvar result = {};\r\n\tif(has(\"dojo-config-api\")){\r\n\t\t// must be the dojo loader; take a shallow copy of require.rawConfig\r\n\t\tvar src = require.rawConfig, p;\r\n\t\tfor(p in src){\r\n\t\t\tresult[p] = src[p];\r\n\t\t}\r\n\t}else{\r\n\t\tvar adviseHas = function(featureSet, prefix, booting){\r\n\t\t\tfor(p in featureSet){\r\n\t\t\t\tp!=\"has\" && has.add(prefix + p, featureSet[p], 0, booting);\r\n\t\t\t}\r\n\t\t};\r\n\t\tvar global = (function () { return this; })();\r\n\t\tresult = has(\"dojo-loader\") ?\r\n\t\t\t// must be a built version of the dojo loader; all config stuffed in require.rawConfig\r\n\t\t\trequire.rawConfig :\r\n\t\t\t// a foreign loader\r\n\t\t\tglobal.dojoConfig || global.djConfig || {};\r\n\t\tadviseHas(result, \"config\", 1);\r\n\t\tadviseHas(result.has, \"\", 1);\r\n\t}\r\n\r\n\tif(!result.locale && typeof navigator != \"undefined\"){\r\n\t\t// Default locale for browsers.\r\n\t\tvar language = (navigator.language || navigator.userLanguage);\r\n\t\tif(language){\r\n\t\t\tresult.locale = language.toLowerCase();\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n});\r\n\r\n\ndefine('dojo/_base/kernel',[\"../has\", \"./config\", \"require\", \"module\"], function(has, config, require, module){\r\n\t// module:\r\n\t//\t\tdojo/_base/kernel\r\n\r\n\t// This module is the foundational module of the dojo boot sequence; it defines the dojo object.\r\n\r\n\tvar\r\n\t\t// loop variables for this module\r\n\t\ti, p,\r\n\r\n\t\t// create dojo, dijit, and dojox\r\n\t\t// FIXME: in 2.0 remove dijit, dojox being created by dojo\r\n\t\tglobal = (function () { return this; })(),\r\n\t\tdijit = {},\r\n\t\tdojox = {},\r\n\t\tdojo = {\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis module is the foundational module of the dojo boot sequence; it defines the dojo object.\r\n\r\n\t\t\t// notice dojo takes ownership of the value of the config module\r\n\t\t\tconfig:config,\r\n\t\t\tglobal:global,\r\n\t\t\tdijit:dijit,\r\n\t\t\tdojox:dojox\r\n\t\t};\r\n\r\n\r\n\t// Configure the scope map. For a 100% AMD application, the scope map is not needed other than to provide\r\n\t// a _scopeName property for the dojo, dijit, and dojox root object so those packages can create\r\n\t// unique names in the global space.\r\n\t//\r\n\t// Built, legacy modules use the scope map to allow those modules to be expressed as if dojo, dijit, and dojox,\r\n\t// where global when in fact they are either global under different names or not global at all. In v1.6-, the\r\n\t// config variable \"scopeMap\" was used to map names as used within a module to global names. This has been\r\n\t// subsumed by the AMD map configuration variable which can relocate packages to different names. For backcompat,\r\n\t// only the \"*\" mapping is supported. See http://livedocs.dojotoolkit.org/developer/design/loader#legacy-cross-domain-mode for details.\r\n\t//\r\n\t// The following computations contort the packageMap for this dojo instance into a scopeMap.\r\n\tvar scopeMap =\r\n\t\t\t// a map from a name used in a legacy module to the (global variable name, object addressed by that name)\r\n\t\t\t// always map dojo, dijit, and dojox\r\n\t\t\t{\r\n\t\t\t\tdojo:[\"dojo\", dojo],\r\n\t\t\t\tdijit:[\"dijit\", dijit],\r\n\t\t\t\tdojox:[\"dojox\", dojox]\r\n\t\t\t},\r\n\r\n\t\tpackageMap =\r\n\t\t\t// the package map for this dojo instance; note, a foreign loader or no pacakgeMap results in the above default config\r\n\t\t\t(require.map && require.map[module.id.match(/[^\\/]+/)[0]]),\r\n\r\n\t\titem;\r\n\r\n\r\n\t// process all mapped top-level names for this instance of dojo\r\n\tfor(p in packageMap){\r\n\t\tif(scopeMap[p]){\r\n\t\t\t// mapped dojo, dijit, or dojox\r\n\t\t\tscopeMap[p][0] = packageMap[p];\r\n\t\t}else{\r\n\t\t\t// some other top-level name\r\n\t\t\tscopeMap[p] = [packageMap[p], {}];\r\n\t\t}\r\n\t}\r\n\r\n\t// publish those names to _scopeName and, optionally, the global namespace\r\n\tfor(p in scopeMap){\r\n\t\titem = scopeMap[p];\r\n\t\titem[1]._scopeName = item[0];\r\n\t\tif(!config.noGlobals){\r\n\t\t\tglobal[item[0]] = item[1];\r\n\t\t}\r\n\t}\r\n\tdojo.scopeMap = scopeMap;\r\n\r\n\t/*===== dojo.__docParserConfigureScopeMap(scopeMap); =====*/\r\n\r\n\t// FIXME: dojo.baseUrl and dojo.config.baseUrl should be deprecated\r\n\tdojo.baseUrl = dojo.config.baseUrl = require.baseUrl;\r\n\tdojo.isAsync = !has(\"dojo-loader\") || require.async;\r\n\tdojo.locale = config.locale;\r\n\r\n\tvar rev = \"$Rev: f4fef70 $\".match(/[0-9a-f]{7,}/);\r\n\tdojo.version = {\r\n\t\t// summary:\r\n\t\t//\t\tVersion number of the Dojo Toolkit\r\n\t\t// description:\r\n\t\t//\t\tHash about the version, including\r\n\t\t//\r\n\t\t//\t\t- major: Integer: Major version. If total version is \"1.2.0beta1\", will be 1\r\n\t\t//\t\t- minor: Integer: Minor version. If total version is \"1.2.0beta1\", will be 2\r\n\t\t//\t\t- patch: Integer: Patch version. If total version is \"1.2.0beta1\", will be 0\r\n\t\t//\t\t- flag: String: Descriptor flag. If total version is \"1.2.0beta1\", will be \"beta1\"\r\n\t\t//\t\t- revision: Number: The Git rev from which dojo was pulled\r\n\r\n\t\tmajor: 1, minor: 10, patch: 4, flag: \"\",\r\n\t\trevision: rev ? rev[0] : NaN,\r\n\t\ttoString: function(){\r\n\t\t\tvar v = dojo.version;\r\n\t\t\treturn v.major + \".\" + v.minor + \".\" + v.patch + v.flag + \" (\" + v.revision + \")\";\t// String\r\n\t\t}\r\n\t};\r\n\r\n\t// If has(\"extend-dojo\") is truthy, then as a dojo module is defined it should push it's definitions\r\n\t// into the dojo object, and conversely. In 2.0, it will likely be unusual to augment another object\r\n\t// as a result of defining a module. This has feature gives a way to force 2.0 behavior as the code\r\n\t// is migrated. Absent specific advice otherwise, set extend-dojo to truthy.\r\n\thas.add(\"extend-dojo\", 1);\r\n\r\n\r\n\t(Function(\"d\", \"d.eval = function(){return d.global.eval ? d.global.eval(arguments[0]) : eval(arguments[0]);}\"))(dojo);\r\n\t/*=====\r\n\tdojo.eval = function(scriptText){\r\n\t\t// summary:\r\n\t\t//\t\tA legacy method created for use exclusively by internal Dojo methods. Do not use this method\r\n\t\t//\t\tdirectly unless you understand its possibly-different implications on the platforms your are targeting.\r\n\t\t// description:\r\n\t\t//\t\tMakes an attempt to evaluate scriptText in the global scope. The function works correctly for browsers\r\n\t\t//\t\tthat support indirect eval.\r\n\t\t//\r\n\t\t//\t\tAs usual, IE does not. On IE, the only way to implement global eval is to\r\n\t\t//\t\tuse execScript. Unfortunately, execScript does not return a value and breaks some current usages of dojo.eval.\r\n\t\t//\t\tThis implementation uses the technique of executing eval in the scope of a function that is a single scope\r\n\t\t//\t\tframe below the global scope; thereby coming close to the global scope. Note carefully that\r\n\t\t//\r\n\t\t//\t\tdojo.eval(\"var pi = 3.14;\");\r\n\t\t//\r\n\t\t//\t\twill define global pi in non-IE environments, but define pi only in a temporary local scope for IE. If you want\r\n\t\t//\t\tto define a global variable using dojo.eval, write something like\r\n\t\t//\r\n\t\t//\t\tdojo.eval(\"window.pi = 3.14;\")\r\n\t\t// scriptText:\r\n\t\t//\t\tThe text to evaluation.\r\n\t\t// returns:\r\n\t\t//\t\tThe result of the evaluation. Often `undefined`\r\n\t};\r\n\t=====*/\r\n\r\n\r\n\tif(has(\"host-rhino\")){\r\n\t\tdojo.exit = function(exitcode){\r\n\t\t\tquit(exitcode);\r\n\t\t};\r\n\t}else{\r\n\t\tdojo.exit = function(){\r\n\t\t};\r\n\t}\r\n\r\n\thas.add(\"dojo-guarantee-console\",\r\n\t\t// ensure that console.log, console.warn, etc. are defined\r\n\t\t1\r\n\t);\r\n\tif(has(\"dojo-guarantee-console\")){\r\n\t\ttypeof console != \"undefined\" || (console = {});\r\n\t\t//\tBe careful to leave 'log' always at the end\r\n\t\tvar cn = [\r\n\t\t\t\"assert\", \"count\", \"debug\", \"dir\", \"dirxml\", \"error\", \"group\",\r\n\t\t\t\"groupEnd\", \"info\", \"profile\", \"profileEnd\", \"time\", \"timeEnd\",\r\n\t\t\t\"trace\", \"warn\", \"log\"\r\n\t\t];\r\n\t\tvar tn;\r\n\t\ti = 0;\r\n\t\twhile((tn = cn[i++])){\r\n\t\t\tif(!console[tn]){\r\n\t\t\t\t(function(){\r\n\t\t\t\t\tvar tcn = tn + \"\";\r\n\t\t\t\t\tconsole[tcn] = ('log' in console) ? function(){\r\n\t\t\t\t\t\tvar a = Array.prototype.slice.call(arguments);\r\n\t\t\t\t\t\ta.unshift(tcn + \":\");\r\n\t\t\t\t\t\tconsole[\"log\"](a.join(\" \"));\r\n\t\t\t\t\t} : function(){};\r\n\t\t\t\t\tconsole[tcn]._fake = true;\r\n\t\t\t\t})();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\thas.add(\"dojo-debug-messages\",\r\n\t\t// include dojo.deprecated/dojo.experimental implementations\r\n\t\t!!config.isDebug\r\n\t);\r\n\tdojo.deprecated = dojo.experimental =  function(){};\r\n\tif(has(\"dojo-debug-messages\")){\r\n\t\tdojo.deprecated = function(/*String*/ behaviour, /*String?*/ extra, /*String?*/ removal){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tLog a debug message to indicate that a behavior has been\r\n\t\t\t//\t\tdeprecated.\r\n\t\t\t// behaviour: String\r\n\t\t\t//\t\tThe API or behavior being deprecated. Usually in the form\r\n\t\t\t//\t\tof \"myApp.someFunction()\".\r\n\t\t\t// extra: String?\r\n\t\t\t//\t\tText to append to the message. Often provides advice on a\r\n\t\t\t//\t\tnew function or facility to achieve the same goal during\r\n\t\t\t//\t\tthe deprecation period.\r\n\t\t\t// removal: String?\r\n\t\t\t//\t\tText to indicate when in the future the behavior will be\r\n\t\t\t//\t\tremoved. Usually a version number.\r\n\t\t\t// example:\r\n\t\t\t//\t| dojo.deprecated(\"myApp.getTemp()\", \"use myApp.getLocaleTemp() instead\", \"1.0\");\r\n\r\n\t\t\tvar message = \"DEPRECATED: \" + behaviour;\r\n\t\t\tif(extra){ message += \" \" + extra; }\r\n\t\t\tif(removal){ message += \" -- will be removed in version: \" + removal; }\r\n\t\t\tconsole.warn(message);\r\n\t\t};\r\n\r\n\t\tdojo.experimental = function(/* String */ moduleName, /* String? */ extra){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMarks code as experimental.\r\n\t\t\t// description:\r\n\t\t\t//\t\tThis can be used to mark a function, file, or module as\r\n\t\t\t//\t\texperimental.\t Experimental code is not ready to be used, and the\r\n\t\t\t//\t\tAPIs are subject to change without notice.\tExperimental code may be\r\n\t\t\t//\t\tcompleted deleted without going through the normal deprecation\r\n\t\t\t//\t\tprocess.\r\n\t\t\t// moduleName: String\r\n\t\t\t//\t\tThe name of a module, or the name of a module file or a specific\r\n\t\t\t//\t\tfunction\r\n\t\t\t// extra: String?\r\n\t\t\t//\t\tsome additional message for the user\r\n\t\t\t// example:\r\n\t\t\t//\t| dojo.experimental(\"dojo.data.Result\");\r\n\t\t\t// example:\r\n\t\t\t//\t| dojo.experimental(\"dojo.weather.toKelvin()\", \"PENDING approval from NOAA\");\r\n\r\n\t\t\tvar message = \"EXPERIMENTAL: \" + moduleName + \" -- APIs subject to change without notice.\";\r\n\t\t\tif(extra){ message += \" \" + extra; }\r\n\t\t\tconsole.warn(message);\r\n\t\t};\r\n\t}\r\n\r\n\thas.add(\"dojo-modulePaths\",\r\n\t\t// consume dojo.modulePaths processing\r\n\t\t1\r\n\t);\r\n\tif(has(\"dojo-modulePaths\")){\r\n\t\t// notice that modulePaths won't be applied to any require's before the dojo/_base/kernel factory is run;\r\n\t\t// this is the v1.6- behavior.\r\n\t\tif(config.modulePaths){\r\n\t\t\tdojo.deprecated(\"dojo.modulePaths\", \"use paths configuration\");\r\n\t\t\tvar paths = {};\r\n\t\t\tfor(p in config.modulePaths){\r\n\t\t\t\tpaths[p.replace(/\\./g, \"/\")] = config.modulePaths[p];\r\n\t\t\t}\r\n\t\t\trequire({paths:paths});\r\n\t\t}\r\n\t}\r\n\r\n\thas.add(\"dojo-moduleUrl\",\r\n\t\t// include dojo.moduleUrl\r\n\t\t1\r\n\t);\r\n\tif(has(\"dojo-moduleUrl\")){\r\n\t\tdojo.moduleUrl = function(/*String*/module, /*String?*/url){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns a URL relative to a module.\r\n\t\t\t// example:\r\n\t\t\t//\t|\tvar pngPath = dojo.moduleUrl(\"acme\",\"images/small.png\");\r\n\t\t\t//\t|\tconsole.dir(pngPath); // list the object properties\r\n\t\t\t//\t|\t// create an image and set it's source to pngPath's value:\r\n\t\t\t//\t|\tvar img = document.createElement(\"img\");\r\n\t\t\t//\t|\timg.src = pngPath;\r\n\t\t\t//\t|\t// add our image to the document\r\n\t\t\t//\t|\tdojo.body().appendChild(img);\r\n\t\t\t// example:\r\n\t\t\t//\t\tyou may de-reference as far as you like down the package\r\n\t\t\t//\t\thierarchy.  This is sometimes handy to avoid lengthy relative\r\n\t\t\t//\t\turls or for building portable sub-packages. In this example,\r\n\t\t\t//\t\tthe `acme.widget` and `acme.util` directories may be located\r\n\t\t\t//\t\tunder different roots (see `dojo.registerModulePath`) but the\r\n\t\t\t//\t\tthe modules which reference them can be unaware of their\r\n\t\t\t//\t\trelative locations on the filesystem:\r\n\t\t\t//\t|\t// somewhere in a configuration block\r\n\t\t\t//\t|\tdojo.registerModulePath(\"acme.widget\", \"../../acme/widget\");\r\n\t\t\t//\t|\tdojo.registerModulePath(\"acme.util\", \"../../util\");\r\n\t\t\t//\t|\r\n\t\t\t//\t|\t// ...\r\n\t\t\t//\t|\r\n\t\t\t//\t|\t// code in a module using acme resources\r\n\t\t\t//\t|\tvar tmpltPath = dojo.moduleUrl(\"acme.widget\",\"templates/template.html\");\r\n\t\t\t//\t|\tvar dataPath = dojo.moduleUrl(\"acme.util\",\"resources/data.json\");\r\n\r\n\t\t\tdojo.deprecated(\"dojo.moduleUrl()\", \"use require.toUrl\", \"2.0\");\r\n\r\n\t\t\t// require.toUrl requires a filetype; therefore, just append the suffix \"/*.*\" to guarantee a filetype, then\r\n\t\t\t// remove the suffix from the result. This way clients can request a url w/out a filetype. This should be\r\n\t\t\t// rare, but it maintains backcompat for the v1.x line (note: dojo.moduleUrl will be removed in v2.0).\r\n\t\t\t// Notice * is an illegal filename so it won't conflict with any real path map that may exist the paths config.\r\n\t\t\tvar result = null;\r\n\t\t\tif(module){\r\n\t\t\t\tresult = require.toUrl(module.replace(/\\./g, \"/\") + (url ? (\"/\" + url) : \"\") + \"/*.*\").replace(/\\/\\*\\.\\*/, \"\") + (url ? \"\" : \"/\");\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t};\r\n\t}\r\n\r\n\tdojo._hasResource = {}; // for backward compatibility with layers built with 1.6 tooling\r\n\r\n\treturn dojo;\r\n});\r\n\ndefine('dojox/main',[\"dojo/_base/kernel\"], function(dojo) {\r\n\t// module:\r\n\t//\t\tdojox/main\r\n\r\n\t/*=====\r\n\treturn {\r\n\t\t// summary:\r\n\t\t//\t\tThe dojox package main module; dojox package is somewhat unusual in that the main module currently just provides an empty object.\r\n\t\t//\t\tApps should require modules from the dojox packages directly, rather than loading this module.\r\n\t};\r\n\t=====*/\r\n\r\n\treturn dojo.dojox;\r\n});\ndefine('dojox', ['dojox/main'], function (main) { return main; });\n\n"]}