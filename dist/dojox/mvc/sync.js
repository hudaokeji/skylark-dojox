/**
 * dojox - A version of dojox.js framework that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/dojox/
 * @license MIT
 */
define(["dojo/_base/lang","dojo/_base/config","dojo/_base/array","dojo/has"],function(n,o,i,e){var t,s=n.getObject("dojox.mvc",!0);if(e.add("mvc-bindings-log-api",(o.mvc||{}).debugBindings),e("mvc-bindings-log-api"))function a(n,o,i,e){return[[i.canConvertToLoggable||!i.declaredClass?i:i.declaredClass,e].join(":"),[n.canConvertToLoggable||!n.declaredClass?n:n.declaredClass,o].join(":")]}function r(o,t,s,r,c,l,g,u,d,f){if(!(s(d,u)||"*"==c&&i.indexOf(r.get("properties")||[g],g)<0||"*"==c&&g in(f||{}))){var p="*"==c?g:c;if(e("mvc-bindings-log-api"))var v=a(r,p,l,g);try{d=o?o(d,t):d}catch(n){return void(e("mvc-bindings-log-api")&&console.log("Copy from"+v.join(" to ")+" was not done as an error is thrown in the converter."))}e("mvc-bindings-log-api")&&console.log(v.reverse().join(" is being copied from: ")+" (Value: "+d+" from "+u+")"),n.isFunction(r.set)?r.set(p,d):r[p]=d}}var c={from:1,to:2,both:3};return t=function(o,c,l,g,u){var d,f,p,v=(u||{}).converter;v&&(d={source:o,target:l},f=v.format&&n.hitch(d,v.format),p=v.parse&&n.hitch(d,v.parse));var m,b=[],h=[],j=n.mixin({},o.constraints,l.constraints),w=(u||{}).bindDirection||s.both,y=(u||{}).equals||t.equals;if(e("mvc-bindings-log-api"))var F=a(o,c,l,g);if("*"==g){if("*"!=c)throw new Error("Unmatched wildcard is specified between source and target.");if(!(m=l.get("properties")))for(var C in m=[],l)l.hasOwnProperty(C)&&"_watchCallbacks"!=C&&m.push(C);h=l.get("excludes")}else m=[c];w&s.from&&(n.isFunction(o.set)&&n.isFunction(o.watch)?b.push(o.watch.apply(o,("*"!=c?[c]:[]).concat([function(n,i,e){r(f,j,y,l,g,o,n,i,e,h)}]))):e("mvc-bindings-log-api")&&console.log(F.reverse().join(" is not a stateful property. Its change is not reflected to ")+"."),i.forEach(m,function(i){if("*"!=g||!(i in(h||{}))){var e=n.isFunction(o.get)?o.get(i):o[i];r(f,j,y,l,"*"==g?i:g,o,i,void 0,e)}})),w&s.to&&(w&s.from||i.forEach(m,function(i){if("*"!=g||!(i in(h||{}))){var e=n.isFunction(l.get)?l.get(g):l[g];r(p,j,y,o,i,l,"*"==g?i:g,void 0,e)}}),n.isFunction(l.set)&&n.isFunction(l.watch)?b.push(l.watch.apply(l,("*"!=g?[g]:[]).concat([function(n,i,e){r(p,j,y,o,c,l,n,i,e,h)}]))):e("mvc-bindings-log-api")&&console.log(F.join(" is not a stateful property. Its change is not reflected to ")+".")),e("mvc-bindings-log-api")&&console.log(F.join(" is bound to: "));var q={};return q.unwatch=q.remove=function(){for(var n=null;n=b.pop();)n.unwatch();e("mvc-bindings-log-api")&&console.log(F.join(" is unbound from: "))},q},n.mixin(s,c),n.setObject("dojox.mvc.sync",n.mixin(t,{equals:function(o,i){return o===i||"number"==typeof o&&isNaN(o)&&"number"==typeof i&&isNaN(i)||n.isFunction((o||{}).getTime)&&n.isFunction((i||{}).getTime)&&o.getTime()==i.getTime()||(n.isFunction((o||{}).equals)?o.equals(i):!!n.isFunction((i||{}).equals)&&i.equals(o))}},c))});
//# sourceMappingURL=../sourcemaps/mvc/sync.js.map
