/**
 * dojox - A version of dojox.js framework that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/dojox/
 * @license MIT
 */
dojo.provide("dojox.sql._base"),dojo.require("dojox.sql._crypto"),dojo.mixin(dojox.sql,{dbName:null,debug:!!dojo.exists("dojox.sql.debug")&&dojox.sql.debug,open:function(t){if(!this._dbOpen||t&&t!=this.dbName){this.dbName||(this.dbName="dot_store_"+window.location.href.replace(/[^0-9A-Za-z_]/g,"_"),this.dbName.length>63&&(this.dbName=this.dbName.substring(0,63))),t||(t=this.dbName);try{this._initDb(),this.db.open(t),this._dbOpen=!0}catch(t){throw t.message||t}}},close:function(t){if(!dojo.isIE&&(this._dbOpen||t&&t!=this.dbName)){t||(t=this.dbName);try{this.db.close(t),this._dbOpen=!1}catch(t){throw t.message||t}}},_exec:function(t){try{this._initDb(),this._dbOpen||(this.open(),this._autoClose=!0);var e,o=null,i=null,s=dojo._toArray(t);if(e=s.splice(0,1)[0],(this._needsEncrypt(e)||this._needsDecrypt(e))&&(o=s.splice(s.length-1,1)[0],i=s.splice(s.length-1,1)[0]),this.debug&&this._printDebugSQL(e,s),this._needsEncrypt(e))return new dojox.sql._SQLCrypto("encrypt",e,i,s,o),null;if(this._needsDecrypt(e))return new dojox.sql._SQLCrypto("decrypt",e,i,s,o),null;var n=this.db.execute(e,s);return n=this._normalizeResults(n),this._autoClose&&this.close(),n}catch(t){if(t=t.message||t,console.debug("SQL Exception: "+t),this._autoClose)try{this.close()}catch(t){console.debug("Error closing database: "+t.message||t)}throw t}return null},_initDb:function(){if(!this.db)try{this.db=google.gears.factory.create("beta.database","1.0")}catch(t){throw dojo.setObject("google.gears.denied",!0),dojox.off&&dojox.off.onFrameworkEvent("coreOperationFailed"),"Google Gears must be allowed to run"}},_printDebugSQL:function(t,e){for(var o='dojox.sql("'+t+'"',i=0;i<e.length;i++)"string"==typeof e[i]?o+=', "'+e[i]+'"':o+=", "+e[i];o+=")",console.debug(o)},_normalizeResults:function(t){var e=[];if(!t)return[];for(;t.isValidRow();){for(var o={},i=0;i<t.fieldCount();i++){var s=t.fieldName(i),n=t.field(i);o[s]=n}e.push(o),t.next()}return t.close(),e},_needsEncrypt:function(t){return/encrypt\([^\)]*\)/i.test(t)},_needsDecrypt:function(t){return/decrypt\([^\)]*\)/i.test(t)}}),dojo.declare("dojox.sql._SQLCrypto",null,{constructor:function(t,e,o,i,s){"encrypt"==t?this._execEncryptSQL(e,o,i,s):this._execDecryptSQL(e,o,i,s)},_execEncryptSQL:function(t,e,o,i){var s=this._stripCryptoSQL(t),n=this._flagEncryptedArgs(t,o),r=this;this._encrypt(s,e,o,n,function(o){var n=[],l=null;try{n=dojox.sql.db.execute(s,o)}catch(t){!0,l=t.message||t}if(null==l)if(n=dojox.sql._normalizeResults(n),dojox.sql._autoClose&&dojox.sql.close(),dojox.sql._needsDecrypt(t)){var c=r._determineDecryptedColumns(t);r._decrypt(n,c,e,function(t){i(t,!1,null)})}else i(n,!1,null);else{if(dojox.sql._autoClose)try{dojox.sql.close()}catch(t){}i(null,!0,l.toString())}})},_execDecryptSQL:function(t,e,o,i){var s=this._stripCryptoSQL(t),n=this._determineDecryptedColumns(t),r=[],l=null;try{r=dojox.sql.db.execute(s,o)}catch(t){!0,l=t.message||t}if(null==l)r=dojox.sql._normalizeResults(r),dojox.sql._autoClose&&dojox.sql.close(),this._decrypt(r,n,e,function(t){i(t,!1,null)});else{if(dojox.sql._autoClose)try{dojox.sql.close()}catch(t){}i(r,!0,l.toString())}},_encrypt:function(t,e,o,i,s){this._totalCrypto=0,this._finishedCrypto=0,this._finishedSpawningCrypto=!1,this._finalArgs=o;for(var n=0;n<o.length;n++)if(i[n]){var r=o[n],l=n;this._totalCrypto++,dojox.sql._crypto.encrypt(r,e,dojo.hitch(this,function(t){this._finalArgs[l]=t,this._finishedCrypto++,this._finishedCrypto>=this._totalCrypto&&this._finishedSpawningCrypto&&s(this._finalArgs)}))}this._finishedSpawningCrypto=!0},_decrypt:function(t,e,o,i){this._totalCrypto=0,this._finishedCrypto=0,this._finishedSpawningCrypto=!1,this._finalResultSet=t;for(var s=0;s<t.length;s++){var n=t[s];for(var r in n)if("*"==e||e[r]){this._totalCrypto++;var l=n[r];this._decryptSingleColumn(r,l,o,s,function(t){i(t)})}}this._finishedSpawningCrypto=!0},_stripCryptoSQL:function(t){var e=(t=t.replace(/DECRYPT\(\*\)/gi,"*")).match(/ENCRYPT\([^\)]*\)/gi);if(null!=e)for(var o=0;o<e.length;o++){var i=e[o],s=i.match(/ENCRYPT\(([^\)]*)\)/i)[1];t=t.replace(i,s)}if(null!=(e=t.match(/DECRYPT\([^\)]*\)/gi)))for(o=0;o<e.length;o++){var n=e[o],r=n.match(/DECRYPT\(([^\)]*)\)/i)[1];t=t.replace(n,r)}return t},_flagEncryptedArgs:function(t,e){for(var o=new RegExp(/([\"][^\"]*\?[^\"]*[\"])|([\'][^\']*\?[^\']*[\'])|(\?)/gi),i=0,s=[];null!=o.exec(t);){var n=RegExp.lastMatch+"";if(!/^[\"\']/.test(n)){var r=!1;/ENCRYPT\([^\)]*$/i.test(RegExp.leftContext)&&(r=!0),s[i]=r,i++}}return s},_determineDecryptedColumns:function(t){var e={};if(/DECRYPT\(\*\)/i.test(t))e="*";else for(var o=/DECRYPT\((?:\s*\w*\s*\,?)*\)/gi,i=o.exec(t);i;){var s=new String(RegExp.lastMatch).replace(/DECRYPT\(/i,"");s=(s=s.replace(/\)/,"")).split(/\s*,\s*/),dojo.forEach(s,function(t){/\s*\w* AS (\w*)/i.test(t)&&(t=t.match(/\s*\w* AS (\w*)/i)[1]),e[t]=!0}),i=o.exec(t)}return e},_decryptSingleColumn:function(t,e,o,i,s){dojox.sql._crypto.decrypt(e,o,dojo.hitch(this,function(e){this._finalResultSet[i][t]=e,this._finishedCrypto++,this._finishedCrypto>=this._totalCrypto&&this._finishedSpawningCrypto&&s(this._finalResultSet)}))}}),function(){var t=dojox.sql;dojox.sql=new Function("return dojox.sql._exec(arguments);"),dojo.mixin(dojox.sql,t)}();
//# sourceMappingURL=../sourcemaps/sql/_base.js.map
