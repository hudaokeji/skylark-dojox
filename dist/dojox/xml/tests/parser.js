/**
 * dojox - A version of dojox.js framework that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/dojox/
 * @license MIT
 */
define(["doh","dojo/_base/html","../parser"],function(e,r,t){e.register("dojox.xml.tests.parser",[function(e){var r=t.parse();e.assertTrue(null!==r)},function(e){var r=t.parse("<parentNode><childNode><grandchildNode/></childNode><childNode/></parentNode>","text/xml").firstChild;e.assertTrue(null!==r),e.assertTrue("parentNode"===r.tagName),e.assertTrue(2==r.childNodes.length);var a=r.firstChild;e.assertTrue(null!==a),e.assertTrue("childNode"===a.tagName),e.assertTrue(1==a.childNodes.length);var s=a.nextSibling;e.assertTrue(null!==s),e.assertTrue("childNode"===s.tagName);var l=a.firstChild;e.assertTrue(null!==l),e.assertTrue("grandchildNode"===l.tagName)},function(e){var r=t.parse("","text/xml");e.assertTrue(void 0!==r);var a=r.firstChild;e.assertTrue(null===a)},function(e){var r=t.parse();e.assertTrue(void 0!==r);var a=r.firstChild;e.assertTrue(null===a)},function(e){var a="This is a bunch of child text on the node",s=t.parse("<parentNode>This is a bunch of child text on the node</parentNode>","text/xml"),l=s.firstChild;e.assertTrue(null!==l),e.assertTrue("parentNode"===l.tagName),e.assertTrue(a===t.textContent(l)),r.destroy(l),e.assertTrue(null===s.firstChild)},function(e){var a="This is a bunch of child text on the node",s="This is the new text",l=t.parse("<parentNode>This is a bunch of child text on the node</parentNode>","text/xml"),d=l.firstChild;e.assertTrue(null!==d),e.assertTrue("parentNode"===d.tagName),e.assertTrue(a===t.textContent(d)),t.textContent(d,s),e.assertTrue(s===t.textContent(d)),r.destroy(d),e.assertTrue(null===l.firstChild)},function(e){var r=t.parse("<parentNode><child1/><child2/><child3/></parentNode>","text/xml"),a=t.parse("<parentNode><child4/><child5/><child6/><child7/></parentNode>","text/xml"),s=r.firstChild,l=a.firstChild;e.assertTrue(null!==s),e.assertTrue("parentNode"===s.tagName),e.assertTrue(null!==l),e.assertTrue("parentNode"===l.tagName),t.removeChildren(s);for(var d=[],i=0;i<l.childNodes.length;i++)d.push(l.childNodes[i]);t.removeChildren(l),t.replaceChildren(s,d),e.assertEqual(4,s.childNodes.length),e.assertEqual("child4",s.firstChild.tagName),e.assertEqual("child7",s.lastChild.tagName)},function(e){var r=t.parse("<parentNode><child1/><child2/><child3/></parentNode>","text/xml"),a=t.parse("<parentNode><child4/></parentNode>","text/xml"),s=r.firstChild,l=a.firstChild;e.assertTrue(null!==s),e.assertTrue("parentNode"===s.tagName),e.assertTrue(null!==l),e.assertTrue("parentNode"===l.tagName),t.removeChildren(s);var d=l.firstChild;t.removeChildren(l),t.replaceChildren(s,d),e.assertTrue(1===s.childNodes.length),e.assertTrue("child4"===s.firstChild.tagName),e.assertTrue("child4"===s.lastChild.tagName)},function(e){var r=t.parse("<parentNode><child1/><child2/><child3/></parentNode>","text/xml").firstChild;e.assertTrue(null!==r),e.assertTrue("parentNode"===r.tagName),t.removeChildren(r),e.assertTrue(0===r.childNodes.length),e.assertTrue(null===r.firstChild)},function(e){var r="<parentNode><child1/><child2/><child3/></parentNode>",a=t.parse(r,"text/xml").firstChild;e.assertTrue(null!==a),e.assertTrue("parentNode"===a.tagName);var s=t.innerXML(a);e.assertTrue(r===s)}])});
//# sourceMappingURL=../../sourcemaps/xml/tests/parser.js.map
