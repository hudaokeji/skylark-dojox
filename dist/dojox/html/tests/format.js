/**
 * dojox - A version of dojox.js framework that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/dojox/
 * @license MIT
 */
dojo.provide("dojox.html.tests.format"),dojo.require("dojox.html.format"),doh.register("dojox.html.tests.format",[{name:"Format:  Basic HTML Format test",runTest:function(t){var e=dojox.html.format.prettyPrint("<div><b>hello</b> this is some text.</div>");doh.assertEqual("<div>\n\t<b>hello</b> this is some text.\n</div>\n",e)}},{name:"Format:  Basic HTML Format test with three space indent",runTest:function(t){var e=dojox.html.format.prettyPrint("<div><b>hello</b> this is some text.</div>",3);doh.assertEqual("<div>\n   <b>hello</b> this is some text.\n</div>\n",e)}},{name:"Format:  Basic HTML Format test with three space indent and custom encoding",runTest:function(t){var e=dojox.html.format.prettyPrint('<div><b>hello</b> this is "some" entities & text.</div>',3,-1,[["&","amp"]]);doh.assertEqual('<div>\n   <b>hello</b> this is "some" entities &amp; text.\n</div>\n',e)}},{name:"Format:  Basic HTML Format test with comment node",runTest:function(t){if(!dojo.isIE){var e=dojox.html.format.prettyPrint("<div>\x3c!-- This is a comment! --\x3e<br></div>",3);doh.assertEqual("<div>\n   \x3c!--\n      This is a comment!\n   --\x3e\n   <br>\n</div>\n",e)}}},{name:"Format:  Basic HTML Format test with inline tags",runTest:function(t){var e=dojox.html.format.prettyPrint('<div><b>hello</b> <a href="http://example.com/">Example.com</a> this is some text after the link.</div>',3);doh.assertEqual('<div>\n   <b>hello</b> <a href="http://example.com/">Example.com</a> this is some text after the link.\n</div>\n',e)}},{name:"Format:  Basic HTML Format test with inline tags (2)",runTest:function(t){var e=dojox.html.format.prettyPrint('<div><b>hello</b> <br> <a href="http://example.com/">Example.com</a> this is some text after the link.</div>',3);doh.assertEqual('<div>\n   <b>hello</b>\n   <br>\n   <a href="http://example.com/">Example.com</a> this is some text after the link.\n</div>\n',e)}},{name:"Format:  Basic HTML Format test with id",runTest:function(t){var e=dojox.html.format.prettyPrint('<div id="myID"><b>hello</b> this is some text.</div>');doh.assertEqual('<div id="myID">\n\t<b>hello</b> this is some text.\n</div>\n',e)}},{name:"Format:  Basic HTML Format test with attributes (sorting attributes)",runTest:function(t){var e=dojox.html.format.prettyPrint('<div id="myID" style="font-weight: bold; font-style: italic;" foo="bar"><b>hello</b> this is some text.</div>');doh.assertEqual('<div foo="bar" id="myID" style="font-style: italic; font-weight: bold;">\n\t<b>hello</b> this is some text.\n</div>\n',e)}},{name:"Format:  Basic HTML Format test with attributes (multiple unquoted)",runTest:function(t){var e=dojox.html.format.prettyPrint('<p><font id="myID" size="6"><b>hello</b> this is some text.</font></p>');doh.assertEqual('<p>\n\t<font id="myID" size="6"><b>hello</b> this is some text.</font>\n</p>\n',e)}},{name:"Format:  Basic HTML Format test with style",runTest:function(t){var e=dojox.html.format.prettyPrint('<div style="font-weight: bold;"><b>hello</b> this is some text.</div>');doh.assertEqual('<div style="font-weight: bold;">\n\t<b>hello</b> this is some text.\n</div>\n',e)}},{name:"Format:  Basic HTML Format test with multi style",runTest:function(t){var e=dojox.html.format.prettyPrint('<div style="font-weight: bold; color: red"><b>hello</b> this is some text.</div>');doh.assertEqual('<div style="color: red; font-weight: bold;">\n\t<b>hello</b> this is some text.\n</div>\n',e)}},{name:"Format:  Basic HTML Format with script test",runTest:function(t){var e=dojox.html.format.prettyPrint('<div><div>hello</div>this is some text.<script>var foo="bar";\nif(foo !== "bar"){\n alert("Should not be here!");\n}<\/script></div>');doh.assertEqual(dojo.trim('<div>\n\t<div>\n\t\thello\n\t</div>\n\tthis is some text.\n\t<script>\n\t\tvar foo="bar";\n\t\tif(foo !== "bar"){\n\t\t\talert("Should not be here!");\n\t\t}\n\t<\/script>\n</div>\n'),dojo.trim(e))}},{name:"Format:  Basic HTML Format with script test and three space indent",runTest:function(t){var e=dojox.html.format.prettyPrint('<div><div>hello</div>this is some text.<script>var foo="bar";\nif(foo !== "bar"){\n alert("Should not be here!");\n}<\/script></div>',3);doh.assertEqual('<div>\n   <div>\n      hello\n   </div>\n   this is some text.\n   <script>\n      var foo="bar";\n      if(foo !== "bar"){\n         alert("Should not be here!");\n      }\n   <\/script>\n</div>\n',e)}},{name:"Format:  Basic HTML Format with script test and three space indent, XHTML",runTest:function(t){var e=dojox.html.format.prettyPrint('<div><div>hello<br><hr></div>this is some text.<script>var foo="bar";\nif(foo !== "bar"){\n alert("Should not be here!");\n}<\/script></div>',3,-1,null,!0);doh.assertEqual('<div>\n   <div>\n      hello\n      <br />\n      <hr />\n   </div>\n   this is some text.\n   <script>\n      var foo="bar";\n      if(foo !== "bar"){\n         alert("Should not be here!");\n      }\n   <\/script>\n</div>\n',e)}},{name:"Format:  Basic HTML Format with &lt;pre&gt; tag",runTest:function(t){if(!dojo.isIE){var e=dojox.html.format.prettyPrint("<div><pre>hello\nthis is    spaced\nWhee!\n</pre></div>");doh.assertEqual("<div>\n\t<pre>\nhello\nthis is    spaced\nWhee!\n\t</pre>\n</div>\n",e)}}},{name:"Format:  Basic HTML Format with &lt;pre&gt; tag and three space indent",runTest:function(t){if(!dojo.isIE){var e=dojox.html.format.prettyPrint("<div><pre>hello\nthis is    spaced\nWhee!\n</pre></div>",3);doh.assertEqual("<div>\n   <pre>\nhello\nthis is    spaced\nWhee!\n   </pre>\n</div>\n",e)}}},{name:"Format:  Semi-complex HTML format",timeout:1e4,runTest:function(t){if(!dojo.isIE){var e=new doh.Deferred,o={url:dojo.moduleUrl("dojox.html.tests","unformatted.html").toString(),handleAs:"text",preventCache:!0},i=dojo.xhrGet(o);return i.addCallback(function(t){t=dojox.html.format.prettyPrint(t,3);var o={url:dojo.moduleUrl("dojox.html.tests","formatted.html").toString(),preventCache:!0,handleAs:"text"},i=dojo.xhrGet(o);i.addCallback(function(o){try{doh.assertEqual(o,t),e.callback(!0)}catch(t){e.errback(t)}}),i.addErrback(function(t){e.errback(t)})}),i.addErrback(function(t){console.log("Boom!"),e.errback(t)}),e}return null}}]);
//# sourceMappingURL=../../sourcemaps/html/tests/format.js.map
