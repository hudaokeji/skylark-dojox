/**
 * dojox - A version of dojox.js framework that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/dojox/
 * @license MIT
 */
if(dojo.provide("dojox.wire.tests.programmatic.Wire"),dojo.require("dojox.wire.Wire"),dojo.declare("dojox.wire.tests.programmatic.Wire.Converter",null,{convert:function(e){return e+1}}),dojo.isBrowser)window.__wireTestConverterFunction=function(e){return e+1};else var __wireTestConverterFunction=function(e){return e+1};tests.register("dojox.wire.tests.programmatic.Wire",[function(e){var r={a:"A",b:{c:"B.C"}},t={a:"a",b:{c:"b.c"}},o=new dojox.wire.Wire({object:r,property:"a"}).getValue();new dojox.wire.Wire({object:t,property:"a"}).setValue(o),e.assertEqual(r.a,t.a),o=new dojox.wire.Wire({object:r,property:"b.c"}).getValue(),new dojox.wire.Wire({object:t,property:"b.c"}).setValue(o),e.assertEqual(r.b.c,t.b.c),t={},o=new dojox.wire.Wire({object:r,property:"a"}).getValue(),new dojox.wire.Wire({object:t,property:"a"}).setValue(o),e.assertEqual(r.a,t.a),t.b={},o=new dojox.wire.Wire({object:r,property:"b.c"}).getValue(),new dojox.wire.Wire({object:t,property:"b.c"}).setValue(o),e.assertEqual(r.b.c,t.b.c),t={},o=new dojox.wire.Wire({object:r,property:"b.c"}).getValue(),new dojox.wire.Wire({object:t,property:"b.c"}).setValue(o),e.assertEqual(r.b.c,t.b.c),r={a:["A"]},t={},o=new dojox.wire.Wire({object:r,property:"a[0]"}).getValue(),new dojox.wire.Wire({object:t,property:"a[0]"}).setValue(o),e.assertEqual(r.a[0],t.a[0]),r={getA:function(){return this._a},_a:"A"},t={setA:function(e){this._a=e}},o=new dojox.wire.Wire({object:r,property:"a"}).getValue(),new dojox.wire.Wire({object:t,property:"a"}).setValue(o),e.assertEqual(r._a,t._a),r={getPropertyValue:function(e){return this["_"+e]},_a:"A"},t={setPropertyValue:function(e,r){this["_"+e]=r}},o=new dojox.wire.Wire({object:r,property:"a"}).getValue(),new dojox.wire.Wire({object:t,property:"a"}).setValue(o),e.assertEqual(r._a,t._a)},function(e){var r={a:"1"},t=new dojox.wire.Wire({object:r,property:"a"}).getValue();e.assertEqual("11",t+1);var o=new dojox.wire.Wire({object:r,property:"a",type:"number"}).getValue();e.assertEqual(2,o+1)},function(e){var r=new dojox.wire.Wire({object:{a:"1"},property:"a",converter:{convert:function(e){return e+1}}}).getValue();e.assertEqual("11",r)},function(e){var r=new dojox.wire.Wire({object:{a:"1"},property:"a",type:"number",converter:function(e){return e+1}}).getValue();e.assertEqual(2,r)},function(e){var r=new dojox.wire.Wire({object:{a:"1"},property:"a",type:"number",converter:"dojox.wire.tests.programmatic.Wire.Converter"}).getValue();e.assertEqual(2,r)},function(e){var r=new dojox.wire.Wire({object:{a:"1"},property:"a",type:"number",converter:"__wireTestConverterFunction"}).getValue();e.assertEqual(2,r)},function(e){var r=new dojox.wire.Wire({object:{a:"1"},property:"a",type:"number",converter:"dojox.wire.tests.programmatic.ConverterDynamic"}).getValue();e.assertEqual(2,r)}]);
//# sourceMappingURL=../../../sourcemaps/wire/tests/programmatic/Wire.js.map
