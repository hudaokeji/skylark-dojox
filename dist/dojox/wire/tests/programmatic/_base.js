/**
 * dojox - A version of dojox.js framework that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/dojox/
 * @license MIT
 */
dojo.provide("dojox.wire.tests.programmatic._base"),dojo.require("dojox.wire._base"),tests.register("dojox.wire.tests.programmatic._base",[function(e){var r=dojox.wire.create({});e.assertTrue(r instanceof dojox.wire.Wire),r=dojox.wire.create({property:"a"}),e.assertTrue(r instanceof dojox.wire.Wire),r=dojox.wire.create({attribute:"a"}),e.assertTrue(r instanceof dojox.wire.DataWire),r=dojox.wire.create({path:"a"}),e.assertTrue(r instanceof dojox.wire.XmlWire),r=dojox.wire.create({children:"a"}),e.assertTrue(r instanceof dojox.wire.CompositeWire),r=dojox.wire.create({columns:"a"}),e.assertTrue(r instanceof dojox.wire.TableAdapter),r=dojox.wire.create({nodes:"a"}),e.assertTrue(r instanceof dojox.wire.TreeAdapter),r=dojox.wire.create({segments:"a"}),e.assertTrue(r instanceof dojox.wire.TextAdapter),r=dojox.wire.create({wireClass:"dojox.wire.DataWire"}),e.assertTrue(r instanceof dojox.wire.DataWire)},function(e){var r={a:"A"},o={};dojox.wire.transfer({object:r,property:"a"},{object:o,property:"a"}),e.assertEqual(r.a,o.a)},function(e){var r={transfer:function(){},transferArgument:function(){}},o={a:"A"},t={};dojox.wire.connect({scope:r,event:"transfer"},{object:o,property:"a"},{object:t,property:"a"}),r.transfer(),e.assertEqual(o.a,t.a),t={},dojox.wire.connect({scope:r,event:"transferArgument"},{property:"[0].a"},{object:t,property:"a"}),r.transferArgument(o),e.assertEqual(o.a,t.a),t={},dojox.wire.connect({topic:"transfer"},{object:o,property:"a"},{object:t,property:"a"}),dojo.publish("transfer"),e.assertEqual(o.a,t.a),t={},dojox.wire.connect({topic:"transferArgument"},{property:"[0].a"},{object:t,property:"a"}),dojo.publish("transferArgument",[o]),e.assertEqual(o.a,t.a)},function(e){var r={transferDisconnect:function(){}},o={a:"A"},t={},a=dojox.wire.connect({scope:r,event:"transferDisconnect"},{object:o,property:"a"},{object:t,property:"a"});r.transferDisconnect(),e.assertEqual(o.a,t.a),delete t.a,dojox.wire.disconnect(a),r.transferDisconnect(),e.assertEqual(void 0,t.a),t={},a=dojox.wire.connect({topic:"transferDisconnect"},{object:o,property:"a"},{object:t,property:"a"}),dojo.publish("transferDisconnect"),e.assertEqual(o.a,t.a),delete t.a,dojox.wire.disconnect(a),dojo.publish("transferDisconnect"),e.assertEqual(void 0,t.a)}]);
//# sourceMappingURL=../../../sourcemaps/wire/tests/programmatic/_base.js.map
