{"version":3,"sources":["io/windowName.js"],"names":["define","dojo","getObject","dojox","io","windowName","send","method","args","url","match","authElement","cleanup","result","innerDoc","dfd","ioArgs","frame","contentWindow","document","write","close","e","body","removeChild","outerFrame","_ioSetArgs","timeout","setTimeout","fired","callback","Error","_send","onAuthLoad","authTarget","frameNum","_frameNum","sameDomainUrl","config","dojoBlankHtmlUrl","dojoCallbackUrl","moduleUrl","frameName","_Url","window","location","doc","frameContainer","styleFrame","style","width","height","border","isMoz","reduce","createElement","display","appendChild","firstWindow","secondWindow","__defineGetter__","isIE","div","innerHTML","firstChild","state","onload","data","name","hash","_ioAddQueryToUrl","src","replace","form","query","queryToObject","i","values","Array","j","length","input","type","value","action","target","submit","parentNode"],"mappings":"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","file":"../../io/windowName.js","sourcesContent":["define([\"dojo/_base/kernel\", \"dojo/_base/window\", \"dojo/_base/xhr\", \"dojo/_base/sniff\", \"dojo/_base/url\", \"dojo/domReady!\"], function(dojo){\r\ndojo.getObject(\"io.windowName\", true, dojox);\r\n// Implements the window.name transport\r\n\r\ndojox.io.windowName = {\r\n\tsend: function(/*String*/ method, /*dojo.__IoArgs*/ args){\r\n\t\t// summary:\r\n\t\t//\t\tProvides secure cross-domain request capability.\r\n\t\t//\t\tSends a request using an iframe (POST or GET) and reads the response through the\r\n\t\t//\t\tframe's window.name.\r\n\t\t//\r\n\t\t// method:\r\n\t\t//\t\tThe method to use to send the request, GET or POST\r\n\t\t//\r\n\t\t// args:\r\n\t\t//\t\tSee dojo.xhr\r\n\t\t//\r\n\t\t//\t\t####args.authElement: DOMNode?\r\n\t\t//\r\n\t\t//\t\tBy providing an authElement, this indicates that windowName should use the\r\n\t\t//\t\tauthorized window.name protocol, relying on\r\n\t\t//\t\tthe loaded XD resource to return to the provided return URL on completion\r\n\t\t//\t\tof authorization/authentication. The provided authElement will be used to place\r\n\t\t//\t\tthe iframe in, so the user can interact with the server resource for authentication\r\n\t\t//\t\tand/or authorization to access the resource.\r\n\t\t//\r\n\t\t//\t\t####args.onAuthLoad: Function?\r\n\t\t//\r\n\t\t//\t\tWhen using authorized access to resources, this function will be called when the\r\n\t\t//\t\tauthorization page has been loaded. (When authorization is actually completed,\r\n\t\t//\t\tthe deferred callback function is called with the result). The primary use for this\r\n\t\t//\t\tis to make the authElement visible to the user once the resource has loaded\r\n\t\t//\t\t(this can be preferable to showing the iframe while the resource is loading\r\n\t\t//\t\tsince it may not require authorization, it may simply return the resource).\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tIn order to provide a windowname transport accessible resources/web services, a server\r\n\t\t//\t\tshould check for the presence of a parameter window.name=true and if a request includes\r\n\t\t//\t\tsuch a parameter, it should respond to the request with an HTML\r\n\t\t//\t\tdocument that sets it's window.name to the string that is to be\r\n\t\t//\t\tdelivered to the client. For example, if a client makes a window.name request like:\r\n\t\t// \t|\thttp://othersite.com/greeting?windowname=true\r\n\t\t//\t\tAnd server wants to respond to the client with \"Hello\", it should return an html page:\r\n\t\t//\t|\t<html><script type=\"text/javascript\">\r\n\t\t//\t|\twindow.name=\"Hello\";\r\n\t\t//\t|\t</script></html>\r\n\t\t//\t\tOne can provide XML or JSON data by simply quoting the data as a string, and parsing the data\r\n\t\t//\t\ton the client.\r\n\t\t//\t\tIf you use the authorization window.name protocol, the requester should include an\r\n\t\t//\t\tauthElement element in the args, and a request will be created like:\r\n\t\t// \t|\thttp://othersite.com/greeting?windowname=auth\r\n\t\t//\t\tAnd the server can respond like this:\r\n\t\t//\t|\t<html><script type=\"text/javascript\">\r\n\t\t//\t|\tvar loc = window.name;\r\n\t\t//\t|\tauthorizationButton.onclick = function(){\r\n\t\t//\t|\t\twindow.name=\"Hello\";\r\n\t\t//\t|\t\tlocation = loc;\r\n\t\t//\t|\t};\r\n\t\t//\t|\t</script></html>\r\n\t\t//\t\tWhen using windowName from a XD Dojo build, make sure to set the\r\n\t\t//\t\tdojo.dojoBlankHtmlUrl property to a local URL.\r\n\t\targs.url += (args.url.match(/\\?/) ? '&' : '?') + \"windowname=\" + (args.authElement ? \"auth\" : true); // indicate our desire for window.name communication\r\n\t\tvar authElement = args.authElement;\r\n\t\tvar cleanup = function(result){\r\n\t\t\ttry{\r\n\t\t\t\t// we have to do this to stop the wait cursor in FF\r\n\t\t\t\tvar innerDoc = dfd.ioArgs.frame.contentWindow.document;\r\n\t\t\t\tinnerDoc.write(\" \");\r\n\t\t\t\tinnerDoc.close();\r\n\t\t\t}catch(e){}\r\n\t\t\t(authElement || dojo.body()).removeChild(dfd.ioArgs.outerFrame); // clean up\r\n\t\t\treturn result;\r\n\t\t};\r\n\t\tvar dfd = dojo._ioSetArgs(args,cleanup,cleanup,cleanup);\r\n\t\tif(args.timeout){\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\t\tif(dfd.fired == -1){\r\n\t\t\t\t\t\tdfd.callback(new Error(\"Timeout\"));\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\targs.timeout\r\n\t\t\t);\r\n\t\t}\r\n\t\tdojox.io.windowName._send(dfd, method, authElement, args.onAuthLoad);\r\n\t\treturn dfd;\r\n\t},\r\n\t_send: function(dfd, method, authTarget, onAuthLoad){\r\n\r\n\t\tvar ioArgs = dfd.ioArgs;\r\n\t\tvar frameNum = dojox.io.windowName._frameNum++;\r\n\t\tvar sameDomainUrl = (dojo.config.dojoBlankHtmlUrl||dojo.config.dojoCallbackUrl||dojo.moduleUrl(\"dojo\", \"resources/blank.html\")) + \"#\" + frameNum;\r\n\t\tvar frameName = new dojo._Url(window.location, sameDomainUrl);\r\n\t\tvar doc = dojo.doc;\r\n\t\tvar frameContainer = authTarget || dojo.body();\r\n\t\tfunction styleFrame(frame){\r\n\t\t\tframe.style.width=\"100%\";\r\n\t\t\tframe.style.height=\"100%\";\r\n\t\t\tframe.style.border=\"0px\";\r\n\t\t}\r\n\t\tif(dojo.isMoz && ![].reduce){\r\n\t\t\t// FF2 allows unsafe sibling frame modification,\r\n\t\t\t// the fix for this is to create nested frames with getters and setters to protect access\r\n\t\t\tvar outerFrame = doc.createElement(\"iframe\");\r\n\t\t\tstyleFrame(outerFrame);\r\n\t\t\tif(!authTarget){\r\n\t\t\t\touterFrame.style.display='none';\r\n\t\t\t}\r\n\t\t\tframeContainer.appendChild(outerFrame);\r\n\r\n\t\t\tvar firstWindow = outerFrame.contentWindow;\r\n\t\t\tdoc = firstWindow.document;\r\n\t\t\tdoc.write(\"<html><body margin='0px'><iframe style='width:100%;height:100%;border:0px' name='protectedFrame'></iframe></body></html>\");\r\n\t\t\tdoc.close();\r\n\t\t\tvar secondWindow = firstWindow[0];\r\n\t\t\tfirstWindow.__defineGetter__(0,function(){});\r\n\t\t\tfirstWindow.__defineGetter__(\"protectedFrame\",function(){});\r\n\t\t\tdoc = secondWindow.document;\r\n\t\t\tdoc.write(\"<html><body margin='0px'></body></html>\");\r\n\t\t\tdoc.close();\r\n\t\t\tframeContainer = doc.body;\r\n\t\t}\r\n\t\tvar frame;\r\n\t\tif(dojo.isIE){\r\n\t\t\tvar div = doc.createElement(\"div\");\r\n\t\t\tdiv.innerHTML = '<iframe name=\"' + frameName + '\" onload=\"dojox.io.windowName['+frameNum+']()\">';\r\n\t\t\tframe = div.firstChild;\r\n\t\t}else{\r\n\t\t\tframe = doc.createElement('iframe');\r\n\t\t}\r\n\t\tioArgs.frame = frame;\r\n\t\tstyleFrame(frame);\r\n\t\tioArgs.outerFrame = outerFrame = outerFrame || frame;\r\n\t\tif(!authTarget){\r\n\t\t\touterFrame.style.display='none';\r\n\t\t}\r\n\t\tvar state = 0;\r\n\t\tfunction getData(){\r\n\t\t\tvar data = frame.contentWindow.name;\r\n\t\t\tif(typeof data == 'string'){\r\n\t\t\t\tif(data != frameName){\r\n\t\t\t\t\tstate = 2; // we are done now\r\n\t\t\t\t\tdfd.ioArgs.hash = frame.contentWindow.location.hash;\r\n\t\t\t\t\tdfd.callback(data);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tdojox.io.windowName[frameNum] = frame.onload = function(){\r\n\t\t\ttry{\r\n\t\t\t\tif(!dojo.isMoz && frame.contentWindow.location =='about:blank'){\r\n\t\t\t\t\t// opera and safari will do an onload for about:blank first, we can ignore this first onload\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}catch(e){\r\n\t\t\t\t// if we are in the target domain, frame.contentWindow.location will throw an ignorable error\r\n\t\t\t}\r\n\t\t\tif(!state){\r\n\t\t\t\t// we have loaded the target resource, now time to navigate back to our domain so we can read the frame name\r\n\t\t\t\tstate=1;\r\n\t\t\t\tif(authTarget){\r\n\t\t\t\t\t// call the callback so it can make it visible\r\n\t\t\t\t\tif(onAuthLoad){\r\n\t\t\t\t\t\tonAuthLoad();\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// we are doing a synchronous capture, go directly to our same domain URL and retrieve the resource\r\n\t\t\t\t\tframe.contentWindow.location = sameDomainUrl;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// back to our domain, we should be able to access the frame name now\r\n\t\t\ttry{\r\n\t\t\t\tif(state<2){\r\n\t\t\t\t\tgetData();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch(e){\r\n\t\t\t}\r\n\r\n\t\t};\r\n\t\tframe.name = frameName;\r\n\t\tif(method.match(/GET/i)){\r\n\t\t\t// if it is a GET we can just the iframe our src url\r\n\t\t\tdojo._ioAddQueryToUrl(ioArgs);\r\n\t\t\tframe.src = ioArgs.url;\r\n\t\t\tframeContainer.appendChild(frame);\r\n\t\t\tif(frame.contentWindow){\r\n\t\t\t\tframe.contentWindow.location.replace(ioArgs.url);\r\n\t\t\t}\r\n\t\t}else if(method.match(/POST/i)){\r\n\t\t\t// if it is a POST we will build a form to post it\r\n\t\t\tframeContainer.appendChild(frame);\r\n\t\t\tvar form = dojo.doc.createElement(\"form\");\r\n\t\t\tdojo.body().appendChild(form);\r\n\t\t\tvar query = dojo.queryToObject(ioArgs.query);\r\n\t\t\tfor(var i in query){\r\n\t\t\t\tvar values = query[i];\r\n\t\t\t\tvalues = values instanceof Array ? values : [values];\r\n\t\t\t\tfor(var j = 0; j < values.length; j++){\r\n\t\t\t\t\t// create hidden inputs for all the parameters\r\n\t\t\t\t\tvar input = doc.createElement(\"input\");\r\n\t\t\t\t\tinput.type = 'hidden';\r\n\t\t\t\t\tinput.name = i;\r\n\t\t\t\t\tinput.value = values[j];\r\n\t\t\t\t\tform.appendChild(input);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tform.method = 'POST';\r\n\t\t\tform.action = ioArgs.url;\r\n\t\t\tform.target = frameName;// connect the form to the iframe\r\n\r\n\t\t\tform.submit();\r\n\t\t\tform.parentNode.removeChild(form);\r\n\t\t}else{\r\n\t\t\tthrow new Error(\"Method \" + method + \" not supported with the windowName transport\");\r\n\t\t}\r\n\t\tif(frame.contentWindow){\r\n\t\t\tframe.contentWindow.name = frameName; // IE likes it afterwards\r\n\t\t}\r\n\t},\r\n\t_frameNum: 0\r\n\r\n};\r\n\r\nreturn dojox.io.windowName;\r\n\r\n});\r\n"]}