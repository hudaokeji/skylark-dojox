{"version":3,"sources":["image/Magnifier.js"],"names":["define","declare","construct","window","gfx","canvas","MagnifierLite","_createGlass","this","glassNode","create","style","height","glassSize","width","className","body","surfaceNode","switchTo","surface","createSurface","img","createImage","src","domNode","_zoomSize","w","h","_placeGlass","e","x","pageX","y","pageY","xMax","offset","yMax","_hideGlass","inherited","arguments","_setImage","xOff","yOff","setShape"],"mappings":";;;;;;;AAAAA,QAAQ,qBAAsB,qBAAsB,oBAAqB,YAAa,mBAAoB,mBAAoB,SAASC,EAASC,EAAWC,EAAQC,EAAKC,EAAQC,GAE/K,OAAOL,EAAQ,wBAAyBK,GAavCC,aAAc,WAMbC,KAAKC,UAAYP,EAAUQ,OAAO,OACjCC,OACCC,OAAQJ,KAAKK,UAAY,KACzBC,MAAON,KAAKK,UAAY,MAEzBE,UAAW,aACTZ,EAAOa,QACVR,KAAKS,YAAcf,EAAUQ,OAAO,MAAO,KAAMF,KAAKC,WAEtDL,EAAIc,SAAS,UACbV,KAAKW,QAAUd,EAAOe,cAAcZ,KAAKS,YAAaT,KAAKK,UAAWL,KAAKK,WAC3EL,KAAKa,IAAMb,KAAKW,QAAQG,aACrBC,IAAKf,KAAKgB,QAAQD,IAClBT,MAAON,KAAKiB,UAAUC,EACtBd,OAAQJ,KAAKiB,UAAUE,KAK3BC,YAAa,SAASC,GAGrB,IAAIC,EAAID,EAAEE,MAAQ,EACjBC,EAAIH,EAAEI,MAAQ,EACdC,EAAO1B,KAAK2B,OAAOL,EAAItB,KAAK2B,OAAOT,EAAI,EACvCU,EAAO5B,KAAK2B,OAAOH,EAAIxB,KAAK2B,OAAOR,EAAI,EAKrCG,EAAItB,KAAK2B,OAAOL,GAAKE,EAAIxB,KAAK2B,OAAOH,GAAKF,EAAII,GAAQF,EAAII,EAC5D5B,KAAK6B,aAEL7B,KAAK8B,UAAUC,YAIjBC,UAAW,SAASX,GAInB,IAAIY,GAAQZ,EAAEE,MAAQvB,KAAK2B,OAAOL,GAAKtB,KAAK2B,OAAOT,EAClDgB,GAAQb,EAAEI,MAAQzB,KAAK2B,OAAOH,GAAKxB,KAAK2B,OAAOR,EAC/CG,EAAKtB,KAAKiB,UAAUC,EAAIe,GAAQ,EAAIjC,KAAKK,UAAU4B,EACnDT,EAAKxB,KAAKiB,UAAUE,EAAIe,GAAQ,EAAIlC,KAAKK,UAAU6B,EAGpDlC,KAAKa,IAAIsB,UAAWb,EAAGA,EAAGE,EAAGA","file":"../../image/Magnifier.js","sourcesContent":["define([\"dojo/_base/declare\", \"dojo/dom-construct\", \"dojo/_base/window\", \"dojox/gfx\", \"dojox/gfx/canvas\", \"./MagnifierLite\"], function(declare, construct, window, gfx, canvas, MagnifierLite){\r\n\t\r\n\treturn declare(\"dojox.image.Magnifier\", MagnifierLite, {\r\n\t\t// summary:\r\n\t\t//\t\tAdds magnification on a portion of an image element, using `dojox.gfx`\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tAn unobtrusive way to add an unstyled overlay\r\n\t\t//\t\tabove the srcNode image element. The overlay/glass is a\r\n\t\t//\t\tscaled version of the src image (so larger images sized down\r\n\t\t//\t\tare clearer).\r\n\t\t//\r\n\t\t//\t\tover-ride the _createGlass method to create your custom surface,\r\n\t\t//\t\tbeing sure to create an img node on that surface.\r\n\r\n\t\t_createGlass: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreate the glassNode, and an img on a dojox.gfx surface\r\n\r\n\t\t\t// images are hard to make into workable templates, so just add outer overlay\r\n\t\t\t// and skip using dijit._Templated\r\n\t\t\tthis.glassNode = construct.create('div', {\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\theight: this.glassSize + \"px\",\r\n\t\t\t\t\twidth: this.glassSize + \"px\"\r\n\t\t\t\t},\r\n\t\t\t\tclassName: \"glassNode\"\r\n\t\t\t}, window.body());\r\n\t\t\tthis.surfaceNode = construct.create('div', null, this.glassNode);\r\n\r\n\t\t\tgfx.switchTo('canvas');\r\n\t\t\tthis.surface = canvas.createSurface(this.surfaceNode, this.glassSize, this.glassSize);\r\n\t\t\tthis.img = this.surface.createImage({\r\n\t\t\t   src: this.domNode.src,\r\n\t\t\t   width: this._zoomSize.w,\r\n\t\t\t   height: this._zoomSize.h\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t_placeGlass: function(e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tposition the overlay centered under the cursor\r\n\t\t\tvar x = e.pageX - 2,\r\n\t\t\t\ty = e.pageY - 2,\r\n\t\t\t\txMax = this.offset.x + this.offset.w + 2,\r\n\t\t\t\tyMax = this.offset.y + this.offset.h + 2\r\n\t\t\t;\r\n\r\n\t\t\t// with svg, our mouseout connection to the image surface doesn't\r\n\t\t\t// fire, so we'r have to manually calculate offsets\r\n\t\t\tif(x < this.offset.x || y < this.offset.y || x > xMax || y > yMax){\r\n\t\t\t\tthis._hideGlass();\r\n\t\t\t}else{\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setImage: function(e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tset the image's offset in the clipping window relative to the mouse position\r\n\r\n\t\t\tvar xOff = (e.pageX - this.offset.x) / this.offset.w,\r\n\t\t\t\tyOff = (e.pageY - this.offset.y) / this.offset.h,\r\n\t\t\t\tx = (this._zoomSize.w * xOff * -1)+(this.glassSize*xOff),\r\n\t\t\t\ty = (this._zoomSize.h * yOff * -1)+(this.glassSize*yOff)\r\n\t\t\t;\r\n\t\t\t// set the image offset\r\n\t\t\tthis.img.setShape({ x: x, y: y });\r\n\r\n\t\t}\r\n\t});\t\r\n});"]}