{"version":3,"sources":["image/FlickrBadge.js"],"names":["define","dojo","dojox","getObject","declare","image","Badge","children","userid","username","setid","tags","searchText","target","apikey","_store","postCreate","this","io","script","get","url","preventCache","content","format","method","api_key","callbackParamName","addCallback","data","user","nsid","_started","startup","query","text","args","arguments","FlickrRestStore","fetch","count","cols","rows","onComplete","hitch","items","forEach","item","a","doc","createElement","addClass","href","getValue","img","src","style","width","height","appendChild","domNode","prototype","call"],"mappings":";;;;;;;AAAAA,QAAQ,OAAQ,aAAc,oBAAqB,8BAA+B,SAASC,EAAMC,GAGhG,OADAD,EAAKE,UAAU,SAAS,EAAMD,GACvBD,EAAKG,QAAQ,0BAA2BF,EAAMG,MAAMC,OAC1DC,SAAU,gBAIVC,OAAQ,GAIRC,SAAU,GAIVC,MAAO,GAIPC,KAAM,GAINC,WAAY,GAKZC,OAAQ,GAERC,OAAQ,mCACRC,OAAQ,KAERC,WAAY,WACRC,KAAKR,WAAaQ,KAAKT,QACfP,EAAKiB,GAAGC,OAAOC,KACxBC,IAAK,uCACLC,cAAc,EACdC,SACCC,OAAQ,OACRC,OAAQ,+BACRC,QAAST,KAAKH,OACdL,SAAUQ,KAAKR,UAEhBkB,kBAAmB,iBAEhBC,YAAYX,KAAM,SAASY,GAC3BA,EAAKC,MAAQD,EAAKC,KAAKC,OACzBd,KAAKT,OAASqB,EAAKC,KAAKC,KACpBd,KAAKe,UACRf,KAAKgB,cAOVA,QAAS,WACR,IAAGhB,KAAKe,UACLf,KAAKT,OAAO,CACd,IAAI0B,GACH1B,OAAQS,KAAKT,QAEXS,KAAKP,QACPwB,EAAa,MAAIjB,KAAKP,OAEpBO,KAAKN,OACPuB,EAAMvB,KAAOM,KAAKN,MAEhBM,KAAKL,aACPsB,EAAMC,KAAOlB,KAAKL,YAEnB,IAAIwB,EAAOC,UACXpB,KAAKF,OAAS,IAAIb,EAAM2B,KAAKS,iBAAkBxB,OAAQG,KAAKH,SAC5DG,KAAKF,OAAOwB,OACXC,MAAOvB,KAAKwB,KAAOxB,KAAKyB,KACxBR,MAAOA,EACPS,WAAY1C,EAAK2C,MAAM3B,KAAM,SAAS4B,GACrC5C,EAAK6C,QAAQD,EAAO,SAASE,GAC5B,IAAIC,EAAI/C,EAAKgD,IAAIC,cAAc,KAC/BjD,EAAKkD,SAASH,EAAG,eACjBA,EAAEI,KAAOnC,KAAKF,OAAOsC,SAASN,EAAM,QACjC9B,KAAKJ,SACPmC,EAAEnC,OAASI,KAAKJ,QAGjB,IAAIyC,EAAMrD,EAAKgD,IAAIC,cAAc,OACjCI,EAAIC,IAAMtC,KAAKF,OAAOsC,SAASN,EAAM,iBACrC9C,EAAKuD,MAAMF,GACVG,MAAO,OACPC,OAAQ,SAGTV,EAAEW,YAAYL,GACdrC,KAAK2C,QAAQD,YAAYX,IACvB/B,MACHf,EAAMG,MAAMC,MAAMuD,UAAU5B,QAAQ6B,KAAK7C,KAAMmB","file":"../../image/FlickrBadge.js","sourcesContent":["define([\"dojo\", \"dojox/main\", \"dojox/image/Badge\", \"dojox/data/FlickrRestStore\"], function(dojo, dojox){\r\n\t\r\n\tdojo.getObject(\"image\", true, dojox);\r\n\treturn dojo.declare(\"dojox.image.FlickrBadge\", dojox.image.Badge, {\r\n\t\tchildren: \"a.flickrImage\",\r\n\r\n\t\t// userid: String\r\n\t\t//\t\tIf you know your Flickr userid, you can set it to prevent a call to fetch the id\r\n\t\tuserid: \"\",\r\n\r\n\t\t// username: String\r\n\t\t//\t\tYour Flickr username\r\n\t\tusername: \"\",\r\n\r\n\t\t// setid: String\r\n\t\t//\t\tThe id of the set to display\r\n\t\tsetid: \"\",\r\n\r\n\t\t// tags: String|Array\r\n\t\t//\t\tA comma separated list of tags or an array of tags to grab from Flickr\r\n\t\ttags: \"\",\r\n\r\n\t\t// searchText: String\r\n\t\t//\t\tFree text search.  Photos who's title, description, or tags contain the text will be displayed\r\n\t\tsearchText: \"\",\r\n\r\n\t\t// target: String\r\n\t\t//\t\tWhere to display the pictures when clicked on.  Valid values are the same as the target attribute\r\n\t\t//\t\tof the A tag.\r\n\t\ttarget: \"\",\r\n\r\n\t\tapikey: \"8c6803164dbc395fb7131c9d54843627\",\r\n\t\t_store: null,\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tif(this.username && !this.userid){\r\n\t\t\t\tvar def = dojo.io.script.get({\r\n\t\t\t\t\turl: \"http://www.flickr.com/services/rest/\",\r\n\t\t\t\t\tpreventCache: true,\r\n\t\t\t\t\tcontent: {\r\n\t\t\t\t\t\tformat: \"json\",\r\n\t\t\t\t\t\tmethod: \"flickr.people.findByUsername\",\r\n\t\t\t\t\t\tapi_key: this.apikey,\r\n\t\t\t\t\t\tusername: this.username\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcallbackParamName: \"jsoncallback\"\r\n\t\t\t\t});\r\n\t\t\t\tdef.addCallback(this, function(data){\r\n\t\t\t\t\tif(data.user && data.user.nsid){\r\n\t\t\t\t\t\tthis.userid = data.user.nsid;\r\n\t\t\t\t\t\tif(!this._started){\r\n\t\t\t\t\t\t\tthis.startup();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\tif(this._started){ return; }\r\n\t\t\tif(this.userid){\r\n\t\t\t\tvar query = {\r\n\t\t\t\t\tuserid: this.userid\r\n\t\t\t\t};\r\n\t\t\t\tif(this.setid){\r\n\t\t\t\t\tquery[\"setid\"] = this.setid;\r\n\t\t\t\t}\r\n\t\t\t\tif(this.tags){\r\n\t\t\t\t\tquery.tags = this.tags;\r\n\t\t\t\t}\r\n\t\t\t\tif(this.searchText){\r\n\t\t\t\t\tquery.text = this.searchText;\r\n\t\t\t\t}\r\n\t\t\t\tvar args = arguments;\r\n\t\t\t\tthis._store = new dojox.data.FlickrRestStore({ apikey: this.apikey });\r\n\t\t\t\tthis._store.fetch({\r\n\t\t\t\t\tcount: this.cols * this.rows,\r\n\t\t\t\t\tquery: query,\r\n\t\t\t\t\tonComplete: dojo.hitch(this, function(items){\r\n\t\t\t\t\t\tdojo.forEach(items, function(item){\r\n\t\t\t\t\t\t\tvar a = dojo.doc.createElement(\"a\");\r\n\t\t\t\t\t\t\tdojo.addClass(a, \"flickrImage\");\r\n\t\t\t\t\t\t\ta.href = this._store.getValue(item, \"link\");\r\n\t\t\t\t\t\t\tif(this.target){\r\n\t\t\t\t\t\t\t\ta.target = this.target;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tvar img = dojo.doc.createElement(\"img\");\r\n\t\t\t\t\t\t\timg.src = this._store.getValue(item, \"imageUrlThumb\");\r\n\t\t\t\t\t\t\tdojo.style(img, {\r\n\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\theight: \"100%\"\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\ta.appendChild(img);\r\n\t\t\t\t\t\t\tthis.domNode.appendChild(a);\r\n\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t\tdojox.image.Badge.prototype.startup.call(this, args);\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n\r\n"]}