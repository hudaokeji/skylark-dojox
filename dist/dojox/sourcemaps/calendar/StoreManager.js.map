{"version":3,"sources":["calendar/StoreManager.js"],"names":["define","declare","arr","html","lang","domClass","Stateful","Evented","when","owner","store","_ownerItemsProperty","_getParentStoreManager","this","get","_initItems","items","set","_itemsSetter","value","emit","_computeVisibleItems","renderData","startTime","endTime","res","filter","item","isOverlapping","_updateItems","object","previousIndex","newIndex","layoutCanChange","oldItem","newItem","itemToRenderItem","_item","splice","setItemSelected","isItemSelected","dispatchChange","cal","dateModule","compare","mixin","i","tempId","temporaryId","length","id","stateObj","_getItemStoreStateObj","_cleanItemStoreState","_setItemStoreState","state","s","renderItem","_isEditing","_storeSetter","r","_observeHandler","remove","results","query","queryOptions","observe","hitch","map","parentManager","_itemStoreState","undefined","getIdentity","getItemStoreState"],"mappings":"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","file":"../../calendar/StoreManager.js","sourcesContent":["define([\"dojo/_base/declare\", \"dojo/_base/array\", \"dojo/_base/html\", \"dojo/_base/lang\", \"dojo/dom-class\",\r\n\t\"dojo/Stateful\", \"dojo/Evented\", \"dojo/when\"],\r\n\tfunction(declare, arr, html, lang, domClass, Stateful, Evented, when){\r\n\r\n\treturn declare(\"dojox.calendar.StoreManager\", [Stateful, Evented], {\r\n\t\t\r\n\t\t// summary:\r\n\t\t//\t\tThis mixin contains the store management.\r\n\t\t\r\n\t\t// owner: Object\r\n\t\t//\tThe owner of the store manager: a view or a calendar widget.\r\n\t\towner: null,\r\n\t\t\r\n\t\t// store: dojo.store.Store\r\n\t\t//\t\tThe store that contains the events to display.\r\n\t\tstore: null,\r\n\t\t\r\n\t\t_ownerItemsProperty: null,\r\n\t\t\r\n\t\t_getParentStoreManager: function(){\r\n\t\t\tif(this.owner && this.owner.owner){\r\n\t\t\t\treturn this.owner.owner.get(\"storeManager\");\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\r\n\t\t_initItems: function(items){\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tthis.set(\"items\", items);\r\n\t\t\treturn items;\r\n\t\t},\r\n\t\t\r\n\t\t_itemsSetter: function(value){\r\n\t\t\tthis.items = value;\r\n\t\t\tthis.emit(\"dataLoaded\", value);\r\n\t\t},\r\n\t\t\r\n\t\t_computeVisibleItems: function(renderData){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tComputes the data items that are in the displayed interval.\r\n\t\t\t// renderData: Object\r\n\t\t\t//\t\tThe renderData that contains the start and end time of the displayed interval.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\t\r\n\t\t\tvar startTime = renderData.startTime;\r\n\t\t\tvar endTime = renderData.endTime;\r\n\t\t\tvar res = null;\r\n\t\t\tvar items = this.owner[this._ownerItemsProperty];\r\n\t\t\tif(items){\r\n\t\t\t\tres = arr.filter(items, function(item){\r\n\t\t\t\t\treturn this.owner.isOverlapping(renderData, item.startTime, item.endTime, startTime, endTime);\r\n\t\t\t\t}, this);\r\n\t\t\t}\r\n\t\t\treturn res;\r\n\t\t},\r\n\t\t\r\n\t\t_updateItems: function(object, previousIndex, newIndex){\r\n\t\t\t// as soon as we add a item or remove one layout might change,\r\n\t\t\t// let's make that the default\r\n\t\t\t// TODO: what about items in non visible area...\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar layoutCanChange = true;\r\n\t\t\tvar oldItem = null;\r\n\t\t\tvar newItem = this.owner.itemToRenderItem(object, this.store);\r\n\t\t\t// keep a reference on the store data item. \r\n\t\t\tnewItem._item = object;\r\n\t\t\t\r\n\t\t\t// get back the items from the owner that can contain the item created interactively.\r\n\t\t\tthis.items = this.owner[this._ownerItemsProperty];\r\n\t\t\t\r\n\t\t\t// set the item as in the store\r\n\t\t\tif(previousIndex!==-1){\r\n\t\t\t\tif(newIndex!==previousIndex){\r\n\t\t\t\t\t// this is a remove or a move\r\n\t\t\t\t\tthis.items.splice(previousIndex, 1);\r\n\t\t\t\t\tif(this.owner.setItemSelected && this.owner.isItemSelected(newItem)){\r\n\t\t\t\t\t\tthis.owner.setItemSelected(newItem, false);\r\n\t\t\t\t\t\tthis.owner.dispatchChange(newItem, this.get(\"selectedItem\"), null, null);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// this is a put, previous and new index identical\r\n\t\t\t\t\t// check what changed\r\n\t\t\t\t\toldItem = this.items[previousIndex];\r\n\t\t\t\t\tvar cal = this.owner.dateModule; \r\n\t\t\t\t\tlayoutCanChange = cal.compare(newItem.startTime, oldItem.startTime) !== 0 ||\r\n\t\t\t\t\t\tcal.compare(newItem.endTime, oldItem.endTime) !== 0;\r\n\t\t\t\t\t// we want to keep the same item object and mixin new values\r\n\t\t\t\t\t// into old object\r\n\t\t\t\t\tlang.mixin(oldItem, newItem); \r\n\t\t\t\t}\r\n\t\t\t}else if(newIndex!==-1){\r\n\t\t\t\t// this is a add\r\n\t\t\t\tvar l, i;\r\n\t\t\t\tvar tempId = object.temporaryId;\r\n\t\t\t\tif(tempId){\r\n\t\t\t\t\t// this item had a temporary id that was changed\r\n\t\t\t\t\tl = this.items ? this.items.length : 0; \r\n\t\t\t\t\tfor(i=l-1; i>=0; i--){\r\n\t\t\t\t\t\tif(this.items[i].id === tempId){\r\n\t\t\t\t\t\t\tthis.items[i] = newItem;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// clean to temp id state and reset the item with new id to its current state.\r\n\t\t\t\t\tvar stateObj =  this._getItemStoreStateObj({id: tempId});\t\t\t\t\t\r\n\t\t\t\t\tthis._cleanItemStoreState(tempId);\r\n\t\t\t\t\tthis._setItemStoreState(newItem, stateObj ? stateObj.state : null);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar s = this._getItemStoreStateObj(newItem);\r\n\t\t\t\tif(s && s.state === \"storing\"){\r\n\t\t\t\t\t// if the item is at the correct index (creation)\r\n\t\t\t\t\t// we must fix it. Should not occur but ensure integrity.\r\n\t\t\t\t\tif(this.items && this.items[newIndex] && this.items[newIndex].id !== newItem.id){\t\t\t\t\t\t\r\n\t\t\t\t\t\tl = this.items.length; \r\n\t\t\t\t\t\tfor(i=l-1; i>=0; i--){\r\n\t\t\t\t\t\t\tif(this.items[i].id === newItem.id){\r\n\t\t\t\t\t\t\t\tthis.items.splice(i, 1);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.items.splice(newIndex, 0, newItem);\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// update with the latest values from the store.\r\n\t\t\t\t\tlang.mixin(s.renderItem, newItem);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.items.splice(newIndex, 0, newItem);\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tthis.set(\"items\", this.items);\r\n\t\t\t}\t\r\n\t\t\t\r\n\t\t\tthis._setItemStoreState(newItem, \"stored\");\r\n\t\t\t\r\n\t\t\tif(!this.owner._isEditing){\r\n\t\t\t\tif(layoutCanChange){\r\n\t\t\t\t\tthis.emit(\"layoutInvalidated\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// just update the item\r\n\t\t\t\t\tthis.emit(\"renderersInvalidated\", oldItem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t_storeSetter: function(value){\r\n\t\t\tvar r;\r\n\t\t\tvar owner = this.owner;\r\n\r\n\t\t\tif(this._observeHandler){\r\n\t\t\t\tthis._observeHandler.remove();\r\n\t\t\t\tthis._observeHandler = null;\r\n\t\t\t}\r\n\t\t\tif(value){\t\t\t\t\r\n\t\t\t\tvar results = value.query(owner.query, owner.queryOptions);\r\n\t\t\t\tif(results.observe){\r\n\t\t\t\t\t// user asked us to observe the store\r\n\t\t\t\t\tthis._observeHandler = results.observe(lang.hitch(this, this._updateItems), true);\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t\tresults = results.map(lang.hitch(this, function(item){\r\n\t\t\t\t\tvar renderItem = owner.itemToRenderItem(item, value);\r\n\t\t\t\t\t// keep a reference on the store data item.\r\n\t\t\t\t\trenderItem._item = item;\r\n\t\t\t\t\treturn renderItem;\r\n\t\t\t\t}));\r\n\t\t\t\tr = when(results, lang.hitch(this, this._initItems));\r\n\t\t\t}else{\r\n\t\t\t\t// we remove the store\r\n\t\t\t\tr = this._initItems([]);\r\n\t\t\t}\r\n\t\t\tthis.store = value;\r\n\t\t\treturn r;\r\n\t\t},\r\n\t\t\r\n\t\t_getItemStoreStateObj: function(/*Object*/item){\r\n\t\t\t// tags\r\n\t\t\t//\t\tprivate\r\n\t\t\t\r\n\t\t\tvar parentManager = this._getParentStoreManager();\r\n\t\t\tif(parentManager){\r\n\t\t\t\treturn parentManager._getItemStoreStateObj(item);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar store = this.get(\"store\");\r\n\t\t\tif(store != null && this._itemStoreState != null){\r\n\t\t\t\tvar id = item.id === undefined ? store.getIdentity(item) : item.id;\r\n\t\t\t\treturn this._itemStoreState[id];\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\t\r\n\t\tgetItemStoreState: function(item){\r\n\t\t\t//\tsummary:\r\n\t\t\t//\t\tReturns the creation state of an item. \r\n\t\t\t//\t\tThis state is changing during the interactive creation of an item.\r\n\t\t\t//\t\tValid values are:\r\n\t\t\t//\t\t- \"unstored\": The event is being interactively created. It is not in the store yet.\r\n\t\t\t//\t\t- \"storing\": The creation gesture has ended, the event is being added to the store.\r\n\t\t\t//\t\t- \"stored\": The event is not in the two previous states, and is assumed to be in the store \r\n\t\t\t//\t\t(not checking because of performance reasons, use store API for testing existence in store).\r\n\t\t\t// item: Object\r\n\t\t\t//\t\tThe item.\r\n\t\t\t// returns: String\r\n\t\t\t\r\n\t\t\tvar parentManager = this._getParentStoreManager();\r\n\t\t\tif(parentManager){\r\n\t\t\t\treturn parentManager.getItemStoreState(item);\r\n\t\t\t}\r\n\r\n\t\t\tif(this._itemStoreState == null){\r\n\t\t\t\treturn \"stored\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar store = this.get(\"store\");\r\n\t\t\tvar id = item.id === undefined ? store.getIdentity(item) : item.id;\r\n\t\t\tvar s = this._itemStoreState[id];\r\n\t\t\t\r\n\t\t\tif(store != null && s !== undefined){\t\t\t\t\r\n\t\t\t\treturn s.state;\t\t\t\t\t\t\t\t\r\n\t\t\t}\r\n\t\t\treturn \"stored\";\t\t\r\n\t\t},\r\n\t\t\r\n\t\t_cleanItemStoreState: function(id){\t\r\n\t\t\t\r\n\t\t\tvar parentManager = this._getParentStoreManager();\r\n\t\t\tif(parentManager){\r\n\t\t\t\treturn parentManager._cleanItemStoreState(id);\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(!this._itemStoreState){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar s = this._itemStoreState[id];\r\n\t\t\tif(s){\r\n\t\t\t\tdelete this._itemStoreState[id];\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t\r\n\t\t_setItemStoreState: function(/*Object*/item, /*String*/state){\r\n\t\t\t// tags\r\n\t\t\t//\t\tprivate\r\n\t\t\t\r\n\t\t\tvar parentManager = this._getParentStoreManager();\r\n\t\t\tif(parentManager){\r\n\t\t\t\tparentManager._setItemStoreState(item, state);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this._itemStoreState === undefined){\r\n\t\t\t\tthis._itemStoreState = {};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar store = this.get(\"store\");\r\n\t\t\tvar id = item.id === undefined ? store.getIdentity(item) : item.id;\r\n\t\t\tvar s = this._itemStoreState[id];\r\n\t\t\t\t\t\t\r\n\t\t\tif(state === \"stored\" || state == null){\r\n\t\t\t\tif(s !== undefined){\r\n\t\t\t\t\tdelete this._itemStoreState[id];\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\treturn;\t\r\n\t\t\t}\r\n\r\n\t\t\tif(store){\t\t\t\t\r\n\t\t\t\tthis._itemStoreState[id] = {\r\n\t\t\t\t\tid: id,\r\n\t\t\t\t\titem: item,\r\n\t\t\t\t\trenderItem: this.owner.itemToRenderItem(item, store),\r\n\t\t\t\t\tstate: state\r\n\t\t\t\t};\t\t\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\t\r\n\t});\r\n\r\n});\r\n"]}