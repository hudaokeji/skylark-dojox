{"version":3,"sources":["math/curves.js"],"names":["define","dojo","dojox","getObject","mixin","math","curves","Line","start","end","this","dimensions","length","i","Number","getValue","n","retVal","Array","Bezier","pnts","step","p","k","j","C","D","bernstein","l","CatmullRom","c","percent","node","Math","floor","progress","i0","i1","i2","u","u2","u3","x1","x2","x3","x4","Arc","ccw","center","midpoint","sides","a","b","translate","invert","rad","sqrt","pow","theta","radiansToDegrees","atan","CenteredArc","call","radius","degreesToRadians","sin","cos","Circle","Path","weights","ranges","totalWeight","computeRanges","len","add","curve","weight","console","error","push","remove","splice","removeAll","found","value","r","subN","points"],"mappings":"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","file":"../../math/curves.js","sourcesContent":["// AMD-ID \"dojox/math/curves\"\r\ndefine([\"dojo\", \"dojox\"], function(dojo, dojox) {\r\ndojo.getObject(\"math.curves\", true, dojox);\r\n\r\ndojo.mixin(dojox.math.curves, {\r\n\tLine:function (start, end) {\r\n\t\tthis.start = start;\r\n\t\tthis.end = end;\r\n\t\tthis.dimensions = start.length;\r\n\t\tfor (var i = 0; i < start.length; i++) {\r\n\t\t\tstart[i] = Number(start[i]);\r\n\t\t}\r\n\t\tfor (var i = 0; i < end.length; i++) {\r\n\t\t\tend[i] = Number(end[i]);\r\n\t\t}\r\n\t\tthis.getValue = function (n) {\r\n\t\t\tvar retVal = new Array(this.dimensions);\r\n\t\t\tfor (var i = 0; i < this.dimensions; i++) {\r\n\t\t\t\tretVal[i] = ((this.end[i] - this.start[i]) * n) + this.start[i];\r\n\t\t\t}\r\n\t\t\treturn retVal;\r\n\t\t};\r\n\t\treturn this;\r\n\t},\r\n\tBezier:function(pnts) {\r\n\t\tthis.getValue = function (step) {\r\n\t\t\tif (step >= 1) {\r\n\t\t\t\treturn this.p[this.p.length - 1];\r\n\t\t\t}\r\n\t\t\tif (step <= 0) {\r\n\t\t\t\treturn this.p[0];\r\n\t\t\t}\r\n\t\t\tvar retVal = new Array(this.p[0].length);\r\n\t\t\tfor (var k = 0; j < this.p[0].length; k++) {\r\n\t\t\t\tretVal[k] = 0;\r\n\t\t\t}\r\n\t\t\tfor (var j = 0; j < this.p[0].length; j++) {\r\n\t\t\t\tvar C = 0;\r\n\t\t\t\tvar D = 0;\r\n\t\t\t\tfor (var i = 0; i < this.p.length; i++) {\r\n\t\t\t\t\tC += this.p[i][j] * this.p[this.p.length - 1][0] * dojox.math.bernstein(step, this.p.length, i);\r\n\t\t\t\t}\r\n\t\t\t\tfor (var l = 0; l < this.p.length; l++) {\r\n\t\t\t\t\tD += this.p[this.p.length - 1][0] * dojox.math.bernstein(step, this.p.length, l);\r\n\t\t\t\t}\r\n\t\t\t\tretVal[j] = C / D;\r\n\t\t\t}\r\n\t\t\treturn retVal;\r\n\t\t};\r\n\t\tthis.p = pnts;\r\n\t\treturn this;\r\n\t},\r\n\tCatmullRom:function (pnts, c) {\r\n\t\tthis.getValue = function (step) {\r\n\t\t\tvar percent = step * (this.p.length - 1);\r\n\t\t\tvar node = Math.floor(percent);\r\n\t\t\tvar progress = percent - node;\r\n\t\t\tvar i0 = node - 1;\r\n\t\t\tif (i0 < 0) {\r\n\t\t\t\ti0 = 0;\r\n\t\t\t}\r\n\t\t\tvar i = node;\r\n\t\t\tvar i1 = node + 1;\r\n\t\t\tif (i1 >= this.p.length) {\r\n\t\t\t\ti1 = this.p.length - 1;\r\n\t\t\t}\r\n\t\t\tvar i2 = node + 2;\r\n\t\t\tif (i2 >= this.p.length) {\r\n\t\t\t\ti2 = this.p.length - 1;\r\n\t\t\t}\r\n\t\t\tvar u = progress;\r\n\t\t\tvar u2 = progress * progress;\r\n\t\t\tvar u3 = progress * progress * progress;\r\n\t\t\tvar retVal = new Array(this.p[0].length);\r\n\t\t\tfor (var k = 0; k < this.p[0].length; k++) {\r\n\t\t\t\tvar x1 = (-this.c * this.p[i0][k]) + ((2 - this.c) * this.p[i][k]) + ((this.c - 2) * this.p[i1][k]) + (this.c * this.p[i2][k]);\r\n\t\t\t\tvar x2 = (2 * this.c * this.p[i0][k]) + ((this.c - 3) * this.p[i][k]) + ((3 - 2 * this.c) * this.p[i1][k]) + (-this.c * this.p[i2][k]);\r\n\t\t\t\tvar x3 = (-this.c * this.p[i0][k]) + (this.c * this.p[i1][k]);\r\n\t\t\t\tvar x4 = this.p[i][k];\r\n\t\t\t\tretVal[k] = x1 * u3 + x2 * u2 + x3 * u + x4;\r\n\t\t\t}\r\n\t\t\treturn retVal;\r\n\t\t};\r\n\t\tif (!c) {\r\n\t\t\tthis.c = 0.7;\r\n\t\t} else {\r\n\t\t\tthis.c = c;\r\n\t\t}\r\n\t\tthis.p = pnts;\r\n\t\treturn this;\r\n\t},\r\n\tArc:function (start, end, ccw){\r\n\t\tfunction translate(a,b){\r\n\t\t\tvar c=new Array(a.length);\r\n\t\t\tfor(var i=0; i<a.length; i++){ c[i]=a[i]+b[i]; }\r\n\t\t\treturn c;\r\n\t\t}\r\n\t\tfunction invert(a){\r\n\t\t\tvar b = new Array(a.length);\r\n\t\t\tfor(var i=0; i<a.length; i++){ b[i]=-a[i]; }\r\n\t\t\treturn b;\r\n\t\t}\r\n\t\tvar center = dojox.math.midpoint(start, end);\r\n\t\tvar sides = translate(invert(center), start);\r\n\t\tvar rad = Math.sqrt(Math.pow(sides[0], 2) + Math.pow(sides[1], 2));\r\n\t\tvar theta = dojox.math.radiansToDegrees(Math.atan(sides[1] / sides[0]));\r\n\t\tif (sides[0] < 0){\r\n\t\t\ttheta -= 90;\r\n\t\t} else {\r\n\t\t\ttheta += 90;\r\n\t\t}\r\n\t\tdojox.math.curves.CenteredArc.call(this, center, rad, theta, theta + (ccw ? -180 : 180));\r\n\t},\r\n\tCenteredArc:function (center, radius, start, end) {\r\n\t\tthis.center = center;\r\n\t\tthis.radius = radius;\r\n\t\tthis.start = start || 0;\r\n\t\tthis.end = end;\r\n\t\tthis.getValue = function (n) {\r\n\t\t\tvar retVal = new Array(2);\r\n\t\t\tvar theta = dojox.math.degreesToRadians(this.start + ((this.end - this.start) * n));\r\n\t\t\tretVal[0] = this.center[0] + this.radius * Math.sin(theta);\r\n\t\t\tretVal[1] = this.center[1] - this.radius * Math.cos(theta);\r\n\t\t\treturn retVal;\r\n\t\t};\r\n\t\treturn this;\r\n\t},\r\n\tCircle:function(center, radius){\r\n\t\tdojox.math.curves.CenteredArc.call(this, center, radius, 0, 360);\r\n\t\treturn this;\r\n\t},\r\n\tPath:function () {\r\n\t\tvar curves = [];\r\n\t\tvar weights = [];\r\n\t\tvar ranges = [];\r\n\t\tvar totalWeight = 0;\r\n\t\tthis.add = function (curve, weight) {\r\n\t\t\tif (weight < 0) {\r\n\t\t\t\tconsole.error(\"dojox.math.curves.Path.add: weight cannot be less than 0\");\r\n\t\t\t}\r\n\t\t\tcurves.push(curve);\r\n\t\t\tweights.push(weight);\r\n\t\t\ttotalWeight += weight;\r\n\t\t\tcomputeRanges();\r\n\t\t};\r\n\t\tthis.remove = function (curve) {\r\n\t\t\tfor (var i = 0; i < curves.length; i++) {\r\n\t\t\t\tif (curves[i] == curve) {\r\n\t\t\t\t\tcurves.splice(i, 1);\r\n\t\t\t\t\ttotalWeight -= weights.splice(i, 1)[0];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcomputeRanges();\r\n\t\t};\r\n\t\tthis.removeAll = function () {\r\n\t\t\tcurves = [];\r\n\t\t\tweights = [];\r\n\t\t\ttotalWeight = 0;\r\n\t\t};\r\n\t\tthis.getValue = function (n) {\r\n\t\t\tvar found = false, value = 0;\r\n\t\t\tfor (var i = 0; i < ranges.length; i++) {\r\n\t\t\t\tvar r = ranges[i];\r\n\t\t\t\tif (n >= r[0] && n < r[1]) {\r\n\t\t\t\t\tvar subN = (n - r[0]) / r[2];\r\n\t\t\t\t\tvalue = curves[i].getValue(subN);\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!found) {\r\n\t\t\t\tvalue = curves[curves.length - 1].getValue(1);\r\n\t\t\t}\r\n\t\t\tfor (var j = 0; j < i; j++) {\r\n\t\t\t\tvalue = dojox.math.points.translate(value, curves[j].getValue(1));\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t};\r\n\t\tfunction computeRanges() {\r\n\t\t\tvar start = 0;\r\n\t\t\tfor (var i = 0; i < weights.length; i++) {\r\n\t\t\t\tvar end = start + weights[i] / totalWeight;\r\n\t\t\t\tvar len = end - start;\r\n\t\t\t\tranges[i] = [start, end, len];\r\n\t\t\t\tstart = end;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n});\r\n\r\nreturn dojox.math.curves;\r\n});\r\n"]}