{"version":3,"sources":["math/matrix.js"],"names":["define","dojo","dojox","getObject","mixin","math","matrix","iDF","ALMOST_ZERO","multiply","a","b","ay","length","ax","by","bx","console","warn","c","k","i","m","product","arguments","this","sum","copy","rows","cols","arg","r","inverse","tms","create","mm","adjoint","det","determinant","dd","j","upperTriangle","bii","Math","abs","f1","temp","v","col","stop_loop","row","value","ones","zeros","identity","size","scale","ap","ii","jj","ia","ja","pow","transpose","format","points","format_int","x","dp","fac","round","toString","charAt","indexOf","ya","xa","buffer","y","factor"],"mappings":"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","file":"../../math/matrix.js","sourcesContent":["// AMD-ID \"dojox/math/matrix\"\r\ndefine([\"dojo\", \"dojox\"], function(dojo, dojox) {\r\ndojo.getObject(\"math.matrix\", true, dojox);\r\n\r\ndojo.mixin(dojox.math.matrix, {\r\n\tiDF:0,\r\n\tALMOST_ZERO: 1e-10,\r\n\tmultiply: function(/* Array */a, /* Array */b){\r\n\t\t// summary:\r\n\t\t//\t\tMultiply matrix a by matrix b.\r\n\t\tvar ay=a.length, ax=a[0].length, by=b.length, bx=b[0].length;\r\n\t\tif(ax!=by){\r\n\t\t\tconsole.warn(\"Can't multiply matricies of sizes \" + ax + \",\" + ay + \" and \" + bx + \",\" + by);\r\n\t\t\treturn [[0]];\r\n\t\t}\r\n\t\tvar c=[];\r\n\t\tfor (var k=0; k<ay; k++) {\r\n\t\t\tc[k]=[];\r\n\t\t\tfor(var i=0; i<bx; i++){\r\n\t\t\t\tc[k][i]=0;\r\n\t\t\t\tfor(var m=0; m<ax; m++){\r\n\t\t\t\t\tc[k][i]+=a[k][m]*b[m][i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn c;\t// Array\r\n\t},\r\n\tproduct: function(/* Array... */){\r\n\t\t// summary:\r\n\t\t//\t\tReturn the product of N matrices\r\n\t\tif (arguments.length==0){\r\n\t\t\tconsole.warn(\"can't multiply 0 matrices!\");\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\tvar m=arguments[0];\r\n\t\tfor(var i=1; i<arguments.length; i++){\r\n\t\t\tm=this.multiply(m, arguments[i]);\r\n\t\t}\r\n\t\treturn m;\t// Array\r\n\t},\r\n\tsum: function(/* Array... */){\r\n\t\t// summary:\r\n\t\t//\t\tReturn the sum of N matrices\r\n\t\tif(arguments.length==0){\r\n\t\t\tconsole.warn(\"can't sum 0 matrices!\");\r\n\t\t\treturn 0;\t// Number\r\n\t\t}\r\n\t\tvar m=this.copy(arguments[0]);\r\n\t\tvar rows=m.length;\r\n\t\tif(rows==0){\r\n\t\t\tconsole.warn(\"can't deal with matrices of 0 rows!\");\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tvar cols=m[0].length;\r\n\t\tif(cols==0){\r\n\t\t\tconsole.warn(\"can't deal with matrices of 0 cols!\");\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tfor(var i=1; i<arguments.length; ++i){\r\n\t\t\tvar arg=arguments[i];\r\n\t\t\tif(arg.length!=rows || arg[0].length!=cols){\r\n\t\t\t\tconsole.warn(\"can't add matrices of different dimensions: first dimensions were \" + rows + \"x\" + cols + \", current dimensions are \" + arg.length + \"x\" + arg[0].length);\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tfor(var r=0; r<rows; r++) {\r\n\t\t\t\tfor(var c=0; c<cols; c++) {\r\n\t\t\t\t\tm[r][c]+=arg[r][c];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn m;\t// Array\r\n\t},\r\n\tinverse: function(/* Array */a){\r\n\t\t// summary:\r\n\t\t//\t\tReturn the inversion of the passed matrix\r\n\t\tif(a.length==1 && a[0].length==1){\r\n\t\t\treturn [[1/a[0][0]]];\t// Array\r\n\t\t}\r\n\t\tvar tms=a.length, m=this.create(tms, tms), mm=this.adjoint(a), det=this.determinant(a), dd=0;\r\n\t\tif(det==0){\r\n\t\t\tconsole.warn(\"Determinant Equals 0, Not Invertible.\");\r\n\t\t\treturn [[0]];\r\n\t\t}else{\r\n\t\t\tdd=1/det;\r\n\t\t}\r\n\t\tfor(var i=0; i<tms; i++) {\r\n\t\t\tfor (var j=0; j<tms; j++) {\r\n\t\t\t\tm[i][j]=dd*mm[i][j];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn m;\t// Array\r\n\t},\r\n\tdeterminant: function(/* Array */a){\r\n\t\t// summary:\r\n\t\t//\t\tCalculate the determinant of the passed square matrix.\r\n\t\tif(a.length!=a[0].length){\r\n\t\t\tconsole.warn(\"Can't calculate the determinant of a non-squre matrix!\");\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tvar tms=a.length, det=1, b=this.upperTriangle(a);\r\n\t\tfor (var i=0; i<tms; i++){\r\n\t\t\tvar bii=b[i][i];\r\n\t\t\tif (Math.abs(bii)<this.ALMOST_ZERO) {\r\n\t\t\t\treturn 0;\t// Number\r\n\t\t\t}\r\n\t\t\tdet*=bii;\r\n\t\t}\r\n\t\tdet*=this.iDF;\r\n\t\treturn det;\t// Number\r\n\t},\r\n\tupperTriangle: function(/* Array */m){\r\n\t\t// summary:\r\n\t\t//\t\tFind the upper triangle of the passed matrix and return it.\r\n\t\tm=this.copy(m);\r\n\t\tvar f1=0, temp=0, tms=m.length, v=1;\r\n\t\tthis.iDF=1;\r\n\t\tfor(var col=0; col<tms-1; col++){\r\n\t\t\tif(typeof m[col][col]!=\"number\") {\r\n\t\t\t\tconsole.warn(\"non-numeric entry found in a numeric matrix: m[\" + col + \"][\" + col + \"]=\" + m[col][col]);\r\n\t\t\t}\r\n\t\t\tv=1;\r\n\t\t\tvar stop_loop=0;\r\n\t\t\twhile((m[col][col] == 0) && !stop_loop){\r\n\t\t\t\tif (col+v>=tms){\r\n\t\t\t\t\tthis.iDF=0;\r\n\t\t\t\t\tstop_loop=1;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfor(var r=0; r<tms; r++){\r\n\t\t\t\t\t\ttemp=m[col][r];\r\n\t\t\t\t\t\tm[col][r]=m[col+v][r];\r\n\t\t\t\t\t\tm[col+v][r]=temp;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tv++;\r\n\t\t\t\t\tthis.iDF*=-1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor(var row=col+1; row<tms; row++){\r\n\t\t\t\tif(typeof m[row][col]!=\"number\"){\r\n\t\t\t\t\tconsole.warn(\"non-numeric entry found in a numeric matrix: m[\" + row + \"][\" + col + \"]=\" + m[row][col]);\r\n\t\t\t\t}\r\n\t\t\t\tif(typeof m[col][row]!=\"number\"){\r\n\t\t\t\t\tconsole.warn(\"non-numeric entry found in a numeric matrix: m[\" + col + \"][\" + row + \"]=\" + m[col][row]);\r\n\t\t\t\t}\r\n\t\t\t\tif(m[col][col]!=0){\r\n\t\t\t\t\tvar f1=(-1)* m[row][col]/m[col][col];\r\n\t\t\t\t\tfor (var i=col; i<tms; i++){\r\n\t\t\t\t\t\tm[row][i]=f1*m[col][i]+m[row][i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn m;\t// Array\r\n\t},\r\n\tcreate: function(/* Number */a, /* Number */b, /* Number? */value){\r\n\t\t// summary:\r\n\t\t//\t\tCreate a new matrix with rows a and cols b, and pre-populate with value.\r\n\t\tvalue=value||0;\r\n\t\tvar m=[];\r\n\t\tfor (var i=0; i<b; i++){\r\n\t\t\tm[i]=[];\r\n\t\t\tfor(var j=0; j<a; j++) {\r\n\t\t\t\tm[i][j]=value;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn m;\t// Array\r\n\t},\r\n\tones: function(/* Number */a, /* Number */b){\r\n\t\t// summary:\r\n\t\t//\t\tCreate a matrix pre-populated with ones\r\n\t\treturn this.create(a, b, 1);\t// Array\r\n\t},\r\n\tzeros: function(/* Number */a, /* Number */b){\r\n\t\t// summary:\r\n\t\t//\t\tCreate a matrix pre-populated with zeros\r\n\t\treturn this.create(a, b);\t// Array\r\n\t},\r\n\tidentity: function(/* Number */size, /* Number? */scale){\r\n\t\t// summary:\r\n\t\t//\t\tCreate an identity matrix based on the size and scale.\r\n\t\tscale=scale||1;\r\n\t\tvar m=[];\r\n\t\tfor(var i=0; i<size; i++){\r\n\t\t\tm[i]=[];\r\n\t\t\tfor(var j=0; j<size; j++){\r\n\t\t\t\tm[i][j]=(i==j?scale:0);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn m;\t// Array\r\n\t},\r\n\tadjoint: function(/* Array */a){\r\n\t\t// summary:\r\n\t\t//\t\tFind the adjoint of the passed matrix\r\n\t\tvar tms=a.length;\r\n\t\tif(tms<=1){\r\n\t\t\tconsole.warn(\"Can't find the adjoint of a matrix with a dimension less than 2\");\r\n\t\t\treturn [[0]];\r\n\t\t}\r\n\t\tif(a.length!=a[0].length){\r\n\t\t\tconsole.warn(\"Can't find the adjoint of a non-square matrix\");\r\n\t\t\treturn [[0]];\r\n\t\t}\r\n\t\tvar m=this.create(tms, tms), ap=this.create(tms-1, tms-1);\r\n\t\tvar ii=0, jj=0, ia=0, ja=0, det=0;\r\n\t\tfor(var i=0; i<tms; i++){\r\n\t\t\tfor (var j=0; j<tms; j++){\r\n\t\t\t\tia=0;\r\n\t\t\t\tfor(ii=0; ii<tms; ii++){\r\n\t\t\t\t\tif(ii==i){\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tja = 0;\r\n\t\t\t\t\tfor(jj=0; jj<tms; jj++){\r\n\t\t\t\t\t\tif(jj==j){\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tap[ia][ja] = a[ii][jj];\r\n\t\t\t\t\t\tja++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tia++;\r\n\t\t\t\t}\r\n\t\t\t\tdet=this.determinant(ap);\r\n\t\t\t\tm[i][j]=Math.pow(-1, (i+j))*det;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.transpose(m);\t// Array\r\n\t},\r\n\ttranspose: function(/* Array */a){\r\n\t\t// summary:\r\n\t\t//\t\tTranspose the passed matrix (i.e. rows to columns)\r\n\t\tvar m=this.create(a.length, a[0].length);\r\n\t\tfor(var i=0; i<a.length; i++){\r\n\t\t\tfor(var j=0; j<a[i].length; j++){\r\n\t\t\t\tm[j][i]=a[i][j];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn m;\t// Array\r\n\t},\r\n\tformat: function(/* Array */a, /* Number? */points){\r\n\t\t// summary:\r\n\t\t//\t\tReturn a string representation of the matrix, rounded to points (if needed)\r\n\t\tpoints=points||5;\r\n\t\tfunction format_int(x, dp){\r\n\t\t\tvar fac=Math.pow(10, dp);\r\n\t\t\tvar a=Math.round(x*fac)/fac;\r\n\t\t\tvar b=a.toString();\r\n\t\t\tif(b.charAt(0)!=\"-\"){\r\n\t\t\t\tb=\" \"+b;\r\n\t\t\t}\r\n\t\t\tif(b.indexOf(\".\")>-1){\r\n\t\t\t\tb+=\".\";\r\n\t\t\t}\r\n\t\t\twhile(b.length<dp+3){\r\n\t\t\t\tb+=\"0\";\r\n\t\t\t}\r\n\t\t\treturn b;\r\n\t\t}\r\n\t\tvar ya=a.length;\r\n\t\tvar xa=ya>0?a[0].length:0;\r\n\t\tvar buffer=\"\";\r\n\t\tfor(var y=0; y<ya; y++){\r\n\t\t\tbuffer+=\"| \";\r\n\t\t\tfor(var x=0; x<xa; x++){\r\n\t\t\t\tbuffer+=format_int(a[y][x], points)+\" \";\r\n\t\t\t}\r\n\t\t\tbuffer+=\"|\\n\";\r\n\t\t}\r\n\t\treturn buffer;\t// string\r\n\t},\r\n\tcopy: function(/* Array */a){\r\n\t\t// summary:\r\n\t\t//\t\tCreate a copy of the passed matrix\r\n\t\tvar ya=a.length, xa=a[0].length, m=this.create(xa, ya);\r\n\t\tfor(var y=0; y<ya; y++){\r\n\t\t\tfor(var x=0; x<xa; x++){\r\n\t\t\t\tm[y][x]=a[y][x];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn m;\t// Array\r\n\t},\r\n\tscale: function(/* Array */a, /* Number */factor){\r\n\t\t// summary:\r\n\t\t//\t\tCreate a copy of passed matrix and scale each member by factor.\r\n\t\ta=this.copy(a);\r\n\t\tvar ya=a.length, xa=a[0].length;\r\n\t\tfor(var y=0; y<ya; y++){\r\n\t\t\tfor(var x=0; x<xa; x++){\r\n\t\t\t\ta[y][x]*=factor;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn a;\r\n\t}\r\n});\r\n\r\nreturn dojox.math.matrix;\r\n});\r\n"]}