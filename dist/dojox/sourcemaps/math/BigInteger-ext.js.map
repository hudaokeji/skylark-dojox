{"version":3,"sources":["math/BigInteger-ext.js"],"names":["define","dojo","dojox","experimental","BigInteger","math","nbi","_nbi","nbv","_nbv","nbits","_nbits","Montgomery","_Montgomery","op_and","x","y","op_or","op_xor","op_andnot","lbit","r","cbit","NullExp","nNop","Barrett","m","this","r2","q3","ONE","_dlShiftTo","t","mu","divide","prototype","convert","revert","mulTo","_multiplyTo","sqrTo","_squareTo","s","mod","compareTo","_copyTo","reduce","_drShiftTo","_clamp","_multiplyUpperTo","_multiplyLowerTo","_dAddOffset","_subTo","lowprimes","lplim","length","extend","_chunkSize","Math","floor","LN2","_DB","log","_toRadix","b","signum","cs","a","pow","d","z","_divRemTo","intValue","toString","substr","_fromRadix","_fromInt","mi","j","w","i","intAt","charAt","_dMultiply","ZERO","_fromNumber","c","testBit","_bitwiseTo","shiftLeft","_isEven","isProbablePrime","bitLength","nextBytes","_fromString","op","f","min","_DM","_changeBit","n","_addTo","_DV","am","max","_modInt","_millerRabin","n1","subtract","k","getLowestSetBit","shiftRight","modPow","modPowInt","clone","byteValue","shortValue","toByteArray","p","equals","and","or","xor","andNot","not","_rShiftTo","_lShiftTo","bitCount","setBit","clearBit","flipBit","add","multiply","remainder","divideAndRemainder","q","e","Classic","g","k1","km","g2","is1","modInverse","ac","u","v","_exp","gcd","negate","abs"],"mappings":"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","file":"../../math/BigInteger-ext.js","sourcesContent":["// AMD-ID \"dojox/math/BigInteger-ext\"\r\ndefine([\"dojo\", \"dojox\", \"dojox/math/BigInteger\"], function(dojo, dojox) {\r\n\tdojo.experimental(\"dojox.math.BigInteger-ext\");\r\n\r\n// Contributed under CLA by Tom Wu\r\n\r\n// Extended JavaScript BN functions, required for RSA private ops.\r\n\tvar BigInteger = dojox.math.BigInteger,\r\n\t\tnbi = BigInteger._nbi, nbv = BigInteger._nbv,\r\n\t\tnbits = BigInteger._nbits,\r\n\t\tMontgomery = BigInteger._Montgomery;\r\n\r\n\t// (public)\r\n\tfunction bnClone() { var r = nbi(); this._copyTo(r); return r; }\r\n\r\n\t// (public) return value as integer\r\n\tfunction bnIntValue() {\r\n\t  if(this.s < 0) {\r\n\t\tif(this.t == 1) return this[0]-this._DV;\r\n\t\telse if(this.t == 0) return -1;\r\n\t  }\r\n\t  else if(this.t == 1) return this[0];\r\n\t  else if(this.t == 0) return 0;\r\n\t  // assumes 16 < DB < 32\r\n\t  return ((this[1]&((1<<(32-this._DB))-1))<<this._DB)|this[0];\r\n\t}\r\n\r\n\t// (public) return value as byte\r\n\tfunction bnByteValue() { return (this.t==0)?this.s:(this[0]<<24)>>24; }\r\n\r\n\t// (public) return value as short (assumes DB>=16)\r\n\tfunction bnShortValue() { return (this.t==0)?this.s:(this[0]<<16)>>16; }\r\n\r\n\t// (protected) return x s.t. r^x < DV\r\n\tfunction bnpChunkSize(r) { return Math.floor(Math.LN2*this._DB/Math.log(r)); }\r\n\r\n\t// (public) 0 if this == 0, 1 if this > 0\r\n\tfunction bnSigNum() {\r\n\t  if(this.s < 0) return -1;\r\n\t  else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;\r\n\t  else return 1;\r\n\t}\r\n\r\n\t// (protected) convert to radix string\r\n\tfunction bnpToRadix(b) {\r\n\t  if(b == null) b = 10;\r\n\t  if(this.signum() == 0 || b < 2 || b > 36) return \"0\";\r\n\t  var cs = this._chunkSize(b);\r\n\t  var a = Math.pow(b,cs);\r\n\t  var d = nbv(a), y = nbi(), z = nbi(), r = \"\";\r\n\t  this._divRemTo(d,y,z);\r\n\t  while(y.signum() > 0) {\r\n\t\tr = (a+z.intValue()).toString(b).substr(1) + r;\r\n\t\ty._divRemTo(d,y,z);\r\n\t  }\r\n\t  return z.intValue().toString(b) + r;\r\n\t}\r\n\r\n\t// (protected) convert from radix string\r\n\tfunction bnpFromRadix(s,b) {\r\n\t  this._fromInt(0);\r\n\t  if(b == null) b = 10;\r\n\t  var cs = this._chunkSize(b);\r\n\t  var d = Math.pow(b,cs), mi = false, j = 0, w = 0;\r\n\t  for(var i = 0; i < s.length; ++i) {\r\n\t\tvar x = intAt(s,i);\r\n\t\tif(x < 0) {\r\n\t\t  if(s.charAt(i) == \"-\" && this.signum() == 0) mi = true;\r\n\t\t  continue;\r\n\t\t}\r\n\t\tw = b*w+x;\r\n\t\tif(++j >= cs) {\r\n\t\t  this._dMultiply(d);\r\n\t\t  this._dAddOffset(w,0);\r\n\t\t  j = 0;\r\n\t\t  w = 0;\r\n\t\t}\r\n\t  }\r\n\t  if(j > 0) {\r\n\t\tthis._dMultiply(Math.pow(b,j));\r\n\t\tthis._dAddOffset(w,0);\r\n\t  }\r\n\t  if(mi) BigInteger.ZERO._subTo(this,this);\r\n\t}\r\n\r\n\t// (protected) alternate constructor\r\n\tfunction bnpFromNumber(a,b,c) {\r\n\t  if(\"number\" == typeof b) {\r\n\t\t// new BigInteger(int,int,RNG)\r\n\t\tif(a < 2) this._fromInt(1);\r\n\t\telse {\r\n\t\t  this._fromNumber(a,c);\r\n\t\t  if(!this.testBit(a-1))\t// force MSB set\r\n\t\t\tthis._bitwiseTo(BigInteger.ONE.shiftLeft(a-1),op_or,this);\r\n\t\t  if(this._isEven()) this._dAddOffset(1,0); // force odd\r\n\t\t  while(!this.isProbablePrime(b)) {\r\n\t\t\tthis._dAddOffset(2,0);\r\n\t\t\tif(this.bitLength() > a) this._subTo(BigInteger.ONE.shiftLeft(a-1),this);\r\n\t\t  }\r\n\t\t}\r\n\t  }\r\n\t  else {\r\n\t\t// new BigInteger(int,RNG)\r\n\t\tvar x = [], t = a&7;\r\n\t\tx.length = (a>>3)+1;\r\n\t\tb.nextBytes(x);\r\n\t\tif(t > 0) x[0] &= ((1<<t)-1); else x[0] = 0;\r\n\t\tthis._fromString(x,256);\r\n\t  }\r\n\t}\r\n\r\n\t// (public) convert to bigendian byte array\r\n\tfunction bnToByteArray() {\r\n\t  var i = this.t, r = [];\r\n\t  r[0] = this.s;\r\n\t  var p = this._DB-(i*this._DB)%8, d, k = 0;\r\n\t  if(i-- > 0) {\r\n\t\tif(p < this._DB && (d = this[i]>>p) != (this.s&this._DM)>>p)\r\n\t\t  r[k++] = d|(this.s<<(this._DB-p));\r\n\t\twhile(i >= 0) {\r\n\t\t  if(p < 8) {\r\n\t\t\td = (this[i]&((1<<p)-1))<<(8-p);\r\n\t\t\td |= this[--i]>>(p+=this._DB-8);\r\n\t\t  }\r\n\t\t  else {\r\n\t\t\td = (this[i]>>(p-=8))&0xff;\r\n\t\t\tif(p <= 0) { p += this._DB; --i; }\r\n\t\t  }\r\n\t\t  if((d&0x80) != 0) d |= -256;\r\n\t\t  if(k == 0 && (this.s&0x80) != (d&0x80)) ++k;\r\n\t\t  if(k > 0 || d != this.s) r[k++] = d;\r\n\t\t}\r\n\t  }\r\n\t  return r;\r\n\t}\r\n\r\n\tfunction bnEquals(a) { return(this.compareTo(a)==0); }\r\n\tfunction bnMin(a) { return(this.compareTo(a)<0)?this:a; }\r\n\tfunction bnMax(a) { return(this.compareTo(a)>0)?this:a; }\r\n\r\n\t// (protected) r = this op a (bitwise)\r\n\tfunction bnpBitwiseTo(a,op,r) {\r\n\t  var i, f, m = Math.min(a.t,this.t);\r\n\t  for(i = 0; i < m; ++i) r[i] = op(this[i],a[i]);\r\n\t  if(a.t < this.t) {\r\n\t\tf = a.s&this._DM;\r\n\t\tfor(i = m; i < this.t; ++i) r[i] = op(this[i],f);\r\n\t\tr.t = this.t;\r\n\t  }\r\n\t  else {\r\n\t\tf = this.s&this._DM;\r\n\t\tfor(i = m; i < a.t; ++i) r[i] = op(f,a[i]);\r\n\t\tr.t = a.t;\r\n\t  }\r\n\t  r.s = op(this.s,a.s);\r\n\t  r._clamp();\r\n\t}\r\n\r\n\t// (public) this & a\r\n\tfunction op_and(x,y) { return x&y; }\r\n\tfunction bnAnd(a) { var r = nbi(); this._bitwiseTo(a,op_and,r); return r; }\r\n\r\n\t// (public) this | a\r\n\tfunction op_or(x,y) { return x|y; }\r\n\tfunction bnOr(a) { var r = nbi(); this._bitwiseTo(a,op_or,r); return r; }\r\n\r\n\t// (public) this ^ a\r\n\tfunction op_xor(x,y) { return x^y; }\r\n\tfunction bnXor(a) { var r = nbi(); this._bitwiseTo(a,op_xor,r); return r; }\r\n\r\n\t// (public) this & ~a\r\n\tfunction op_andnot(x,y) { return x&~y; }\r\n\tfunction bnAndNot(a) { var r = nbi(); this._bitwiseTo(a,op_andnot,r); return r; }\r\n\r\n\t// (public) ~this\r\n\tfunction bnNot() {\r\n\t  var r = nbi();\r\n\t  for(var i = 0; i < this.t; ++i) r[i] = this._DM&~this[i];\r\n\t  r.t = this.t;\r\n\t  r.s = ~this.s;\r\n\t  return r;\r\n\t}\r\n\r\n\t// (public) this << n\r\n\tfunction bnShiftLeft(n) {\r\n\t  var r = nbi();\r\n\t  if(n < 0) this._rShiftTo(-n,r); else this._lShiftTo(n,r);\r\n\t  return r;\r\n\t}\r\n\r\n\t// (public) this >> n\r\n\tfunction bnShiftRight(n) {\r\n\t  var r = nbi();\r\n\t  if(n < 0) this._lShiftTo(-n,r); else this._rShiftTo(n,r);\r\n\t  return r;\r\n\t}\r\n\r\n\t// return index of lowest 1-bit in x, x < 2^31\r\n\tfunction lbit(x) {\r\n\t  if(x == 0) return -1;\r\n\t  var r = 0;\r\n\t  if((x&0xffff) == 0) { x >>= 16; r += 16; }\r\n\t  if((x&0xff) == 0) { x >>= 8; r += 8; }\r\n\t  if((x&0xf) == 0) { x >>= 4; r += 4; }\r\n\t  if((x&3) == 0) { x >>= 2; r += 2; }\r\n\t  if((x&1) == 0) ++r;\r\n\t  return r;\r\n\t}\r\n\r\n\t// (public) returns index of lowest 1-bit (or -1 if none)\r\n\tfunction bnGetLowestSetBit() {\r\n\t  for(var i = 0; i < this.t; ++i)\r\n\t\tif(this[i] != 0) return i*this._DB+lbit(this[i]);\r\n\t  if(this.s < 0) return this.t*this._DB;\r\n\t  return -1;\r\n\t}\r\n\r\n\t// return number of 1 bits in x\r\n\tfunction cbit(x) {\r\n\t  var r = 0;\r\n\t  while(x != 0) { x &= x-1; ++r; }\r\n\t  return r;\r\n\t}\r\n\r\n\t// (public) return number of set bits\r\n\tfunction bnBitCount() {\r\n\t  var r = 0, x = this.s&this._DM;\r\n\t  for(var i = 0; i < this.t; ++i) r += cbit(this[i]^x);\r\n\t  return r;\r\n\t}\r\n\r\n\t// (public) true iff nth bit is set\r\n\tfunction bnTestBit(n) {\r\n\t  var j = Math.floor(n/this._DB);\r\n\t  if(j >= this.t) return(this.s!=0);\r\n\t  return((this[j]&(1<<(n%this._DB)))!=0);\r\n\t}\r\n\r\n\t// (protected) this op (1<<n)\r\n\tfunction bnpChangeBit(n,op) {\r\n\t  var r = BigInteger.ONE.shiftLeft(n);\r\n\t  this._bitwiseTo(r,op,r);\r\n\t  return r;\r\n\t}\r\n\r\n\t// (public) this | (1<<n)\r\n\tfunction bnSetBit(n) { return this._changeBit(n,op_or); }\r\n\r\n\t// (public) this & ~(1<<n)\r\n\tfunction bnClearBit(n) { return this._changeBit(n,op_andnot); }\r\n\r\n\t// (public) this ^ (1<<n)\r\n\tfunction bnFlipBit(n) { return this._changeBit(n,op_xor); }\r\n\r\n\t// (protected) r = this + a\r\n\tfunction bnpAddTo(a,r) {\r\n\t  var i = 0, c = 0, m = Math.min(a.t,this.t);\r\n\t  while(i < m) {\r\n\t\tc += this[i]+a[i];\r\n\t\tr[i++] = c&this._DM;\r\n\t\tc >>= this._DB;\r\n\t  }\r\n\t  if(a.t < this.t) {\r\n\t\tc += a.s;\r\n\t\twhile(i < this.t) {\r\n\t\t  c += this[i];\r\n\t\t  r[i++] = c&this._DM;\r\n\t\t  c >>= this._DB;\r\n\t\t}\r\n\t\tc += this.s;\r\n\t  }\r\n\t  else {\r\n\t\tc += this.s;\r\n\t\twhile(i < a.t) {\r\n\t\t  c += a[i];\r\n\t\t  r[i++] = c&this._DM;\r\n\t\t  c >>= this._DB;\r\n\t\t}\r\n\t\tc += a.s;\r\n\t  }\r\n\t  r.s = (c<0)?-1:0;\r\n\t  if(c > 0) r[i++] = c;\r\n\t  else if(c < -1) r[i++] = this._DV+c;\r\n\t  r.t = i;\r\n\t  r._clamp();\r\n\t}\r\n\r\n\t// (public) this + a\r\n\tfunction bnAdd(a) { var r = nbi(); this._addTo(a,r); return r; }\r\n\r\n\t// (public) this - a\r\n\tfunction bnSubtract(a) { var r = nbi(); this._subTo(a,r); return r; }\r\n\r\n\t// (public) this * a\r\n\tfunction bnMultiply(a) { var r = nbi(); this._multiplyTo(a,r); return r; }\r\n\r\n\t// (public) this / a\r\n\tfunction bnDivide(a) { var r = nbi(); this._divRemTo(a,r,null); return r; }\r\n\r\n\t// (public) this % a\r\n\tfunction bnRemainder(a) { var r = nbi(); this._divRemTo(a,null,r); return r; }\r\n\r\n\t// (public) [this/a,this%a]\r\n\tfunction bnDivideAndRemainder(a) {\r\n\t  var q = nbi(), r = nbi();\r\n\t  this._divRemTo(a,q,r);\r\n\t  return [q, r];\r\n\t}\r\n\r\n\t// (protected) this *= n, this >= 0, 1 < n < DV\r\n\tfunction bnpDMultiply(n) {\r\n\t  this[this.t] = this.am(0,n-1,this,0,0,this.t);\r\n\t  ++this.t;\r\n\t  this._clamp();\r\n\t}\r\n\r\n\t// (protected) this += n << w words, this >= 0\r\n\tfunction bnpDAddOffset(n,w) {\r\n\t  while(this.t <= w) this[this.t++] = 0;\r\n\t  this[w] += n;\r\n\t  while(this[w] >= this._DV) {\r\n\t\tthis[w] -= this._DV;\r\n\t\tif(++w >= this.t) this[this.t++] = 0;\r\n\t\t++this[w];\r\n\t  }\r\n\t}\r\n\r\n\t// A \"null\" reducer\r\n\tfunction NullExp() {}\r\n\tfunction nNop(x) { return x; }\r\n\tfunction nMulTo(x,y,r) { x._multiplyTo(y,r); }\r\n\tfunction nSqrTo(x,r) { x._squareTo(r); }\r\n\r\n\tNullExp.prototype.convert = nNop;\r\n\tNullExp.prototype.revert = nNop;\r\n\tNullExp.prototype.mulTo = nMulTo;\r\n\tNullExp.prototype.sqrTo = nSqrTo;\r\n\r\n\t// (public) this^e\r\n\tfunction bnPow(e) { return this._exp(e,new NullExp()); }\r\n\r\n\t// (protected) r = lower n words of \"this * a\", a.t <= n\r\n\t// \"this\" should be the larger one if appropriate.\r\n\tfunction bnpMultiplyLowerTo(a,n,r) {\r\n\t  var i = Math.min(this.t+a.t,n);\r\n\t  r.s = 0; // assumes a,this >= 0\r\n\t  r.t = i;\r\n\t  while(i > 0) r[--i] = 0;\r\n\t  var j;\r\n\t  for(j = r.t-this.t; i < j; ++i) r[i+this.t] = this.am(0,a[i],r,i,0,this.t);\r\n\t  for(j = Math.min(a.t,n); i < j; ++i) this.am(0,a[i],r,i,0,n-i);\r\n\t  r._clamp();\r\n\t}\r\n\r\n\t// (protected) r = \"this * a\" without lower n words, n > 0\r\n\t// \"this\" should be the larger one if appropriate.\r\n\tfunction bnpMultiplyUpperTo(a,n,r) {\r\n\t  --n;\r\n\t  var i = r.t = this.t+a.t-n;\r\n\t  r.s = 0; // assumes a,this >= 0\r\n\t  while(--i >= 0) r[i] = 0;\r\n\t  for(i = Math.max(n-this.t,0); i < a.t; ++i)\r\n\t\tr[this.t+i-n] = this.am(n-i,a[i],r,0,0,this.t+i-n);\r\n\t  r._clamp();\r\n\t  r._drShiftTo(1,r);\r\n\t}\r\n\r\n\t// Barrett modular reduction\r\n\tfunction Barrett(m) {\r\n\t  // setup Barrett\r\n\t  this.r2 = nbi();\r\n\t  this.q3 = nbi();\r\n\t  BigInteger.ONE._dlShiftTo(2*m.t,this.r2);\r\n\t  this.mu = this.r2.divide(m);\r\n\t  this.m = m;\r\n\t}\r\n\r\n\tfunction barrettConvert(x) {\r\n\t  if(x.s < 0 || x.t > 2*this.m.t) return x.mod(this.m);\r\n\t  else if(x.compareTo(this.m) < 0) return x;\r\n\t  else { var r = nbi(); x._copyTo(r); this.reduce(r); return r; }\r\n\t}\r\n\r\n\tfunction barrettRevert(x) { return x; }\r\n\r\n\t// x = x mod m (HAC 14.42)\r\n\tfunction barrettReduce(x) {\r\n\t  x._drShiftTo(this.m.t-1,this.r2);\r\n\t  if(x.t > this.m.t+1) { x.t = this.m.t+1; x._clamp(); }\r\n\t  this.mu._multiplyUpperTo(this.r2,this.m.t+1,this.q3);\r\n\t  this.m._multiplyLowerTo(this.q3,this.m.t+1,this.r2);\r\n\t  while(x.compareTo(this.r2) < 0) x._dAddOffset(1,this.m.t+1);\r\n\t  x._subTo(this.r2,x);\r\n\t  while(x.compareTo(this.m) >= 0) x._subTo(this.m,x);\r\n\t}\r\n\r\n\t// r = x^2 mod m; x != r\r\n\tfunction barrettSqrTo(x,r) { x._squareTo(r); this.reduce(r); }\r\n\r\n\t// r = x*y mod m; x,y != r\r\n\tfunction barrettMulTo(x,y,r) { x._multiplyTo(y,r); this.reduce(r); }\r\n\r\n\tBarrett.prototype.convert = barrettConvert;\r\n\tBarrett.prototype.revert = barrettRevert;\r\n\tBarrett.prototype.reduce = barrettReduce;\r\n\tBarrett.prototype.mulTo = barrettMulTo;\r\n\tBarrett.prototype.sqrTo = barrettSqrTo;\r\n\r\n\t// (public) this^e % m (HAC 14.85)\r\n\tfunction bnModPow(e,m) {\r\n\t  var i = e.bitLength(), k, r = nbv(1), z;\r\n\t  if(i <= 0) return r;\r\n\t  else if(i < 18) k = 1;\r\n\t  else if(i < 48) k = 3;\r\n\t  else if(i < 144) k = 4;\r\n\t  else if(i < 768) k = 5;\r\n\t  else k = 6;\r\n\t  if(i < 8)\r\n\t\tz = new Classic(m);\r\n\t  else if(m._isEven())\r\n\t\tz = new Barrett(m);\r\n\t  else\r\n\t\tz = new Montgomery(m);\r\n\r\n\t  // precomputation\r\n\t  var g = [], n = 3, k1 = k-1, km = (1<<k)-1;\r\n\t  g[1] = z.convert(this);\r\n\t  if(k > 1) {\r\n\t\tvar g2 = nbi();\r\n\t\tz.sqrTo(g[1],g2);\r\n\t\twhile(n <= km) {\r\n\t\t  g[n] = nbi();\r\n\t\t  z.mulTo(g2,g[n-2],g[n]);\r\n\t\t  n += 2;\r\n\t\t}\r\n\t  }\r\n\r\n\t  var j = e.t-1, w, is1 = true, r2 = nbi(), t;\r\n\t  i = nbits(e[j])-1;\r\n\t  while(j >= 0) {\r\n\t\tif(i >= k1) w = (e[j]>>(i-k1))&km;\r\n\t\telse {\r\n\t\t  w = (e[j]&((1<<(i+1))-1))<<(k1-i);\r\n\t\t  if(j > 0) w |= e[j-1]>>(this._DB+i-k1);\r\n\t\t}\r\n\r\n\t\tn = k;\r\n\t\twhile((w&1) == 0) { w >>= 1; --n; }\r\n\t\tif((i -= n) < 0) { i += this._DB; --j; }\r\n\t\tif(is1) {\t// ret == 1, don't bother squaring or multiplying it\r\n\t\t  g[w]._copyTo(r);\r\n\t\t  is1 = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t  while(n > 1) { z.sqrTo(r,r2); z.sqrTo(r2,r); n -= 2; }\r\n\t\t  if(n > 0) z.sqrTo(r,r2); else { t = r; r = r2; r2 = t; }\r\n\t\t  z.mulTo(r2,g[w],r);\r\n\t\t}\r\n\r\n\t\twhile(j >= 0 && (e[j]&(1<<i)) == 0) {\r\n\t\t  z.sqrTo(r,r2); t = r; r = r2; r2 = t;\r\n\t\t  if(--i < 0) { i = this._DB-1; --j; }\r\n\t\t}\r\n\t  }\r\n\t  return z.revert(r);\r\n\t}\r\n\r\n\t// (public) gcd(this,a) (HAC 14.54)\r\n\tfunction bnGCD(a) {\r\n\t  var x = (this.s<0)?this.negate():this.clone();\r\n\t  var y = (a.s<0)?a.negate():a.clone();\r\n\t  if(x.compareTo(y) < 0) { var t = x; x = y; y = t; }\r\n\t  var i = x.getLowestSetBit(), g = y.getLowestSetBit();\r\n\t  if(g < 0) return x;\r\n\t  if(i < g) g = i;\r\n\t  if(g > 0) {\r\n\t\tx._rShiftTo(g,x);\r\n\t\ty._rShiftTo(g,y);\r\n\t  }\r\n\t  while(x.signum() > 0) {\r\n\t\tif((i = x.getLowestSetBit()) > 0) x._rShiftTo(i,x);\r\n\t\tif((i = y.getLowestSetBit()) > 0) y._rShiftTo(i,y);\r\n\t\tif(x.compareTo(y) >= 0) {\r\n\t\t  x._subTo(y,x);\r\n\t\t  x._rShiftTo(1,x);\r\n\t\t}\r\n\t\telse {\r\n\t\t  y._subTo(x,y);\r\n\t\t  y._rShiftTo(1,y);\r\n\t\t}\r\n\t  }\r\n\t  if(g > 0) y._lShiftTo(g,y);\r\n\t  return y;\r\n\t}\r\n\r\n\t// (protected) this % n, n < 2^26\r\n\tfunction bnpModInt(n) {\r\n\t  if(n <= 0) return 0;\r\n\t  var d = this._DV%n, r = (this.s<0)?n-1:0;\r\n\t  if(this.t > 0)\r\n\t\tif(d == 0) r = this[0]%n;\r\n\t\telse for(var i = this.t-1; i >= 0; --i) r = (d*r+this[i])%n;\r\n\t  return r;\r\n\t}\r\n\r\n\t// (public) 1/this % m (HAC 14.61)\r\n\tfunction bnModInverse(m) {\r\n\t  var ac = m._isEven();\r\n\t  if((this._isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;\r\n\t  var u = m.clone(), v = this.clone();\r\n\t  var a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);\r\n\t  while(u.signum() != 0) {\r\n\t\twhile(u._isEven()) {\r\n\t\t  u._rShiftTo(1,u);\r\n\t\t  if(ac) {\r\n\t\t\tif(!a._isEven() || !b._isEven()) { a._addTo(this,a); b._subTo(m,b); }\r\n\t\t\ta._rShiftTo(1,a);\r\n\t\t  }\r\n\t\t  else if(!b._isEven()) b._subTo(m,b);\r\n\t\t  b._rShiftTo(1,b);\r\n\t\t}\r\n\t\twhile(v._isEven()) {\r\n\t\t  v._rShiftTo(1,v);\r\n\t\t  if(ac) {\r\n\t\t\tif(!c._isEven() || !d._isEven()) { c._addTo(this,c); d._subTo(m,d); }\r\n\t\t\tc._rShiftTo(1,c);\r\n\t\t  }\r\n\t\t  else if(!d._isEven()) d._subTo(m,d);\r\n\t\t  d._rShiftTo(1,d);\r\n\t\t}\r\n\t\tif(u.compareTo(v) >= 0) {\r\n\t\t  u._subTo(v,u);\r\n\t\t  if(ac) a._subTo(c,a);\r\n\t\t  b._subTo(d,b);\r\n\t\t}\r\n\t\telse {\r\n\t\t  v._subTo(u,v);\r\n\t\t  if(ac) c._subTo(a,c);\r\n\t\t  d._subTo(b,d);\r\n\t\t}\r\n\t  }\r\n\t  if(v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\r\n\t  if(d.compareTo(m) >= 0) return d.subtract(m);\r\n\t  if(d.signum() < 0) d._addTo(m,d); else return d;\r\n\t  if(d.signum() < 0) return d.add(m); else return d;\r\n\t}\r\n\r\n\tvar lowprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509];\r\n\tvar lplim = (1<<26)/lowprimes[lowprimes.length-1];\r\n\r\n\t// (public) test primality with certainty >= 1-.5^t\r\n\tfunction bnIsProbablePrime(t) {\r\n\t  var i, x = this.abs();\r\n\t  if(x.t == 1 && x[0] <= lowprimes[lowprimes.length-1]) {\r\n\t\tfor(i = 0; i < lowprimes.length; ++i)\r\n\t\t  if(x[0] == lowprimes[i]) return true;\r\n\t\treturn false;\r\n\t  }\r\n\t  if(x._isEven()) return false;\r\n\t  i = 1;\r\n\t  while(i < lowprimes.length) {\r\n\t\tvar m = lowprimes[i], j = i+1;\r\n\t\twhile(j < lowprimes.length && m < lplim) m *= lowprimes[j++];\r\n\t\tm = x._modInt(m);\r\n\t\twhile(i < j) if(m%lowprimes[i++] == 0) return false;\r\n\t  }\r\n\t  return x._millerRabin(t);\r\n\t}\r\n\r\n\t// (protected) true if probably prime (HAC 4.24, Miller-Rabin)\r\n\tfunction bnpMillerRabin(t) {\r\n\t  var n1 = this.subtract(BigInteger.ONE);\r\n\t  var k = n1.getLowestSetBit();\r\n\t  if(k <= 0) return false;\r\n\t  var r = n1.shiftRight(k);\r\n\t  t = (t+1)>>1;\r\n\t  if(t > lowprimes.length) t = lowprimes.length;\r\n\t  var a = nbi();\r\n\t  for(var i = 0; i < t; ++i) {\r\n\t\ta._fromInt(lowprimes[i]);\r\n\t\tvar y = a.modPow(r,this);\r\n\t\tif(y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\r\n\t\t  var j = 1;\r\n\t\t  while(j++ < k && y.compareTo(n1) != 0) {\r\n\t\t\ty = y.modPowInt(2,this);\r\n\t\t\tif(y.compareTo(BigInteger.ONE) == 0) return false;\r\n\t\t  }\r\n\t\t  if(y.compareTo(n1) != 0) return false;\r\n\t\t}\r\n\t  }\r\n\t  return true;\r\n\t}\r\n\r\n\tdojo.extend(BigInteger, {\r\n\t\t// protected\r\n\t\t_chunkSize:\t\t\tbnpChunkSize,\r\n\t\t_toRadix:\t\t\tbnpToRadix,\r\n\t\t_fromRadix:\t\t\tbnpFromRadix,\r\n\t\t_fromNumber:\t\tbnpFromNumber,\r\n\t\t_bitwiseTo:\t\t\tbnpBitwiseTo,\r\n\t\t_changeBit:\t\t\tbnpChangeBit,\r\n\t\t_addTo:\t\t\t\tbnpAddTo,\r\n\t\t_dMultiply:\t\t\tbnpDMultiply,\r\n\t\t_dAddOffset:\t\tbnpDAddOffset,\r\n\t\t_multiplyLowerTo:\tbnpMultiplyLowerTo,\r\n\t\t_multiplyUpperTo:\tbnpMultiplyUpperTo,\r\n\t\t_modInt:\t\t\tbnpModInt,\r\n\t\t_millerRabin:\t\tbnpMillerRabin,\r\n\r\n\t\t// public\r\n\t\tclone:\t\t\t\tbnClone,\r\n\t\tintValue:\t\t\tbnIntValue,\r\n\t\tbyteValue:\t\t\tbnByteValue,\r\n\t\tshortValue:\t\t\tbnShortValue,\r\n\t\tsignum:\t\t\t\tbnSigNum,\r\n\t\ttoByteArray:\t\tbnToByteArray,\r\n\t\tequals:\t\t\t\tbnEquals,\r\n\t\tmin:\t\t\t\tbnMin,\r\n\t\tmax:\t\t\t\tbnMax,\r\n\t\tand:\t\t\t\tbnAnd,\r\n\t\tor:\t\t\t\t\tbnOr,\r\n\t\txor:\t\t\t\tbnXor,\r\n\t\tandNot:\t\t\t\tbnAndNot,\r\n\t\tnot:\t\t\t\tbnNot,\r\n\t\tshiftLeft:\t\t\tbnShiftLeft,\r\n\t\tshiftRight:\t\t\tbnShiftRight,\r\n\t\tgetLowestSetBit:\tbnGetLowestSetBit,\r\n\t\tbitCount:\t\t\tbnBitCount,\r\n\t\ttestBit:\t\t\tbnTestBit,\r\n\t\tsetBit:\t\t\t\tbnSetBit,\r\n\t\tclearBit:\t\t\tbnClearBit,\r\n\t\tflipBit:\t\t\tbnFlipBit,\r\n\t\tadd:\t\t\t\tbnAdd,\r\n\t\tsubtract:\t\t\tbnSubtract,\r\n\t\tmultiply:\t\t\tbnMultiply,\r\n\t\tdivide:\t\t\t\tbnDivide,\r\n\t\tremainder:\t\t\tbnRemainder,\r\n\t\tdivideAndRemainder:\tbnDivideAndRemainder,\r\n\t\tmodPow:\t\t\t\tbnModPow,\r\n\t\tmodInverse:\t\t\tbnModInverse,\r\n\t\tpow:\t\t\t\tbnPow,\r\n\t\tgcd:\t\t\t\tbnGCD,\r\n\t\tisProbablePrime:\tbnIsProbablePrime\r\n\t});\r\n\r\n\t// BigInteger interfaces not implemented in jsbn:\r\n\r\n\t// BigInteger(int signum, byte[] magnitude)\r\n\t// double doubleValue()\r\n\t// float floatValue()\r\n\t// int hashCode()\r\n\t// long longValue()\r\n\t// static BigInteger valueOf(long val)\r\n\r\n\treturn dojox.math.BigInteger;\r\n});\r\n"]}