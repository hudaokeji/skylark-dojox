{"version":3,"sources":["color/NeutralColorModel.js"],"names":["define","arr","declare","SimpleColorModel","_min","_max","_e","constructor","startColor","endColor","initialize","items","colorFunc","values","sum","min","max","forEach","item","value","Math","push","sort","a","b","neutral","this","computeNeutral","log","getNormalizedValue","pow"],"mappings":";;;;;;;AAAAA,QAAQ,mBAAoB,qBAAsB,sBACjD,SAASC,EAAKC,EAASC,GAEvB,OAAOD,EAAQ,gCAAiCC,GAK/CC,KAAM,EACNC,KAAM,EACNC,GAAI,EAEJC,YAAa,SAASC,EAAYC,KAOlCC,WAAY,SAASC,EAAOC,GAQ3B,IAAIC,KACAC,EAAM,EACNC,EAAM,IACNC,GAAOD,EACXd,EAAIgB,QAAQN,EAAO,SAASO,GAC3B,IAAIC,EAAQP,EAAUM,GACtBH,EAAMK,KAAKL,IAAIA,EAAKI,GACpBH,EAAMI,KAAKJ,IAAIA,EAAKG,GACpBL,GAAOK,EACPN,EAAOQ,KAAKF,KAEbN,EAAOS,KAAK,SAASC,EAAEC,GAAG,OAAOD,EAAIC,IACrC,IAAIC,EAAUC,KAAKC,eAAeZ,EAAKC,EAAKF,EAAKD,GACjDa,KAAKtB,KAAOW,EACZW,KAAKrB,KAAOW,EACTU,KAAKtB,MAAQsB,KAAKrB,MAAQoB,GAAWC,KAAKtB,KAC5CsB,KAAKpB,IAAM,EAEXoB,KAAKpB,GAAKc,KAAKQ,IAAI,IAAMR,KAAKQ,KAAKH,EAAUC,KAAKtB,OAASsB,KAAKrB,KAAOqB,KAAKtB,QAI9EuB,eAAgB,SAASZ,EAAKC,EAAKF,EAAKD,KAcxCgB,mBAAoB,SAASV,GAO5B,OAAGO,KAAKpB,GAAK,EACL,GAERa,GAASA,EAAQO,KAAKtB,OAASsB,KAAKrB,KAAOqB,KAAKtB,MACzCgB,KAAKU,IAAIX,EAAOO,KAAKpB","file":"../../color/NeutralColorModel.js","sourcesContent":["define([\"dojo/_base/array\", \"dojo/_base/declare\", \"./SimpleColorModel\"],\r\n\tfunction(arr, declare, SimpleColorModel){\r\n\t\r\n\treturn declare(\"dojox.color.NeutralColorModel\", SimpleColorModel, {\r\n\t\t// summary:\r\n\t\t//\t\tBase class for color models that return a color from a data value\r\n\t\t//\t\tusing an interpolation between two extremum colors around a neutral value.\r\n\t\t\r\n\t\t_min: 0, \r\n\t\t_max: 0, \r\n\t\t_e: 0,\r\n\t\r\n\t\tconstructor: function(startColor, endColor){\r\n\t\t\t// startColor: dojo/_base/Color\r\n\t\t\t//\t\tThe start color.\r\n\t\t\t// endColor: dojo/_base/Color?\r\n\t\t\t//\t\tThe end color.\r\n\t\t},\r\n\t\r\n\t\tinitialize: function(items, colorFunc){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInitialize the color model from a list of data items and using a function\r\n\t\t\t//\t\tthat returns the value used to compute the color for a given item.\r\n\t\t\t// items: Object[]\r\n\t\t\t//\t\tThe data items. \r\n\t\t\t// colorFunc: Function\r\n\t\t\t//\t\tThe function that returns the value used to compute the color for particular data item.\r\n\t\t\tvar values = [];\r\n\t\t\tvar sum = 0;\r\n\t\t\tvar min = 100000000; \r\n\t\t\tvar max = -min; \r\n\t\t\tarr.forEach(items, function(item){\r\n\t\t\t\tvar value = colorFunc(item);\r\n\t\t\t\tmin = Math.min(min, value);\r\n\t\t\t\tmax = Math.max(max, value);\r\n\t\t\t\tsum += value;\r\n\t\t\t\tvalues.push(value);\r\n\t\t\t});\r\n\t\t\tvalues.sort(function(a,b){return a - b;});\r\n\t\t\tvar neutral = this.computeNeutral(min, max, sum, values);\r\n\t\t\tthis._min = min;\r\n\t\t\tthis._max = max;\r\n\t\t\tif(this._min == this._max || neutral == this._min){\r\n\t\t\t\tthis._e = -1;\r\n\t\t\t}else{\r\n\t\t\t\tthis._e = Math.log(.5) / Math.log((neutral - this._min) / (this._max - this._min));\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tcomputeNeutral: function(min, max, sum, values){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn the neutral value. This can be for example the mean or average value.\r\n\t\t\t//\t\tThis function must be implemented by implementations.\r\n\t\t\t// min: Number\r\n\t\t\t//\t\tThe minimal value.\r\n\t\t\t// max: Number\r\n\t\t\t//\t\tThe maximum value.\r\n\t\t\t// sum: Number\r\n\t\t\t//\t\tThe sum of all values.\r\n\t\t\t// values: Number[]\r\n\t\t\t//\t\tThe sorted array of values used to compute colors.\r\n\t\t},\r\n\t\t\r\n\t\tgetNormalizedValue: function(value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn the normalized (between 0 and 1) value for a given data value.\r\n\t\t\t//\t\tThis implementation uses an power function to map neutral value to 0.5\r\n\t\t\t//\t\tand distribute other values around it.\r\n\t\t\t// value: Number\r\n\t\t\t//\t\tThe data value\t\t\t\r\n\t\t\tif(this._e < 0){\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tvalue = (value - this._min) / (this._max - this._min);\r\n\t\t\treturn Math.pow(value, this._e);\r\n\t\t}\r\n\t});\r\n\r\n});\r\n"]}