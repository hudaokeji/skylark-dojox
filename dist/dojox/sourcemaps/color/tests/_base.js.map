{"version":3,"sources":["color/tests/_base.js"],"names":["dojo","provide","require","tests","register","t","assertEqual","dojox","color","fromCmy","c","m","y","Color","r","g","b","fromCmyk","fromHsl","h","s","l","fromHsv","v","grey","red","green","blue","yellow","toCmy","toCmyk","toHsl","toHsv"],"mappings":"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","file":"../../../color/tests/_base.js","sourcesContent":["dojo.provide(\"dojox.color.tests._base\");\r\ndojo.require(\"dojox.color\");\r\n\r\n/************************************************************\r\n *\tNote that some color translations are not exact,\r\n *\tdue to the need to round calculations in translation.\r\n *\r\n *\tThese tests work with grey, the primary colors and\r\n *\tone secondary color to ensure that extreme calculation\r\n *\tis correct.\r\n ************************************************************/\r\n\r\ntests.register(\"dojox.color.tests._base\", [\r\n\tfunction testStaticMethods(t){\r\n\t\t//\tfromCmy\r\n\t\tt.assertEqual(dojox.color.fromCmy({ c:50, m:50, y:50}), new dojo.Color({ r:128, g:128, b:128 }));\r\n\t\tt.assertEqual(dojox.color.fromCmy({ c:0, m:100, y:100}), new dojo.Color({ r:255, g:0, b:0 }));\r\n\t\tt.assertEqual(dojox.color.fromCmy({ c:100, m:0, y:100}), new dojo.Color({ r:0, g:255, b:0 }));\r\n\t\tt.assertEqual(dojox.color.fromCmy({ c:100, m:100, y:0}), new dojo.Color({ r:0, g:0, b:255 }));\r\n\t\tt.assertEqual(dojox.color.fromCmy({ c:0, m:0, y:100}), new dojo.Color({ r:255, g:255, b:0 }));\r\n\r\n\t\t//\tfromCmyk\r\n\t\tt.assertEqual(dojox.color.fromCmyk({ c:0, m:0, y:0, b:50}), new dojo.Color({ r:128, g:128, b:128 }));\r\n\t\tt.assertEqual(dojox.color.fromCmyk({ c:0, m:100, y:100, b:0}), new dojo.Color({ r:255, g:0, b:0 }));\r\n\t\tt.assertEqual(dojox.color.fromCmyk({ c:100, m:0, y:100, b:0}), new dojo.Color({ r:0, g:255, b:0 }));\r\n\t\tt.assertEqual(dojox.color.fromCmyk({ c:100, m:100, y:0, b:0}), new dojo.Color({ r:0, g:0, b:255 }));\r\n\t\tt.assertEqual(dojox.color.fromCmyk({ c:0, m:0, y:100, b:0}), new dojo.Color({ r:255, g:255, b:0 }));\r\n\r\n\t\t//\tfromHsl\r\n\t\tt.assertEqual(dojox.color.fromHsl({ h:0, s:0, l:50}), new dojo.Color({ r:128, g:128, b:128 }));\r\n\t\tt.assertEqual(dojox.color.fromHsl({ h:0, s:100, l:50}), new dojo.Color({ r:255, g:0, b:0 }));\r\n\t\tt.assertEqual(dojox.color.fromHsl({ h:120, s:100, l:50}), new dojo.Color({ r:0, g:255, b:0 }));\r\n\t\tt.assertEqual(dojox.color.fromHsl({ h:240, s:100, l:50}), new dojo.Color({ r:0, g:0, b:255 }));\r\n\t\tt.assertEqual(dojox.color.fromHsl({ h:60, s:100, l:50}), new dojo.Color({ r:255, g:255, b:0 }));\r\n\r\n\t\t//\tfromHsv\r\n\t\tt.assertEqual(dojox.color.fromHsv({ h:0, s:0, v:50}), new dojo.Color({ r:128, g:128, b:128 }));\r\n\t\tt.assertEqual(dojox.color.fromHsv({ h:0, s:100, v:100}), new dojo.Color({ r:255, g:0, b:0 }));\r\n\t\tt.assertEqual(dojox.color.fromHsv({ h:120, s:100, v:100}), new dojo.Color({ r:0, g:255, b:0 }));\r\n\t\tt.assertEqual(dojox.color.fromHsv({ h:240, s:100, v:100}), new dojo.Color({ r:0, g:0, b:255 }));\r\n\t\tt.assertEqual(dojox.color.fromHsv({ h:60, s:100, v:100}), new dojo.Color({ r:255, g:255, b:0 }));\r\n\t},\r\n\tfunction testColorExtensions(t){\r\n\t\tvar grey=new dojox.color.Color({ r:128, g:128, b:128 });\r\n\t\tvar red=new dojox.color.Color({ r:255, g:0, b:0 });\r\n\t\tvar green=new dojox.color.Color({ r:0, g:255, b:0 });\r\n\t\tvar blue=new dojox.color.Color({ r:0, g:0, b:255 });\r\n\t\tvar yellow=new dojox.color.Color({ r:255, g:255, b:0 });\r\n\r\n\t\t//\ttoCmy\r\n\t\tt.assertEqual(grey.toCmy(), { c:50, m:50, y:50 });\r\n\t\tt.assertEqual(red.toCmy(), { c:0, m:100, y:100 });\r\n\t\tt.assertEqual(green.toCmy(), { c:100, m:0, y:100 });\r\n\t\tt.assertEqual(blue.toCmy(), { c:100, m:100, y:0 });\r\n\t\tt.assertEqual(yellow.toCmy(), { c:0, m:0, y:100 });\r\n\r\n\t\t//\ttoCmyk\r\n\t\tt.assertEqual(grey.toCmyk(), { c:0, m:0, y:0, b:50 });\r\n\t\tt.assertEqual(red.toCmyk(), { c:0, m:100, y:100, b:0 });\r\n\t\tt.assertEqual(green.toCmyk(), { c:100, m:0, y:100, b:0 });\r\n\t\tt.assertEqual(blue.toCmyk(), { c:100, m:100, y:0, b:0 });\r\n\t\tt.assertEqual(yellow.toCmyk(), { c:0, m:0, y:100, b:0 });\r\n\r\n\t\t//\ttoHsl\r\n\t\tt.assertEqual(grey.toHsl(), { h:0, s:0, l:50 });\r\n\t\tt.assertEqual(red.toHsl(), { h:0, s:100, l:50 });\r\n\t\tt.assertEqual(green.toHsl(), { h:120, s:100, l:50 });\r\n\t\tt.assertEqual(blue.toHsl(), { h:240, s:100, l:50 });\r\n\t\tt.assertEqual(yellow.toHsl(), { h:60, s:100, l:50 });\r\n\r\n\t\t//\ttoHsv\r\n\t\tt.assertEqual(grey.toHsv(), { h:0, s:0, v:50 });\r\n\t\tt.assertEqual(red.toHsv(), { h:0, s:100, v:100 });\r\n\t\tt.assertEqual(green.toHsv(), { h:120, s:100, v:100 });\r\n\t\tt.assertEqual(blue.toHsv(), { h:240, s:100, v:100 });\r\n\t\tt.assertEqual(yellow.toHsv(), { h:60, s:100, v:100 });\r\n\t}\r\n]);\r\n"]}