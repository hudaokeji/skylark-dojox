{"version":3,"sources":["charting/widget/SelectableLegend.js"],"names":["define","arrayUtil","declare","query","hub","Color","Legend","CheckBox","Highlight","df","fx","keys","dom","domProp","registry","FocusManager","constructor","legend","this","index","horizontalLength","_getHrizontalLength","forEach","legends","item","i","attr","firstLabel","connect","active","domNode","horizontal","Math","min","length","_onKeyEvent","e","keyCode","TAB","max","LEFT_ARROW","RIGHT_ARROW","UP_ARROW","DOWN_ARROW","_moveToFocus","Event","stop","focus","FakeHighlight","outline","transitionFill","transitionStroke","autoScale","postCreate","legendAnim","_cbs","inherited","arguments","refresh","_clearLabels","_applyEvents","cbs","pop","destroyRecursive","_addLabel","dyn","label","legendNodes","legendBody","currentLegendNode","push","checkbox","checked","place","clabel","set","id","chart","dirty","targetData","plotName","seriesName","_isPie","stack","name","series","plot","legendCheckBox","byNode","_isHidden","toogle","get","stopPropagation","legendIcon","iconShape","_getFilledShape","_surfaces","children","event","_highlight","indexOf","getPlot","runFilter","hidden","hide","filter","render","isOff","anim","_getAnim","isPie","type","formatEventType","shape","run","process","_getShapes","o","duration","shapes","decrease","group","_isCandleStick","candle","_getTransitionFill","plots","declaredClass","theme","plotarea","fill","getFill","destroy"],"mappings":";;;;;;;AAAAA,QAAQ,mBACN,qBACA,aACA,qBACA,mBACA,WACA,sBACA,wBACA,wBACA,eACA,YACA,qBACA,gBACA,kBACC,SAASC,EAAWC,EAASC,EAAOC,EAAKC,EAAOC,EAAQC,EAAUC,EAAWC,EAAIC,EAAIC,EAAMC,EAAKC,EAASC,GAE3G,IAAIC,EAAeb,EAAQ,MAM1Bc,YAAa,SAASC,GACrBC,KAAKD,OAASA,EACdC,KAAKC,MAAQ,EACbD,KAAKE,iBAAmBF,KAAKG,sBAC7BpB,EAAUqB,QAAQL,EAAOM,QAAS,SAASC,EAAMC,GAC7CA,EAAI,GACNtB,EAAM,QAASqB,GAAME,KAAK,YAAa,KAGzCR,KAAKS,WAAaxB,EAAM,QAASc,EAAOM,QAAQ,IAAI,GACpDnB,EAAIwB,QAAQV,KAAKS,WAAY,QAAST,KAAM,WAAWA,KAAKD,OAAOY,QAAS,IAC5EzB,EAAIwB,QAAQV,KAAKD,OAAOa,QAAS,UAAWZ,KAAM,gBAEnDG,oBAAqB,WACpB,IAAIU,EAAab,KAAKD,OAAOc,WAC7B,MAAwB,iBAAdA,EACFC,KAAKC,IAAIF,EAAYb,KAAKD,OAAOM,QAAQW,QACvCH,EAGFb,KAAKD,OAAOM,QAAQW,OAFpB,GAKTC,YAAa,SAASC,GAErB,GAAIlB,KAAKD,OAAOY,OAIhB,GAAGO,EAAEC,SAAW1B,EAAK2B,IAArB,CAKA,IAAIC,EAAMrB,KAAKD,OAAOM,QAAQW,OAC9B,OAAOE,EAAEC,SACR,KAAK1B,EAAK6B,WACTtB,KAAKC,QACFD,KAAKC,MAAQ,IACfD,KAAKC,OAASoB,GAEf,MACD,KAAK5B,EAAK8B,YACTvB,KAAKC,QACFD,KAAKC,OAASoB,IAChBrB,KAAKC,OAASoB,GAEf,MACD,KAAK5B,EAAK+B,SACNxB,KAAKC,MAAQD,KAAKE,kBAAoB,IACxCF,KAAKC,OAASD,KAAKE,kBAEpB,MACD,KAAKT,EAAKgC,WACNzB,KAAKC,MAAQD,KAAKE,iBAAmBmB,IACvCrB,KAAKC,OAASD,KAAKE,kBAEpB,MACD,QACC,OAEFF,KAAK0B,eACLC,MAAMC,KAAKV,QAhCVlB,KAAKD,OAAOY,QAAS,GAkCvBe,aAAc,WACbzC,EAAM,QAASe,KAAKD,OAAOM,QAAQL,KAAKC,QAAQ,GAAG4B,WAIjDC,EAAgB9C,EAAQM,GAC3BoB,QAAS,eA6MV,OA1MuB1B,EAAQ,yCAA0CI,GAKxE2C,SAAW,EACXC,eAAiB,KACjBC,iBAAkB,KAIlBC,WAAW,EAEXC,WAAY,WACXnC,KAAKK,WACLL,KAAKoC,cACLpC,KAAKqC,QACLrC,KAAKsC,UAAUC,YAEhBC,QAAS,WACRxC,KAAKK,WACLL,KAAKyC,eACLzC,KAAKsC,UAAUC,WACfvC,KAAK0C,eACL,IAAI7C,EAAaG,OAElByC,aAAc,WAEb,IADA,IAAIE,EAAM3C,KAAKqC,KACTM,EAAI3B,QACT2B,EAAIC,MAAMC,oBAGZC,UAAW,SAASC,EAAKC,GACxBhD,KAAKsC,UAAUC,WAEf,IAAIU,EAAchE,EAAM,KAAMe,KAAKkD,YAC/BC,EAAoBF,EAAYA,EAAYjC,OAAS,GACzDhB,KAAKK,QAAQ+C,KAAKD,GAClB,IAAIE,EAAW,IAAIhE,GAAUiE,SAAS,IACtCtD,KAAKqC,KAAKe,KAAKC,GACf3D,EAAI6D,MAAMF,EAASzC,QAASuC,EAAmB,SAE/C,IAAIK,EAASvE,EAAM,QAASkE,GAAmB,GAC/CxD,EAAQ8D,IAAID,EAAQ,MAAOH,EAASK,KAErChB,aAAc,WAMV1C,KAAK2D,MAAMC,OAGd7E,EAAUqB,QAAQJ,KAAKK,QAAS,SAASN,EAAQQ,GAChD,IAAIsD,EAAYC,EAAUC,EACvB/D,KAAKgE,UACPH,EAAa7D,KAAK2D,MAAMM,MAAM,GAC9BH,EAAWD,EAAWK,KACtBH,EAAa/D,KAAK2D,MAAMQ,OAAO,GAAGD,OAElCL,EAAa7D,KAAK2D,MAAMQ,OAAO5D,GAC/BuD,EAAWD,EAAWO,KACtBL,EAAaF,EAAWK,MAGzB,IAAIG,EAAiBzE,EAAS0E,OAAOrF,EAAM,iBAAkBc,GAAQ,IACrEsE,EAAeZ,IAAI,WAAYzD,KAAKuE,UAAUT,EAAUvD,IACxDrB,EAAIwB,QAAQ2D,EAAgB,UAAWrE,KAAM,SAASkB,GACrDlB,KAAKwE,OAAOV,EAAUvD,GAAI8D,EAAeI,IAAI,YAC7CvD,EAAEwD,oBAGH,IAAIC,EAAa1F,EAAM,mBAAoBc,GAAQ,GAClD6E,EAAY5E,KAAK6E,gBAAgB7E,KAAK8E,UAAUvE,GAAGwE,UACpDhG,EAAUqB,SAAS,eAAgB,gBAAiB,SAAS4E,GAC5D9F,EAAIwB,QAAQiE,EAAYK,EAAOhF,KAAM,SAASkB,GAC7ClB,KAAKiF,WAAW/D,EAAG0D,EAAWrE,GAAI8D,EAAeI,IAAI,WAAYV,EAAYD,MAE5E9D,OACFA,OAEHuE,UAAW,SAAST,EAAU7D,GAC7B,OAAGD,KAAKgE,UACqE,GAArEjF,EAAUmG,QAAQlF,KAAK2D,MAAMwB,QAAQrB,GAAUsB,UAAWnF,GAE1DD,KAAK2D,MAAMQ,OAAOlE,GAAOoF,QAGlCb,OAAQ,SAASV,EAAU7D,EAAOqF,GACjC,IAAIlB,EAAQpE,KAAK2D,MAAMwB,QAAQrB,GAC5B9D,KAAKgE,UACyC,GAA7CjF,EAAUmG,QAAQd,EAAKgB,UAAWnF,GAChCqF,IACHlB,EAAKgB,UAAYrG,EAAUwG,OAAOnB,EAAKgB,UAAW,SAAS9E,GAC1D,OAAOA,GAAQL,KAIdqF,GACFlB,EAAKgB,UAAUhC,KAAKnD,GAItBD,KAAK2D,MAAMQ,OAAOlE,GAAOoF,OAASC,EAEnCtF,KAAKkC,UAAYlC,KAAK2D,MAAMC,OAAQ,EAAMQ,EAAKR,OAAQ,EACvD5D,KAAK2D,MAAM6B,UAEZP,WAAY,SAAS/D,EAAG0D,EAAW3E,EAAOwF,EAAO1B,EAAYD,GAC5D,IAAI2B,EAAM,CACT,IAAIC,EAAO1F,KAAK2F,SAAS7B,GACxB8B,EAAQ5F,KAAKgE,SACb6B,EAmFJ,SAAyBA,GACxB,MAAW,cAARA,EAA4B,cACpB,cAARA,EAA4B,aACxB,KAAOA,EAtFJC,CAAgB5E,EAAE2E,MAEtB7C,GACH+C,MAAOnB,EACP3E,MAAO2F,EAAQ,SAAW3F,EAAQ,SAClC+F,KAAM9B,KAAMH,GACZ8B,KAAMA,GAEPH,EAAKO,QAAQjD,GAEbjE,EAAUqB,QAAQJ,KAAKkG,WAAWjG,EAAO6D,GAAW,SAASiC,EAAOxF,GACnE,IAAI4F,GACHJ,MAAOA,EACP9F,MAAO2F,EAAQ3F,EAAQM,EACvByF,KAAM9B,KAAMH,GACZ8B,KAAMA,GAEPH,EAAKU,SAAW,IAChBV,EAAKO,QAAQE,OAIhBD,WAAY,SAAS3F,EAAGuD,GACvB,IAAIuC,KACJ,GAAGrG,KAAKgE,SAAS,CAChB,IAAIsC,EAAW,EACfvH,EAAUqB,QAAQJ,KAAK2D,MAAMwB,QAAQrB,GAAUsB,UAAW,SAAS9E,GAC/DC,EAAID,GACNgG,MAGFD,EAAOjD,KAAKpD,KAAK2D,MAAMM,MAAM,GAAGsC,MAAMxB,SAASxE,EAAE+F,SACzCtG,KAAKwG,eAAe1C,GAC5B/E,EAAUqB,QAAQJ,KAAK2D,MAAMQ,OAAO5D,GAAGgG,MAAMxB,SAAU,SAASwB,GAC/DxH,EAAUqB,QAAQmG,EAAMxB,SAAU,SAAS0B,GAC1C1H,EAAUqB,QAAQqG,EAAO1B,SAAU,SAASgB,GACrB,QAAnBA,EAAMA,MAAMF,MACdQ,EAAOjD,KAAK2C,SAMhBM,EAASrG,KAAK2D,MAAMQ,OAAO5D,GAAGgG,MAAMxB,SAErC,OAAOsB,GAERV,SAAU,SAAS7B,GAIlB,OAHI9D,KAAKoC,WAAW0B,KACnB9D,KAAKoC,WAAW0B,GAAY,IAAIhC,EAAc9B,KAAK2D,MAAOG,IAEpD9D,KAAKoC,WAAW0B,IAExB4C,mBAAoB,SAAS5C,GAG5B,OAA2G,GAAxG9D,KAAK2D,MAAMM,MAAMjE,KAAK2D,MAAMgD,MAAM7C,IAAW8C,cAAc1B,QAAQ,iCAC9DlF,KAAK2D,MAAMkD,MAAMC,SAASC,KAE3B,MAERlC,gBAAiB,SAASwB,GAIzB,IADA,IAAI9F,EAAI,EACF8F,EAAO9F,IAAG,CACf,GAAG8F,EAAO9F,GAAGyG,UAAU,OAAOX,EAAO9F,GACrCA,IAED,OAAO,MAERyD,OAAQ,WACP,MAA4C,6BAArChE,KAAK2D,MAAMM,MAAM,GAAG2C,eAE5BJ,eAAgB,SAAS1C,GACxB,MAAqE,sCAA9D9D,KAAK2D,MAAMM,MAAMjE,KAAK2D,MAAMgD,MAAM7C,IAAW8C,eAErDK,QAAS,WACRjH,KAAKyC,eACLzC,KAAKsC,UAAUC","file":"../../../charting/widget/SelectableLegend.js","sourcesContent":["define([\"dojo/_base/array\", \r\n\t\t\"dojo/_base/declare\", \r\n\t\t\"dojo/query\",\r\n\t\t\"dojo/_base/connect\", \r\n\t\t\"dojo/_base/Color\", \r\n\t\t\"./Legend\", \r\n\t\t\"dijit/form/CheckBox\", \r\n\t\t\"../action2d/Highlight\",\r\n\t\t\"dojox/lang/functional\", \r\n\t\t\"dojox/gfx/fx\", \r\n\t\t\"dojo/keys\", \r\n\t\t\"dojo/dom-construct\",\r\n\t\t\"dojo/dom-prop\",\r\n\t\t\"dijit/registry\"\r\n], function(arrayUtil, declare, query, hub, Color, Legend, CheckBox, Highlight, df, fx, keys, dom, domProp, registry){\r\n\r\n\tvar FocusManager = declare(null, {\r\n\t\t// summary:\r\n\t\t//\t\tIt will take legend as a tab stop, and using\r\n\t\t//\t\tcursor keys to navigate labels within the legend.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tconstructor: function(legend){\r\n\t\t\tthis.legend = legend;\r\n\t\t\tthis.index = 0;\r\n\t\t\tthis.horizontalLength = this._getHrizontalLength();\r\n\t\t\tarrayUtil.forEach(legend.legends, function(item, i){\r\n\t\t\t\tif(i > 0){\r\n\t\t\t\t\tquery(\"input\", item).attr(\"tabindex\", -1);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.firstLabel = query(\"input\", legend.legends[0])[0];\r\n\t\t\thub.connect(this.firstLabel, \"focus\", this, function(){this.legend.active = true;});\r\n\t\t\thub.connect(this.legend.domNode, \"keydown\", this, \"_onKeyEvent\");\r\n\t\t},\r\n\t\t_getHrizontalLength: function(){\r\n\t\t\tvar horizontal = this.legend.horizontal;\r\n\t\t\tif(typeof horizontal == \"number\"){\r\n\t\t\t\treturn Math.min(horizontal, this.legend.legends.length);\r\n\t\t\t}else if(!horizontal){\r\n\t\t\t\treturn 1;\r\n\t\t\t}else{\r\n\t\t\t\treturn this.legend.legends.length;\r\n\t\t\t}\r\n\t\t},\r\n\t\t_onKeyEvent: function(e){\r\n\t\t\t//\tif not focused\r\n\t\t\tif(!this.legend.active){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t//\tlose focus\r\n\t\t\tif(e.keyCode == keys.TAB){\r\n\t\t\t\tthis.legend.active = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t//\thandle with arrow keys\r\n\t\t\tvar max = this.legend.legends.length;\r\n\t\t\tswitch(e.keyCode){\r\n\t\t\t\tcase keys.LEFT_ARROW:\r\n\t\t\t\t\tthis.index--;\r\n\t\t\t\t\tif(this.index < 0){\r\n\t\t\t\t\t\tthis.index += max;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase keys.RIGHT_ARROW:\r\n\t\t\t\t\tthis.index++;\r\n\t\t\t\t\tif(this.index >= max){\r\n\t\t\t\t\t\tthis.index -= max;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase keys.UP_ARROW:\r\n\t\t\t\t\tif(this.index - this.horizontalLength >= 0){\r\n\t\t\t\t\t\tthis.index -= this.horizontalLength;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase keys.DOWN_ARROW:\r\n\t\t\t\t\tif(this.index + this.horizontalLength < max){\r\n\t\t\t\t\t\tthis.index += this.horizontalLength;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._moveToFocus();\r\n\t\t\tEvent.stop(e);\r\n\t\t},\r\n\t\t_moveToFocus: function(){\r\n\t\t\tquery(\"input\", this.legend.legends[this.index])[0].focus();\r\n\t\t}\r\n\t});\r\n\t\r\n\tvar FakeHighlight = declare(Highlight, {\r\n\t\tconnect: function(){}\r\n\t});\r\n\t\r\n\tvar SelectableLegend = declare(\"dojox.charting.widget.SelectableLegend\", Legend, {\r\n\t\t// summary:\r\n\t\t//\t\tAn enhanced chart legend supporting interactive events on data series\r\n\t\t\r\n\t\t//\ttheme component\r\n\t\toutline:\t\t\tfalse,\t//\toutline of vanished data series\r\n\t\ttransitionFill:\t\tnull,\t//\tfill of deselected data series\r\n\t\ttransitionStroke:\tnull,\t//\tstroke of deselected data series\r\n\r\n\t\t// autoScale: Boolean\r\n\t\t//\t\tWhether the scales of the chart are recomputed when selecting/unselecting a series in the legend. Default is false.\r\n\t\tautoScale: false,\r\n\t\t\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.legends = [];\r\n\t\t\tthis.legendAnim = {};\r\n\t\t\tthis._cbs = [];\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\t\trefresh: function(){\r\n\t\t\tthis.legends = [];\r\n\t\t\tthis._clearLabels();\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._applyEvents();\r\n\t\t\tnew FocusManager(this);\r\n\t\t},\r\n\t\t_clearLabels: function(){\r\n\t\t\tvar cbs = this._cbs;\r\n\t\t\twhile(cbs.length){\r\n\t\t\t\tcbs.pop().destroyRecursive();\r\n\t\t\t}\r\n\t\t},\r\n\t\t_addLabel: function(dyn, label){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\t//\tcreate checkbox\r\n\t\t\tvar legendNodes = query(\"td\", this.legendBody);\r\n\t\t\tvar currentLegendNode = legendNodes[legendNodes.length - 1];\r\n\t\t\tthis.legends.push(currentLegendNode);\r\n\t\t\tvar checkbox = new CheckBox({checked: true});\r\n\t\t\tthis._cbs.push(checkbox);\r\n\t\t\tdom.place(checkbox.domNode, currentLegendNode, \"first\");\r\n\t\t\t// connect checkbox and existed label\r\n\t\t\tvar clabel = query(\"label\", currentLegendNode)[0];\r\n\t\t\tdomProp.set(clabel, \"for\", checkbox.id);\r\n\t\t},\r\n\t\t_applyEvents: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tApply click-event on checkbox and hover-event on legend icon,\r\n\t\t\t//\t\thighlight data series or toggle it.\r\n\t\t\t\r\n\t\t\t// if the chart has not yet been refreshed it will crash here (targetData.group == null)\r\n\t\t\tif(this.chart.dirty){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tarrayUtil.forEach(this.legends, function(legend, i){\r\n\t\t\t\tvar targetData, plotName, seriesName;\r\n\t\t\t\tif(this._isPie()){\r\n\t\t\t\t\ttargetData = this.chart.stack[0];\r\n\t\t\t\t\tplotName = targetData.name;\r\n\t\t\t\t\tseriesName = this.chart.series[0].name;\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttargetData = this.chart.series[i];\r\n\t\t\t\t\tplotName = targetData.plot;\r\n\t\t\t\t\tseriesName = targetData.name;\r\n\t\t\t\t}\r\n\t\t\t\t//\ttoggle action\r\n\t\t\t\tvar legendCheckBox = registry.byNode(query(\".dijitCheckBox\", legend)[0]);\r\n\t\t\t\tlegendCheckBox.set(\"checked\", !this._isHidden(plotName, i));\r\n\t\t\t\thub.connect(legendCheckBox, \"onClick\", this, function(e){\r\n\t\t\t\t\tthis.toogle(plotName, i, !legendCheckBox.get(\"checked\"));\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t});\r\n\t\t\t\t//\thighlight action\r\n\t\t\t\tvar legendIcon = query(\".dojoxLegendIcon\", legend)[0],\r\n\t\t\t\t\ticonShape = this._getFilledShape(this._surfaces[i].children);\r\n\t\t\t\tarrayUtil.forEach([\"onmouseenter\", \"onmouseleave\"], function(event){\r\n\t\t\t\t\thub.connect(legendIcon, event, this, function(e){\r\n\t\t\t\t\t\tthis._highlight(e, iconShape, i, !legendCheckBox.get(\"checked\"), seriesName, plotName);\r\n\t\t\t\t\t});\r\n\t\t\t\t}, this);\r\n\t\t\t},this);\r\n\t\t},\r\n\t\t_isHidden: function(plotName, index){\r\n\t\t\tif(this._isPie()){\r\n\t\t\t\treturn arrayUtil.indexOf(this.chart.getPlot(plotName).runFilter, index) != -1;\r\n\t\t\t}else{\r\n\t\t\t\treturn this.chart.series[index].hidden\r\n\t\t\t}\r\n\t\t},\r\n\t\ttoogle: function(plotName, index, hide){\r\n\t\t\tvar plot =  this.chart.getPlot(plotName);\r\n\t\t\tif(this._isPie()){\r\n\t\t\t\tif(arrayUtil.indexOf(plot.runFilter, index) != -1){\r\n\t\t\t\t\tif(!hide){\r\n\t\t\t\t\t\tplot.runFilter = arrayUtil.filter(plot.runFilter, function(item){\r\n\t\t\t\t\t\t\treturn item != index;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(hide){\r\n\t\t\t\t\t\tplot.runFilter.push(index);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{ \r\n\t\t\t\tthis.chart.series[index].hidden = hide;\r\n\t\t\t}\r\n\t\t\tthis.autoScale ? this.chart.dirty = true: plot.dirty = true;\r\n\t\t\tthis.chart.render();\r\n\t\t},\r\n\t\t_highlight: function(e, iconShape, index, isOff, seriesName, plotName){\r\n\t\t\tif(!isOff){\r\n\t\t\t\tvar anim = this._getAnim(plotName),\r\n\t\t\t\t\tisPie = this._isPie(),\r\n\t\t\t\t\ttype = formatEventType(e.type);\r\n\t\t\t\t// highlight the label icon,\r\n\t\t\t\tvar label = {\r\n\t\t\t\t\tshape: iconShape,\r\n\t\t\t\t\tindex: isPie ? \"legend\" + index : \"legend\",\r\n\t\t\t\t\trun: {name: seriesName},\r\n\t\t\t\t\ttype: type\r\n\t\t\t\t};\r\n\t\t\t\tanim.process(label);\r\n\t\t\t\t//\thighlight the data items\r\n\t\t\t\tarrayUtil.forEach(this._getShapes(index, plotName), function(shape, i){\r\n\t\t\t\t\tvar o = {\r\n\t\t\t\t\t\tshape: shape,\r\n\t\t\t\t\t\tindex: isPie ? index : i,\r\n\t\t\t\t\t\trun: {name: seriesName},\r\n\t\t\t\t\t\ttype: type\r\n\t\t\t\t\t};\r\n\t\t\t\t\tanim.duration = 100;\r\n\t\t\t\t\tanim.process(o);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\t_getShapes: function(i, plotName){\r\n\t\t\tvar shapes = [];\r\n\t\t\tif(this._isPie()){\r\n\t\t\t\tvar decrease = 0;\r\n\t\t\t\tarrayUtil.forEach(this.chart.getPlot(plotName).runFilter, function(item){\r\n\t\t\t\t\tif(i > item){\r\n\t\t\t\t\t\tdecrease++;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tshapes.push(this.chart.stack[0].group.children[i-decrease]);\r\n\t\t\t}else if(this._isCandleStick(plotName)){\r\n\t\t\t\tarrayUtil.forEach(this.chart.series[i].group.children, function(group){\r\n\t\t\t\t\tarrayUtil.forEach(group.children, function(candle){\r\n\t\t\t\t\t\tarrayUtil.forEach(candle.children, function(shape){\r\n\t\t\t\t\t\t\tif(shape.shape.type !=\"line\"){\r\n\t\t\t\t\t\t\t\tshapes.push(shape);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\tshapes = this.chart.series[i].group.children;\r\n\t\t\t}\r\n\t\t\treturn shapes;\r\n\t\t},\r\n\t\t_getAnim: function(plotName){\r\n\t\t\tif(!this.legendAnim[plotName]){\r\n\t\t\t\tthis.legendAnim[plotName] = new FakeHighlight(this.chart, plotName);\r\n\t\t\t}\r\n\t\t\treturn this.legendAnim[plotName];\r\n\t\t},\r\n\t\t_getTransitionFill: function(plotName){\r\n\t\t\t// Since series of stacked charts all start from the base line,\r\n\t\t\t// fill the \"front\" series with plotarea color to make it disappear .\r\n\t\t\tif(this.chart.stack[this.chart.plots[plotName]].declaredClass.indexOf(\"dojox.charting.plot2d.Stacked\") != -1){\r\n\t\t\t\treturn this.chart.theme.plotarea.fill;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\t_getFilledShape: function(shapes){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet filled shape in legend icon which would be highlighted when hovered\r\n\t\t\tvar i = 0;\r\n\t\t\twhile(shapes[i]){\r\n\t\t\t\tif(shapes[i].getFill())return shapes[i];\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\t_isPie: function(){\r\n\t\t\treturn this.chart.stack[0].declaredClass == \"dojox.charting.plot2d.Pie\";\r\n\t\t},\r\n\t\t_isCandleStick: function(plotName){\r\n\t\t\treturn this.chart.stack[this.chart.plots[plotName]].declaredClass == \"dojox.charting.plot2d.Candlesticks\";\r\n\t\t},\r\n\t\tdestroy: function(){\r\n\t\t\tthis._clearLabels();\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n\t\r\n\tfunction formatEventType(type){\r\n\t\tif(type == \"mouseenter\")return \"onmouseover\";\r\n\t\tif(type == \"mouseleave\")return \"onmouseout\";\r\n\t\treturn \"on\" + type;\r\n\t}\r\n\r\n\treturn SelectableLegend;\r\n});\r\n"]}