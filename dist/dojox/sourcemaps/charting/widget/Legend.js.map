{"version":3,"sources":["charting/widget/Legend.js"],"names":["define","declare","_WidgetBase","gfx","arr","has","BidiLegend","df","dom","domConstruct","domClass","registry","Legend","chartRef","horizontal","swatchSize","legendBody","postCreate","this","chart","byId","byNode","console","log","refresh","buildRendering","domNode","create","role","aria-label","class","inherited","arguments","destroy","_surfaces","forEach","surface","lastChild","add","_tr","_inrow","s","series","length","stack","declaredClass","t","run","data","filteredRun","map","slices","foldl","x","i","_addLabel","dyn","_getLabel","legend","text","y","name","label","wrapper","icon","div","style","width","height","float","appendChild","_makeIcon","innerHTML","String","dir","getTextDir","mb","h","w","createSurface","push","fill","createRect","setFill","setStroke","stroke","marker","line","x1","y1","x2","y2","createLine","c","createPath","path","markerFill","markerStroke"],"mappings":"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","file":"../../../charting/widget/Legend.js","sourcesContent":["define([\"dojo/_base/declare\", \"dijit/_WidgetBase\", \"dojox/gfx\",\"dojo/_base/array\", \"dojo/has\", \"dojo/has!dojo-bidi?../bidi/widget/Legend\",\r\n\t\t\"dojox/lang/functional\", \"dojo/dom\", \"dojo/dom-construct\", \"dojo/dom-class\",\"dijit/registry\"],\r\n\t\tfunction(declare, _WidgetBase, gfx, arr, has, BidiLegend, df,\r\n\t\t\t\tdom, domConstruct, domClass, registry){\r\n\r\n\tvar Legend = declare(has(\"dojo-bidi\")? \"dojox.charting.widget.NonBidiLegend\" : \"dojox.charting.widget.Legend\", _WidgetBase, {\r\n\t\t// summary:\r\n\t\t//\t\tA legend for a chart. A legend contains summary labels for\r\n\t\t//\t\teach series of data contained in the chart.\r\n\t\t//\t\t\r\n\t\t//\t\tSet the horizontal attribute to boolean false to layout legend labels vertically.\r\n\t\t//\t\tSet the horizontal attribute to a number to layout legend labels in horizontal\r\n\t\t//\t\trows each containing that number of labels (except possibly the last row).\r\n\t\t//\t\t\r\n\t\t//\t\t(Line or Scatter charts (colored lines with shape symbols) )\r\n\t\t//\t\t-o- Series1\t\t-X- Series2\t\t-v- Series3\r\n\t\t//\t\t\r\n\t\t//\t\t(Area/Bar/Pie charts (letters represent colors))\r\n\t\t//\t\t[a] Series1\t\t[b] Series2\t\t[c] Series3\r\n\r\n\t\tchartRef:   \"\",\r\n\t\thorizontal: true,\r\n\t\tswatchSize: 18,\r\n\r\n\t\tlegendBody: null,\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tif(!this.chart && this.chartRef){\r\n\t\t\t\tthis.chart = registry.byId(this.chartRef) || registry.byNode(dom.byId(this.chartRef));\r\n\t\t\t\tif(!this.chart){\r\n\t\t\t\t\tconsole.log(\"Could not find chart instance with id: \" + this.chartRef);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// we want original chart\r\n\t\t\tthis.chart = this.chart.chart || this.chart;\r\n\t\t\tthis.refresh();\r\n\t\t},\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.domNode = domConstruct.create(\"table\",\r\n\t\t\t\t\t{role: \"group\", \"aria-label\": \"chart legend\", \"class\": \"dojoxLegendNode\"});\r\n\t\t\tthis.legendBody = domConstruct.create(\"tbody\", null, this.domNode);\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\t\tdestroy: function(){\r\n\t\t\tif(this._surfaces){\r\n\t\t\t\tarr.forEach(this._surfaces, function(surface){\r\n\t\t\t\t\tsurface.destroy();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\t\trefresh: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tregenerates the legend to reflect changes to the chart\r\n\r\n\t\t\t// cleanup\r\n\t\t\tif(this._surfaces){\r\n\t\t\t\tarr.forEach(this._surfaces, function(surface){\r\n\t\t\t\t\tsurface.destroy();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tthis._surfaces = [];\r\n\t\t\twhile(this.legendBody.lastChild){\r\n\t\t\t\tdomConstruct.destroy(this.legendBody.lastChild);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.horizontal){\r\n\t\t\t\tdomClass.add(this.domNode, \"dojoxLegendHorizontal\");\r\n\t\t\t\t// make a container <tr>\r\n\t\t\t\tthis._tr = domConstruct.create(\"tr\", null, this.legendBody);\r\n\t\t\t\tthis._inrow = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// keep trying to reach this.series for compatibility reasons in case the user set them, but could be removed\r\n\t\t\tvar s = this.series || this.chart.series;\r\n\t\t\tif(s.length == 0){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(s[0].chart.stack[0].declaredClass == \"dojox.charting.plot2d.Pie\"){\r\n\t\t\t\tvar t = s[0].chart.stack[0];\r\n\t\t\t\tif(typeof t.run.data[0] == \"number\"){\r\n\t\t\t\t\tvar filteredRun = df.map(t.run.data, \"Math.max(x, 0)\");\r\n\t\t\t\t\tvar slices = df.map(filteredRun, \"/this\", df.foldl(filteredRun, \"+\", 0));\r\n\t\t\t\t\tarr.forEach(slices, function(x, i){\r\n\t\t\t\t\t\tthis._addLabel(t.dyn[i], t._getLabel(x * 100) + \"%\");\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tarr.forEach(t.run.data, function(x, i){\r\n\t\t\t\t\t\tthis._addLabel(t.dyn[i], x.legend || x.text || x.y);\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tarr.forEach(s, function(x){\r\n\t\t\t\t\tthis._addLabel(x.dyn, x.legend || x.name);\r\n\t\t\t\t}, this);\r\n\t\t\t}\r\n\t\t},\r\n\t\t_addLabel: function(dyn, label){\r\n\t\t\t// create necessary elements\r\n\t\t\tvar wrapper = domConstruct.create(\"td\"),\r\n\t\t\t\ticon = domConstruct.create(\"div\", null, wrapper),\r\n\t\t\t\ttext = domConstruct.create(\"label\", null, wrapper),\r\n\t\t\t\tdiv  = domConstruct.create(\"div\", {\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\"width\": this.swatchSize + \"px\",\r\n\t\t\t\t\t\t\"height\":this.swatchSize + \"px\",\r\n\t\t\t\t\t\t\"float\": \"left\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}, icon);\r\n\t\t\tdomClass.add(icon, \"dojoxLegendIcon dijitInline\");\r\n\t\t\tdomClass.add(text, \"dojoxLegendText\");\r\n\t\t\t// create a skeleton\r\n\t\t\tif(this._tr){\r\n\t\t\t\t// horizontal\r\n\t\t\t\tthis._tr.appendChild(wrapper);\r\n\t\t\t\tif(++this._inrow === this.horizontal){\r\n\t\t\t\t\t// make a fresh container <tr>\r\n\t\t\t\t\tthis._tr = domConstruct.create(\"tr\", null, this.legendBody);\r\n\t\t\t\t\tthis._inrow = 0;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// vertical\r\n\t\t\t\tvar tr = domConstruct.create(\"tr\", null, this.legendBody);\r\n\t\t\t\ttr.appendChild(wrapper);\r\n\t\t\t}\r\n\r\n\t\t\t// populate the skeleton\r\n\t\t\tthis._makeIcon(div, dyn);\r\n\t\t\ttext.innerHTML = String(label);\r\n\t\t\tif(has(\"dojo-bidi\")){\r\n\t\t\t\ttext.dir = this.getTextDir(label, text.dir);\r\n\t\t\t}\r\n\t\t},\r\n\t\t_makeIcon: function(div, dyn){\r\n\t\t\tvar mb = { h: this.swatchSize, w: this.swatchSize };\r\n\t\t\tvar surface = gfx.createSurface(div, mb.w, mb.h);\r\n\t\t\tthis._surfaces.push(surface);\r\n\t\t\tif(dyn.fill){\r\n\t\t\t\t// regions\r\n\t\t\t\tsurface.createRect({x: 2, y: 2, width: mb.w - 4, height: mb.h - 4}).\r\n\t\t\t\t\tsetFill(dyn.fill).setStroke(dyn.stroke);\r\n\t\t\t}else if(dyn.stroke || dyn.marker){\r\n\t\t\t\t// draw line\r\n\t\t\t\tvar line = {x1: 0, y1: mb.h / 2, x2: mb.w, y2: mb.h / 2};\r\n\t\t\t\tif(dyn.stroke){\r\n\t\t\t\t\tsurface.createLine(line).setStroke(dyn.stroke);\r\n\t\t\t\t}\r\n\t\t\t\tif(dyn.marker){\r\n\t\t\t\t\t// draw marker on top\r\n\t\t\t\t\tvar c = {x: mb.w / 2, y: mb.h / 2};\r\n\t\t\t\t\tsurface.createPath({path: \"M\" + c.x + \" \" + c.y + \" \" + dyn.marker}).\r\n\t\t\t\t\t\tsetFill(dyn.markerFill).setStroke(dyn.markerStroke);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// nothing\r\n\t\t\t\tsurface.createRect({x: 2, y: 2, width: mb.w - 4, height: mb.h - 4}).\r\n\t\t\t\t\tsetStroke(\"black\");\r\n\t\t\t\tsurface.createLine({x1: 2, y1: 2, x2: mb.w - 2, y2: mb.h - 2}).setStroke(\"black\");\r\n\t\t\t\tsurface.createLine({x1: 2, y1: mb.h - 2, x2: mb.w - 2, y2: 2}).setStroke(\"black\");\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\treturn has(\"dojo-bidi\")? declare(\"dojox.charting.widget.Legend\", [Legend, BidiLegend]) : Legend;\r\n\t\r\n});\r\n"]}