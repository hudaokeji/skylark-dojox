{"version":3,"sources":["charting/widget/Chart.js"],"names":["define","kernel","lang","arr","domAttr","declare","query","_WidgetBase","ChartBase","has","BidiChart","du","df","dfl","collectParams","collectAxisParams","collectPlotParams","collectActionParams","collectDataParams","notNull","o","dc","getObject","node","type","kw","dp","eval","x","attr","getAttribute","coerceType","op","name","kwArgs","axis2d","_scopeName","axis","font","fontColor","tick","plot2d","plot","action2d","action","ga","partial","get","t","marker","stroke","outline","shadow","fill","legend","data","map","String","split","Number","field","queryOptions","start","count","sort","valueFn","lambda","Chart","theme","margins","undefined","buildRendering","this","inherited","arguments","n","domNode","axes","filter","plots","actions","series","innerHTML","c","chart","textDir","setTheme","forEach","addAxis","addPlot","foldl","render","addSeries","updateWithPattern","clone","mixin","onComplete","values","fn","getValue","fetch","destroy","resize","box","apply"],"mappings":"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","file":"../../../charting/widget/Chart.js","sourcesContent":["define([\"dojo/_base/kernel\", \"dojo/_base/lang\", \"dojo/_base/array\",\"dojo/dom-attr\",\"dojo/_base/declare\", \"dojo/query\",\r\n\t\"dijit/_WidgetBase\", \"../Chart\", \"dojo/has\", \"dojo/has!dojo-bidi?../bidi/widget/Chart\", \r\n\t\"dojox/lang/utils\", \"dojox/lang/functional\",\"dojox/lang/functional/lambda\"],\r\n\tfunction(kernel, lang, arr, domAttr, declare, query, _WidgetBase, ChartBase, has, BidiChart, du, df, dfl){\r\n\r\n\tvar collectParams, collectAxisParams, collectPlotParams,\r\n\t\tcollectActionParams, collectDataParams,\r\n\t\tnotNull = function(o){ return o; },\r\n\t\tdc = lang.getObject(\"dojox.charting\");\r\n\r\n\r\n\tcollectParams = function(node, type, kw){\r\n\t\tvar dp = eval(\"(\" + type + \".prototype.defaultParams)\");\r\n\t\tvar x, attr;\r\n\t\tfor(x in dp){\r\n\t\t\tif(x in kw){ continue; }\r\n\t\t\tattr = node.getAttribute(x);\r\n\t\t\tkw[x] = du.coerceType(dp[x], attr == null || typeof attr == \"undefined\" ? dp[x] : attr);\r\n\t\t}\r\n\t\tvar op = eval(\"(\" + type + \".prototype.optionalParams)\");\r\n\t\tfor(x in op){\r\n\t\t\tif(x in kw){ continue; }\r\n\t\t\tattr = node.getAttribute(x);\r\n\t\t\tif(attr != null){\r\n\t\t\t\tkw[x] = du.coerceType(op[x], attr);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tcollectAxisParams = function(node){\r\n\t\tvar name = node.getAttribute(\"name\"), type = node.getAttribute(\"type\");\r\n\t\tif(!name){ return null; }\r\n\t\tvar o = {name: name, kwArgs: {}}, kw = o.kwArgs;\r\n\t\tif(type){\r\n\t\t\tif(dc.axis2d[type]){\r\n\t\t\t\ttype = kernel._scopeName + \"x.charting.axis2d.\" + type;\r\n\t\t\t}\r\n\t\t\tvar axis = eval(\"(\" + type + \")\");\r\n\t\t\tif(axis){ kw.type = axis; }\r\n\t\t}else{\r\n\t\t\ttype = kernel._scopeName + \"x.charting.axis2d.Default\";\r\n\t\t}\r\n\t\tcollectParams(node, type, kw);\r\n\t\t// compatibility conversions\r\n\t\tif(kw.font || kw.fontColor){\r\n\t\t\tif(!kw.tick){\r\n\t\t\t\tkw.tick = {};\r\n\t\t\t}\r\n\t\t\tif(kw.font){\r\n\t\t\t\tkw.tick.font = kw.font;\r\n\t\t\t}\r\n\t\t\tif(kw.fontColor){\r\n\t\t\t\tkw.tick.fontColor = kw.fontColor;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn o;\r\n\t};\r\n\r\n\tcollectPlotParams = function(node){\r\n\t\t// var name = d.attr(node, \"name\"), type = d.attr(node, \"type\");\r\n\t\tvar name = node.getAttribute(\"name\"), type = node.getAttribute(\"type\");\r\n\t\tif(!name){ return null; }\r\n\t\tvar o = {name: name, kwArgs: {}}, kw = o.kwArgs;\r\n\t\tif(type){\r\n\t\t\tif(dc.plot2d && dc.plot2d[type]){\r\n\t\t\t\ttype = kernel._scopeName + \"x.charting.plot2d.\" + type;\r\n\t\t\t}\r\n\t\t\tvar plot = eval(\"(\" + type + \")\");\r\n\t\t\tif(plot){ kw.type = plot; }\r\n\t\t}else{\r\n\t\t\ttype = kernel._scopeName + \"x.charting.plot2d.Default\";\r\n\t\t}\r\n\t\tcollectParams(node, type, kw);\r\n\t\t// TODO\r\n\t\t// we have factorized axis & label management in CartesianBase and thus is is not anymore\r\n\t\t// accessible to the default collect mechanism. Longer term we must get rid of that\r\n\t\t// and leverage dojo/parser\r\n\t\tvar dp = eval(\"(\" + type + \".prototype.baseParams)\");\r\n\t\tvar x, attr;\r\n\t\tfor(x in dp){\r\n\t\t\tif(x in kw){ continue; }\r\n\t\t\tattr = node.getAttribute(x);\r\n\t\t\tkw[x] = du.coerceType(dp[x], attr == null || typeof attr == \"undefined\" ? dp[x] : attr);\r\n\t\t}\r\n\t\treturn o;\r\n\t};\r\n\r\n\tcollectActionParams = function(node){\r\n\t\t// var plot = d.attr(node, \"plot\"), type = d.attr(node, \"type\");\r\n\t\tvar plot = node.getAttribute(\"plot\"), type = node.getAttribute(\"type\");\r\n\t\tif(!plot){ plot = \"default\"; }\r\n\t\tvar o = {plot: plot, kwArgs: {}}, kw = o.kwArgs;\r\n\t\tif(type){\r\n\t\t\tif(dc.action2d[type]){\r\n\t\t\t\ttype = kernel._scopeName + \"x.charting.action2d.\" + type;\r\n\t\t\t}\r\n\t\t\tvar action = eval(\"(\" + type + \")\");\r\n\t\t\tif(!action){ return null; }\r\n\t\t\to.action = action;\r\n\t\t}else{\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tcollectParams(node, type, kw);\r\n\t\treturn o;\r\n\t};\r\n\r\n\tcollectDataParams = function(node){\r\n\t\tvar ga = lang.partial(domAttr.get, node);\r\n\t\tvar name = ga(\"name\");\r\n\t\tif(!name){ return null; }\r\n\t\tvar o = { name: name, kwArgs: {} }, kw = o.kwArgs, t;\r\n\t\tt = ga(\"plot\");\r\n\t\tif(t != null){ kw.plot = t; }\r\n\t\tt = ga(\"marker\");\r\n\t\tif(t != null){ kw.marker = t; }\r\n\t\tt = ga(\"stroke\");\r\n\t\tif(t != null){ kw.stroke = eval(\"(\" + t + \")\"); }\r\n\t\tt = ga(\"outline\");\r\n\t\tif(t != null){ kw.outline = eval(\"(\" + t + \")\"); }\r\n\t\tt = ga(\"shadow\");\r\n\t\tif(t != null){ kw.shadow = eval(\"(\" + t + \")\"); }\r\n\t\tt = ga(\"fill\");\r\n\t\tif(t != null){ kw.fill = eval(\"(\" + t + \")\"); }\r\n\t\tt = ga(\"font\");\r\n\t\tif(t != null){ kw.font = t; }\r\n\t\tt = ga(\"fontColor\");\r\n\t\tif(t != null){ kw.fontColor = eval(\"(\" + t + \")\"); }\r\n\t\tt = ga(\"legend\");\r\n\t\tif(t != null){ kw.legend = t; }\r\n\t\tt = ga(\"data\");\r\n\t\tif(t != null){\r\n\t\t\to.type = \"data\";\r\n\t\t\to.data = t ? arr.map(String(t).split(','), Number) : [];\r\n\t\t\treturn o;\r\n\t\t}\r\n\t\tt = ga(\"array\");\r\n\t\tif(t != null){\r\n\t\t\to.type = \"data\";\r\n\t\t\to.data = eval(\"(\" + t + \")\");\r\n\t\t\treturn o;\r\n\t\t}\r\n\t\tt = ga(\"store\");\r\n\t\tif(t != null){\r\n\t\t\to.type = \"store\";\r\n\t\t\to.data = eval(\"(\" + t + \")\");\r\n\t\t\tt = ga(\"field\");\r\n\t\t\to.field = t != null ? t : \"value\";\r\n\t\t\tt = ga(\"query\");\r\n\t\t\tif(!!t){ kw.query = t; }\r\n\t\t\tt = ga(\"queryOptions\");\r\n\t\t\tif(!!t){ kw.queryOptions = eval(\"(\" + t + \")\"); }\r\n\t\t\tt = ga(\"start\");\r\n\t\t\tif(!!t){ kw.start = Number(t); }\r\n\t\t\tt = ga(\"count\");\r\n\t\t\tif(!!t){ kw.count = Number(t); }\r\n\t\t\tt = ga(\"sort\");\r\n\t\t\tif(!!t){ kw.sort = eval(\"(\"+t+\")\"); }\r\n\t\t\tt = ga(\"valueFn\");\r\n\t\t\tif(!!t){ kw.valueFn = dfl.lambda(t); }\r\n\t\t\treturn o;\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n\t\r\n\tvar Chart = declare(has(\"dojo-bidi\")? \"dojox.charting.widget.NonBidiChart\" : \"dojox.charting.widget.Chart\", _WidgetBase, {\r\n\t\t// summary:\r\n\t\t//\t\tA chart widget.  This is leveraging dojox/charting/Chart as a Dijit widget.\r\n\r\n\t\t// parameters for the markup\r\n\r\n\t\t// theme: dojox/charting/SimpleTheme?\r\n\t\t//\t\tAn optional theme to use for styling the chart.\r\n\t\ttheme: null,\r\n\t\t\r\n\t\t// margins: Object?\r\n\t\t//\t\tThe margins around the chart. Default is { l:10, t:10, r:10, b:10 }.\r\n\t\tmargins: null,\r\n\t\t\r\n\t\t// chart area, define them as undefined to:\r\n\t\t// allow the parser to take them into account\r\n\t\t// but make sure they have no defined value to not override theme\r\n\r\n\t\t// stroke: dojox.gfx.Stroke?\r\n\t\t//\t\tThe outline of the chart (stroke in vector graphics terms).\r\n\t\tstroke: undefined,\r\n\t\t// fill: dojox.gfx.Fill?\r\n\t\t//\t\tThe color for the chart.\r\n\t\tfill:   undefined,\r\n\t\t\r\n\t\t// methods\r\n\t\t\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\t\r\n\t\t\tvar n = this.domNode;\r\n\t\t\t\r\n\t\t\t// collect chart parameters\r\n\t\t\tvar axes    = query(\"> .axis\", n).map(collectAxisParams).filter(notNull),\r\n\t\t\t\tplots   = query(\"> .plot\", n).map(collectPlotParams).filter(notNull),\r\n\t\t\t\tactions = query(\"> .action\", n).map(collectActionParams).filter(notNull),\r\n\t\t\t\tseries  = query(\"> .series\", n).map(collectDataParams).filter(notNull);\r\n\t\t\t\r\n\t\t\t// build the chart\r\n\t\t\tn.innerHTML = \"\";\r\n\t\t\tvar c = this.chart = new ChartBase(n, {\r\n\t\t\t\tmargins: this.margins,\r\n\t\t\t\tstroke:  this.stroke,\r\n\t\t\t\tfill:    this.fill,\r\n\t\t\t\ttextDir: this.textDir\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t// add collected parameters\r\n\t\t\tif(this.theme){\r\n\t\t\t\tc.setTheme(this.theme);\r\n\t\t\t}\r\n\t\t\taxes.forEach(function(axis){\r\n\t\t\t\tc.addAxis(axis.name, axis.kwArgs);\r\n\t\t\t});\r\n\t\t\tplots.forEach(function(plot){\r\n\t\t\t\tc.addPlot(plot.name, plot.kwArgs);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.actions = actions.map(function(action){\r\n\t\t\t\treturn new action.action(c, action.plot, action.kwArgs);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tvar render = df.foldl(series, function(render, series){\r\n\t\t\t\tif(series.type == \"data\"){\r\n\t\t\t\t\tc.addSeries(series.name, series.data, series.kwArgs);\r\n\t\t\t\t\trender = true;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tc.addSeries(series.name, [0], series.kwArgs);\r\n\t\t\t\t\tvar kw = {};\r\n\t\t\t\t\tdu.updateWithPattern(\r\n\t\t\t\t\t\tkw,\r\n\t\t\t\t\t\tseries.kwArgs,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"query\": \"\",\r\n\t\t\t\t\t\t\t\"queryOptions\": null,\r\n\t\t\t\t\t\t\t\"start\": 0,\r\n\t\t\t\t\t\t\t\"count\": 1 //,\r\n\t\t\t\t\t\t\t// \"sort\": []\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\ttrue\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif(series.kwArgs.sort){\r\n\t\t\t\t\t\t// sort is a complex object type and doesn't survive coercian\r\n\t\t\t\t\t\tkw.sort = lang.clone(series.kwArgs.sort);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlang.mixin(kw, {\r\n\t\t\t\t\t\tonComplete: function(data){\r\n\t\t\t\t\t\t\tvar values;\r\n\t\t\t\t\t\t\tif(\"valueFn\" in series.kwArgs){\r\n\t\t\t\t\t\t\t\tvar fn = series.kwArgs.valueFn;\r\n\t\t\t\t\t\t\t\tvalues = arr.map(data, function(x){\r\n\t\t\t\t\t\t\t\t\treturn fn(series.data.getValue(x, series.field, 0));\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tvalues = arr.map(data, function(x){\r\n\t\t\t\t\t\t\t\t\treturn series.data.getValue(x, series.field, 0);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tc.addSeries(series.name, values, series.kwArgs).render();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tseries.data.fetch(kw);\r\n\t\t\t\t}\r\n\t\t\t\treturn render;\r\n\t\t\t}, false);\r\n\t\t\tif(render){ c.render(); }\r\n\t\t},\r\n\t\tdestroy: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tproperly destroy the widget\r\n\t\t\tthis.chart.destroy();\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\t\tresize: function(box){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tResize the widget.\r\n\t\t\t// description:\r\n\t\t\t//\t\tResize the domNode and the widget surface to the dimensions of a box of the following form:\r\n\t\t\t//\t\t`{ l: 50, t: 200, w: 300: h: 150 }`\r\n\t\t\t//\t\tIf no box is provided, resize the surface to the marginBox of the domNode.\r\n\t\t\t// box:\r\n\t\t\t//\t\tIf passed, denotes the new size of the widget.\r\n\t\t\tthis.chart.resize.apply(this.chart, arguments);\r\n\t\t}\r\n\t});\r\n\treturn has(\"dojo-bidi\")? declare(\"dojox.charting.widget.Chart\", [Chart, BidiChart]) : Chart;\r\n});\r\n"]}