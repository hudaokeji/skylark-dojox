{"version":3,"sources":["charting/plot2d/OHLC.js"],"names":["define","lang","arr","declare","has","CartesianBase","_PlotEvents","dc","df","dfr","du","fx","purgeGroup","lambda","defaultParams","gap","animate","optionalParams","minBarSize","maxBarSize","stroke","outline","shadow","fill","font","fontColor","constructor","chart","kwArgs","this","opt","clone","updateWithObject","updateWithPattern","collectStats","series","stats","delegate","defaultStats","i","length","run","data","old_vmin","vmin","old_vmax","vmax","forEach","val","idx","x","hmin","Math","min","hmax","max","open","close","high","low","ymin","ymax","getSeriesStats","render","dim","offsets","zoom","isDataDirty","performZoom","resetEvents","dirty","isDirty","_eventSeries","cleanGroup","s","getGroup","forEachRev","item","f","width","t","theme","ht","_hScaler","scaler","getTransformerFromModel","vt","_vScaler","events","calculateBarSize","bounds","scale","size","next","eventSeries","group","Array","j","v","finalTheme","addMixin","l","y","height","b","tmp","hl","x1","x2","y1","y2","op","cl","shape","createGroup","setTransform","dx","dy","inner","createLine","setStroke","dyn","o","element","index","cx","cy","_connectEvents","_animateOHLC","name","skip","_reconnectEvents","_checkOrientation","voffset","vsize","animateTransform","duration","transform","start","end","play"],"mappings":"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","file":"../../../charting/plot2d/OHLC.js","sourcesContent":["define([\"dojo/_base/lang\", \"dojo/_base/array\", \"dojo/_base/declare\", \"dojo/has\", \"./CartesianBase\", \"./_PlotEvents\", \"./common\",\r\n\t\"dojox/lang/functional\", \"dojox/lang/functional/reversed\", \"dojox/lang/utils\", \"dojox/gfx/fx\"],\r\n\tfunction(lang, arr, declare, has, CartesianBase, _PlotEvents, dc, df, dfr, du, fx){\r\n\r\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\r\n\r\n\t//\tCandlesticks are based on the Bars plot type; we expect the following passed\r\n\t//\tas values in a series:\r\n\t//\t{ x?, open, close, high, low }\r\n\t//\tif x is not provided, the array index is used.\r\n\t//\tfailing to provide the OHLC values will throw an error.\r\n\treturn declare(\"dojox.charting.plot2d.OHLC\", [CartesianBase, _PlotEvents], {\r\n\t\t// summary:\r\n\t\t//\t\tA plot that represents typical open/high/low/close (financial reporting, primarily).\r\n\t\t//\t\tUnlike most charts, the Candlestick expects data points to be represented by\r\n\t\t//\t\tan object of the form { x?, open, close, high, low, mid? }, where both\r\n\t\t//\t\tx and mid are optional parameters.  If x is not provided, the index of the\r\n\t\t//\t\tdata array is used.\r\n\t\tdefaultParams: {\r\n\t\t\tgap:\t2,\t\t// gap between columns in pixels\r\n\t\t\tanimate: null\t// animate chart to place\r\n\t\t},\r\n\t\toptionalParams: {\r\n\t\t\tminBarSize: 1,\t// minimal bar size in pixels\r\n\t\t\tmaxBarSize: 1,\t// maximal bar size in pixels\r\n\t\t\t// theme component\r\n\t\t\tstroke:\t\t{},\r\n\t\t\toutline:\t{},\r\n\t\t\tshadow:\t\t{},\r\n\t\t\tfill:\t\t{},\r\n\t\t\tfont:\t\t\"\",\r\n\t\t\tfontColor:\t\"\"\r\n\t\t},\r\n\r\n\t\tconstructor: function(chart, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThe constructor for a candlestick chart.\r\n\t\t\t// chart: dojox/charting/Chart\r\n\t\t\t//\t\tThe chart this plot belongs to.\r\n\t\t\t// kwArgs: dojox.charting.plot2d.__BarCtorArgs?\r\n\t\t\t//\t\tAn optional keyword arguments object to help define the plot.\r\n\t\t\tthis.opt = lang.clone(this.defaultParams);\r\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\r\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\r\n\t\t\tthis.animate = this.opt.animate;\r\n\t\t},\r\n\r\n\t\tcollectStats: function(series){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCollect all statistics for drawing this chart.  Since the common\r\n\t\t\t//\t\tfunctionality only assumes x and y, OHLC must create it's own\r\n\t\t\t//\t\tstats (since data has no y value, but open/close/high/low instead).\r\n\t\t\t// series: dojox/charting/Series[]\r\n\t\t\t//\t\tThe data series array to be drawn on this plot.\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\tReturns an object in the form of { hmin, hmax, vmin, vmax }.\r\n\r\n\t\t\t//\twe have to roll our own, since we need to use all four passed\r\n\t\t\t//\tvalues to figure out our stats, and common only assumes x and y.\r\n\t\t\tvar stats = lang.delegate(dc.defaultStats);\r\n\t\t\tfor(var i=0; i<series.length; i++){\r\n\t\t\t\tvar run = series[i];\r\n\t\t\t\tif(!run.data.length){ continue; }\r\n\t\t\t\tvar old_vmin = stats.vmin, old_vmax = stats.vmax;\r\n\t\t\t\tif(!(\"ymin\" in run) || !(\"ymax\" in run)){\r\n\t\t\t\t\tarr.forEach(run.data, function(val, idx){\r\n\t\t\t\t\t\tif(val !== null){\r\n\t\t\t\t\t\t\tvar x = val.x || idx + 1;\r\n\t\t\t\t\t\t\tstats.hmin = Math.min(stats.hmin, x);\r\n\t\t\t\t\t\t\tstats.hmax = Math.max(stats.hmax, x);\r\n\t\t\t\t\t\t\tstats.vmin = Math.min(stats.vmin, val.open, val.close, val.high, val.low);\r\n\t\t\t\t\t\t\tstats.vmax = Math.max(stats.vmax, val.open, val.close, val.high, val.low);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(\"ymin\" in run){ stats.vmin = Math.min(old_vmin, run.ymin); }\r\n\t\t\t\tif(\"ymax\" in run){ stats.vmax = Math.max(old_vmax, run.ymax); }\r\n\t\t\t}\r\n\t\t\treturn stats; // Object\r\n\t\t},\r\n\r\n\t\tgetSeriesStats: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\r\n\t\t\tvar stats = this.collectStats(this.series);\r\n\t\t\tstats.hmin -= 0.5;\r\n\t\t\tstats.hmax += 0.5;\r\n\t\t\treturn stats; // Object\r\n\t\t},\r\n\r\n\t\trender: function(dim, offsets){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRun the calculations for any axes for this plot.\r\n\t\t\t// dim: Object\r\n\t\t\t//\t\tAn object in the form of { width, height }\r\n\t\t\t// offsets: Object\r\n\t\t\t//\t\tAn object of the form { l, r, t, b}.\r\n\t\t\t// returns: dojox/charting/plot2d/OHLC\r\n\t\t\t//\t\tA reference to this plot for functional chaining.\r\n\t\t\tif(this.zoom && !this.isDataDirty()){\r\n\t\t\t\treturn this.performZoom(dim, offsets);\r\n\t\t\t}\r\n\t\t\tthis.resetEvents();\r\n\t\t\tthis.dirty = this.isDirty();\r\n\t\t\tif(this.dirty){\r\n\t\t\t\tarr.forEach(this.series, purgeGroup);\r\n\t\t\t\tthis._eventSeries = {};\r\n\t\t\t\tthis.cleanGroup();\r\n\t\t\t\tvar s = this.getGroup();\r\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\r\n\t\t\t}\r\n\t\t\tvar t = this.chart.theme, f, gap, width,\r\n\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\r\n\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler),\r\n\t\t\t\tevents = this.events();\r\n\t\t\tf = dc.calculateBarSize(this._hScaler.bounds.scale, this.opt);\r\n\t\t\tgap = f.gap;\r\n\t\t\twidth = f.size;\r\n\t\t\tfor(var i = this.series.length - 1; i >= 0; --i){\r\n\t\t\t\tvar run = this.series[i];\r\n\t\t\t\tif(!this.dirty && !run.dirty){\r\n\t\t\t\t\tt.skip();\r\n\t\t\t\t\tthis._reconnectEvents(run.name);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\trun.cleanGroup();\r\n\t\t\t\tvar theme = t.next(\"candlestick\", [this.opt, run]), s = run.group,\r\n\t\t\t\t\teventSeries = new Array(run.data.length);\r\n\t\t\t\tfor(var j = 0; j < run.data.length; ++j){\r\n\t\t\t\t\tvar v = run.data[j];\r\n\t\t\t\t\tif(v !== null){\r\n\t\t\t\t\t\tvar finalTheme = t.addMixin(theme, \"candlestick\", v, true);\r\n\r\n\t\t\t\t\t\t//\tcalculate the points we need for OHLC\r\n\t\t\t\t\t\tvar x = ht(v.x || (j+0.5)) + offsets.l + gap,\r\n\t\t\t\t\t\t\ty = dim.height - offsets.b,\r\n\t\t\t\t\t\t\topen = vt(v.open),\r\n\t\t\t\t\t\t\tclose = vt(v.close),\r\n\t\t\t\t\t\t\thigh = vt(v.high),\r\n\t\t\t\t\t\t\tlow = vt(v.low);\r\n\t\t\t\t\t\tif(low > high){\r\n\t\t\t\t\t\t\tvar tmp = high;\r\n\t\t\t\t\t\t\thigh = low;\r\n\t\t\t\t\t\t\tlow = tmp;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(width >= 1){\r\n\t\t\t\t\t\t\tvar hl = {x1: width/2, x2: width/2, y1: y - high, y2: y - low},\r\n\t\t\t\t\t\t\t\top = {x1: 0, x2: ((width/2) + ((finalTheme.series.stroke.width||1)/2)), y1: y-open, y2: y-open},\r\n\t\t\t\t\t\t\t\tcl = {x1: ((width/2) - ((finalTheme.series.stroke.width||1)/2)), x2: width, y1: y-close, y2: y-close};\r\n\t\t\t\t\t\t\tvar shape = s.createGroup();\r\n\t\t\t\t\t\t\tshape.setTransform({dx: x, dy: 0});\r\n\t\t\t\t\t\t\tvar inner = shape.createGroup();\r\n\t\t\t\t\t\t\tinner.createLine(hl).setStroke(finalTheme.series.stroke);\r\n\t\t\t\t\t\t\tinner.createLine(op).setStroke(finalTheme.series.stroke);\r\n\t\t\t\t\t\t\tinner.createLine(cl).setStroke(finalTheme.series.stroke);\r\n\r\n\t\t\t\t\t\t\t// TODO: double check this.\r\n\t\t\t\t\t\t\trun.dyn.stroke = finalTheme.series.stroke;\r\n\t\t\t\t\t\t\tif(events){\r\n\t\t\t\t\t\t\t\tvar o = {\r\n\t\t\t\t\t\t\t\t\telement: \"candlestick\",\r\n\t\t\t\t\t\t\t\t\tindex:   j,\r\n\t\t\t\t\t\t\t\t\trun:     run,\r\n\t\t\t\t\t\t\t\t\tshape:\t inner,\r\n\t\t\t\t\t\t\t\t\tx:       x,\r\n\t\t\t\t\t\t\t\t\ty:       y-Math.max(open, close),\r\n\t\t\t\t\t\t\t\t\tcx:\t\t width/2,\r\n\t\t\t\t\t\t\t\t\tcy:\t\t (y-Math.max(open, close)) + (Math.max(open > close ? open-close : close-open, 1)/2),\r\n\t\t\t\t\t\t\t\t\twidth:\t width,\r\n\t\t\t\t\t\t\t\t\theight:  Math.max(open > close ? open-close : close-open, 1),\r\n\t\t\t\t\t\t\t\t\tdata:\t v\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tthis._connectEvents(o);\r\n\t\t\t\t\t\t\t\teventSeries[j] = o;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this.animate){\r\n\t\t\t\t\t\t\tthis._animateOHLC(shape, y - low, high - low);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._eventSeries[run.name] = eventSeries;\r\n\t\t\t\trun.dirty = false;\r\n\t\t\t}\r\n\t\t\tthis.dirty = false;\r\n\t\t\t// chart mirroring starts\r\n\t\t\tif(has(\"dojo-bidi\")){\r\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\r\n\t\t\t}\r\n\t\t\t// chart mirroring ends\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/OHLC\r\n\t\t},\r\n\t\t_animateOHLC: function(shape, voffset, vsize){\r\n\t\t\tfx.animateTransform(lang.delegate({\r\n\t\t\t\tshape: shape,\r\n\t\t\t\tduration: 1200,\r\n\t\t\t\ttransform: [\r\n\t\t\t\t\t{name: \"translate\", start: [0, voffset - (voffset/vsize)], end: [0, 0]},\r\n\t\t\t\t\t{name: \"scale\", start: [1, 1/vsize], end: [1, 1]},\r\n\t\t\t\t\t{name: \"original\"}\r\n\t\t\t\t]\r\n\t\t\t}, this.animate)).play();\r\n\t\t}\r\n\t});\r\n});\r\n"]}