{"version":3,"sources":["charting/plot2d/Bubble.js"],"names":["define","lang","declare","arr","has","CartesianBase","_PlotEvents","dc","df","dfr","du","fx","purgeGroup","lambda","defaultParams","animate","optionalParams","stroke","outline","shadow","fill","filter","styleFunc","font","fontColor","labelFunc","constructor","chart","kwArgs","this","opt","clone","mixin","updateWithObject","updateWithPattern","value","fixed","precision","_getLabel","size","render","dim","offsets","s","zoom","isDataDirty","performZoom","resetEvents","dirty","isDirty","forEach","series","_eventSeries","cleanGroup","getGroup","forEachRev","item","t","theme","ht","_hScaler","scaler","getTransformerFromModel","vt","_vScaler","events","i","length","run","data","next","points","map","v","x","l","y","height","b","radius","bounds","scale","hidden","dyn","group","frontCircles","outlineCircles","shadowCircles","getFinalTheme","addMixin","shape","createCircle","cx","dx","cy","dy","r","setStroke","setFill","color","_animateBubble","getStroke","finalTheme","makeStroke","width","rect","specialFill","_plotFill","_shapeFill","setFilter","createLabel","getFill","eventSeries","Array","o","element","index","cr","_connectEvents","name","console","warn","skip","_reconnectEvents","_checkOrientation","offset","animateTransform","delegate","duration","transform","start","end","play"],"mappings":"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","file":"../../../charting/plot2d/Bubble.js","sourcesContent":["define([\"dojo/_base/lang\", \"dojo/_base/declare\", \"dojo/_base/array\", \"dojo/has\", \r\n\t\t\"./CartesianBase\", \"./_PlotEvents\", \"./common\", \"dojox/lang/functional\", \"dojox/lang/functional/reversed\",\r\n\t\t\"dojox/lang/utils\", \"dojox/gfx/fx\"], \r\n\tfunction(lang, declare, arr, has, CartesianBase, _PlotEvents, dc, df, dfr, du, fx){\r\n\r\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\r\n\r\n\treturn declare(\"dojox.charting.plot2d.Bubble\", [CartesianBase, _PlotEvents], {\r\n\t\t// summary:\r\n\t\t//\t\tA plot representing bubbles.  Note that data for Bubbles requires 3 parameters,\r\n\t\t//\t\tin the form of:  { x, y, size }, where size determines the size of the bubble.\r\n\t\tdefaultParams: {\r\n\t\t\tanimate: null   // animate bars into place\r\n\t\t},\r\n\t\toptionalParams: {\r\n\t\t\t// theme component\r\n\t\t\tstroke:\t\t{},\r\n\t\t\toutline:\t{},\r\n\t\t\tshadow:\t\t{},\r\n\t\t\tfill:\t\t{},\r\n\t\t\tfilter:     {},\r\n\t\t\tstyleFunc:\tnull,\r\n\t\t\tfont:\t\t\"\",\r\n\t\t\tfontColor:\t\"\",\r\n\t\t\tlabelFunc: null\r\n\t\t},\r\n\r\n\t\tconstructor: function(chart, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate a plot of bubbles.\r\n\t\t\t// chart: dojox/charting/Chart\r\n\t\t\t//\t\tThe chart this plot belongs to.\r\n\t\t\t// kwArgs: dojox.charting.plot2d.__DefaultCtorArgs?\r\n\t\t\t//\t\tOptional keyword arguments object to help define plot parameters.\r\n\t\t\tthis.opt = lang.clone(lang.mixin(this.opt, this.defaultParams));\r\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\r\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\r\n\t\t\tif(!this.opt.labelFunc){\r\n\t\t\t\tthis.opt.labelFunc = function(value, fixed, precision){\r\n\t\t\t\t\treturn this._getLabel(value.size, fixed, precision);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tthis.animate = this.opt.animate;\r\n\t\t},\r\n\r\n\t\t//\toverride the render so that we are plotting only circles.\r\n\t\trender: function(dim, offsets){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRun the calculations for any axes for this plot.\r\n\t\t\t// dim: Object\r\n\t\t\t//\t\tAn object in the form of { width, height }\r\n\t\t\t// offsets: Object\r\n\t\t\t//\t\tAn object of the form { l, r, t, b}.\r\n\t\t\t// returns: dojox/charting/plot2d/Bubble\r\n\t\t\t//\t\tA reference to this plot for functional chaining.\r\n\t\t\tvar s;\r\n\t\t\tif(this.zoom && !this.isDataDirty()){\r\n\t\t\t\treturn this.performZoom(dim, offsets);\r\n\t\t\t}\r\n\t\t\tthis.resetEvents();\r\n\t\t\tthis.dirty = this.isDirty();\r\n\t\t\tif(this.dirty){\r\n\t\t\t\tarr.forEach(this.series, purgeGroup);\r\n\t\t\t\tthis._eventSeries = {};\r\n\t\t\t\tthis.cleanGroup();\r\n\t\t\t\ts = this.getGroup();\r\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\r\n\t\t\t}\r\n\r\n\t\t\tvar t = this.chart.theme,\r\n\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\r\n\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler),\r\n\t\t\t\tevents = this.events();\r\n\r\n\t\t\tfor(var i = this.series.length - 1; i >= 0; --i){\r\n\t\t\t\tvar run = this.series[i];\r\n\t\t\t\tif(!this.dirty && !run.dirty){\r\n\t\t\t\t\tt.skip();\r\n\t\t\t\t\tthis._reconnectEvents(run.name);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\trun.cleanGroup();\r\n\t\t\t\tif(!run.data.length){\r\n\t\t\t\t\trun.dirty = false;\r\n\t\t\t\t\tt.skip();\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(typeof run.data[0] == \"number\"){\r\n\t\t\t\t\tconsole.warn(\"dojox.charting.plot2d.Bubble: the data in the following series cannot be rendered as a bubble chart; \", run);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar theme = t.next(\"circle\", [this.opt, run]),\r\n\t\t\t\t\tpoints = arr.map(run.data, function(v){\r\n\t\t\t\t\t\treturn v ? {\r\n\t\t\t\t\t\t\tx: ht(v.x) + offsets.l,\r\n\t\t\t\t\t\t\ty: dim.height - offsets.b - vt(v.y),\r\n\t\t\t\t\t\t\tradius: this._vScaler.bounds.scale * (v.size / 2)\r\n\t\t\t\t\t\t} : null;\r\n\t\t\t\t\t}, this);\r\n\r\n\t\t\t\tif(run.hidden){\r\n\t\t\t\t\trun.dyn.fill = theme.series.fill;\r\n\t\t\t\t\trun.dyn.stroke =  theme.series.stroke;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\ts = run.group;\r\n                \r\n\t\t\t\tvar frontCircles = null, outlineCircles = null, shadowCircles = null, styleFunc = this.opt.styleFunc;\r\n\r\n\t\t\t\tvar getFinalTheme = function(item){\r\n\t\t\t\t\tif(styleFunc){\r\n\t\t\t\t\t\treturn t.addMixin(theme, \"circle\", [item, styleFunc(item)], true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn t.addMixin(theme, \"circle\", item, true);\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// make shadows if needed\r\n\t\t\t\tif(theme.series.shadow){\r\n\t\t\t\t\tshadowCircles = arr.map(points, function(item, i){\r\n\t\t\t\t\t\tif(item !== null){\r\n\t\t\t\t\t\t\tvar finalTheme = getFinalTheme(run.data[i]),\r\n\t\t\t\t\t\t\t\tshadow = finalTheme.series.shadow;\r\n\t\t\t\t\t\t\tvar shape = s.createCircle({\r\n\t\t\t\t\t\t\t\tcx: item.x + shadow.dx, cy: item.y + shadow.dy, r: item.radius\r\n\t\t\t\t\t\t\t}).setStroke(shadow).setFill(shadow.color);\r\n\t\t\t\t\t\t\tif(this.animate){\r\n\t\t\t\t\t\t\t\tthis._animateBubble(shape, dim.height - offsets.b, item.radius);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn shape;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t\tif(shadowCircles.length){\r\n\t\t\t\t\t\trun.dyn.shadow = shadowCircles[shadowCircles.length - 1].getStroke();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// make outlines if needed\r\n\t\t\t\tif(theme.series.outline){\r\n\t\t\t\t\toutlineCircles = arr.map(points, function(item, i){\r\n\t\t\t\t\t\tif(item !== null){\r\n\t\t\t\t\t\t\tvar finalTheme = getFinalTheme(run.data[i]),\r\n\t\t\t\t\t\t\t\toutline = dc.makeStroke(finalTheme.series.outline);\r\n\t\t\t\t\t\t\toutline.width = 2 * outline.width + theme.series.stroke.width;\r\n\t\t\t\t\t\t\tvar shape = s.createCircle({\r\n\t\t\t\t\t\t\t\tcx: item.x, cy: item.y, r: item.radius\r\n\t\t\t\t\t\t\t}).setStroke(outline);\r\n\t\t\t\t\t\t\tif(this.animate){\r\n\t\t\t\t\t\t\t\tthis._animateBubble(shape, dim.height - offsets.b, item.radius);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn shape;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t\tif(outlineCircles.length){\r\n\t\t\t\t\t\trun.dyn.outline = outlineCircles[outlineCircles.length - 1].getStroke();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//\trun through the data and add the circles.\r\n\t\t\t\tfrontCircles = arr.map(points, function(item, i){\r\n\t\t\t\t\tif(item !== null){\r\n\t\t\t\t\t\tvar finalTheme = getFinalTheme(run.data[i]),\r\n\t\t\t\t\t\t\trect = {\r\n\t\t\t\t\t\t\t\tx: item.x - item.radius,\r\n\t\t\t\t\t\t\t\ty: item.y - item.radius,\r\n\t\t\t\t\t\t\t\twidth:  2 * item.radius,\r\n\t\t\t\t\t\t\t\theight: 2 * item.radius\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\tvar specialFill = this._plotFill(finalTheme.series.fill, dim, offsets);\r\n\t\t\t\t\t\tspecialFill = this._shapeFill(specialFill, rect);\r\n\t\t\t\t\t\tvar shape = s.createCircle({\r\n\t\t\t\t\t\t\tcx: item.x, cy: item.y, r: item.radius\r\n\t\t\t\t\t\t}).setFill(specialFill).setStroke(finalTheme.series.stroke);\r\n\t\t\t\t\t\tif(shape.setFilter && finalTheme.series.filter){\r\n\t\t\t\t\t\t\tshape.setFilter(finalTheme.series.filter);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this.animate){\r\n\t\t\t\t\t\t\tthis._animateBubble(shape, dim.height - offsets.b, item.radius);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.createLabel(s, run.data[i], rect, finalTheme);\r\n\t\t\t\t\t\treturn shape;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}, this);\r\n\t\t\t\tif(frontCircles.length){\r\n\t\t\t\t\trun.dyn.fill   = frontCircles[frontCircles.length - 1].getFill();\r\n\t\t\t\t\trun.dyn.stroke = frontCircles[frontCircles.length - 1].getStroke();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(events){\r\n\t\t\t\t\tvar eventSeries = new Array(frontCircles.length);\r\n\t\t\t\t\tarr.forEach(frontCircles, function(s, i){\r\n\t\t\t\t\t\tif(s !== null){\r\n\t\t\t\t\t\t\tvar o = {\r\n\t\t\t\t\t\t\t\telement: \"circle\",\r\n\t\t\t\t\t\t\t\tindex:   i,\r\n\t\t\t\t\t\t\t\trun:     run,\r\n\t\t\t\t\t\t\t\tshape:   s,\r\n\t\t\t\t\t\t\t\toutline: outlineCircles && outlineCircles[i] || null,\r\n\t\t\t\t\t\t\t\tshadow:  shadowCircles && shadowCircles[i] || null,\r\n\t\t\t\t\t\t\t\tx:       run.data[i].x,\r\n\t\t\t\t\t\t\t\ty:       run.data[i].y,\r\n\t\t\t\t\t\t\t\tr:       run.data[i].size / 2,\r\n\t\t\t\t\t\t\t\tcx:      points[i].x,\r\n\t\t\t\t\t\t\t\tcy:      points[i].y,\r\n\t\t\t\t\t\t\t\tcr:      points[i].radius\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tthis._connectEvents(o);\r\n\t\t\t\t\t\t\teventSeries[i] = o;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t\tthis._eventSeries[run.name] = eventSeries;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdelete this._eventSeries[run.name];\r\n\t\t\t\t}\r\n\r\n\t\t\t\trun.dirty = false;\r\n\t\t\t}\r\n\t\t\tthis.dirty = false;\r\n\t\t\t// chart mirroring starts\r\n\t\t\tif(has(\"dojo-bidi\")){\r\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\r\n\t\t\t}\r\n\t\t\t// chart mirroring ends\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Bubble\r\n\t\t},\r\n\t\t_animateBubble: function(shape, offset, size){\r\n\t\t\tfx.animateTransform(lang.delegate({\r\n\t\t\t\tshape: shape,\r\n\t\t\t\tduration: 1200,\r\n\t\t\t\ttransform: [\r\n\t\t\t\t\t{name: \"translate\", start: [0, offset], end: [0, 0]},\r\n\t\t\t\t\t{name: \"scale\", start: [0, 1/size], end: [1, 1]},\r\n\t\t\t\t\t{name: \"original\"}\r\n\t\t\t\t]\r\n\t\t\t}, this.animate)).play();\r\n\t\t}\r\n\t});\r\n});\r\n"]}