{"version":3,"sources":["charting/plot2d/Columns.js"],"names":["define","lang","arr","declare","has","CartesianBase","_PlotEvents","dc","df","dfr","du","fx","purgeGroup","lambda","defaultParams","gap","animate","enableCache","optionalParams","minBarSize","maxBarSize","stroke","outline","shadow","fill","filter","styleFunc","font","fontColor","constructor","chart","kwArgs","this","opt","clone","mixin","updateWithObject","updateWithPattern","renderingOptions","shape-rendering","getSeriesStats","stats","collectSimpleStats","series","hmin","hmax","createRect","run","creator","params","rect","_rectFreePool","length","pop","setShape","add","_rectUsePool","push","render","dim","offsets","zoom","isDataDirty","performZoom","s","resetEvents","dirty","isDirty","forEach","_eventSeries","cleanGroup","getGroup","forEachRev","item","t","theme","ht","_hScaler","scaler","getTransformerFromModel","vt","_vScaler","baseline","Math","max","bounds","lower","baselineHeight","events","bar","getBarProperties","z","serie","hidden","i","concat","next","eventSeries","Array","data","dyn","group","indexed","some","hasOwnProperty","min","floor","from","ceil","to","j","value","finalTheme","sshape","val","getValue","vv","y","h","abs","tMixin","addMixin","post","width","x","l","thickness","height","b","srect","dx","dy","setFill","color","setStroke","_animateColumn","specialFill","_plotFill","_shapeFill","shape","setFilter","getFill","getStroke","o","element","index","cx","cy","_connectEvents","isNaN","py","createLabel","name","skip","_reconnectEvents","_checkOrientation","seriesIndex","f","calculateBarSize","scale","size","voffset","vsize","animateTransform","delegate","duration","transform","start","end","play"],"mappings":"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","file":"../../../charting/plot2d/Columns.js","sourcesContent":["define([\"dojo/_base/lang\", \"dojo/_base/array\", \"dojo/_base/declare\", \"dojo/has\", \"./CartesianBase\", \"./_PlotEvents\", \"./common\",\r\n\t\t\"dojox/lang/functional\", \"dojox/lang/functional/reversed\", \"dojox/lang/utils\", \"dojox/gfx/fx\"], \r\n\tfunction(lang, arr, declare, has, CartesianBase, _PlotEvents, dc, df, dfr, du, fx){\r\n\r\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\r\n\r\n\treturn declare(\"dojox.charting.plot2d.Columns\", [CartesianBase, _PlotEvents], {\r\n\t\t// summary:\r\n\t\t//\t\tThe plot object representing a column chart (vertical bars).\r\n\t\tdefaultParams: {\r\n\t\t\tgap:\t0,\t\t// gap between columns in pixels\r\n\t\t\tanimate: null,  // animate bars into place\r\n\t\t\tenableCache: false\r\n\t\t},\r\n\t\toptionalParams: {\r\n\t\t\tminBarSize:\t1,\t// minimal column width in pixels\r\n\t\t\tmaxBarSize:\t1,\t// maximal column width in pixels\r\n\t\t\t// theme component\r\n\t\t\tstroke:\t\t{},\r\n\t\t\toutline:\t{},\r\n\t\t\tshadow:\t\t{},\r\n\t\t\tfill:\t\t{},\r\n\t\t\tfilter:     {},\r\n\t\t\tstyleFunc:  null,\r\n\t\t\tfont:\t\t\"\",\r\n\t\t\tfontColor:\t\"\"\r\n\t\t},\r\n\r\n\t\tconstructor: function(chart, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThe constructor for a columns chart.\r\n\t\t\t// chart: dojox/charting/Chart\r\n\t\t\t//\t\tThe chart this plot belongs to.\r\n\t\t\t// kwArgs: dojox.charting.plot2d.__BarCtorArgs?\r\n\t\t\t//\t\tAn optional keyword arguments object to help define the plot.\r\n\t\t\tthis.opt = lang.clone(lang.mixin(this.opt, this.defaultParams));\r\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\r\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\r\n\t\t\tthis.animate = this.opt.animate;\r\n\t\t\tthis.renderingOptions = { \"shape-rendering\": \"crispEdges\" };\r\n\t\t},\r\n\r\n\t\tgetSeriesStats: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\r\n\t\t\tvar stats = dc.collectSimpleStats(this.series);\r\n\t\t\tstats.hmin -= 0.5;\r\n\t\t\tstats.hmax += 0.5;\r\n\t\t\treturn stats; // Object\r\n\t\t},\r\n\t\t\r\n\t\tcreateRect: function(run, creator, params){\r\n\t\t\tvar rect;\r\n\t\t\tif(this.opt.enableCache && run._rectFreePool.length > 0){\r\n\t\t\t\trect = run._rectFreePool.pop();\r\n\t\t\t\trect.setShape(params);\r\n\t\t\t\t// was cleared, add it back\r\n\t\t\t\tcreator.add(rect);\r\n\t\t\t}else{\r\n\t\t\t\trect = creator.createRect(params);\r\n\t\t\t}\r\n\t\t\tif(this.opt.enableCache){\r\n\t\t\t\trun._rectUsePool.push(rect);\r\n\t\t\t}\r\n\t\t\treturn rect;\r\n\t\t},\r\n\r\n\t\trender: function(dim, offsets){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRun the calculations for any axes for this plot.\r\n\t\t\t// dim: Object\r\n\t\t\t//\t\tAn object in the form of { width, height }\r\n\t\t\t// offsets: Object\r\n\t\t\t//\t\tAn object of the form { l, r, t, b}.\r\n\t\t\t// returns: dojox/charting/plot2d/Columns\r\n\t\t\t//\t\tA reference to this plot for functional chaining.\r\n\t\t\tif(this.zoom && !this.isDataDirty()){\r\n\t\t\t\treturn this.performZoom(dim, offsets);\r\n\t\t\t}\r\n\t\t\tthis.resetEvents();\r\n\t\t\tthis.dirty = this.isDirty();\r\n\t\t\tvar s;\r\n\t\t\tif(this.dirty){\r\n\t\t\t\tarr.forEach(this.series, purgeGroup);\r\n\t\t\t\tthis._eventSeries = {};\r\n\t\t\t\tthis.cleanGroup();\r\n\t\t\t\ts = this.getGroup();\r\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\r\n\t\t\t}\r\n\t\t\tvar t = this.chart.theme,\r\n\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\r\n\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler),\r\n\t\t\t\tbaseline = Math.max(0, this._vScaler.bounds.lower),\r\n\t\t\t\tbaselineHeight = vt(baseline),\r\n\t\t\t\tevents = this.events(),\r\n\t\t\t\tbar = this.getBarProperties();\r\n\t\t\t\r\n\t\t\tvar z = this.series.length;\r\n\t\t\tarr.forEach(this.series, function(serie){if(serie.hidden){z--;}});\r\n\r\n\t\t\tfor(var i = this.series.length - 1; i >= 0; --i){\r\n\t\t\t\tvar run = this.series[i];\r\n\t\t\t\tif(!this.dirty && !run.dirty){\r\n\t\t\t\t\tt.skip();\r\n\t\t\t\t\tthis._reconnectEvents(run.name);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\trun.cleanGroup();\r\n\t\t\t\tif(this.opt.enableCache){\r\n\t\t\t\t\trun._rectFreePool = (run._rectFreePool?run._rectFreePool:[]).concat(run._rectUsePool?run._rectUsePool:[]);\r\n\t\t\t\t\trun._rectUsePool = [];\r\n\t\t\t\t}\r\n\t\t\t\tvar theme = t.next(\"column\", [this.opt, run]),\r\n\t\t\t\t\teventSeries = new Array(run.data.length);\r\n\r\n\t\t\t\tif(run.hidden){\r\n\t\t\t\t\trun.dyn.fill = theme.series.fill;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tz--;\r\n\r\n\t\t\t\ts = run.group;\r\n\t\t\t\tvar indexed = arr.some(run.data, function(item){\r\n\t\t\t\t\treturn typeof item == \"number\" || (item && !item.hasOwnProperty(\"x\"));\r\n\t\t\t\t});\r\n\t\t\t\t// on indexed charts we can easily just interate from the first visible to the last visible\r\n\t\t\t\t// data point to save time\r\n\t\t\t\tvar min = indexed?Math.max(0, Math.floor(this._hScaler.bounds.from - 1)):0;\r\n\t\t\t\tvar max = indexed?Math.min(run.data.length, Math.ceil(this._hScaler.bounds.to)):run.data.length;\r\n\t\t\t\tfor(var j = min; j < max; ++j){\r\n\t\t\t\t\tvar value = run.data[j];\r\n\t\t\t\t\tif(value != null){\r\n\t\t\t\t\t\tvar val = this.getValue(value, j, i, indexed),\r\n\t\t\t\t\t\t\tvv = vt(val.y),\r\n\t\t\t\t\t\t\th = Math.abs(vv - baselineHeight), \r\n\t\t\t\t\t\t\tfinalTheme,\r\n\t\t\t\t\t\t\tsshape;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(this.opt.styleFunc || typeof value != \"number\"){\r\n\t\t\t\t\t\t\tvar tMixin = typeof value != \"number\" ? [value] : [];\r\n\t\t\t\t\t\t\tif(this.opt.styleFunc){\r\n\t\t\t\t\t\t\t\ttMixin.push(this.opt.styleFunc(value));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfinalTheme = t.addMixin(theme, \"column\", tMixin, true);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tfinalTheme = t.post(theme, \"column\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(bar.width >= 1 && h >= 0){\r\n\t\t\t\t\t\t\tvar rect = {\r\n\t\t\t\t\t\t\t\tx: offsets.l + ht(val.x + 0.5) + bar.gap + bar.thickness * z,\r\n\t\t\t\t\t\t\t\ty: dim.height - offsets.b - (val.y > baseline ? vv : baselineHeight),\r\n\t\t\t\t\t\t\t\twidth: bar.width, \r\n\t\t\t\t\t\t\t\theight: h\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tif(finalTheme.series.shadow){\r\n\t\t\t\t\t\t\t\tvar srect = lang.clone(rect);\r\n\t\t\t\t\t\t\t\tsrect.x += finalTheme.series.shadow.dx;\r\n\t\t\t\t\t\t\t\tsrect.y += finalTheme.series.shadow.dy;\r\n\t\t\t\t\t\t\t\tsshape = this.createRect(run, s, srect).setFill(finalTheme.series.shadow.color).setStroke(finalTheme.series.shadow);\r\n\t\t\t\t\t\t\t\tif(this.animate){\r\n\t\t\t\t\t\t\t\t\tthis._animateColumn(sshape, dim.height - offsets.b + baselineHeight, h);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar specialFill = this._plotFill(finalTheme.series.fill, dim, offsets);\r\n\t\t\t\t\t\t\tspecialFill = this._shapeFill(specialFill, rect);\r\n\t\t\t\t\t\t\tvar shape = this.createRect(run, s, rect).setFill(specialFill).setStroke(finalTheme.series.stroke);\r\n\t\t\t\t\t\t\tif(shape.setFilter && finalTheme.series.filter){\r\n\t\t\t\t\t\t\t\tshape.setFilter(finalTheme.series.filter);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\trun.dyn.fill   = shape.getFill();\r\n\t\t\t\t\t\t\trun.dyn.stroke = shape.getStroke();\r\n\t\t\t\t\t\t\tif(events){\r\n\t\t\t\t\t\t\t\tvar o = {\r\n\t\t\t\t\t\t\t\t\telement: \"column\",\r\n\t\t\t\t\t\t\t\t\tindex:   j,\r\n\t\t\t\t\t\t\t\t\trun:     run,\r\n\t\t\t\t\t\t\t\t\tshape:   shape,\r\n\t\t\t\t\t\t\t\t\tshadow:  sshape,\r\n\t\t\t\t\t\t\t\t\tcx:      val.x + 0.5,\r\n\t\t\t\t\t\t\t\t\tcy:      val.y,\r\n\t\t\t\t\t\t\t\t\tx:\t     indexed?j:run.data[j].x,\r\n\t\t\t\t\t\t\t\t\ty:\t \t indexed?run.data[j]:run.data[j].y\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tthis._connectEvents(o);\r\n\t\t\t\t\t\t\t\teventSeries[j] = o;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// if val.py is here, this means we are stacking and we need to subtract previous\r\n\t\t\t\t\t\t\t// value to get the high in which we will lay out the label\r\n\t\t\t\t\t\t\tif(!isNaN(val.py) && val.py > baseline){\r\n\t\t\t\t\t\t\t\trect.height = vv - vt(val.py);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.createLabel(s, value, rect, finalTheme);\r\n\t\t\t\t\t\t\tif(this.animate){\r\n\t\t\t\t\t\t\t\tthis._animateColumn(shape, dim.height - offsets.b - baselineHeight, h);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._eventSeries[run.name] = eventSeries;\r\n\t\t\t\trun.dirty = false;\r\n\t\t\t}\r\n\t\t\tthis.dirty = false;\r\n\t\t\t// chart mirroring starts\r\n\t\t\tif(has(\"dojo-bidi\")){\r\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\r\n\t\t\t}\r\n\t\t\t// chart mirroring ends\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Columns\r\n\t\t},\r\n\t\tgetValue: function(value, j, seriesIndex, indexed){\r\n\t\t\tvar y,x;\r\n\t\t\tif(indexed){\r\n\t\t\t\tif(typeof value == \"number\"){\r\n\t\t\t\t\ty = value;\r\n\t\t\t\t}else{\r\n\t\t\t\t\ty = value.y;\r\n\t\t\t\t}\r\n\t\t\t\tx = j;\r\n\t\t\t}else{\r\n\t\t\t\ty = value.y;\r\n\t\t\t\tx = value.x - 1;\r\n\t\t\t}\r\n\t\t\treturn { x: x, y: y };\r\n\t\t},\r\n\t\tgetBarProperties: function(){\r\n\t\t\tvar f = dc.calculateBarSize(this._hScaler.bounds.scale, this.opt);\r\n\t\t\treturn {gap: f.gap, width: f.size, thickness: 0};\r\n\t\t},\r\n\t\t_animateColumn: function(shape, voffset, vsize){\r\n\t\t\tif(vsize==0){\r\n\t\t\t\tvsize = 1;\r\n\t\t\t}\r\n\t\t\tfx.animateTransform(lang.delegate({\r\n\t\t\t\tshape: shape,\r\n\t\t\t\tduration: 1200,\r\n\t\t\t\ttransform: [\r\n\t\t\t\t\t{name: \"translate\", start: [0, voffset - (voffset/vsize)], end: [0, 0]},\r\n\t\t\t\t\t{name: \"scale\", start: [1, 1/vsize], end: [1, 1]},\r\n\t\t\t\t\t{name: \"original\"}\r\n\t\t\t\t]\r\n\t\t\t}, this.animate)).play();\r\n\t\t}\r\n\t\t\r\n\t});\r\n});\r\n"]}