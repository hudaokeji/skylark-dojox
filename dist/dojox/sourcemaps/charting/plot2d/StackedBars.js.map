{"version":3,"sources":["charting/plot2d/StackedBars.js"],"names":["define","declare","Bars","commonStacked","getSeriesStats","t","stats","collectStats","this","series","hmin","hmax","vmin","vmax","getValue","value","index","seriesIndex","indexed","y","x","getIndexValue","py"],"mappings":";;;;;;;AAAAA,QAAQ,qBAAsB,SAAU,mBACvC,SAASC,EAASC,EAAMC,GAExB,OAAOF,EAAQ,oCAAqCC,GAGnDE,eAAgB,WAKf,IAAqDC,EAAjDC,EAAQH,EAAcI,aAAaC,KAAKC,QAK5C,OAJAH,EAAMI,MAAQ,GACdJ,EAAMK,MAAQ,GACdN,EAAIC,EAAMI,KAAMJ,EAAMI,KAAOJ,EAAMM,KAAMN,EAAMM,KAAOP,EACtDA,EAAIC,EAAMK,KAAML,EAAMK,KAAOL,EAAMO,KAAMP,EAAMO,KAAOR,EAC/CC,GAERQ,SAAU,SAASC,EAAOC,EAAOC,EAAaC,GAC7C,IAAIC,EAAEC,EAUN,OATGF,GACFE,EAAIJ,EACJG,EAAIhB,EAAckB,cAAcb,KAAKC,OAAQQ,EAAaG,KAE1DA,EAAIL,EAAMK,EAAI,EAEdD,IADAA,EAAIhB,EAAcW,SAASN,KAAKC,OAAQQ,EAAaF,EAAMK,IAClD,GAAGD,EAAE,GAAGA,EAAE,KAAMA,EAAE,GAAGA,EAAE,GAAG,QAG3BC,EAAGA,EAAGD,EAAGA,EAAE,GAAIG,GAAIH,EAAE","file":"../../../charting/plot2d/StackedBars.js","sourcesContent":["define([\"dojo/_base/declare\", \"./Bars\", \"./commonStacked\"], \r\n\tfunction(declare, Bars, commonStacked){\r\n\r\n\treturn declare(\"dojox.charting.plot2d.StackedBars\", Bars, {\r\n\t\t// summary:\r\n\t\t//\t\tThe plot object representing a stacked bar chart (horizontal bars).\r\n\t\tgetSeriesStats: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\r\n\t\t\tvar stats = commonStacked.collectStats(this.series), t;\r\n\t\t\tstats.hmin -= 0.5;\r\n\t\t\tstats.hmax += 0.5;\r\n\t\t\tt = stats.hmin, stats.hmin = stats.vmin, stats.vmin = t;\r\n\t\t\tt = stats.hmax, stats.hmax = stats.vmax, stats.vmax = t;\r\n\t\t\treturn stats; // Object\r\n\t\t},\r\n\t\tgetValue: function(value, index, seriesIndex, indexed){\r\n\t\t\tvar y,x;\r\n\t\t\tif(indexed){\r\n\t\t\t\tx = index;\r\n\t\t\t\ty = commonStacked.getIndexValue(this.series, seriesIndex, x);\r\n\t\t\t}else{\r\n\t\t\t\tx = value.x - 1;\r\n\t\t\t\ty = commonStacked.getValue(this.series, seriesIndex, value.x);\r\n\t\t\t\ty = [  y[0]?y[0].y:null, y[1]?y[1]:null ];\r\n\t\t\t}\r\n\t\t\t// in py we return the previous stack value as we need it to position labels on columns\r\n\t\t\treturn { x: x, y: y[0], py: y[1] };\r\n\t\t}\r\n\t});\r\n});\r\n"]}