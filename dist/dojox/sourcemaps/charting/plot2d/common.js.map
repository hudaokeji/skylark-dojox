{"version":3,"sources":["charting/plot2d/common.js"],"names":["define","lang","arr","Color","g","df","sc","common","getObject","mixin","doIfLoaded","makeStroke","stroke","color","makeParameters","defaultStroke","augmentColor","target","t","c","a","augmentStroke","s","augmentFill","fill","defaultStats","vmin","Number","POSITIVE_INFINITY","vmax","NEGATIVE_INFINITY","hmin","hmax","collectSimpleStats","series","stats","delegate","i","length","run","j","data","old_vmin","old_vmax","forEach","val","x","y","isNaN","Math","min","max","ymin","ymax","old_hmin","old_hmax","xmin","xmax","calculateBarSize","availableSize","opt","clusterSize","gap","size","minBarSize","maxBarSize","collectStackedStats","clone","foldl","v","curve","tension","array","slice","map","item","dx","dy","p0","p3","bz1x","bz1y","bz2x","bz2y","p1","p2","f","p1p2","sqrt","p0p2","p1p3","p0p2f","p1p3f","join","getLabel","number","fixed","precision","numberLib","format","places","toFixed","toString"],"mappings":"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","file":"../../../charting/plot2d/common.js","sourcesContent":["define([\"dojo/_base/lang\", \"dojo/_base/array\", \"dojo/_base/Color\", \r\n\t\t\"dojox/gfx\", \"dojox/lang/functional\", \"../scaler/common\"], \r\n\tfunction(lang, arr, Color, g, df, sc){\r\n\t\r\n\tvar common = lang.getObject(\"dojox.charting.plot2d.common\", true);\r\n\t\r\n\treturn lang.mixin(common, {\t\r\n\t\tdoIfLoaded: sc.doIfLoaded,\r\n\t\tmakeStroke: function(stroke){\r\n\t\t\tif(!stroke){ return stroke; }\r\n\t\t\tif(typeof stroke == \"string\" || stroke instanceof Color){\r\n\t\t\t\tstroke = {color: stroke};\r\n\t\t\t}\r\n\t\t\treturn g.makeParameters(g.defaultStroke, stroke);\r\n\t\t},\r\n\t\taugmentColor: function(target, color){\r\n\t\t\tvar t = new Color(target),\r\n\t\t\t\tc = new Color(color);\r\n\t\t\tc.a = t.a;\r\n\t\t\treturn c;\r\n\t\t},\r\n\t\taugmentStroke: function(stroke, color){\r\n\t\t\tvar s = common.makeStroke(stroke);\r\n\t\t\tif(s){\r\n\t\t\t\ts.color = common.augmentColor(s.color, color);\r\n\t\t\t}\r\n\t\t\treturn s;\r\n\t\t},\r\n\t\taugmentFill: function(fill, color){\r\n\t\t\tvar fc, c = new Color(color);\r\n\t\t\tif(typeof fill == \"string\" || fill instanceof Color){\r\n\t\t\t\treturn common.augmentColor(fill, color);\r\n\t\t\t}\r\n\t\t\treturn fill;\r\n\t\t},\r\n\r\n\t\tdefaultStats: {\r\n\t\t\tvmin: Number.POSITIVE_INFINITY, vmax: Number.NEGATIVE_INFINITY,\r\n\t\t\thmin: Number.POSITIVE_INFINITY, hmax: Number.NEGATIVE_INFINITY\r\n\t\t},\r\n\r\n\t\tcollectSimpleStats: function(series){\r\n\t\t\tvar stats = lang.delegate(common.defaultStats);\r\n\t\t\tfor(var i = 0; i < series.length; ++i){\r\n\t\t\t\tvar run = series[i];\r\n\t\t\t\tfor(var j = 0; j < run.data.length; j++){\r\n\t\t\t\t\tif(run.data[j] !== null){\r\n\t\t\t\t\t\tif(typeof run.data[j] == \"number\"){\r\n\t\t\t\t\t\t\t// 1D case\r\n\t\t\t\t\t\t\tvar old_vmin = stats.vmin, old_vmax = stats.vmax;\r\n\t\t\t\t\t\t\tarr.forEach(run.data, function(val, i){\r\n\t\t\t\t\t\t\t\tif(val !== null){\r\n\t\t\t\t\t\t\t\t\tvar x = i + 1, y = val;\r\n\t\t\t\t\t\t\t\t\tif(isNaN(y)){ y = 0; }\r\n\t\t\t\t\t\t\t\t\tstats.hmin = Math.min(stats.hmin, x);\r\n\t\t\t\t\t\t\t\t\tstats.hmax = Math.max(stats.hmax, x);\r\n\t\t\t\t\t\t\t\t\tstats.vmin = Math.min(stats.vmin, y);\r\n\t\t\t\t\t\t\t\t\tstats.vmax = Math.max(stats.vmax, y);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tif(\"ymin\" in run){ stats.vmin = Math.min(old_vmin, run.ymin); }\r\n\t\t\t\t\t\t\tif(\"ymax\" in run){ stats.vmax = Math.max(old_vmax, run.ymax); }\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t// 2D case\r\n\t\t\t\t\t\t\tvar old_hmin = stats.hmin, old_hmax = stats.hmax,\r\n\t\t\t\t\t\t\t\told_vmin = stats.vmin, old_vmax = stats.vmax;\r\n\t\t\t\t\t\t\tif(!(\"xmin\" in run) || !(\"xmax\" in run) || !(\"ymin\" in run) || !(\"ymax\" in run)){\r\n\t\t\t\t\t\t\t\tarr.forEach(run.data, function(val, i){\r\n\t\t\t\t\t\t\t\t\tif(val !== null){\r\n\t\t\t\t\t\t\t\t\t\tvar x = \"x\" in val ? val.x : i + 1, y = val.y;\r\n\t\t\t\t\t\t\t\t\t\tif(isNaN(x)){ x = 0; }\r\n\t\t\t\t\t\t\t\t\t\tif(isNaN(y)){ y = 0; }\r\n\t\t\t\t\t\t\t\t\t\tstats.hmin = Math.min(stats.hmin, x);\r\n\t\t\t\t\t\t\t\t\t\tstats.hmax = Math.max(stats.hmax, x);\r\n\t\t\t\t\t\t\t\t\t\tstats.vmin = Math.min(stats.vmin, y);\r\n\t\t\t\t\t\t\t\t\t\tstats.vmax = Math.max(stats.vmax, y);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(\"xmin\" in run){ stats.hmin = Math.min(old_hmin, run.xmin); }\r\n\t\t\t\t\t\t\tif(\"xmax\" in run){ stats.hmax = Math.max(old_hmax, run.xmax); }\r\n\t\t\t\t\t\t\tif(\"ymin\" in run){ stats.vmin = Math.min(old_vmin, run.ymin); }\r\n\t\t\t\t\t\t\tif(\"ymax\" in run){ stats.vmax = Math.max(old_vmax, run.ymax); }\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn stats;\r\n\t\t},\r\n\r\n\t\tcalculateBarSize: function(/* Number */ availableSize, /* Object */ opt, /* Number? */ clusterSize){\r\n\t\t\tif(!clusterSize){\r\n\t\t\t\tclusterSize = 1;\r\n\t\t\t}\r\n\t\t\tvar gap = opt.gap, size = (availableSize - 2 * gap) / clusterSize;\r\n\t\t\tif(\"minBarSize\" in opt){\r\n\t\t\t\tsize = Math.max(size, opt.minBarSize);\r\n\t\t\t}\r\n\t\t\tif(\"maxBarSize\" in opt){\r\n\t\t\t\tsize = Math.min(size, opt.maxBarSize);\r\n\t\t\t}\r\n\t\t\tsize = Math.max(size, 1);\r\n\t\t\tgap = (availableSize - size * clusterSize) / 2;\r\n\t\t\treturn {size: size, gap: gap};\t// Object\r\n\t\t},\r\n\r\n\t\tcollectStackedStats: function(series){\r\n\t\t\t// collect statistics\r\n\t\t\tvar stats = lang.clone(common.defaultStats);\r\n\t\t\tif(series.length){\r\n\t\t\t\t// 1st pass: find the maximal length of runs\r\n\t\t\t\tstats.hmin = Math.min(stats.hmin, 1);\r\n\t\t\t\tstats.hmax = df.foldl(series, \"seed, run -> Math.max(seed, run.data.length)\", stats.hmax);\r\n\t\t\t\t// 2nd pass: stack values\r\n\t\t\t\tfor(var i = 0; i < stats.hmax; ++i){\r\n\t\t\t\t\tvar v = series[0].data[i];\r\n\t\t\t\t\tv = v && (typeof v == \"number\" ? v : v.y);\r\n\t\t\t\t\tif(isNaN(v)){ v = 0; }\r\n\t\t\t\t\tstats.vmin = Math.min(stats.vmin, v);\r\n\t\t\t\t\tfor(var j = 1; j < series.length; ++j){\r\n\t\t\t\t\t\tvar t = series[j].data[i];\r\n\t\t\t\t\t\tt = t && (typeof t == \"number\" ? t : t.y);\r\n\t\t\t\t\t\tif(isNaN(t)){ t = 0; }\r\n\t\t\t\t\t\tv += t;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstats.vmax = Math.max(stats.vmax, v);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn stats;\r\n\t\t},\r\n\r\n\t\tcurve: function(/* Number[] */a, /* Number|String */tension){\r\n\t\t\t//\tFIX for #7235, submitted by Enzo Michelangeli.\r\n\t\t\t//\tEmulates the smoothing algorithms used in a famous, unnamed spreadsheet\r\n\t\t\t//\t\tprogram ;)\r\n\t\t\tvar array = a.slice(0);\r\n\t\t\tif(tension == \"x\") {\r\n\t\t\t\tarray[array.length] = array[0];   // add a last element equal to the first, closing the loop\r\n\t\t\t}\r\n\t\t\tvar p=arr.map(array, function(item, i){\r\n\t\t\t\tif(i==0){ return \"M\" + item.x + \",\" + item.y; }\r\n\t\t\t\tif(!isNaN(tension)) { // use standard Dojo smoothing in tension is numeric\r\n\t\t\t\t\tvar dx=item.x-array[i-1].x, dy=array[i-1].y;\r\n\t\t\t\t\treturn \"C\"+(item.x-(tension-1)*(dx/tension))+\",\"+dy+\" \"+(item.x-(dx/tension))+\",\"+item.y+\" \"+item.x+\",\"+item.y;\r\n\t\t\t\t} else if(tension == \"X\" || tension == \"x\" || tension == \"S\") {\r\n\t\t\t\t\t// use Excel \"line smoothing\" algorithm (http://xlrotor.com/resources/files.shtml)\r\n\t\t\t\t\tvar p0, p1 = array[i-1], p2 = array[i], p3;\r\n\t\t\t\t\tvar bz1x, bz1y, bz2x, bz2y;\r\n\t\t\t\t\tvar f = 1/6;\r\n\t\t\t\t\tif(i==1) {\r\n\t\t\t\t\t\tif(tension == \"x\") {\r\n\t\t\t\t\t\t\tp0 = array[array.length-2];\r\n\t\t\t\t\t\t} else { // \"tension == X || tension == \"S\"\r\n\t\t\t\t\t\t\tp0 = p1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tf = 1/3;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tp0 = array[i-2];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(i==(array.length-1)) {\r\n\t\t\t\t\t\tif(tension == \"x\") {\r\n\t\t\t\t\t\t\tp3 = array[1];\r\n\t\t\t\t\t\t} else { // \"tension == X || tension == \"S\"\r\n\t\t\t\t\t\t\tp3 = p2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tf = 1/3;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tp3 = array[i+1];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar p1p2 = Math.sqrt((p2.x-p1.x)*(p2.x-p1.x)+(p2.y-p1.y)*(p2.y-p1.y));\r\n\t\t\t\t\tvar p0p2 = Math.sqrt((p2.x-p0.x)*(p2.x-p0.x)+(p2.y-p0.y)*(p2.y-p0.y));\r\n\t\t\t\t\tvar p1p3 = Math.sqrt((p3.x-p1.x)*(p3.x-p1.x)+(p3.y-p1.y)*(p3.y-p1.y));\r\n\r\n\t\t\t\t\tvar p0p2f = p0p2 * f;\r\n\t\t\t\t\tvar p1p3f = p1p3 * f;\r\n\r\n\t\t\t\t\tif(p0p2f > p1p2/2 && p1p3f > p1p2/2) {\r\n\t\t\t\t\t\tp0p2f = p1p2/2;\r\n\t\t\t\t\t\tp1p3f = p1p2/2;\r\n\t\t\t\t\t} else if(p0p2f > p1p2/2) {\r\n\t\t\t\t\t\tp0p2f = p1p2/2;\r\n\t\t\t\t\t\tp1p3f = p1p2/2 * p1p3/p0p2;\r\n\t\t\t\t\t} else if(p1p3f > p1p2/2) {\r\n\t\t\t\t\t\tp1p3f = p1p2/2;\r\n\t\t\t\t\t\tp0p2f = p1p2/2 * p0p2/p1p3;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(tension == \"S\") {\r\n\t\t\t\t\t\tif(p0 == p1) { p0p2f = 0; }\r\n\t\t\t\t\t\tif(p2 == p3) { p1p3f = 0; }\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbz1x = p1.x + p0p2f*(p2.x - p0.x)/p0p2;\r\n\t\t\t\t\tbz1y = p1.y + p0p2f*(p2.y - p0.y)/p0p2;\r\n\t\t\t\t\tbz2x = p2.x - p1p3f*(p3.x - p1.x)/p1p3;\r\n\t\t\t\t\tbz2y = p2.y - p1p3f*(p3.y - p1.y)/p1p3;\r\n\t\t\t\t}\r\n\t\t\t\treturn \"C\"+(bz1x+\",\"+bz1y+\" \"+bz2x+\",\"+bz2y+\" \"+p2.x+\",\"+p2.y);\r\n\t\t\t});\r\n\t\t\treturn p.join(\" \");\r\n\t\t},\r\n\t\t\r\n\t\tgetLabel: function(/*Number*/number, /*Boolean*/fixed, /*Number*/precision){\r\n\t\t\treturn sc.doIfLoaded(\"dojo/number\", function(numberLib){\r\n\t\t\t\treturn (fixed ? numberLib.format(number, {places : precision}) :\r\n\t\t\t\t\tnumberLib.format(number)) || \"\";\r\n\t\t\t}, function(){\r\n\t\t\t\treturn fixed ? number.toFixed(precision) : number.toString();\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n});\r\n"]}