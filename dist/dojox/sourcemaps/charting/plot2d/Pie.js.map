{"version":3,"sources":["charting/plot2d/Pie.js"],"names":["define","lang","arr","declare","Base","PlotEvents","dc","g","m","df","du","has","defaultParams","labels","ticks","fixed","precision","labelOffset","labelStyle","htmlLabels","radGrad","fanSize","startAngle","optionalParams","radius","omitLabels","stroke","outline","shadow","fill","filter","styleFunc","font","fontColor","labelWiring","constructor","chart","kwArgs","this","opt","clone","updateWithObject","updateWithPattern","axes","run","dyn","runFilter","clear","inherited","arguments","setAxis","axis","addSeries","getSeriesStats","delegate","defaultStats","getRequiredColors","data","length","render","dim","offsets","dirty","resetEvents","_eventSeries","cleanGroup","s","group","t","theme","size","filteredRun","slices","shift","labelR","rx","width","l","r","ry","height","b","Math","min","labelFont","series","_degToRad","start","events","map","item","i","hidden","push","some","y","text","circle","cx","cy","scircle","dx","dy","createCircle","setFill","color","setStroke","setFilter","every","foldl","x","_getLabel","v","themes","tMixin","next","normalizedLength","splitFontString","foldl1","label","_base","_getTextBox","w","eventSeries","Array","slice","specialFill","o","_plotFill","_shapeFill","_pseudoRadialFill","shape","element","index","cr","_connectEvents","end","PI","step","x1","cos","y1","sin","x2","y2","type","createGroup","nfans","ceil","delta","j","fansx","fansy","fanex","faney","createPath","moveTo","lineTo","arcTo","closePath","getBoundingBox","isRtl","isRightToLeft","renderLabel","labelAngle","labeledSlices","forEach","angle","left","omit","labelHeight","h","_getProperLabelRadius","leftColumn","rightColumn","labelWidth","jointX","labelX","wiring","abs","esi","name","_checkOrientation","minRidius","leftCenterSlice","rightCenterSlice","leftMinSIN","rightMinSIN","tempSIN","_calculateLabelR","firstSlice","nextLabelR","currentLabelR"],"mappings":"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","file":"../../../charting/plot2d/Pie.js","sourcesContent":["define([\"dojo/_base/lang\", \"dojo/_base/array\" ,\"dojo/_base/declare\", \r\n\t\t\"./Base\", \"./_PlotEvents\", \"./common\",\r\n\t\t\"dojox/gfx\", \"dojox/gfx/matrix\", \"dojox/lang/functional\", \"dojox/lang/utils\",\"dojo/has\"],\r\n\tfunction(lang, arr, declare, Base, PlotEvents, dc, g, m, df, du, has){\r\n\r\n\t/*=====\r\n\tdeclare(\"dojox.charting.plot2d.__PieCtorArgs\", dojox.charting.plot2d.__DefaultCtorArgs, {\r\n\t\t// summary:\r\n\t\t//\t\tSpecialized keyword arguments object for use in defining parameters on a Pie chart.\r\n\t\r\n\t\t// labels: Boolean?\r\n\t\t//\t\tWhether or not to draw labels for each pie slice.  Default is true.\r\n\t\tlabels:\t\t\ttrue,\r\n\t\r\n\t\t// ticks: Boolean?\r\n\t\t//\t\tWhether or not to draw ticks to labels within each slice. Default is false.\r\n\t\tticks:\t\t\tfalse,\r\n\t\r\n\t\t// fixed: Boolean?\r\n\t\t//\t\tWhether a fixed precision must be applied to data values for display. Default is true.\r\n\t\tfixed:\t\t\ttrue,\r\n\t\r\n\t\t// precision: Number?\r\n\t\t//\t\tThe precision at which to round data values for display. Default is 0.\r\n\t\tprecision:\t\t1,\r\n\t\r\n\t\t// labelOffset: Number?\r\n\t\t//\t\tThe amount in pixels by which to offset labels.  Default is 20.\r\n\t\tlabelOffset:\t20,\r\n\t\r\n\t\t// labelStyle: String?\r\n\t\t//\t\tOptions as to where to draw labels.  Values include \"default\", and \"columns\".\tDefault is \"default\".\r\n\t\tlabelStyle:\t\t\"default\",\t// default/columns\r\n\t\t\r\n\t\t// omitLabels: Boolean?\r\n\t\t//\t\tWhether labels of slices small to the point of not being visible are omitted.\tDefault false.\r\n\t\tomitLabels: false,\r\n\t\t\r\n\t\t// htmlLabels: Boolean?\r\n\t\t//\t\tWhether or not to use HTML to render slice labels. Default is true.\r\n\t\thtmlLabels:\t\ttrue,\r\n\t\r\n\t\t// radGrad: String?\r\n\t\t//\t\tThe type of radial gradient to use in rendering.  Default is \"native\".\r\n\t\tradGrad:        \"native\",\r\n\t\r\n\t\t// fanSize: Number?\r\n\t\t//\t\tThe amount for a radial gradient.  Default is 5.\r\n\t\tfanSize:\t\t5,\r\n\t\r\n\t\t// startAngle: Number?\r\n\t\t//\t\tWhere to being rendering gradients in slices, in degrees.  Default is 0.\r\n\t\tstartAngle:     0,\r\n\t\r\n\t\t// radius: Number?\r\n\t\t//\t\tThe size of the radial gradient.  Default is 0.\r\n\t\tradius:\t\t0,\r\n\r\n\t\t// shadow: dojox.gfx.Stroke?\r\n\t\t//\t\tAn optional stroke to use to draw any shadows for a series on a plot.\r\n\t\tshadow:\t\t{},\r\n\r\n\t\t// fill: dojox.gfx.Fill?\r\n\t\t//\t\tAny fill to be used for elements on the plot.\r\n\t\tfill:\t\t{},\r\n\r\n\t\t// filter: dojox.gfx.Filter?\r\n\t\t//\t\tAn SVG filter to be used for elements on the plot. gfx SVG renderer must be used and dojox/gfx/svgext must\r\n\t\t//\t\tbe required for this to work.\r\n\t\tfilter:\t\t{},\r\n\r\n\t\t// styleFunc: Function?\r\n\t\t//\t\tA function that returns a styling object for the a given data item.\r\n\t\tstyleFunc:\tnull\r\n\t});\r\n\t=====*/\r\n\r\n\tvar FUDGE_FACTOR = 0.2; // use to overlap fans\r\n\r\n\treturn declare(\"dojox.charting.plot2d.Pie\", [Base, PlotEvents], {\r\n\t\t// summary:\r\n\t\t//\t\tThe plot that represents a typical pie chart.\r\n\t\tdefaultParams: {\r\n\t\t\tlabels:\t\t\ttrue,\r\n\t\t\tticks:\t\t\tfalse,\r\n\t\t\tfixed:\t\t\ttrue,\r\n\t\t\tprecision:\t\t1,\r\n\t\t\tlabelOffset:\t20,\r\n\t\t\tlabelStyle:\t\t\"default\",\t// default/columns\r\n\t\t\thtmlLabels:\t\ttrue,\t\t// use HTML to draw labels\r\n\t\t\tradGrad:        \"native\",\t// or \"linear\", or \"fan\"\r\n\t\t\tfanSize:\t\t5,\t\t\t// maximum fan size in degrees\r\n\t\t\tstartAngle:     0\t\t\t// start angle for slices in degrees\r\n\t\t},\r\n\t\toptionalParams: {\r\n\t\t\tradius:\t\t0,\r\n\t\t\tomitLabels: false,\r\n\t\t\t// theme components\r\n\t\t\tstroke:\t\t{},\r\n\t\t\toutline:\t{},\r\n\t\t\tshadow:\t\t{},\r\n\t\t\tfill:\t\t{},\r\n\t\t\tfilter:     {},\r\n\t\t\tstyleFunc:\tnull,\r\n\t\t\tfont:\t\t\"\",\r\n\t\t\tfontColor:\t\"\",\r\n\t\t\tlabelWiring: {}\r\n\t\t},\r\n\r\n\t\tconstructor: function(chart, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate a pie plot.\r\n\t\t\tthis.opt = lang.clone(this.defaultParams);\r\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\r\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\r\n\t\t\tthis.axes = [];\r\n\t\t\tthis.run = null;\r\n\t\t\tthis.dyn = [];\r\n\t\t\tthis.runFilter = []; \r\n\t\t},\r\n\t\tclear: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tClear out all of the information tied to this plot.\r\n\t\t\t// returns: dojox/charting/plot2d/Pie\r\n\t\t\t//\t\tA reference to this plot for functional chaining.\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.dyn = [];\r\n\t\t\tthis.run = null;\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Pie\r\n\t\t},\r\n\t\tsetAxis: function(axis){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDummy method, since axes are irrelevant with a Pie chart.\r\n\t\t\t// returns: dojox/charting/plot2d/Pie\r\n\t\t\t//\t\tThe reference to this plot for functional chaining.\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Pie\r\n\t\t},\r\n\t\taddSeries: function(run){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdd a series of data to this plot.\r\n\t\t\t// returns: dojox/charting/plot2d/Pie\r\n\t\t\t//\t\tThe reference to this plot for functional chaining.\r\n\t\t\tthis.run = run;\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Pie\r\n\t\t},\r\n\t\tgetSeriesStats: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns default stats (irrelevant for this type of plot).\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\r\n\t\t\treturn lang.delegate(dc.defaultStats); // Object\r\n\t\t},\r\n\t\tgetRequiredColors: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn the number of colors needed to draw this plot.\r\n\t\t\treturn this.run ? this.run.data.length : 0;\r\n\t\t},\r\n\t\trender: function(dim, offsets){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRender the plot on the chart.\r\n\t\t\t// dim: Object\r\n\t\t\t//\t\tAn object of the form { width, height }.\r\n\t\t\t// offsets: Object\r\n\t\t\t//\t\tAn object of the form { l, r, t, b }.\r\n\t\t\t// returns: dojox/charting/plot2d/Pie\r\n\t\t\t//\t\tA reference to this plot for functional chaining.\r\n\t\t\tif(!this.dirty){ return this; }\r\n\t\t\tthis.resetEvents();\r\n\t\t\tthis.dirty = false;\r\n\t\t\tthis._eventSeries = {};\r\n\t\t\tthis.cleanGroup();\r\n\t\t\tvar s = this.group, t = this.chart.theme;\r\n\r\n\t\t\tif(!this.run || !this.run.data.length){\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\t// calculate the geometry\r\n\t\t\tvar rx = (dim.width  - offsets.l - offsets.r) / 2,\r\n\t\t\t\try = (dim.height - offsets.t - offsets.b) / 2,\r\n\t\t\t\tr  = Math.min(rx, ry),\r\n\t\t\t\tlabelFont = \"font\" in this.opt ? this.opt.font : t.series.font,\r\n\t\t\t\tsize,\r\n\t\t\t\tstartAngle = m._degToRad(this.opt.startAngle),\r\n\t\t\t\tstart = startAngle, filteredRun, slices, labels, shift, labelR,\r\n\t\t\t\tevents = this.events();\r\n\r\n\t\t\tvar run = arr.map(this.run.data, function(item, i){\r\n\t\t\t\tif(typeof item != \"number\" && item.hidden){ \r\n\t\t\t\t\tthis.runFilter.push(i); \r\n\t\t\t\t\titem.hidden = false; \r\n\t\t\t\t} \r\n\t\t\t\tif(arr.some(this.runFilter, function(filter){return filter == i;})){ \r\n\t\t\t\t\tif(typeof item == \"number\"){ \r\n\t\t\t\t\t\treturn 0; \r\n\t\t\t\t\t}else{ \r\n\t\t\t\t\t\treturn {y: 0, text: item.text}; \r\n\t\t\t\t\t} \r\n\t\t\t\t}else{ \r\n\t\t\t\t\treturn item; \r\n\t\t\t\t} \r\n\t\t\t}, this);\r\n\r\n\t\t\tthis.dyn = [];\r\n\r\n\t\t\tif(\"radius\" in this.opt){\r\n\t\t\t\tr = this.opt.radius;\r\n\t\t\t\tlabelR = r - this.opt.labelOffset;\r\n\t\t\t}\r\n\t\t\tvar\tcircle = {\r\n\t\t\t\tcx: offsets.l + rx,\r\n\t\t\t\tcy: offsets.t + ry,\r\n\t\t\t\tr:  r\r\n\t\t\t};\r\n\r\n\t\t\t// draw shadow\r\n\t\t\tif(this.opt.shadow || t.shadow){\r\n\t\t\t\tvar shadow = this.opt.shadow || t.shadow;\r\n\t\t\t\tvar scircle = lang.clone(circle);\r\n\t\t\t\tscircle.cx += shadow.dx;\r\n\t\t\t\tscircle.cy += shadow.dy;\r\n\t\t\t\ts.createCircle(scircle).setFill(shadow.color).setStroke(shadow);\r\n\t\t\t}\r\n\t\t\tif(s.setFilter && (this.opt.filter || t.filter)){\r\n\t\t\t\ts.createCircle(circle).setFill(t.series.stroke).setFilter(this.opt.filter || t.filter);\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof run[0] == \"number\"){\r\n\t\t\t\tfilteredRun = df.map(run, \"x ? Math.max(x, 0) : 0\");\r\n\t\t\t\tif(df.every(filteredRun, \"<= 0\")){\r\n\t\t\t\t\ts.createCircle(circle).setStroke(t.series.stroke);\r\n\t\t\t\t\tthis.dyn = arr.map(filteredRun, function(){\r\n\t\t\t\t\t\treturn {  };\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tslices = df.map(filteredRun, \"/this\", df.foldl(filteredRun, \"+\", 0));\r\n\t\t\t\t \tif(this.opt.labels){\r\n\t\t\t\t \t\tlabels = arr.map(slices, function(x){\r\n\t\t\t\t\t\t\treturn x > 0 ? this._getLabel(x * 100) + \"%\" : \"\";\r\n\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tfilteredRun = df.map(run, \"x ? Math.max(x.y, 0) : 0\");\r\n\t\t\t\tif(df.every(filteredRun, \"<= 0\")){\r\n\t\t\t\t\ts.createCircle(circle).setStroke(t.series.stroke);\r\n\t\t\t\t\tthis.dyn = arr.map(filteredRun, function(){\r\n\t\t\t\t\t\treturn {  };\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tslices = df.map(filteredRun, \"/this\", df.foldl(filteredRun, \"+\", 0));\r\n\t\t\t\t\tif(this.opt.labels){\r\n\t\t\t\t\t\tlabels = arr.map(slices, function(x, i){\r\n\t\t\t\t\t\t\tif(x < 0){ return \"\"; }\r\n\t\t\t\t\t\t\tvar v = run[i];\r\n\t\t\t\t\t\t\treturn \"text\" in v ? v.text : this._getLabel(x * 100) + \"%\";\r\n\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar themes = df.map(run, function(v, i){\r\n\t\t\t\tvar tMixin = [this.opt, this.run];\r\n\t\t\t\tif(v !== null && typeof v != \"number\"){\r\n\t\t\t\t\ttMixin.push(v);\r\n\t\t\t\t}\r\n\t\t\t\tif(this.opt.styleFunc){\r\n\t\t\t\t\ttMixin.push(this.opt.styleFunc(v));\r\n\t\t\t\t}\r\n\t\t\t\treturn t.next(\"slice\", tMixin, true);\r\n\t\t\t}, this);\r\n\r\n\t\t\tif(this.opt.labels){\r\n\t\t\t\tsize = labelFont ? g.normalizedLength(g.splitFontString(labelFont).size) : 0;\r\n\t\t\t\tshift = df.foldl1(df.map(labels, function(label, i){\r\n\t\t\t\t\tvar font = themes[i].series.font;\r\n\t\t\t\t\treturn g._base._getTextBox(label, {font: font}).w;\r\n\t\t\t\t}, this), \"Math.max(a, b)\") / 2;\r\n\t\t\t\tif(this.opt.labelOffset < 0){\r\n\t\t\t\t\tr = Math.min(rx - 2 * shift, ry - size) + this.opt.labelOffset;\r\n\t\t\t\t}\r\n\t\t\t\tlabelR = r - this.opt.labelOffset;\r\n\t\t\t}\r\n\r\n\t\t\t// draw slices\r\n\t\t\tvar eventSeries = new Array(slices.length);\r\n\t\t\tarr.some(slices, function(slice, i){\r\n\t\t\t\tif(slice < 0){\r\n\t\t\t\t\t// degenerated slice\r\n\t\t\t\t\treturn false;\t// continue\r\n\t\t\t\t}\r\n\t\t\t\tvar v = run[i], theme = themes[i], specialFill, o;\r\n\t\t\t\tif(slice == 0){\r\n\t\t\t\t\tthis.dyn.push({fill: theme.series.fill, stroke: theme.series.stroke});\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(slice >= 1){\r\n\t\t\t\t\t// whole pie\r\n\t\t\t\t\tspecialFill = this._plotFill(theme.series.fill, dim, offsets);\r\n\t\t\t\t\tspecialFill = this._shapeFill(specialFill,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tx: circle.cx - circle.r, y: circle.cy - circle.r,\r\n\t\t\t\t\t\t\twidth: 2 * circle.r, height: 2 * circle.r\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\tspecialFill = this._pseudoRadialFill(specialFill, {x: circle.cx, y: circle.cy}, circle.r);\r\n\t\t\t\t\tvar shape = s.createCircle(circle).setFill(specialFill).setStroke(theme.series.stroke);\r\n\t\t\t\t\tthis.dyn.push({fill: specialFill, stroke: theme.series.stroke});\r\n\r\n\t\t\t\t\tif(events){\r\n\t\t\t\t\t\to = {\r\n\t\t\t\t\t\t\telement: \"slice\",\r\n\t\t\t\t\t\t\tindex:   i,\r\n\t\t\t\t\t\t\trun:     this.run,\r\n\t\t\t\t\t\t\tshape:   shape,\r\n\t\t\t\t\t\t\tx:       i,\r\n\t\t\t\t\t\t\ty:       typeof v == \"number\" ? v : v.y,\r\n\t\t\t\t\t\t\tcx:      circle.cx,\r\n\t\t\t\t\t\t\tcy:      circle.cy,\r\n\t\t\t\t\t\t\tcr:      r\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tthis._connectEvents(o);\r\n\t\t\t\t\t\teventSeries[i] = o;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn false;\t// we continue because we want to collect null data points for legend\r\n\t\t\t\t}\r\n\t\t\t\t// calculate the geometry of the slice\r\n\t\t\t\tvar end = start + slice * 2 * Math.PI;\r\n\t\t\t\tif(i + 1 == slices.length){\r\n\t\t\t\t\tend = startAngle + 2 * Math.PI;\r\n\t\t\t\t}\r\n\t\t\t\tvar\tstep = end - start,\r\n\t\t\t\t\tx1 = circle.cx + r * Math.cos(start),\r\n\t\t\t\t\ty1 = circle.cy + r * Math.sin(start),\r\n\t\t\t\t\tx2 = circle.cx + r * Math.cos(end),\r\n\t\t\t\t\ty2 = circle.cy + r * Math.sin(end);\r\n\t\t\t\t// draw the slice\r\n\t\t\t\tvar fanSize = m._degToRad(this.opt.fanSize);\r\n\t\t\t\tif(theme.series.fill && theme.series.fill.type === \"radial\" && this.opt.radGrad === \"fan\" && step > fanSize){\r\n\t\t\t\t\tvar group = s.createGroup(), nfans = Math.ceil(step / fanSize), delta = step / nfans;\r\n\t\t\t\t\tspecialFill = this._shapeFill(theme.series.fill,\r\n\t\t\t\t\t\t{x: circle.cx - circle.r, y: circle.cy - circle.r, width: 2 * circle.r, height: 2 * circle.r});\r\n\t\t\t\t\tfor(var j = 0; j < nfans; ++j){\r\n\t\t\t\t\t\tvar fansx = j == 0 ? x1 : circle.cx + r * Math.cos(start + (j - FUDGE_FACTOR) * delta),\r\n\t\t\t\t\t\t\tfansy = j == 0 ? y1 : circle.cy + r * Math.sin(start + (j - FUDGE_FACTOR) * delta),\r\n\t\t\t\t\t\t\tfanex = j == nfans - 1 ? x2 : circle.cx + r * Math.cos(start + (j + 1 + FUDGE_FACTOR) * delta),\r\n\t\t\t\t\t\t\tfaney = j == nfans - 1 ? y2 : circle.cy + r * Math.sin(start + (j + 1 + FUDGE_FACTOR) * delta);\r\n\t\t\t\t\t\tgroup.createPath().\r\n\t\t\t\t\t\t\t\tmoveTo(circle.cx, circle.cy).\r\n\t\t\t\t\t\t\t\tlineTo(fansx, fansy).\r\n\t\t\t\t\t\t\t\tarcTo(r, r, 0, delta > Math.PI, true, fanex, faney).\r\n\t\t\t\t\t\t\t\tlineTo(circle.cx, circle.cy).\r\n\t\t\t\t\t\t\t\tclosePath().\r\n\t\t\t\t\t\t\t\tsetFill(this._pseudoRadialFill(specialFill, {x: circle.cx, y: circle.cy}, r, start + (j + 0.5) * delta, start + (j + 0.5) * delta));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tgroup.createPath().\r\n\t\t\t\t\t\tmoveTo(circle.cx, circle.cy).\r\n\t\t\t\t\t\tlineTo(x1, y1).\r\n\t\t\t\t\t\tarcTo(r, r, 0, step > Math.PI, true, x2, y2).\r\n\t\t\t\t\t\tlineTo(circle.cx, circle.cy).\r\n\t\t\t\t\t\tclosePath().\r\n\t\t\t\t\t\tsetStroke(theme.series.stroke);\r\n\t\t\t\t\tshape = group;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tshape = s.createPath().\r\n\t\t\t\t\t\tmoveTo(circle.cx, circle.cy).\r\n\t\t\t\t\t\tlineTo(x1, y1).\r\n\t\t\t\t\t\tarcTo(r, r, 0, step > Math.PI, true, x2, y2).\r\n\t\t\t\t\t\tlineTo(circle.cx, circle.cy).\r\n\t\t\t\t\t\tclosePath().\r\n\t\t\t\t\t\tsetStroke(theme.series.stroke);\r\n\t\t\t\t\tspecialFill = theme.series.fill;\r\n\t\t\t\t\tif(specialFill && specialFill.type === \"radial\"){\r\n\t\t\t\t\t\tspecialFill = this._shapeFill(specialFill, {x: circle.cx - circle.r, y: circle.cy - circle.r, width: 2 * circle.r, height: 2 * circle.r});\r\n\t\t\t\t\t\tif(this.opt.radGrad === \"linear\"){\r\n\t\t\t\t\t\t\tspecialFill = this._pseudoRadialFill(specialFill, {x: circle.cx, y: circle.cy}, r, start, end);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else if(specialFill && specialFill.type === \"linear\"){\r\n\t\t\t\t\t\tspecialFill = this._plotFill(specialFill, dim, offsets);\r\n\t\t\t\t\t\tspecialFill = this._shapeFill(specialFill, shape.getBoundingBox());\r\n\t\t\t\t\t}\r\n\t\t\t\t\tshape.setFill(specialFill);\r\n\t\t\t\t}\r\n\t\t\t\tthis.dyn.push({fill: specialFill, stroke: theme.series.stroke});\r\n\r\n\t\t\t\tif(events){\r\n\t\t\t\t\to = {\r\n\t\t\t\t\t\telement: \"slice\",\r\n\t\t\t\t\t\tindex:   i,\r\n\t\t\t\t\t\trun:     this.run,\r\n\t\t\t\t\t\tshape:   shape,\r\n\t\t\t\t\t\tx:       i,\r\n\t\t\t\t\t\ty:       typeof v == \"number\" ? v : v.y,\r\n\t\t\t\t\t\tcx:      circle.cx,\r\n\t\t\t\t\t\tcy:      circle.cy,\r\n\t\t\t\t\t\tcr:      r\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis._connectEvents(o);\r\n\t\t\t\t\teventSeries[i] = o;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstart = end;\r\n\r\n\t\t\t\treturn false;\t// continue\r\n\t\t\t}, this);\r\n\t\t\t// draw labels\r\n\t\t\tif(this.opt.labels){\r\n\t\t\t\tvar isRtl = has(\"dojo-bidi\") && this.chart.isRightToLeft(); \r\n\t\t\t\tif(this.opt.labelStyle == \"default\"){ // inside or outside based on labelOffset\r\n\t\t\t\t\tstart = startAngle;\r\n\t\t\t\t\tarr.some(slices, function(slice, i){\r\n\t\t\t\t\t\tif(slice <= 0){\r\n\t\t\t\t\t\t\t// degenerated slice\r\n\t\t\t\t\t\t\treturn false;\t// continue\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar theme = themes[i];\r\n\t\t\t\t\t\tif(slice >= 1){\r\n\t\t\t\t\t\t\t// whole pie\r\n\t\t\t\t\t\t\tthis.renderLabel(s, circle.cx, circle.cy + size / 2, labels[i], theme, this.opt.labelOffset > 0);\r\n\t\t\t\t\t\t\treturn true;\t// stop iteration\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// calculate the geometry of the slice\r\n\t\t\t\t\t\tvar end = start + slice * 2 * Math.PI;\r\n\t\t\t\t\t\tif(i + 1 == slices.length){\r\n\t\t\t\t\t\t\tend = startAngle + 2 * Math.PI;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this.opt.omitLabels && end-start < 0.001){\r\n\t\t\t\t\t\t\treturn false;\t// continue\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar\tlabelAngle = (start + end) / 2,\r\n\t\t\t\t\t\t\tx = circle.cx + labelR * Math.cos(labelAngle),\r\n\t\t\t\t\t\t\ty = circle.cy + labelR * Math.sin(labelAngle) + size / 2;\r\n\t\t\t\t\t\t// draw the label\r\n\t\t\t\t\t\tthis.renderLabel(s, isRtl ? dim.width - x : x, y, labels[i], theme, this.opt.labelOffset > 0);\r\n\t\t\t\t\t\tstart = end;\r\n\t\t\t\t\t\treturn false;\t// continue\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t}else if(this.opt.labelStyle == \"columns\"){\r\n\t\t\t\t\tstart = startAngle;\r\n\t\t\t\t\tvar omitLabels = this.opt.omitLabels;\r\n\t\t\t\t\t//calculate label angles\r\n\t\t\t\t\tvar labeledSlices = [];\r\n\t\t\t\t\tarr.forEach(slices, function(slice, i){\r\n\t\t\t\t\t\tvar end = start + slice * 2 * Math.PI;\r\n\t\t\t\t\t\tif(i + 1 == slices.length){\r\n\t\t\t\t\t\t\tend = startAngle + 2 * Math.PI;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar labelAngle = (start + end) / 2;\r\n\t\t\t\t\t\tlabeledSlices.push({\r\n\t\t\t\t\t\t\tangle: labelAngle,\r\n\t\t\t\t\t\t\tleft: Math.cos(labelAngle) < 0,\r\n\t\t\t\t\t\t\ttheme: themes[i],\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\tomit: omitLabels?end - start < 0.001:false\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tstart = end;\r\n\t\t\t\t\t});\r\n\t\t\t\t\t//calculate label radius to each slice\r\n\t\t\t\t\tvar labelHeight = g._base._getTextBox(\"a\",{ font: labelFont }).h;\r\n\t\t\t\t\tthis._getProperLabelRadius(labeledSlices, labelHeight, circle.r * 1.1);\r\n\t\t\t\t\t//draw label and wiring\r\n\t\t\t\t\tarr.forEach(labeledSlices, function(slice, i){\r\n\t\t\t\t\t\tif(!slice.omit){\r\n\t\t\t\t\t\t\tvar leftColumn = circle.cx - circle.r * 2,\r\n\t\t\t\t\t\t\t\trightColumn = circle.cx + circle.r * 2,\r\n\t\t\t\t\t\t\t\tlabelWidth = g._base._getTextBox(labels[i], {font: slice.theme.series.font}).w,\r\n\t\t\t\t\t\t\t\tx = circle.cx + slice.labelR * Math.cos(slice.angle),\r\n\t\t\t\t\t\t\t\ty = circle.cy + slice.labelR * Math.sin(slice.angle),\r\n\t\t\t\t\t\t\t\tjointX = (slice.left) ? (leftColumn + labelWidth) : (rightColumn - labelWidth),\r\n\t\t\t\t\t\t\t\tlabelX = (slice.left) ? leftColumn : jointX;\r\n\t\t\t\t\t\t\tvar wiring = s.createPath().moveTo(circle.cx + circle.r * Math.cos(slice.angle), circle.cy + circle.r * Math.sin(slice.angle));\r\n\t\t\t\t\t\t\tif(Math.abs(slice.labelR * Math.cos(slice.angle)) < circle.r * 2 - labelWidth){\r\n\t\t\t\t\t\t\t\twiring.lineTo(x, y);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\twiring.lineTo(jointX, y).setStroke(slice.theme.series.labelWiring);\r\n\t\t\t\t\t\t\tthis.renderLabel(s, isRtl ? dim.width - labelWidth - labelX : labelX, y, labels[i], slice.theme, false, \"left\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// post-process events to restore the original indexing\r\n\t\t\tvar esi = 0;\r\n\t\t\tthis._eventSeries[this.run.name] = df.map(run, function(v){\r\n\t\t\t\treturn v <= 0 ? null : eventSeries[esi++];\r\n\t\t\t});\r\n\t\t\t// chart mirroring starts\r\n\t\t\tif(has(\"dojo-bidi\")){\r\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\r\n\t\t\t}\r\n\t\t\t// chart mirroring ends\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Pie\r\n\t\t},\r\n\t\t_getProperLabelRadius: function(slices, labelHeight, minRidius){\r\n\t\t\tvar leftCenterSlice, rightCenterSlice,\r\n\t\t\t\tleftMinSIN = 1, rightMinSIN = 1;\r\n\t\t\tif(slices.length == 1){\r\n\t\t\t\tslices[0].labelR = minRidius;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tfor(var i = 0; i < slices.length; i++){\r\n\t\t\t\tvar tempSIN = Math.abs(Math.sin(slices[i].angle));\r\n\t\t\t\tif(slices[i].left){\r\n\t\t\t\t\tif(leftMinSIN >= tempSIN){\r\n\t\t\t\t\t\tleftMinSIN = tempSIN;\r\n\t\t\t\t\t\tleftCenterSlice = slices[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(rightMinSIN >= tempSIN){\r\n\t\t\t\t\t\trightMinSIN = tempSIN;\r\n\t\t\t\t\t\trightCenterSlice = slices[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tleftCenterSlice.labelR = rightCenterSlice.labelR = minRidius;\r\n\t\t\tthis._calculateLabelR(leftCenterSlice, slices, labelHeight);\r\n\t\t\tthis._calculateLabelR(rightCenterSlice, slices, labelHeight);\r\n\t\t},\r\n\t\t_calculateLabelR: function(firstSlice, slices, labelHeight){\r\n\t\t\tvar i = firstSlice.index,length = slices.length,\r\n\t\t\t\tcurrentLabelR = firstSlice.labelR, nextLabelR;\r\n\t\t\twhile(!(slices[i%length].left ^ slices[(i+1)%length].left)){\r\n\t\t\t\tif(!slices[(i + 1) % length].omit){\r\n\t\t\t\t\tnextLabelR = (Math.sin(slices[i % length].angle) * currentLabelR + ((slices[i % length].left) ? (-labelHeight) : labelHeight)) /\r\n\t\t\t\t\tMath.sin(slices[(i + 1) % length].angle);\r\n\t\t\t\t\tcurrentLabelR = (nextLabelR < firstSlice.labelR) ? firstSlice.labelR : nextLabelR;\r\n\t\t\t\t\tslices[(i + 1) % length].labelR = currentLabelR;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t\ti = firstSlice.index;\r\n\t\t\tvar j = (i == 0)?length-1 : i - 1;\r\n\t\t\twhile(!(slices[i].left ^ slices[j].left)){\r\n\t\t\t\tif(!slices[j].omit){\r\n\t\t\t\t\tnextLabelR = (Math.sin(slices[i].angle) * currentLabelR + ((slices[i].left) ? labelHeight : (-labelHeight))) /\r\n\t\t\t\t\tMath.sin(slices[j].angle);\r\n\t\t\t\t\tcurrentLabelR = (nextLabelR < firstSlice.labelR) ? firstSlice.labelR : nextLabelR;\r\n\t\t\t\t\tslices[j].labelR = currentLabelR;\r\n\t\t\t\t}\r\n\t\t\t\ti--;j--;\r\n\t\t\t\ti = (i < 0)?i+slices.length:i;\r\n\t\t\t\tj = (j < 0)?j+slices.length:j;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n"]}