{"version":3,"sources":["charting/Series.js"],"names":["define","lang","declare","Element","constructor","chart","data","kwArgs","mixin","this","plot","update","clear","dyn","isArray","source","setSeriesObject","dirty"],"mappings":";;;;;;;AAAAA,QAAQ,kBAAmB,qBAAsB,aAChD,SAASC,EAAMC,EAASC,GASxB,OAAOD,EAAQ,wBAAyBC,GAGvCC,YAAa,SAASC,EAAOC,EAAMC,GAYlCN,EAAKO,MAAMC,KAAMF,GACM,iBAAbE,KAAKC,OAAmBD,KAAKC,KAAO,WAC9CD,KAAKE,OAAOL,IAGbM,MAAO,WAGNH,KAAKI,QAGNF,OAAQ,SAASL,GAQbL,EAAKa,QAAQR,GACfG,KAAKH,KAAOA,GAEZG,KAAKM,OAAST,EACdG,KAAKH,KAAOG,KAAKM,OAAOT,KACrBG,KAAKM,OAAOC,iBACdP,KAAKM,OAAOC,gBAAgBP,OAG9BA,KAAKQ,OAAQ,EACbR,KAAKG","file":"../../charting/Series.js","sourcesContent":["define([\"dojo/_base/lang\", \"dojo/_base/declare\", \"./Element\"], \r\n\tfunction(lang, declare, Element){ \r\n\t/*=====\r\n\tvar __SeriesCtorArgs = {\r\n\t\t// summary:\r\n\t\t//\t\tAn optional arguments object that can be used in the Series constructor.\r\n\t\t// plot: String?\r\n\t\t//\t\tThe plot (by name) that this series belongs to.\r\n\t};\r\n\t=====*/\r\n\treturn declare(\"dojox.charting.Series\", Element, {\r\n\t\t// summary:\r\n\t\t//\t\tAn object representing a series of data for plotting on a chart.\r\n\t\tconstructor: function(chart, data, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate a new data series object for use within charting.\r\n\t\t\t// chart: dojox/charting/Chart\r\n\t\t\t//\t\tThe chart that this series belongs to.\r\n\t\t\t// data: Array|Object\r\n\t\t\t//\t\tThe array of data points (either numbers or objects) that\r\n\t\t\t//\t\trepresents the data to be drawn. Or it can be an object. In\r\n\t\t\t//\t\tthe latter case, it should have a property \"data\" (an array),\r\n\t\t\t//\t\tdestroy(), and setSeriesObject().\r\n\t\t\t// kwArgs: __SeriesCtorArgs?\r\n\t\t\t//\t\tAn optional keyword arguments object to set details for this series.\r\n\t\t\tlang.mixin(this, kwArgs);\r\n\t\t\tif(typeof this.plot != \"string\"){ this.plot = \"default\"; }\r\n\t\t\tthis.update(data);\r\n\t\t},\r\n\t\r\n\t\tclear: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tClear the calculated additional parameters set on this series.\r\n\t\t\tthis.dyn = {};\r\n\t\t},\r\n\t\t\r\n\t\tupdate: function(data){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet data and make this object dirty, so it can be redrawn.\r\n\t\t\t// data: Array|Object\r\n\t\t\t//\t\tThe array of data points (either numbers or objects) that\r\n\t\t\t//\t\trepresents the data to be drawn. Or it can be an object. In\r\n\t\t\t//\t\tthe latter case, it should have a property \"data\" (an array),\r\n\t\t\t//\t\tdestroy(), and setSeriesObject().\r\n\t\t\tif(lang.isArray(data)){\r\n\t\t\t\tthis.data = data;\r\n\t\t\t}else{\r\n\t\t\t\tthis.source = data;\r\n\t\t\t\tthis.data = this.source.data;\r\n\t\t\t\tif(this.source.setSeriesObject){\r\n\t\t\t\t\tthis.source.setSeriesObject(this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.dirty = true;\r\n\t\t\tthis.clear();\r\n\t\t}\r\n\t});\r\n});\r\n"]}