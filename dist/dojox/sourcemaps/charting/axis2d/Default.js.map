{"version":3,"sources":["charting/axis2d/Default.js"],"names":["define","lang","arr","has","declare","connect","domGeom","Invisible","lin","acommon","g","du","df","BidiDefault","Default","defaultParams","vertical","fixUpper","fixLower","natural","leftBottom","includeZero","fixed","majorLabels","minorTicks","minorLabels","microTicks","rotation","htmlLabels","enableCache","dropLabels","labelSizeChange","position","optionalParams","min","max","from","to","majorTickStep","minorTickStep","microTickStep","labels","labelFunc","maxLabelSize","maxLabelCharCount","trailingSymbol","stroke","majorTick","minorTick","microTick","tick","font","fontColor","title","titleGap","titleFont","titleFontColor","titleOrientation","constructor","chart","kwArgs","this","opt","clone","updateWithObject","updateWithPattern","_textFreePool","_lineFreePool","_textUsePool","_lineUsePool","_invalidMaxLabelSize","renderingOptions","shape-rendering","setWindow","scale","offset","inherited","arguments","_groupLabelWidth","wcLimit","length","isObject","map","label","text","trim","substring","s","join","_base","_getTextBox","w","_getMaxLabelSize","span","size","_maxLabelSize","o","scaler","minMinorStep","_prevMinMinorStep","ob","sb","buildScaler","_majorStart","major","start","tb","buildTicks","majLabelW","minLabelW","tickLabelFunc","push","forEach","Math","minor","majLabelH","minLabelH","calculate","_oldSpan","Infinity","ta","theme","axis","labelGap","normalizedLength","splitFontString","labelW","cosr","abs","cos","PI","sinr","sin","gap1","sqrt","gap2","canMinorLabel","bounds","_skipInterval","floor","ticks","getOffsets","offsets","l","r","t","b","taTitleFont","taTitleGap","gap","taMajorTick","getTick","taMinorTick","tsize","undefined","side","labelWidth","ceil","cleanGroup","creator","group","concat","createText","labelType","x","y","align","textContent","pop","setShape","add","createLine","params","line","render","dim","isRtl","_isRtl","dirty","stop","titlePos","titleOffset","axisVector","tickVector","anchorOffset","labelOffset","labelAlign","titleRotation","taFont","taFontColor","taTitleFontColor","taTitleOrientation","orientation","taMicroTick","taStroke","cachedLabelW","height","width","c","f","getTransformerFromModel","dx","dy","skip","x1","y1","x2","y2","setStroke","axisTitle","htmlElements","setTransform","matrix","rotategAt","rel","value","canLabel","i","elem","getTextWithLimitCharCount","truncated","getTextWithLimitLength","formatTruncatedLabel","labelTooltip","micro","truncatedLabel","elemType","modules","aroundRect","type","fontWidth","fontHeight","mixin","firstChild","_events","shape","dojo","handle","e","require","Tooltip","show","hide","shp","getShape","lt","getCoords","round"],"mappings":"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","file":"../../../charting/axis2d/Default.js","sourcesContent":["define([\"dojo/_base/lang\", \"dojo/_base/array\", \"dojo/sniff\", \"dojo/_base/declare\",\r\n\t\"dojo/_base/connect\", \"dojo/dom-geometry\", \"./Invisible\",\r\n\t\"../scaler/linear\", \"./common\", \"dojox/gfx\", \"dojox/lang/utils\", \"dojox/lang/functional\",\r\n\t\"dojo/has!dojo-bidi?../bidi/axis2d/Default\"],\r\n\tfunction(lang, arr, has, declare, connect, domGeom, Invisible,\r\n\t\t\tlin, acommon, g, du, df, BidiDefault){\r\n\r\n\t/*=====\r\n\tvar __AxisCtorArgs = {\r\n\t\t// summary:\r\n\t\t//\t\tOptional arguments used in the definition of an axis.\r\n\t\t// vertical: Boolean?\r\n\t\t//\t\tA flag that says whether an axis is vertical (i.e. y axis) or horizontal. Default is false (horizontal).\r\n\t\t// fixUpper: String?\r\n\t\t//\t\tAlign the greatest value on the axis with the specified tick level. Options are \"major\", \"minor\", \"micro\", or \"none\".  Defaults to \"none\".\r\n\t\t// fixLower: String?\r\n\t\t//\t\tAlign the smallest value on the axis with the specified tick level. Options are \"major\", \"minor\", \"micro\", or \"none\".  Defaults to \"none\".\r\n\t\t// natural: Boolean?\r\n\t\t//\t\tEnsure tick marks are made on \"natural\" numbers. Defaults to false.\r\n\t\t// leftBottom: Boolean?\r\n\t\t//\t\tDeprecated: use position instead. The position of a vertical axis; if true, will be placed against the left-bottom corner of the chart.  Defaults to true.\r\n\t\t// includeZero: Boolean?\r\n\t\t//\t\tInclude 0 on the axis rendering.  Default is false.\r\n\t\t// fixed: Boolean?\r\n\t\t//\t\tForce all axis labels to be fixed numbers.  Default is true.\r\n\t\t// majorLabels: Boolean?\r\n\t\t//\t\tFlag to draw labels at major ticks. Default is true.\r\n\t\t// minorTicks: Boolean?\r\n\t\t//\t\tFlag to draw minor ticks on an axis.  Default is true.\r\n\t\t// minorLabels: Boolean?\r\n\t\t//\t\tFlag to labels on minor ticks when there is enough space. Default is true.\r\n\t\t// microTicks: Boolean?\r\n\t\t//\t\tFlag to draw micro ticks on an axis. Default is false.\r\n\t\t// htmlLabels: Boolean?\r\n\t\t//\t\tFlag to use HTML (as opposed to the native vector graphics engine) to draw labels. Default is true.\r\n\t\t// min: Number?\r\n\t\t//\t\tThe smallest value on an axis. Default is 0.\r\n\t\t// max: Number?\r\n\t\t//\t\tThe largest value on an axis. Default is 1.\r\n\t\t// from: Number?\r\n\t\t//\t\tForce the chart to render data visible from this value. Default is 0.\r\n\t\t// to: Number?\r\n\t\t//\t\tForce the chart to render data visible to this value. Default is 1.\r\n\t\t// majorTickStep: Number?\r\n\t\t//\t\tThe amount to skip before a major tick is drawn. When not set the major ticks step is computed from\r\n\t\t//\t\tthe data range.\r\n\t\t// minorTickStep: Number?\r\n\t\t//\t\tThe amount to skip before a minor tick is drawn. When not set the minor ticks step is computed from\r\n\t\t//\t\tthe data range.\r\n\t\t// microTickStep: Number?\r\n\t\t//\t\tThe amount to skip before a micro tick is drawn. When not set the micro ticks step is computed from\r\n\t\t// labels: Object[]?\r\n\t\t//\t\tAn array of labels for major ticks, with corresponding numeric values, ordered by value.\r\n\t\t// labelFunc: Function?\r\n\t\t//\t\tAn optional function to use to compute label text. It takes precedence over\r\n\t\t//\t\tthe default text when available. The function must be of the following form:\r\n\t\t//\t|\t\tfunction labelFunc(text, value, precision) {}\r\n\t\t//\t\t`text` is the already pre-formatted text. Pre-formatting is done using `dojo/number` is available, `Date.toFixed` otherwise.\r\n\t\t//\t\t`value`  is the raw axis value.\r\n\t\t//\t\t`precision` is the requested precision to be applied.\r\n\t\t// maxLabelSize: Number?\r\n\t\t//\t\tThe maximum size, in pixels, for a label.  To be used with the optional label function.\r\n\t\t// stroke: dojox.gfx.Stroke?\r\n\t\t//\t\tAn optional stroke to be used for drawing an axis.\r\n\t\t// majorTick: Object?\r\n\t\t//\t\tAn object containing a dojox.gfx.Stroke, and a length (number) for a major tick.\r\n\t\t// minorTick: Object?\r\n\t\t//\t\tAn object containing a dojox.gfx.Stroke, and a length (number) for a minor tick.\r\n\t\t// microTick: Object?\r\n\t\t//\t\tAn object containing a dojox.gfx.Stroke, and a length (number) for a micro tick.\r\n\t\t// tick: Object?\r\n\t\t//\t\tAn object containing a dojox.gfx.Stroke, and a length (number) for a tick.\r\n\t\t// font: String?\r\n\t\t//\t\tAn optional font definition (as used in the CSS font property) for labels.\r\n\t\t// fontColor: String|dojo.Color?\r\n\t\t//\t\tAn optional color to be used in drawing labels.\r\n\t\t// titleGap: Number?\r\n\t\t//\t\tAn optional grap between axis title and axis label\r\n\t\t// titleFont: String?\r\n\t\t//\t\tAn optional font definition for axis title\r\n\t\t// titleFontColor: String?\r\n\t\t//\t\tAn optional axis title color\r\n\t\t// titleOrientation: String?\r\n\t\t//\t\tAn optional orientation for axis title. \"axis\" means the title facing the axis, \"away\" means facing away.\r\n\t\t//\t\tIf no value is set \"axis\" is used.\r\n\t\t// enableCache: Boolean?\r\n\t\t//\t\tWhether the ticks and labels are cached from one rendering to another. This improves the rendering performance of\r\n\t\t//\t\tsuccessive rendering but penalize the first rendering. For labels it is only working with gfx labels\r\n\t\t//\t\tnot html ones.  Default false.\r\n\t\t// dropLabels: Boolean?\r\n\t\t//\t\tWhether the axis automatically drops labels at regular interval or not to avoid labels overlapping.\r\n\t\t//\t\tThis gives better results but require more computations.  You can disable it to save computation\r\n\t\t//\t\ttime when you know your labels won't overlap. Default is true.\r\n\t\t// labelSizeChange: Boolean?\r\n\t\t//\t\tIndicates to the axis whether the axis labels are changing their size on zoom. If false this allows to\r\n\t\t//\t\toptimize the axis by avoiding recomputing labels maximum size on zoom actions. Default is false.\r\n\t\t// position: String?\r\n\t\t//\t\tThe position of the axis. Values: \"leftOrBottom\", \"center\" or \"rightOrTop\". Default is \"leftOrBottom\".\r\n\t};\r\n\t=====*/\r\n\r\n\tvar centerAnchorLimit = 45;\t// in degrees\r\n\r\n\tvar Default = declare(has(\"dojo-bidi\")? \"dojox.charting.axis2d.NonBidiDefault\" : \"dojox.charting.axis2d.Default\", Invisible, {\r\n\t\t// summary:\r\n\t\t//\t\tThe default axis object used in dojox.charting.  See dojox.charting.Chart.addAxis for details.\r\n\r\n\t\t// defaultParams: Object\r\n\t\t//\t\tThe default parameters used to define any axis.\r\n\t\t// optionalParams: Object\r\n\t\t//\t\tAny optional parameters needed to define an axis.\r\n\r\n\t\t/*=====\r\n\t\t// TODO: the documentation tools need these to be pre-defined in order to pick them up\r\n\t\t//\tcorrectly, but the code here is partially predicated on whether or not the properties\r\n\t\t//\tactually exist.  For now, we will leave these undocumented but in the code for later. -- TRT\r\n\r\n\t\t// opt: Object\r\n\t\t//\t\tThe actual options used to define this axis, created at initialization.\r\n\t\t// scaler: Object\r\n\t\t//\t\tThe calculated helper object to tell charts how to draw an axis and any data.\r\n\t\t// ticks: Object\r\n\t\t//\t\tThe calculated tick object that helps a chart draw the scaling on an axis.\r\n\t\t// dirty: Boolean\r\n\t\t//\t\tThe state of the axis (whether it needs to be redrawn or not)\r\n\t\t// scale: Number\r\n\t\t//\t\tThe current scale of the axis.\r\n\t\t// offset: Number\r\n\t\t//\t\tThe current offset of the axis.\r\n\r\n\t\topt: null,\r\n\t\tscaler: null,\r\n\t\tticks: null,\r\n\t\tdirty: true,\r\n\t\tscale: 1,\r\n\t\toffset: 0,\r\n\t\t=====*/\r\n\t\tdefaultParams: {\r\n\t\t\tvertical:\tfalse,\t\t// true for vertical axis\r\n\t\t\tfixUpper:\t\"none\",\t// align the upper on ticks: \"major\", \"minor\", \"micro\", \"none\"\r\n\t\t\tfixLower:\t\"none\",\t// align the lower on ticks: \"major\", \"minor\", \"micro\", \"none\"\r\n\t\t\tnatural:\t false,\t\t// all tick marks should be made on natural numbers\r\n\t\t\tleftBottom:  true,\t\t// position of the axis, used with \"vertical\" - deprecated: use position instead\r\n\t\t\tincludeZero: false,\t\t// 0 should be included\r\n\t\t\tfixed:\t   true,\t\t// all labels are fixed numbers\r\n\t\t\tmajorLabels: true,\t\t// draw major labels\r\n\t\t\tminorTicks:  true,\t\t// draw minor ticks\r\n\t\t\tminorLabels: true,\t\t// draw minor labels\r\n\t\t\tmicroTicks:  false,\t\t// draw micro ticks\r\n\t\t\trotation:\t0,\t\t\t// label rotation angle in degrees\r\n\t\t\thtmlLabels:  true,\t\t// use HTML to draw labels\r\n\t\t\tenableCache: false,\t\t// whether we cache or not\r\n\t\t\tdropLabels: true,\t\t// whether we automatically drop overlapping labels or not\r\n\t\t\tlabelSizeChange: false, // whether the labels size change on zoom\r\n\t\t\tposition: \"leftOrBottom\" // position of the axis: \"leftOrBottom\" (default), \"center\" or \"rightOrTop\"\r\n\t\t},\r\n\t\toptionalParams: {\r\n\t\t\tmin:\t\t\t0,\t// minimal value on this axis\r\n\t\t\tmax:\t\t\t1,\t// maximal value on this axis\r\n\t\t\tfrom:\t\t\t0,\t// visible from this value\r\n\t\t\tto:\t\t\t\t1,\t// visible to this value\r\n\t\t\tmajorTickStep:\t4,\t// major tick step\r\n\t\t\tminorTickStep:\t2,\t// minor tick step\r\n\t\t\tmicroTickStep:\t1,\t// micro tick step\r\n\t\t\tlabels:\t\t\t[],\t// array of labels for major ticks\r\n\t\t\t// with corresponding numeric values\r\n\t\t\t// ordered by values\r\n\t\t\tlabelFunc:\t\tnull, // function to compute label values\r\n\t\t\tmaxLabelSize:\t0,\t// size in px. For use with labelFunc\r\n\t\t\tmaxLabelCharCount:\t0,\t// size in word count.\r\n\t\t\ttrailingSymbol:\tnull,\r\n\r\n\t\t\t// TODO: add support for minRange!\r\n\t\t\t// minRange:\t\t1,\t// smallest distance from min allowed on the axis\r\n\r\n\t\t\t// theme components\r\n\t\t\tstroke:\t\t\t{},\t// stroke for an axis\r\n\t\t\tmajorTick:\t\t{},\t// stroke + length for a tick\r\n\t\t\tminorTick:\t\t{},\t// stroke + length for a tick\r\n\t\t\tmicroTick:\t\t{},\t// stroke + length for a tick\r\n\t\t\ttick:\t\t   {},\t// stroke + length for a tick\r\n\t\t\tfont:\t\t\t\"\",\t// font for labels\r\n\t\t\tfontColor:\t\t\"\",\t// color for labels as a string\r\n\t\t\ttitle:\t\t\t\t \"\",\t// axis title\r\n\t\t\ttitleGap:\t\t\t 0,\t\t// gap between axis title and axis label\r\n\t\t\ttitleFont:\t\t\t \"\",\t\t// axis title font\r\n\t\t\ttitleFontColor:\t\t \"\",\t\t// axis title font color\r\n\t\t\ttitleOrientation:\t \"\"\t\t// \"axis\" means the title facing the axis, \"away\" means facing away\r\n\t\t},\r\n\r\n\t\tconstructor: function(chart, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThe constructor for an axis.\r\n\t\t\t// chart: dojox/charting/Chart\r\n\t\t\t//\t\tThe chart the axis belongs to.\r\n\t\t\t// kwArgs: __AxisCtorArgs?\r\n\t\t\t//\t\tAny optional keyword arguments to be used to define this axis.\r\n\t\t\tthis.opt = lang.clone(this.defaultParams);\r\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\r\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\r\n\t\t\tif(this.opt.enableCache){\r\n\t\t\t\tthis._textFreePool = [];\r\n\t\t\t\tthis._lineFreePool = [];\r\n\t\t\t\tthis._textUsePool = [];\r\n\t\t\t\tthis._lineUsePool = [];\r\n\t\t\t}\r\n\t\t\tthis._invalidMaxLabelSize = true;\r\n\t\t\t// replace deprecated leftBotton to position\r\n\t\t\tif(!(kwArgs && ('position' in kwArgs))){\r\n\t\t\t    this.opt.position = this.opt.leftBottom ? \"leftOrBottom\" : \"rightOrTop\";\r\n\t\t\t}\t\t\t\r\n\t\t\tthis.renderingOptions = { \"shape-rendering\": \"crispEdges\" };\r\n\t\t},\r\n\t\tsetWindow: function(scale, offset){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet the drawing \"window\" for the axis.\r\n\t\t\t// scale: Number\r\n\t\t\t//\t\tThe new scale for the axis.\r\n\t\t\t// offset: Number\r\n\t\t\t//\t\tThe new offset for the axis.\r\n\t\t\t// returns: dojox/charting/axis2d/Default\r\n\t\t\t//\t\tThe reference to the axis for functional chaining.\r\n\t\t\tif(scale != this.scale){\r\n\t\t\t\t// if scale changed we need to recompute new max label size\r\n\t\t\t\tthis._invalidMaxLabelSize = true;\r\n\t\t\t}\r\n\t\t\treturn this.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_groupLabelWidth: function(labels, font, wcLimit){\r\n\t\t\tif(!labels.length){\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tif(labels.length > 50){\r\n\t\t\t\t// let's avoid degenerated cases\r\n\t\t\t\tlabels.length = 50;\r\n\t\t\t}\r\n\t\t\tif(lang.isObject(labels[0])){\r\n\t\t\t\tlabels = df.map(labels, function(label){ return label.text; });\r\n\t\t\t}\r\n\t\t\tif(wcLimit){\r\n\t\t\t\tlabels = df.map(labels, function(label){\r\n\t\t\t\t\treturn lang.trim(label).length == 0 ? \"\" : label.substring(0, wcLimit) + this.trailingSymbol;\r\n\t\t\t\t}, this);\r\n\t\t\t}\r\n\t\t\tvar s = labels.join(\"<br>\");\r\n\t\t\treturn g._base._getTextBox(s, {font: font}).w || 0;\r\n\t\t},\r\n\r\n\t\t_getMaxLabelSize: function(min, max, span, rotation, font, size){\r\n\t\t\tif(this._maxLabelSize == null && arguments.length == 6){\r\n\t\t\t\tvar o = this.opt;\r\n\t\t\t\t// everything might have changed, reset the minMinorStep value\r\n\t\t\t\tthis.scaler.minMinorStep = this._prevMinMinorStep = 0;\r\n\t\t\t\tvar ob = lang.clone(o);\r\n\t\t\t\tdelete ob.to;\r\n\t\t\t\tdelete ob.from;\r\n\t\t\t\t// build all the ticks from min, to max not from to to _but_ using the step\r\n\t\t\t\t// that would be used if we where just displaying from to to from.\r\n\t\t\t\tvar sb = lin.buildScaler(min, max, span, ob, o.to - o.from);\r\n\t\t\t\tsb.minMinorStep = 0;\r\n\t\t\t\tthis._majorStart = sb.major.start;\r\n\t\t\t\t// we build all the ticks not only the ones we need to draw in order to get\r\n\t\t\t\t// a correct drop rate computation that works for any offset of this scale\r\n\t\t\t\tvar tb = lin.buildTicks(sb, o);\r\n\t\t\t\t// if there is not tick at all tb is null\r\n\t\t\t\tif(size && tb){\r\n\t\t\t\t\tvar majLabelW = 0, minLabelW = 0; // non rotated versions\r\n\t\t\t\t\t// we first collect all labels when needed\r\n\t\t\t\t\tvar tickLabelFunc = function(tick){\r\n\t\t\t\t\t\tif(tick.label){\r\n\t\t\t\t\t\t\tthis.push(tick.label);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\tvar labels = [];\r\n\t\t\t\t\tif(this.opt.majorLabels){\r\n\t\t\t\t\t\tarr.forEach(tb.major, tickLabelFunc, labels);\r\n\t\t\t\t\t\tmajLabelW = this._groupLabelWidth(labels, font, ob.maxLabelCharCount);\r\n\t\t\t\t\t\tif(ob.maxLabelSize){\r\n\t\t\t\t\t\t\tmajLabelW = Math.min(ob.maxLabelSize, majLabelW);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// do the minor labels computation only if dropLabels is set\r\n\t\t\t\t\tlabels = [];\r\n\t\t\t\t\tif(this.opt.dropLabels && this.opt.minorLabels){\r\n\t\t\t\t\t\tarr.forEach(tb.minor, tickLabelFunc, labels);\r\n\t\t\t\t\t\tminLabelW = this._groupLabelWidth(labels, font, ob.maxLabelCharCount);\r\n\t\t\t\t\t\tif(ob.maxLabelSize){\r\n\t\t\t\t\t\t\tminLabelW = Math.min(ob.maxLabelSize, minLabelW);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._maxLabelSize = {\r\n\t\t\t\t\t\tmajLabelW: majLabelW, minLabelW: minLabelW,\r\n\t\t\t\t\t\tmajLabelH: size, minLabelH: size\r\n\t\t\t\t\t};\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis._maxLabelSize = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this._maxLabelSize;\r\n\t\t},\r\n\r\n\t\tcalculate: function(min, max, span){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\t// when the scale has not changed there is no reason for minMinorStep to change\r\n\t\t\tthis.scaler.minMinorStep = this._prevMinMinorStep;\r\n\t\t\t// we want to recompute the dropping mechanism only when the scale or the size of the axis is changing\r\n\t\t\t// not when for example when we scroll (otherwise effect would be weird)\r\n\t\t\tif((this._invalidMaxLabelSize || span != this._oldSpan) && (min != Infinity && max != -Infinity)){\r\n\t\t\t\tthis._invalidMaxLabelSize = false;\r\n\t\t\t\tif(this.opt.labelSizeChange){\r\n\t\t\t\t\tthis._maxLabelSize = null;\r\n\t\t\t\t}\r\n\t\t\t\tthis._oldSpan = span;\r\n\t\t\t\tvar o = this.opt;\r\n\t\t\t\tvar ta = this.chart.theme.axis, rotation = o.rotation % 360,\r\n\t\t\t\t\tlabelGap = this.chart.theme.axis.tick.labelGap,\r\n\t\t\t\t\t// TODO: we use one font --- of major tick, we need to use major and minor fonts\r\n\t\t\t\t\tfont = o.font || (ta.majorTick && ta.majorTick.font) || (ta.tick && ta.tick.font),\r\n\t\t\t\t\tsize = font ? g.normalizedLength(g.splitFontString(font).size) : 0,\r\n\t\t\t\t\t// even if we don't drop label we need to compute max size for offsets\r\n\t\t\t\t\tlabelW = this._getMaxLabelSize(min, max, span, rotation, font, size);\r\n\t\t\t\tif(typeof labelGap != \"number\"){\r\n\t\t\t\t\tlabelGap = 4; // in pixels\r\n\t\t\t\t}\r\n\t\t\t\tif(labelW && o.dropLabels){\r\n\t\t\t\t\tvar cosr = Math.abs(Math.cos(rotation * Math.PI / 180)),\r\n\t\t\t\t\t\tsinr = Math.abs(Math.sin(rotation * Math.PI / 180));\r\n\t\t\t\t\tvar majLabelW, minLabelW;\r\n\t\t\t\t\tif(rotation < 0){\r\n\t\t\t\t\t\trotation += 360;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tswitch(rotation){\r\n\t\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tcase 180:\r\n\t\t\t\t\t\t\t// trivial cases: horizontal labels\r\n\t\t\t\t\t\t\tif(this.vertical){\r\n\t\t\t\t\t\t\t\tmajLabelW = minLabelW = size;\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tmajLabelW = labelW.majLabelW;\r\n\t\t\t\t\t\t\t\tminLabelW = labelW.minLabelW;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 90:\r\n\t\t\t\t\t\tcase 270:\r\n\t\t\t\t\t\t\t// trivial cases: vertical\r\n\t\t\t\t\t\t\tif(this.vertical){\r\n\t\t\t\t\t\t\t\tmajLabelW = labelW.majLabelW;\r\n\t\t\t\t\t\t\t\tminLabelW = labelW.minLabelW;\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tmajLabelW = minLabelW = size;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t// all major labels are parallel they can't collapse except if the two ticks are\r\n\t\t\t\t\t\t\t// closer than the height of the text * cos(90-rotation)\r\n\t\t\t\t\t\t\tmajLabelW  = this.vertical ? Math.min(labelW.majLabelW, size / cosr) : Math.min(labelW.majLabelW, size / sinr);\r\n\t\t\t\t\t\t\t// for minor labels we need to rotated them\r\n\t\t\t\t\t\t\tvar gap1 = Math.sqrt(labelW.minLabelW * labelW.minLabelW + size * size),\r\n\t\t\t\t\t\t\t\tgap2 = this.vertical ? size * cosr + labelW.minLabelW * sinr : labelW.minLabelW * cosr + size * sinr;\r\n\t\t\t\t\t\t\tminLabelW = Math.min(gap1, gap2);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// we need to check both minor and major labels fit a minor step\r\n\t\t\t\t\tthis.scaler.minMinorStep = this._prevMinMinorStep =  Math.max(majLabelW, minLabelW) + labelGap;\r\n\t\t\t\t\tvar canMinorLabel = this.scaler.minMinorStep <= this.scaler.minor.tick * this.scaler.bounds.scale;\r\n\t\t\t\t\tif(!canMinorLabel){\r\n\t\t\t\t\t\t// we can't place minor labels, let's see if we can place major ones\r\n\t\t\t\t\t\t// in a major step and if not which skip interval we must follow\r\n\t\t\t\t\t\tthis._skipInterval = Math.floor((majLabelW + labelGap) / (this.scaler.major.tick * this.scaler.bounds.scale));\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t// everything fit well\r\n\t\t\t\t\t\tthis._skipInterval = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// drop label disabled\r\n\t\t\t\t\tthis._skipInterval = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// computes the tick subset we need for that scale/offset\r\n\t\t\tthis.ticks = lin.buildTicks(this.scaler, this.opt);\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tgetOffsets: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet the physical offset values for this axis (used in drawing data series). This method is not\r\n\t\t\t//\t\tsupposed to be called by the users but internally.\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\tThe calculated offsets in the form of { l, r, t, b } (left, right, top, bottom).\r\n\t\t\tvar s = this.scaler, offsets = { l: 0, r: 0, t: 0, b: 0 };\r\n\t\t\tif(!s){\r\n\t\t\t\treturn offsets;\r\n\t\t\t}\r\n\t\t\tvar o = this.opt,\r\n\t\t\t\tta = this.chart.theme.axis,\r\n\t\t\t\tlabelGap = this.chart.theme.axis.tick.labelGap,\r\n\t\t\t\t// TODO: we use one font --- of major tick, we need to use major and minor fonts\r\n\t\t\t\ttaTitleFont = o.titleFont || (ta.title && ta.title.font),\r\n\t\t\t\ttaTitleGap = (o.titleGap==0) ? 0 : o.titleGap || (ta.title && ta.title.gap),\r\n\t\t\t\ttaMajorTick = this.chart.theme.getTick(\"major\", o),\r\n\t\t\t\ttaMinorTick = this.chart.theme.getTick(\"minor\", o),\r\n\t\t\t\ttsize = taTitleFont ? g.normalizedLength(g.splitFontString(taTitleFont).size) : 0,\r\n\t\t\t\trotation = o.rotation % 360, position = o.position, \r\n\t\t\t\tleftBottom = position !== \"rightOrTop\",\r\n\t\t\t\tcosr = Math.abs(Math.cos(rotation * Math.PI / 180)),\r\n\t\t\t\tsinr = Math.abs(Math.sin(rotation * Math.PI / 180));\r\n\t\t\tthis.trailingSymbol = (o.trailingSymbol === undefined || o.trailingSymbol === null) ?\r\n\t\t\t\tthis.trailingSymbol : o.trailingSymbol;\r\n\t\t\tif(typeof labelGap != \"number\"){\r\n\t\t\t\tlabelGap = 4; // in pixels\r\n\t\t\t}\r\n\t\t\tif(rotation < 0){\r\n\t\t\t\trotation += 360;\r\n\t\t\t}\r\n\t\t\tvar maxLabelSize = this._getMaxLabelSize(); // don't need parameters, calculate has been called before => we use cached value\r\n\t\t\tif(maxLabelSize){\r\n\t\t\t\tvar side;\r\n\t\t\t\tvar labelWidth = Math.ceil(Math.max(maxLabelSize.majLabelW, maxLabelSize.minLabelW)) + 1,\r\n\t\t\t\t\tsize = Math.ceil(Math.max(maxLabelSize.majLabelH, maxLabelSize.minLabelH)) + 1;\r\n\t\t\t\tif(this.vertical){\r\n\t\t\t\t\tside = leftBottom ? \"l\" : \"r\";\r\n\t\t\t\t\tswitch(rotation){\r\n\t\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tcase 180:\r\n\t\t\t\t\t\t\toffsets[side] = position === \"center\" ? 0 : labelWidth;\r\n\t\t\t\t\t\t\toffsets.t = offsets.b = size / 2;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 90:\r\n\t\t\t\t\t\tcase 270:\r\n\t\t\t\t\t\t\toffsets[side] = size;\r\n\t\t\t\t\t\t\toffsets.t = offsets.b = labelWidth / 2;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tif(rotation <= centerAnchorLimit || (180 < rotation && rotation <= (180 + centerAnchorLimit))){\r\n\t\t\t\t\t\t\t\toffsets[side] = size * sinr / 2 + labelWidth * cosr;\r\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"t\" : \"b\"] = size * cosr / 2 + labelWidth * sinr;\r\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"b\" : \"t\"] = size * cosr / 2;\r\n\t\t\t\t\t\t\t}else if(rotation > (360 - centerAnchorLimit) || (180 > rotation && rotation > (180 - centerAnchorLimit))){\r\n\t\t\t\t\t\t\t\toffsets[side] = size * sinr / 2 + labelWidth * cosr;\r\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"b\" : \"t\"] = size * cosr / 2 + labelWidth * sinr;\r\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"t\" : \"b\"] = size * cosr / 2;\r\n\t\t\t\t\t\t\t}else if(rotation < 90 || (180 < rotation && rotation < 270)){\r\n\t\t\t\t\t\t\t\toffsets[side] = size * sinr + labelWidth * cosr;\r\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"t\" : \"b\"] = size * cosr + labelWidth * sinr;\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\toffsets[side] = size * sinr + labelWidth * cosr;\r\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"b\" : \"t\"] = size * cosr + labelWidth * sinr;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(position === \"center\"){\r\n\t\t\t\t\t    offsets[side] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\t\t\t\t\t\r\n\t\t\t\t\t    offsets[side] += labelGap + Math.max(taMajorTick.length > 0?taMajorTick.length:0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t taMinorTick.length > 0?taMinorTick.length:0) + (o.title ? (tsize + taTitleGap) : 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tside = leftBottom ? \"b\" : \"t\";\r\n\t\t\t\t\tswitch(rotation){\r\n\t\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tcase 180:\r\n\t\t\t\t\t\t\toffsets[side] = position === \"center\" ? 0 : size;\r\n\t\t\t\t\t\t\toffsets.l = offsets.r = labelWidth / 2;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 90:\r\n\t\t\t\t\t\tcase 270:\r\n\t\t\t\t\t\t\toffsets[side] = labelWidth;\r\n\t\t\t\t\t\t\toffsets.l = offsets.r = size / 2;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tif((90 - centerAnchorLimit) <= rotation && rotation <= 90 || (270 - centerAnchorLimit) <= rotation && rotation <= 270){\r\n\t\t\t\t\t\t\t\toffsets[side] = size * cosr / 2 + labelWidth * sinr;\r\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"r\" : \"l\"] = size * sinr / 2 + labelWidth * cosr;\r\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"l\" : \"r\"] = size * sinr / 2;\r\n\t\t\t\t\t\t\t}else if(90 <= rotation && rotation <= (90 + centerAnchorLimit) || 270 <= rotation && rotation <= (270 + centerAnchorLimit)){\r\n\t\t\t\t\t\t\t\toffsets[side] = size * cosr / 2 + labelWidth * sinr;\r\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"l\" : \"r\"] = size * sinr / 2 + labelWidth * cosr;\r\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"r\" : \"l\"] = size * sinr / 2;\r\n\t\t\t\t\t\t\t}else if(rotation < centerAnchorLimit || (180 < rotation && rotation < (180 + centerAnchorLimit))){\r\n\t\t\t\t\t\t\t\toffsets[side] = size * cosr + labelWidth * sinr;\r\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"r\" : \"l\"] = size * sinr + labelWidth * cosr;\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\toffsets[side] = size * cosr + labelWidth * sinr;\r\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"l\" : \"r\"] = size * sinr + labelWidth * cosr;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(position === \"center\"){\r\n\t\t\t\t\t    offsets[side] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\t\t\t\t\t\r\n\t\t\t\t\toffsets[side] += labelGap + Math.max(taMajorTick.length > 0?taMajorTick.length:0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t taMinorTick.length > 0?taMinorTick.length:0) + (o.title ? (tsize + taTitleGap) : 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn offsets;\t//\tObject\r\n\t\t},\r\n\t\tcleanGroup: function(creator){\r\n\t\t\tif(this.opt.enableCache && this.group){\r\n\t\t\t\tthis._lineFreePool = this._lineFreePool.concat(this._lineUsePool);\r\n\t\t\t\tthis._lineUsePool = [];\r\n\t\t\t\tthis._textFreePool = this._textFreePool.concat(this._textUsePool);\r\n\t\t\t\tthis._textUsePool = [];\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\t\tcreateText: function(labelType, creator, x, y, align, textContent, font, fontColor, labelWidth){\r\n\t\t\tif(!this.opt.enableCache || labelType==\"html\"){\r\n\t\t\t\treturn acommon.createText[labelType](\r\n\t\t\t\t\t\tthis.chart,\r\n\t\t\t\t\t\tcreator,\r\n\t\t\t\t\t\tx,\r\n\t\t\t\t\t\ty,\r\n\t\t\t\t\t\talign,\r\n\t\t\t\t\t\ttextContent,\r\n\t\t\t\t\t\tfont,\r\n\t\t\t\t\t\tfontColor,\r\n\t\t\t\t\t\tlabelWidth\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tvar text;\r\n\t\t\tif(this._textFreePool.length > 0){\r\n\t\t\t\ttext = this._textFreePool.pop();\r\n\t\t\t\ttext.setShape({x: x, y: y, text: textContent, align: align});\r\n\t\t\t\t// For now all items share the same font, no need to re-set it\r\n\t\t\t\t//.setFont(font).setFill(fontColor);\r\n\t\t\t\t// was cleared, add it back\r\n\t\t\t\tcreator.add(text);\r\n\t\t\t}else{\r\n\t\t\t\ttext = acommon.createText[labelType](\r\n\t\t\t\t\t\tthis.chart,\r\n\t\t\t\t\t\tcreator,\r\n\t\t\t\t\t\tx,\r\n\t\t\t\t\t\ty,\r\n\t\t\t\t\t\talign,\r\n\t\t\t\t\t\ttextContent,\r\n\t\t\t\t\t\tfont,\r\n\t\t\t\t\t\tfontColor\t\t\t\t\t\t\r\n\t\t\t\t\t);\t\t\t\r\n\t\t\t}\r\n\t\t\tthis._textUsePool.push(text);\r\n\t\t\treturn text;\r\n\t\t},\r\n\t\tcreateLine: function(creator, params){\r\n\t\t\tvar line;\r\n\t\t\tif(this.opt.enableCache && this._lineFreePool.length > 0){\r\n\t\t\t\tline = this._lineFreePool.pop();\r\n\t\t\t\tline.setShape(params);\r\n\t\t\t\t// was cleared, add it back\r\n\t\t\t\tcreator.add(line);\r\n\t\t\t}else{\r\n\t\t\t\tline = creator.createLine(params);\r\n\t\t\t}\r\n\t\t\tif(this.opt.enableCache){\r\n\t\t\t\tthis._lineUsePool.push(line);\r\n\t\t\t}\r\n\t\t\treturn line;\r\n\t\t},\r\n\t\trender: function(dim, offsets){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRender/draw the axis.\r\n\t\t\t// dim: Object\r\n\t\t\t//\t\tAn object of the form { width, height}.\r\n\t\t\t// offsets: Object\r\n\t\t\t//\t\tAn object of the form { l, r, t, b }.\r\n\t\t\t// returns: dojox/charting/axis2d/Default\r\n\t\t\t//\t\tThe reference to the axis for functional chaining.\r\n\t\t\t\r\n\t\t\tvar isRtl = this._isRtl();\t// chart mirroring\r\n\t\t\tif(!this.dirty || !this.scaler){\r\n\t\t\t\treturn this;\t//\tdojox/charting/axis2d/Default\r\n\t\t\t}\r\n\t\t\t// prepare variable\r\n\t\t\tvar o = this.opt, ta = this.chart.theme.axis, position = o.position, \r\n\t\t\t       leftBottom = position !== \"rightOrTop\", rotation = o.rotation % 360,\r\n\t\t\t\tstart, stop, titlePos, titleRotation=0, titleOffset, axisVector, tickVector, anchorOffset, labelOffset, labelAlign,\r\n\t\t\t\tlabelGap = this.chart.theme.axis.tick.labelGap,\r\n\t\t\t\t// TODO: we use one font --- of major tick, we need to use major and minor fonts\r\n\t\t\t\ttaFont = o.font || (ta.majorTick && ta.majorTick.font) || (ta.tick && ta.tick.font),\r\n\t\t\t\ttaTitleFont = o.titleFont || (ta.title && ta.title.font),\r\n\t\t\t\t// TODO: we use one font color --- we need to use different colors\r\n\t\t\t\ttaFontColor = o.fontColor || (ta.majorTick && ta.majorTick.fontColor) || (ta.tick && ta.tick.fontColor) || \"black\",\r\n\t\t\t\ttaTitleFontColor = o.titleFontColor || (ta.title && ta.title.fontColor) || \"black\",\r\n\t\t\t\ttaTitleGap = (o.titleGap==0) ? 0 : o.titleGap || (ta.title && ta.title.gap) || 15,\r\n\t\t\t\ttaTitleOrientation = o.titleOrientation || (ta.title && ta.title.orientation) || \"axis\",\r\n\t\t\t\ttaMajorTick = this.chart.theme.getTick(\"major\", o),\r\n\t\t\t\ttaMinorTick = this.chart.theme.getTick(\"minor\", o),\r\n\t\t\t\ttaMicroTick = this.chart.theme.getTick(\"micro\", o),\r\n\r\n\t\t\t\ttaStroke = \"stroke\" in o ? o.stroke : ta.stroke,\r\n\t\t\t\tsize = taFont ? g.normalizedLength(g.splitFontString(taFont).size) : 0,\r\n\t\t\t\tcosr = Math.abs(Math.cos(rotation * Math.PI / 180)),\r\n\t\t\t\tsinr = Math.abs(Math.sin(rotation * Math.PI / 180)),\r\n\t\t\t\ttsize = taTitleFont ? g.normalizedLength(g.splitFontString(taTitleFont).size) : 0;\r\n\t\t\tif(typeof labelGap != \"number\"){\r\n\t\t\t\tlabelGap = 4; // in pixels\r\n\t\t\t}\r\n\t\t\tif(rotation < 0){\r\n\t\t\t\trotation += 360;\r\n\t\t\t}\r\n\t\t\tvar cachedLabelW = this._getMaxLabelSize();\r\n\t\t\tcachedLabelW = cachedLabelW && cachedLabelW.majLabelW;\r\n\t\t\tif(this.vertical){\r\n\t\t\t\tstart = {y: dim.height - offsets.b};\r\n\t\t\t\tstop  = {y: offsets.t};\r\n\t\t\t\ttitlePos = {y: (dim.height - offsets.b + offsets.t)/2};\r\n\t\t\t\ttitleOffset = size * sinr + (cachedLabelW || 0) * cosr + labelGap + Math.max(taMajorTick.length > 0?taMajorTick.length:0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t taMinorTick.length > 0?taMinorTick.length:0) +\r\n\t\t\t\t\ttsize + taTitleGap;\r\n\t\t\t\taxisVector = {x: 0, y: -1};\r\n\t\t\t\tlabelOffset = {x: 0, y: 0};\r\n\t\t\t\ttickVector = {x: 1, y: 0};\r\n\t\t\t\tanchorOffset = {x: labelGap, y: 0};\r\n\t\t\t\tswitch(rotation){\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tlabelAlign = \"end\";\r\n\t\t\t\t\t\tlabelOffset.y = size * 0.4;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 90:\r\n\t\t\t\t\t\tlabelAlign = \"middle\";\r\n\t\t\t\t\t\tlabelOffset.x = -size;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 180:\r\n\t\t\t\t\t\tlabelAlign = \"start\";\r\n\t\t\t\t\t\tlabelOffset.y = -size * 0.4;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 270:\r\n\t\t\t\t\t\tlabelAlign = \"middle\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tif(rotation < centerAnchorLimit){\r\n\t\t\t\t\t\t\tlabelAlign = \"end\";\r\n\t\t\t\t\t\t\tlabelOffset.y = size * 0.4;\r\n\t\t\t\t\t\t}else if(rotation < 90){\r\n\t\t\t\t\t\t\tlabelAlign = \"end\";\r\n\t\t\t\t\t\t\tlabelOffset.y = size * 0.4;\r\n\t\t\t\t\t\t}else if(rotation < (180 - centerAnchorLimit)){\r\n\t\t\t\t\t\t\tlabelAlign = \"start\";\r\n\t\t\t\t\t\t}else if(rotation < (180 + centerAnchorLimit)){\r\n\t\t\t\t\t\t\tlabelAlign = \"start\";\r\n\t\t\t\t\t\t\tlabelOffset.y = -size * 0.4;\r\n\t\t\t\t\t\t}else if(rotation < 270){\r\n\t\t\t\t\t\t\tlabelAlign = \"start\";\r\n\t\t\t\t\t\t\tlabelOffset.x = leftBottom ? 0 : size * 0.4;\r\n\t\t\t\t\t\t}else if(rotation < (360 - centerAnchorLimit)){\r\n\t\t\t\t\t\t\tlabelAlign = \"end\";\r\n\t\t\t\t\t\t\tlabelOffset.x = leftBottom ? 0 : size * 0.4;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tlabelAlign = \"end\";\r\n\t\t\t\t\t\t\tlabelOffset.y = size * 0.4;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(leftBottom){\r\n\t\t\t\t\tstart.x = stop.x = position === \"center\" ? dim.width/2 : offsets.l;\r\n\t\t\t\t\ttitleRotation = (taTitleOrientation && taTitleOrientation == \"away\") ? 90 : 270;\r\n\t\t\t\t\ttitlePos.x = offsets.l - titleOffset + (titleRotation == 270 ? tsize : 0);\r\n\t\t\t\t\ttickVector.x = -1;\r\n\t\t\t\t\tanchorOffset.x = -anchorOffset.x;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tstart.x = stop.x = dim.width - offsets.r;\r\n\t\t\t\t\ttitleRotation = (taTitleOrientation && taTitleOrientation == \"axis\") ? 90 : 270;\r\n\t\t\t\t\ttitlePos.x = dim.width - offsets.r + titleOffset - (titleRotation == 270 ? 0 : tsize);\r\n\t\t\t\t\tswitch(labelAlign){\r\n\t\t\t\t\t\tcase \"start\":\r\n\t\t\t\t\t\t\tlabelAlign = \"end\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"end\":\r\n\t\t\t\t\t\t\tlabelAlign = \"start\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\t\t\tlabelOffset.x += size;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tstart = {x: offsets.l};\r\n\t\t\t\tstop  = {x: dim.width - offsets.r};\r\n\t\t\t\ttitlePos = {x: (dim.width - offsets.r + offsets.l)/2};\r\n\t\t\t\ttitleOffset = size * cosr + (cachedLabelW || 0) * sinr + labelGap + Math.max(taMajorTick.length > 0?taMajorTick.length:0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t taMinorTick.length > 0?taMinorTick.length:0) +\r\n\t\t\t\t\ttsize + taTitleGap;\r\n\t\t\t\taxisVector = {x: isRtl ? -1 : 1, y: 0}; \t// chart mirroring\r\n\t\t\t\tlabelOffset = {x: 0, y: 0};\r\n\t\t\t\ttickVector = {x: 0, y: 1};\r\n\t\t\t\tanchorOffset = {x: 0, y: labelGap};\r\n\t\t\t\tswitch(rotation){\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tlabelAlign = \"middle\";\r\n\t\t\t\t\t\tlabelOffset.y = size;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 90:\r\n\t\t\t\t\t\tlabelAlign = \"start\";\r\n\t\t\t\t\t\tlabelOffset.x = -size * 0.4;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 180:\r\n\t\t\t\t\t\tlabelAlign = \"middle\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 270:\r\n\t\t\t\t\t\tlabelAlign = \"end\";\r\n\t\t\t\t\t\tlabelOffset.x = size * 0.4;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tif(rotation < (90 - centerAnchorLimit)){\r\n\t\t\t\t\t\t\tlabelAlign = \"start\";\r\n\t\t\t\t\t\t\tlabelOffset.y = leftBottom ? size : 0;\r\n\t\t\t\t\t\t}else if(rotation < (90 + centerAnchorLimit)){\r\n\t\t\t\t\t\t\tlabelAlign = \"start\";\r\n\t\t\t\t\t\t\tlabelOffset.x = -size * 0.4;\r\n\t\t\t\t\t\t}else if(rotation < 180){\r\n\t\t\t\t\t\t\tlabelAlign = \"start\";\r\n\t\t\t\t\t\t\tlabelOffset.y = leftBottom ? 0 : -size;\r\n\t\t\t\t\t\t}else if(rotation < (270 - centerAnchorLimit)){\r\n\t\t\t\t\t\t\tlabelAlign = \"end\";\r\n\t\t\t\t\t\t\tlabelOffset.y = leftBottom ? 0 : -size;\r\n\t\t\t\t\t\t}else if(rotation < (270 + centerAnchorLimit)){\r\n\t\t\t\t\t\t\tlabelAlign = \"end\";\r\n\t\t\t\t\t\t\tlabelOffset.y = leftBottom ? size * 0.4 : 0;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tlabelAlign = \"end\";\r\n\t\t\t\t\t\t\tlabelOffset.y = leftBottom ? size : 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(leftBottom){\r\n\t\t\t\t\tstart.y = stop.y = position === \"center\" ? dim.height/2 : dim.height - offsets.b;\r\n\t\t\t\t\ttitleRotation = (taTitleOrientation && taTitleOrientation == \"axis\") ? 180 : 0;\r\n\t\t\t\t\ttitlePos.y = dim.height - offsets.b + titleOffset - (titleRotation ? tsize : 0);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tstart.y = stop.y = offsets.t;\r\n\t\t\t\t\ttitleRotation = (taTitleOrientation && taTitleOrientation == \"away\") ? 180 : 0;\r\n\t\t\t\t\ttitlePos.y = offsets.t - titleOffset + (titleRotation ? 0 : tsize);\r\n\t\t\t\t\ttickVector.y = -1;\r\n\t\t\t\t\tanchorOffset.y = -anchorOffset.y;\r\n\t\t\t\t\tswitch(labelAlign){\r\n\t\t\t\t\t\tcase \"start\":\r\n\t\t\t\t\t\t\tlabelAlign = \"end\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"end\":\r\n\t\t\t\t\t\t\tlabelAlign = \"start\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\t\t\tlabelOffset.y -= size;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// render shapes\r\n\r\n\t\t\tthis.cleanGroup();\r\n\r\n\t\t\tvar s = this.group,\r\n\t\t\t\tc = this.scaler,\r\n\t\t\t\tt = this.ticks,\r\n\t\t\t\tf = lin.getTransformerFromModel(this.scaler),\r\n\t\t\t\t// GFX Canvas now supports labels, so let's _not_ fallback to HTML anymore on canvas, just use\r\n\t\t\t\t// HTML labels if explicitly asked + no rotation + no IE + no Opera\r\n\t\t\t\tlabelType = (!o.title || !titleRotation) && !rotation && this.opt.htmlLabels && !has(\"ie\") && !has(\"opera\") ? \"html\" : \"gfx\",\r\n\t\t\t\tdx = tickVector.x * taMajorTick.length,\r\n\t\t\t\tdy = tickVector.y * taMajorTick.length,\r\n\t\t\t\tskip = this._skipInterval;\r\n\r\n\t\t\ts.createLine({\r\n\t\t\t\tx1: start.x,\r\n\t\t\t\ty1: start.y,\r\n\t\t\t\tx2: stop.x,\r\n\t\t\t\ty2: stop.y\r\n\t\t\t}).setStroke(taStroke);\r\n\r\n\t\t\t//create axis title\r\n\t\t\tif(o.title){\r\n\t\t\t\tvar axisTitle = acommon.createText[labelType](\r\n\t\t\t\t\tthis.chart,\r\n\t\t\t\t\ts,\r\n\t\t\t\t\ttitlePos.x,\r\n\t\t\t\t\ttitlePos.y,\r\n\t\t\t\t\t\"middle\",\r\n\t\t\t\t\to.title,\r\n\t\t\t\t\ttaTitleFont,\r\n\t\t\t\t\ttaTitleFontColor\r\n\t\t\t\t);\r\n\t\t\t\tif(labelType == \"html\"){\r\n\t\t\t\t\tthis.htmlElements.push(axisTitle);\r\n\t\t\t\t}else{\r\n\t\t\t\t\t//as soon as rotation is provided, labelType won't be \"html\"\r\n\t\t\t\t\t//rotate gfx labels\r\n\t\t\t\t\taxisTitle.setTransform(g.matrix.rotategAt(titleRotation, titlePos.x, titlePos.y));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// go out nicely instead of try/catch\r\n\t\t\tif(t == null){\r\n\t\t\t\tthis.dirty = false;\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tvar rel = (t.major.length > 0)?(t.major[0].value - this._majorStart) / c.major.tick:0;\r\n\t\t\tvar canLabel = this.opt.majorLabels;\r\n\t\t\tarr.forEach(t.major, function(tick, i){\r\n\t\t\t\tvar offset = f(tick.value), elem,\r\n\t\t\t\t\tx = (isRtl ? stop.x : start.x) + axisVector.x * offset, // chart mirroring\r\n\t\t\t\t\ty = start.y + axisVector.y * offset;\r\n\t\t\t\ti += rel;\r\n\t\t\t\tthis.createLine(s, {\r\n\t\t\t\t\tx1: x, y1: y,\r\n\t\t\t\t\tx2: x + dx,\r\n\t\t\t\t\ty2: y + dy\r\n\t\t\t\t}).setStroke(taMajorTick);\r\n\t\t\t\tif(tick.label && (!skip || (i - (1 + skip)) % (1 + skip) == 0)){\r\n\t\t\t\t\tvar label = o.maxLabelCharCount ? this.getTextWithLimitCharCount(tick.label, taFont, o.maxLabelCharCount) : {\r\n\t\t\t\t\t\ttext: tick.label,\r\n\t\t\t\t\t\ttruncated: false\r\n\t\t\t\t\t};\r\n\t\t\t\t\tlabel = o.maxLabelSize ? this.getTextWithLimitLength(label.text, taFont, o.maxLabelSize, label.truncated) : label;\r\n\t\t\t\t\telem = this.createText(labelType,\r\n\t\t\t\t\t\ts,\r\n\t\t\t\t\t\tx + (taMajorTick.length > 0 ? dx : 0) + anchorOffset.x + (rotation ? 0 : labelOffset.x),\r\n\t\t\t\t\t\ty + (taMajorTick.length > 0 ? dy : 0) + anchorOffset.y + (rotation ? 0 : labelOffset.y),\r\n\t\t\t\t\t\tlabelAlign,\r\n\t\t\t\t\t\tlabel.text,\r\n\t\t\t\t\t\ttaFont,\r\n\t\t\t\t\t\ttaFontColor\r\n\t\t\t\t\t\t//cachedLabelW\r\n\t\t\t\t\t);\r\n\t\t\t\t\t// if bidi support was required, the textDir is \"auto\" and truncation\r\n\t\t\t\t\t// took place, we need to update the dir of the element for cases as:\r\n\t\t\t\t\t// Fool label: 111111W (W for bidi character)\r\n\t\t\t\t\t// truncated label: 11...\r\n\t\t\t\t\t// in this case for auto textDir the dir will be \"ltr\" which is wrong.\r\n\t\t\t\t\tif(label.truncated){\r\n\t\t\t\t\t\tthis.chart.formatTruncatedLabel(elem, tick.label, labelType);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlabel.truncated && this.labelTooltip(elem, this.chart, tick.label, label.text, taFont, labelType);\r\n\t\t\t\t\tif(labelType == \"html\"){\r\n\t\t\t\t\t\tthis.htmlElements.push(elem);\r\n\t\t\t\t\t}else if(rotation){\r\n\t\t\t\t\t\telem.setTransform([\r\n\t\t\t\t\t\t\t{dx: labelOffset.x, dy: labelOffset.y},\r\n\t\t\t\t\t\t\tg.matrix.rotategAt(\r\n\t\t\t\t\t\t\t\trotation,\r\n\t\t\t\t\t\t\t\tx + (taMajorTick.length > 0 ? dx : 0) + anchorOffset.x,\r\n\t\t\t\t\t\t\t\ty + (taMajorTick.length > 0 ? dy : 0) + anchorOffset.y\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\tdx = tickVector.x * taMinorTick.length;\r\n\t\t\tdy = tickVector.y * taMinorTick.length;\r\n\t\t\tcanLabel = this.opt.minorLabels && c.minMinorStep <= c.minor.tick * c.bounds.scale;\r\n\t\t\tarr.forEach(t.minor, function(tick){\r\n\t\t\t\tvar offset = f(tick.value), elem,\r\n\t\t\t\t\tx = (isRtl ? stop.x : start.x)  + axisVector.x * offset,\r\n\t\t\t\t\ty = start.y + axisVector.y * offset; // chart mirroring\r\n\t\t\t\tthis.createLine(s, {\r\n\t\t\t\t\tx1: x, y1: y,\r\n\t\t\t\t\tx2: x + dx,\r\n\t\t\t\t\ty2: y + dy\r\n\t\t\t\t}).setStroke(taMinorTick);\r\n\t\t\t\tif(canLabel && tick.label){\r\n\t\t\t\t\tvar label = o.maxLabelCharCount ? this.getTextWithLimitCharCount(tick.label, taFont, o.maxLabelCharCount) : {\r\n\t\t\t\t\t\ttext: tick.label,\r\n\t\t\t\t\t\ttruncated: false\r\n\t\t\t\t\t};\r\n\t\t\t\t\tlabel = o.maxLabelSize ? this.getTextWithLimitLength(label.text, taFont, o.maxLabelSize, label.truncated) : label;\r\n\t\t\t\t\telem = this.createText(labelType,\r\n\t\t\t\t\t\ts,\r\n\t\t\t\t\t\tx + (taMinorTick.length > 0 ? dx : 0) + anchorOffset.x + (rotation ? 0 : labelOffset.x),\r\n\t\t\t\t\t\ty + (taMinorTick.length  > 0 ? dy : 0) + anchorOffset.y + (rotation ? 0 : labelOffset.y),\r\n\t\t\t\t\t\tlabelAlign,\r\n\t\t\t\t\t\tlabel.text,\r\n\t\t\t\t\t\ttaFont,\r\n\t\t\t\t\t\ttaFontColor\r\n\t\t\t\t\t\t//cachedLabelW\r\n\t\t\t\t\t);\r\n\t\t\t\t\t// if bidi support was required, the textDir is \"auto\" and truncation\r\n\t\t\t\t\t// took place, we need to update the dir of the element for cases as:\r\n\t\t\t\t\t// Fool label: 111111W (W for bidi character)\r\n\t\t\t\t\t// truncated label: 11...\r\n\t\t\t\t\t// in this case for auto textDir the dir will be \"ltr\" which is wrong.\r\n\t\t\t\t\tif(label.truncated){\r\n\t\t\t\t\t\tthis.chart.formatTruncatedLabel(elem, tick.label, labelType);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlabel.truncated && this.labelTooltip(elem, this.chart, tick.label, label.text, taFont, labelType);\r\n\t\t\t\t\tif(labelType == \"html\"){\r\n\t\t\t\t\t\tthis.htmlElements.push(elem);\r\n\t\t\t\t\t}else if(rotation){\r\n\t\t\t\t\t\telem.setTransform([\r\n\t\t\t\t\t\t\t{dx: labelOffset.x, dy: labelOffset.y},\r\n\t\t\t\t\t\t\tg.matrix.rotategAt(\r\n\t\t\t\t\t\t\t\trotation,\r\n\t\t\t\t\t\t\t\tx + (taMinorTick.length > 0 ? dx : 0) + anchorOffset.x,\r\n\t\t\t\t\t\t\t\ty + (taMinorTick.length > 0 ? dy : 0) + anchorOffset.y\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\tdx = tickVector.x * taMicroTick.length;\r\n\t\t\tdy = tickVector.y * taMicroTick.length;\r\n\t\t\tarr.forEach(t.micro, function(tick){\r\n\t\t\t\tvar offset = f(tick.value),\r\n\t\t\t\t\tx = start.x + axisVector.x * offset,\r\n\t\t\t\t\ty = start.y + axisVector.y * offset;\r\n\t\t\t\t\tthis.createLine(s, {\r\n\t\t\t\t\t\tx1: x, y1: y,\r\n\t\t\t\t\t\tx2: x + dx,\r\n\t\t\t\t\t\ty2: y + dy\r\n\t\t\t\t\t}).setStroke(taMicroTick);\r\n\t\t\t}, this);\r\n\r\n\t\t\tthis.dirty = false;\r\n\t\t\treturn this;\t//\tdojox/charting/axis2d/Default\r\n\t\t},\r\n\t\tlabelTooltip: function(elem, chart, label, truncatedLabel, font, elemType){\r\n\t\t\tvar modules = [\"dijit/Tooltip\"];\r\n\t\t\tvar aroundRect = {type: \"rect\"}, position = [\"above\", \"below\"],\r\n\t\t\t\tfontWidth = g._base._getTextBox(truncatedLabel, {font: font}).w || 0,\r\n\t\t\t\tfontHeight = font ? g.normalizedLength(g.splitFontString(font).size) : 0;\r\n\t\t\tif(elemType == \"html\"){\r\n\t\t\t\tlang.mixin(aroundRect, domGeom.position(elem.firstChild, true));\r\n\t\t\t\taroundRect.width = Math.ceil(fontWidth);\r\n\t\t\t\taroundRect.height = Math.ceil(fontHeight);\r\n\t\t\t\tthis._events.push({\r\n\t\t\t\t\tshape:  dojo,\r\n\t\t\t\t\thandle: connect.connect(elem.firstChild, \"onmouseover\", this, function(e){\r\n\t\t\t\t\t\trequire(modules, function(Tooltip){\r\n\t\t\t\t\t\t\tTooltip.show(label, aroundRect, position);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t\t\tthis._events.push({\r\n\t\t\t\t\tshape:  dojo,\r\n\t\t\t\t\thandle: connect.connect(elem.firstChild, \"onmouseout\", this, function(e){\r\n\t\t\t\t\t\trequire(modules, function(Tooltip){\r\n\t\t\t\t\t\t\tTooltip.hide(aroundRect);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\tvar shp = elem.getShape(),\r\n\t\t\t\t\tlt = chart.getCoords();\r\n\t\t\t\taroundRect = lang.mixin(aroundRect, {\r\n\t\t\t\t\tx: shp.x - fontWidth / 2,\r\n\t\t\t\t\ty: shp.y\r\n\t\t\t\t});\r\n\t\t\t\taroundRect.x += lt.x;\r\n\t\t\t\taroundRect.y += lt.y;\r\n\t\t\t\taroundRect.x = Math.round(aroundRect.x);\r\n\t\t\t\taroundRect.y = Math.round(aroundRect.y);\r\n\t\t\t\taroundRect.width = Math.ceil(fontWidth);\r\n\t\t\t\taroundRect.height = Math.ceil(fontHeight);\r\n\t\t\t\tthis._events.push({\r\n\t\t\t\t\tshape:  elem,\r\n\t\t\t\t\thandle: elem.connect(\"onmouseenter\", this, function(e){\r\n\t\t\t\t\t\trequire(modules, function(Tooltip){\r\n\t\t\t\t\t\t\tTooltip.show(label, aroundRect, position);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t\t\tthis._events.push({\r\n\t\t\t\t\tshape:  elem,\r\n\t\t\t\t\thandle: elem.connect(\"onmouseleave\", this, function(e){\r\n\t\t\t\t\t\trequire(modules, function(Tooltip){\r\n\t\t\t\t\t\t\tTooltip.hide(aroundRect);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\t_isRtl: function(){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t});\r\n\treturn has(\"dojo-bidi\")? declare(\"dojox.charting.axis2d.Default\", [Default, BidiDefault]) : Default;\r\n});\r\n"]}