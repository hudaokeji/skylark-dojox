{"version":3,"sources":["charting/plot3d/Cylinders.js"],"names":["define","matrix3d","declare","Color","kernel","has","Base","constructor","width","height","kwArgs","this","depth","gap","data","material","type","finish","color","outline","m","getDepth","w","length","generate","chart","creator","step","org","scale","a","f","o","split","global","z","i","call","reduce","Math","max","view","createCylinder","center","x","y","radius","setTransform","rotateXg","setFill","setStroke","_checkOrientation"],"mappings":";;;;;;;AAAAA,QAAQ,qBAAsB,qBAAsB,mBAAoB,oBAAqB,WAAY,UACxG,SAASC,EAAUC,EAASC,EAAOC,EAAQC,EAAKC,GAahD,OAAOJ,EAAQ,kCAAmCI,GACjDC,YAAa,SAASC,EAAOC,EAAQC,GAMpC,GALAC,KAAKC,MAAQ,OACbD,KAAKE,IAAQ,EACbF,KAAKG,QACLH,KAAKI,UAAYC,KAAM,UAAWC,OAAQ,QAASC,MAAO,QAC1DP,KAAKQ,QAAW,KACbT,EAAO,CAGT,GAFG,UAAWA,IAASC,KAAKC,MAAQF,EAAOE,OACxC,QAAWF,IAASC,KAAKE,IAAQH,EAAOG,KACxC,aAAcH,EAAO,CACvB,IAAIU,EAAIV,EAAOK,SACA,iBAALK,GAAiBA,aAAajB,EACvCQ,KAAKI,SAASG,MAAQE,EAEtBT,KAAKI,SAAWK,EAGf,YAAaV,IAASC,KAAKQ,QAAUT,EAAOS,WAGjDE,SAAU,WACT,GAAiB,QAAdV,KAAKC,MAAgB,CACvB,IAAIU,EAAIX,KAAKH,MAIb,OAHGG,KAAKG,MAAQH,KAAKG,KAAKS,SACzBD,GAAQX,KAAKG,KAAKS,QAEZD,EAAI,EAAIX,KAAKE,IAErB,OAAOF,KAAKC,OAEbY,SAAU,SAASC,EAAOC,GACzB,IAAIf,KAAKG,KAAO,OAAOH,KACvB,IAAIgB,EAAOhB,KAAKH,MAAQG,KAAKG,KAAKS,OAAQK,EAAM,EAC/CC,EAAQlB,KAAKF,OA5CH,SAAmBqB,EAA6BC,EAAeC,GAI3EF,EAAgB,iBAALA,EAAgBA,EAAEG,MAAM,IAAMH,EAAGE,EAAIA,GAAK5B,EAAO8B,OAE5D,IADA,IAAIC,EAAIL,EAAE,GACFM,EAAI,EAAGA,EAAIN,EAAEP,OAAQY,EAAIJ,EAAEM,KAAKL,EAAGG,EAAGL,EAAEM,OAChD,OAAOD,EAqCiBG,CAAO3B,KAAKG,KAAMyB,KAAKC,KAC1Cd,IAAUA,EAAUD,EAAMgB,MAC9B,IAAI,IAAIL,EAAI,EAAGA,EAAIzB,KAAKG,KAAKS,SAAUa,EAAGR,GAAOD,EAChDD,EACEgB,gBACAC,QAASC,EAAGhB,EAAMD,EAAO,EAAGkB,EAAG,EAAGV,EAAG,GACrCW,OAAQnB,EAAO,EAAIhB,KAAKE,IACxBJ,OAAQE,KAAKG,KAAKsB,GAAKP,IAEvBkB,aAAa9C,EAAS+C,UAAU,KAChCC,QAAQtC,KAAKI,UAAUmC,UAAUvC,KAAKQ,SAEtCd,EAAI,cACNM,KAAKwC,kBAAkB1B","file":"../../../charting/plot3d/Cylinders.js","sourcesContent":["define([\"dojox/gfx3d/matrix\", \"dojo/_base/declare\", \"dojo/_base/Color\", \"dojo/_base/kernel\", \"dojo/has\", \"./Base\"],\r\n\tfunction(matrix3d, declare, Color, kernel, has, Base) {\r\n\r\n\t// reduce function borrowed from dojox.fun\r\n\tvar reduce = function(/*Array*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\r\n\t\t// summary:\r\n\t\t//\t\trepeatedly applies a binary function to an array from left\r\n\t\t//\t\tto right; returns the final value.\r\n\t\ta = typeof a == \"string\" ? a.split(\"\") : a; o = o || kernel.global;\r\n\t\tvar z = a[0];\r\n\t\tfor(var i = 1; i < a.length; z = f.call(o, z, a[i++]));\r\n\t\treturn z;\t// Object\r\n\t};\r\n\r\n\treturn declare(\"dojox.charting.plot3d.Cylinders\", Base, {\r\n\t\tconstructor: function(width, height, kwArgs){\r\n\t\t\tthis.depth = \"auto\";\r\n\t\t\tthis.gap   = 0;\r\n\t\t\tthis.data  = [];\r\n\t\t\tthis.material = {type: \"plastic\", finish: \"shiny\", color: \"lime\"};\r\n\t\t\tthis.outline  = null;\r\n\t\t\tif(kwArgs){\r\n\t\t\t\tif(\"depth\" in kwArgs){ this.depth = kwArgs.depth; }\r\n\t\t\t\tif(\"gap\"   in kwArgs){ this.gap   = kwArgs.gap; }\r\n\t\t\t\tif(\"material\" in kwArgs){\r\n\t\t\t\t\tvar m = kwArgs.material;\r\n\t\t\t\t\tif(typeof m == \"string\" || m instanceof Color){\r\n\t\t\t\t\t\tthis.material.color = m;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.material = m;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(\"outline\" in kwArgs){ this.outline = kwArgs.outline; }\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetDepth: function(){\r\n\t\t\tif(this.depth == \"auto\"){\r\n\t\t\t\tvar w = this.width;\r\n\t\t\t\tif(this.data && this.data.length){\r\n\t\t\t\t\tw = w / this.data.length;\r\n\t\t\t\t}\r\n\t\t\t\treturn w - 2 * this.gap;\r\n\t\t\t}\r\n\t\t\treturn this.depth;\r\n\t\t},\r\n\t\tgenerate: function(chart, creator){\r\n\t\t\tif(!this.data){ return this; }\r\n\t\t\tvar step = this.width / this.data.length, org = 0,\r\n\t\t\t\tscale = this.height / reduce(this.data, Math.max);\r\n\t\t\tif(!creator){ creator = chart.view; }\r\n\t\t\tfor(var i = 0; i < this.data.length; ++i, org += step){\r\n\t\t\t\tcreator\r\n\t\t\t\t\t.createCylinder({\r\n\t\t\t\t\t\tcenter: {x: org + step / 2, y: 0, z: 0},\r\n\t\t\t\t\t\tradius: step / 2 - this.gap,\r\n\t\t\t\t\t\theight: this.data[i] * scale\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.setTransform(matrix3d.rotateXg(-90))\r\n\t\t\t\t\t.setFill(this.material).setStroke(this.outline);\r\n\t\t\t}\r\n\t\t\tif(has(\"dojo-bidi\")){\r\n\t\t\t\tthis._checkOrientation(chart);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n\r\n"]}