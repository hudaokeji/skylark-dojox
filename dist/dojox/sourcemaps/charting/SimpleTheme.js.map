{"version":3,"sources":["charting/SimpleTheme.js"],"names":["define","lang","arr","declare","Color","dlu","dgg","SimpleTheme","shapeSpaces","shape","shapeX","shapeY","constructor","kwArgs","def","defaultTheme","forEach","name","this","delegate","seriesThemes","length","colors","slice","defaultColors","markerThemes","markers","clone","defaultMarkers","noGradConv","noRadialConv","reverseFills","_current","_buildMarkerArray","theme","chart","plotarea","axis","grid","series","marker","indicator","hasOwnProperty","clear","next","elementType","mixin","doPost","merge","old","color","stroke","a","fill","type","symbol","_markers","addMixin","post","skip","isArray","m","t","setObject","markerName","charAt","toUpperCase","substr","b","space","x1","y1","x2","y2","cx","cy","r","getTick","tick","tickName","inspectObjects","f","o","reverse","addMarker","segment","setMarkers","obj","p","push","CIRCLE","SQUARE","DIAMOND","CROSS","X","TRIANGLE","TRIANGLE_INVERTED","pageStyle","titleGap","titlePos","titleFont","titleFontColor","width","position","font","fontColor","labelGap","majorTick","minorTick","microTick","title","gap","orientation","outline","shadow","labelWiring","lineStroke","lineOutline","lineShadow","lineFill","radius","markerFill","markerSymbol","markerStroke","markerOutline","markerShadow"],"mappings":"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","file":"../../charting/SimpleTheme.js","sourcesContent":["define([\"dojo/_base/lang\", \"dojo/_base/array\",\"dojo/_base/declare\",\"dojo/_base/Color\", \"dojox/lang/utils\", \"dojox/gfx/gradutils\"],\r\n\tfunction(lang, arr, declare, Color, dlu, dgg){\r\n\t\r\n\tvar SimpleTheme = declare(\"dojox.charting.SimpleTheme\", null, {\r\n\t// summary:\r\n\t//\t\tA SimpleTheme or Theme is a pre-defined object, primarily JSON-based, that makes up the definitions to\r\n\t//\t\tstyle a chart.\r\n\t//\r\n\t// description:\r\n\t//\t\tWhile you can set up style definitions on a chart directly (usually through the various add methods\r\n\t//\t\ton a dojox.charting.Chart object), a Theme simplifies this manual setup by allowing you to\r\n\t//\t\tpre-define all of the various visual parameters of each element in a chart.\r\n\t//\r\n\t//\t\tMost of the properties of a Theme are straight-forward; if something is line-based (such as\r\n\t//\t\tan axis or the ticks on an axis), they will be defined using basic stroke parameters.  Likewise,\r\n\t//\t\tif an element is primarily block-based (such as the background of a chart), it will be primarily\r\n\t//\t\tfill-based.\r\n\t//\r\n\t//\t\tIn addition (for convenience), a Theme definition does not have to contain the entire JSON-based\r\n\t//\t\tstructure.  Each theme is built on top of a default theme (which serves as the basis for the theme\r\n\t//\t\t\"GreySkies\"), and is mixed into the default theme object.  This allows you to create a theme based,\r\n\t//\t\tsay, solely on colors for data series.\r\n\t//\r\n\t//\t\tDefining a new theme is relatively easy; see any of the themes in dojox.charting.themes for examples\r\n\t//\t\ton how to define your own.\r\n\t//\r\n\t//\t\tWhen you set a theme on a chart, the theme itself is deep-cloned.  This means that you cannot alter\r\n\t//\t\tthe theme itself after setting the theme value on a chart, and expect it to change your chart.  If you\r\n\t//\t\tare looking to make alterations to a theme for a chart, the suggestion would be to create your own\r\n\t//\t\ttheme, based on the one you want to use, that makes those alterations before it is applied to a chart.\r\n\t//\r\n\t//\t\tFinally, a Theme contains a number of functions to facilitate rendering operations on a chart--the main\r\n\t//\t\thelper of which is the ~next~ method, in which a chart asks for the information for the next data series\r\n\t//\t\tto be rendered.\r\n\t//\r\n\t//\t\tA note on colors:\r\n\t//\t\tA theme palette is usually comprised of 5 different color definitions, and\r\n\t//\t\tno more.  If you have a need to render a chart with more than 5 data elements, you can simply \"push\"\r\n\t//\t\tnew color definitions into the theme's .color array.  Make sure that you do that with the actual\r\n\t//\t\ttheme object from a Chart, and not in the theme itself (i.e. either do that before using .setTheme\r\n\t//\t\ton a chart).\r\n\t//\r\n\t// example:\r\n\t//\t\tThe default theme (and structure) looks like so:\r\n\t//\t|\t// all objects are structs used directly in dojox.gfx\r\n\t//\t|\tchart:{\r\n\t//\t|\t\tstroke: null,\r\n\t//\t|\t\tfill: \"white\",\r\n\t//\t|\t\tpageStyle: null // suggested page style as an object suitable for dojo.style()\r\n\t//\t|\t},\r\n\t//\t|\tplotarea:{\r\n\t//\t|\t\tstroke: null,\r\n\t//\t|\t\tfill: \"white\"\r\n\t//\t|\t},\r\n\t//\t|\taxis:{\r\n\t//\t|\t\tstroke:\t{ // the axis itself\r\n\t//\t|\t\t\tcolor: \"#333\",\r\n\t//\t|\t\t\twidth: 1\r\n\t//\t|\t\t},\r\n\t//\t|\t\ttick: {\t// used as a foundation for all ticks\r\n\t//\t|\t\t\tcolor:     \"#666\",\r\n\t//\t|\t\t\tposition:  \"center\",\r\n\t//\t|\t\t\tfont:      \"normal normal normal 7pt Tahoma\",\t// labels on axis\r\n\t//\t|\t\t\tfontColor: \"#333\"\t\t\t\t\t\t\t\t// color of labels\r\n\t//\t|\t\t},\r\n\t//\t|\t\tmajorTick:\t{ // major ticks on axis, and used for major gridlines\r\n\t//\t|\t\t\twidth:  1,\r\n\t//\t|\t\t\tlength: 6\r\n\t//\t|\t\t},\r\n\t//\t|\t\tminorTick:\t{ // minor ticks on axis, and used for minor gridlines\r\n\t//\t|\t\t\twidth:  0.8,\r\n\t//\t|\t\t\tlength: 3\r\n\t//\t|\t\t},\r\n\t//\t|\t\tmicroTick:\t{ // minor ticks on axis, and used for minor gridlines\r\n\t//\t|\t\t\twidth:  0.5,\r\n\t//\t|\t\t\tlength: 1\r\n\t//\t|\t\t},\r\n\t//\t|\t\ttitle: {\r\n\t//\t|\t\t\tgap:  15,\r\n\t//\t|\t\t\tfont: \"normal normal normal 11pt Tahoma\",\t// title font\r\n\t//\t|\t\t\tfontColor: \"#333\",\t\t\t\t\t\t\t// title font color\r\n\t//\t|\t\t\torientation: \"axis\"\t\t\t\t\t\t// \"axis\": facing the axis, \"away\": facing away\r\n\t//\t|\t\t}\r\n\t//\t|\t},\r\n\t//\t|\tseries: {\r\n\t//\t|\t\tstroke:  {width: 1.5, color: \"#333\"},\t\t// line\r\n\t//\t|\t\toutline: {width: 0.1, color: \"#ccc\"},\t\t// outline\r\n\t//\t|\t\t//shadow:  {dx: 1, dy: 1, width: 2, color: [0, 0, 0, 0.3]},\r\n\t//\t|\t\tshadow: null,\t\t\t\t\t\t\t\t// no shadow\r\n\t//\t|\t\t//filter:  dojox/gfx/filters.createFilter(),\r\n\t//\t|\t\tfilter: null,\t\t\t\t\t\t\t\t// no filter, to use a filter you must use gfx SVG render and require dojox/gfx/svgext\r\n\t//\t|\t\tfill:    \"#ccc\",\t\t\t\t\t\t\t// fill, if appropriate\r\n\t//\t|\t\tfont:    \"normal normal normal 8pt Tahoma\",\t// if there's a label\r\n\t//\t|\t\tfontColor: \"#000\"\t\t\t\t\t\t\t// color of labels\r\n\t//\t|\t\tlabelWiring: {width: 1, color: \"#ccc\"},\t\t// connect marker and target data item(slice, column, bar...)\r\n\t//\t|\t},\r\n\t//\t|\tmarker: {\t// any markers on a series\r\n\t//\t|\t\tsymbol:  \"m-3,3 l3,-6 3,6 z\",\t\t\t\t// symbol\r\n\t//\t|\t\tstroke:  {width: 1.5, color: \"#333\"},\t\t// stroke\r\n\t//\t|\t\toutline: {width: 0.1, color: \"#ccc\"},\t\t// outline\r\n\t//\t|\t\tshadow: null,\t\t\t\t\t\t\t\t// no shadow\r\n\t//\t|\t\tfill:    \"#ccc\",\t\t\t\t\t\t\t// fill if needed\r\n\t//\t|\t\tfont:    \"normal normal normal 8pt Tahoma\",\t// label\r\n\t//\t|\t\tfontColor: \"#000\"\r\n\t//\t|\t},\r\n\t//\t|\tgrid: {\t// grid, when not present axis tick strokes are used instead\r\n\t//\t|\t\tmajorLine: {\t// major grid line\r\n\t//\t|\t\t\tcolor:     \"#666\",\r\n\t//\t|\t\t\twidth:  1,\r\n\t//\t|\t\t\tlength: 6\r\n\t//\t|\t\t},\r\n\t//\t|\t\tminorLine: {\t// minor grid line\r\n\t//\t|\t\t\tcolor:     \"#666\",\r\n\t//\t|\t\t\twidth:  0.8,\r\n\t//\t|\t\t\tlength: 3\r\n\t//\t|\t\t},\r\n\t//\t|\t\tfill: \"grey\",  // every other stripe\r\n\t//\t|\t\talternateFill: \"grey\" // alternate stripe\r\n\t//\t|\t},\r\n\t//\t|\tindicator: {\r\n\t//\t|\t\tlineStroke:  {width: 1.5, color: \"#333\"},\t\t// line\r\n\t//\t|\t\tlineOutline: {width: 0.1, color: \"#ccc\"},\t\t// line outline\r\n\t//\t|\t\tlineShadow: null,\t\t\t\t\t\t\t\t// no line shadow\r\n\t//\t|\t\tlineFill: null,\t\t\t\t\t\t\t\t\t// fill between lines for dual indicators\r\n\t//\t|\t\tstroke:  {width: 1.5, color: \"#333\"},\t\t\t// label background stroke\r\n\t//\t|\t\toutline: {width: 0.1, color: \"#ccc\"},\t\t\t// label background outline\r\n\t//\t|\t\tshadow: null,\t\t\t\t\t\t\t\t\t// no label background shadow\r\n\t//\t|\t\tfill:  \"#ccc\",\t\t\t\t\t\t\t\t\t// label background fill\r\n\t//\t|\t\tradius: 3,\t\t\t\t\t\t\t\t\t\t// radius of the label background\r\n\t//\t|\t\tfont:    \"normal normal normal 10pt Tahoma\",\t// label font\r\n\t//\t|\t\tfontColor: \"#000\"\t\t\t\t\t\t\t\t// label color\r\n\t//\t|\t\tmarkerFill:    \"#ccc\",\t\t\t\t\t\t\t// marker fill\r\n\t//\t|\t\tmarkerSymbol:  \"m-3,0 c0,-4 6,-4 6,0 m-6,0 c0,4 6,4 6,0\",\t// marker symbol\r\n\t//\t|\t\tmarkerStroke:  {width: 1.5, color: \"#333\"},\t\t// marker stroke\r\n\t//\t|\t\tmarkerOutline: {width: 0.1, color: \"#ccc\"},\t\t// marker outline\r\n\t//\t|\t\tmarkerShadow: null,\t\t\t\t\t\t\t\t// no marker shadow\r\n\t//\t|\t}\r\n\t//\r\n\t// example:\r\n\t//\t\tDefining a new theme is pretty simple:\r\n\t//\t|\tvar Grasslands = new SimpleTheme({\r\n\t//\t|\t\tcolors: [ \"#70803a\", \"#dde574\", \"#788062\", \"#b1cc5d\", \"#eff2c2\" ]\r\n\t//\t|\t});\r\n\t//\t|\r\n\t//\t|\tmyChart.setTheme(Grasslands);\r\n\r\n\tshapeSpaces: {shape: 1, shapeX: 1, shapeY: 1},\r\n\r\n\tconstructor: function(kwArgs){\r\n\t\t// summary:\r\n\t\t//\t\tInitialize a theme using the keyword arguments.  Note that the arguments\r\n\t\t//\t\tlook like the example (above), and may include a few more parameters.\r\n\t\tkwArgs = kwArgs || {};\r\n\r\n\t\t// populate theme with defaults updating them if needed\r\n\t\tvar def = SimpleTheme.defaultTheme;\r\n\t\tarr.forEach([\"chart\", \"plotarea\", \"axis\", \"grid\", \"series\", \"marker\", \"indicator\"], function(name){\r\n\t\t\tthis[name] = lang.delegate(def[name], kwArgs[name]);\r\n\t\t}, this);\r\n\r\n\t\t// personalize theme\r\n\t\tif(kwArgs.seriesThemes && kwArgs.seriesThemes.length){\r\n\t\t\tthis.colors  = null;\r\n\t\t\tthis.seriesThemes = kwArgs.seriesThemes.slice(0);\r\n\t\t}else{\r\n\t\t\tthis.seriesThemes = null;\r\n\t\t\tthis.colors = (kwArgs.colors || SimpleTheme.defaultColors).slice(0);\r\n\t\t}\r\n\t\tthis.markerThemes = null;\r\n\t\tif(kwArgs.markerThemes && kwArgs.markerThemes.length){\r\n\t\t\tthis.markerThemes = kwArgs.markerThemes.slice(0);\r\n\t\t}\r\n\t\tthis.markers = kwArgs.markers ? lang.clone(kwArgs.markers) : lang.delegate(SimpleTheme.defaultMarkers);\r\n\r\n\t\t// set flags\r\n\t\tthis.noGradConv = kwArgs.noGradConv;\r\n\t\tthis.noRadialConv = kwArgs.noRadialConv;\r\n\t\tif(kwArgs.reverseFills){\r\n\t\t\tthis.reverseFills();\r\n\t\t}\r\n\r\n\t\t//\tprivate housekeeping\r\n\t\tthis._current = 0;\r\n\t\tthis._buildMarkerArray();\r\n\t},\r\n\r\n\tclone: function(){\r\n\t\t// summary:\r\n\t\t//\t\tClone the current theme.\r\n\t\t// returns: dojox.charting.SimpleTheme\r\n\t\t//\t\tThe cloned theme; any alterations made will not affect the original.\r\n\t\tvar theme = new this.constructor({\r\n\t\t\t// theme components\r\n\t\t\tchart: this.chart,\r\n\t\t\tplotarea: this.plotarea,\r\n\t\t\taxis: this.axis,\r\n\t\t\tgrid: this.grid,\r\n\t\t\tseries: this.series,\r\n\t\t\tmarker: this.marker,\r\n\t\t\t// individual arrays\r\n\t\t\tcolors: this.colors,\r\n\t\t\tmarkers: this.markers,\r\n\t\t\tindicator: this.indicator,\r\n\t\t\tseriesThemes: this.seriesThemes,\r\n\t\t\tmarkerThemes: this.markerThemes,\r\n\t\t\t// flags\r\n\t\t\tnoGradConv: this.noGradConv,\r\n\t\t\tnoRadialConv: this.noRadialConv\r\n\t\t});\r\n\t\t// copy custom methods\r\n\t\tarr.forEach(\r\n\t\t\t[\"clone\", \"clear\", \"next\", \"skip\", \"addMixin\", \"post\", \"getTick\"],\r\n\t\t\tfunction(name){\r\n\t\t\t\tif(this.hasOwnProperty(name)){\r\n\t\t\t\t\ttheme[name] = this[name];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tthis\r\n\t\t);\r\n\t\treturn theme;\t//\tdojox.charting.SimpleTheme\r\n\t},\r\n\r\n\tclear: function(){\r\n\t\t// summary:\r\n\t\t//\t\tClear and reset the internal pointer to start fresh.\r\n\t\tthis._current = 0;\r\n\t},\r\n\r\n\tnext: function(elementType, mixin, doPost){\r\n\t\t// summary:\r\n\t\t//\t\tGet the next color or series theme.\r\n\t\t// elementType: String?\r\n\t\t//\t\tAn optional element type (for use with series themes)\r\n\t\t// mixin: Object?\r\n\t\t//\t\tAn optional object to mix into the theme.\r\n\t\t// doPost: Boolean?\r\n\t\t//\t\tA flag to post-process the results.\r\n\t\t// returns: Object\r\n\t\t//\t\tAn object of the structure { series, marker, symbol }\r\n\t\tvar merge = dlu.merge, series, marker;\r\n\t\tif(this.colors){\r\n\t\t\tseries = lang.delegate(this.series);\r\n\t\t\tmarker = lang.delegate(this.marker);\r\n\t\t\tvar color = new Color(this.colors[this._current % this.colors.length]), old;\r\n\t\t\t// modify the stroke\r\n\t\t\tif(series.stroke && series.stroke.color){\r\n\t\t\t\tseries.stroke = lang.delegate(series.stroke);\r\n\t\t\t\told = new Color(series.stroke.color);\r\n\t\t\t\tseries.stroke.color = new Color(color);\r\n\t\t\t\tseries.stroke.color.a = old.a;\r\n\t\t\t}else{\r\n\t\t\t\tseries.stroke = {color: color};\r\n\t\t\t}\r\n\t\t\tif(marker.stroke && marker.stroke.color){\r\n\t\t\t\tmarker.stroke = lang.delegate(marker.stroke);\r\n\t\t\t\told = new Color(marker.stroke.color);\r\n\t\t\t\tmarker.stroke.color = new Color(color);\r\n\t\t\t\tmarker.stroke.color.a = old.a;\r\n\t\t\t}else{\r\n\t\t\t\tmarker.stroke = {color: color};\r\n\t\t\t}\r\n\t\t\t// modify the fill\r\n\t\t\tif(!series.fill || series.fill.type){\r\n\t\t\t\tseries.fill = color;\r\n\t\t\t}else{\r\n\t\t\t\told = new Color(series.fill);\r\n\t\t\t\tseries.fill = new Color(color);\r\n\t\t\t\tseries.fill.a = old.a;\r\n\t\t\t}\r\n\t\t\tif(!marker.fill || marker.fill.type){\r\n\t\t\t\tmarker.fill = color;\r\n\t\t\t}else{\r\n\t\t\t\told = new Color(marker.fill);\r\n\t\t\t\tmarker.fill = new Color(color);\r\n\t\t\t\tmarker.fill.a = old.a;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tseries = this.seriesThemes ?\r\n\t\t\t\tmerge(this.series, this.seriesThemes[this._current % this.seriesThemes.length]) :\r\n\t\t\t\tthis.series;\r\n\t\t\tmarker = this.markerThemes ?\r\n\t\t\t\tmerge(this.marker, this.markerThemes[this._current % this.markerThemes.length]) :\r\n\t\t\t\tseries;\r\n\t\t}\r\n\r\n\t\tvar symbol = marker && marker.symbol || this._markers[this._current % this._markers.length];\r\n\r\n\t\tvar theme = {series: series, marker: marker, symbol: symbol};\r\n\t\t\r\n\t\t// advance the counter\r\n\t\t++this._current;\r\n\r\n\t\tif(mixin){\r\n\t\t\ttheme = this.addMixin(theme, elementType, mixin);\r\n\t\t}\r\n\t\tif(doPost){\r\n\t\t\ttheme = this.post(theme, elementType);\r\n\t\t}\r\n\r\n\t\treturn theme;\t//\tObject\r\n\t},\r\n\r\n\tskip: function(){\r\n\t\t// summary:\r\n\t\t//\t\tSkip the next internal color.\r\n\t\t++this._current;\r\n\t},\r\n\r\n\taddMixin: function(theme, elementType, mixin, doPost){\r\n\t\t// summary:\r\n\t\t//\t\tAdd a mixin object to the passed theme and process.\r\n\t\t// theme: dojox/charting/SimpleTheme\r\n\t\t//\t\tThe theme to mixin to.\r\n\t\t// elementType: String\r\n\t\t//\t\tThe type of element in question. Can be \"line\", \"bar\" or \"circle\"\r\n\t\t// mixin: Object|Array\r\n\t\t//\t\tThe object or objects to mix into the theme.\r\n\t\t// doPost: Boolean\r\n\t\t//\t\tIf true, run the new theme through the post-processor.\r\n\t\t// returns: dojox/charting/SimpleTheme\r\n\t\t//\t\tThe new theme.\r\n\t\tif(lang.isArray(mixin)){\r\n\t\t\tarr.forEach(mixin, function(m){\r\n\t\t\t\ttheme = this.addMixin(theme, elementType, m);\r\n\t\t\t}, this);\r\n\t\t}else{\r\n\t\t\tvar t = {};\r\n\t\t\tif(\"color\" in mixin){\r\n\t\t\t\tif(elementType == \"line\" || elementType == \"area\"){\r\n\t\t\t\t\tlang.setObject(\"series.stroke.color\", mixin.color, t);\r\n\t\t\t\t\tlang.setObject(\"marker.stroke.color\", mixin.color, t);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tlang.setObject(\"series.fill\", mixin.color, t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tarr.forEach([\"stroke\", \"outline\", \"shadow\", \"fill\", \"filter\", \"font\", \"fontColor\", \"labelWiring\"], function(name){\r\n\t\t\t\tvar markerName = \"marker\" + name.charAt(0).toUpperCase() + name.substr(1),\r\n\t\t\t\t\tb = markerName in mixin;\r\n\t\t\t\tif(name in mixin){\r\n\t\t\t\t\tlang.setObject(\"series.\" + name, mixin[name], t);\r\n\t\t\t\t\tif(!b){\r\n\t\t\t\t\t\tlang.setObject(\"marker.\" + name, mixin[name], t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(b){\r\n\t\t\t\t\tlang.setObject(\"marker.\" + name, mixin[markerName], t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif(\"marker\" in mixin){\r\n\t\t\t\tt.symbol = mixin.marker;\r\n\t\t\t\tt.symbol = mixin.marker;\r\n\t\t\t}\r\n\t\t\ttheme = dlu.merge(theme, t);\r\n\t\t}\r\n\t\tif(doPost){\r\n\t\t\ttheme = this.post(theme, elementType);\r\n\t\t}\r\n\t\treturn theme;\t//\tdojox/charting/SimpleTheme\r\n\t},\r\n\r\n\tpost: function(theme, elementType){\r\n\t\t// summary:\r\n\t\t//\t\tProcess any post-shape fills.\r\n\t\t// theme: dojox/charting/SimpleTheme\r\n\t\t//\t\tThe theme to post process with.\r\n\t\t// elementType: String\r\n\t\t//\t\tThe type of element being filled.  Can be \"bar\" or \"circle\".\r\n\t\t// returns: dojox/charting/SimpleTheme\r\n\t\t//\t\tThe post-processed theme.\r\n\t\tvar fill = theme.series.fill, t;\r\n\t\tif(!this.noGradConv && this.shapeSpaces[fill.space] && fill.type == \"linear\"){\r\n\t\t\tif(elementType == \"bar\"){\r\n\t\t\t\t// transpose start and end points\r\n\t\t\t\tt = {\r\n\t\t\t\t\tx1: fill.y1,\r\n\t\t\t\t\ty1: fill.x1,\r\n\t\t\t\t\tx2: fill.y2,\r\n\t\t\t\t\ty2: fill.x2\r\n\t\t\t\t};\r\n\t\t\t}else if(!this.noRadialConv && fill.space == \"shape\" && (elementType == \"slice\" || elementType == \"circle\")){\r\n\t\t\t\t// switch to radial\r\n\t\t\t\tt = {\r\n\t\t\t\t\ttype: \"radial\",\r\n\t\t\t\t\tcx: 0,\r\n\t\t\t\t\tcy: 0,\r\n\t\t\t\t\tr:  100\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tif(t){\r\n\t\t\t\treturn dlu.merge(theme, {series: {fill: t}});\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn theme;\t//\tdojox/charting/SimpleTheme\r\n\t},\r\n\r\n\tgetTick: function(name, mixin){\r\n\t\t// summary:\r\n\t\t//\t\tCalculates and merges tick parameters.\r\n\t\t// name: String\r\n\t\t//\t\tTick name, can be \"major\", \"minor\", or \"micro\".\r\n\t\t// mixin: Object?\r\n\t\t//\t\tOptional object to mix in to the tick.\r\n\t\tvar tick = this.axis.tick, tickName = name + \"Tick\",\r\n\t\t\tmerge = dlu.merge;\r\n\t\tif(tick){\r\n\t\t\tif(this.axis[tickName]){\r\n\t\t\t\ttick = merge(tick, this.axis[tickName]);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\ttick = this.axis[tickName];\r\n\t\t}\r\n\t\tif(mixin){\r\n\t\t\tif(tick){\r\n\t\t\t\tif(mixin[tickName]){\r\n\t\t\t\t\ttick = merge(tick, mixin[tickName]);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\ttick = mixin[tickName];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn tick;\t//\tObject\r\n\t},\r\n\r\n\tinspectObjects: function(f){\r\n\t\tarr.forEach([\"chart\", \"plotarea\", \"axis\", \"grid\", \"series\", \"marker\", \"indicator\"], function(name){\r\n\t\t\tf(this[name]);\r\n\t\t}, this);\r\n\t\tif(this.seriesThemes){\r\n\t\t\tarr.forEach(this.seriesThemes, f);\r\n\t\t}\r\n\t\tif(this.markerThemes){\r\n\t\t\tarr.forEach(this.markerThemes, f);\r\n\t\t}\r\n\t},\r\n\r\n\treverseFills: function(){\r\n\t\tthis.inspectObjects(function(o){\r\n\t\t\tif(o && o.fill){\r\n\t\t\t\to.fill = dgg.reverse(o.fill);\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\taddMarker:function(/*String*/ name, /*String*/ segment){\r\n\t\t// summary:\r\n\t\t//\t\tAdd a custom marker to this theme.\r\n\t\t// example:\r\n\t\t//\t|\tmyTheme.addMarker(\"Ellipse\", foo);\r\n\t\tthis.markers[name] = segment;\r\n\t\tthis._buildMarkerArray();\r\n\t},\r\n\r\n\tsetMarkers:function(/*Object*/ obj){\r\n\t\t// summary:\r\n\t\t//\t\tSet all the markers of this theme at once.  obj should be a\r\n\t\t//\t\tdictionary of keys and path segments.\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\tmyTheme.setMarkers({ \"CIRCLE\": foo });\r\n\t\tthis.markers = obj;\r\n\t\tthis._buildMarkerArray();\r\n\t},\r\n\r\n\t_buildMarkerArray: function(){\r\n\t\tthis._markers = [];\r\n\t\tfor(var p in this.markers){\r\n\t\t\tthis._markers.push(this.markers[p]);\r\n\t\t}\r\n\t}\r\n});\r\n\r\nlang.mixin(SimpleTheme, {\r\n\tdefaultMarkers: {\r\n\t\tCIRCLE:   \"m-3,0 c0,-4 6,-4 6,0 m-6,0 c0,4 6,4 6,0\",\r\n\t\tSQUARE:   \"m-3,-3 l0,6 6,0 0,-6 z\",\r\n\t\tDIAMOND:  \"m0,-3 l3,3 -3,3 -3,-3 z\",\r\n\t\tCROSS:    \"m0,-3 l0,6 m-3,-3 l6,0\",\r\n\t\tX:        \"m-3,-3 l6,6 m0,-6 l-6,6\",\r\n\t\tTRIANGLE: \"m-3,3 l3,-6 3,6 z\",\r\n\t\tTRIANGLE_INVERTED: \"m-3,-3 l3,6 3,-6 z\"\r\n\t},\r\n\r\n\tdefaultColors:[\r\n\t\t// gray skies\r\n\t\t\"#54544c\", \"#858e94\", \"#6e767a\", \"#948585\", \"#474747\"\r\n\t],\r\n\r\n\tdefaultTheme: {\r\n\t\t// all objects are structs used directly in dojox.gfx\r\n\t\tchart:{\r\n\t\t\tstroke: null,\r\n\t\t\tfill: \"white\",\r\n\t\t\tpageStyle: null,\r\n\t\t\ttitleGap:\t\t20,\r\n\t\t\ttitlePos:\t\t\"top\",\r\n\t\t\ttitleFont:      \"normal normal bold 14pt Tahoma\",\t// chart title\r\n\t\t\ttitleFontColor: \"#333\"\r\n\t\t},\r\n\t\tplotarea:{\r\n\t\t\tstroke: null,\r\n\t\t\tfill: \"white\"\r\n\t\t},\r\n\t\t// TODO: label rotation on axis\r\n\t\taxis:{\r\n\t\t\tstroke:\t{ // the axis itself\r\n\t\t\t\tcolor: \"#333\",\r\n\t\t\t\twidth: 1\r\n\t\t\t},\r\n\t\t\ttick: {\t// used as a foundation for all ticks\r\n\t\t\t\tcolor:     \"#666\",\r\n\t\t\t\tposition:  \"center\",\r\n\t\t\t\tfont:      \"normal normal normal 7pt Tahoma\",\t// labels on axis\r\n\t\t\t\tfontColor: \"#333\",\t\t\t\t\t\t\t\t// color of labels\r\n\t\t\t\tlabelGap:  4                                    // gap between a tick and its label in pixels\r\n\t\t\t},\r\n\t\t\tmajorTick:\t{ // major ticks on axis, and used for major gridlines\r\n\t\t\t\twidth:  1,\r\n\t\t\t\tlength: 6\r\n\t\t\t},\r\n\t\t\tminorTick:\t{ // minor ticks on axis, and used for minor gridlines\r\n\t\t\t\twidth:  0.8,\r\n\t\t\t\tlength: 3\r\n\t\t\t},\r\n\t\t\tmicroTick:\t{ // minor ticks on axis, and used for minor gridlines\r\n\t\t\t\twidth:  0.5,\r\n\t\t\t\tlength: 1\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\tgap:  15,\r\n\t\t\t\tfont: \"normal normal normal 11pt Tahoma\",\t// title font\r\n\t\t\t\tfontColor: \"#333\",\t\t\t\t\t\t\t// title font color\r\n\t\t\t\torientation: \"axis\"\t\t\t\t\t\t// \"axis\": facing the axis, \"away\": facing away\r\n\t\t\t}\r\n\t\t},\r\n\t\tseries: {\r\n\t\t\t// used as a \"main\" theme for series, sThemes augment it\r\n\t\t\tstroke:  {width: 1.5, color: \"#333\"},\t\t// line\r\n\t\t\toutline: {width: 0.1, color: \"#ccc\"},\t\t// outline\r\n\t\t\t//shadow:  {dx: 1, dy: 1, width: 2, color: [0, 0, 0, 0.3]},\r\n\t\t\tshadow: null,\t\t\t\t\t\t\t\t// no shadow\r\n\t\t\tfill:    \"#ccc\",\t\t\t\t\t\t\t// fill, if appropriate\r\n\t\t\tfont:    \"normal normal normal 8pt Tahoma\",\t// if there's a label\r\n\t\t\tfontColor: \"#000\",\t\t\t\t\t\t\t// color of labels\r\n\t\t\tlabelWiring: {width: 1, color: \"#ccc\"}\t\t// connect marker and target data item(slice, column, bar...)\r\n\t\t},\r\n\t\tmarker: {\t// any markers on a series\r\n\t\t\tstroke:  {width: 1.5, color: \"#333\"},\t\t// stroke\r\n\t\t\toutline: {width: 0.1, color: \"#ccc\"},\t\t// outline\r\n\t\t\t//shadow:  {dx: 1, dy: 1, width: 2, color: [0, 0, 0, 0.3]},\r\n\t\t\tshadow: null,\t\t\t\t\t\t\t\t// no shadow\r\n\t\t\tfill:    \"#ccc\",\t\t\t\t\t\t\t// fill if needed\r\n\t\t\tfont:    \"normal normal normal 8pt Tahoma\",\t// label\r\n\t\t\tfontColor: \"#000\"\r\n\t\t},\r\n\t\tindicator: {\r\n\t\t\tlineStroke:  {width: 1.5, color: \"#333\"},\t\t\r\n\t\t\tlineOutline: {width: 0.1, color: \"#ccc\"},\t\t\r\n\t\t\tlineShadow: null,\r\n\t\t\tlineFill: null,\r\n\t\t\tstroke:  {width: 1.5, color: \"#333\"},\t\t\r\n\t\t\toutline: {width: 0.1, color: \"#ccc\"},\t\t\r\n\t\t\tshadow: null,\t\t\t\t\t\t\t\t\r\n\t\t\tfill : \"#ccc\",\r\n\t\t\tradius: 3,\r\n\t\t\tfont:    \"normal normal normal 10pt Tahoma\",\t\r\n\t\t\tfontColor: \"#000\",\t\t\t\t\t\t\t\r\n\t\t\tmarkerFill:    \"#ccc\",\t\t\t\t\t\t\t\r\n\t\t\tmarkerSymbol:  \"m-3,0 c0,-4 6,-4 6,0 m-6,0 c0,4 6,4 6,0\",\t\t\t\r\n\t\t\tmarkerStroke:  {width: 1.5, color: \"#333\"},\t\t\r\n\t\t\tmarkerOutline: {width: 0.1, color: \"#ccc\"},\t\t\r\n\t\t\tmarkerShadow: null\t\t\t\t\t\t\t\t\r\n\t\t}\r\n\t}\r\n});\r\n\r\nreturn SimpleTheme;\r\n});\r\n"]}