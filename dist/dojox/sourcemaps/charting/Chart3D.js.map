{"version":3,"sources":["charting/Chart3D.js"],"names":["define","arr","dom","declare","gfx","gfx3d","has","BidiChart3D","observerVector","x","y","z","v","vector","n","normalizedLength","Chart3D","constructor","node","lights","camera","theme","this","byId","surface","createSurface","style","width","height","view","createViewport","setLights","ambient","specular","setCameraTransform","walls","plots","generate","_generateWalls","_generatePlots","invalidate","render","addPlot","plot","_add","removePlot","_remove","addWall","wall","removeWall","array","item","some","i","push","a","filter","length","dotProduct","normal","depth","m","matrix","getDepth","scene","createScene","setTransform","translate","setDir","dir"],"mappings":";;;;;;;AAAAA,QAAQ,mBAAoB,WAAW,qBAAsB,YAAa,cAClE,WAAY,qCACnB,SAASC,EAAKC,EAAKC,EAASC,EAAKC,EAAOC,EAAKC,GAqB7C,IAAIC,GAAkBC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAAIC,EAAIP,EAAMQ,OAAQC,EAAIV,EAAIW,iBAE/DC,EAAUb,EAAQG,EAAI,aAAc,gCAAkC,yBAA0B,MACnGW,YAAa,SAASC,EAAMC,EAAQC,EAAQC,GAE3CC,KAAKJ,KAAOhB,EAAIqB,KAAKL,GACrBI,KAAKE,QAAUpB,EAAIqB,cAAcH,KAAKJ,KAAMJ,EAAEQ,KAAKJ,KAAKQ,MAAMC,OAAQb,EAAEQ,KAAKJ,KAAKQ,MAAME,SACxFN,KAAKO,KAAOP,KAAKE,QAAQM,iBACzBR,KAAKO,KAAKE,UAAUZ,EAAOA,OAAQA,EAAOa,QAASb,EAAOc,UAC1DX,KAAKO,KAAKK,mBAAmBd,GAC7BE,KAAKD,MAAQA,EAGbC,KAAKa,SACLb,KAAKc,UAINC,SAAU,WACT,OAAOf,KAAKgB,iBAAiBC,kBAE9BC,WAAY,WAEX,OADAlB,KAAKO,KAAKW,aACHlB,MAERmB,OAAQ,WAEP,OADAnB,KAAKO,KAAKY,SACHnB,MAERoB,QAAS,SAASC,GACjB,OAAOrB,KAAKsB,KAAKtB,KAAKc,MAAOO,IAE9BE,WAAY,SAASF,GACpB,OAAOrB,KAAKwB,QAAQxB,KAAKc,MAAOO,IAEjCI,QAAS,SAASC,GACjB,OAAO1B,KAAKsB,KAAKtB,KAAKa,MAAOa,IAE9BC,WAAY,SAASD,GACpB,OAAO1B,KAAKwB,QAAQxB,KAAKa,MAAOa,IAIjCJ,KAAM,SAASM,EAAOC,GAKrB,OAJIlD,EAAImD,KAAKF,EAAO,SAASG,GAAI,OAAOA,GAAKF,MAC5CD,EAAMI,KAAKH,GACX7B,KAAKO,KAAKW,cAEJlB,MAERwB,QAAS,SAASI,EAAOC,GACxB,IAAII,EAAItD,EAAIuD,OAAON,EAAO,SAASG,GAAI,OAAOA,GAAKF,IACnD,OAAOI,EAAEE,OAASP,EAAMO,QAAUP,EAAQK,EAAGjC,KAAKkB,cAAgBlB,MAEnEgB,eAAgB,WACf,IAAI,IAAIe,EAAI,EAAGA,EAAI/B,KAAKa,MAAMsB,SAAUJ,EACpCzC,EAAE8C,WAAWlD,EAAgBc,KAAKa,MAAMkB,GAAGM,QAAU,GACvDrC,KAAKa,MAAMkB,GAAGhB,SAASf,MAGzB,OAAOA,MAERiB,eAAgB,WAEf,IADA,IAAIqB,EAAQ,EAAGC,EAAIxD,EAAMyD,OAAQT,EAAI,EAC/BA,EAAI/B,KAAKc,MAAMqB,SAAUJ,EAC9BO,GAAStC,KAAKc,MAAMiB,GAAGU,WAExB,MAAMV,EAAGA,GAAK,IAAKA,EAAE,CACpB,IAAIW,EAAQ1C,KAAKO,KAAKoC,cACtBD,EAAME,aAAaL,EAAEM,UAAU,EAAG,GAAIP,IACtCtC,KAAKc,MAAMiB,GAAGhB,SAASf,KAAM0C,GAC7BJ,GAAStC,KAAKc,MAAMiB,GAAGU,WAExB,OAAOzC,MAER8C,OAAQ,SAAmBC,GAC1B,OAAO/C,QAGT,OAAOhB,EAAI,aAAcH,EAAQ,0BAA2Ba,EAAST,IAAgBS","file":"../../charting/Chart3D.js","sourcesContent":["define([\"dojo/_base/array\", \"dojo/dom\",\"dojo/_base/declare\", \"dojox/gfx\", \"dojox/gfx3d\",\r\n        \"dojo/has\", \"dojo/has!dojo-bidi?./bidi/Chart3D\"],\r\n\tfunction(arr, dom, declare, gfx, gfx3d, has, BidiChart3D){\r\n\t// module:\r\n\t//\t\tdojox/charting/Chart3D\r\n\t// summary:\r\n\t//\t\tThis module provides basic 3d charting capablities (using 2d vector graphics to simulate 3d.\r\n\r\n\t/*=====\r\n\tvar __Chart3DCtorArgs = function(node, lights, camera, theme){\r\n\t\t// summary:\r\n\t\t//\t\tThe keyword arguments that can be passed in a Chart constructor.\r\n\t\t//\r\n\t\t// node: Node\r\n\t\t//\t\tThe DOM node to construct the chart on.\r\n\t\t// lights:\r\n\t\t//\t\tLighting properties for the 3d scene\r\n\t\t// camera: Object\r\n\t\t//\t\tCamera properties describing the viewing camera position.\r\n\t\t// theme: Object\r\n\t\t//\t\tCharting theme to use for coloring chart elements.\r\n\t};\r\n\t=====*/\r\n\tvar observerVector = {x: 0, y: 0, z: 1}, v = gfx3d.vector, n = gfx.normalizedLength;\r\n\r\n\tvar Chart3D = declare(has(\"dojo-bidi\")? \"dojox.charting.NonBidiChart3D\" : \"dojox.charting.Chart3D\", null, {\r\n\t\tconstructor: function(node, lights, camera, theme){\r\n\t\t\t// setup a view\r\n\t\t\tthis.node = dom.byId(node);\r\n\t\t\tthis.surface = gfx.createSurface(this.node, n(this.node.style.width), n(this.node.style.height));\r\n\t\t\tthis.view = this.surface.createViewport();\r\n\t\t\tthis.view.setLights(lights.lights, lights.ambient, lights.specular);\r\n\t\t\tthis.view.setCameraTransform(camera);\r\n\t\t\tthis.theme = theme;\r\n\t\t\t\r\n\t\t\t// initialize internal variables\r\n\t\t\tthis.walls = [];\r\n\t\t\tthis.plots = [];\r\n\t\t},\r\n\t\t\r\n\t\t// public API\r\n\t\tgenerate: function(){\r\n\t\t\treturn this._generateWalls()._generatePlots();\r\n\t\t},\r\n\t\tinvalidate: function(){\r\n\t\t\tthis.view.invalidate();\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\trender: function(){\r\n\t\t\tthis.view.render();\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\taddPlot: function(plot){\r\n\t\t\treturn this._add(this.plots, plot);\r\n\t\t},\r\n\t\tremovePlot: function(plot){\r\n\t\t\treturn this._remove(this.plots, plot);\r\n\t\t},\r\n\t\taddWall: function(wall){\r\n\t\t\treturn this._add(this.walls, wall);\r\n\t\t},\r\n\t\tremoveWall: function(wall){\r\n\t\t\treturn this._remove(this.walls, wall);\r\n\t\t},\r\n\t\t\r\n\t\t// internal API\r\n\t\t_add: function(array, item){\r\n\t\t\tif(!arr.some(array, function(i){ return i == item; })){\r\n\t\t\t\tarray.push(item);\r\n\t\t\t\tthis.view.invalidate();\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t_remove: function(array, item){\r\n\t\t\tvar a = arr.filter(array, function(i){ return i != item; });\r\n\t\t\treturn a.length < array.length ? (array = a, this.invalidate()) : this;\r\n\t\t},\r\n\t\t_generateWalls: function(){\r\n\t\t\tfor(var i = 0; i < this.walls.length; ++i){\r\n\t\t\t\tif(v.dotProduct(observerVector, this.walls[i].normal) > 0){\r\n\t\t\t\t\tthis.walls[i].generate(this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t_generatePlots: function(){\r\n\t\t\tvar depth = 0, m = gfx3d.matrix, i = 0;\r\n\t\t\tfor(; i < this.plots.length; ++i){\r\n\t\t\t\tdepth += this.plots[i].getDepth();\r\n\t\t\t}\r\n\t\t\tfor(--i; i >= 0; --i){\r\n\t\t\t\tvar scene = this.view.createScene();\r\n\t\t\t\tscene.setTransform(m.translate(0, 0, -depth));\r\n\t\t\t\tthis.plots[i].generate(this, scene);\r\n\t\t\t\tdepth -= this.plots[i].getDepth();\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tsetDir: function(/*String*/dir){\r\n\t\t\treturn this;\r\n\t\t}\r\n\t});\r\n\treturn has(\"dojo-bidi\")? declare(\"dojox.charting.Chart3D\", [Chart3D, BidiChart3D]) : Chart3D;\r\n});\r\n"]}