{"version":3,"sources":["charting/action2d/Tooltip.js"],"names":["define","DijitTooltip","lang","declare","win","hub","domStyle","PlotAction","m","has","BidiTooltip","df","DEFAULT_TEXT","o","plot","t","run","data","index","tooltip","text","tooltipFunc","y","pi4","Math","PI","pi2","Tooltip","defaultParams","mouseOver","optionalParams","constructor","chart","kwArgs","this","undefined","connect","process","type","hide","aroundRect","angles","shape","position","element","x","cx","cy","w","h","cr","clone","getShape","width","height","filteredRun","map","scanl","foldl","startAngle","_degToRad","opt","angle","cos","sin","abs","_recheckPosition","lt","getCoords","round","ceil","tooltipText","show","_format","_handle","doc","onClick","obj","rect"],"mappings":";;;;;;;AAAAA,QAAQ,gBAAiB,kBAAmB,qBAAsB,oBAAqB,qBAAsB,iBAC5G,eAAgB,mBAAoB,WAAY,8CAChD,wBAAyB,6BAA8B,8BACvD,SAASC,EAAcC,EAAMC,EAASC,EAAKC,EAAKC,EAAUC,EAAYC,EAAGC,EAAKC,EAAaC,GAmB3F,IAAIC,EAAe,SAASC,EAAGC,GAC9B,IAAIC,EAAIF,EAAEG,KAAOH,EAAEG,IAAIC,MAAQJ,EAAEG,IAAIC,KAAKJ,EAAEK,OAC5C,OAAGH,GAAiB,iBAALA,IAAkBA,EAAEI,SAAWJ,EAAEK,MACxCL,EAAEI,SAAWJ,EAAEK,KAEpBN,EAAKO,YACAP,EAAKO,YAAYR,GAEjBA,EAAES,GAIPC,EAAMC,KAAKC,GAAK,EAAGC,EAAMF,KAAKC,GAAK,EAEnCE,EAAUxB,EAAQM,EAAI,aAAc,yCAA2C,kCAAmCF,GAKrHqB,eACCR,KAAMR,EACGiB,WAAW,GAErBC,kBAEAC,YAAa,SAASC,EAAOlB,EAAMmB,GASlCC,KAAKd,KAAOa,GAAUA,EAAOb,KAAOa,EAAOb,KAAOR,EAClDsB,KAAKL,WAAYI,QAA8BE,GAApBF,EAAOJ,WAAyBI,EAAOJ,UAClEK,KAAKE,WAGNC,QAAS,SAASxB,GAKjB,GAAc,gBAAXA,EAAEyB,MAAqC,eAAXzB,EAAEyB,KAMhC,OALYrC,EAAasC,KAAKL,KAAKM,YACnCN,KAAKM,WAAa,UACJ,gBAAX3B,EAAEyB,aACGJ,KAAKO,QAKd,MAAI5B,EAAE6B,OAAUR,KAAKL,WAAwB,gBAAXhB,EAAEyB,OAA6BJ,KAAKL,WAAwB,YAAXhB,EAAEyB,MAArF,CAGA,IAAIE,GAAcF,KAAM,QAASK,GAAY,iBAAkB,mBAC/D,OAAO9B,EAAE+B,SACR,IAAK,SACJJ,EAAWK,EAAIhC,EAAEiC,GACjBN,EAAWlB,EAAIT,EAAEkC,GACjBP,EAAWQ,EAAIR,EAAWS,EAAI,EAC9B,MACD,IAAK,SACJT,EAAWK,EAAIhC,EAAEiC,GAAKjC,EAAEqC,GACxBV,EAAWlB,EAAIT,EAAEkC,GAAKlC,EAAEqC,GACxBV,EAAWQ,EAAIR,EAAWS,EAAI,EAAIpC,EAAEqC,GACpC,MACD,IAAK,gBACJV,EAAWK,EAAIhC,EAAEiC,GACjBN,EAAWlB,EAAIT,EAAEkC,GACjBP,EAAWQ,EAAIR,EAAWS,EAAI,EAC9B,MACD,IAAK,cACJ,OACD,IAAK,SACJN,GAAY,iBAAkB,kBAE/B,IAAK,OACJH,EAAatC,EAAKiD,MAAMtC,EAAE6B,MAAMU,aACrBJ,EAAIR,EAAWa,MAC1Bb,EAAWS,EAAIT,EAAWc,OAC1B,MACD,IAAK,cACJd,EAAWK,EAAIhC,EAAEgC,EACjBL,EAAWlB,EAAIT,EAAES,EACjBkB,EAAWQ,EAAInC,EAAEwC,MACjBb,EAAWS,EAAIpC,EAAEyC,OACjB,MACD,QAEC,IAAIpB,KAAKO,OAAO,CAEf,IAAIc,EAAsC,iBAAjB1C,EAAEG,IAAIC,KAAK,GAClCN,EAAG6C,IAAI3C,EAAEG,IAAIC,KAAM,0BAA4BN,EAAG6C,IAAI3C,EAAEG,IAAIC,KAAM,4BACpEiB,KAAKO,OAAS9B,EAAG6C,IAAI7C,EAAG8C,MAAMF,EAAa,IAAK,GAC/C,uBAAwB5C,EAAG+C,MAAMH,EAAa,IAAK,IAErD,IAAII,EAAanD,EAAEoD,UAAU/C,EAAEC,KAAK+C,IAAIF,YACvCG,GAAS5B,KAAKO,OAAO5B,EAAEK,OAASgB,KAAKO,OAAO5B,EAAEK,MAAQ,IAAM,EAAIyC,EACjEnB,EAAWK,EAAIhC,EAAEiC,GAAKjC,EAAEqC,GAAK1B,KAAKuC,IAAID,GACtCtB,EAAWlB,EAAIT,EAAEkC,GAAKlC,EAAEqC,GAAK1B,KAAKwC,IAAIF,GACtCtB,EAAWQ,EAAIR,EAAWS,EAAI,EAEZU,IAAeG,EAAQ,GAAKA,EAAQ,EAAItC,KAAKC,MAC9DqC,EAAQtC,KAAKyC,IAAI,EAAIzC,KAAKC,GAAMD,KAAKyC,IAAIH,KAGvCA,EAAQvC,IAEFuC,EAAQpC,EAAMH,EACtBoB,GAAY,iBAAkB,kBACtBmB,EAAQtC,KAAKC,GAAKF,EAC1BoB,GAAY,kBAAmB,kBACvBmB,EAAQ,EAAItC,KAAKC,GAAKF,IAC9BoB,GAAY,iBAAkB,oBAS9BlC,EAAI,cACNyB,KAAKgC,iBAAiBrD,EAAE2B,EAAWG,GAGpC,IAAIwB,EAAKjC,KAAKF,MAAMoC,YACpB5B,EAAWK,GAAKsB,EAAGtB,EACnBL,EAAWlB,GAAK6C,EAAG7C,EACnBkB,EAAWK,EAAIrB,KAAK6C,MAAM7B,EAAWK,GACrCL,EAAWlB,EAAIE,KAAK6C,MAAM7B,EAAWlB,GACrCkB,EAAWQ,EAAIxB,KAAK8C,KAAK9B,EAAWQ,GACpCR,EAAWS,EAAIzB,KAAK8C,KAAK9B,EAAWS,GACpCf,KAAKM,WAAaA,EAElB,IAAI+B,EAAcrC,KAAKd,KAAKP,EAAGqB,KAAKpB,MACjCyD,GACFtE,EAAauE,KAAKtC,KAAKuC,QAAQF,GAAcrC,KAAKM,WAAYG,GAE3DT,KAAKL,YACRK,KAAKwC,QAAUrE,EAAI+B,QAAQhC,EAAIuE,IAAK,UAAWzC,KAAM,cAGvD0C,QAAS,WACR1C,KAAKG,SAAUC,KAAM,gBAEtB4B,iBAAkB,SAASW,EAAIC,EAAKnC,KAEpC8B,QAAS,SAASF,GACjB,OAAOA,KAGT,OAAO9D,EAAI,aAAcN,EAAQ,mCAAoCwB,EAASjB,IAAgBiB","file":"../../../charting/action2d/Tooltip.js","sourcesContent":["define([\"dijit/Tooltip\", \"dojo/_base/lang\", \"dojo/_base/declare\", \"dojo/_base/window\", \"dojo/_base/connect\", \"dojo/dom-style\",\r\n\t\"./PlotAction\", \"dojox/gfx/matrix\", \"dojo/has\", \"dojo/has!dojo-bidi?../bidi/action2d/Tooltip\", \r\n\t\"dojox/lang/functional\", \"dojox/lang/functional/scan\", \"dojox/lang/functional/fold\"],\r\n\tfunction(DijitTooltip, lang, declare, win, hub, domStyle, PlotAction, m, has, BidiTooltip, df){\r\n\t\r\n\t/*=====\r\n\tvar __TooltipCtorArgs = {\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdditional arguments for tooltip actions.\r\n\t\t\t// duration: Number?\r\n\t\t\t//\t\tThe amount of time in milliseconds for an animation to last.  Default is 400.\r\n\t\t\t// easing: dojo/fx/easing/*?\r\n\t\t\t//\t\tAn easing object (see dojo.fx.easing) for use in an animation.  The\r\n\t\t\t//\t\tdefault is dojo.fx.easing.backOut.\r\n\t\t\t// text: Function?\r\n\t\t\t//\t\tThe function that produces the text to be shown within a tooltip.  By default this will be\r\n\t\t\t//\t\tset by the plot in question, by returning the value of the element.\r\n\t\t\t// mouseOver: Boolean?\r\n            //\t\tWhether the tooltip is enabled on mouse over or on mouse click / touch down. Default is true.\r\n\t};\r\n\t=====*/\r\n\r\n\tvar DEFAULT_TEXT = function(o, plot){\r\n\t\tvar t = o.run && o.run.data && o.run.data[o.index];\r\n\t\tif(t && typeof t != \"number\" && (t.tooltip || t.text)){\r\n\t\t\treturn t.tooltip || t.text;\r\n\t\t}\r\n\t\tif(plot.tooltipFunc){\r\n\t\t\treturn plot.tooltipFunc(o);\r\n\t\t}else{\r\n\t\t\treturn o.y;\r\n\t\t}\r\n\t};\r\n\r\n\tvar pi4 = Math.PI / 4, pi2 = Math.PI / 2;\r\n\t\r\n\tvar Tooltip = declare(has(\"dojo-bidi\")? \"dojox.charting.action2d.NonBidiTooltip\" : \"dojox.charting.action2d.Tooltip\", PlotAction, {\r\n\t\t// summary:\r\n\t\t//\t\tCreate an action on a plot where a tooltip is shown when hovering over an element.\r\n\r\n\t\t// the data description block for the widget parser\r\n\t\tdefaultParams: {\r\n\t\t\ttext: DEFAULT_TEXT,\t// the function to produce a tooltip from the object\r\n            mouseOver: true\r\n\t\t},\r\n\t\toptionalParams: {},\t// no optional parameters\r\n\r\n\t\tconstructor: function(chart, plot, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate the tooltip action and connect it to the plot.\r\n\t\t\t// chart: dojox/charting/Chart\r\n\t\t\t//\t\tThe chart this action belongs to.\r\n\t\t\t// plot: String?\r\n\t\t\t//\t\tThe plot this action is attached to.  If not passed, \"default\" is assumed.\r\n\t\t\t// kwArgs: __TooltipCtorArgs?\r\n\t\t\t//\t\tOptional keyword arguments object for setting parameters.\r\n\t\t\tthis.text = kwArgs && kwArgs.text ? kwArgs.text : DEFAULT_TEXT;\r\n\t\t\tthis.mouseOver = kwArgs && kwArgs.mouseOver != undefined ? kwArgs.mouseOver : true;\r\n\t\t\tthis.connect();\r\n\t\t},\r\n\t\t\r\n\t\tprocess: function(o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tProcess the action on the given object.\r\n\t\t\t// o: dojox/gfx/shape.Shape\r\n\t\t\t//\t\tThe object on which to process the highlighting action.\r\n\t\t\tif(o.type === \"onplotreset\" || o.type === \"onmouseout\"){\r\n                DijitTooltip.hide(this.aroundRect);\r\n\t\t\t\tthis.aroundRect = null;\r\n\t\t\t\tif(o.type === \"onplotreset\"){\r\n\t\t\t\t\tdelete this.angles;\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(!o.shape || (this.mouseOver && o.type !== \"onmouseover\") || (!this.mouseOver && o.type !== \"onclick\")){ return; }\r\n\t\t\t\r\n\t\t\t// calculate relative coordinates and the position\r\n\t\t\tvar aroundRect = {type: \"rect\"}, position = [\"after-centered\", \"before-centered\"];\r\n\t\t\tswitch(o.element){\r\n\t\t\t\tcase \"marker\":\r\n\t\t\t\t\taroundRect.x = o.cx;\r\n\t\t\t\t\taroundRect.y = o.cy;\r\n\t\t\t\t\taroundRect.w = aroundRect.h = 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"circle\":\r\n\t\t\t\t\taroundRect.x = o.cx - o.cr;\r\n\t\t\t\t\taroundRect.y = o.cy - o.cr;\r\n\t\t\t\t\taroundRect.w = aroundRect.h = 2 * o.cr;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"spider_circle\":\r\n\t\t\t\t\taroundRect.x = o.cx;\r\n\t\t\t\t\taroundRect.y = o.cy ;\r\n\t\t\t\t\taroundRect.w = aroundRect.h = 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"spider_plot\":\r\n\t\t\t\t\treturn;\r\n\t\t\t\tcase \"column\":\r\n\t\t\t\t\tposition = [\"above-centered\", \"below-centered\"];\r\n\t\t\t\t\t// intentional fall down\r\n\t\t\t\tcase \"bar\":\r\n\t\t\t\t\taroundRect = lang.clone(o.shape.getShape());\r\n\t\t\t\t\taroundRect.w = aroundRect.width;\r\n\t\t\t\t\taroundRect.h = aroundRect.height;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"candlestick\":\r\n\t\t\t\t\taroundRect.x = o.x;\r\n\t\t\t\t\taroundRect.y = o.y;\r\n\t\t\t\t\taroundRect.w = o.width;\r\n\t\t\t\t\taroundRect.h = o.height;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t//case \"slice\":\r\n\t\t\t\t\tif(!this.angles){\r\n\t\t\t\t\t\t// calculate the running total of slice angles\r\n\t\t\t\t\t\tvar filteredRun = typeof o.run.data[0] == \"number\" ?\r\n\t\t\t\t\t\t\t\tdf.map(o.run.data, \"x ? Math.max(x, 0) : 0\") : df.map(o.run.data, \"x ? Math.max(x.y, 0) : 0\");\r\n\t\t\t\t\t\tthis.angles = df.map(df.scanl(filteredRun, \"+\", 0),\r\n\t\t\t\t\t\t\t\"* 2 * Math.PI / this\", df.foldl(filteredRun, \"+\", 0));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar startAngle = m._degToRad(o.plot.opt.startAngle),\r\n\t\t\t\t\t\tangle = (this.angles[o.index] + this.angles[o.index + 1]) / 2 + startAngle;\r\n\t\t\t\t\taroundRect.x = o.cx + o.cr * Math.cos(angle);\r\n\t\t\t\t\taroundRect.y = o.cy + o.cr * Math.sin(angle);\r\n\t\t\t\t\taroundRect.w = aroundRect.h = 1;\r\n                    // depending on startAngle we might go out of the 0-2*PI range, normalize that\r\n                    if(startAngle && (angle < 0 || angle > 2 * Math.PI)){\r\n\t\t\t\t\t\tangle = Math.abs(2 * Math.PI  - Math.abs(angle));\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// calculate the position\r\n\t\t\t\t\tif(angle < pi4){\r\n\t\t\t\t\t\t// do nothing: the position is right\r\n\t\t\t\t\t}else if(angle < pi2 + pi4){\r\n\t\t\t\t\t\tposition = [\"below-centered\", \"above-centered\"];\r\n\t\t\t\t\t}else if(angle < Math.PI + pi4){\r\n\t\t\t\t\t\tposition = [\"before-centered\", \"after-centered\"];\r\n\t\t\t\t\t}else if(angle < 2 * Math.PI - pi4){\r\n\t\t\t\t\t\tposition = [\"above-centered\", \"below-centered\"];\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/*\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\t// do nothing: the position is right\r\n\t\t\t\t\t}\r\n\t\t\t\t\t*/\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(has(\"dojo-bidi\")){\r\n\t\t\t\tthis._recheckPosition(o,aroundRect,position);\r\n\t\t\t}\r\n\t\t\t// adjust relative coordinates to absolute, and remove fractions\r\n\t\t\tvar lt = this.chart.getCoords();\r\n\t\t\taroundRect.x += lt.x;\r\n\t\t\taroundRect.y += lt.y;\r\n\t\t\taroundRect.x = Math.round(aroundRect.x);\r\n\t\t\taroundRect.y = Math.round(aroundRect.y);\r\n\t\t\taroundRect.w = Math.ceil(aroundRect.w);\r\n\t\t\taroundRect.h = Math.ceil(aroundRect.h);\r\n\t\t\tthis.aroundRect = aroundRect;\r\n\r\n\t\t\tvar tooltipText = this.text(o, this.plot);\r\n\t\t\tif(tooltipText){\r\n\t\t\t\tDijitTooltip.show(this._format(tooltipText), this.aroundRect, position);\r\n\t\t\t}\r\n\t\t\tif(!this.mouseOver){\r\n\t\t\t\tthis._handle = hub.connect(win.doc, \"onclick\", this, \"onClick\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tonClick: function(){\r\n\t\t\tthis.process({ type: \"onmouseout\"});\r\n\t\t},\r\n\t\t_recheckPosition: function(obj,rect,position){\t\t\t\r\n\t\t},\r\n\t\t_format: function(tooltipText){\r\n\t\t\treturn tooltipText;\r\n\t\t}\r\n\t});\r\n\treturn has(\"dojo-bidi\")? declare(\"dojox.charting.action2d.Tooltip\", [Tooltip, BidiTooltip]) : Tooltip;\r\n});\r\n"]}