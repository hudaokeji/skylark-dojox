{"version":3,"sources":["charting/action2d/MouseZoomAndPan.js"],"names":["define","declare","win","arr","eventUtil","connect","mouse","ChartAction","has","domProp","keys","BidiMouseZoomAndPan","sUnit","keyTests","none","event","ctrlKey","altKey","shiftKey","ctrl","alt","shift","MouseZoomAndPan","defaultParams","axis","scaleFactor","maxScale","enableScroll","enableDoubleClickZoom","enableKeyZoom","keyZoomModifier","optionalParams","constructor","chart","plot","kwArgs","this","_listeners","eventName","wheel","methodName","undefined","push","_handles","_disconnectHandles","node","releaseCapture","forEach","disconnect","inherited","arguments","set","onMouseDown","getAxis","vertical","_startCoord","pageY","pageX","_startOffset","getWindowOffset","_isPanning","setCapture","doc","focus","stop","onMouseMove","delta","_getDelta","bounds","getScaler","s","span","upper","lower","scale","getWindowScale","setAxisWindow","render","onMouseUp","onMouseWheel","scroll","wheelDelta","_onZoom","onKeyPress","keyChar","keyCode","NUMPAD_PLUS","NUMPAD_MINUS","onDoubleClick","scaler","start","from","end","to","oldMiddle","newMiddle","toData","x","y","newStart","newEnd","zoomIn","Math","abs","middle","type"],"mappings":"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","file":"../../../charting/action2d/MouseZoomAndPan.js","sourcesContent":["define([\"dojo/_base/declare\", \"dojo/_base/window\", \"dojo/_base/array\", \"dojo/_base/event\",\r\n\t\"dojo/_base/connect\", \"dojo/mouse\", \"./ChartAction\", \"dojo/sniff\", \"dojo/dom-prop\", \"dojo/keys\",\r\n\t\"dojo/has!dojo-bidi?../bidi/action2d/ZoomAndPan\"],\r\n\tfunction(declare, win, arr, eventUtil, connect, mouse, ChartAction, has, domProp, keys, BidiMouseZoomAndPan){\r\n\r\n\t/*=====\r\n\tvar __MouseZoomAndPanCtorArgs = {\r\n\t\t// summary:\r\n\t\t//\t\tAdditional arguments for mouse zoom and pan actions.\r\n\t\t// axis: String?\r\n\t\t//\t\tTarget axis name for this action.  Default is \"x\".\r\n\t\t// scaleFactor: Number?\r\n\t\t//\t\tThe scale factor applied on mouse wheel zoom.  Default is 1.2.\r\n\t\t// maxScale: Number?\r\n\t\t//\t\tThe max scale factor accepted by this chart action.  Default is 100.\r\n\t\t// enableScroll: Boolean?\r\n\t\t//\t\tWhether mouse drag gesture should scroll the chart.  Default is true.\r\n\t\t// enableDoubleClickZoom: Boolean?\r\n\t\t//\t\tWhether a double click gesture should toggle between fit and zoom on the chart.  Default is true.\r\n\t\t// enableKeyZoom: Boolean?\r\n\t\t//\t\tWhether a keyZoomModifier + + or keyZoomModifier + - key press should zoom in our out on the chart.  Default is true.\r\n\t\t// keyZoomModifier: String?\r\n\t\t//\t\tWhich keyboard modifier should used for keyboard zoom in and out. This should be one of \"alt\", \"ctrl\", \"shift\" or \"none\" for no modifier. Default is \"ctrl\".\r\n\t};\r\n\t=====*/\r\n\r\n\tvar sUnit = has(\"mozilla\") ? 3 : 120;\r\n\tvar keyTests = {\r\n\t\tnone: function(event){\r\n\t\t\treturn !event.ctrlKey && !event.altKey && !event.shiftKey;\r\n\t\t},\r\n\t\tctrl: function(event){\r\n\t\t\treturn event.ctrlKey && !event.altKey && !event.shiftKey;\r\n\t\t},\r\n\t\talt: function(event){\r\n\t\t\treturn !event.ctrlKey && event.altKey && !event.shiftKey;\r\n\t\t},\r\n\t\tshift: function(event){\r\n\t\t\treturn !event.ctrlKey && !event.altKey && event.shiftKey;\r\n\t\t}\r\n\t};\r\n\r\n\tvar MouseZoomAndPan = declare(has(\"dojo-bidi\")? \"dojox.charting.action2d.NonBidiMouseZoomAndPan\" : \"dojox.charting.action2d.MouseZoomAndPan\", ChartAction, {\r\n\t\t// summary:\r\n\t\t//\t\tCreate an mouse zoom and pan action.\r\n\t\t//\t\tYou can zoom in or out the data window with mouse wheel. You can scroll using mouse drag gesture. \r\n\t\t//\t\tYou can toggle between zoom and fit view using double click on the chart.\r\n\r\n\t\t// the data description block for the widget parser\r\n\t\tdefaultParams: {\r\n\t\t\taxis: \"x\",\r\n\t\t\tscaleFactor: 1.2,\t\r\n\t\t\tmaxScale: 100,\r\n\t\t\tenableScroll: true,\r\n\t\t\tenableDoubleClickZoom: true,\r\n\t\t\tenableKeyZoom: true,\r\n\t\t\tkeyZoomModifier: \"ctrl\"\r\n\t\t},\r\n\t\toptionalParams: {}, // no optional parameters\r\n\t\t\r\n\t\tconstructor: function(chart, plot, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate an mouse zoom and pan action and connect it.\r\n\t\t\t// chart: dojox/charting/Chart\r\n\t\t\t//\t\tThe chart this action applies to.\r\n\t\t\t// kwArgs: __MouseZoomAndPanCtorArgs?\r\n\t\t\t//\t\tOptional arguments for the chart action.\r\n\t\t\tthis._listeners = [{eventName: mouse.wheel, methodName: \"onMouseWheel\"}];\r\n\t\t\tif(!kwArgs){ kwArgs = {}; }\r\n\t\t\tthis.axis = kwArgs.axis ? kwArgs.axis : \"x\";\r\n\t\t\tthis.scaleFactor = kwArgs.scaleFactor ? kwArgs.scaleFactor : 1.2;\r\n\t\t\tthis.maxScale = kwArgs.maxScale ? kwArgs.maxScale : 100;\r\n\t\t\tthis.enableScroll = kwArgs.enableScroll != undefined ? kwArgs.enableScroll : true;\r\n\t\t\tthis.enableDoubleClickZoom = kwArgs.enableDoubleClickZoom != undefined ? kwArgs.enableDoubleClickZoom : true;\r\n\t\t\tthis.enableKeyZoom = kwArgs.enableKeyZoom != undefined ? kwArgs.enableKeyZoom : true;\r\n\t\t\tthis.keyZoomModifier = kwArgs.keyZoomModifier ? kwArgs.keyZoomModifier : \"ctrl\";\r\n\t\t\tif(this.enableScroll){\r\n\t\t\t\tthis._listeners.push({eventName: \"onmousedown\", methodName: \"onMouseDown\"});\r\n\t\t\t}\r\n\t\t\tif(this.enableDoubleClickZoom){\r\n\t\t\t\tthis._listeners.push({eventName: \"ondblclick\", methodName: \"onDoubleClick\"});\r\n\t\t\t}\r\n\t\t\tif(this.enableKeyZoom){\r\n\t\t\t\tthis._listeners.push({eventName: \"keypress\", methodName: \"onKeyPress\"});\t\t\t\t\r\n\t\t\t}\r\n\t\t\tthis._handles = [];\r\n\t\t\tthis.connect();\r\n\t\t},\r\n\t\t\r\n\t\t_disconnectHandles: function(){\r\n\t\t\tif(has(\"ie\")){\r\n\t\t\t\tthis.chart.node.releaseCapture();\r\n\t\t\t}\r\n\t\t\tarr.forEach(this._handles, connect.disconnect);\r\n\t\t\tthis._handles = [];\r\n\t\t},\r\n\t\t\r\n\t\tconnect: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConnect this action to the chart.\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(this.enableKeyZoom){\r\n\t\t\t\t// we want to be able to get focus to receive key events \r\n\t\t\t\tdomProp.set(this.chart.node, \"tabindex\", \"0\");\r\n\t\t\t\t// if one doesn't want a focus border he can do something like\r\n\t\t\t\t// dojo.style(this.chart.node, \"outline\", \"none\");\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tdisconnect: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDisconnect this action from the chart.\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(this.enableKeyZoom){\r\n\t\t\t\t// we don't need anymore to be able to get focus to receive key events \r\n\t\t\t\tdomProp.set(this.chart.node, \"tabindex\", \"-1\");\r\n\t\t\t}\r\n\t\t\t// in case we disconnect before the end of the action\r\n\t\t\tthis._disconnectHandles();\r\n\t\t},\r\n\t\r\n\t\tonMouseDown: function(event){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when mouse is down on the chart.\r\n\t\t\tvar chart = this.chart, axis = chart.getAxis(this.axis);\r\n\t\t\tif(!axis.vertical){\r\n\t\t\t\tthis._startCoord = event.pageX;\r\n\t\t\t}else{\r\n\t\t\t\tthis._startCoord = event.pageY;\r\n\t\t\t}\r\n\t\t\tthis._startOffset = axis.getWindowOffset();\r\n\t\t\tthis._isPanning = true;\r\n\t\t\t// we now want to capture mouse move events everywhere to avoid\r\n\t\t\t// stop scrolling when going out of the chart window\r\n\t\t\tif(has(\"ie\")){\r\n\t\t\t\tthis._handles.push(connect.connect(this.chart.node, \"onmousemove\", this, \"onMouseMove\"));\r\n\t\t\t\tthis._handles.push(connect.connect(this.chart.node, \"onmouseup\", this, \"onMouseUp\"));\r\n\t\t\t\tthis.chart.node.setCapture();\r\n\t\t\t}else{\r\n\t\t\t\tthis._handles.push(connect.connect(win.doc, \"onmousemove\", this, \"onMouseMove\"));\r\n\t\t\t\tthis._handles.push(connect.connect(win.doc, \"onmouseup\", this, \"onMouseUp\"));\r\n\t\t\t}\r\n\t\t\tchart.node.focus();\r\n\t\t\t// prevent the browser from trying the drag on the \"image\"\r\n\t\t\teventUtil.stop(event);\r\n\t\t},\r\n\t\r\n\t\tonMouseMove: function(event){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when mouse is moved on the chart.\r\n\t\t\tif(this._isPanning){\r\n\t\t\t\tvar chart = this.chart, axis = chart.getAxis(this.axis);\r\n\t\t\t\tvar delta = this._getDelta(event);\r\n\t\t\t\t\r\n\t\t\t\tvar bounds = axis.getScaler().bounds,\r\n\t\t\t\t\ts = bounds.span / (bounds.upper - bounds.lower);\r\n\t\t\r\n\t\t\t\tvar scale = axis.getWindowScale();\r\n\t\t\t\tchart.setAxisWindow(this.axis, scale, this._startOffset - delta / s / scale);\r\n\t\t\t\tchart.render();\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\tonMouseUp: function(event){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when mouse is up on the chart.\r\n\t\t\tthis._isPanning = false;\r\n\t\t\tthis._disconnectHandles();\r\n\t\t},\r\n\t\t\r\n\t\tonMouseWheel: function(event){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when mouse wheel is used on the chart.\r\n\t\t\tvar scroll = event.wheelDelta / sUnit;\r\n\t\t\t// on Mozilla the sUnit might actually not always be 3\r\n\t\t\t// make sure we never have -1 < scroll < 1\r\n\t\t\tif(scroll > -1 && scroll < 0){\r\n\t\t\t\tscroll = -1;\r\n\t\t\t}else if(scroll > 0 && scroll < 1){\r\n\t\t\t\tscroll = 1;\r\n\t\t\t}\r\n \t\t\tthis._onZoom(scroll, event);\r\n\t\t},\r\n\t\t\r\n\t\tonKeyPress: function(event){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when a key is pressed on the chart.\r\n\t\t\tif(keyTests[this.keyZoomModifier](event)){\r\n\t\t\t\tif(event.keyChar == \"+\" || event.keyCode == keys.NUMPAD_PLUS){\r\n\t\t\t\t\tthis._onZoom(1, event);\r\n\t\t\t\t}else if(event.keyChar == \"-\" || event.keyCode == keys.NUMPAD_MINUS){\r\n\t\t\t\t\tthis._onZoom(-1, event);\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t} \r\n\t\t},\r\n\t\t\r\n\t\tonDoubleClick: function(event){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the mouse is double is double clicked on the chart. Toggle between zoom and fit chart.\r\n\t\t\tvar chart = this.chart, axis = chart.getAxis(this.axis);\r\n\t\t\tvar scale = 1 / this.scaleFactor;\r\n\t\t\t// are we fit?\r\n\t\t\tif(axis.getWindowScale()==1){\r\n\t\t\t\t// fit => zoom\r\n\t\t\t\tvar scaler = axis.getScaler(), start = scaler.bounds.from, end = scaler.bounds.to, \r\n\t\t\t\toldMiddle = (start + end) / 2, newMiddle = this.plot.toData({x: event.pageX, y: event.pageY})[this.axis], \r\n\t\t\t\tnewStart = scale * (start - oldMiddle) + newMiddle, newEnd = scale * (end - oldMiddle) + newMiddle;\r\n\t\t\t\tchart.zoomIn(this.axis, [newStart, newEnd]);\r\n\t\t\t}else{\r\n\t\t\t\t// non fit => fit\r\n\t\t\t\tchart.setAxisWindow(this.axis, 1, 0);\r\n\t\t\t\tchart.render();\r\n\t\t\t}\r\n\t\t\teventUtil.stop(event);\r\n\t\t},\r\n\t\t\r\n\t\t_onZoom: function(scroll, event){\r\n\t\t\tvar scale = (scroll < 0 ? Math.abs(scroll)*this.scaleFactor : \r\n\t\t\t\t1 / (Math.abs(scroll)*this.scaleFactor));\r\n\t\t\tvar chart = this.chart, axis = chart.getAxis(this.axis);\r\n\t\t\t// after wheel reset event position exactly if we could start a new scroll action\r\n\t\t\tvar cscale = axis.getWindowScale();\r\n\t\t\tif(cscale / scale > this.maxScale){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar scaler = axis.getScaler(), start = scaler.bounds.from, end = scaler.bounds.to;\r\n\t\t\t// keep mouse pointer as transformation center if available otherwise center\r\n\t\t\tvar middle = (event.type == \"keypress\") ? (start + end) / 2 :\r\n\t\t\t\tthis.plot.toData({x: event.pageX, y: event.pageY})[this.axis];\r\n\t\t\tvar newStart = scale * (start - middle) + middle, newEnd = scale * (end - middle) + middle;\r\n\t\t\tchart.zoomIn(this.axis, [newStart, newEnd]);\r\n\t\t\t// do not scroll browser\r\n\t\t\teventUtil.stop(event);\r\n\t\t},\r\n\t\t\r\n\t\t_getDelta: function(event){\r\n\t\t\treturn this.chart.getAxis(this.axis).vertical?(this._startCoord- event.pageY):(event.pageX - this._startCoord);\r\n\t\t}\r\n\t});\r\n\treturn has(\"dojo-bidi\")? declare(\"dojox.charting.action2d.MouseZoomAndPan\", [MouseZoomAndPan, BidiMouseZoomAndPan]) : MouseZoomAndPan;\r\n});\r\n"]}