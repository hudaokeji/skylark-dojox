{"version":3,"sources":["charting/action2d/PlotAction.js"],"names":["define","hub","declare","Base","dfe","df","DEFAULT_EASING","backOut","overOutEvents","onmouseover","onmouseout","constructor","chart","plot","kwargs","this","anim","duration","easing","connect","handle","connectToPlot","name","disconnect","reset","destroy","inherited","arguments","forIn","o","action","stop"],"mappings":";;;;;;;AAAAA,QAAQ,qBAAsB,qBAAsB,SAAU,iBAAkB,yBAC/E,SAASC,EAAKC,EAASC,EAAMC,EAAKC,GAclC,IACCC,EAAmBF,EAAIG,QAExB,OAAOL,EAAQ,qCAAsCC,GAIpDK,eAAgBC,YAAa,EAAGC,WAAY,GAE5CC,YAAa,SAASC,EAAOC,EAAMC,GASlCC,KAAKC,QAGDF,IAASA,MACbC,KAAKE,SAAWH,EAAOG,SAAWH,EAAOG,SAtBpB,IAuBrBF,KAAKG,OAAWJ,EAAOI,OAAWJ,EAAOI,OAAWZ,GAGrDa,QAAS,WAGRJ,KAAKK,OAASL,KAAKH,MAAMS,cAAcN,KAAKF,KAAKS,KAAMP,KAAM,YAG9DQ,WAAY,WAGRR,KAAKK,SACPnB,EAAIsB,WAAWR,KAAKK,QACpBL,KAAKK,OAAS,OAIhBI,MAAO,aAKPC,QAAS,WAGRV,KAAKW,UAAUC,WACftB,EAAGuB,MAAMb,KAAKC,KAAM,SAASa,GAC5BxB,EAAGuB,MAAMC,EAAG,SAASb,GACpBA,EAAKc,OAAOC,MAAK,OAGnBhB,KAAKC","file":"../../../charting/action2d/PlotAction.js","sourcesContent":["define([\"dojo/_base/connect\", \"dojo/_base/declare\", \"./Base\", \"dojo/fx/easing\", \"dojox/lang/functional\"],\r\n\tfunction(hub, declare, Base, dfe, df){\r\n\t\r\n\t/*=====\r\n\tvar __PlotActionCtorArgs = {\r\n\t \t// summary:\r\n\t\t//\t\tThe base keyword arguments object for creating an action2d.\r\n\t\t// duration: Number?\r\n\t\t//\t\tThe amount of time in milliseconds for an animation to last.  Default is 400.\r\n\t\t// easing: dojo/fx/easing/*?\r\n\t\t//\t\tAn easing object (see dojo.fx.easing) for use in an animation.  The\r\n\t\t//\t\tdefault is dojo.fx.easing.backOut.\r\n\t};\r\n\t=====*/\r\n\r\n\tvar DEFAULT_DURATION = 400,\t// ms\r\n\t\tDEFAULT_EASING   = dfe.backOut;\r\n\r\n\treturn declare(\"dojox.charting.action2d.PlotAction\", Base, {\r\n\t\t// summary:\r\n\t\t//\t\tBase action class for plot actions.\r\n\r\n\t\toverOutEvents: {onmouseover: 1, onmouseout: 1},\r\n\r\n\t\tconstructor: function(chart, plot, kwargs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate a new base PlotAction.\r\n\t\t\t// chart: dojox/charting/Chart\r\n\t\t\t//\t\tThe chart this action applies to.\r\n\t\t\t// plot: String?\r\n\t\t\t//\t\tThe name of the plot this action belongs to.  If none is passed \"default\" is assumed.\r\n\t\t\t// kwargs: __PlotActionCtorArgs?\r\n\t\t\t//\t\tOptional arguments for the action.\r\n\t\t\tthis.anim = {};\r\n\r\n\t\t\t// process common optional named parameters\r\n\t\t\tif(!kwargs){ kwargs = {}; }\r\n\t\t\tthis.duration = kwargs.duration ? kwargs.duration : DEFAULT_DURATION;\r\n\t\t\tthis.easing   = kwargs.easing   ? kwargs.easing   : DEFAULT_EASING;\r\n\t\t},\r\n\r\n\t\tconnect: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConnect this action to the given plot.\r\n\t\t\tthis.handle = this.chart.connectToPlot(this.plot.name, this, \"process\");\r\n\t\t},\r\n\r\n\t\tdisconnect: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDisconnect this action from the given plot, if connected.\r\n\t\t\tif(this.handle){\r\n\t\t\t\thub.disconnect(this.handle);\r\n\t\t\t\tthis.handle = null;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\treset: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReset the action.\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDo any cleanup needed when destroying parent elements.\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tdf.forIn(this.anim, function(o){\r\n\t\t\t\tdf.forIn(o, function(anim){\r\n\t\t\t\t\tanim.action.stop(true);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.anim = {};\r\n\t\t}\r\n\t});\r\n});\r\n"]}