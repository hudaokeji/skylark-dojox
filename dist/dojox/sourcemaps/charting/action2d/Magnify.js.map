{"version":3,"sources":["charting/action2d/Magnify.js"],"names":["define","Hub","declare","PlotAction","m","gf","df","dfe","defaultParams","duration","easing","backOut","scale","optionalParams","constructor","chart","plot","kwArgs","this","connect","process","o","shape","type","overOutEvents","element","anim","init","runName","run","name","index","vector","action","stop","identity","scaleAt","cx","cy","transform","start","end","push","animateTransform","outline","shadow","length","combine","play"],"mappings":";;;;;;;AAAAA,QAAQ,qBAAsB,qBAC7B,eAAgB,mBAChB,eAAgB,UAAW,kBAC3B,SAASC,EAAKC,EAASC,EAAYC,EAAGC,EAAIC,EAAIC,GAkB9C,OAAOL,EAAQ,kCAAmCC,GAKjDK,eACCC,SAAU,IACVC,OAAUH,EAAII,QACdC,MAVkB,GAYnBC,kBAEAC,YAAa,SAASC,EAAOC,EAAMC,GAWlCC,KAAKN,MAAQK,GAAiC,iBAAhBA,EAAOL,MAAoBK,EAAOL,MAzB9C,EA2BlBM,KAAKC,WAGNC,QAAS,SAASC,GAKjB,GAAIA,EAAEC,OAAWD,EAAEE,QAAQL,KAAKM,eAC7B,OAAQH,GAAQ,OAAQA,GAGX,eAAbA,EAAEI,SAAyC,eAAbJ,EAAEI,QAAnC,CAIA,IAAwDC,EAAMC,EAAMf,EAAhEgB,EAAUP,EAAEQ,IAAIC,KAAMC,EAAQV,EAAEU,MAAOC,KAExCJ,KAAWV,KAAKQ,KAClBA,EAAOR,KAAKQ,KAAKE,GAASG,GAE1Bb,KAAKQ,KAAKE,MAGRF,EACFA,EAAKO,OAAOC,MAAK,GAEjBhB,KAAKQ,KAAKE,GAASG,GAASL,KAGhB,eAAVL,EAAEE,MACJI,EAAQvB,EAAE+B,SACVvB,EAAQM,KAAKN,QAEbe,EAAQvB,EAAEgC,QAAQlB,KAAKN,MAAOS,EAAEgB,GAAIhB,EAAEiB,IACtC1B,EAAQ,EAAIM,KAAKN,OAGlB,IAAIK,GACHK,MAAUD,EAAEC,MACZb,SAAUS,KAAKT,SACfC,OAAUQ,KAAKR,OACf6B,YACET,KAAM,UAAWU,OAAQ,EAAGnB,EAAEgB,GAAIhB,EAAEiB,IAAKG,KAAM7B,EAAOS,EAAEgB,GAAIhB,EAAEiB,KAC/DX,IAGCN,EAAEC,OACJU,EAAOU,KAAKrC,EAAGsC,iBAAiB1B,IAE9BI,EAAEuB,UACJ3B,EAAOK,MAAQD,EAAEuB,QACjBZ,EAAOU,KAAKrC,EAAGsC,iBAAiB1B,KAE9BI,EAAEwB,SACJ5B,EAAOK,MAAQD,EAAEwB,OACjBb,EAAOU,KAAKrC,EAAGsC,iBAAiB1B,KAG7Be,EAAOc,QAKXpB,EAAKO,OAAS3B,EAAGyC,QAAQf,GACZ,cAAVX,EAAEE,MACJtB,EAAIkB,QAAQO,EAAKO,OAAQ,QAASf,KAAM,WACpCA,KAAKQ,KAAKE,WACLV,KAAKQ,KAAKE,GAASG,KAI7BL,EAAKO,OAAOe,eAZJ9B,KAAKQ,KAAKE,GAASG","file":"../../../charting/action2d/Magnify.js","sourcesContent":["define([\"dojo/_base/connect\", \"dojo/_base/declare\", \r\n\t\"./PlotAction\", \"dojox/gfx/matrix\", \r\n\t\"dojox/gfx/fx\", \"dojo/fx\", \"dojo/fx/easing\"], \r\n\tfunction(Hub, declare, PlotAction, m, gf, df, dfe){\r\n\r\n\t/*=====\r\n\tvar __MagnifyCtorArgs = {\r\n\t\t// summary:\r\n\t\t//\t\tAdditional arguments for magnifying actions.\r\n\t\t// duration: Number?\r\n\t\t//\t\tThe amount of time in milliseconds for an animation to last.  Default is 400.\r\n\t\t// easing: dojo/fx/easing/*?\r\n\t\t//\t\tAn easing object (see dojo.fx.easing) for use in an animation.  The\r\n\t\t//\t\tdefault is dojo.fx.easing.backOut.\r\n\t\t// scale: Number?\r\n\t\t//\t\tThe amount to magnify the given object to.  Default is 2.\r\n\t};\r\n\t=====*/\r\n\t\r\n\tvar DEFAULT_SCALE = 2;\r\n\r\n\treturn declare(\"dojox.charting.action2d.Magnify\", PlotAction, {\r\n\t\t// summary:\r\n\t\t//\t\tCreate an action that magnifies the object the action is applied to.\r\n\r\n\t\t// the data description block for the widget parser\r\n\t\tdefaultParams: {\r\n\t\t\tduration: 400,\t// duration of the action in ms\r\n\t\t\teasing:   dfe.backOut,\t// easing for the action\r\n\t\t\tscale:    DEFAULT_SCALE\t// scale of magnification\r\n\t\t},\r\n\t\toptionalParams: {},\t// no optional parameters\r\n\r\n\t\tconstructor: function(chart, plot, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate the magnifying action.\r\n\t\t\t// chart: dojox/charting/Chart\r\n\t\t\t//\t\tThe chart this action belongs to.\r\n\t\t\t// plot: String?\r\n\t\t\t//\t\tThe plot to apply the action to. If not passed, \"default\" is assumed.\r\n\t\t\t// kwArgs: __MagnifyCtorArgs?\r\n\t\t\t//\t\tOptional keyword arguments for this action.\r\n\r\n\t\t\t// process optional named parameters\r\n\t\t\tthis.scale = kwArgs && typeof kwArgs.scale == \"number\" ? kwArgs.scale : DEFAULT_SCALE;\r\n\r\n\t\t\tthis.connect();\r\n\t\t},\r\n\r\n\t\tprocess: function(o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tProcess the action on the given object.\r\n\t\t\t// o: dojox/gfx/shape.Shape\r\n\t\t\t//\t\tThe object on which to process the magnifying action.\r\n\t\t\tif(!o.shape || !(o.type in this.overOutEvents) ||\r\n\t\t\t\t!(\"cx\" in o) || !(\"cy\" in o)){ return; }\r\n\r\n\t\t\t// if spider deal only with circle\r\n\t\t\tif(o.element == \"spider_plot\" || o.element == \"spider_poly\"){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar runName = o.run.name, index = o.index, vector = [], anim, init, scale;\r\n\r\n\t\t\tif(runName in this.anim){\r\n\t\t\t\tanim = this.anim[runName][index];\r\n\t\t\t}else{\r\n\t\t\t\tthis.anim[runName] = {};\r\n\t\t\t}\r\n\r\n\t\t\tif(anim){\r\n\t\t\t\tanim.action.stop(true);\r\n\t\t\t}else{\r\n\t\t\t\tthis.anim[runName][index] = anim = {};\r\n\t\t\t}\r\n\r\n\t\t\tif(o.type == \"onmouseover\"){\r\n\t\t\t\tinit  = m.identity;\r\n\t\t\t\tscale = this.scale;\r\n\t\t\t}else{\r\n\t\t\t\tinit  = m.scaleAt(this.scale, o.cx, o.cy);\r\n\t\t\t\tscale = 1 / this.scale;\r\n\t\t\t}\r\n\r\n\t\t\tvar kwArgs = {\r\n\t\t\t\tshape:    o.shape,\r\n\t\t\t\tduration: this.duration,\r\n\t\t\t\teasing:   this.easing,\r\n\t\t\t\ttransform: [\r\n\t\t\t\t\t{name: \"scaleAt\", start: [1, o.cx, o.cy], end: [scale, o.cx, o.cy]},\r\n\t\t\t\t\tinit\r\n\t\t\t\t]\r\n\t\t\t};\r\n\t\t\tif(o.shape){\r\n\t\t\t\tvector.push(gf.animateTransform(kwArgs));\r\n\t\t\t}\r\n\t\t\tif(o.outline){\r\n\t\t\t\tkwArgs.shape = o.outline;\r\n\t\t\t\tvector.push(gf.animateTransform(kwArgs));\r\n\t\t\t}\r\n\t\t\tif(o.shadow){\r\n\t\t\t\tkwArgs.shape = o.shadow;\r\n\t\t\t\tvector.push(gf.animateTransform(kwArgs));\r\n\t\t\t}\r\n\r\n\t\t\tif(!vector.length){\r\n\t\t\t\tdelete this.anim[runName][index];\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tanim.action = df.combine(vector);\r\n\t\t\tif(o.type == \"onmouseout\"){\r\n\t\t\t\tHub.connect(anim.action, \"onEnd\", this, function(){\r\n\t\t\t\t\tif(this.anim[runName]){\r\n\t\t\t\t\t\tdelete this.anim[runName][index];\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tanim.action.play();\r\n\t\t}\r\n\t});\r\n\t\r\n});\r\n"]}