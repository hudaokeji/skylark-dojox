{"version":3,"sources":["charting/scaler/common.js"],"names":["define","lang","eq","a","b","Math","abs","common","getObject","testedModules","mixin","doIfLoaded","moduleName","ifloaded","ifnotloaded","undefined","require","e","getNumericLabel","number","precision","kwArgs","def","numberLib","fixed","format","places","toFixed","toString","labelFunc","r","labels","l","lo","hi","length","mid","floor","value","text"],"mappings":";;;;;;;AAAAA,QAAQ,mBAAoB,SAASC,GAEpC,IAAIC,EAAK,SAAoBC,EAAcC,GAG1C,OAAOC,KAAKC,IAAIH,EAAIC,IAAM,MAAQC,KAAKC,IAAIH,GAAKE,KAAKC,IAAIF,KAGtDG,EAASN,EAAKO,UAAU,gCAAgC,GAExDC,KAEJ,OAAOR,EAAKS,MAAMH,GACjBI,WAAY,SAASC,EAAYC,EAAUC,GAC1C,QAAgCC,GAA7BN,EAAcG,GAChB,IACCH,EAAcG,GAAcI,QAAQJ,GACpC,MAAMK,GACNR,EAAcG,GAAc,KAG9B,OAAGH,EAAcG,GACTC,EAASJ,EAAcG,IAEvBE,KAGTI,gBAAiB,SAAoBC,EAAmBC,EAAsBC,GAC7E,IAAIC,EAAM,GAOV,GANAf,EAAOI,WAAW,cAAe,SAASY,GACzCD,GAAOD,EAAOG,MAAQD,EAAUE,OAAON,GAASO,OAASN,EAAY,GAAKA,EAAY,IACrFG,EAAUE,OAAON,KAAY,IAC5B,WACFG,EAAMD,EAAOG,MAAQL,EAAOQ,QAAQP,EAAY,GAAKA,EAAY,GAAKD,EAAOS,aAE3EP,EAAOQ,UAAU,CACnB,IAAIC,EAAIT,EAAOQ,UAAUP,EAAKH,EAAQC,GACtC,GAAGU,EAAI,OAAOA,EAGf,GAAGT,EAAOU,OAAO,CAIhB,IADA,IAAIC,EAAIX,EAAOU,OAAQE,EAAK,EAAGC,EAAKF,EAAEG,OAChCF,EAAKC,GAAG,CACb,IAAIE,EAAM/B,KAAKgC,OAAOJ,EAAKC,GAAM,GAAUF,EAAEI,GAAKE,MACzCnB,EACRc,EAAKG,EAAM,EAEXF,EAAKE,EAIP,GAAGH,EAAKD,EAAEG,QAAUjC,EAAG8B,EAAEC,GAAIK,MAAOnB,GACnC,OAAOa,EAAEC,GAAIM,KAGd,KADEN,GACO,GAAKA,EAAKD,EAAEG,QAAUjC,EAAG8B,EAAEC,GAAIK,MAAOnB,GAC9C,OAAOa,EAAEC,GAAIM,KAGd,IADAN,GAAM,GACED,EAAEG,QAAUjC,EAAG8B,EAAEC,GAAIK,MAAOnB,GACnC,OAAOa,EAAEC,GAAIM,KAIf,OAAOjB","file":"../../../charting/scaler/common.js","sourcesContent":["define([\"dojo/_base/lang\"], function(lang){\r\n\r\n\tvar eq = function(/*Number*/ a, /*Number*/ b){\r\n\t\t// summary:\r\n\t\t//\t\tcompare two FP numbers for equality\r\n\t\treturn Math.abs(a - b) <= 1e-6 * (Math.abs(a) + Math.abs(b));\t// Boolean\r\n\t};\r\n\t\r\n\tvar common = lang.getObject(\"dojox.charting.scaler.common\", true);\r\n\t\r\n\tvar testedModules = {};\r\n\r\n\treturn lang.mixin(common, {\r\n\t\tdoIfLoaded: function(moduleName, ifloaded, ifnotloaded){\r\n\t\t\tif(testedModules[moduleName] == undefined){\r\n\t\t\t\ttry{\r\n\t\t\t\t\ttestedModules[moduleName] = require(moduleName);\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\ttestedModules[moduleName] = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(testedModules[moduleName]){\r\n\t\t\t\treturn ifloaded(testedModules[moduleName]);\r\n\t\t\t}else{\r\n\t\t\t\treturn ifnotloaded();\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetNumericLabel: function(/*Number*/ number, /*Number*/ precision, /*Object*/ kwArgs){\r\n\t\t\tvar def = \"\";\r\n\t\t\tcommon.doIfLoaded(\"dojo/number\", function(numberLib){\r\n\t\t\t\tdef = (kwArgs.fixed ? numberLib.format(number, {places : precision < 0 ? -precision : 0}) :\r\n\t\t\t\t\tnumberLib.format(number)) || \"\";\r\n\t\t\t}, function(){\r\n\t\t\t\tdef = kwArgs.fixed ? number.toFixed(precision < 0 ? -precision : 0) : number.toString();\r\n\t\t\t});\r\n\t\t\tif(kwArgs.labelFunc){\r\n\t\t\t\tvar r = kwArgs.labelFunc(def, number, precision);\r\n\t\t\t\tif(r){ return r; }\r\n\t\t\t\t// else fall through to the regular labels search\r\n\t\t\t}\r\n\t\t\tif(kwArgs.labels){\r\n\t\t\t\t// classic binary search\r\n\t\t\t\t// TODO: working only if the array is sorted per value should be better documented or sorted automatically\r\n\t\t\t\tvar l = kwArgs.labels, lo = 0, hi = l.length;\r\n\t\t\t\twhile(lo < hi){\r\n\t\t\t\t\tvar mid = Math.floor((lo + hi) / 2), val = l[mid].value;\r\n\t\t\t\t\tif(val < number){\r\n\t\t\t\t\t\tlo = mid + 1;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\thi = mid;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// lets take into account FP errors\r\n\t\t\t\tif(lo < l.length && eq(l[lo].value, number)){\r\n\t\t\t\t\treturn l[lo].text;\r\n\t\t\t\t}\r\n\t\t\t\t--lo;\r\n\t\t\t\tif(lo >= 0 && lo < l.length && eq(l[lo].value, number)){\r\n\t\t\t\t\treturn l[lo].text;\r\n\t\t\t\t}\r\n\t\t\t\tlo += 2;\r\n\t\t\t\tif(lo < l.length && eq(l[lo].value, number)){\r\n\t\t\t\t\treturn l[lo].text;\r\n\t\t\t\t}\r\n\t\t\t\t// otherwise we will produce a number\r\n\t\t\t}\r\n\t\t\treturn def;\r\n\t\t}\r\n\t});\r\n});\r\n"]}