{"version":3,"sources":["charting/Element.js"],"names":["define","arr","domConstruct","declare","gfx","shape","chart","group","htmlElements","dirty","renderingOptions","constructor","kwArgs","this","trailingSymbol","_events","purgeGroup","destroyHtmlElements","getGroup","removeShape","children","dispose","i","length","rawNode","empty","clear","forEach","item","disconnect","handle","cleanGroup","creator","surface","bgnode","bgNode","appendChild","createGroup","namespaceURI","key","setAttribute","destroy","getTextWidth","s","font","_base","_getTextBox","w","getTextWithLimitLength","limitWidth","truncated","text","minStr","substring","begin","end","index","Math","round","getTextWithLimitCharCount","wcLimit","_plotFill","fill","dim","offsets","type","space","span","makeParameters","defaultLinearGradient","height","t","b","y1","y2","width","l","r","x1","x2","defaultRadialGradient","spanX","spanY","cx","cy","sqrt","defaultPattern","y","x","_shapeFill","bbox","_pseudoRadialFill","center","radius","start","arguments","angle","cos","sin","colors"],"mappings":"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","file":"../../charting/Element.js","sourcesContent":["define([\"dojo/_base/array\", \"dojo/dom-construct\",\"dojo/_base/declare\", \"dojox/gfx\", \"dojox/gfx/shape\"],\r\n\tfunction(arr, domConstruct, declare, gfx, shape){\r\n\r\n\treturn declare(\"dojox.charting.Element\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tA base class that is used to build other elements of a chart, such as\r\n\t\t//\t\ta series.\r\n\t\t// chart: dojox/charting/Chart\r\n\t\t//\t\tThe parent chart for this element.\r\n\t\t// group: dojox/gfx/shape.Group\r\n\t\t//\t\tThe visual GFX group representing this element.\r\n\t\t// htmlElement: Array\r\n\t\t//\t\tAny DOMNodes used as a part of this element (such as HTML-based labels).\r\n\t\t// dirty: Boolean\r\n\t\t//\t\tA flag indicating whether or not this element needs to be rendered.\r\n\r\n\t\tchart: null,\r\n\t\tgroup: null,\r\n\t\thtmlElements: null,\r\n\t\tdirty: true,\r\n\t\trenderingOptions: null,\r\n\r\n\t\tconstructor: function(chart, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates a new charting element.\r\n\t\t\t// chart: dojox/charting/Chart\r\n\t\t\t//\t\tThe chart that this element belongs to.\r\n\t\t\tthis.chart = chart;\r\n\t\t\tthis.group = null;\r\n\t\t\tthis.htmlElements = [];\r\n\t\t\tthis.dirty = true;\r\n\t\t\tthis.trailingSymbol = \"...\";\r\n\t\t\tthis._events = [];\r\n\t\t\tif (kwArgs && kwArgs.renderingOptions) {\r\n\t\t\t\tthis.renderingOptions = kwArgs.renderingOptions;\r\n\t\t\t}\r\n\t\t},\r\n\t\tpurgeGroup: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tClear any elements out of our group, and destroy the group.\r\n\t\t\t// returns: dojox/charting/Element\r\n\t\t\t//\t\tA reference to this object for functional chaining.\r\n\t\t\tthis.destroyHtmlElements();\r\n\t\t\tif(this.group){\r\n\t\t\t\t// since 1.7.x we need dispose shape otherwise there is a memoryleak\r\n\t\t\t\tthis.getGroup().removeShape();\r\n\t\t\t\tvar children = this.getGroup().children;\r\n\t\t\t\t// starting with 1.9 the registry is optional and thus dispose is\r\n\t\t\t\tif(shape.dispose){\r\n\t\t\t\t\tfor(var i = 0; i < children.length;++i){\r\n\t\t\t\t\t\tshape.dispose(children[i], true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(this.getGroup().rawNode){\r\n\t\t\t\t\tdomConstruct.empty(this.getGroup().rawNode);\r\n\t\t\t\t}\r\n\t\t\t\tthis.getGroup().clear();\r\n\t\t\t\t// starting with 1.9 the registry is optional and thus dispose is\r\n\t\t\t\tif(shape.dispose){\r\n\t\t\t\t\tshape.dispose(this.getGroup(), true);\r\n\t\t\t\t}\r\n\t\t\t\tif(this.getGroup() != this.group){\r\n\t\t\t\t\t// we do have an intermediary clipping group (see CartesianBase)\r\n\t\t\t\t\tif(this.group.rawNode){\r\n\t\t\t\t\t\tdomConstruct.empty(this.group.rawNode);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.group.clear();\r\n\t\t\t\t\t// starting with 1.9 the registry is optional and thus dispose is\r\n\t\t\t\t\tif(shape.dispose){\r\n\t\t\t\t\t\tshape.dispose(this.group, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.group = null;\r\n\t\t\t}\r\n\t\t\tthis.dirty = true;\r\n\t\t\tif(this._events.length){\r\n\t\t\t\tarr.forEach(this._events, function(item){\r\n\t\t\t\t\titem.shape.disconnect(item.handle);\r\n\t\t\t\t});\r\n\t\t\t\tthis._events = [];\r\n\t\t\t}\r\n\t\t\treturn this;\t//\tdojox.charting.Element\r\n\t\t},\r\n\t\tcleanGroup: function(creator){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tClean any elements (HTML or GFX-based) out of our group, and create a new one.\r\n\t\t\t// creator: dojox/gfx/shape.Surface?\r\n\t\t\t//\t\tAn optional surface to work with.\r\n\t\t\t// returns: dojox/charting/Element\r\n\t\t\t//\t\tA reference to this object for functional chaining.\r\n\t\t\tthis.destroyHtmlElements();\r\n\t\t\tif(!creator){ creator = this.chart.surface; }\r\n\t\t\tif(this.group){\r\n\t\t\t\tvar bgnode;\r\n\t\t\t\tvar children = this.getGroup().children;\r\n\t\t\t\t// starting with 1.9 the registry is optional and thus dispose is\r\n\t\t\t\tif(shape.dispose){\r\n\t\t\t\t\tfor(var i = 0; i < children.length;++i){\r\n\t\t\t\t\t\tshape.dispose(children[i], true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(this.getGroup().rawNode){\r\n\t\t\t\t\tbgnode = this.getGroup().bgNode;\r\n\t\t\t\t\tdomConstruct.empty(this.getGroup().rawNode);\r\n\t\t\t\t}\r\n\t\t\t\tthis.getGroup().clear();\r\n\t\t\t\tif(bgnode){\r\n\t\t\t\t\tthis.getGroup().rawNode.appendChild(bgnode);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.group = creator.createGroup();\r\n\t\t\t\t// in some cases we have a rawNode but this is not an actual DOM element (CanvasWithEvents) so check\r\n\t\t\t\t// the actual rawNode type.\r\n\t\t\t\tif (this.renderingOptions && this.group.rawNode && \r\n\t\t\t\t\tthis.group.rawNode.namespaceURI == \"http://www.w3.org/2000/svg\") {\r\n\t\t\t\t\tfor (var key in this.renderingOptions) {\r\n\t\t\t\t\t\tthis.group.rawNode.setAttribute(key, this.renderingOptions[key]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.dirty = true;\r\n\t\t\treturn this;\t//\tdojox.charting.Element\r\n\t\t},\r\n\t\tgetGroup: function(){\r\n\t\t\treturn this.group;\r\n\t\t},\r\n\t\tdestroyHtmlElements: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDestroy any DOMNodes that may have been created as a part of this element.\r\n\t\t\tif(this.htmlElements.length){\r\n\t\t\t\tarr.forEach(this.htmlElements, domConstruct.destroy);\r\n\t\t\t\tthis.htmlElements = [];\r\n\t\t\t}\r\n\t\t},\r\n\t\tdestroy: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAPI addition to conform to the rest of the Dojo Toolkit's standard.\r\n\t\t\tthis.purgeGroup();\r\n\t\t},\r\n\t\t//text utilities\r\n\t\tgetTextWidth: function(s, font){\r\n\t\t\treturn gfx._base._getTextBox(s, {font: font}).w || 0;\r\n\t\t},\r\n\t\tgetTextWithLimitLength: function(s, font, limitWidth, truncated){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet the truncated string based on the limited width in px(dichotomy algorithm)\r\n\t\t\t// s: String?\r\n\t\t\t//\t\tcandidate text.\r\n\t\t\t// font: String?\r\n\t\t\t//\t\ttext's font style.\r\n\t\t\t// limitWidth: Number?\r\n\t\t\t//\t\ttext limited width in px.\r\n\t\t\t// truncated: Boolean?\r\n\t\t\t//\t\twhether the input text(s) has already been truncated.\r\n\t\t\t// returns: Object\r\n\t\t\t// |\t{\r\n\t\t\t// |\t\ttext: processed text, maybe truncated or not,\r\n\t\t\t// |\t\ttruncated: whether text has been truncated\r\n\t\t\t// |\t}\r\n\t\t\tif(!s || s.length <= 0){\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttext: \"\",\r\n\t\t\t\t\ttruncated: truncated || false\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tif(!limitWidth || limitWidth <= 0){\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttext: s,\r\n\t\t\t\t\ttruncated: truncated || false\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tvar delta = 2,\r\n\t\t\t\t//golden section for dichotomy algorithm\r\n\t\t\t\ttrucPercentage = 0.618,\r\n\t\t\t\tminStr = s.substring(0,1) + this.trailingSymbol,\r\n\t\t\t\tminWidth = this.getTextWidth(minStr, font);\r\n\t\t\tif(limitWidth <= minWidth){\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttext: minStr,\r\n\t\t\t\t\ttruncated: true\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tvar width = this.getTextWidth(s, font);\r\n\t\t\tif(width <= limitWidth){\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttext: s,\r\n\t\t\t\t\ttruncated: truncated || false\r\n\t\t\t\t};\r\n\t\t\t}else{\r\n\t\t\t\tvar begin = 0,\r\n\t\t\t\t\tend = s.length;\r\n\t\t\t\twhile(begin < end){\r\n\t\t\t\t\tif(end - begin <= delta ){\r\n\t\t\t\t\t\twhile (this.getTextWidth(s.substring(0, begin) + this.trailingSymbol, font) > limitWidth) {\r\n\t\t\t\t\t\t\tbegin -= 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\ttext: (s.substring(0,begin) + this.trailingSymbol),\r\n\t\t\t\t\t\t\ttruncated: true\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar index = begin + Math.round((end - begin) * trucPercentage),\r\n\t\t\t\t\t\twidthIntercepted = this.getTextWidth(s.substring(0, index), font);\r\n\t\t\t\t\tif(widthIntercepted < limitWidth){\r\n\t\t\t\t\t\tbegin = index;\r\n\t\t\t\t\t\tend = end;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tbegin = begin;\r\n\t\t\t\t\t\tend = index;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetTextWithLimitCharCount: function(s, font, wcLimit, truncated){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet the truncated string based on the limited character count(dichotomy algorithm)\r\n\t\t\t// s: String?\r\n\t\t\t//\t\tcandidate text.\r\n\t\t\t// font: String?\r\n\t\t\t//\t\ttext's font style.\r\n\t\t\t// wcLimit: Number?\r\n\t\t\t//\t\ttext limited character count.\r\n\t\t\t// truncated: Boolean?\r\n\t\t\t//\t\twhether the input text(s) has already been truncated.\r\n\t\t\t// returns: Object\r\n\t\t\t// |\t{\r\n\t\t\t// |\t\ttext: processed text, maybe truncated or not,\r\n\t\t\t// |\t\ttruncated: whether text has been truncated\r\n\t\t\t// |\t}\r\n\t\t\tif (!s || s.length <= 0) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttext: \"\",\r\n\t\t\t\t\ttruncated: truncated || false\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tif(!wcLimit || wcLimit <= 0 || s.length <= wcLimit){\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttext: s,\r\n\t\t\t\t\ttruncated: truncated || false\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\ttext: s.substring(0, wcLimit) + this.trailingSymbol,\r\n\t\t\t\ttruncated: true\r\n\t\t\t};\r\n\t\t},\r\n\t\t// fill utilities\r\n\t\t_plotFill: function(fill, dim, offsets){\r\n\t\t\t// process a plot-wide fill\r\n\t\t\tif(!fill || !fill.type || !fill.space){\r\n\t\t\t\treturn fill;\r\n\t\t\t}\r\n\t\t\tvar space = fill.space, span;\r\n\t\t\tswitch(fill.type){\r\n\t\t\t\tcase \"linear\":\r\n\t\t\t\t\tif(space === \"plot\" || space === \"shapeX\" || space === \"shapeY\"){\r\n\t\t\t\t\t\t// clone a fill so we can modify properly directly\r\n\t\t\t\t\t\tfill = gfx.makeParameters(gfx.defaultLinearGradient, fill);\r\n\t\t\t\t\t\tfill.space = space;\r\n\t\t\t\t\t\t// process dimensions\r\n\t\t\t\t\t\tif(space === \"plot\" || space === \"shapeX\"){\r\n\t\t\t\t\t\t\t// process Y\r\n\t\t\t\t\t\t\tspan = dim.height - offsets.t - offsets.b;\r\n\t\t\t\t\t\t\tfill.y1 = offsets.t + span * fill.y1 / 100;\r\n\t\t\t\t\t\t\tfill.y2 = offsets.t + span * fill.y2 / 100;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(space === \"plot\" || space === \"shapeY\"){\r\n\t\t\t\t\t\t\t// process X\r\n\t\t\t\t\t\t\tspan = dim.width - offsets.l - offsets.r;\r\n\t\t\t\t\t\t\tfill.x1 = offsets.l + span * fill.x1 / 100;\r\n\t\t\t\t\t\t\tfill.x2 = offsets.l + span * fill.x2 / 100;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"radial\":\r\n\t\t\t\t\tif(space === \"plot\"){\r\n\t\t\t\t\t\t// this one is used exclusively for scatter charts\r\n\t\t\t\t\t\t// clone a fill so we can modify properly directly\r\n\t\t\t\t\t\tfill = gfx.makeParameters(gfx.defaultRadialGradient, fill);\r\n\t\t\t\t\t\tfill.space = space;\r\n\t\t\t\t\t\t// process both dimensions\r\n\t\t\t\t\t\tvar spanX = dim.width  - offsets.l - offsets.r,\r\n\t\t\t\t\t\t\tspanY = dim.height - offsets.t - offsets.b;\r\n\t\t\t\t\t\tfill.cx = offsets.l + spanX * fill.cx / 100;\r\n\t\t\t\t\t\tfill.cy = offsets.t + spanY * fill.cy / 100;\r\n\t\t\t\t\t\tfill.r  = fill.r * Math.sqrt(spanX * spanX + spanY * spanY) / 200;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"pattern\":\r\n\t\t\t\t\tif(space === \"plot\" || space === \"shapeX\" || space === \"shapeY\"){\r\n\t\t\t\t\t\t// clone a fill so we can modify properly directly\r\n\t\t\t\t\t\tfill = gfx.makeParameters(gfx.defaultPattern, fill);\r\n\t\t\t\t\t\tfill.space = space;\r\n\t\t\t\t\t\t// process dimensions\r\n\t\t\t\t\t\tif(space === \"plot\" || space === \"shapeX\"){\r\n\t\t\t\t\t\t\t// process Y\r\n\t\t\t\t\t\t\tspan = dim.height - offsets.t - offsets.b;\r\n\t\t\t\t\t\t\tfill.y = offsets.t + span * fill.y / 100;\r\n\t\t\t\t\t\t\tfill.height = span * fill.height / 100;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(space === \"plot\" || space === \"shapeY\"){\r\n\t\t\t\t\t\t\t// process X\r\n\t\t\t\t\t\t\tspan = dim.width - offsets.l - offsets.r;\r\n\t\t\t\t\t\t\tfill.x = offsets.l + span * fill.x / 100;\r\n\t\t\t\t\t\t\tfill.width = span * fill.width / 100;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn fill;\r\n\t\t},\r\n\t\t_shapeFill: function(fill, bbox){\r\n\t\t\t// process shape-specific fill\r\n\t\t\tif(!fill || !fill.space){\r\n\t\t\t\treturn fill;\r\n\t\t\t}\r\n\t\t\tvar space = fill.space, span;\r\n\t\t\tswitch(fill.type){\r\n\t\t\t\tcase \"linear\":\r\n\t\t\t\t\tif(space === \"shape\" || space === \"shapeX\" || space === \"shapeY\"){\r\n\t\t\t\t\t\t// clone a fill so we can modify properly directly\r\n\t\t\t\t\t\tfill = gfx.makeParameters(gfx.defaultLinearGradient, fill);\r\n\t\t\t\t\t\tfill.space = space;\r\n\t\t\t\t\t\t// process dimensions\r\n\t\t\t\t\t\tif(space === \"shape\" || space === \"shapeX\"){\r\n\t\t\t\t\t\t\t// process X\r\n\t\t\t\t\t\t\tspan = bbox.width;\r\n\t\t\t\t\t\t\tfill.x1 = bbox.x + span * fill.x1 / 100;\r\n\t\t\t\t\t\t\tfill.x2 = bbox.x + span * fill.x2 / 100;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(space === \"shape\" || space === \"shapeY\"){\r\n\t\t\t\t\t\t\t// process Y\r\n\t\t\t\t\t\t\tspan = bbox.height;\r\n\t\t\t\t\t\t\tfill.y1 = bbox.y + span * fill.y1 / 100;\r\n\t\t\t\t\t\t\tfill.y2 = bbox.y + span * fill.y2 / 100;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"radial\":\r\n\t\t\t\t\tif(space === \"shape\"){\r\n\t\t\t\t\t\t// this one is used exclusively for bubble charts and pie charts\r\n\t\t\t\t\t\t// clone a fill so we can modify properly directly\r\n\t\t\t\t\t\tfill = gfx.makeParameters(gfx.defaultRadialGradient, fill);\r\n\t\t\t\t\t\tfill.space = space;\r\n\t\t\t\t\t\t// process both dimensions\r\n\t\t\t\t\t\tfill.cx = bbox.x + bbox.width  / 2;\r\n\t\t\t\t\t\tfill.cy = bbox.y + bbox.height / 2;\r\n\t\t\t\t\t\tfill.r  = fill.r * bbox.width  / 200;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"pattern\":\r\n\t\t\t\t\tif(space === \"shape\" || space === \"shapeX\" || space === \"shapeY\"){\r\n\t\t\t\t\t\t// clone a fill so we can modify properly directly\r\n\t\t\t\t\t\tfill = gfx.makeParameters(gfx.defaultPattern, fill);\r\n\t\t\t\t\t\tfill.space = space;\r\n\t\t\t\t\t\t// process dimensions\r\n\t\t\t\t\t\tif(space === \"shape\" || space === \"shapeX\"){\r\n\t\t\t\t\t\t\t// process X\r\n\t\t\t\t\t\t\tspan = bbox.width;\r\n\t\t\t\t\t\t\tfill.x = bbox.x + span * fill.x / 100;\r\n\t\t\t\t\t\t\tfill.width = span * fill.width / 100;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(space === \"shape\" || space === \"shapeY\"){\r\n\t\t\t\t\t\t\t// process Y\r\n\t\t\t\t\t\t\tspan = bbox.height;\r\n\t\t\t\t\t\t\tfill.y = bbox.y + span * fill.y / 100;\r\n\t\t\t\t\t\t\tfill.height = span * fill.height / 100;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn fill;\r\n\t\t},\r\n\t\t_pseudoRadialFill: function(fill, center, radius, start, end){\r\n\t\t\t// process pseudo-radial fills\r\n\t\t\tif(!fill || fill.type !== \"radial\" || fill.space !== \"shape\"){\r\n\t\t\t\treturn fill;\r\n\t\t\t}\r\n\t\t\t// clone and normalize fill\r\n\t\t\tvar space = fill.space;\r\n\t\t\tfill = gfx.makeParameters(gfx.defaultRadialGradient, fill);\r\n\t\t\tfill.space = space;\r\n\t\t\tif(arguments.length < 4){\r\n\t\t\t\t// process both dimensions\r\n\t\t\t\tfill.cx = center.x;\r\n\t\t\t\tfill.cy = center.y;\r\n\t\t\t\tfill.r  = fill.r * radius / 100;\r\n\t\t\t\treturn fill;\r\n\t\t\t}\r\n\t\t\t// convert to a linear gradient\r\n\t\t\tvar angle = arguments.length < 5 ? start : (end + start) / 2;\r\n\t\t\treturn {\r\n\t\t\t\ttype: \"linear\",\r\n\t\t\t\tx1: center.x,\r\n\t\t\t\ty1: center.y,\r\n\t\t\t\tx2: center.x + fill.r * radius * Math.cos(angle) / 100,\r\n\t\t\t\ty2: center.y + fill.r * radius * Math.sin(angle) / 100,\r\n\t\t\t\tcolors: fill.colors\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n});\r\n"]}