{"version":3,"sources":["charting/themes/ThreeD.js"],"names":["define","lang","ArrayUtil","Theme","gradientGenerator","PrimaryColors","themes","defaultFill","type","space","x1","y1","x2","y2","cyl3dMap","o","i","cyl3dFills","map","c","fill","delegate","hilite","colors","generateGradientByIntensity","color","r","g","b","sanitize","ThreeD","clone","series","shadow","dx","dy","width","next","elementType","mixin","doPost","index","this","_current","seriesThemes","length","s","old","theme","prototype","apply","arguments"],"mappings":";;;;;;;AAAAA,QAAQ,kBAAmB,mBAAoB,WAAY,sBAAuB,kBAAmB,cAAkC,YACtI,SAASC,EAAMC,EAAWC,EAAOC,EAAmBC,EAAeC,GAEnE,IACCC,GAAeC,KAAM,SAAUC,MAAO,QAASC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAAKC,GAAI,GAE1EC,IACEC,EAAG,EAAMC,EAAG,MAAOD,EAAG,IAAMC,EAAG,MAAOD,EAAG,IAAMC,EAAG,MAAOD,EAAG,GAAMC,EAAG,MACrED,EAAG,IAAMC,EAAG,MAAOD,EAAG,IAAMC,EAAG,MAAOD,EAAG,IAAMC,EAAG,MAAOD,EAAG,IAAMC,EAAG,MACrED,EAAG,GAAMC,EAAG,MAAOD,EAAG,GAAMC,EAAG,MAAOD,EAAG,EAAMC,EAAG,MAGpDC,EAAaf,EAAUgB,KATV,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,YAS1B,SAASC,GAC3C,IAAIC,EAAOnB,EAAKoB,SAASd,GAExBe,GADSF,EAAKG,OAASnB,EAAkBoB,4BAA4BL,EAAGL,IAH5D,GAIiBW,MAM9B,OAJAH,EAAOI,GAN2B,IAOlCJ,EAAOK,GAP2B,IAQlCL,EAAOM,GAR2B,IASlCN,EAAOO,WACAT,IAoBT,OAjBAd,EAAOwB,OAASzB,EAAc0B,QAC9BzB,EAAOwB,OAAOE,OAAOC,QAAUC,GAAI,EAAGC,GAAI,EAAGC,MAAO,EAAGX,OAAQ,EAAG,EAAG,EAAG,MAExEnB,EAAOwB,OAAOO,KAAO,SAASC,EAAaC,EAAOC,GACjD,GAAkB,OAAfF,GAAuC,UAAfA,EAAwB,CAElD,IAAIG,EAAQC,KAAKC,SAAWD,KAAKE,aAAaC,OAC7CC,EAAIJ,KAAKE,aAAaH,GAAQM,EAAMD,EAAE1B,KACvC0B,EAAE1B,KAAOH,EAAWwB,GACpB,IAAIO,EAAQ7C,EAAM8C,UAAUZ,KAAKa,MAAMR,KAAMS,WAG7C,OADAL,EAAE1B,KAAO2B,EACFC,EAER,OAAO7C,EAAM8C,UAAUZ,KAAKa,MAAMR,KAAMS,YAGlC7C,EAAOwB","file":"../../../charting/themes/ThreeD.js","sourcesContent":["define([\"dojo/_base/lang\", \"dojo/_base/array\", \"../Theme\", \"./gradientGenerator\", \"./PrimaryColors\", \"dojo/colors\" /* for sanitize */, \"./common\"],\r\n\tfunction(lang, ArrayUtil, Theme, gradientGenerator, PrimaryColors, themes){\r\n\r\n\tvar colors = [\"#f00\", \"#0f0\", \"#00f\", \"#ff0\", \"#0ff\", \"#f0f\", \"./common\"],\t// the same is in PrimaryColors\r\n\t\tdefaultFill = {type: \"linear\", space: \"shape\", x1: 0, y1: 0, x2: 100, y2: 0},\r\n\t\t// 3D cylinder map is calculated using dojox.gfx3d\r\n\t\tcyl3dMap = [\r\n\t\t\t{o: 0.00, i: 174}, {o: 0.08, i: 231}, {o: 0.18, i: 237}, {o: 0.30, i: 231},\r\n\t\t\t{o: 0.39, i: 221}, {o: 0.49, i: 206}, {o: 0.58, i: 187}, {o: 0.68, i: 165},\r\n\t\t\t{o: 0.80, i: 128}, {o: 0.90, i: 102}, {o: 1.00, i: 174}\r\n\t\t],\r\n\t\thiliteIndex = 2, hiliteIntensity = 100,\r\n\t\tcyl3dFills = ArrayUtil.map(colors, function(c){\r\n\t\t\tvar fill = lang.delegate(defaultFill),\r\n\t\t\t\tcolors = fill.colors = gradientGenerator.generateGradientByIntensity(c, cyl3dMap),\r\n\t\t\t\thilite = colors[hiliteIndex].color;\r\n\t\t\t// add highlight\r\n\t\t\thilite.r += hiliteIntensity;\r\n\t\t\thilite.g += hiliteIntensity;\r\n\t\t\thilite.b += hiliteIntensity;\r\n\t\t\thilite.sanitize();\r\n\t\t\treturn fill;\r\n\t\t});\r\n\r\n\tthemes.ThreeD = PrimaryColors.clone();\r\n\tthemes.ThreeD.series.shadow = {dx: 1, dy: 1, width: 3, color: [0, 0, 0, 0.15]};\r\n\r\n\tthemes.ThreeD.next = function(elementType, mixin, doPost){\r\n\t\tif(elementType == \"bar\" || elementType == \"column\"){\r\n\t\t\t// custom processing for bars and columns: substitute fills\r\n\t\t\tvar index = this._current % this.seriesThemes.length,\r\n\t\t\t\ts = this.seriesThemes[index], old = s.fill;\r\n\t\t\ts.fill = cyl3dFills[index];\r\n\t\t\tvar theme = Theme.prototype.next.apply(this, arguments);\r\n\t\t\t// cleanup\r\n\t\t\ts.fill = old;\r\n\t\t\treturn theme;\r\n\t\t}\r\n\t\treturn Theme.prototype.next.apply(this, arguments);\r\n\t};\r\n\t\r\n\treturn themes.ThreeD;\r\n});\r\n"]}