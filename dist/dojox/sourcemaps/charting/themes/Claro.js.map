{"version":3,"sources":["charting/themes/Claro.js"],"names":["define","Theme","gradutils","themes","g","generateGradient","defaultFill","type","space","x1","y1","x2","y2","Claro","chart","fill","colors","offset","color","stroke","plotarea","axis","width","tick","position","font","fontColor","series","outline","marker","seriesThemes","markerThemes","next","elementType","mixin","doPost","s","theme","isLine","this","_current","length","m","prototype","apply","arguments","post","reverse"],"mappings":";;;;;;;AAAAA,QAAQ,WAAY,sBAAuB,YAAa,SAASC,EAAOC,EAAWC,GAGlF,IAAIC,EAAIH,EAAMI,iBACbC,GAAeC,KAAM,SAAUC,MAAO,QAASC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,KAoGzE,OAlGAT,EAAOU,MAAQ,IAAIZ,GAClBa,OACCC,MACCR,KAAM,SACNE,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IACzBI,SACGC,OAAQ,EAAGC,MAAO,YAClBD,OAAQ,EAAGC,MAAO,aAGtBC,QAAYD,MAAO,YAEpBE,UACCL,MACCR,KAAM,SACNE,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IACzBI,SACGC,OAAQ,EAAGC,MAAO,YAClBD,OAAQ,EAAGC,MAAO,cAIvBG,MACCF,QACCD,MAAO,UACPI,MAAO,GAERC,MACCL,MAAW,UACXM,SAAW,SACXC,KAAW,sDACXC,UAAW,YAGbC,QACCR,QAAUG,MAAO,IAAKJ,MAAO,QAC7BU,QAAS,KACTH,KAAM,sDACNC,UAAW,WAEZG,QACCV,QAAUG,MAAO,KAAMJ,MAAO,WAC9BU,SAAUN,MAAO,KAAMJ,MAAO,WAC9BO,KAAM,sDACNC,UAAW,WAEZI,eACEf,KAAMX,EAAEE,EAAa,UAAW,aAChCS,KAAMX,EAAEE,EAAa,UAAW,aAChCS,KAAMX,EAAEE,EAAa,UAAW,aAChCS,KAAMX,EAAEE,EAAa,UAAW,aAChCS,KAAMX,EAAEE,EAAa,UAAW,aAElCyB,eACEhB,KAAM,UAAWI,QAASD,MAAO,UACjCH,KAAM,UAAWI,QAASD,MAAO,UACjCH,KAAM,UAAWI,QAASD,MAAO,UACjCH,KAAM,UAAWI,QAASD,MAAO,UACjCH,KAAM,UAAWI,QAASD,MAAO,YAIpCf,EAAOU,MAAMmB,KAAO,SAASC,EAAaC,EAAOC,GAChD,IACCC,EAAGC,EADAC,EAAwB,QAAfL,EAEb,GAAGK,GAAyB,QAAfL,EAAsB,CAElCG,EAAIG,KAAKT,aAAaS,KAAKC,SAAWD,KAAKT,aAAaW,QACxD,IAAIC,EAAIH,KAAKR,aAAaQ,KAAKC,SAAWD,KAAKR,aAAaU,QAW5D,OAVAL,EAAErB,KAAKP,MAAQ,OACZ8B,IACFF,EAAEjB,QAAYG,MAAO,EAAGJ,MAAOkB,EAAErB,KAAKC,OAAO,GAAGE,QAEjDwB,EAAEd,SAAYN,MAAO,KAAMJ,MAAOwB,EAAE3B,MACpCsB,EAAQpC,EAAM0C,UAAUX,KAAKY,MAAML,KAAMM,kBAElCT,EAAER,eACFQ,EAAEjB,OACTiB,EAAErB,KAAKP,MAAQ,QACR6B,EACF,MAAkB,eAAfJ,IACRG,EAAIG,KAAKT,aAAaS,KAAKC,SAAWD,KAAKT,aAAaW,SACtD1B,KAAKP,MAAQ,OACf4B,EAAEjB,QAAYG,MAAO,EAAGJ,MAAOkB,EAAErB,KAAKC,OAAO,GAAGE,OAChDmB,EAAQpC,EAAM0C,UAAUX,KAAKY,MAAML,KAAMM,YAGnC5C,EAAM0C,UAAUX,KAAKY,MAAML,KAAMM,YAGzC1C,EAAOU,MAAMiC,KAAO,SAAST,EAAOJ,GAKnC,OAJAI,EAAQpC,EAAM0C,UAAUG,KAAKF,MAAML,KAAMM,WACtB,SAAfZ,GAAyC,UAAfA,IAA4BI,EAAMV,OAAOZ,MAAkC,UAA1BsB,EAAMV,OAAOZ,KAAKR,OAChG8B,EAAMV,OAAOZ,KAAOb,EAAU6C,QAAQV,EAAMV,OAAOZ,OAE7CsB,GAGDlC,EAAOU","file":"../../../charting/themes/Claro.js","sourcesContent":["define([\"../Theme\", \"dojox/gfx/gradutils\", \"./common\"], function(Theme, gradutils, themes){\r\n\t// created by Tom Trenka\r\n\r\n\tvar g = Theme.generateGradient,\r\n\t\tdefaultFill = {type: \"linear\", space: \"shape\", x1: 0, y1: 0, x2: 0, y2: 100};\r\n\t\r\n\tthemes.Claro = new Theme({\r\n\t\tchart: {\r\n\t\t\tfill:\t   {\r\n\t\t\t\ttype: \"linear\",\r\n\t\t\t\tx1: 0, x2: 0, y1: 0, y2: 100,\r\n\t\t\t\tcolors: [\r\n\t\t\t\t\t{ offset: 0, color: \"#dbdbdb\" },\r\n\t\t\t\t\t{ offset: 1, color: \"#efefef\" }\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\tstroke:    {color: \"#b5bcc7\"}\r\n\t\t},\r\n\t\tplotarea: {\r\n\t\t\tfill:\t   {\r\n\t\t\t\ttype: \"linear\",\r\n\t\t\t\tx1: 0, x2: 0, y1: 0, y2: 100,\r\n\t\t\t\tcolors: [\r\n\t\t\t\t\t{ offset: 0, color: \"#dbdbdb\" },\r\n\t\t\t\t\t{ offset: 1, color: \"#efefef\" }\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t},\r\n\t\taxis:{\r\n\t\t\tstroke:\t{ // the axis itself\r\n\t\t\t\tcolor: \"#888c76\",\r\n\t\t\t\twidth: 1\r\n\t\t\t},\r\n\t\t\ttick: {\t// used as a foundation for all ticks\r\n\t\t\t\tcolor:     \"#888c76\",\r\n\t\t\t\tposition:  \"center\",\r\n\t\t\t\tfont:      \"normal normal normal 7pt Verdana, Arial, sans-serif\",\t// labels on axis\r\n\t\t\t\tfontColor: \"#888c76\"\t\t\t\t\t\t\t\t// color of labels\r\n\t\t\t}\r\n\t\t},\r\n\t\tseries: {\r\n\t\t\tstroke:  {width: 2.5, color: \"#fff\"},\r\n\t\t\toutline: null,\r\n\t\t\tfont: \"normal normal normal 7pt Verdana, Arial, sans-serif\",\r\n\t\t\tfontColor: \"#131313\"\r\n\t\t},\r\n\t\tmarker: {\r\n\t\t\tstroke:  {width: 1.25, color: \"#131313\"},\r\n\t\t\toutline: {width: 1.25, color: \"#131313\"},\r\n\t\t\tfont: \"normal normal normal 8pt Verdana, Arial, sans-serif\",\r\n\t\t\tfontColor: \"#131313\"\r\n\t\t},\r\n\t\tseriesThemes: [\r\n\t\t\t{fill: g(defaultFill, \"#2a6ead\", \"#3a99f2\")},\r\n\t\t\t{fill: g(defaultFill, \"#613e04\", \"#996106\")},\r\n\t\t\t{fill: g(defaultFill, \"#0e3961\", \"#155896\")},\r\n\t\t\t{fill: g(defaultFill, \"#55aafa\", \"#3f7fba\")},\r\n\t\t\t{fill: g(defaultFill, \"#ad7b2a\", \"#db9b35\")}\r\n\t\t],\r\n\t\tmarkerThemes: [\r\n\t\t\t{fill: \"#2a6ead\", stroke: {color: \"#fff\"}},\r\n\t\t\t{fill: \"#613e04\", stroke: {color: \"#fff\"}},\r\n\t\t\t{fill: \"#0e3961\", stroke: {color: \"#fff\"}},\r\n\t\t\t{fill: \"#55aafa\", stroke: {color: \"#fff\"}},\r\n\t\t\t{fill: \"#ad7b2a\", stroke: {color: \"#fff\"}}\r\n\t\t]\r\n\t});\r\n\t\r\n\tthemes.Claro.next = function(elementType, mixin, doPost){\r\n\t\tvar isLine = elementType == \"line\",\r\n\t\t\ts, theme;\r\n\t\tif(isLine || elementType == \"area\"){\r\n\t\t\t// custom processing for lines: substitute colors\r\n\t\t\ts = this.seriesThemes[this._current % this.seriesThemes.length];\r\n\t\t\tvar m = this.markerThemes[this._current % this.markerThemes.length];\r\n\t\t\ts.fill.space = \"plot\";\r\n\t\t\tif(isLine){\r\n\t\t\t\ts.stroke  = { width: 4, color: s.fill.colors[0].color};\r\n\t\t\t}\r\n\t\t\tm.outline = { width: 1.25, color: m.fill };\r\n\t\t\ttheme = Theme.prototype.next.apply(this, arguments);\r\n\t\t\t// cleanup\r\n\t\t\tdelete s.outline;\r\n\t\t\tdelete s.stroke;\r\n\t\t\ts.fill.space = \"shape\";\r\n\t\t\treturn theme;\r\n\t\t}else if(elementType == \"candlestick\"){\r\n\t\t\ts = this.seriesThemes[this._current % this.seriesThemes.length];\r\n\t\t\ts.fill.space = \"plot\";\r\n\t\t\ts.stroke  = { width: 1, color: s.fill.colors[0].color};\r\n\t\t\ttheme = Theme.prototype.next.apply(this, arguments);\r\n\t\t\treturn theme;\r\n\t\t}\r\n\t\treturn Theme.prototype.next.apply(this, arguments);\r\n\t};\r\n\t\r\n\tthemes.Claro.post = function(theme, elementType){\r\n\t\ttheme = Theme.prototype.post.apply(this, arguments);\r\n\t\tif((elementType == \"slice\" || elementType == \"circle\") && theme.series.fill && theme.series.fill.type == \"radial\"){\r\n\t\t\ttheme.series.fill = gradutils.reverse(theme.series.fill);\r\n\t\t}\r\n\t\treturn theme;\r\n\t};\r\n\t\r\n\treturn themes.Claro;\r\n});\r\n"]}