{"version":3,"sources":["charting/themes/gradientGenerator.js"],"names":["define","lang","arr","Color","Theme","dxcolor","themes","gg","getObject","generateFills","colors","fillPattern","lumFrom","lumTo","map","c","generateHslGradient","updateFills","forEach","t","fill","type","generateMiniTheme","lumStroke","stroke","color","generateHslColor","generateGradientByIntensity","intensityMap","stop","s","i","offset","o","r","g","b","a"],"mappings":";;;;;;;AAAAA,QAAQ,kBAAmB,mBAAoB,mBAAoB,WAAY,oBAAqB,YACnG,SAASC,EAAMC,EAAKC,EAAOC,EAAOC,EAASC,GAE3C,IAAIC,EAAKN,EAAKO,UAAU,qBAAqB,EAAMF,GA4EnD,OA1EAC,EAAGE,cAAgB,SAASC,EAAQC,EAAaC,EAASC,GAWzD,OAAOX,EAAIY,IAAIJ,EAAQ,SAASK,GAC/B,OAAOX,EAAMY,oBAAoBD,EAAGJ,EAAaC,EAASC,MAI5DN,EAAGU,YAAc,SAASX,EAAQK,EAAaC,EAASC,GAWvDX,EAAIgB,QAAQZ,EAAQ,SAASa,GACzBA,EAAEC,OAASD,EAAEC,KAAKC,OACpBF,EAAEC,KAAOhB,EAAMY,oBAAoBG,EAAEC,KAAMT,EAAaC,EAASC,OAKpEN,EAAGe,kBAAoB,SAASZ,EAAQC,EAAaC,EAASC,EAAOU,GAapE,OAAOrB,EAAIY,IAAIJ,EAAQ,SAASK,GAE/B,OADAA,EAAI,IAAIV,EAAQF,MAAMY,IAErBK,KAAQhB,EAAMY,oBAAoBD,EAAGJ,EAAaC,EAASC,GAC3DW,QAASC,MAAOrB,EAAMsB,iBAAiBX,EAAGQ,QAK7ChB,EAAGoB,4BAA8B,SAASF,EAAOG,GAShD,OADAH,EAAQ,IAAItB,EAAMsB,GACXvB,EAAIY,IAAIc,EAAc,SAASC,GACrC,IAAIC,EAAID,EAAKE,EAAI,IACjB,OACCC,OAAQH,EAAKI,EACbR,MAAQ,IAAItB,GAAOsB,EAAMS,EAAIJ,EAAGL,EAAMU,EAAIL,EAAGL,EAAMW,EAAIN,EAAGL,EAAMY,QAK5D9B","file":"../../../charting/themes/gradientGenerator.js","sourcesContent":["define([\"dojo/_base/lang\", \"dojo/_base/array\", \"dojo/_base/Color\", \"../Theme\", \"dojox/color/_base\", \"./common\"], \r\n\tfunction(lang, arr, Color, Theme, dxcolor, themes){\r\n\t\r\n\tvar gg = lang.getObject(\"gradientGenerator\", true, themes);\r\n\r\n\tgg.generateFills = function(colors, fillPattern, lumFrom, lumTo){\r\n\t\t// summary:\r\n\t\t//\t\tgenerates 2-color gradients using pure colors, a fill pattern, and two luminance values\r\n\t\t// colors: Array\r\n\t\t//\t\tArray of colors to generate gradients for each.\r\n\t\t// fillPattern: Object\r\n\t\t//\t\tGradient fill descriptor which colors list will be generated.\r\n\t\t// lumFrom: Number\r\n\t\t//\t\tInitial luminance value (0-100).\r\n\t\t// lumTo: Number\r\n\t\t//\t\tFinal luminance value (0-100).\r\n\t\treturn arr.map(colors, function(c){\t// Array\r\n\t\t\treturn Theme.generateHslGradient(c, fillPattern, lumFrom, lumTo);\r\n\t\t});\r\n\t};\r\n\t\r\n\tgg.updateFills = function(themes, fillPattern, lumFrom, lumTo){\r\n\t\t// summary:\r\n\t\t//\t\ttransforms solid color fills into 2-color gradients using a fill pattern, and two luminance values\r\n\t\t// themes: Array\r\n\t\t//\t\tArray of mini-themes (usually series themes or marker themes), which fill will be transformed.\r\n\t\t// fillPattern: Object\r\n\t\t//\t\tGradient fill descriptor which colors list will be generated.\r\n\t\t// lumFrom: Number\r\n\t\t//\t\tInitial luminance value (0-100).\r\n\t\t// lumTo: Number\r\n\t\t//\t\tFinal luminance value (0-100).\r\n\t\tarr.forEach(themes, function(t){\r\n\t\t\tif(t.fill && !t.fill.type){\r\n\t\t\t\tt.fill = Theme.generateHslGradient(t.fill, fillPattern, lumFrom, lumTo);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\t\r\n\tgg.generateMiniTheme = function(colors, fillPattern, lumFrom, lumTo, lumStroke){\r\n\t\t// summary:\r\n\t\t//\t\tgenerates mini-themes with 2-color gradients using colors, a fill pattern, and three luminance values\r\n\t\t// colors: Array\r\n\t\t//\t\tArray of colors to generate gradients for each.\r\n\t\t// fillPattern: Object\r\n\t\t//\t\tGradient fill descriptor which colors list will be generated.\r\n\t\t// lumFrom: Number\r\n\t\t//\t\tInitial luminance value (0-100).\r\n\t\t// lumTo: Number\r\n\t\t//\t\tFinal luminance value (0-100).\r\n\t\t// lumStroke: Number\r\n\t\t//\t\tStroke luminance value (0-100).\r\n\t\treturn arr.map(colors, function(c){\t// Array\r\n\t\t\tc = new dxcolor.Color(c);\r\n\t\t\treturn {\r\n\t\t\t\tfill:   Theme.generateHslGradient(c, fillPattern, lumFrom, lumTo),\r\n\t\t\t\tstroke: {color: Theme.generateHslColor(c, lumStroke)}\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\t\r\n\tgg.generateGradientByIntensity = function(color, intensityMap){\r\n\t\t// summary:\r\n\t\t//\t\tgenerates gradient colors using an intensity map\r\n\t\t// color: dojo.Color\r\n\t\t//\t\tColor to use to generate gradients.\r\n\t\t// intensityMap: Array\r\n\t\t//\t\tArray of tuples {o, i}, where o is a gradient offset (0-1),\r\n\t\t//\t\tand i is an intensity (0-255).\r\n\t\tcolor = new Color(color);\r\n\t\treturn arr.map(intensityMap, function(stop){\t// Array\r\n\t\t\tvar s = stop.i / 255;\r\n\t\t\treturn {\r\n\t\t\t\toffset: stop.o,\r\n\t\t\t\tcolor:  new Color([color.r * s, color.g * s, color.b * s, color.a])\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\t\r\n\treturn gg;\r\n});\r\n"]}