{"version":3,"sources":["html/metrics.js"],"names":["define","kernel","lang","has","ready","UnloadUtil","Window","DOMGeom","dhm","getObject","dojox","getFontMeasurements","oldStyle","heights","1em","1ex","100%","12pt","16px","xx-small","x-small","small","medium","large","x-large","xx-large","doc","documentElement","style","fontSize","div","createElement","ds","p","position","left","top","width","height","borderWidth","margin","padding","outline","lineHeight","overflow","body","appendChild","Math","round","offsetHeight","removeChild","fontMeasurements","getCachedFontMeasurements","recalculate","measuringNode","empty","getTextBox","text","className","m","s","c","visibility","arguments","length","i","innerHTML","box","w","parentNode","scrollWidth","scroll","h","getScrollbar","_fontResizeNode","initOnFontResize","interval","f","fs","display","onreadystatechange","contentWindow","document","readyState","onresize","parent","_scopeName","html","metrics","_fontresize","onload","setAttribute","onFontResize","addOnUnload","n","cssText","offsetWidth","clientWidth","clientHeight","e","config","fontSizeWatch"],"mappings":"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","file":"../../html/metrics.js","sourcesContent":["define([\"dojo/_base/kernel\",\"dojo/_base/lang\", \"dojo/_base/sniff\", \"dojo/ready\", \"dojo/_base/unload\",\r\n\t\t\"dojo/_base/window\", \"dojo/dom-geometry\"],\r\n  function(kernel,lang,has,ready,UnloadUtil,Window,DOMGeom){\r\n\tvar dhm = lang.getObject(\"dojox.html.metrics\",true);\r\n\tvar dojox = lang.getObject(\"dojox\");\r\n\r\n\t//\tderived from Morris John's emResized measurer\r\n\tdhm.getFontMeasurements = function(){\r\n\t\t// summary:\r\n\t\t//\t\tReturns an object that has pixel equivilents of standard font size values.\r\n\t\tvar heights = {\r\n\t\t\t'1em':0, '1ex':0, '100%':0, '12pt':0, '16px':0, 'xx-small':0, 'x-small':0,\r\n\t\t\t'small':0, 'medium':0, 'large':0, 'x-large':0, 'xx-large':0\r\n\t\t};\r\n\t\r\n\t\tvar oldStyle;\t\r\n\t\tif(has(\"ie\")){\r\n\t\t\t//\tWe do a font-size fix if and only if one isn't applied already.\r\n\t\t\t// NOTE: If someone set the fontSize on the HTML Element, this will kill it.\r\n\t\t\toldStyle = Window.doc.documentElement.style.fontSize || \"\";\r\n\t\t\tif(!oldStyle){\r\n\t\t\t\tWindow.doc.documentElement.style.fontSize=\"100%\";\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t\r\n\t\t//\tset up the measuring node.\r\n\t\tvar div=Window.doc.createElement(\"div\");\r\n\t\tvar ds = div.style;\r\n\t\tds.position=\"absolute\";\r\n\t\tds.left=\"-100px\";\r\n\t\tds.top=\"0\";\r\n\t\tds.width=\"30px\";\r\n\t\tds.height=\"1000em\";\r\n\t\tds.borderWidth=\"0\";\r\n\t\tds.margin=\"0\";\r\n\t\tds.padding=\"0\";\r\n\t\tds.outline=\"0\";\r\n\t\tds.lineHeight=\"1\";\r\n\t\tds.overflow=\"hidden\";\r\n\t\tWindow.body().appendChild(div);\r\n\t\r\n\t\t//\tdo the measurements.\r\n\t\tfor(var p in heights){\r\n\t\t\tds.fontSize = p;\r\n\t\t\theights[p] = Math.round(div.offsetHeight * 12/16) * 16/12 / 1000;\r\n\t\t}\r\n\r\n\t\tif(has(\"ie\")){\r\n\t\t\t// Restore the font to its old style.\r\n\t\t\tWindow.doc.documentElement.style.fontSize = oldStyle;\r\n\t\t}\r\n\t\t\r\n\t\tWindow.body().removeChild(div);\r\n\t\tdiv = null;\r\n\t\treturn heights; \t//\tobject\r\n\t};\r\n\r\n\tvar fontMeasurements = null;\r\n\t\r\n\tdhm.getCachedFontMeasurements = function(recalculate){\r\n\t\tif(recalculate || !fontMeasurements){\r\n\t\t\tfontMeasurements = dhm.getFontMeasurements();\r\n\t\t}\r\n\t\treturn fontMeasurements;\r\n\t};\r\n\r\n\tvar measuringNode = null, empty = {};\r\n\tdhm.getTextBox = function(/* String */ text, /* Object */ style, /* String? */ className){\r\n\t\tvar m, s;\r\n\t\tif(!measuringNode){\r\n\t\t\tm = measuringNode = Window.doc.createElement(\"div\");\r\n\t\t\t// Container that we can set constraints on so that it doesn't\r\n\t\t\t// trigger a scrollbar.\r\n\t\t\tvar c = Window.doc.createElement(\"div\");\r\n\t\t\tc.appendChild(m);\r\n\t\t\ts = c.style;\r\n\t\t\ts.overflow='scroll';\r\n\t\t\ts.position = \"absolute\";\r\n\t\t\ts.left = \"0px\";\r\n\t\t\ts.top = \"-10000px\";\r\n\t\t\ts.width = \"1px\";\r\n\t\t\ts.height = \"1px\";\r\n\t\t\ts.visibility = \"hidden\";\r\n\t\t\ts.borderWidth = \"0\";\r\n\t\t\ts.margin = \"0\";\r\n\t\t\ts.padding = \"0\";\r\n\t\t\ts.outline = \"0\";\r\n\t\t\tWindow.body().appendChild(c);\r\n\t\t}else{\r\n\t\t\tm = measuringNode;\r\n\t\t}\r\n\t\t// reset styles\r\n\t\tm.className = \"\";\r\n\t\ts = m.style;\r\n\t\ts.borderWidth = \"0\";\r\n\t\ts.margin = \"0\";\r\n\t\ts.padding = \"0\";\r\n\t\ts.outline = \"0\";\r\n\t\t// set new style\r\n\t\tif(arguments.length > 1 && style){\r\n\t\t\tfor(var i in style){\r\n\t\t\t\tif(i in empty){ continue; }\r\n\t\t\t\ts[i] = style[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\t// set classes\r\n\t\tif(arguments.length > 2 && className){\r\n\t\t\tm.className = className;\r\n\t\t}\r\n\t\t// take a measure\r\n\t\tm.innerHTML = text;\r\n\t\tvar box = DOMGeom.position(m);\r\n\t\t// position doesn't report right (reports 1, since parent is 1)\r\n\t\t// So we have to look at the scrollWidth to get the real width\r\n\t\t// Height is right.\r\n\t\tbox.w = m.parentNode.scrollWidth;\r\n\t\treturn box;\r\n\t};\r\n\r\n\t//\tdetermine the scrollbar sizes on load.\r\n\tvar scroll={ w:16, h:16 };\r\n\tdhm.getScrollbar=function(){ return { w:scroll.w, h:scroll.h }; };\r\n\r\n\tdhm._fontResizeNode = null;\r\n\r\n\tdhm.initOnFontResize = function(interval){\r\n\t\tvar f = dhm._fontResizeNode = Window.doc.createElement(\"iframe\");\r\n\t\tvar fs = f.style;\r\n\t\tfs.position = \"absolute\";\r\n\t\tfs.width = \"5em\";\r\n\t\tfs.height = \"10em\";\r\n\t\tfs.top = \"-10000px\";\r\n\t\tfs.display = \"none\";\r\n\t\tif(has(\"ie\")){\r\n\t\t\tf.onreadystatechange = function(){\r\n\t\t\t\tif(f.contentWindow.document.readyState == \"complete\"){\r\n\t\t\t\t\tf.onresize = f.contentWindow.parent[dojox._scopeName].html.metrics._fontresize;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}else{\r\n\t\t\tf.onload = function(){\r\n\t\t\t\tf.contentWindow.onresize = f.contentWindow.parent[dojox._scopeName].html.metrics._fontresize;\r\n\t\t\t};\r\n\t\t}\r\n\t\t//The script tag is to work around a known firebug race condition.  See comments in bug #9046\r\n\t\tf.setAttribute(\"src\", \"javascript:'<html><head><script>if(\\\"loadFirebugConsole\\\" in window){window.loadFirebugConsole();}</script></head><body></body></html>'\");\r\n\t\tWindow.body().appendChild(f);\r\n\t\tdhm.initOnFontResize = function(){};\r\n\t};\r\n\r\n\tdhm.onFontResize = function(){};\r\n\tdhm._fontresize = function(){\r\n\t\tdhm.onFontResize();\r\n\t};\r\n\r\n\tUnloadUtil.addOnUnload(function(){\r\n\t\t// destroy our font resize iframe if we have one\r\n\t\tvar f = dhm._fontResizeNode;\r\n\t\tif(f){\r\n\t\t\tif(has(\"ie\") && f.onresize){\r\n\t\t\t\tf.onresize = null;\r\n\t\t\t}else if(f.contentWindow && f.contentWindow.onresize){\r\n\t\t\t\tf.contentWindow.onresize = null;\r\n\t\t\t}\r\n\t\t\tdhm._fontResizeNode = null;\r\n\t\t}\r\n\t});\r\n\r\n\tready(function(){\r\n\t\t// getScrollbar metrics node\r\n\t\ttry{\r\n\t\t\tvar n=Window.doc.createElement(\"div\");\r\n\t\t\tn.style.cssText = \"top:0;left:0;width:100px;height:100px;overflow:scroll;position:absolute;visibility:hidden;\";\r\n\t\t\tWindow.body().appendChild(n);\r\n\t\t\tscroll.w = n.offsetWidth - n.clientWidth;\r\n\t\t\tscroll.h = n.offsetHeight - n.clientHeight;\r\n\t\t\tWindow.body().removeChild(n);\r\n\t\t\t//console.log(\"Scroll bar dimensions: \", scroll);\r\n\t\t\tdelete n;\r\n\t\t}catch(e){}\r\n\r\n\t\t// text size poll setup\r\n\t\tif(\"fontSizeWatch\" in kernel.config && !!kernel.config.fontSizeWatch){\r\n\t\t\tdhm.initOnFontResize();\r\n\t\t}\r\n\t});\r\n\treturn dhm;\r\n});"]}