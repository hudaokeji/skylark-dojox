{"version":3,"sources":["html/tests/entities.js"],"names":["dojo","provide","require","doh","register","name","runTest","t","encodedTxt","dojox","html","entities","encode","assertEqual","decodedTxt","decode","i","txt","expected","map","latin","length"],"mappings":";;;;;;;AAAAA,KAAKC,QAAQ,6BACbD,KAAKE,QAAQ,uBAEbC,IAAIC,SAAS,8BAGVC,KAAM,+BACNC,QAAS,SAASC,GAKjB,IAEIC,EAAaC,MAAMC,KAAKC,SAASC,OAF3B,6EAGVT,IAAIU,YAFW,gGAEWL,MAI3BH,KAAM,+BACNC,QAAS,SAASC,GAKjB,IAEIO,EAAaL,MAAMC,KAAKC,SAASI,OAF3B,iGAGVZ,IAAIU,YAFW,4EAEWC,MAI3BT,KAAM,gCACNC,QAAS,SAASC,GAKjB,IAGIS,EAHAC,EAAM,GACNC,EAAW,GACXC,EAAMV,MAAMC,KAAKC,SAASS,MAE9B,IAAIJ,EAAI,EAAGA,EAAIG,EAAIE,OAAQL,IAC1BC,GAAOE,EAAIH,GAAG,GACdE,GAAY,IAAMC,EAAIH,GAAG,GAAK,IAE/B,IAAIR,EAAaC,MAAMC,KAAKC,SAASC,OAAOK,GAC5Cd,IAAIU,YAAYK,EAAUV,MAI3BH,KAAM,gCACNC,QAAS,SAASC,GAKd,IAGIS,EAHAC,EAAM,GACNC,EAAW,GACXC,EAAMV,MAAMC,KAAKC,SAASS,MAE9B,IAAIJ,EAAI,EAAGA,EAAIG,EAAIE,OAAQL,IAC1BC,GAAO,IAAME,EAAIH,GAAG,GAAK,IACzBE,GAAYC,EAAIH,GAAG,GAEpB,IAAIF,EAAaL,MAAMC,KAAKC,SAASI,OAAOE,GAC5Cd,IAAIU,YAAYK,EAAUJ,MAI9BT,KAAM,6BACNC,QAAS,SAASC,GAKjB,IAEIC,EAAaC,MAAMC,KAAKC,SAASC,OAF3B,4EAEyC,IAAM,UACzDT,IAAIU,YAFW,+EAEWL,MAI3BH,KAAM,6BACNC,QAAS,SAASC,GAKjB,IAEIO,EAAaL,MAAMC,KAAKC,SAASI,OAF3B,iFAEyC,IAAM,UACzDZ,IAAIU,YAFW,0EAEWC","file":"../../../html/tests/entities.js","sourcesContent":["dojo.provide(\"dojox.html.tests.entities\");\r\ndojo.require(\"dojox.html.entities\");\r\n\r\ndoh.register(\"dojox.html.tests.entities\",\r\n\t[\r\n\t\t{\r\n\t\t\tname: \"Encode:  Basic HTML Entities\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of basic encoding of characters considered HTML entities\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of basic encoding of characters considered HTML entities\r\n\t\t\t\tvar txt = \"This is some \\\" text \\\" with & entities inside it that <need to be escaped>\";\r\n\t\t\t\tvar expected = \"This is some &quot; text &quot; with &amp; entities inside it that &lt;need to be escaped&gt;\";\r\n\t\t\t\tvar encodedTxt = dojox.html.entities.encode(txt);\r\n\t\t\t\tdoh.assertEqual(expected, encodedTxt);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Decode:  Basic HTML Entities\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of basic encoding of characters considered HTML entities\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of basic encoding of characters considered HTML entities\r\n\t\t\t\tvar txt = \"This is some &quot; text &quot; with &amp; entities inside it that &lt;need to be escaped&gt;\";\r\n\t\t\t\tvar expected = \"This is some \\\" text \\\" with & entities inside it that <need to be escaped>\";\r\n\t\t\t\tvar decodedTxt = dojox.html.entities.decode(txt);\r\n\t\t\t\tdoh.assertEqual(expected, decodedTxt);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Encode:  Basic Latin Entities\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of basic encoding of characters considered Latin type entities\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of basic encoding of characters considered Latin type entities\r\n\t\t\t\tvar txt = \"\";\r\n\t\t\t\tvar expected = \"\";\r\n\t\t\t\tvar map = dojox.html.entities.latin;\r\n\t\t\t\tvar i;\r\n\t\t\t\tfor(i = 0; i < map.length; i++){\r\n\t\t\t\t\ttxt += map[i][0];\r\n\t\t\t\t\texpected += \"&\" + map[i][1] + \";\";\r\n\t\t\t\t}\r\n\t\t\t\tvar encodedTxt = dojox.html.entities.encode(txt);\r\n\t\t\t\tdoh.assertEqual(expected, encodedTxt);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Decode:  Basic Latin Entities\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of basic decoding of characters considered Latin type entities\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of basic decoding of characters considered Latin type entities\r\n\t\t\t\t\t  var txt = \"\";\r\n\t\t\t\t\t  var expected = \"\";\r\n\t\t\t\t\t  var map = dojox.html.entities.latin;\r\n\t\t\t\t\t  var i;\r\n\t\t\t\t\t  for(i = 0; i < map.length; i++){\r\n\t\t\t\t\t\t  txt += \"&\" + map[i][1] + \";\";\r\n\t\t\t\t\t\t  expected += map[i][0];\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t  var decodedTxt = dojox.html.entities.decode(txt);\r\n\t\t\t\t\t  doh.assertEqual(expected, decodedTxt);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Encode:  Custom entity map\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of basic encoding using a custom map instead of the default ones.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of basic encoding using a custom map instead of the default ones.\r\n\t\t\t\tvar txt = \"This is some \\\" text with & entities inside it that <need to be escaped>\";\r\n\t\t\t\tvar expected = \"This is some &quot; text with & entities inside it that <need to be escaped>\";\r\n\t\t\t\tvar encodedTxt = dojox.html.entities.encode(txt, [[\"\\\"\", \"quot\"]]);\r\n\t\t\t\tdoh.assertEqual(expected, encodedTxt);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Decode:  Custom entity map\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of basic decoding using a custom map instead of the default ones.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of basic decoding using a custom map instead of the default ones.\r\n\t\t\t\tvar txt = \"This is some &quot; text with & entities inside it that <need to be escaped>\";\r\n\t\t\t\tvar expected = \"This is some \\\" text with & entities inside it that <need to be escaped>\";\r\n\t\t\t\tvar decodedTxt = dojox.html.entities.decode(txt, [[\"\\\"\", \"quot\"]]);\r\n\t\t\t\tdoh.assertEqual(expected, decodedTxt);\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n);\r\n"]}