{"version":3,"sources":["html/tests/format.js"],"names":["dojo","provide","require","doh","register","name","runTest","t","formattedTxt","dojox","html","format","prettyPrint","assertEqual","isIE","trim","timeout","deferred","Deferred","args","url","moduleUrl","toString","handleAs","preventCache","ufd","xhrGet","addCallback","fArgs","fd","fHtml","callback","e","errback","addErrback","error","err","console","log"],"mappings":"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","file":"../../../html/tests/format.js","sourcesContent":["dojo.provide(\"dojox.html.tests.format\");\r\ndojo.require(\"dojox.html.format\");\r\n\r\n\r\ndoh.register(\"dojox.html.tests.format\",\r\n\t[\r\n\t\t{\r\n\t\t\tname: \"Format:  Basic HTML Format test\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting.\r\n\t\t\t\tvar txt = \"<div><b>hello</b> this is some text.</div>\";\r\n\t\t\t\tvar expected = \t\"<div>\\n\" +\r\n\t\t\t\t\t\t\t\t\"\\t<b>hello</b> this is some text.\\n\" +\r\n\t\t\t\t\t\t\t\t\"</div>\\n\";\r\n\t\t\t\tvar formattedTxt = dojox.html.format.prettyPrint(txt);\r\n\t\t\t\tdoh.assertEqual(expected, formattedTxt);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Format:  Basic HTML Format test with three space indent\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with spaced indenting instead of tab\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with spaced indenting instead of tab\r\n\t\t\t\tvar txt = \"<div><b>hello</b> this is some text.</div>\";\r\n\t\t\t\tvar expected = \t\"<div>\\n\" +\r\n\t\t\t\t\t\t\t\t\"   <b>hello</b> this is some text.\\n\" +\r\n\t\t\t\t\t\t\t\t\"</div>\\n\";\r\n\t\t\t\tvar formattedTxt = dojox.html.format.prettyPrint(txt, 3);\r\n\t\t\t\tdoh.assertEqual(expected, formattedTxt);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Format:  Basic HTML Format test with three space indent and custom encoding\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with spaced indenting instead of tab\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with spaced indenting instead of tab\r\n\t\t\t\tvar txt = \"<div><b>hello</b> this is \\\"some\\\" entities & text.</div>\";\r\n\t\t\t\tvar expected = \t\"<div>\\n\" +\r\n\t\t\t\t\t\t\t\t\"   <b>hello</b> this is \\\"some\\\" entities &amp; text.\\n\" +\r\n\t\t\t\t\t\t\t\t\"</div>\\n\";\r\n\t\t\t\tvar formattedTxt = dojox.html.format.prettyPrint(txt, 3, -1, [[\"&\", \"amp\"]]);\r\n\t\t\t\tdoh.assertEqual(expected, formattedTxt);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Format:  Basic HTML Format test with comment node\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with a comment node\"\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with a comment node\"\r\n\t\t\t\tif(!dojo.isIE){\r\n\t\t\t\t\t// Hurray for IE, it sometimes just strips comment nodes from the\r\n\t\t\t\t\t// dom.  So we can't test this reliably.\r\n\t\t\t\t\tvar txt = \"<div><!-- This is a comment! --><br></div>\";\r\n\t\t\t\t\tvar expected = \t\"<div>\\n\" +\r\n\t\t\t\t\t\t\t\t\t\"   <!--\\n\" +\r\n\t\t\t\t\t\t\t\t\t\"      This is a comment!\\n\" +\r\n\t\t\t\t\t\t\t\t\t\"   -->\\n\" +\r\n\t\t\t\t\t\t\t\t\t\"   <br>\\n\" +\r\n\t\t\t\t\t\t\t\t\t\"</div>\\n\";\r\n\t\t\t\t\tvar formattedTxt = dojox.html.format.prettyPrint(txt, 3);\r\n\t\t\t\t\tdoh.assertEqual(expected, formattedTxt);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Format:  Basic HTML Format test with inline tags\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with spaced indenting instead of tab\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with spaced indenting instead of tab\r\n\t\t\t\tvar txt = \"<div><b>hello</b> <a href=\\\"http://example.com/\\\">Example.com</a> this is some text after the link.</div>\";\r\n\t\t\t\tvar expected = \t\"<div>\\n\" +\r\n\t\t\t\t\t\t\t\t\"   <b>hello</b> <a href=\\\"http://example.com/\\\">Example.com</a> this is some text after the link.\\n\" +\r\n\t\t\t\t\t\t\t\t\"</div>\\n\";\r\n\t\t\t\tvar formattedTxt = dojox.html.format.prettyPrint(txt, 3);\r\n\t\t\t\tdoh.assertEqual(expected, formattedTxt);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Format:  Basic HTML Format test with inline tags (2)\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with spaced indenting instead of tab\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with spaced indenting instead of tab\r\n\t\t\t\tvar txt = \"<div><b>hello</b> <br> <a href=\\\"http://example.com/\\\">Example.com</a> this is some text after the link.</div>\";\r\n\t\t\t\tvar expected = \t\"<div>\\n\" +\r\n\t\t\t\t\t\t\t\t\"   <b>hello</b>\\n\"+\r\n\t\t\t\t\t\t\t\t\"   <br>\\n\" +\r\n\t\t\t\t\t\t\t\t\"   <a href=\\\"http://example.com/\\\">Example.com</a> this is some text after the link.\\n\" +\r\n\t\t\t\t\t\t\t\t\"</div>\\n\";\r\n\t\t\t\tvar formattedTxt = dojox.html.format.prettyPrint(txt, 3);\r\n\t\t\t\tdoh.assertEqual(expected, formattedTxt);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Format:  Basic HTML Format test with id\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with an id attr set.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with an id attr set.\r\n\t\t\t\tvar txt = \"<div id=\\\"myID\\\"><b>hello</b> this is some text.</div>\";\r\n\t\t\t\tvar expected = \t\"<div id=\\\"myID\\\">\\n\" +\r\n\t\t\t\t\t\t\t\t\"\\t<b>hello</b> this is some text.\\n\" +\r\n\t\t\t\t\t\t\t\t\"</div>\\n\";\r\n\t\t\t\tvar formattedTxt = dojox.html.format.prettyPrint(txt);\r\n\t\t\t\tdoh.assertEqual(expected, formattedTxt);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Format:  Basic HTML Format test with attributes (sorting attributes)\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with an id attr set.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with an id attr set.\r\n\t\t\t\tvar txt = \"<div id=\\\"myID\\\" style=\\\"font-weight: bold; font-style: italic;\\\" foo=\\\"bar\\\"><b>hello</b> this is some text.</div>\";\r\n\t\t\t\tvar expected = \t\"<div foo=\\\"bar\\\" id=\\\"myID\\\" style=\\\"font-style: italic; font-weight: bold;\\\">\\n\" +\r\n\t\t\t\t\t\t\t\t\"\\t<b>hello</b> this is some text.\\n\" +\r\n\t\t\t\t\t\t\t\t\"</div>\\n\";\r\n\t\t\t\tvar formattedTxt = dojox.html.format.prettyPrint(txt);\r\n\t\t\t\tdoh.assertEqual(expected, formattedTxt);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Format:  Basic HTML Format test with attributes (multiple unquoted)\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with an id attr set.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with an id attr set.\r\n\t\t\t\tvar txt = \"<p><font id=\\\"myID\\\" size=\\\"6\\\"><b>hello</b> this is some text.</font></p>\";\r\n\t\t\t\tvar expected = \t\"<p>\\n\\t<font id=\\\"myID\\\" size=\\\"6\\\">\" +\r\n\t\t\t\t\t\t\t\t\"<b>hello</b> this is some text.\" +\r\n\t\t\t\t\t\t\t\t\"</font>\\n</p>\\n\";\r\n\t\t\t\tvar formattedTxt = dojox.html.format.prettyPrint(txt);\r\n\t\t\t\tdoh.assertEqual(expected, formattedTxt);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Format:  Basic HTML Format test with style\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with an id attr set.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with an id attr set.\r\n\t\t\t\tvar txt = \"<div style=\\\"font-weight: bold;\\\"><b>hello</b> this is some text.</div>\";\r\n\t\t\t\tvar expected = \t\"<div style=\\\"font-weight: bold;\\\">\\n\" +\r\n\t\t\t\t\t\t\t\t\"\\t<b>hello</b> this is some text.\\n\" +\r\n\t\t\t\t\t\t\t\t\"</div>\\n\";\r\n\t\t\t\tvar formattedTxt = dojox.html.format.prettyPrint(txt);\r\n\t\t\t\tdoh.assertEqual(expected, formattedTxt);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Format:  Basic HTML Format test with multi style\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with an id attr set.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with an id attr set.\r\n\t\t\t\tvar txt = \"<div style=\\\"font-weight: bold; color: red\\\"><b>hello</b> this is some text.</div>\";\r\n\t\t\t\tvar expected = \t\"<div style=\\\"color: red; font-weight: bold;\\\">\\n\" +\r\n\t\t\t\t\t\t\t\t\"\\t<b>hello</b> this is some text.\\n\" +\r\n\t\t\t\t\t\t\t\t\"</div>\\n\";\r\n\t\t\t\tvar formattedTxt = dojox.html.format.prettyPrint(txt);\r\n\t\t\t\tdoh.assertEqual(expected, formattedTxt);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Format:  Basic HTML Format with script test\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with an embedded script tag.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with an embedded script tag.\r\n\t\t\t\tvar txt = \"<div><div>hello</div>this is some text.<script>var foo=\\\"bar\\\";\\nif(foo !== \\\"bar\\\"){\\n alert(\\\"Should not be here!\\\");\\n}</script></div>\";\r\n\t\t\t\tvar expected = \t\"<div>\\n\" +\r\n\t\t\t\t\t\t\t\t\"\\t<div>\\n\" +\r\n\t\t\t\t\t\t\t\t\"\\t\\thello\\n\" +\r\n\t\t\t\t\t\t\t\t\"\\t</div>\\n\"+\r\n\t\t\t\t\t\t\t\t\"\\tthis is some text.\\n\" +\r\n\t\t\t\t\t\t\t\t\"\\t<script>\\n\"+\r\n\t\t\t\t\t\t\t\t\"\\t\\tvar foo=\\\"bar\\\";\\n\" +\r\n\t\t\t\t\t\t\t\t\"\\t\\tif(foo !== \\\"bar\\\"){\\n\" +\r\n\t\t\t\t\t\t\t\t\"\\t\\t\\talert(\\\"Should not be here!\\\");\\n\" +\r\n\t\t\t\t\t\t\t\t\"\\t\\t}\\n\" +\r\n\t\t\t\t\t\t\t\t\"\\t</script>\\n\" +\r\n\t\t\t\t\t\t\t\t\"</div>\\n\";\r\n\t\t\t\tvar formattedTxt = dojox.html.format.prettyPrint(txt);\r\n\t\t\t\tdoh.assertEqual(dojo.trim(expected), dojo.trim(formattedTxt));\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Format:  Basic HTML Format with script test and three space indent\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with an embedded script tag.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with an embedded script tag.\r\n\t\t\t\tvar txt = \"<div><div>hello</div>this is some text.<script>var foo=\\\"bar\\\";\\nif(foo !== \\\"bar\\\"){\\n alert(\\\"Should not be here!\\\");\\n}</script></div>\";\r\n\t\t\t\tvar expected = \t\"<div>\\n\" +\r\n\t\t\t\t\t\t\t\t\"   <div>\\n\" +\r\n\t\t\t\t\t\t\t\t\"      hello\\n\" +\r\n\t\t\t\t\t\t\t\t\"   </div>\\n\"+\r\n\t\t\t\t\t\t\t\t\"   this is some text.\\n\" +\r\n\t\t\t\t\t\t\t\t\"   <script>\\n\"+\r\n\t\t\t\t\t\t\t\t\"      var foo=\\\"bar\\\";\\n\" +\r\n\t\t\t\t\t\t\t\t\"      if(foo !== \\\"bar\\\"){\\n\" +\r\n\t\t\t\t\t\t\t\t\"         alert(\\\"Should not be here!\\\");\\n\" +\r\n\t\t\t\t\t\t\t\t\"      }\\n\" +\r\n\t\t\t\t\t\t\t\t\"   </script>\\n\" +\r\n\t\t\t\t\t\t\t\t\"</div>\\n\";\r\n\t\t\t\tvar formattedTxt = dojox.html.format.prettyPrint(txt, 3);\r\n\t\t\t\tdoh.assertEqual(expected, formattedTxt);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Format:  Basic HTML Format with script test and three space indent, XHTML\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with an embedded script tag.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with an embedded script tag.\r\n\t\t\t\tvar txt = \"<div><div>hello<br><hr></div>this is some text.<script>var foo=\\\"bar\\\";\\nif(foo !== \\\"bar\\\"){\\n alert(\\\"Should not be here!\\\");\\n}</script></div>\";\r\n\t\t\t\tvar expected = \t\"<div>\\n\" +\r\n\t\t\t\t\t\t\t\t\"   <div>\\n\" +\r\n\t\t\t\t\t\t\t\t\"      hello\\n\" +\r\n\t\t\t\t\t\t\t\t\"      <br />\\n\" +\r\n\t\t\t\t\t\t\t\t\"      <hr />\\n\" +\r\n\t\t\t\t\t\t\t\t\"   </div>\\n\"+\r\n\t\t\t\t\t\t\t\t\"   this is some text.\\n\" +\r\n\t\t\t\t\t\t\t\t\"   <script>\\n\"+\r\n\t\t\t\t\t\t\t\t\"      var foo=\\\"bar\\\";\\n\" +\r\n\t\t\t\t\t\t\t\t\"      if(foo !== \\\"bar\\\"){\\n\" +\r\n\t\t\t\t\t\t\t\t\"         alert(\\\"Should not be here!\\\");\\n\" +\r\n\t\t\t\t\t\t\t\t\"      }\\n\" +\r\n\t\t\t\t\t\t\t\t\"   </script>\\n\" +\r\n\t\t\t\t\t\t\t\t\"</div>\\n\";\r\n\t\t\t\tvar formattedTxt = dojox.html.format.prettyPrint(txt, 3, -1, null, true);\r\n\t\t\t\tdoh.assertEqual(expected, formattedTxt);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Format:  Basic HTML Format with &lt;pre&gt; tag\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with an embedded pre tag.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with an embedded pre tag.\r\n\r\n\t\t\t\tif(!dojo.isIE){\r\n\t\t\t\t\t// IE generates good pre tags, but I think the endline chars differ\r\n\t\t\t\t\t// so direct comparison fails.  When I figure that out, I can enable\r\n\t\t\t\t\t// this test.\r\n\t\t\t\t\tvar txt = \"<div><pre>hello\\nthis is    spaced\\nWhee!\\n</pre></div>\";\r\n\t\t\t\t\tvar expected = \t\"<div>\\n\" +\r\n\t\t\t\t\t\t\t\t\t\"\\t<pre>\\n\" +\r\n\t\t\t\t\t\t\t\t\t\"hello\\n\" +\r\n\t\t\t\t\t\t\t\t\t\"this is    spaced\\n\" +\r\n\t\t\t\t\t\t\t\t\t\"Whee!\\n\" +\r\n\t\t\t\t\t\t\t\t\t\"\\t</pre>\\n\"+\r\n\t\t\t\t\t\t\t\t\t\"</div>\\n\";\r\n\t\t\t\t\tvar formattedTxt = dojox.html.format.prettyPrint(txt);\r\n\t\t\t\t\tdoh.assertEqual(expected, formattedTxt);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Format:  Basic HTML Format with &lt;pre&gt; tag and three space indent\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with an embedded pre tag.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with an embedded pre tag.\r\n\t\t\t\tif(!dojo.isIE){\r\n\t\t\t\t\t// IE generates good pre tags, but I think the endline chars differ\r\n\t\t\t\t\t// so direct comparison fails.  When I figure that out, I can enable\r\n\t\t\t\t\t// this test.\r\n\t\t\t\t\tvar txt = \"<div><pre>hello\\nthis is    spaced\\nWhee!\\n</pre></div>\";\r\n\t\t\t\t\tvar expected = \t\"<div>\\n\" +\r\n\t\t\t\t\t\t\t\t\t\"   <pre>\\n\" +\r\n\t\t\t\t\t\t\t\t\t\"hello\\n\" +\r\n\t\t\t\t\t\t\t\t\t\"this is    spaced\\n\" +\r\n\t\t\t\t\t\t\t\t\t\"Whee!\\n\" +\r\n\t\t\t\t\t\t\t\t\t\"   </pre>\\n\"+\r\n\t\t\t\t\t\t\t\t\t\"</div>\\n\";\r\n\t\t\t\t\tvar formattedTxt = dojox.html.format.prettyPrint(txt, 3);\r\n\t\t\t\t\tdoh.assertEqual(expected, formattedTxt);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Format:  Semi-complex HTML format\",\r\n\t\t\ttimeout: 10000,\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of somewhat complex HTML in an external file getting formatted.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of basic HTML formatting with an embedded pre tag.\r\n\t\t\t\tif(!dojo.isIE){\r\n\t\t\t\t\t// Still working out minor comparison issues on IE.  Sigh.\r\n\t\t\t\t\t// the output is pretty accurate, just need to fix a few things.\r\n\t\t\t\t\t// Like I think the newlines differ or somesuch.\r\n\t\t\t\t\tvar deferred = new doh.Deferred();\r\n\r\n\t\t\t\t\tvar args = {\r\n\t\t\t\t\t\turl: dojo.moduleUrl(\"dojox.html.tests\", \"unformatted.html\").toString(),\r\n\t\t\t\t\t\thandleAs: \"text\",\r\n\t\t\t\t\t\tpreventCache: true\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar ufd = dojo.xhrGet(args);\r\n\t\t\t\t\tufd.addCallback(function(html){\r\n\t\t\t\t\t\thtml = dojox.html.format.prettyPrint(html, 3);\r\n\t\t\t\t\t\tvar fArgs = {\r\n\t\t\t\t\t\t\turl: dojo.moduleUrl(\"dojox.html.tests\", \"formatted.html\").toString(),\r\n\t\t\t\t\t\t\tpreventCache: true,\r\n\t\t\t\t\t\t\thandleAs: \"text\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar fd = dojo.xhrGet(fArgs);\r\n\t\t\t\t\t\tfd.addCallback(function(fHtml){\r\n\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\tdoh.assertEqual(fHtml, html);\r\n\t\t\t\t\t\t\t\tdeferred.callback(true);\r\n\t\t\t\t\t\t\t}catch(e){\r\n\t\t\t\t\t\t\t\tdeferred.errback(e);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tfd.addErrback(function(error){\r\n\t\t\t\t\t\t\tdeferred.errback(error);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t\tufd.addErrback(function(err){\r\n\t\t\t\t\t\tconsole.log(\"Boom!\");\r\n\t\t\t\t\t\tdeferred.errback(err);\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn deferred;\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n);\r\n"]}