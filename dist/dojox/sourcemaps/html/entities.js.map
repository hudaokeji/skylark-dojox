{"version":3,"sources":["html/entities.js"],"names":["define","lang","dhe","getObject","_applyEncodingMap","str","map","mapper","regexp","_encCache","length","i","push","RegExp","join","replace","c","_applyDecodingMap","_decCache","e","html","latin","encode","m","decode"],"mappings":"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","file":"../../html/entities.js","sourcesContent":["define([\"dojo/_base/lang\"], function(lang) {\r\n\t// dojox.html.entities.html [public] Array\r\n\t//\t\tEntity characters for HTML, represented as an array of\r\n\t//\t\tcharacter code, entity name (minus & and ; wrapping.\r\n\t//\t\tThe function wrapper is to fix global leking with the build tools.\r\n\tvar dhe = lang.getObject(\"dojox.html.entities\",true);\t\r\n\t\r\n\tvar _applyEncodingMap = function(str, map){\r\n\t\t// summary:\r\n\t\t//\t\tPrivate internal function for performing encoding of entity characters.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\r\n\t\t// Check to see if we have genned and cached a regexp for this map yet\r\n\t\t// If we have, use it, if not, gen it, cache, then use.\r\n\t\tvar mapper, regexp;\r\n\t\tif(map._encCache &&\r\n\t\t\tmap._encCache.regexp &&\r\n\t\t\tmap._encCache.mapper &&\r\n\t\t\tmap.length == map._encCache.length){\r\n\t\t\tmapper = map._encCache.mapper;\r\n\t\t\tregexp = map._encCache.regexp;\r\n\t\t}else{\r\n\t\t\tmapper = {};\r\n\t\t\tregexp = [\"[\"];\r\n\t\t\tvar i;\r\n\t\t\tfor(i = 0; i < map.length; i++){\r\n\t\t\t\tmapper[map[i][0]] = \"&\" + map[i][1] + \";\";\r\n\t\t\t\tregexp.push(map[i][0]);\r\n\t\t\t}\r\n\t\t\tregexp.push(\"]\");\r\n\t\t\tregexp = new RegExp(regexp.join(\"\"), \"g\");\r\n\t\t\tmap._encCache = {\r\n\t\t\t\tmapper: mapper,\r\n\t\t\t\tregexp: regexp,\r\n\t\t\t\tlength: map.length\r\n\t\t\t};\r\n\t\t}\r\n\t\tstr = str.replace(regexp, function(c){\r\n\t\t\treturn mapper[c];\r\n\t\t});\r\n\t\treturn str;\r\n\t};\r\n\t\r\n\tvar _applyDecodingMap = function(str, map){\r\n\t\t// summary:\r\n\t\t//\t\tPrivate internal function for performing decoding of entity characters.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar mapper, regexp;\r\n\t\tif(map._decCache &&\r\n\t\t\tmap._decCache.regexp &&\r\n\t\t\tmap._decCache.mapper &&\r\n\t\t\tmap.length == map._decCache.length){\r\n\t\t\tmapper = map._decCache.mapper;\r\n\t\t\tregexp = map._decCache.regexp;\r\n\t\t}else{\r\n\t\t\tmapper = {};\r\n\t\t\tregexp = [\"(\"];\r\n\t\t\tvar i;\r\n\t\t\tfor(i = 0; i < map.length; i++){\r\n\t\t\t\tvar e = \"&\" + map[i][1] + \";\";\r\n\t\t\t\tif(i){regexp.push(\"|\");}\r\n\t\t\t\tmapper[e] = map[i][0];\r\n\t\t\t\tregexp.push(e);\r\n\t\t\t}\r\n\t\t\tregexp.push(\")\");\r\n\t\t\tregexp = new RegExp(regexp.join(\"\"), \"g\");\r\n\t\t\tmap._decCache = {\r\n\t\t\t\tmapper: mapper,\r\n\t\t\t\tregexp: regexp,\r\n\t\t\t\tlength: map.length\r\n\t\t\t};\r\n\t\t}\r\n\t\tstr = str.replace(regexp, function(c){\r\n\t\t\treturn mapper[c];\r\n\t\t});\r\n\t\treturn str;\r\n\t};\r\n\r\n\tdhe.html = [\r\n\t\t[\"\\u0026\",\"amp\"], [\"\\u0022\",\"quot\"],[\"\\u003C\",\"lt\"], [\"\\u003E\",\"gt\"],\r\n\t\t[\"\\u00A0\",\"nbsp\"]\r\n\t];\r\n\t\r\n\t// dojox.html.entities.latin [public] Array\r\n\t//\t\tEntity characters for Latin characters and similar, represented as an array of\r\n\t//\t\tcharacter code, entity name (minus & and ; wrapping.\r\n\tdhe.latin = [\r\n\t\t[\"\\u00A1\",\"iexcl\"],[\"\\u00A2\",\"cent\"],[\"\\u00A3\",\"pound\"],[\"\\u20AC\",\"euro\"],\r\n\t\t[\"\\u00A4\",\"curren\"],[\"\\u00A5\",\"yen\"],[\"\\u00A6\",\"brvbar\"],[\"\\u00A7\",\"sect\"],\r\n\t\t[\"\\u00A8\",\"uml\"],[\"\\u00A9\",\"copy\"],[\"\\u00AA\",\"ordf\"],[\"\\u00AB\",\"laquo\"],\r\n\t\t[\"\\u00AC\",\"not\"],[\"\\u00AD\",\"shy\"],[\"\\u00AE\",\"reg\"],[\"\\u00AF\",\"macr\"],\r\n\t\t[\"\\u00B0\",\"deg\"],[\"\\u00B1\",\"plusmn\"],[\"\\u00B2\",\"sup2\"],[\"\\u00B3\",\"sup3\"],\r\n\t\t[\"\\u00B4\",\"acute\"],[\"\\u00B5\",\"micro\"],[\"\\u00B6\",\"para\"],[\"\\u00B7\",\"middot\"],\r\n\t\t[\"\\u00B8\",\"cedil\"],[\"\\u00B9\",\"sup1\"],[\"\\u00BA\",\"ordm\"],[\"\\u00BB\",\"raquo\"],\r\n\t\t[\"\\u00BC\",\"frac14\"],[\"\\u00BD\",\"frac12\"],[\"\\u00BE\",\"frac34\"],[\"\\u00BF\",\"iquest\"],\r\n\t\t[\"\\u00C0\",\"Agrave\"],[\"\\u00C1\",\"Aacute\"],[\"\\u00C2\",\"Acirc\"],[\"\\u00C3\",\"Atilde\"],\r\n\t\t[\"\\u00C4\",\"Auml\"],[\"\\u00C5\",\"Aring\"],[\"\\u00C6\",\"AElig\"],[\"\\u00C7\",\"Ccedil\"],\r\n\t\t[\"\\u00C8\",\"Egrave\"],[\"\\u00C9\",\"Eacute\"],[\"\\u00CA\",\"Ecirc\"],[\"\\u00CB\",\"Euml\"],\r\n\t\t[\"\\u00CC\",\"Igrave\"],[\"\\u00CD\",\"Iacute\"],[\"\\u00CE\",\"Icirc\"],[\"\\u00CF\",\"Iuml\"],\r\n\t\t[\"\\u00D0\",\"ETH\"],[\"\\u00D1\",\"Ntilde\"],[\"\\u00D2\",\"Ograve\"],[\"\\u00D3\",\"Oacute\"],\r\n\t\t[\"\\u00D4\",\"Ocirc\"],[\"\\u00D5\",\"Otilde\"],[\"\\u00D6\",\"Ouml\"],[\"\\u00D7\",\"times\"],\r\n\t\t[\"\\u00D8\",\"Oslash\"],[\"\\u00D9\",\"Ugrave\"],[\"\\u00DA\",\"Uacute\"],[\"\\u00DB\",\"Ucirc\"],\r\n\t\t[\"\\u00DC\",\"Uuml\"],[\"\\u00DD\",\"Yacute\"],[\"\\u00DE\",\"THORN\"],[\"\\u00DF\",\"szlig\"],\r\n\t\t[\"\\u00E0\",\"agrave\"],[\"\\u00E1\",\"aacute\"],[\"\\u00E2\",\"acirc\"],[\"\\u00E3\",\"atilde\"],\r\n\t\t[\"\\u00E4\",\"auml\"],[\"\\u00E5\",\"aring\"],[\"\\u00E6\",\"aelig\"],[\"\\u00E7\",\"ccedil\"],\r\n\t\t[\"\\u00E8\",\"egrave\"],[\"\\u00E9\",\"eacute\"],[\"\\u00EA\",\"ecirc\"],[\"\\u00EB\",\"euml\"],\r\n\t\t[\"\\u00EC\",\"igrave\"],[\"\\u00ED\",\"iacute\"],[\"\\u00EE\",\"icirc\"],[\"\\u00EF\",\"iuml\"],\r\n\t\t[\"\\u00F0\",\"eth\"],[\"\\u00F1\",\"ntilde\"],[\"\\u00F2\",\"ograve\"],[\"\\u00F3\",\"oacute\"],\r\n\t\t[\"\\u00F4\",\"ocirc\"],[\"\\u00F5\",\"otilde\"],[\"\\u00F6\",\"ouml\"],[\"\\u00F7\",\"divide\"],\r\n\t\t[\"\\u00F8\",\"oslash\"],[\"\\u00F9\",\"ugrave\"],[\"\\u00FA\",\"uacute\"],[\"\\u00FB\",\"ucirc\"],\r\n\t\t[\"\\u00FC\",\"uuml\"],[\"\\u00FD\",\"yacute\"],[\"\\u00FE\",\"thorn\"],[\"\\u00FF\",\"yuml\"],\r\n\t\t[\"\\u0192\",\"fnof\"],[\"\\u0391\",\"Alpha\"],[\"\\u0392\",\"Beta\"],[\"\\u0393\",\"Gamma\"],\r\n\t\t[\"\\u0394\",\"Delta\"],[\"\\u0395\",\"Epsilon\"],[\"\\u0396\",\"Zeta\"],[\"\\u0397\",\"Eta\"],\r\n\t\t[\"\\u0398\",\"Theta\"], [\"\\u0399\",\"Iota\"],[\"\\u039A\",\"Kappa\"],[\"\\u039B\",\"Lambda\"],\r\n\t\t[\"\\u039C\",\"Mu\"],[\"\\u039D\",\"Nu\"],[\"\\u039E\",\"Xi\"],[\"\\u039F\",\"Omicron\"],\r\n\t\t[\"\\u03A0\",\"Pi\"],[\"\\u03A1\",\"Rho\"],[\"\\u03A3\",\"Sigma\"],[\"\\u03A4\",\"Tau\"],\r\n\t\t[\"\\u03A5\",\"Upsilon\"],[\"\\u03A6\",\"Phi\"],[\"\\u03A7\",\"Chi\"],[\"\\u03A8\",\"Psi\"],\r\n\t\t[\"\\u03A9\",\"Omega\"],[\"\\u03B1\",\"alpha\"],[\"\\u03B2\",\"beta\"],[\"\\u03B3\",\"gamma\"],\r\n\t\t[\"\\u03B4\",\"delta\"],[\"\\u03B5\",\"epsilon\"],[\"\\u03B6\",\"zeta\"],[\"\\u03B7\",\"eta\"],\r\n\t\t[\"\\u03B8\",\"theta\"],[\"\\u03B9\",\"iota\"],[\"\\u03BA\",\"kappa\"],[\"\\u03BB\",\"lambda\"],\r\n\t\t[\"\\u03BC\",\"mu\"],[\"\\u03BD\",\"nu\"],[\"\\u03BE\",\"xi\"],[\"\\u03BF\",\"omicron\"],\r\n\t\t[\"\\u03C0\",\"pi\"],[\"\\u03C1\",\"rho\"],[\"\\u03C2\",\"sigmaf\"],[\"\\u03C3\",\"sigma\"],\r\n\t\t[\"\\u03C4\",\"tau\"],[\"\\u03C5\",\"upsilon\"],[\"\\u03C6\",\"phi\"],[\"\\u03C7\",\"chi\"],\r\n\t\t[\"\\u03C8\",\"psi\"],[\"\\u03C9\",\"omega\"],[\"\\u03D1\",\"thetasym\"],[\"\\u03D2\",\"upsih\"],\r\n\t\t[\"\\u03D6\",\"piv\"],[\"\\u2022\",\"bull\"],[\"\\u2026\",\"hellip\"],[\"\\u2032\",\"prime\"],\r\n\t\t[\"\\u2033\",\"Prime\"],[\"\\u203E\",\"oline\"],[\"\\u2044\",\"frasl\"],[\"\\u2118\",\"weierp\"],\r\n\t\t[\"\\u2111\",\"image\"],[\"\\u211C\",\"real\"],[\"\\u2122\",\"trade\"],[\"\\u2135\",\"alefsym\"],\r\n\t\t[\"\\u2190\",\"larr\"],[\"\\u2191\",\"uarr\"],[\"\\u2192\",\"rarr\"],[\"\\u2193\",\"darr\"],\r\n\t\t[\"\\u2194\",\"harr\"],[\"\\u21B5\",\"crarr\"],[\"\\u21D0\",\"lArr\"],[\"\\u21D1\",\"uArr\"],\r\n\t\t[\"\\u21D2\",\"rArr\"],[\"\\u21D3\",\"dArr\"],[\"\\u21D4\",\"hArr\"],[\"\\u2200\",\"forall\"],\r\n\t\t[\"\\u2202\",\"part\"],[\"\\u2203\",\"exist\"],[\"\\u2205\",\"empty\"],[\"\\u2207\",\"nabla\"],\r\n\t\t[\"\\u2208\",\"isin\"],[\"\\u2209\",\"notin\"],[\"\\u220B\",\"ni\"],[\"\\u220F\",\"prod\"],\r\n\t\t[\"\\u2211\",\"sum\"],[\"\\u2212\",\"minus\"],[\"\\u2217\",\"lowast\"],[\"\\u221A\",\"radic\"],\r\n\t\t[\"\\u221D\",\"prop\"],[\"\\u221E\",\"infin\"],[\"\\u2220\",\"ang\"],[\"\\u2227\",\"and\"],\r\n\t\t[\"\\u2228\",\"or\"],[\"\\u2229\",\"cap\"],[\"\\u222A\",\"cup\"],[\"\\u222B\",\"int\"],\r\n\t\t[\"\\u2234\",\"there4\"],[\"\\u223C\",\"sim\"],[\"\\u2245\",\"cong\"],[\"\\u2248\",\"asymp\"],\r\n\t\t[\"\\u2260\",\"ne\"],[\"\\u2261\",\"equiv\"],[\"\\u2264\",\"le\"],[\"\\u2265\",\"ge\"],\r\n\t\t[\"\\u2282\",\"sub\"],[\"\\u2283\",\"sup\"],[\"\\u2284\",\"nsub\"],[\"\\u2286\",\"sube\"],\r\n\t\t[\"\\u2287\",\"supe\"],[\"\\u2295\",\"oplus\"],[\"\\u2297\",\"otimes\"],[\"\\u22A5\",\"perp\"],\r\n\t\t[\"\\u22C5\",\"sdot\"],[\"\\u2308\",\"lceil\"],[\"\\u2309\",\"rceil\"],[\"\\u230A\",\"lfloor\"],\r\n\t\t[\"\\u230B\",\"rfloor\"],[\"\\u2329\",\"lang\"],[\"\\u232A\",\"rang\"],[\"\\u25CA\",\"loz\"],\r\n\t\t[\"\\u2660\",\"spades\"],[\"\\u2663\",\"clubs\"],[\"\\u2665\",\"hearts\"],[\"\\u2666\",\"diams\"],\r\n\t\t[\"\\u0152\",\"OElig\"],[\"\\u0153\",\"oelig\"],[\"\\u0160\",\"Scaron\"],[\"\\u0161\",\"scaron\"],\r\n\t\t[\"\\u0178\",\"Yuml\"],[\"\\u02C6\",\"circ\"],[\"\\u02DC\",\"tilde\"],[\"\\u2002\",\"ensp\"],\r\n\t\t[\"\\u2003\",\"emsp\"],[\"\\u2009\",\"thinsp\"],[\"\\u200C\",\"zwnj\"],[\"\\u200D\",\"zwj\"],\r\n\t\t[\"\\u200E\",\"lrm\"],[\"\\u200F\",\"rlm\"],[\"\\u2013\",\"ndash\"],[\"\\u2014\",\"mdash\"],\r\n\t\t[\"\\u2018\",\"lsquo\"],[\"\\u2019\",\"rsquo\"],[\"\\u201A\",\"sbquo\"],[\"\\u201C\",\"ldquo\"],\r\n\t\t[\"\\u201D\",\"rdquo\"],[\"\\u201E\",\"bdquo\"],[\"\\u2020\",\"dagger\"],[\"\\u2021\",\"Dagger\"],\r\n\t\t[\"\\u2030\",\"permil\"],[\"\\u2039\",\"lsaquo\"],[\"\\u203A\",\"rsaquo\"]\r\n\t];\r\n\t\r\n\tdhe.encode = function(str/*string*/, m /*array?*/){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to obtain an entity encoding for a specified character\r\n\t\t// str:\r\n\t\t//\t\tThe string to process for possible entity encoding.\r\n\t\t// m:\r\n\t\t//\t\tAn optional list of character to entity name mappings (array of\r\n\t\t//\t\tarrays).  If not provided, it uses the and Latin entities as the\r\n\t\t//\t\tset to map and escape.\r\n\t\t// tags:\r\n\t\t//\t\tpublic\r\n\t\tif(str){\r\n\t\t\tif(!m){\r\n\t\t\t\t// Apply the basic mappings.  HTML should always come first when decoding\r\n\t\t\t\t// as well.\r\n\t\t\t\tstr = _applyEncodingMap(str, dhe.html);\r\n\t\t\t\tstr = _applyEncodingMap(str, dhe.latin);\r\n\t\r\n\t\t\t}else{\r\n\t\t\t\tstr = _applyEncodingMap(str, m);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn str;\r\n\t};\r\n\t\r\n\tdhe.decode = function(str/*string*/, m /*array?*/){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to obtain an entity encoding for a specified character\r\n\t\t// str:\r\n\t\t//\t\tThe string to process for possible entity encoding to decode.\r\n\t\t// m:\r\n\t\t//\t\tAn optional list of character to entity name mappings (array of\r\n\t\t//\t\tarrays).  If not provided, it uses the HTML and Latin entities as the\r\n\t\t//\t\tset to map and decode.\r\n\t\t// tags:\r\n\t\t//\t\tpublic\r\n\t\tif(str){\r\n\t\t\tif(!m){\r\n\t\t\t\t// Apply the basic mappings.  HTML should always come first when decoding\r\n\t\t\t\t// as well.\r\n\t\t\t\tstr = _applyDecodingMap(str, dhe.html);\r\n\t\t\t\tstr = _applyDecodingMap(str, dhe.latin);\r\n\t\r\n\t\t\t}else{\r\n\t\t\t\tstr = _applyDecodingMap(str, m);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn str;\r\n\t};\r\n\treturn dhe;\r\n});\r\n\r\n"]}