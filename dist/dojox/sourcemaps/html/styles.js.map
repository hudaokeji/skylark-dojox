{"version":3,"sources":["html/styles.js"],"names":["define","lang","ArrayUtil","Window","has","dh","getObject","dynamicStyleMap","pageStyleSheets","titledSheets","insertCssRule","selector","declaration","styleSheetName","ss","getDynamicStyleSheet","styleText","console","log","cssText","sheet","insertRule","_indicies","length","appendChild","doc","createTextNode","push","removeCssRule","nm","i","index","warn","splice","removeRule","deleteRule","modifyCssRule","getStyleSheet","allSheets","getStyleSheets","href","indexOf","createStyleSheet","title","createElement","setAttribute","getElementsByTagName","enableStyleSheet","disabled","disableStyleSheet","activeStyleSheet","sheets","getToggledStyleSheets","arguments","forEach","s","getPreferredStyleSheet","sObjects","collected","styleSheets","n","name","imports","si","id","ownerNode","rules","cssRules","err","r","styleSheet"],"mappings":"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","file":"../../html/styles.js","sourcesContent":["define([\"dojo/_base/lang\", \"dojo/_base/array\", \"dojo/_base/window\", \"dojo/_base/sniff\"], \r\n\tfunction(lang, ArrayUtil, Window, has) {\r\n\t// summary:\r\n\t//\t\tMethods for creating and manipulating dynamic CSS Styles and Style Sheets\r\n\t// example:\r\n\t//\t|\t\tdojox.html.createStyle(\"#myDiv input\", \"font-size:24px\");\r\n\t//\t\tCreates Style #myDiv input, which can now be applied to myDiv, and\r\n\t//\t\tthe inner input will be targeted\r\n\t//\t|\t\tdojox.html.createStyle(\".myStyle\", \"color:#FF0000\");\r\n\t//\t\tNow the class myStyle can be assigned to a node's className\r\n\r\n\tvar dh = lang.getObject(\"dojox.html\", true);\r\n\tvar dynamicStyleMap = {};\r\n\tvar pageStyleSheets = {};\r\n\tvar titledSheets = [];\r\n\r\n\tdh.insertCssRule = function(/*String*/selector, /*String*/declaration, /*String?*/styleSheetName){\r\n\t\t// summary:\r\n\t\t//\t\tCreates a style and attaches it to a dynamically created stylesheet\r\n\t\t// selector:\r\n\t\t//\t\tA fully qualified class name, as it would appear in\r\n\t\t//\t\ta CSS dojo.doc. Start classes with periods, target\r\n\t\t//\t\tnodes with '#'. Large selectors can also be created\r\n\t\t//\t\tlike:\r\n\t\t// |\t \"#myDiv.myClass span input\"\r\n\t\t// declaration:\r\n\t\t//\t\tA single string that would make up a style block, not\r\n\t\t//\t\tincluding the curly braces. Include semi-colons between\r\n\t\t//\t\tstatements. Do not use JavaScript style declarations\r\n\t\t//\t\tin camel case, use as you would in a CSS dojo.doc:\r\n\t\t//\t\t| \"color:#ffoooo;font-size:12px;margin-left:5px;\"\r\n\t\t// styleSheetName:\r\n\t\t//\t\tName of the dynamic style sheet this rule should be\r\n\t\t//\t\tinserted into. If is not found by that name, it is\r\n\t\t//\t\tcreated. If no name is passed, the name \"default\" is\r\n\t\t//\t\tused.\r\n\r\n\t\tvar ss = dh.getDynamicStyleSheet(styleSheetName);\r\n\t\tvar styleText = selector + \" {\" + declaration + \"}\";\r\n\t\tconsole.log(\"insertRule:\", styleText);\r\n\t\tif(has(\"ie\")){\r\n\t\t\t// Note: check for if(ss.cssText) does not work\r\n\t\t\tss.cssText+=styleText;\r\n\t\t\tconsole.log(\"ss.cssText:\", ss.cssText);\r\n\t\t}else if(ss.sheet){\r\n\t\t\tss.sheet.insertRule(styleText, ss._indicies.length);\r\n\t\t}else{\r\n\t\t\tss.appendChild(Window.doc.createTextNode(styleText));\r\n\t\t}\r\n\t\tss._indicies.push(selector+\" \"+declaration);\r\n\t\treturn selector; // String\r\n\t};\r\n\r\n\tdh.removeCssRule = function(/*String*/selector, /*String*/declaration, /*String*/styleSheetName){\r\n\t\t// summary:\r\n\t\t//\t\tRemoves a cssRule base on the selector and declaration passed\r\n\t\t//\t\tThe declaration is needed for cases of dupe selectors\r\n\t\t// description: Only removes DYNAMICALLY created cssRules. If you\r\n\t\t//\t\tcreated it with dh.insertCssRule, it can be removed.\r\n\r\n\t\tvar ss;\r\n\t\tvar index=-1;\r\n\t\tvar nm;\r\n\t\tvar i;\r\n\t\tfor(nm in dynamicStyleMap){\r\n\t\t\tif(styleSheetName && styleSheetName !== nm) {continue;}\r\n\t\t\tss = dynamicStyleMap[nm];\r\n\t\t\tfor(i=0;i<ss._indicies.length;i++){\r\n\t\t\t\tif(selector+\" \"+declaration === ss._indicies[i]){\r\n\t\t\t\t\tindex = i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(index>-1) { break; }\r\n\t\t}\r\n\t\tif(!ss){\r\n\t\t\tconsole.warn(\"No dynamic style sheet has been created from which to remove a rule.\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif(index===-1){\r\n\t\t\tconsole.warn(\"The css rule was not found and could not be removed.\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tss._indicies.splice(index, 1);\r\n\t\tif(has(\"ie\")){\r\n\t\t\t// Note: check for if(ss.removeRule) does not work\r\n\t\t\tss.removeRule(index);\r\n\t\t}else if(ss.sheet){\r\n\t\t\tss.sheet.deleteRule(index);\r\n\t\t}\r\n\t\treturn true; //Boolean\r\n\t};\r\n\r\n\tdh.modifyCssRule = function(selector, declaration, styleSheetName){\r\n\t\t// summary:\r\n\t\t//\t\tNot implemented - it seems to have some merit for changing some complex\r\n\t\t//\t\tselectors. It's not much use for changing simple ones like \"span\".\r\n\t\t//\t\tFor now, simply write a new rule which will cascade over the first.\r\n\t\t//\r\n\t\t//\t\tModifies an existing cssRule\r\n\t};\r\n\r\n\tdh.getStyleSheet = function(/*String?*/styleSheetName){\r\n\t\t// summary:\r\n\t\t//\t\tReturns a style sheet based on the argument.\r\n\t\t//\t\tSearches dynamic style sheets first. If no matches,\r\n\t\t//\t\tsearches document style sheets.\r\n\t\t// styleSheetName:\r\n\t\t//\t\tA title or an href to a style sheet. Title can be\r\n\t\t//\t\tan attribute in a tag, or a dynamic style sheet\r\n\t\t//\t\treference. Href can be the name of the file.\r\n\t\t//\t\tIf no argument, the assumed created dynamic style\r\n\t\t//\t\tsheet is used.\r\n\r\n\t\t// try dynamic sheets first\r\n\t\tif(dynamicStyleMap[styleSheetName || \"default\"]){\r\n\t\t\treturn dynamicStyleMap[styleSheetName || \"default\"];\r\n\t\t}\r\n\t\tif(!styleSheetName){\r\n\t\t\t// no arg is nly good for the default style sheet\r\n\t\t\t// and it has not been created yet.\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar allSheets = dh.getStyleSheets();\r\n\t\t// now try document style sheets by name\r\n\t\tif(allSheets[styleSheetName]){\r\n\t\t\treturn dh.getStyleSheets()[styleSheetName];\r\n\t\t}\r\n\t\t// check for partial matches in hrefs (so that a fully\r\n\t\t//qualified name does not have to be passed)\r\n\t\tvar nm;\r\n\t\tfor ( nm in allSheets){\r\n\t\t\tif( allSheets[nm].href && allSheets[nm].href.indexOf(styleSheetName)>-1){\r\n\t\t\t\treturn allSheets[nm];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false; //StyleSheet or false\r\n\t};\r\n\r\n\tdh.getDynamicStyleSheet = function(/*String?*/styleSheetName){\r\n\t\t// summary:\r\n\t\t//\t\tCreates and returns a dynamically created style sheet\r\n\t\t//\t\tused for dynamic styles\r\n\t\t// styleSheetName:\r\n\t\t//\t\tThe name given the style sheet so that multiple\r\n\t\t//\t\tstyle sheets can be created and referenced. If\r\n\t\t//\t\tno argument is given, the name \"default\" is used.\r\n\r\n\t\tif(!styleSheetName){ styleSheetName=\"default\"; }\r\n\t\tif(!dynamicStyleMap[styleSheetName]){\r\n\t\t\tif(Window.doc.createStyleSheet){ //IE\r\n\t\t\t\tdynamicStyleMap[styleSheetName] = Window.doc.createStyleSheet();\r\n\t\t\t\tif(has(\"ie\") < 9) {\r\n\t\t\t\t\t// IE9 calls this read-only. Loving the new browser so far.\r\n\t\t\t\t\tdynamicStyleMap[styleSheetName].title = styleSheetName;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tdynamicStyleMap[styleSheetName] = Window.doc.createElement(\"style\");\r\n\t\t\t\tdynamicStyleMap[styleSheetName].setAttribute(\"type\", \"text/css\");\r\n\t\t\t\tWindow.doc.getElementsByTagName(\"head\")[0].appendChild(dynamicStyleMap[styleSheetName]);\r\n\t\t\t\tconsole.log(styleSheetName, \" ss created: \", dynamicStyleMap[styleSheetName].sheet);\r\n\t\t\t}\r\n\t\t\tdynamicStyleMap[styleSheetName]._indicies = [];\r\n\t\t}\r\n\t\treturn dynamicStyleMap[styleSheetName]; //StyleSheet\r\n\t};\r\n\r\n\tdh.enableStyleSheet = function(/*String*/styleSheetName){\r\n\t\t// summary:\r\n\t\t//\t\tEnables the style sheet with the name passed in the\r\n\t\t//\t\targument. Deafults to the default style sheet.\r\n\t\t//\r\n\t\tvar ss = dh.getStyleSheet(styleSheetName);\r\n\t\tif(ss){\r\n\t\t\tif(ss.sheet){\r\n\t\t\t\tss.sheet.disabled = false;\r\n\t\t\t}else{\r\n\t\t\t\tss.disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tdh.disableStyleSheet = function(/* String */styleSheetName){\r\n\t\t// summary:\r\n\t\t//\t\tDisables the dynamic style sheet with the name passed in the\r\n\t\t//\t\targument. If no arg is passed, defaults to the default style sheet.\r\n\r\n\t\tvar ss = dh.getStyleSheet(styleSheetName);\r\n\t\tif(ss){\r\n\t\t\tif(ss.sheet){\r\n\t\t\t\tss.sheet.disabled = true;\r\n\t\t\t}else{\r\n\t\t\t\tss.disabled = true;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tdh.activeStyleSheet = function(/*String?*/title){\r\n\t\t// summary:\r\n\t\t//\t\tGetter/Setter\r\n\t\t// description:\r\n\t\t//\t\tIf passed a title, enables a that style sheet. All other\r\n\t\t//\t\ttoggle-able style sheets are disabled.\r\n\t\t//\t\tIf no argument is passed, returns currently enabled\r\n\t\t//\t\tstyle sheet.\r\n\r\n\t\tvar sheets = dh.getToggledStyleSheets();\r\n\t\tvar i;\r\n\t\tif(arguments.length === 1){\r\n\t\t\t//console.log(\"sheets:\", sheets);\r\n\t\t\tArrayUtil.forEach(sheets, function(s){\r\n\t\t\t\ts.disabled = (s.title === title) ? false : true;\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tfor(i=0;i<sheets.length;i++){\r\n\t\t\t\tif(sheets[i].disabled === false){\r\n\t\t\t\t\treturn sheets[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true; //StyleSheet or Boolean - FIXME - doesn't make a lot of sense\r\n\t};\r\n\r\n\tdh.getPreferredStyleSheet = function(){\r\n\t\t// summary:\r\n\t\t//\t\tReturns the style sheet that was initially enabled\r\n\t\t//\t\ton document launch.\r\n\t\t//\t\tTODO, does not work.\r\n\t};\r\n\r\n\t//\tTODO: Sets of style sheets could be grouped according to\r\n\t//\t\t\tan ID and used in sets, much like different\r\n\t//\t\t\tgroups of radio buttons. It would not however be\r\n\t//\t\t\taccording to W3C spec\r\n\t//\r\n\tdh.getToggledStyleSheets = function(){\r\n\t\t// summary:\r\n\t\t//\t\tSearches HTML for style sheets that are \"toggle-able\" -\r\n\t\t//\t\tcan be enabled and disabled. These would include sheets\r\n\t\t//\t\twith the title attribute, as well as the REL attribute.\r\n\t\t// returns:\r\n\t\t//\t\tAn array of all toggle-able style sheets\r\n\t\tvar nm;\r\n\t\tif(!titledSheets.length){\r\n\t\t\tvar sObjects = dh.getStyleSheets();\r\n\t\t\tfor(nm in sObjects){\r\n\t\t\t\tif(sObjects[nm].title){\r\n\t\t\t\t\ttitledSheets.push(sObjects[nm]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn titledSheets; //Array\r\n\t};\r\n\r\n\t//TODO: Does not recursively search for @imports, so it will\r\n\t//\t\tonly go one level deep.\r\n\tdh.getStyleSheets = function(){\r\n\t\t// summary:\r\n\t\t//\t\tCollects all the style sheets referenced in the HTML page,\r\n\t\t//\t\tincluding any included via @import.\r\n\t\t// returns:\r\n\t\t//\t\tAn hash map of all the style sheets.\r\n\t\tif(pageStyleSheets.collected) {return pageStyleSheets;}\r\n\t\tvar sheets = Window.doc.styleSheets;\r\n\t\tArrayUtil.forEach(sheets, function(n){\r\n\t\t\tvar s = (n.sheet) ? n.sheet : n;\r\n\t\t\tvar name = s.title || s.href;\r\n\t\t\tif(has(\"ie\")){\r\n\t\t\t\t// IE attaches a style sheet for VML - do not include this\r\n\t\t\t\tif(s.cssText.indexOf(\"#default#VML\") === -1){\r\n\t\t\t\t\tif(s.href){\r\n\t\t\t\t\t\t// linked\r\n\t\t\t\t\t\tpageStyleSheets[name] = s;\r\n\t\t\t\t\t}else if(s.imports.length){\r\n\t\t\t\t\t\t// Imported via @import\r\n\t\t\t\t\t\tArrayUtil.forEach(s.imports, function(si){\r\n\t\t\t\t\t\t\tpageStyleSheets[si.title || si.href] = si;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t//embedded within page\r\n\t\t\t\t\t\tpageStyleSheets[name] = s;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t//linked or embedded\r\n\t\t\t\tpageStyleSheets[name] = s;\r\n\t\t\t\tpageStyleSheets[name].id = s.ownerNode.id;\r\n\t\t\t\tvar rules = [];\r\n\t\t\t\ttry {\r\n\t\t\t\t\trules = s[s.cssRules?\"cssRules\":\"rules\"];\r\n\t\t\t\t} catch(err) {\r\n\t\t\t\t\t// issue a warning that stylesheet couldn't be loaded, but continue\r\n\t\t\t\t\tconsole.warn(\"Reading css rules from stylesheet \"+s.href+\" is forbidden due to same-origin policy. See http://www.w3.org/TR/CSP/#cascading-style-sheet-css-parsing\",s);\r\n\t\t\t\t}\r\n\t\t\t\tArrayUtil.forEach(rules, function(r){\r\n\t\t\t\t\tif(r.href){\r\n\t\t\t\t\t\t// imported\r\n\t\t\t\t\t\tpageStyleSheets[r.href] = r.styleSheet;\r\n\t\t\t\t\t\tpageStyleSheets[r.href].id = s.ownerNode.id;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t\t//console.log(\"pageStyleSheets:\", pageStyleSheets);\r\n\t\tpageStyleSheets.collected = true;\r\n\t\treturn pageStyleSheets; //Object\r\n\t};\r\n\t\r\n\treturn dh;\r\n});\r\n"]}