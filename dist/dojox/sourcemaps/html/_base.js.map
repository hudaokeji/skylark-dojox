{"version":3,"sources":["html/_base.js"],"names":["define","declare","Deferred","domConstruct","htmlUtil","kernel","lang","ready","has","_Url","xhrUtil","when","windowUtil","html","getObject","alphaImageLoader","cssPaths","adjustCssPaths","_adjustCssPaths","cssUrl","cssText","replace","ignore","pre","delim","url","post","toString","delimStr","strUrl","delimUrl","urlUrl","media","htmlAttrPaths","adjustHtmlPaths","_adjustHtmlPaths","htmlUrl","cont","tag","start","name","relUrl","delim2","end","snarfStyles","_snarfStyles","styles","attributes","comment","styleAttr","linkAttr","href","i","attr","push","tmp","atObj","j","e","split","length","snarfScripts","_snarfScripts","byRef","code","src","downloadRemote","m","charAt","String","fromCharCode","substring","get","sync","load","error","errBack","download","evalInGlobal","appendNode","n","doc","body","ownerDocument","createElement","type","appendChild","text","_ContentSetter","adjustPaths","referencePath","renderStyles","executeScripts","scriptHasHooks","scriptHookReplacement","_renderStyles","this","_styleNodes","st","att","node","head","getElementsByTagName","x","setAttribute","styleSheet","createTextNode","empty","inherited","arguments","_styles","onBegin","content","isString","cleanContent","_t","_onError","call","id","_code","onEnd","destroy","pop","d","superClassOnEndMethod","getInherited","args","callSuperclass","hitch","apply","parseDeferred","resolve","message","promise","tearDown","mixin","prototype","set","params","_setNodeContent"],"mappings":";;;;;;;AAAAA,QACC,qBACA,gBACA,qBACA,YACA,oBACA,kBACA,aACA,mBACA,iBACA,iBACA,YACA,qBACE,SAASC,EAASC,EAAUC,EAAcC,EAAUC,EAAQC,EAAMC,EAAOC,EAAKC,EAAMC,EAASC,EAAMC,GAWrG,IAAIC,EAAOR,EAAOS,UAAU,cAAc,GAE1C,GAAGN,EAAI,MACN,IAAIO,EAAmB,sFAiBxB,IAAIC,EAAW,2HAEXC,EAAiBJ,EAAKK,gBAAkB,SAASC,EAAQC,GA0B5D,GAAIA,GAAYD,EAchB,OANGJ,IACFK,EAAUA,EAAQC,QAAQN,EAAkB,SAASO,EAAQC,EAAKC,EAAOC,EAAKC,GAC7E,OAAOH,EAAO,IAAId,EAAKU,EAAQ,KAAKM,GAAKE,WAAcD,KAIlDN,EAAQC,QAAQL,EAAU,SAASM,EAAQM,EAAUC,EAAQC,EAAUC,EAAQC,GACrF,OAAGH,EACK,YAAe,IAAIpB,EAAKU,EAAQ,KAAKU,GAAQF,WAAc,IAAMK,EAEjE,OAAU,IAAIvB,EAAKU,EAAQ,KAAKY,GAAQJ,WAAc,IAAMK,KAQlEC,EAAgB,6FAEhBC,EAAkBrB,EAAKsB,iBAAmB,SAASC,EAASC,GAC/D,IAAIZ,EAAMW,GAAW,KAErB,OAAOC,EAAKhB,QAAQY,EACnB,SAASK,EAAKC,EAAOC,EAAMhB,EAAOiB,EAAQC,EAAQtB,EAASuB,GAC1D,OAAOJ,GAASC,EACZA,EAAO,IAAMhB,EAAS,IAAIf,EAAKgB,EAAKgB,GAAQd,WAAcH,EACzD,SAAWkB,EAASzB,EAAeQ,EAAKL,GAAWsB,GACpDC,KAKHC,EAAc/B,EAAKgC,aAAe,SAAoB1B,EAAkBkB,EAAeS,GAW1F,OAPAA,EAAOC,eAEPV,EAAOA,EAAKhB,QAAQ,6BACnB,SAAS2B,GACR,OAAOA,EAAQ3B,QAAQ,kBAAkB,eAAeA,QAAQ,iBAAiB,cAAcA,QAAQ,cAAc,iBAG3GA,QAAQ,uHACnB,SAASC,EAAQ2B,EAAW7B,EAAS8B,EAAU1B,EAAO2B,GAErD,IAAIC,EAAGC,GAAQJ,GAAWC,GAAU,IAAI7B,QAAQ,sBAAuB,MAOvE,GANGD,EACFgC,EAAIN,EAAOQ,KAAKnC,EAASF,EAAeE,EAAQC,GAAWA,IAE3DgC,EAAIN,EAAOQ,KAAK,YAAcH,EAAO,MACrCE,EAAOA,EAAKhC,QAAQ,uCAAwC,KAE1DgC,EAAK,CAGP,IADA,IAAgBE,EAAZC,KACIC,EAAI,EAAGC,GAFfL,EAAOA,EAAKM,MAAM,QAEMC,OAAQH,EAAIC,EAAGD,IAEtCD,GADAD,EAAMF,EAAKI,GAAGE,MAAM,MACV,IAAMJ,EAAI,GAAGlC,QAAQ,+BAAgC,MAEhEyB,EAAOC,WAAWK,EAAI,GAAKI,EAE5B,MAAO,MAKNK,EAAehD,EAAKiD,cAAgB,SAASzB,EAAM0B,GA0CtD,OApCAA,EAAMC,KAAO,IAIb3B,EAAOA,EAAKhB,QAAQ,6BACnB,SAAS2B,GACR,OAAOA,EAAQ3B,QAAQ,mBAAmB,mBA8BhCA,QAAQ,mHACnB,SAASC,EAAQE,EAAOyC,EAAKD,GAM5B,OALGC,EA5BL,SAAkBA,GACdF,EAAMG,iBAIRD,EAAMA,EAAI5C,QAAQ,kBAAmB,SAAS8C,EAAG3B,GAChD,OAAOA,GACN,IAAK,MAAQ,MAAO,IACpB,IAAK,KAAO,MAAO,IACnB,IAAK,KAAO,MAAO,IACnB,QACC,MAAuB,KAAhBA,EAAK4B,OAAO,GAAUC,OAAOC,aAAa9B,EAAK+B,UAAU,IAAM,IAAI/B,EAAK,OAGlF9B,EAAQ8D,KACP/C,IAAKwC,EACLQ,MAAM,EACNC,KAAM,SAASV,GACdD,EAAMC,MAAQA,EAAK,KAEpBW,MAAOZ,EAAMa,WASbC,CAASZ,GAETF,EAAMC,MAAQA,EAER,MAKNc,EAAejE,EAAKiE,aAAe,SAASd,EAAMe,GAKrD,IAAIC,GADJD,EAAaA,GAAcnE,EAAWqE,IAAIC,MACvBC,cAAcC,cAAc,UAC/CJ,EAAEK,KAAO,kBACTN,EAAWO,YAAYN,GACvBA,EAAEO,KAAOvB,GAiNV,OA9MAnD,EAAK2E,eAAiBvF,EAAqDG,EAASoF,gBAInFC,aAAa,EACbC,cAAe,IACfC,cAAc,EAEdC,gBAAgB,EAChBC,gBAAgB,EAChBC,sBAAuB,KAEvBC,cAAe,SAASjD,GAEvBkD,KAAKC,eAIL,IAHA,IAAIC,EAAIC,EAAK/E,EAAS6D,EAAMe,KAAKI,KAAKjB,cAClCkB,EAAOpB,EAAIqB,qBAAqB,QAAQ,GAEpClD,EAAI,EAAGM,EAAIZ,EAAOc,OAAQR,EAAIM,EAAGN,IAAI,CAK5C,IAAI,IAAImD,KAJRnF,EAAU0B,EAAOM,GAAI+C,EAAMrD,EAAOC,WAAWK,IAC7C8C,EAAKjB,EAAIG,cAAc,UACpBoB,aAAa,OAAQ,YAEXL,EACZD,EAAGM,aAAaD,EAAGJ,EAAII,IAGxBP,KAAKC,YAAY3C,KAAK4C,GACtBG,EAAKf,YAAYY,GAEdA,EAAGO,WACLP,EAAGO,WAAWrF,QAAUA,EAExB8E,EAAGZ,YAAYL,EAAIyB,eAAetF,MAKrCuF,MAAO,WACNX,KAAKY,UAAU,QAASC,WAGxBb,KAAKc,YAGNC,QAAS,WAORf,KAAKY,UAAU,UAAWC,WAE1B,IAAIxE,EAAO2D,KAAKgB,QAGZlE,GAFIkD,KAAKI,KAEAJ,KAAKc,SAElB,GAAGxG,EAAK2G,SAAS5E,KACb2D,KAAKP,aAAeO,KAAKN,gBAC3BrD,EAAOH,EAAgB8D,KAAKN,cAAerD,KAGzC2D,KAAKL,cAAgBK,KAAKkB,gBAC5B7E,EAAOO,EAAYoD,KAAKN,cAAerD,EAAMS,IAK3CkD,KAAKJ,gBAAe,CACtB,IAAIuB,EAAKnB,KACLjC,GACHG,gBAAgB,EAChBU,QAAQ,SAASlB,GAChByD,EAAGC,SAASC,KAAKF,EAAI,OAAQ,uCAAuCA,EAAGG,GAAG,IAAK5D,KAGjFrB,EAAOwB,EAAaxB,EAAM0B,GAC1BiC,KAAKuB,MAAQxD,EAAMC,KAGrBgC,KAAKgB,QAAU3E,GAGhBmF,MAAO,WAMN,IAAIxD,EAAOgC,KAAKuB,MACfzE,EAASkD,KAAKc,QAMf,GAAGd,KAAKC,aAAeD,KAAKC,YAAYrC,OACvC,KAAMoC,KAAKC,YAAYrC,QACtBzD,EAAasH,QAAQzB,KAAKC,YAAYyB,OAIrC1B,KAAKL,cAAgB7C,GAAUA,EAAOc,QACxCoC,KAAKD,cAAcjD,GAIpB,IAAI6E,EAAI,IAAIzH,EAIR0H,EAAwB5B,KAAK6B,aAAahB,WAC7CiB,EAAOjB,UACPkB,EAAiBzH,EAAK0H,MAAMhC,KAAM,WACjC4B,EAAsBK,MAAMjC,KAAM8B,GAGlCnH,EAAKqF,KAAKkC,cAAe,WAAYP,EAAEQ,cAGzC,GAAGnC,KAAKJ,gBAAkB5B,EAAK,CAE3BgC,KAAKkB,eAGPlD,EAAOA,EAAK3C,QAAQ,yCAA0C,KAE5D2E,KAAKH,iBAIP7B,EAAOA,EAAK3C,QAAQ,2BAA4B2E,KAAKF,wBAEtD,IACChB,EAAad,EAAMgC,KAAKI,MACxB,MAAM1C,GACNsC,KAAKoB,SAAS,OAAQ,wBAAwBpB,KAAKsB,GAAG,KAAK5D,EAAE0E,QAAS1E,GAMvEnD,EAAMwH,QAINA,IAID,OAAOJ,EAAEU,SAGVC,SAAU,WAKT,GAJAtC,KAAKY,UAAUC,kBACRb,KAAKc,QAGTd,KAAKC,aAAeD,KAAKC,YAAYrC,OACvC,KAAMoC,KAAKC,YAAYrC,QACtBzD,EAAasH,QAAQzB,KAAKC,YAAYyB,cAGjC1B,KAAKC,YAKZ3F,EAAKiI,MAAMvC,KAAMnF,EAAK2E,eAAegD,cAKvC3H,EAAK4H,IAAM,SAAuBrC,EAAoC/D,EAAoBqG,GAkBzF,OAAIA,EAKM,IAAI7H,EAAK2E,eAAelF,EAAKiI,MACpCG,GACE1B,QAAS3E,EAAM+D,KAAMA,KAEfqC,MAPHrI,EAASuI,gBAAgBvC,EAAM/D,GAAM,IAWvCxB","file":"../../html/_base.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/Deferred\",\r\n\t\"dojo/dom-construct\",\r\n\t\"dojo/html\",\r\n\t\"dojo/_base/kernel\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/ready\",\r\n\t\"dojo/_base/sniff\",\r\n\t\"dojo/_base/url\",\r\n\t\"dojo/_base/xhr\",\r\n\t\"dojo/when\",\r\n\t\"dojo/_base/window\"\r\n], function(declare, Deferred, domConstruct, htmlUtil, kernel, lang, ready, has, _Url, xhrUtil, when, windowUtil){\r\n\r\n/*\r\n\tStatus: don't know where this will all live exactly\r\n\tNeed to pull in the implementation of the various helper methods\r\n\tSome can be static method, others maybe methods of the ContentSetter (?)\r\n\r\n\tGut the ContentPane, replace its _setContent with our own call to dojox.html.set()\r\n\r\n\r\n*/\r\n\tvar html = kernel.getObject(\"dojox.html\", true);\r\n\r\n\tif(has(\"ie\")){\r\n\t\tvar alphaImageLoader = /(AlphaImageLoader\\([^)]*?src=(['\"]))(?![a-z]+:|\\/)([^\\r\\n;}]+?)(\\2[^)]*\\)\\s*[;}]?)/g;\r\n\t}\r\n\r\n\t// css at-rules must be set before any css declarations according to CSS spec\r\n\t// match:\r\n\t// @import 'http://dojotoolkit.org/dojo.css';\r\n\t// @import 'you/never/thought/' print;\r\n\t// @import url(\"it/would/work\") tv, screen;\r\n\t// @import url(/did/you/now.css);\r\n\t// but not:\r\n\t// @namespace dojo \"http://dojotoolkit.org/dojo.css\"; /* namespace URL should always be a absolute URI */\r\n\t// @charset 'utf-8';\r\n\t// @media print{ #menuRoot {display:none;} }\r\n\r\n\t// we adjust all paths that dont start on '/' or contains ':'\r\n\t//(?![a-z]+:|\\/)\r\n\r\n\tvar cssPaths = /(?:(?:@import\\s*(['\"])(?![a-z]+:|\\/)([^\\r\\n;{]+?)\\1)|url\\(\\s*(['\"]?)(?![a-z]+:|\\/)([^\\r\\n;]+?)\\3\\s*\\))([a-z, \\s]*[;}]?)/g;\r\n\r\n\tvar adjustCssPaths = html._adjustCssPaths = function(cssUrl, cssText){\r\n\t\t// summary:\r\n\t\t//\t\tadjusts relative paths in cssText to be relative to cssUrl\r\n\t\t//\t\ta path is considered relative if it doesn't start with '/' and not contains ':'\r\n\t\t// description:\r\n\t\t//\t\tSay we fetch a HTML page from level1/page.html\r\n\t\t//\t\tIt has some inline CSS:\r\n\t\t//\t|\t\t@import \"css/page.css\" tv, screen;\r\n\t\t//\t|\t\t...\r\n\t\t//\t|\t\tbackground-image: url(images/aplhaimage.png);\r\n\t\t//\r\n\t\t//\t\tas we fetched this HTML and therefore this CSS\r\n\t\t//\t\tfrom level1/page.html, these paths needs to be adjusted to:\r\n\t\t//\t|\t\t@import 'level1/css/page.css' tv, screen;\r\n\t\t//\t|\t\t...\r\n\t\t//\t|\t\tbackground-image: url(level1/images/alphaimage.png);\r\n\t\t//\r\n\t\t//\t\tIn IE it will also adjust relative paths in AlphaImageLoader()\r\n\t\t//\t|\t\tfilter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src='images/alphaimage.png');\r\n\t\t//\t\twill be adjusted to:\r\n\t\t//\t|\t\tfilter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src='level1/images/alphaimage.png');\r\n\t\t//\r\n\t\t//\t\tPlease note that any relative paths in AlphaImageLoader in external css files wont work, as\r\n\t\t//\t\tthe paths in AlphaImageLoader is MUST be declared relative to the HTML page,\r\n\t\t//\t\tnot relative to the CSS file that declares it\r\n\r\n\t\tif(!cssText || !cssUrl){ return; }\r\n\r\n\t\t// support the ImageAlphaFilter if it exists, most people use it in IE 6 for transparent PNGs\r\n\t\t// We are NOT going to kill it in IE 7 just because the PNGs work there. Somebody might have\r\n\t\t// other uses for it.\r\n\t\t// If user want to disable css filter in IE6  he/she should\r\n\t\t// unset filter in a declaration that just IE 6 doesn't understands\r\n\t\t// like * > .myselector { filter:none; }\r\n\t\tif(alphaImageLoader){\r\n\t\t\tcssText = cssText.replace(alphaImageLoader, function(ignore, pre, delim, url, post){\r\n\t\t\t\treturn pre + (new _Url(cssUrl, './'+url).toString()) + post;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn cssText.replace(cssPaths, function(ignore, delimStr, strUrl, delimUrl, urlUrl, media){\r\n\t\t\tif(strUrl){\r\n\t\t\t\treturn '@import \"' + (new _Url(cssUrl, './'+strUrl).toString()) + '\"' + media;\r\n\t\t\t}else{\r\n\t\t\t\treturn 'url(' + (new _Url(cssUrl, './'+urlUrl).toString()) + ')' + media;\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t// attributepaths one tag can have multiple paths, example:\r\n\t// <input src=\"...\" style=\"url(..)\"/> or <a style=\"url(..)\" href=\"..\">\r\n\t// <img style='filter:progid...AlphaImageLoader(src=\"noticeTheSrcHereRunsThroughHtmlSrc\")' src=\"img\">\r\n\tvar htmlAttrPaths = /(<[a-z][a-z0-9]*\\s[^>]*)(?:(href|src)=(['\"]?)([^>]*?)\\3|style=(['\"]?)([^>]*?)\\5)([^>]*>)/gi;\r\n\r\n\tvar adjustHtmlPaths = html._adjustHtmlPaths = function(htmlUrl, cont){\r\n\t\tvar url = htmlUrl || \"./\";\r\n\r\n\t\treturn cont.replace(htmlAttrPaths,\r\n\t\t\tfunction(tag, start, name, delim, relUrl, delim2, cssText, end){\r\n\t\t\t\treturn start + (name ?\r\n\t\t\t\t\t\t\t(name + '=' + delim + (new _Url(url, relUrl).toString()) + delim)\r\n\t\t\t\t\t\t: ('style=' + delim2 + adjustCssPaths(url, cssText) + delim2)\r\n\t\t\t\t) + end;\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tvar snarfStyles = html._snarfStyles = function\t(/*String*/cssUrl, /*String*/cont, /*Array*/styles){\r\n\t\t/****************  cut out all <style> and <link rel=\"stylesheet\" href=\"..\"> **************/\r\n\t\t// also return any attributes from this tag (might be a media attribute)\r\n\t\t// if cssUrl is set it will adjust paths accordingly\r\n\t\tstyles.attributes = [];\r\n\r\n\t\tcont = cont.replace(/<[!][-][-](.|\\s)*?[-][-]>/g,\r\n\t\t\tfunction(comment){\r\n\t\t\t\treturn comment.replace(/<(\\/?)style\\b/ig,\"&lt;$1Style\").replace(/<(\\/?)link\\b/ig,\"&lt;$1Link\").replace(/@import \"/ig,\"@ import \\\"\");\r\n\t\t\t}\r\n\t\t);\r\n\t\treturn cont.replace(/(?:<style([^>]*)>([\\s\\S]*?)<\\/style>|<link\\s+(?=[^>]*rel=['\"]?stylesheet)([^>]*?href=(['\"])([^>]*?)\\4[^>\\/]*)\\/?>)/gi,\r\n\t\t\tfunction(ignore, styleAttr, cssText, linkAttr, delim, href){\r\n\t\t\t\t// trim attribute\r\n\t\t\t\tvar i, attr = (styleAttr||linkAttr||\"\").replace(/^\\s*([\\s\\S]*?)\\s*$/i, \"$1\");\r\n\t\t\t\tif(cssText){\r\n\t\t\t\t\ti = styles.push(cssUrl ? adjustCssPaths(cssUrl, cssText) : cssText);\r\n\t\t\t\t}else{\r\n\t\t\t\t\ti = styles.push('@import \"' + href + '\";');\r\n\t\t\t\t\tattr = attr.replace(/\\s*(?:rel|href)=(['\"])?[^\\s]*\\1\\s*/gi, \"\"); // remove rel=... and href=...\r\n\t\t\t\t}\r\n\t\t\t\tif(attr){\r\n\t\t\t\t\tattr = attr.split(/\\s+/);// split on both \"\\n\", \"\\t\", \" \" etc\r\n\t\t\t\t\tvar atObj = {}, tmp;\r\n\t\t\t\t\tfor(var j = 0, e = attr.length; j < e; j++){\r\n\t\t\t\t\t\ttmp = attr[j].split('='); // split name='value'\r\n\t\t\t\t\t\tatObj[tmp[0]] = tmp[1].replace(/^\\s*['\"]?([\\s\\S]*?)['\"]?\\s*$/, \"$1\"); // trim and remove ''\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstyles.attributes[i - 1] = atObj;\r\n\t\t\t\t}\r\n\t\t\t\treturn \"\";\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tvar snarfScripts = html._snarfScripts = function(cont, byRef){\r\n\t\t// summary:\r\n\t\t//\t\tstrips out script tags from cont\r\n\t\t// byRef:\r\n\t\t//\t\tbyRef = {errBack:function(){/*add your download error code here*/, downloadRemote: true(default false)}}\r\n\t\t//\t\tbyRef will have {code: 'jscode'} when this scope leaves\r\n\t\tbyRef.code = \"\";\r\n\r\n\t\t//Update script tags nested in comments so that the script tag collector doesn't pick\r\n\t\t//them up.\r\n\t\tcont = cont.replace(/<[!][-][-](.|\\s)*?[-][-]>/g,\r\n\t\t\tfunction(comment){\r\n\t\t\t\treturn comment.replace(/<(\\/?)script\\b/ig,\"&lt;$1Script\");\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tfunction download(src){\r\n\t\t\tif(byRef.downloadRemote){\r\n\t\t\t\t// console.debug('downloading',src);\r\n\t\t\t\t//Fix up src, in case there were entity character encodings in it.\r\n\t\t\t\t//Probably only need to worry about a subset.\r\n\t\t\t\tsrc = src.replace(/&([a-z0-9#]+);/g, function(m, name) {\r\n\t\t\t\t\tswitch(name) {\r\n\t\t\t\t\t\tcase \"amp\"\t: return \"&\";\r\n\t\t\t\t\t\tcase \"gt\"\t: return \">\";\r\n\t\t\t\t\t\tcase \"lt\"\t: return \"<\";\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\treturn name.charAt(0)==\"#\" ? String.fromCharCode(name.substring(1)) : \"&\"+name+\";\";\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\txhrUtil.get({\r\n\t\t\t\t\turl: src,\r\n\t\t\t\t\tsync: true,\r\n\t\t\t\t\tload: function(code){\r\n\t\t\t\t\t\tbyRef.code += code+\";\";\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: byRef.errBack\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// match <script>, <script type=\"text/..., but not <script type=\"dojo(/method)...\r\n\t\treturn cont.replace(/<script\\s*(?![^>]*type=['\"]?(?:dojo\\/|text\\/html\\b))[^>]*?(?:src=(['\"]?)([^>]*?)\\1[^>]*)?>([\\s\\S]*?)<\\/script>/gi,\r\n\t\t\tfunction(ignore, delim, src, code){\r\n\t\t\t\tif(src){\r\n\t\t\t\t\tdownload(src);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbyRef.code += code;\r\n\t\t\t\t}\r\n\t\t\t\treturn \"\";\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tvar evalInGlobal = html.evalInGlobal = function(code, appendNode){\r\n\t\t// we do our own eval here as dojo.eval doesn't eval in global crossbrowser\r\n\t\t// This work X browser but but it relies on a DOM\r\n\t\t// plus it doesn't return anything, thats unrelevant here but not for dojo core\r\n\t\tappendNode = appendNode || windowUtil.doc.body;\r\n\t\tvar n = appendNode.ownerDocument.createElement('script');\r\n\t\tn.type = \"text/javascript\";\r\n\t\tappendNode.appendChild(n);\r\n\t\tn.text = code; // DOM 1 says this should work\r\n\t};\r\n\r\n\thtml._ContentSetter = declare(/*===== \"dojox.html._ContentSetter\", =====*/ htmlUtil._ContentSetter, {\r\n\t\t// adjustPaths: Boolean\r\n\t\t//\t\tAdjust relative paths in html string content to point to this page\r\n\t\t//\t\tOnly useful if you grab content from a another folder than the current one\r\n\t\tadjustPaths: false,\r\n\t\treferencePath: \".\",\r\n\t\trenderStyles: false,\r\n\r\n\t\texecuteScripts: false,\r\n\t\tscriptHasHooks: false,\r\n\t\tscriptHookReplacement: null,\r\n\r\n\t\t_renderStyles: function(styles){\r\n\t\t\t// insert css from content into document head\r\n\t\t\tthis._styleNodes = [];\r\n\t\t\tvar st, att, cssText, doc = this.node.ownerDocument;\r\n\t\t\tvar head = doc.getElementsByTagName('head')[0];\r\n\r\n\t\t\tfor(var i = 0, e = styles.length; i < e; i++){\r\n\t\t\t\tcssText = styles[i]; att = styles.attributes[i];\r\n\t\t\t\tst = doc.createElement('style');\r\n\t\t\t\tst.setAttribute(\"type\", \"text/css\"); // this is required in CSS spec!\r\n\r\n\t\t\t\tfor(var x in att){\r\n\t\t\t\t\tst.setAttribute(x, att[x]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._styleNodes.push(st);\r\n\t\t\t\thead.appendChild(st); // must insert into DOM before setting cssText\r\n\r\n\t\t\t\tif(st.styleSheet){ // IE\r\n\t\t\t\t\tst.styleSheet.cssText = cssText;\r\n\t\t\t\t}else{ // w3c\r\n\t\t\t\t\tst.appendChild(doc.createTextNode(cssText));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tempty: function() {\r\n\t\t\tthis.inherited(\"empty\", arguments);\r\n\r\n\t\t\t// empty out the styles array from any previous use\r\n\t\t\tthis._styles = [];\r\n\t\t},\r\n\r\n\t\tonBegin: function() {\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled after instantiation, but before set();\r\n\t\t\t//\t\tIt allows modification of any of the object properties - including the node and content\r\n\t\t\t//\t\tprovided - before the set operation actually takes place\r\n\t\t\t//\t\tThis implementation extends that of dojo.html._ContentSetter\r\n\t\t\t//\t\tto add handling for adjustPaths, renderStyles on the html string content before it is set\r\n\t\t\tthis.inherited(\"onBegin\", arguments);\r\n\r\n\t\t\tvar cont = this.content,\r\n\t\t\t\tnode = this.node;\r\n\r\n\t\t\tvar styles = this._styles;// init vars\r\n\r\n\t\t\tif(lang.isString(cont)){\r\n\t\t\t\tif(this.adjustPaths && this.referencePath){\r\n\t\t\t\t\tcont = adjustHtmlPaths(this.referencePath, cont);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(this.renderStyles || this.cleanContent){\r\n\t\t\t\t\tcont = snarfStyles(this.referencePath, cont, styles);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// because of a bug in IE, script tags that is first in html hierarchy doesnt make it into the DOM\r\n\t\t\t\t//\twhen content is innerHTML'ed, so we can't use dojo.query to retrieve scripts from DOM\r\n\t\t\t\tif(this.executeScripts){\r\n\t\t\t\t\tvar _t = this;\r\n\t\t\t\t\tvar byRef = {\r\n\t\t\t\t\t\tdownloadRemote: true,\r\n\t\t\t\t\t\terrBack:function(e){\r\n\t\t\t\t\t\t\t_t._onError.call(_t, 'Exec', 'Error downloading remote script in \"'+_t.id+'\"', e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\tcont = snarfScripts(cont, byRef);\r\n\t\t\t\t\tthis._code = byRef.code;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.content = cont;\r\n\t\t},\r\n\r\n\t\tonEnd: function() {\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled after set(), when the new content has been pushed into the node\r\n\t\t\t//\t\tIt provides an opportunity for post-processing before handing back the node to the caller\r\n\t\t\t//\t\tThis implementation extends that of dojo.html._ContentSetter\r\n\r\n\t\t\tvar code = this._code,\r\n\t\t\t\tstyles = this._styles;\r\n\r\n\t\t\t// clear old stylenodes from the DOM\r\n\t\t\t// these were added by the last set call\r\n\t\t\t// (in other words, if you dont keep and reuse the ContentSetter for a particular node\r\n\t\t\t// .. you'll have no practical way to do this)\r\n\t\t\tif(this._styleNodes && this._styleNodes.length){\r\n\t\t\t\twhile(this._styleNodes.length){\r\n\t\t\t\t\tdomConstruct.destroy(this._styleNodes.pop());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// render new style nodes\r\n\t\t\tif(this.renderStyles && styles && styles.length){\r\n\t\t\t\tthis._renderStyles(styles);\r\n\t\t\t}\r\n\r\n\t\t\t// Deferred to signal when this function is complete\r\n\t\t\tvar d = new Deferred();\r\n\r\n\t\t\t// Setup function to call onEnd() in the superclass, for parsing, and resolve the above Deferred when\r\n\t\t\t// parsing is complete.\r\n\t\t\tvar superClassOnEndMethod = this.getInherited(arguments),\r\n\t\t\t\targs = arguments,\r\n\t\t\t\tcallSuperclass = lang.hitch(this, function(){\r\n\t\t\t\t\tsuperClassOnEndMethod.apply(this, args);\r\n\r\n\t\t\t\t\t// If parser ran (parseContent == true), wait for it to finish, otherwise call d.resolve() immediately\r\n\t\t\t\t\twhen(this.parseDeferred, function(){ d.resolve(); });\r\n\t\t\t\t});\r\n\r\n\t\t\tif(this.executeScripts && code){\r\n\t\t\t\t// Evaluate any <script> blocks in the content\r\n\t\t\t\tif(this.cleanContent){\r\n\t\t\t\t\t// clean JS from html comments and other crap that browser\r\n\t\t\t\t\t// parser takes care of in a normal page load\r\n\t\t\t\t\tcode = code.replace(/(<!--|(?:\\/\\/)?-->|<!\\[CDATA\\[|\\]\\]>)/g, '');\r\n\t\t\t\t}\r\n\t\t\t\tif(this.scriptHasHooks){\r\n\t\t\t\t\t// replace _container_ with this.scriptHookReplace()\r\n\t\t\t\t\t// the scriptHookReplacement can be a string\r\n\t\t\t\t\t// or a function, which when invoked returns the string you want to substitute in\r\n\t\t\t\t\tcode = code.replace(/_container_(?!\\s*=[^=])/g, this.scriptHookReplacement);\r\n\t\t\t\t}\r\n\t\t\t\ttry{\r\n\t\t\t\t\tevalInGlobal(code, this.node);\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\tthis._onError('Exec', 'Error eval script in '+this.id+', '+e.message, e);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Finally, use ready() to wait for any require() calls from the <script> blocks to complete,\r\n\t\t\t\t// then call onEnd() in the superclass, for parsing, and when that is done resolve the Deferred.\r\n\t\t\t\t// For 2.0, remove the call to ready() (or this whole if() branch?) since the parser can do loading for us.\r\n\t\t\t\tready(callSuperclass);\r\n\t\t\t}else{\r\n\t\t\t\t// There were no <script>'s to execute, so immediately call onEnd() in the superclass, and\r\n\t\t\t\t// when the parser finishes running, resolve the Deferred.\r\n\t\t\t\tcallSuperclass();\r\n\t\t\t}\r\n\r\n\t\t\t// Return a promise that resolves after the ready() call completes, and after the parser finishes running.\r\n\t\t\treturn d.promise;\r\n\t\t},\r\n\r\n\t\ttearDown: function() {\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tdelete this._styles;\r\n\t\t\t// only tear down -or another set() - will explicitly throw away the\r\n\t\t\t// references to the style nodes we added\r\n\t\t\tif(this._styleNodes && this._styleNodes.length){\r\n\t\t\t\twhile(this._styleNodes.length){\r\n\t\t\t\t\tdomConstruct.destroy(this._styleNodes.pop());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdelete this._styleNodes;\r\n\t\t\t// reset the defaults from the prototype\r\n\t\t\t// XXX: not sure if this is the correct intended behaviour, it was originally\r\n\t\t\t// dojo.getObject(this.declaredClass).prototype which will not work with anonymous\r\n\t\t\t// modules\r\n\t\t\tlang.mixin(this, html._ContentSetter.prototype);\r\n\t\t}\r\n\r\n\t});\r\n\r\n\thtml.set = function(/* DomNode */ node, /* String|DomNode|NodeList */ cont, /* Object? */ params){\r\n\t\t// TODO: add all the other options\r\n\t\t\t// summary:\r\n\t\t\t//\t\tinserts (replaces) the given content into the given node\r\n\t\t\t// node:\r\n\t\t\t//\t\tthe parent element that will receive the content\r\n\t\t\t// cont:\r\n\t\t\t//\t\tthe content to be set on the parent element.\r\n\t\t\t//\t\tThis can be an html string, a node reference or a NodeList, dojo/NodeList, Array or other enumerable list of nodes\r\n\t\t\t// params:\r\n\t\t\t//\t\tOptional flags/properties to configure the content-setting. See dojo.html._ContentSetter\r\n\t\t\t// example:\r\n\t\t\t//\t\tA safe string/node/nodelist content replacement/injection with hooks for extension\r\n\t\t\t//\t\tExample Usage:\r\n\t\t\t//\t|\tdojo.html.set(node, \"some string\");\r\n\t\t\t//\t|\tdojo.html.set(node, contentNode, {options});\r\n\t\t\t//\t|\tdojo.html.set(node, myNode.childNodes, {options});\r\n\r\n\t\tif(!params){\r\n\t\t\t// simple and fast\r\n\t\t\treturn htmlUtil._setNodeContent(node, cont, true);\r\n\t\t}else{\r\n\t\t\t// more options but slower\r\n\t\t\tvar op = new html._ContentSetter(lang.mixin(\r\n\t\t\t\t\tparams,\r\n\t\t\t\t\t{ content: cont, node: node }\r\n\t\t\t));\r\n\t\t\treturn op.set();\r\n\t\t}\r\n\t};\r\n\r\n\treturn html;\r\n});"]}