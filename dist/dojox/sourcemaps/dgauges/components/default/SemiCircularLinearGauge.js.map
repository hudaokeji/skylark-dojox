{"version":3,"sources":["dgauges/components/default/SemiCircularLinearGauge.js"],"names":["define","lang","declare","Color","utils","CircularGauge","LinearScaler","CircularScale","CircularValueIndicator","TextIndicator","DefaultPropertiesMixin","_radius","_width","_height","borderColor","fillColor","indicatorColor","constructor","this","addElement","hitch","drawBackground","scaler","scale","set","indicator","addIndicator","drawForeground","drawTextBorder","indicatorText","genericCircularGauge","g","w","h","gap","cr","entries","createGradient","brightness","createRect","x","y","width","height","r","setFill","mixin","type","x1","y1","x2","y2","setStroke","color","cx","cy","createEllipse","rx","ry"],"mappings":"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","file":"../../../../dgauges/components/default/SemiCircularLinearGauge.js","sourcesContent":["define([\r\n\t\t\"dojo/_base/lang\", \r\n\t\t\"dojo/_base/declare\", \r\n\t\t\"dojo/_base/Color\", \r\n\t\t\"../utils\",\r\n\t\t\"../../CircularGauge\", \r\n\t\t\"../../LinearScaler\", \r\n\t\t\"../../CircularScale\", \r\n\t\t\"../../CircularValueIndicator\", \r\n\t\t\"../../TextIndicator\",\r\n\t\t\"../DefaultPropertiesMixin\"\r\n\t\t], \r\n\tfunction(lang, declare, Color, utils, CircularGauge, LinearScaler, CircularScale, CircularValueIndicator, TextIndicator, DefaultPropertiesMixin){\r\n\treturn declare(\"dojox.dgauges.components.default.SemiCircularLinearGauge\", [CircularGauge, DefaultPropertiesMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tA semi circular gauge widget.\r\n\r\n\t\t_radius: 88,\r\n\t\t_width: 200,\r\n\t\t_height: 123,\r\n\t\t// borderColor: Object|Array|int\r\n\t\t//\t\tThe border color. Default is \"#C9DFF2\".\r\n\t\tborderColor: \"#C9DFF2\",\r\n\t\t// fillColor: Object|Array|int\r\n\t\t//\t\tThe background color. Default is \"#FCFCFF\".\r\n\t\tfillColor: \"#FCFCFF\",\r\n\t\t// indicatorColor: Object|Array|int\r\n\t\t//\t\tThe indicator fill color. Default is \"#F01E28\".\r\n\t\tindicatorColor: \"#F01E28\",\r\n\t\tconstructor: function(){\r\n\t\t\t\r\n\t\t\t// Base colors\r\n\t\t\tthis.borderColor = new Color(this.borderColor);\r\n\t\t\tthis.fillColor = new Color(this.fillColor);\r\n\t\t\tthis.indicatorColor = new Color(this.indicatorColor);\r\n\r\n\t\t\t// Draw background\r\n\t\t\tthis.addElement(\"background\", lang.hitch(this, this.drawBackground));\r\n\t\t\t\r\n\t\t\t// Scaler\r\n\t\t\tvar scaler = new LinearScaler();\r\n\t\t\t\r\n\t\t\t// Scale\r\n\t\t\tvar scale = new CircularScale();\r\n\t\t\tscale.set(\"scaler\", scaler);\r\n\t\t\tthis.addElement(\"scale\", scale);\r\n\t\t\t\r\n\t\t\t// Value indicator\r\n\t\t\tvar indicator = new CircularValueIndicator();\r\n\t\t\tscale.addIndicator(\"indicator\", indicator);\r\n\t\t\t\r\n\t\t\t// Gauge Foreground (needle cap)\r\n\t\t\tthis.addElement(\"foreground\", lang.hitch(this, this.drawForeground));\r\n\t\t\t\r\n\t\t\t// Indicator Text Border\r\n\t\t\tthis.addElement(\"indicatorTextBorder\", lang.hitch(this, this.drawTextBorder), \"leading\");\r\n\t\t\t\r\n\t\t\t// Indicator Text\r\n\t\t\tvar indicatorText = new TextIndicator();\r\n\t\t\tindicatorText.set(\"indicator\", indicator);\r\n\t\t\tindicatorText.set(\"x\", 100);\r\n\t\t\tindicatorText.set(\"y\", 115);\r\n\t\t\tthis.addElement(\"indicatorText\", indicatorText);\t\t\t\r\n\t\t\t\r\n\t\t\tutils.genericCircularGauge(scale, indicator, this._width / 2, 0.76 * this._height, this._radius, 166, 14, null, null, \"inside\");\r\n\t\t},\r\n\t\t\r\n\t\tdrawBackground: function(g){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDraws the background shape of the gauge.\r\n\t\t\t// g: dojox/gfx/Group\r\n\t\t\t//\t\tThe group used to draw the background. \r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar w = this._width;\r\n\t\t\tvar h = this._height;\r\n\t\t\tvar gap = 0;\r\n\t\t\tvar cr = 3;\r\n\t\t\tvar entries = utils.createGradient([0, utils.brightness(this.borderColor, -20), 0.1, utils.brightness(this.borderColor, -40)]);\r\n\t\t\tg.createRect({\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0,\r\n\t\t\t\twidth: w,\r\n\t\t\t\theight: h,\r\n\t\t\t\tr: cr\r\n\t\t\t}).setFill(lang.mixin({\r\n\t\t\t\ttype: \"linear\",\r\n\t\t\t\tx1: 0,\r\n\t\t\t\ty1: 0,\r\n\t\t\t\tx2: w,\r\n\t\t\t\ty2: h\r\n\t\t\t}, entries)).setStroke({\r\n\t\t\t\tcolor: \"#A5A5A5\",\r\n\t\t\t\twidth: 0.2\r\n\t\t\t});\r\n\t\t\tentries = utils.createGradient([0, utils.brightness(this.borderColor, 70), 1, utils.brightness(this.borderColor, -50)]);\r\n\t\t\tgap = 4;\r\n\t\t\tcr = 2\r\n\t\t\tg.createRect({\r\n\t\t\t\tx: gap,\r\n\t\t\t\ty: gap,\r\n\t\t\t\twidth: w - 2 * gap,\r\n\t\t\t\theight: h - 2 * gap,\r\n\t\t\t\tr: cr\r\n\t\t\t}).setFill(lang.mixin({\r\n\t\t\t\ttype: \"linear\",\r\n\t\t\t\tx1: 0,\r\n\t\t\t\ty1: 0,\r\n\t\t\t\tx2: w,\r\n\t\t\t\ty2: h\r\n\t\t\t}, entries));\r\n\t\t\tgap = 6;\r\n\t\t\tcr = 1\r\n\t\t\tentries = utils.createGradient([0, utils.brightness(this.borderColor, 60), 1, utils.brightness(this.borderColor, -40)]);\r\n\t\t\tg.createRect({\r\n\t\t\t\tx: gap,\r\n\t\t\t\ty: gap,\r\n\t\t\t\twidth: w - 2 * gap,\r\n\t\t\t\theight: h - 2 * gap,\r\n\t\t\t\tr: cr\r\n\t\t\t}).setFill(lang.mixin({\r\n\t\t\t\ttype: \"linear\",\r\n\t\t\t\tx1: 0,\r\n\t\t\t\ty1: 0,\r\n\t\t\t\tx2: w,\r\n\t\t\t\ty2: h\r\n\t\t\t}, entries));\r\n\t\t\t\r\n\t\t\tgap = 7;\r\n\t\t\tcr = 0\r\n\t\t\tentries = utils.createGradient([0, utils.brightness(this.borderColor, 70), 1, utils.brightness(this.borderColor, -40)]);\r\n\t\t\tg.createRect({\r\n\t\t\t\tx: gap,\r\n\t\t\t\ty: gap,\r\n\t\t\t\twidth: w - 2 * gap,\r\n\t\t\t\theight: h - 2 * gap,\r\n\t\t\t\tr: cr\r\n\t\t\t}).setFill(lang.mixin({\r\n\t\t\t\ttype: \"linear\",\r\n\t\t\t\tx1: w,\r\n\t\t\t\ty1: 0,\r\n\t\t\t\tx2: 0,\r\n\t\t\t\ty2: h\r\n\t\t\t}, entries));\r\n\t\t\tgap = 5;\r\n\t\t\tcr = 0\t\t\t\r\n\t\t\tentries = utils.createGradient([0, [255, 255, 255, 220], 0.8, utils.brightness(this.fillColor, -5), 1, utils.brightness(this.fillColor, -30)]);\r\n\t\t\tg.createRect({\r\n\t\t\t\tx: gap,\r\n\t\t\t\ty: gap,\r\n\t\t\t\twidth: w - 2 * gap,\r\n\t\t\t\theight: h - 2 * gap,\r\n\t\t\t\tr: cr\r\n\t\t\t}).setFill(lang.mixin({\r\n\t\t\t\ttype: \"radial\",\r\n\t\t\t\tcx: w/2,\r\n\t\t\t\tcy: h/2,\r\n\t\t\t\tr: h\r\n\t\t\t}, entries)).setStroke({\r\n\t\t\t\tcolor: utils.brightness(this.fillColor, -40),\r\n\t\t\t\twidth: 0.4\r\n\t\t\t});\r\n\t\t\t\r\n\t\t},\r\n\t\t\r\n\t\tdrawForeground: function(g){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDraws the foreground shape of the gauge.\r\n\t\t\t// g: dojox/gfx/Group\r\n\t\t\t//\t\tThe group used to draw the foreground. \r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar r = 0.07 * this._radius;\r\n\t\t\tvar entries = utils.createGradient([0, this.borderColor, 1, utils.brightness(this.borderColor, -20)]);\r\n\t\t\tg.createEllipse({\r\n\t\t\t\tcx: this._width / 2,\r\n\t\t\t\tcy: 0.76 * this._height,\r\n\t\t\t\trx: r,\r\n\t\t\t\try: r\r\n\t\t\t}).setFill(lang.mixin({\r\n\t\t\t\ttype: \"radial\",\r\n\t\t\t\tcx: this._width / 2 - 5,\r\n\t\t\t\tcy: this._height * 0.76 - 5,\r\n\t\t\t\tr: r\r\n\t\t\t}, entries)).setStroke({\r\n\t\t\t\tcolor: utils.brightness(this.fillColor, -50),\r\n\t\t\t\twidth: 0.4\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\tdrawTextBorder: function(g){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\treturn g.createRect({\r\n\t\t\t\tx: this._width / 2 - 12,\r\n\t\t\t\ty: this._height - 20,\r\n\t\t\t\twidth: 24,\r\n\t\t\t\theight: 14\r\n\t\t\t}).setStroke({\r\n\t\t\t\tcolor: utils.brightness(this.fillColor, -20),\r\n\t\t\t\twidth: 0.3\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n});\r\n\r\n"]}