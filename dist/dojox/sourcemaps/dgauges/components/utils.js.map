{"version":3,"sources":["dgauges/components/utils.js"],"names":["define","lang","Color","utils","mixin","brightness","col","b","res","r","Math","max","min","g","createGradient","entries","obj","colors","i","length","offset","color","push","_setter","attributes","values","genericCircularGauge","scale","indicator","originX","originY","radius","startAngle","endAngle","orientation","font","labelPosition","tickShapeFunc","family","style","size","group","tick","majorStroke","minorStroke","stroke","tickStroke","width","toRgb","createLine","x1","isMinor","y1","x2","y2","setStroke","this","set","createPolyline","setFill","_gauge","indicatorColor"],"mappings":";;;;;;;AAAAA,QAAQ,kBAAmB,oBAAqB,SAASC,EAAMC,GAQ9D,IAAIC,KA2HJ,OAzHAF,EAAKG,MAAMD,GACVE,WAAY,SAASC,EAAKC,GASzB,IAAIC,EAAMP,EAAKG,MAAM,KAAME,GAI3B,OAHAE,EAAIC,EAAIC,KAAKC,IAAID,KAAKE,IAAIJ,EAAIC,EAAIF,EAAG,KAAM,GAC3CC,EAAIK,EAAIH,KAAKC,IAAID,KAAKE,IAAIJ,EAAIK,EAAIN,EAAG,KAAM,GAC3CC,EAAID,EAAIG,KAAKC,IAAID,KAAKE,IAAIJ,EAAID,EAAIA,EAAG,KAAM,GACpCC,GAGRM,eAAgB,SAASC,GAWxB,IAJA,IAGIC,EAHAR,GACHS,WAGOC,EAAI,EAAGA,EAAIH,EAAQI,OAAQD,IAC/BA,EAAI,GAAK,EACXF,GACCI,OAAQL,EAAQG,KAGjBF,EAAIK,MAAQN,EAAQG,GACpBV,EAAIS,OAAOK,KAAKN,IAGlB,OAAOR,GAGRe,QAAS,SAASP,EAAKQ,EAAYC,GAClC,IAAI,IAAIP,EAAI,EAAGA,EAAIM,EAAWL,OAAQD,IACrCF,EAAIQ,EAAWN,IAAMO,EAAOP,IAI9BQ,qBAAsB,SAASC,EAAOC,EAAWC,EAASC,EAASC,EAAQC,EAAYC,EAAUC,EAAaC,EAAMC,EAAeC,GA4B9HH,IACHA,EAAc,aAEXC,IACHA,GACCG,OAAQ,YACRC,MAAO,SACPC,KAAM,OACNnB,MAAO,YAGLe,IACHA,EAAgB,UAEbC,IACHA,EAAgB,SAASI,EAAOd,EAAOe,GACtC,IACIC,EACAC,EAFAC,EAASlB,EAAMmB,WAGnB,GAAGD,EAAO,CACTF,GAAetB,MAAMwB,EAAOxB,MAAQwB,EAAOxB,MAAQ,UAAW0B,MAAMF,EAAOE,MAAQF,EAAOE,MAAQ,IAClG,IAAIzC,EAAM,IAAIJ,EAAM2C,EAAOxB,OAAO2B,QAClCJ,GAAevB,MAAMwB,EAAOxB,MAAQlB,EAAME,YAAYI,EAAEH,EAAI,GAAIO,EAAEP,EAAI,GAAIC,EAAED,EAAI,IAAI,IAAM,UAAWyC,MAAMF,EAAOE,MAAuB,GAAfF,EAAOE,MAAc,IAEhJ,OAAON,EAAMQ,YACZC,GAAIR,EAAKS,QAAU,EAAI,EACvBC,GAAI,EACJC,GAAIX,EAAKS,QAAU,EAAI,GACvBG,GAAI,IACFC,UAAUb,EAAKS,QAAUP,EAAcD,KAI5Ca,KAAKjC,QAAQI,GAlCK,UAAW,UAAW,SAAU,aAAc,WAAY,cAAe,OAAQ,gBAAiB,kBAkCnFE,EAASC,EAASC,EAAQC,EAAYC,EAAUC,EAAaC,EAAMC,EAAeC,IAEnHT,EAAU6B,IAAI,kBAAmB,SAEjC7B,EAAU6B,IAAI,qBAAsB,SAAShB,EAAOb,GACnD,OAAOa,EAAMiB,gBAAgB,GAAI,EAAG9B,EAAUD,MAAMI,OAAS,EAAG,EAAG,EAAG,EAAG,GAAI,IAAIwB,WAChFlC,MAAO,UACP0B,MAAO,MACLY,QAAQhC,EAAMiC,OAAOC,qBAKpB1D","file":"../../../dgauges/components/utils.js","sourcesContent":["define([\"dojo/_base/lang\", \"dojo/_base/Color\"], function(lang, Color){\r\n\t// module:\r\n\t//\t\tdojox/dgauges/components/utils\r\n\t// summary:\r\n\t//\t\tGauge utilities.\r\n\t// tags:\r\n\t//\t\tpublic\r\n\r\n\tvar utils = {};\r\n\r\n\tlang.mixin(utils, {\r\n\t\tbrightness: function(col, b){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdjusts the brightness of a color.\r\n\t\t\t// col: Number\r\n\t\t\t//\t\tThe base color\r\n\t\t\t// b: Number\r\n\t\t\t//\t\tA positive or negative value to adjust the brightness\r\n\t\t\t// returns: Number\r\n\t\t\t//\t\tThe modified color\t\t\t\r\n\t\t\tvar res = lang.mixin(null, col);\r\n\t\t\tres.r = Math.max(Math.min(res.r + b, 255), 0);\r\n\t\t\tres.g = Math.max(Math.min(res.g + b, 255), 0);\r\n\t\t\tres.b = Math.max(Math.min(res.b + b, 255), 0);\r\n\t\t\treturn res;\r\n\t\t},\r\n\t\t\r\n\t\tcreateGradient: function(entries){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates a gradient object\r\n\t\t\t// entries: Array\r\n\t\t\t//\t\tAn array of numbers representing colors\r\n\t\t\t// returns: Number\r\n\t\t\t//\t\tThe modified color\t\t\t\r\n\t\t\tvar res = {\r\n\t\t\t\tcolors: []\r\n\t\t\t};\r\n\t\t\tvar obj;\r\n\t\t\tfor(var i = 0; i < entries.length; i++){\r\n\t\t\t\tif(i % 2 == 0){\r\n\t\t\t\t\tobj = {\r\n\t\t\t\t\t\toffset: entries[i]\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\tobj.color = entries[i];\r\n\t\t\t\t\tres.colors.push(obj);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn res;\r\n\t\t},\r\n\t\t\r\n\t\t_setter: function(obj, attributes, values){\r\n\t\t\tfor(var i = 0; i < attributes.length; i++){\r\n\t\t\t\tobj[attributes[i]] = values[i];\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tgenericCircularGauge: function(scale, indicator, originX, originY, radius, startAngle, endAngle, orientation, font, labelPosition, tickShapeFunc){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tA helper method for configuring a circular gauge.\r\n\t\t\t// scale: CircularScale\r\n\t\t\t//\t\tA circular scale\r\n\t\t\t// indicator: IndicatorBase\r\n\t\t\t//\t\tA circular indicator\r\n\t\t\t// originX: Number\r\n\t\t\t//\t\tThe x-coordinate of the center of the scale (in pixels) \r\n\t\t\t// originY: Number\r\n\t\t\t//\t\tThe y-coordinate of the center of the scale (in pixels)\r\n\t\t\t// radius: Number\r\n\t\t\t//\t\tThe radius of the scale (in pixels)\r\n\t\t\t// startAngle: Number\r\n\t\t\t//\t\tThe start angle of the scale (in degrees)\r\n\t\t\t// endAngle: Number\r\n\t\t\t//\t\tThe end angle of the scale (in degrees)\r\n\t\t\t// orientation: String?\r\n\t\t\t//\t\tThe orientation of the scale, can be \"clockwise\" or \"cclockwise\"\r\n\t\t\t// font: Object?\r\n\t\t\t//\t\tThe font used for the gauge\r\n\t\t\t// labelPosition: String?\r\n\t\t\t//\t\tThe position of the labels regarding   \r\n\t\t\t// tickShapeFunc: Object?\r\n\t\t\t//\t\tA drawing function for the ticks\r\n\t\t\t// returns: Number\r\n\t\t\t//\t\tThe modified color\t\r\n\t\t\tvar attributes = [\"originX\", \"originY\", \"radius\", \"startAngle\", \"endAngle\", \"orientation\", \"font\", \"labelPosition\", \"tickShapeFunc\"];\r\n\t\t\tif(!orientation){\r\n\t\t\t\torientation = \"clockwise\";\r\n\t\t\t}\r\n\t\t\tif(!font){\r\n\t\t\t\tfont = {\r\n\t\t\t\t\tfamily: \"Helvetica\",\r\n\t\t\t\t\tstyle: \"normal\",\r\n\t\t\t\t\tsize: \"10pt\",\r\n\t\t\t\t\tcolor: \"#555555\"\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tif(!labelPosition){\r\n\t\t\t\tlabelPosition = \"inside\";\r\n\t\t\t}\r\n\t\t\tif(!tickShapeFunc){\r\n\t\t\t\ttickShapeFunc = function(group, scale, tick){\r\n\t\t\t\t\tvar stroke = scale.tickStroke;\r\n\t\t\t\t\tvar majorStroke;\r\n\t\t\t\t\tvar minorStroke;\r\n\t\t\t\t\tif(stroke){\r\n\t\t\t\t\t\tmajorStroke = {color:stroke.color ? stroke.color : \"#000000\", width:stroke.width ? stroke.width : 0.5};\r\n\t\t\t\t\t\tvar col = new Color(stroke.color).toRgb();\r\n\t\t\t\t\t\tminorStroke = {color:stroke.color ? utils.brightness({r:col[0], g:col[1], b:col[2]},51) : \"#000000\", width:stroke.width ? stroke.width * 0.6 : 0.3};\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn group.createLine({\r\n\t\t\t\t\t\tx1: tick.isMinor ? 2 : 0,\r\n\t\t\t\t\t\ty1: 0,\r\n\t\t\t\t\t\tx2: tick.isMinor ? 8 : 10,\r\n\t\t\t\t\t\ty2: 0\r\n\t\t\t\t\t}).setStroke(tick.isMinor ? minorStroke : majorStroke);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._setter(scale, attributes, [originX, originY, radius, startAngle, endAngle, orientation, font, labelPosition, tickShapeFunc]);\r\n\t\t\t\r\n\t\t\tindicator.set(\"interactionArea\", \"gauge\");\r\n\t\t\t// Needle shape\r\n\t\t\tindicator.set(\"indicatorShapeFunc\", function(group, indicator){\r\n\t\t\t\treturn group.createPolyline([0, -5, indicator.scale.radius - 6, 0, 0, 5, 0, -5]).setStroke({\r\n\t\t\t\t\tcolor: \"#333333\",\r\n\t\t\t\t\twidth: 0.25\r\n\t\t\t\t}).setFill(scale._gauge.indicatorColor);\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\treturn utils;\r\n});\r\n"]}