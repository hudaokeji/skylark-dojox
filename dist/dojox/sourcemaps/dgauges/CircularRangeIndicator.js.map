{"version":3,"sources":["dgauges/CircularRangeIndicator.js"],"names":["define","declare","ScaleIndicatorBase","_circularUtils","eventUtil","start","radius","NaN","startThickness","endThickness","fill","stroke","constructor","this","indicatorShapeFunc","color","width","interactionMode","addInvalidatingProperties","_interpolateColor","from","dest","n","_colorsInterpolation","colors","ratios","len","ret","ilen","i","length","Math","round","concat","_colorInterpolation","_alphasInterpolation","alphas","positions","_alphaInterpolation","c1","c2","step","push","_getEntriesFor","entries","attr","e","val","isNaN","_drawColorTrack","g","ox","oy","orientation","startAngleRadians","endAngleRadians","sWeight","eWeight","clippingAngleRadians","totalAngle","angleStep","computeAngle","deltaAngle","innerRadius","iterCount","max","floor","innerStep","px","py","angle","gp","cos","sin","createPolyline","setFill","setStroke","refreshRendering","inherited","arguments","_gfxGroup","clear","scale","originX","originY","toRadians","positionForValue","v","_transitionValue","value","_onMouseDown","event","origin","_gauge","_gaugeToPage","atan2","pageY","y","pageX","x","set","valueForPosition","stop","_onMouseMove"],"mappings":"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","file":"../../dgauges/CircularRangeIndicator.js","sourcesContent":["define([\"dojo/_base/declare\", \"./ScaleIndicatorBase\", \"./_circularUtils\", \"dojo/_base/event\"],\r\n\tfunction(declare, ScaleIndicatorBase, _circularUtils, eventUtil){\r\n\treturn declare(\"dojox.dgauges.CircularRangeIndicator\", ScaleIndicatorBase, {\r\n\t\t// summary:\r\n\t\t//\t\tA CircularRangeIndicator is used to represent a range of values on a scale.\r\n\t\t//\t\tUse the addIndicator method of CircularScale to use it.\r\n\t\t//\t\tIt is represented as a donut slice.\r\n\t\t\r\n\t\t// start: Number\r\n\t\t//\t\tThe start value of the range indicator.\r\n\t\tstart: 0,\r\n\t\t// radius: Number\r\n\t\t//\t\tThe outer radius in pixels of the range indicator.\r\n\t\tradius: NaN,\r\n\t\t// startThickness: Number\r\n\t\t//\t\tThe start thickness of the donut slice in pixels. \r\n\t\tstartThickness: 6,\r\n\t\t// endThickness: Number\r\n\t\t//\t\tThe end thickness of the donut slice in pixels. \r\n\t\tendThickness: 6,\r\n\t\t// fill: Object\r\n\t\t//\t\tA fill object that will be passed to the setFill method of GFX.\r\n\t\tfill: null,\r\n\t\t// stroke: Object\r\n\t\t//\t\tA stroke object that will be passed to the setStroke method of GFX.\r\n\t\tstroke: null,\r\n\t\tconstructor: function(){\r\n\t\t\tthis.indicatorShapeFunc = null;\r\n\t\t\tthis.fill = [255, 120, 0];\r\n\t\t\tthis.stroke = {\r\n\t\t\t\tcolor: \"black\",\r\n\t\t\t\twidth: .2\r\n\t\t\t};\r\n\t\t\tthis.interactionMode = \"none\";\r\n\t\t\t\r\n\t\t\tthis.addInvalidatingProperties([\"start\", \"radius\", \"startThickness\", \"endThickness\", \"fill\", \"stroke\"]);\r\n\t\t},\r\n\t\t\r\n\t\t_interpolateColor: function(from, dest, n){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar fr = (from >> 16) & 0xff;\r\n\t\t\tvar fg = (from >> 8) & 0xff;\r\n\t\t\tvar fb = from & 0xff;\r\n\t\t\t\r\n\t\t\tvar tr = (dest >> 16) & 0xff;\r\n\t\t\tvar tg = (dest >> 8) & 0xff;\r\n\t\t\tvar tb = dest & 0xff;\r\n\t\t\t\r\n\t\t\tvar r = ((1 - n) * fr + n * tr) & 0xff;\r\n\t\t\tvar g = ((1 - n) * fg + n * tg) & 0xff;\r\n\t\t\tvar b = ((1 - n) * fb + n * tb) & 0xff;\r\n\t\t\t\r\n\t\t\treturn r << 16 | g << 8 | b;\r\n\t\t},\r\n\t\t\r\n\t\t_colorsInterpolation: function(colors, ratios, len){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar ret = [];\r\n\t\t\tvar ilen = 0;\r\n\t\t\t\r\n\t\t\tfor(var i = 0; i < colors.length - 1; i++){\r\n\t\t\t\tilen = (ratios[i + 1] - ratios[i]) * len;\r\n\t\t\t\tilen = Math.round(ilen);\r\n\t\t\t\tret = ret.concat(_colorInterpolation(colors[i], colors[i + 1], ilen));\r\n\t\t\t}\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\t_alphasInterpolation: function(alphas, positions, len){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar ret = [];\r\n\t\t\tvar ilen = 0;\r\n\t\t\tfor(var i = 0; i < alphas.length - 1; i++){\r\n\t\t\t\tilen = (positions[i + 1] - positions[i]) * len;\r\n\t\t\t\tilen = Math.round(ilen);\r\n\t\t\t\tret = ret.concat(_alphaInterpolation(alphas[i], alphas[i + 1], ilen));\r\n\t\t\t}\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\t_alphaInterpolation: function(c1, c2, len){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar step = (c2 - c1) / (len - 1);\r\n\t\t\tvar ret = [];\r\n\t\t\tfor(var i = 0; i < len; i++){\r\n\t\t\t\tret.push(c1 + i * step);\r\n\t\t\t}\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\t_colorInterpolation: function(c1, c2, len){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar ret = [];\r\n\t\t\tfor (var i = 0; i < len; i++){\r\n\t\t\t\tret.push(_interpolateColor(c1, c2, i / (len - 1)));\r\n\t\t\t}\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\t_getEntriesFor: function(entries, attr){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar ret = [];\r\n\t\t\tvar e;\r\n\t\t\tvar val;\r\n\t\t\tfor(var i = 0; i < entries.length; i++){\r\n\t\t\t\te = entries[i];\r\n\t\t\t\tif(e[attr] == null || isNaN(e[attr])) {\r\n\t\t\t\t\tval = i / (entries.length - 1);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tval = e[attr];\r\n\t\t\t\t}\r\n\t\t\t\tret.push(val);\r\n\t\t\t}\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\t_drawColorTrack: function(g, ox, oy, radius, orientation, startAngleRadians, endAngleRadians, sWeight, eWeight, fill, stroke, clippingAngleRadians){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar angleStep = 0.05;\r\n\t\t\tvar totalAngle;\r\n\t\t\t\r\n\t\t\ttotalAngle = 6.28318530718 - _circularUtils.computeAngle(startAngleRadians, endAngleRadians, orientation);\r\n\t\t\tif(!isNaN(clippingAngleRadians)){\r\n\t\t\t\tvar deltaAngle = _circularUtils.computeAngle(startAngleRadians, clippingAngleRadians, orientation);\r\n\t\t\t\teWeight *= deltaAngle / totalAngle;\r\n\t\t\t\ttotalAngle = deltaAngle;\r\n\t\t\t}\r\n\t\t\tvar iterCount = Math.max(2, Math.floor(totalAngle / angleStep));\r\n\t\t\t\r\n\t\t\tangleStep = totalAngle / iterCount;\r\n\t\t\tvar innerRadius;\r\n\t\t\tvar outerRadius;\r\n\t\t\tvar outerStep = 0;\r\n\t\t\tvar innerStep = 0;\r\n\t\t\tvar px;\r\n\t\t\tvar py;\r\n\t\t\tinnerRadius = -sWeight;\r\n\t\t\touterRadius = 0;\r\n\t\t\tinnerStep = (sWeight - eWeight) / iterCount;\r\n\t\t\t\r\n\t\t\tvar angle;\r\n\t\t\tvar i;\r\n\t\t\tif(orientation == \"clockwise\"){\r\n\t\t\t\tangleStep = -angleStep;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar gp = [];\r\n\t\t\t\r\n\t\t\tpx = ox + Math.cos(startAngleRadians) * (radius + innerRadius);\r\n\t\t\tpy = oy - Math.sin(startAngleRadians) * (radius + innerRadius);\r\n\t\t\tgp.push(px, py);\r\n\t\t\tfor(i = 0; i < iterCount; i++){\r\n\t\t\t\tangle = startAngleRadians + i * angleStep;\r\n\t\t\t\tpx = ox + Math.cos(angle + angleStep) * (radius + innerRadius + i * innerStep);\r\n\t\t\t\tpy = oy - Math.sin(angle + angleStep) * (radius + innerRadius + i * innerStep);\r\n\t\t\t\tgp.push(px, py);\r\n\t\t\t}\r\n\t\t\tif(isNaN(angle)){\r\n\t\t\t\tangle = startAngleRadians;\r\n\t\t\t}\r\n\t\t\tpx = ox + Math.cos(angle + angleStep) * (radius + outerRadius + (iterCount - 1) * outerStep);\r\n\t\t\tpy = oy - Math.sin(angle + angleStep) * (radius + outerRadius + (iterCount - 1) * outerStep);\r\n\t\t\tgp.push(px, py);\r\n\t\t\tfor(i = iterCount - 1; i >= 0; i--){\r\n\t\t\t\tangle = startAngleRadians + i * angleStep;\r\n\t\t\t\tpx = ox + Math.cos(angle + angleStep) * (radius + outerRadius + i * outerStep);\r\n\t\t\t\tpy = oy - Math.sin(angle + angleStep) * (radius + outerRadius + i * outerStep);\r\n\t\t\t\tgp.push(px, py);\r\n\t\t\t}\r\n\t\t\tpx = ox + Math.cos(startAngleRadians) * (radius + outerRadius);\r\n\t\t\tpy = oy - Math.sin(startAngleRadians) * (radius + outerRadius);\r\n\t\t\tgp.push(px, py);\r\n\t\t\t\r\n\t\t\tpx = ox + Math.cos(startAngleRadians) * (radius + innerRadius);\r\n\t\t\tpy = oy - Math.sin(startAngleRadians) * (radius + innerRadius);\r\n\t\t\tgp.push(px, py);\r\n\t\t\tg.createPolyline(gp).setFill(fill).setStroke(stroke);\r\n\t\t},\r\n\t\t\r\n\t\trefreshRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tvar g = this._gfxGroup;\r\n\t\t\tg.clear();\r\n\t\t\tvar ox = this.scale.originX;\r\n\t\t\tvar oy = this.scale.originY;\r\n\t\t\tvar radius = isNaN(this.radius) ? this.scale.radius  : this.radius;\r\n\t\t\tvar orientation = this.scale.orientation;\r\n\t\t\tvar startAngleRadians = _circularUtils.toRadians(360 - this.scale.positionForValue(this.start));\r\n\t\t\tvar v = isNaN(this._transitionValue) ? this.value : this._transitionValue;\r\n\t\t\tvar endAngleRadians = _circularUtils.toRadians(360 - this.scale.positionForValue(v));\r\n\t\t\tvar sWeight = this.startThickness;\r\n\t\t\tvar eWeight = this.endThickness;\r\n\t\t\tvar clippingAngleRadians = NaN;\r\n\t\t\t\r\n\t\t\tthis._drawColorTrack(g, ox, oy, radius, orientation, startAngleRadians, endAngleRadians, sWeight, eWeight, this.fill, this.stroke, clippingAngleRadians);\r\n\t\t},\r\n\t\t\r\n\t\t_onMouseDown: function(event){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tvar origin = this.scale._gauge._gaugeToPage(this.scale.originX, this.scale.originY);\r\n\t\t\tvar angle = ((Math.atan2(event.pageY - origin.y, event.pageX - origin.x)) * 180) / (Math.PI);\r\n\t\t\tthis.set(\"value\", this.scale.valueForPosition(angle));\r\n\r\n\t\t\t// prevent the browser from selecting text\r\n\t\t\teventUtil.stop(event);\r\n\t\t},\r\n\t\t\r\n\t\t_onMouseMove: function(event){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\t\r\n\t\t\tvar origin = this.scale._gauge._gaugeToPage(this.scale.originX, this.scale.originY);\r\n\t\t\tvar angle = ((Math.atan2(event.pageY - origin.y, event.pageX - origin.x)) * 180) / (Math.PI);\r\n\t\t\tthis.set(\"value\", this.scale.valueForPosition(angle));\r\n\t\t}\r\n\t});\r\n});\r\n"]}