{"version":3,"sources":["dgauges/LinearScaler.js"],"names":["define","lang","declare","Stateful","minimum","maximum","snapInterval","majorTickInterval","NaN","minorTickInterval","minorTicksEnabled","majorTicks","minorTicks","_computedMajorTickInterval","_computedMinorTickInterval","constructor","this","watchedProperties","_buildMinorTickItems","mt","minorTickCache","data","majorTickCount","Math","floor","getComputedMajorTickInterval","minorTickCount","getComputedMinorTickInterval","i","j","scaler","isMinor","value","position","Number","push","_buildMajorTickItems","majorTickCache","isNaN","computeTicks","concat","positionForValue","valueForPosition","range","abs","round"],"mappings":";;;;;;;AAAAA,QAAQ,kBAAmB,qBAAsB,iBAAkB,SAASC,EAAMC,EAASC,GAC1F,OAAOD,EAAQ,6BAA8BC,GAQ5CC,QAAS,EAGTC,QAAS,IAKTC,aAAc,EAGdC,kBAAmBC,IAGnBC,kBAAmBD,IAGnBE,mBAAmB,EAInBC,WAAY,KAIZC,WAAY,KAEZC,2BAA4BL,IAC5BM,2BAA4BN,IAE5BO,YAAa,WACZC,KAAKC,mBAAqB,UAAW,UAAW,oBAAqB,oBAAqB,eAAgB,sBAG3GC,qBAAsB,WAKrB,IAAIC,EAAKH,KAAKL,WACVS,KACJ,GAAGJ,KAAKX,QAAUW,KAAKZ,QAItB,IAHA,IAEIiB,EAFAC,EAAiBC,KAAKC,OAAOR,KAAKX,QAAUW,KAAKZ,SAAWY,KAAKS,gCAAkC,EACnGC,EAAiBH,KAAKC,MAAMR,KAAKS,+BAAiCT,KAAKW,gCAEnEC,EAAI,EAAGA,EAAIN,EAAiB,EAAGM,IACtC,IAAI,IAAIC,EAAI,EAAGA,EAAIH,EAAgBG,KAClCR,GAAQS,OAAQd,OACXe,SAAU,EACfV,EAAKW,MAAQb,EAAGS,GAAGI,MAAQH,EAAIb,KAAKW,+BACpCN,EAAKY,UAAYC,OAAOb,EAAKW,OAAShB,KAAKZ,UAAYY,KAAKX,QAAUW,KAAKZ,SAC3EgB,EAAee,KAAKd,GAIvB,OAAOD,GAGRgB,qBAAsB,WAKrB,IAAIC,KACJ,GAAGrB,KAAKX,QAAUW,KAAKZ,QAGtB,IAFA,IACIiB,EADAC,EAAiBC,KAAKC,OAAOR,KAAKX,QAAUW,KAAKZ,SAAWY,KAAKS,gCAAkC,EAE/FG,EAAI,EAAGA,EAAIN,EAAgBM,KAClCP,GAAQS,OAAQd,OACXe,SAAU,EACfV,EAAKW,MAAQhB,KAAKZ,QAAUwB,EAAIZ,KAAKS,+BACrCJ,EAAKY,UAAYC,OAAOb,EAAKW,OAAShB,KAAKZ,UAAYY,KAAKX,QAAUW,KAAKZ,SAC3EiC,EAAeF,KAAKd,GAGtB,OAAOgB,GAGRZ,6BAA8B,WAK7B,OAAIa,MAAMtB,KAAKT,oBAGZ+B,MAAMtB,KAAKH,8BACbG,KAAKH,4BAA8BG,KAAKX,QAAUW,KAAKZ,SAAW,IAE5DY,KAAKH,4BALJG,KAAKT,mBAQdoB,6BAA8B,WAK7B,OAAIW,MAAMtB,KAAKP,oBAGZ6B,MAAMtB,KAAKF,8BACbE,KAAKF,2BAA6BE,KAAKS,+BAAiC,GAElET,KAAKF,4BALJE,KAAKP,mBAQd8B,aAAc,WAOb,OAFAvB,KAAKL,WAAaK,KAAKoB,uBACvBpB,KAAKJ,WAAaI,KAAKN,kBAAoBM,KAAKE,0BACzCF,KAAKL,WAAW6B,OAAOxB,KAAKJ,aAGpC6B,iBAAkB,SAAST,GAO1B,IAAIC,EAUJ,OATY,MAATD,GAAiBM,MAAMN,IAAUA,GAAShB,KAAKZ,WACjD6B,EAAW,GAETD,GAAShB,KAAKX,UAChB4B,EAAW,GAETK,MAAML,KACRA,GAAYD,EAAQhB,KAAKZ,UAAYY,KAAKX,QAAUW,KAAKZ,UAEnD6B,GAGRS,iBAAkB,SAAST,GAO1B,IAAIU,EAAQpB,KAAKqB,IAAI5B,KAAKZ,QAAUY,KAAKX,SACrC2B,EAAQhB,KAAKZ,QAAUuC,EAAQV,EAInC,OAHIK,MAAMtB,KAAKV,eAAiBU,KAAKV,aAAe,IACnD0B,EAAQT,KAAKsB,OAAOb,EAAQhB,KAAKZ,SAAWY,KAAKV,cAAgBU,KAAKV,aAAeU,KAAKZ,SAEpF4B","file":"../../dgauges/LinearScaler.js","sourcesContent":["define([\"dojo/_base/lang\", \"dojo/_base/declare\", \"dojo/Stateful\"], function(lang, declare, Stateful){\r\n\treturn declare(\"dojox.dgauges.LinearScaler\", Stateful, {\r\n\t\t// summary:\r\n\t\t//\t\tThe linear scaler. This scaler creates major and minor ticks regularly between \r\n\t\t//\t\ta minimum and a maximum.\r\n\t\t//\t\tScalers are responsible for tick generation and various data-transform operations.\t\t\r\n\t\t\r\n\t\t// minimum: Number\r\n\t\t//\t\tThe minimum value of the scaler. Default is 0.\r\n\t\tminimum: 0,\r\n\t\t// maximum: Number\r\n\t\t//\t\tThe maximum value of the scaler. Default is 100.\r\n\t\tmaximum: 100,\r\n\t\t// snapInterval:\r\n\t\t//\t\tSpecifies the increment value to be used as snap values on this scale \r\n\t\t//\t\tduring user interaction.\r\n\t\t//\t\tDefault is 1.\r\n\t\tsnapInterval: 1,\r\n\t\t// majorTickInterval: Number\r\n\t\t//\t\tThe interval between two major ticks.\r\n\t\tmajorTickInterval: NaN,\r\n\t\t// minorTickInterval: Number\r\n\t\t//\t\tThe interval between two minor ticks.\r\n\t\tminorTickInterval: NaN,\r\n\t\t// minorTicksEnabled: Boolean\r\n\t\t//\t\tIf false, minor ticks are not generated. Default is true.\r\n\t\tminorTicksEnabled: true,\r\n\t\t// majorTicks:\r\n\t\t//\t\tThe array of generated major ticks. You should not set this\r\n\t\t//\t\tproperty when using the scaler.\r\n\t\tmajorTicks: null,\r\n\t\t// minorTicks:\r\n\t\t//\t\tThe array of generated minor ticks. You should not set this\r\n\t\t//\t\tproperty when using the scaler.\r\n\t\tminorTicks: null,\r\n\r\n\t\t_computedMajorTickInterval: NaN,\r\n\t\t_computedMinorTickInterval: NaN,\r\n\t\t\r\n\t\tconstructor: function(){\r\n\t\t\tthis.watchedProperties = [\"minimum\", \"maximum\", \"majorTickInterval\", \"minorTickInterval\", \"snapInterval\", \"minorTicksEnabled\"];\r\n\t\t},\r\n\r\n\t\t_buildMinorTickItems: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar mt = this.majorTicks;\r\n\t\t\tvar minorTickCache = [];\r\n\t\t\tif(this.maximum > this.minimum){\r\n\t\t\t\tvar majorTickCount = Math.floor((this.maximum - this.minimum) / this.getComputedMajorTickInterval()) + 1;\r\n\t\t\t\tvar minorTickCount = Math.floor(this.getComputedMajorTickInterval() / this.getComputedMinorTickInterval());\r\n\t\t\t\tvar data;\r\n\t\t\t\tfor(var i = 0; i < majorTickCount - 1; i++){\r\n\t\t\t\t\tfor(var j = 1; j < minorTickCount; j++){\r\n\t\t\t\t\t\tdata = {scaler: this};\r\n\t\t\t\t\t\tdata.isMinor = true;\r\n\t\t\t\t\t\tdata.value = mt[i].value + j * this.getComputedMinorTickInterval();\r\n\t\t\t\t\t\tdata.position = (Number(data.value) - this.minimum) / (this.maximum - this.minimum);\r\n\t\t\t\t\t\tminorTickCache.push(data);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn minorTickCache;\r\n\t\t},\r\n\t\t\r\n\t\t_buildMajorTickItems: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar majorTickCache = [];\r\n\t\t\tif(this.maximum > this.minimum){\r\n\t\t\t\tvar majorTickCount = Math.floor((this.maximum - this.minimum) / this.getComputedMajorTickInterval()) + 1;\r\n\t\t\t\tvar data;\r\n\t\t\t\tfor(var i = 0; i < majorTickCount; i++){\r\n\t\t\t\t\tdata = {scaler: this};\r\n\t\t\t\t\tdata.isMinor = false;\r\n\t\t\t\t\tdata.value = this.minimum + i * this.getComputedMajorTickInterval();\r\n\t\t\t\t\tdata.position = (Number(data.value) - this.minimum) / (this.maximum - this.minimum);\r\n\t\t\t\t\tmajorTickCache.push(data);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn majorTickCache;\r\n\t\t},\r\n\t\t\r\n\t\tgetComputedMajorTickInterval: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThe computed or user defined major tick interval.\r\n\t\t\t// returns: Number\r\n\t\t\t//\t\tThe major tick interval used for ticks generation.\r\n\t\t\tif(!isNaN(this.majorTickInterval)){\r\n\t\t\t\treturn this.majorTickInterval;\r\n\t\t\t}\r\n\t\t\tif(isNaN(this._computedMajorTickInterval)){\r\n\t\t\t\tthis._computedMajorTickInterval = (this.maximum - this.minimum) / 10;\r\n\t\t\t}\r\n\t\t\treturn this._computedMajorTickInterval;\r\n\t\t},\r\n\t\t\r\n\t\tgetComputedMinorTickInterval: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThe computed or user defined minor tick interval.\r\n\t\t\t// returns: Number\r\n\t\t\t//\t\tThe minor tick interval used for ticks generation.\r\n\t\t\tif(!isNaN(this.minorTickInterval)){\r\n\t\t\t\treturn this.minorTickInterval;\r\n\t\t\t}\r\n\t\t\tif(isNaN(this._computedMinorTickInterval)){\r\n\t\t\t\tthis._computedMinorTickInterval = this.getComputedMajorTickInterval() / 5;\r\n\t\t\t}\r\n\t\t\treturn this._computedMinorTickInterval;\r\n\t\t},\r\n\t\t\r\n\t\tcomputeTicks: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates or re-creates the ticks for this scaler.\r\n\t\t\t// returns: Array\r\n\t\t\t//\t\tAn array containing all ticks (major then minor ticks).\r\n\t\t\tthis.majorTicks = this._buildMajorTickItems();\r\n\t\t\tthis.minorTicks = this.minorTicksEnabled ? this._buildMinorTickItems() : [];\r\n\t\t\treturn this.majorTicks.concat(this.minorTicks);\r\n\t\t},\r\n\t\t\r\n\t\tpositionForValue: function(value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTransforms a value into a relative position between 0 and 1.\r\n\t\t\t// value: Number\r\n\t\t\t//\t\tA value to transform.\r\n\t\t\t// returns: Number\r\n\t\t\t//\t\tThe position between 0 and 1.\r\n\t\t\tvar position;\r\n\t\t\tif(value == null || isNaN(value) || value <= this.minimum){\r\n\t\t\t\tposition = 0;\r\n\t\t\t}\r\n\t\t\tif(value >= this.maximum){\r\n\t\t\t\tposition = 1;\r\n\t\t\t}\r\n\t\t\tif(isNaN(position)){\r\n\t\t\t\tposition = (value - this.minimum) / (this.maximum - this.minimum);\r\n\t\t\t}\r\n\t\t\treturn position;\r\n\t\t},\r\n\t\t\r\n\t\tvalueForPosition: function(position){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTransforms a relative position (between 0 and 1) into a value.\r\n\t\t\t// position: Number\r\n\t\t\t//\t\tA relative position to transform.\r\n\t\t\t// returns: Number\r\n\t\t\t//\t\tThe transformed value between minimum and maximum.\r\n\t\t\tvar range = Math.abs(this.minimum - this.maximum);\r\n\t\t\tvar value = this.minimum + range * position;\r\n\t\t\tif(!isNaN(this.snapInterval) && this.snapInterval > 0){\r\n\t\t\t\tvalue = Math.round((value - this.minimum) / this.snapInterval) * this.snapInterval + this.minimum;\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t}\r\n\t});\r\n});\r\n"]}