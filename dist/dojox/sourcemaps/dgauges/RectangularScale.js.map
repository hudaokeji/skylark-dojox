{"version":3,"sources":["dgauges/RectangularScale.js"],"names":["define","declare","gfx","ScaleBase","paddingLeft","paddingTop","paddingRight","paddingBottom","_contentBox","constructor","this","labelPosition","addInvalidatingProperties","positionForValue","value","spos","length","_gauge","orientation","x","w","y","h","scaler","valueForPosition","pos","minimum","position","NaN","epos","maximum","refreshRendering","inherited","arguments","_gfxGroup","_ticksGroup","clear","renderer","labelText","middleBox","_layoutInfos","middle","font","_getFont","allTicks","computeTicks","i","tickItem","tickShapeFunc","a","tickSize","_computeBoundingBox","width","x1","y1","angle","setTransform","dx","dy","matrix","rotateg","tickLabelFunc","tbox","_base","_getTextBox","makeFontString","makeParameters","defaultFont","tw","th","al","xt","yt","labelGap","t","createText","text","align","setFill","color","setFont","key","_indicatorsIndex","_indicatorsRenderers","invalidateRendering"],"mappings":"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","file":"../../dgauges/RectangularScale.js","sourcesContent":["define([\"dojo/_base/declare\", \"dojox/gfx\", \"./ScaleBase\"], function(declare, gfx, ScaleBase){\r\n\treturn declare(\"dojox.dgauges.RectangularScale\", ScaleBase, {\r\n\t\t// summary:\r\n\t\t//\t\tThe rectangular scale. A scaler must be set to use this class.\r\n\r\n\t\t// paddingLeft: Number\r\n\t\t//\t\tThe left padding.\r\n\t\tpaddingLeft: 15,\r\n\t\t// paddingTop: Number\r\n\t\t//\t\tThe top padding.\r\n\t\tpaddingTop: 12,\r\n\t\t// paddingRight: Number\r\n\t\t//\t\tThe right padding.\r\n\t\tpaddingRight: 15,\r\n\t\t// paddingBottom: Number\r\n\t\t//\t\tThe bottom padding.\r\n\t\tpaddingBottom: 0,\r\n\t\t_contentBox: null,\t\t\r\n\t\tconstructor: function(){\r\n\t\t\tthis.labelPosition = \"leading\";\r\n\t\t\tthis.addInvalidatingProperties([\"paddingTop\", \"paddingLeft\", \"paddingRight\", \"paddingBottom\"]);\r\n\t\t},\r\n\t\t\r\n\t\tpositionForValue: function(value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTransforms a value into a position using the associated scaler.\r\n\t\t\t// value:\r\n\t\t\t//\t\tThe value to transform.\r\n\t\t\t// returns: Number\r\n\t\t\t//\t\tA position in pixels.\r\n\t\t\tvar relativePos = 0;\r\n\t\t\tvar position;\r\n\t\t\tvar spos = 0;\r\n\t\t\tvar length = 0;\r\n\t\t\tif(this._contentBox){\r\n\t\t\t\tif(this._gauge.orientation == \"horizontal\"){\r\n\t\t\t\t\tspos = this._contentBox.x;\r\n\t\t\t\t\tlength = this._contentBox.w;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tspos = this._contentBox.y;\r\n\t\t\t\t\tlength = this._contentBox.h;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\trelativePos = this.scaler.positionForValue(value);\r\n\t\t\tposition = spos + (relativePos * length);\r\n\t\t\treturn position;\r\n\t\t},\r\n\t\t\r\n\t\tvalueForPosition: function(pos){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTransforms a position in pixels into a value using the associated scaler.\r\n\t\t\t// pos:\r\n\t\t\t//\t\tThe position to transform.\r\n\t\t\t// returns: Number\r\n\t\t\t//\t\tThe value represented by pos. \r\n\t\t\tvar value = this.scaler.minimum;\r\n\t\t\tvar position = NaN;\r\n\t\t\tvar spos = 0;\r\n\t\t\tvar epos = 0;\r\n\t\t\t\r\n\t\t\tif(this._gauge.orientation == \"horizontal\"){\r\n\t\t\t\tposition = pos.x;\r\n\t\t\t\tspos = this._contentBox.x;\r\n\t\t\t\tepos = this._contentBox.x + this._contentBox.w;\r\n\t\t\t}else{\r\n\t\t\t\tposition = pos.y;\r\n\t\t\t\tspos = this._contentBox.y;\r\n\t\t\t\tepos = this._contentBox.y + this._contentBox.h;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(position <= spos){\r\n\t\t\t\tvalue = this.scaler.minimum;\r\n\t\t\t}else if(position >= epos){\r\n\t\t\t\tvalue = this.scaler.maximum;\r\n\t\t\t}else {\r\n\t\t\t\tvalue = this.scaler.valueForPosition((position - spos)/(epos - spos));\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t\t\r\n\t\t},\r\n\t\t\r\n\t\trefreshRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(!this._gfxGroup || !this.scaler) \r\n\t\t\t\treturn;\r\n\t\t\t\r\n\t\t\tthis._ticksGroup.clear();\r\n\t\t\t\r\n\t\t\t// variables for ticks rendering\r\n\t\t\tvar middleBox = this._gauge._layoutInfos.middle;\r\n\t\t\t\r\n\t\t\tthis._contentBox = {};\r\n\t\t\t\r\n\t\t\tthis._contentBox.x = middleBox.x + this.paddingLeft;\r\n\t\t\tthis._contentBox.y = middleBox.y + this.paddingTop;\r\n\t\t\tthis._contentBox.w = middleBox.w - (this.paddingLeft + this.paddingRight);\r\n\t\t\tthis._contentBox.h = middleBox.h - (this.paddingBottom + this.paddingTop);\r\n\t\t\tvar renderer;\r\n\t\t\t\r\n\t\t\t// variables for tick labels\r\n\t\t\tvar labelText;\r\n\t\t\tvar font = this._getFont();\r\n\t\t\t\r\n\t\t\t// Layout ticks\r\n\t\t\tvar allTicks = this.scaler.computeTicks();\r\n\t\t\t\r\n\t\t\tfor(var i = 0; i < allTicks.length; i++){\r\n\t\t\t\tvar tickItem = allTicks[i];\r\n\t\t\t\trenderer = this.tickShapeFunc(this._ticksGroup, this, tickItem);\r\n\t\t\t\t\r\n\t\t\t\tif(renderer){\r\n\t\t\t\t\tvar a = this.positionForValue(tickItem.value);\r\n\t\t\t\t\tvar tickSize = this._gauge._computeBoundingBox(renderer).width;\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar x1 = 0, y1 = 0, angle = 0;\r\n\t\t\t\t\tif(this._gauge.orientation == \"horizontal\"){\r\n\t\t\t\t\t\tx1 = a;\r\n\t\t\t\t\t\ty1 = this._contentBox.y;\r\n\t\t\t\t\t\tangle = 90;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tx1 = this._contentBox.x;\r\n\t\t\t\t\t\ty1 = a;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\trenderer.setTransform([{\r\n\t\t\t\t\t\tdx: x1,\r\n\t\t\t\t\t\tdy: y1\r\n\t\t\t\t\t}, gfx.matrix.rotateg(angle)]);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tlabelText = this.tickLabelFunc(tickItem);\r\n\t\t\t\t\r\n\t\t\t\tif(labelText){\r\n\t\t\t\t\tvar tbox = gfx._base._getTextBox(labelText, {\r\n\t\t\t\t\t\tfont: gfx.makeFontString(gfx.makeParameters(gfx.defaultFont, font))\r\n\t\t\t\t\t});\r\n\t\t\t\t\tvar tw = tbox.w;\r\n\t\t\t\t\tvar th = tbox.h;\r\n\t\t\t\t\tvar al = \"start\";\r\n\t\t\t\t\tvar xt = x1;\r\n\t\t\t\t\tvar yt = y1;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(this._gauge.orientation == \"horizontal\"){\r\n\t\t\t\t\t\txt = x1;\r\n\t\t\t\t\t\tif(this.labelPosition == \"trailing\"){\r\n\t\t\t\t\t\t\tyt = y1 + tickSize + this.labelGap + th;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tyt = y1 - this.labelGap;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tal = \"middle\";\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(this.labelPosition == \"trailing\"){\r\n\t\t\t\t\t\t\txt = x1 + tickSize + this.labelGap;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\txt = x1 - this.labelGap - tw;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tyt = y1 + th / 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar t = this._ticksGroup.createText({\r\n\t\t\t\t\t\tx: xt,\r\n\t\t\t\t\t\ty: yt,\r\n\t\t\t\t\t\ttext: labelText,\r\n\t\t\t\t\t\talign: al\r\n\t\t\t\t\t});\r\n\t\t\t\t\tt.setFill(font.color ? font.color : \"black\");\r\n\t\t\t\t\tt.setFont(font);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor(var key in this._indicatorsIndex){\r\n\t\t\t\tthis._indicatorsRenderers[key] = this._indicatorsIndex[key].invalidateRendering();\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n});\r\n"]}