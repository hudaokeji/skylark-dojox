{"version":3,"sources":["dgauges/MultiLinearScaler.js"],"names":["define","declare","Stateful","majorTickValues","minorTickCount","majorTicks","minorTicks","_snapIntervalPrecision","_snapCount","constructor","this","watchedProperties","computeTicks","ti","minorInterval","currentMajorValue","v","step","length","minorStep","currentIndex","i","scaler","position","value","isMinor","push","Number","j","concat","positionForValue","minmax","_getMinMax","valueForPosition","property","center","res","left","right","Math","floor"],"mappings":";;;;;;;AAAAA,QAAQ,qBAAsB,iBAAkB,SAASC,EAASC,GACjE,OAAOD,EAAQ,kCAAmCC,GAcjDC,gBAAiB,KAIjBC,eAAgB,EAIhBC,WAAY,KAIZC,WAAY,KACZC,uBAAwB,KACxBC,WAAY,EACZD,uBAAwB,EAExBE,YAAa,WACZC,KAAKC,mBAAqB,kBAAmB,YAAa,mBAG3DC,aAAc,WAOb,IAAIC,EAFJH,KAAKL,cACLK,KAAKJ,cAQL,IANA,IAGIQ,EACAC,EACAC,EALAC,EAAO,GAAKP,KAAKP,gBAAgBe,OAAS,GAC1CC,EAAYF,GAAQP,KAAKN,eAAiB,GAC1CgB,EAAe,EAIXC,EAAI,EAAGA,EAAIX,KAAKP,gBAAgBe,OAAQG,IAAI,CAOnD,GANAL,EAAIN,KAAKP,gBAAgBkB,IACzBR,GAAMS,OAAQZ,OACXa,SAAWH,EAAeH,EAC7BJ,EAAGW,MAAQR,EACXH,EAAGY,SAAU,EACbf,KAAKL,WAAWqB,KAAKb,GAClBO,EAAeV,KAAKP,gBAAgBe,OAAS,EAAE,CACjDH,EAAoBY,OAAOX,GAC3BF,GAAiBa,OAAOjB,KAAKP,gBAAgBkB,EAAI,IAAMN,IAAsBL,KAAKN,eAAiB,GACnG,IAAI,IAAIwB,EAAI,EAAGA,GAAKlB,KAAKN,eAAgBwB,KACxCf,GAAMS,OAAQZ,OACXe,SAAU,EACbZ,EAAGU,SAAWH,EAAeH,EAAOW,EAAIT,EACxCN,EAAGW,MAAQT,EAAoBD,EAAgBc,EAC/ClB,KAAKJ,WAAWoB,KAAKb,GAGvBO,IAED,OAAOV,KAAKL,WAAWwB,OAAOnB,KAAKJ,aAGpCwB,iBAAkB,SAASN,GAO1B,IAAId,KAAKP,gBACR,OAAO,EAGJO,KAAKL,YACRK,KAAKE,eAGN,IAAImB,EAASrB,KAAKsB,WAAWR,GACzBD,GAAYC,EAAQO,EAAO,GAAGP,QAAUO,EAAO,GAAGP,MAAQO,EAAO,GAAGP,OACxE,OAAOO,EAAO,GAAGR,SAAWA,GAAYQ,EAAO,GAAGR,SAAWQ,EAAO,GAAGR,WAGxEU,iBAAkB,SAASV,GAO1B,GAAsB,MAAnBb,KAAKL,WACP,OAAO,EAER,IAAI0B,EAASrB,KAAKsB,WAAWT,EAAU,YACnCC,GAASD,EAAWQ,EAAO,GAAGR,WAAaQ,EAAO,GAAGR,SAAWQ,EAAO,GAAGR,UAC9E,OAAOQ,EAAO,GAAGP,MAAQA,GAASO,EAAO,GAAGP,MAAQO,EAAO,GAAGP,QAG/DQ,WAAY,SAAShB,EAAGkB,GAKnBA,IACHA,EAAW,SAEZ,IAKIC,EALAC,KAGAC,EAAO,EACPC,EAAQ5B,KAAKL,WAAWa,OAAS,EAGrC,GAAGF,GAAKN,KAAKL,WAAW,GAAG6B,IAAalB,GAAKN,KAAKL,WAAWiC,GAAOJ,GAGnE,OAFAE,EAAI,GAAK1B,KAAKL,WAAW,GACzB+B,EAAI,GAAK1B,KAAKL,WAAWiC,GAClBF,EAGR,OAGC,GAFAD,EAASI,KAAKC,OAAOH,EAAOC,GAAS,GAElC5B,KAAKL,WAAW8B,GAAQD,IAAalB,EAAxC,CACC,GAAGN,KAAKL,WAAW8B,EAAS,GAAGD,IAAalB,EAG3C,OAFAoB,EAAI,GAAK1B,KAAKL,WAAW8B,GACzBC,EAAI,GAAK1B,KAAKL,WAAW8B,EAAS,GAC3BC,EAEPC,EAAOF,EAAS,OAIjBG,EAAQH","file":"../../dgauges/MultiLinearScaler.js","sourcesContent":["define([\"dojo/_base/declare\", \"dojo/Stateful\"], function(declare, Stateful){\r\n\treturn declare(\"dojox.dgauges.MultiLinearScaler\", Stateful, {\r\n\t\t// summary:\r\n\t\t//\t\tThe multi-linear scaler. This scaler maps numeric values according \r\n\t\t//\t\tto the majorTickValues content. \r\n\t\t//\t\tThis allows display of very large value intervals that are difficult to render \r\n\t\t//\t\twith a linear scale. For example, if majorTickValues contains [0, 10, 50, 500, 2000], \r\n\t\t//\t\tthe scale will show five major ticks with these values. \r\n\t\t//\t\tNote that this is not a logarithmic scale, the interpolation is linear between \r\n\t\t//\t\ttwo contiguous major ticks.\r\n\t\t//\t\tScalers are responsible for tick generation and various data-transform operations.\t\r\n\r\n\t\t// majorTickValues: Array\r\n\t\t//\t\tAn array of Number for creating major ticks.\r\n\t\t//\t\tThis array must be sorted in ascendant order.\r\n\t\tmajorTickValues: null,\r\n\t\t// minorTickCount: Array\r\n\t\t//\t\tThe number of minor ticks between two contiguous major ticks.\r\n\t\t//\t\tThe default value is 4.\r\n\t\tminorTickCount: 4,\r\n\t\t// majorTicks:\r\n\t\t//\t\tThe array of generated major ticks. You should not set this\r\n\t\t//\t\tproperty when using the scaler.\r\n\t\tmajorTicks: null,\r\n\t\t// minorTicks:\r\n\t\t//\t\tThe array of generated minor ticks. You should not set this\r\n\t\t//\t\tproperty when using the scaler.\r\n\t\tminorTicks: null,\r\n\t\t_snapIntervalPrecision: null,\r\n\t\t_snapCount: 4,\r\n\t\t_snapIntervalPrecision: 6,\r\n\t\t\r\n\t\tconstructor: function(){\r\n\t\t\tthis.watchedProperties = [\"majorTickValues\", \"snapCount\", \"minorTickCount\"];\r\n\t\t},\r\n\t\t\t\t\r\n\t\tcomputeTicks: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates or re-creates the ticks for this scaler.\r\n\t\t\t// returns: Array\r\n\t\t\t//\t\tAn array containing all ticks (major then minor ticks).\t\t\t\r\n\t\t\tthis.majorTicks = [];\r\n\t\t\tthis.minorTicks = [];\r\n\t\t\tvar ti;\r\n\t\t\tvar step = 1 / (this.majorTickValues.length - 1);\r\n\t\t\tvar minorStep = step / (this.minorTickCount + 1);\r\n\t\t\tvar currentIndex = 0;\r\n\t\t\tvar minorInterval;\r\n\t\t\tvar currentMajorValue;\r\n\t\t\tvar v;\r\n\t\t\tfor(var i = 0; i < this.majorTickValues.length; i++){\r\n\t\t\t\tv = this.majorTickValues[i];\r\n\t\t\t\tti = {scaler: this};\r\n\t\t\t\tti.position = currentIndex * step;\r\n\t\t\t\tti.value = v;\r\n\t\t\t\tti.isMinor = false;\r\n\t\t\t\tthis.majorTicks.push(ti);\r\n\t\t\t\tif(currentIndex < this.majorTickValues.length - 1){\r\n\t\t\t\t\tcurrentMajorValue = Number(v);\r\n\t\t\t\t\tminorInterval = (Number(this.majorTickValues[i + 1]) - currentMajorValue) / (this.minorTickCount + 1);\r\n\t\t\t\t\tfor(var j = 1; j <= this.minorTickCount; j++){\r\n\t\t\t\t\t\tti = {scaler: this};\r\n\t\t\t\t\t\tti.isMinor = true;\r\n\t\t\t\t\t\tti.position = currentIndex * step + j * minorStep;\r\n\t\t\t\t\t\tti.value = currentMajorValue + minorInterval * j;\r\n\t\t\t\t\t\tthis.minorTicks.push(ti);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcurrentIndex++;\r\n\t\t\t}\r\n\t\t\treturn this.majorTicks.concat(this.minorTicks);\r\n\t\t},\r\n\t\t\r\n\t\tpositionForValue: function(value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTransforms a value into a relative position between 0 and 1.\r\n\t\t\t// value: Number\r\n\t\t\t//\t\tA value to transform.\r\n\t\t\t// returns: Number\r\n\t\t\t//\t\tThe position between 0 and 1.\t\t\t\r\n\t\t\tif(!this.majorTickValues){\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(!this.majorTicks){\r\n\t\t\t\tthis.computeTicks();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar minmax = this._getMinMax(value);\r\n\t\t\tvar position = (value - minmax[0].value) / (minmax[1].value - minmax[0].value);\r\n\t\t\treturn minmax[0].position + position * (minmax[1].position - minmax[0].position);\r\n\t\t},\r\n\t\t\r\n\t\tvalueForPosition: function(position){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTransforms a relative position (between 0 and 1) into a value.\r\n\t\t\t// position: Number\r\n\t\t\t//\t\tA relative position to transform.\r\n\t\t\t// returns: Number\r\n\t\t\t//\t\tThe transformed value.\r\n\t\t\tif(this.majorTicks == null){\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tvar minmax = this._getMinMax(position, \"position\");\r\n\t\t\tvar value = (position - minmax[0].position) / (minmax[1].position - minmax[0].position);\r\n\t\t\treturn minmax[0].value + value * (minmax[1].value - minmax[0].value);\r\n\t\t},\r\n\t\t\r\n\t\t_getMinMax: function(v, property){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(!property){\r\n\t\t\t\tproperty = \"value\";\r\n\t\t\t}\r\n\t\t\tvar res = [];\r\n\t\t\tvar pre;\r\n\t\t\tvar post;\r\n\t\t\tvar left = 0;\r\n\t\t\tvar right = this.majorTicks.length - 1;\r\n\t\t\tvar center;\r\n\t\t\t\r\n\t\t\tif(v <= this.majorTicks[0][property] || v >= this.majorTicks[right][property]){\r\n\t\t\t\tres[0] = this.majorTicks[0];\r\n\t\t\t\tres[1] = this.majorTicks[right];\r\n\t\t\t\treturn res;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\twhile (true){\r\n\t\t\t\tcenter = Math.floor((left + right) / 2);\r\n\t\t\t\t\r\n\t\t\t\tif(this.majorTicks[center][property] <= v){\r\n\t\t\t\t\tif(this.majorTicks[center + 1][property] >= v){\r\n\t\t\t\t\t\tres[0] = this.majorTicks[center];\r\n\t\t\t\t\t\tres[1] = this.majorTicks[center + 1];\r\n\t\t\t\t\t\treturn res;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tleft = center + 1;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tright = center;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n"]}