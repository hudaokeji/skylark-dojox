{"version":3,"sources":["dgauges/TextIndicator.js"],"names":["define","lang","declare","has","array","on","gfx","IndicatorBase","font","x","y","align","color","indicator","labelFunc","constructor","this","addInvalidatingProperties","forEach","hitch","entry","watch","_resetText","_indicatorChanged","postscript","mixin","inherited","arguments","_textCreated","invalidateRendering","_valueWatcher","name","oldValue","newValue","unwatch","refreshRendering","_getFont","_gauge","defaultFont","_textInstance","_createText","group","text","createText","setFont","setFill","_gfxGroup","value","iOsVersion","undefined","clear","setShape"],"mappings":";;;;;;;AAAAA,QAAQ,kBAAmB,qBAAsB,mBAAoB,mBAAoB,UAAW,YAAa,mBAChH,SAASC,EAAMC,EAASC,EAAKC,EAAOC,EAAIC,EAAKC,GAC7C,OAAOL,EAAQ,8BAA+BK,GAU7CC,KAAM,KAGNC,EAAG,EAGHC,EAAG,EAQHC,MAAO,SAGPC,MAAO,QAIPC,UAAW,KAIXC,UAAW,KAEXC,YAAa,WACZC,KAAKC,2BAA2B,cAGhCb,EAAMc,SADY,IAAK,IAAK,OAAQ,QAAS,QAAS,aAC5BjB,EAAKkB,MAAMH,KAAM,SAASI,GACnDJ,KAAKK,MAAMD,EAAOJ,KAAKM,eAGxBN,KAAKK,MAAM,YAAapB,EAAKkB,MAAMH,KAAMA,KAAKO,qBAG/CC,WAAY,SAASC,GAKpBT,KAAKU,UAAUC,WACZF,GAASA,EAAMZ,WACjBG,KAAKO,kBAAkB,YAAa,KAAME,EAAMZ,YAIlDS,WAAY,WAKXN,KAAKY,cAAe,EACpBZ,KAAKa,uBAGNC,cAAe,KAEfP,kBAAmB,SAASQ,EAAMC,EAAUC,GAKxCjB,KAAKc,eACPd,KAAKc,cAAcI,UAEpBlB,KAAKc,cAAgBG,EAASZ,MAAM,QAASpB,EAAKkB,MAAMH,KAAMA,KAAKmB,oBAGpEC,SAAU,WAKT,IAAI5B,EAAOQ,KAAKR,KAOhB,OANIA,GAAQQ,KAAKqB,SAChB7B,EAAOQ,KAAKqB,OAAO7B,MAEhBA,IACHA,EAAOF,EAAIgC,aAEL9B,GAGRoB,cAAc,EACdW,cAAe,KAEfC,YAAa,SAASC,EAAOjC,EAAMI,EAAO8B,EAAMjC,EAAGC,EAAGC,GAWrD,OANc8B,EAAME,YACnBlC,EAAGA,EACHC,EAAGA,EACHgC,KAAMA,EACN/B,MAAOA,IACLiC,QAAQpC,GAAMqC,QAAQjC,IAI1BuB,iBAAkB,WACjB,GAAqB,MAAlBnB,KAAK8B,UAAR,CAGA,IAAIJ,EAEHA,EADE1B,KAAKH,UACAG,KAAKH,UAAUkC,MAEf/B,KAAK+B,MAEV/B,KAAKF,YACP4B,EAAO1B,KAAKF,UAAU4B,IAEvB,IAAIM,EAAa7C,EAAI,UAErB,IAAIa,KAAKY,mBAA+BqB,GAAdD,GAA2BA,EAAa,EAAG,CACpEhC,KAAK8B,UAAUI,QACf,IAAI1C,EAAOQ,KAAKoB,WAChBpB,KAAKuB,cAAgBvB,KAAKwB,YAAYxB,KAAK8B,UAAWtC,EAAMA,EAAKI,MAAQJ,EAAKI,MAAQI,KAAKJ,MAAO,GAAII,KAAKP,EAAGO,KAAKN,EAAGM,KAAKL,OAC3HK,KAAKY,cAAe,EAMrB,OAJAZ,KAAKuB,cAAcY,UAClBT,KAAMA,IAGA1B,KAAKuB","file":"../../dgauges/TextIndicator.js","sourcesContent":["define([\"dojo/_base/lang\", \"dojo/_base/declare\", \"dojo/_base/sniff\", \"dojo/_base/array\", \"dojo/on\", \"dojox/gfx\", \"./IndicatorBase\"],\r\n\tfunction(lang, declare, has, array, on, gfx, IndicatorBase){\r\n\treturn declare(\"dojox.dgauges.TextIndicator\", IndicatorBase, {\r\n\t\t// summary:\r\n\t\t//\t\tThis type of indicator is used to render text.\r\n\t\t//\t\tTo render an arbitrary text, set the value property.\r\n\t\t//\t\tTo render the value of a value indicator or a range indicator, set the indicator property.\r\n\t\t//\t\tSetting the indicator property takes precedence on setting the value property.\r\n\t\t//\t\tWhen the indicator property is set, the text is automatically updated on value changes.\r\n\r\n\t\t// font: Object\r\n\t\t//\t\tFont used by this element.\r\n\t\tfont: null,\r\n\t\t// x: Number\r\n\t\t//\t\tThe text anchor x-position. Default is 0.\r\n\t\tx: 0,\r\n\t\t// y: Number\r\n\t\t//\t\tThe text anchor y-position. Default is 0.\r\n\t\ty: 0,\r\n\t\t// align: String\r\n\t\t//\t\tAn alignment of a text in regards to the anchor position:\r\n\t\t//\r\n\t\t//\t\t- \"start\": A text's baseline starts at the anchor. \r\n\t\t//\t\tThis is the default value of the align attribute.\r\n\t\t//\t\t- \"middle\": A text's baseline is centered on the anchor point.\r\n\t\t//\t\t- \"end\": A text's baseline ends at the anchor point.\r\n\t\talign: \"middle\",\r\n\t\t// color: Object\r\n\t\t//\t\tThe color of the text.\r\n\t\tcolor: \"black\",\r\n\t\t// indicator: dojox/dgauges/IndicatorBase\r\n\t\t//\t\tIf this property is set, the value of the indicator is automatically\r\n\t\t//\t\trendered by this text element.\r\n\t\tindicator: null,\r\n\t\t// labelFunc: Object\r\n\t\t//\t\tIf set, this method allows to format the value of this text indicator.\r\n\t\t//\t\tA label function takes the text to render as argument and returns a String. \r\n\t\tlabelFunc: null,\r\n\t\t\r\n\t\tconstructor: function(){\r\n\t\t\tthis.addInvalidatingProperties([\"indicator\"]);\r\n\r\n\t\t\tvar resetProps = [\"x\", \"y\", \"font\", \"align\", \"color\", \"labelFunc\"];\r\n\t\t\tarray.forEach(resetProps, lang.hitch(this, function(entry){\r\n\t\t\t\tthis.watch(entry, this._resetText);\r\n\t\t\t}));\r\n\t\t\t\r\n\t\t\tthis.watch(\"indicator\", lang.hitch(this, this._indicatorChanged));\r\n\t\t},\r\n\r\n\t\tpostscript: function(mixin){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal method\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(mixin && mixin.indicator){\r\n\t\t\t\tthis._indicatorChanged(\"indicator\", null, mixin.indicator);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t_resetText: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tthis._textCreated = false;\r\n\t\t\tthis.invalidateRendering();\r\n\t\t},\r\n\t\t\r\n\t\t_valueWatcher: null,\r\n\t\t\r\n\t\t_indicatorChanged: function(name, oldValue, newValue){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(this._valueWatcher){\r\n\t\t\t\tthis._valueWatcher.unwatch();\r\n\t\t\t}\r\n\t\t\tthis._valueWatcher = newValue.watch(\"value\", lang.hitch(this, this.refreshRendering));\r\n\t\t},\r\n\t\t\r\n\t\t_getFont: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar font = this.font;\r\n\t\t\tif(!font && this._gauge){\r\n\t\t\t\tfont = this._gauge.font;\r\n\t\t\t}\r\n\t\t\tif(!font){\r\n\t\t\t\tfont = gfx.defaultFont;\r\n\t\t\t}\r\n\t\t\treturn font;\r\n\t\t},\r\n\t\t\r\n\t\t_textCreated: false,\r\n\t\t_textInstance: null,\r\n\t\t\r\n\t\t_createText: function(group, font, color, text, x, y, align){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar gfxText = group.createText({\r\n\t\t\t\tx: x,\r\n\t\t\t\ty: y,\r\n\t\t\t\ttext: text,\r\n\t\t\t\talign: align\r\n\t\t\t}).setFont(font).setFill(color);\r\n\t\t\treturn gfxText;\r\n\t\t},\r\n\t\t\r\n\t\trefreshRendering: function(){\r\n\t\t\tif(this._gfxGroup == null){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar text;\r\n\t\t\tif(this.indicator){\r\n\t\t\t\ttext = this.indicator.value;\r\n\t\t\t}else{\r\n\t\t\t\ttext = this.value;\r\n\t\t\t}\r\n\t\t\tif(this.labelFunc){\r\n\t\t\t\ttext = this.labelFunc(text);\r\n\t\t\t}\r\n\t\t\tvar iOsVersion = has(\"iphone\");\r\n\t\t\t// Workaround for a bug on iOS version < 5.0: Recreate the text every times\r\n\t\t\tif(!this._textCreated || (iOsVersion != undefined && iOsVersion < 5)){\r\n\t\t\t\tthis._gfxGroup.clear();\r\n\t\t\t\tvar font = this._getFont();\r\n\t\t\t\tthis._textInstance = this._createText(this._gfxGroup, font, font.color ? font.color : this.color, \"\", this.x, this.y, this.align);\r\n\t\t\t\tthis._textCreated = true;\r\n\t\t\t}\r\n\t\t\tthis._textInstance.setShape({\r\n\t\t\t\ttext: text\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\treturn this._textInstance;\r\n\t\t}\r\n\t})\r\n});\r\n"]}