{"version":3,"sources":["dgauges/_circularUtils.js"],"names":["define","computeTotalAngle","start","end","orientation","this","computeAngle","modAngle","angle","base","undefined","startAngle","endAngle","totalAngle","toRadians","deg","Math","PI","toDegrees","rad"],"mappings":";;;;;;;AAAAA,OAAO,WAQN,OACCC,kBAAmB,SAASC,EAAOC,EAAKC,GAKvC,OAAGF,GAASC,EACJ,IAEAE,KAAKC,aAAaJ,EAAOC,EAAKC,EAAa,MAIpDG,SAAU,SAASC,EAAOC,GAQzB,QAHWC,GAARD,IACFA,EAAO,eAELD,GAASC,EACX,GACCD,GAASC,QAEHD,GAASC,QAEhB,KAAOD,EAAQ,GACdA,GAASC,EAGX,OAAOD,GAGRF,aAAc,SAASK,EAAYC,EAAUR,EAAaK,GASzD,IAAII,EAEJ,YANWH,GAARD,IACFA,EAAO,eAKLG,GAAYD,EACPF,GAKNI,EAFgB,aAAfT,EACCQ,EAAWD,EACAF,GAAQE,EAAaC,GAErBA,EAAWD,EAItBC,EAAWD,EACAA,EAAaC,EAEbH,GAAQG,EAAWD,GAG3BN,KAAKE,SAASM,EAAYJ,KAGlCK,UAAW,SAASC,GAKnB,OAAOA,EAAMC,KAAKC,GAAK,KAGxBC,UAAW,SAASC,GAKnB,OAAa,IAANA,EAAYH,KAAKC","file":"../../dgauges/_circularUtils.js","sourcesContent":["define(function(){\r\n\t// module:\r\n\t//\t\tdojox/dgauges/components/_circularUtils\r\n\t// summary:\r\n\t//\t\tInternal circular utilities.\r\n\t// tags:\r\n\t//\t\tprivate\r\n\r\n\treturn {\r\n\t\tcomputeTotalAngle: function(start, end, orientation){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(start == end){\r\n\t\t\t\treturn 360;\r\n\t\t\t}else{\r\n\t\t\t\treturn this.computeAngle(start, end, orientation, 360);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tmodAngle: function(angle, base){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(base == undefined){\r\n\t\t\t\tbase = 6.28318530718;\r\n\t\t\t}\r\n\t\t\tif(angle >= base){\r\n\t\t\t\tdo {\r\n\t\t\t\t\tangle -= base;\r\n\t\t\t\t}\r\n\t\t\t\twhile (angle >= base);\r\n\t\t\t}else{\r\n\t\t\t\twhile (angle < 0){\r\n\t\t\t\t\tangle += base;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn angle;\r\n\t\t},\r\n\t\t\r\n\t\tcomputeAngle: function(startAngle, endAngle, orientation, base){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(base == undefined){\r\n\t\t\t\tbase = 6.28318530718;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar totalAngle;\r\n\t\t\t\r\n\t\t\tif(endAngle == startAngle){\r\n\t\t\t\treturn base;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(orientation == \"clockwise\"){\r\n\t\t\t\tif(endAngle < startAngle){\r\n\t\t\t\t\ttotalAngle = base - (startAngle - endAngle);\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttotalAngle = endAngle - startAngle;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(endAngle < startAngle){\r\n\t\t\t\t\ttotalAngle = startAngle - endAngle;\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttotalAngle = base - (endAngle - startAngle);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this.modAngle(totalAngle, base);\r\n\t\t},\r\n\t\t\r\n\t\ttoRadians: function(deg){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\treturn deg * Math.PI / 180;\r\n\t\t},\r\n\t\t\r\n\t\ttoDegrees: function(rad){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\treturn rad * 180 / Math.PI;\r\n\t\t}\r\n\t}\r\n});\r\n"]}