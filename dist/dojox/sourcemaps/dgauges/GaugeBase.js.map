{"version":3,"sources":["dgauges/GaugeBase.js"],"names":["define","lang","declare","domGeom","WidgetRegistry","_WidgetBase","html","event","gfx","_Invalidating","ScaleBase","matrix","_elements","_scales","_elementsIndex","_elementsRenderers","_gfxGroup","_mouseShield","_widgetBox","_node","value","_mainIndicator","_getValueAttr","this","get","_setMainIndicator","_setValueAttr","_set","set","indicator","i","length","getIndicator","_resetMainIndicator","font","constructor","args","node","family","style","variant","weight","size","color","byId","box","getMarginBox","surface","createSurface","w","h","_baseGroup","createGroup","_setCursor","type","cursor","_computeBoundingBox","element","getBoundingBox","x","y","width","height","destroy","inherited","arguments","resize","setMarginBox","d","getDimensions","setDimensions","clear","createRect","setFill","invalidateRendering","addElement","name","removeElement","isFunction","gfxHolder","mixin","_name","_isGFX","refreshRendering","push","_gauge","removeShape","idx","indexOf","splice","idxs","getElement","getElementRenderer","onStartEditing","onEndEditing"],"mappings":"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","file":"../../dgauges/GaugeBase.js","sourcesContent":["define([\"dojo/_base/lang\", \"dojo/_base/declare\", \"dojo/dom-geometry\", \"dijit/registry\", \"dijit/_WidgetBase\", \"dojo/_base/html\", \r\n\t\t\"dojo/_base/event\", \"dojox/gfx\", \"dojox/widget/_Invalidating\",\"./ScaleBase\", \"dojox/gfx/matrix\"],\r\n\tfunction(lang, // lang.extend\r\n\t\tdeclare, domGeom,  WidgetRegistry, _WidgetBase, html, event, gfx, _Invalidating, ScaleBase, matrix){\r\n\treturn declare(\"dojox.dgauges.GaugeBase\", [_WidgetBase, _Invalidating], {\r\n\t\t// summary: \r\n\t\t//\t\tThis class is the base class for the circular and \r\n\t\t//\t\trectangular (horizontal and vertical) gauge components.\r\n\t\t//\t\tA gauge is a composition of elements added to the gauge using the addElement method.\r\n\t\t//\t\tElements are drawn from back to front in the same order they are added (using addElement).\r\n\t\t//\t\tAn elements can be: \r\n\t\t//\r\n\t\t//\t\t- A GFX drawing functions typically used for defining the style of the gauge.\r\n\t\t//\t\t- A scale: CircularScale or RectangularScale depending on the type of gauge.\r\n\t\t//\t\t- A text, using the TextIndicator\r\n\t\t//\t\tNote: Indicator classes (value indicators, range indicators) are sub-elements of scales\r\n\t\t//\t\tTo create a custom gauge, subclass CircularGauge or RectangularGauge and\r\n\t\t//\t\tconfigure its elements in the constructor.\r\n\t\t//\t\tReady to use, predefined gauges are available in dojox/dgauges/components/\r\n\t\t//\t\tThey are good examples of gauges built on top of the framework.\r\n\t\t\r\n\t\t_elements: null,\r\n\t\t_scales: null,\r\n\t\t_elementsIndex: null,\r\n\t\t_elementsRenderers: null,\r\n\t\t_gfxGroup: null,\r\n\t\t_mouseShield: null,\r\n\t\t_widgetBox: null,\r\n\t\t_node: null,\r\n\r\n\t\t// value: Number\r\n\t\t//\t\tThis property acts as a top-level wrapper for the value of the first indicator added to \r\n\t\t//\t\tits scale with the name \"indicator\", i.e. myScale.addIndicator(\"indicator\", myIndicator).\r\n\t\t//\t\tThis property must be manipulated with get(\"value\") and set(\"value\", xxx).\r\n\t\tvalue: 0,\r\n\t\t_mainIndicator: null,\r\n\t\t\r\n\t\t_getValueAttr: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\t\t\t\r\n\t\t\tif(this._mainIndicator){\r\n\t\t\t\treturn this._mainIndicator.get(\"value\");\r\n\t\t\t}else{\r\n\t\t\t\tthis._setMainIndicator();\r\n\t\t\t\tif(this._mainIndicator){\r\n\t\t\t\t\treturn this._mainIndicator.get(\"value\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this.value;\r\n\t\t},\r\n\t\t\r\n\t\t_setValueAttr: function(value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\t\t\t\r\n\t\t\tthis._set(\"value\", value);\r\n\t\t\tif(this._mainIndicator){\r\n\t\t\t\tthis._mainIndicator.set(\"value\", value);\r\n\t\t\t}else{\r\n\t\t\t\tthis._setMainIndicator();\r\n\t\t\t\tif(this._mainIndicator){\r\n\t\t\t\t\tthis._mainIndicator.set(\"value\", value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t_setMainIndicator: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\t\r\n\t\t\tvar indicator;\r\n\t\t\tfor(var i=0; i<this._scales.length; i++){\r\n\t\t\t\tindicator = this._scales[i].getIndicator(\"indicator\");\r\n\t\t\t\tif(indicator){\r\n\t\t\t\t\tthis._mainIndicator = indicator;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t_resetMainIndicator: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tthis._mainIndicator = null;\r\n\t\t},\r\n\t\t\r\n\t\t// font: Object\r\n\t\t//\t\tThe font of the gauge used by elements if not overridden.\r\n\t\tfont: null,\r\n\t\t\r\n\t\tconstructor: function(/* Object */args, /* DOMNode */ node){\r\n\t\t\tthis.font = {\r\n\t\t\t\tfamily: \"Helvetica\",\r\n\t\t\t\tstyle: \"normal\",\r\n\t\t\t\tvariant: \"small-caps\",\r\n\t\t\t\tweight: \"bold\",\r\n\t\t\t\tsize: \"10pt\",\r\n\t\t\t\tcolor: \"black\"\r\n\t\t\t};\r\n\t\t\tthis._elements = [];\r\n\t\t\tthis._scales = [];\r\n\t\t\tthis._elementsIndex = {};\r\n\t\t\tthis._elementsRenderers = {};\r\n\t\t\tthis._node = WidgetRegistry.byId(node);\r\n\t\t\tvar box = html.getMarginBox(node);\r\n\r\n\t\t\tthis.surface = gfx.createSurface(this._node, box.w || 1, box.h || 1);\r\n\t\t\tthis._widgetBox = box;\r\n\t\t\t// _baseGroup is a workaround for http://bugs.dojotoolkit.org/ticket/14471\r\n\t\t\tthis._baseGroup = this.surface.createGroup();\r\n\t\t\tthis._mouseShield = this._baseGroup.createGroup();\r\n\t\t\tthis._gfxGroup = this._baseGroup.createGroup();\r\n\t\t},\r\n\t\t\r\n\t\t_setCursor: function(type){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(this._node)\r\n\t\t\t\tthis._node.style.cursor = type;\r\n\t\t},\r\n\t\t\r\n\t\t_computeBoundingBox: function(/* Object */element){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\treturn element ? element.getBoundingBox() : {x:0, y:0, width:0, height:0};\r\n\t\t},\r\n\t\t\r\n\t\tdestroy: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCleanup when a gauge is to be destroyed.\r\n\t\t\tthis.surface.destroy();\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tresize: function(width, height){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tResize the gauge to the dimensions of width and height.\r\n\t\t\t// description:\r\n\t\t\t//\t\tResize the gauge and its surface to the width and height dimensions.\r\n\t\t\t//\t\tIf a single argument of the form {w: value1, h: value2} is provided take that argument as the dimensions to use.\r\n\t\t\t//\t\tFinally if no argument is provided, resize the surface to the marginBox of the gauge.\r\n\t\t\t// width: Number|Object?\r\n\t\t\t//\t\tThe new width of the gauge or the box definition.\r\n\t\t\t// height: Number?\r\n\t\t\t//\t\tThe new height of the gauge.\r\n\t\t\t// returns: dojox/dgauges/GaugeBase\r\n\t\t\t//\t\tA reference to the current gauge for functional chaining.\r\n\t\t\tswitch(arguments.length){\r\n\t\t\t\t// case 0, do not resize the div, just the surface\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\t// argument, override node box\r\n\t\t\t\t\tdomGeom.setMarginBox(this._node, width);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\r\n\t\t\t\t\t// argument, override node box\r\n\t\t\t\t\tdomGeom.setMarginBox(this._node, {w: width, h: height});\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t// in all cases take back the computed box\r\n\t\t\tvar box = domGeom.getMarginBox(this._node);\r\n\t\t\tthis._widgetBox = box;\r\n\t\t\tvar d = this.surface.getDimensions();\r\n\t\t\tif(d.width != box.w || d.height != box.h){\r\n\t\t\t\t// and set it on the surface\r\n\t\t\t\tthis.surface.setDimensions(box.w, box.h);\r\n\t\t\t\tthis._mouseShield.clear();\r\n\t\t\t\tthis._mouseShield.createRect({x:0,y:0,width:box.w,height:box.h}).setFill([0, 0, 0, 0]);\r\n\t\t\t\treturn this.invalidateRendering();\r\n\t\t\t}else{\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\taddElement: function(/* String */name, /* Object */ element){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdds a element to the gauge.\r\n\t\t\t// name: String\r\n\t\t\t//\t\tThe name of the element to be added.\r\n\t\t\t// element: Object\r\n\t\t\t//\t\tThis parameter can be:\r\n\t\t\t//\r\n\t\t\t//\t\t- A function which takes on argument of type GFX Group and return null or a\r\n\t\t\t//\t\tGFX element retrievable using the getElementRenderer() method.\r\n\t\t\t//\t\t- A Scale instance, i.e. CircularScale or RectangularScale.\r\n\t\t\t//\t\t- A TextIndicator instance.\r\n\t\t\tif(this._elementsIndex[name] && this._elementsIndex[name] != element){\r\n\t\t\t\tthis.removeElement(name);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(lang.isFunction(element)){\r\n\t\t\t\tvar gfxHolder = {};\r\n\t\t\t\tlang.mixin(gfxHolder, new _Invalidating());\r\n\t\t\t\tgfxHolder._name = name;\r\n\t\t\t\tgfxHolder._gfxGroup = this._gfxGroup.createGroup();\r\n\t\t\t\tgfxHolder.width = 0;\r\n\t\t\t\tgfxHolder.height = 0;\r\n\t\t\t\tgfxHolder._isGFX = true;\r\n\t\t\t\tgfxHolder.refreshRendering = function(){\r\n\t\t\t\t\tgfxHolder._gfxGroup.clear();\r\n\t\t\t\t\treturn element(gfxHolder._gfxGroup, gfxHolder.width, gfxHolder.height);\r\n\t\t\t\t};\r\n\t\t\t\tthis._elements.push(gfxHolder);\r\n\t\t\t\tthis._elementsIndex[name] = gfxHolder;\r\n\t\t\t}else{\r\n\t\t\t\telement._name = name;\r\n\t\t\t\telement._gfxGroup = this._gfxGroup.createGroup();\r\n\t\t\t\telement._gauge = this;\r\n\t\t\t\tthis._elements.push(element);\r\n\t\t\t\tthis._elementsIndex[name] = element;\r\n\t\t\t\t\r\n\t\t\t\tif(element instanceof ScaleBase){\r\n\t\t\t\t\tthis._scales.push(element);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this.invalidateRendering();\r\n\t\t},\r\n\t\t\r\n\t\tremoveElement: function(/* String */name){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRemove the element defined by name from the gauge.\r\n\t\t\t// name: String\r\n\t\t\t//\t\tThe name of the element as defined using addElement.\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\tA reference to the removed element.\r\n\t\t\t\r\n\t\t\tvar element = this._elementsIndex[name];\r\n\t\t\t\r\n\t\t\tif(element){\r\n\t\t\t\telement._gfxGroup.removeShape();\r\n\t\t\t\tvar idx = this._elements.indexOf(element);\r\n\t\t\t\tthis._elements.splice(idx, 1);\r\n\t\t\t\t\r\n\t\t\t\tif(element instanceof ScaleBase){\r\n\t\t\t\t\tvar idxs = this._scales.indexOf(element);\r\n\t\t\t\t\tthis._scales.splice(idxs, 1);\r\n\t\t\t\t\tthis._resetMainIndicator();\r\n\t\t\t\t}\r\n\t\t\t\tdelete this._elementsIndex[name];\r\n\t\t\t\tdelete this._elementsRenderers[name];\r\n\t\t\t}\r\n\t\t\tthis.invalidateRendering();\r\n\t\t\treturn element;\r\n\t\t},\r\n\t\t\r\n\t\tgetElement: function(/* String */name){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet the given element, by name.\r\n\t\t\t// name: String\r\n\t\t\t//\t\tThe name of the element as defined using addElement.\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\tThe element.\r\n\t\t\treturn this._elementsIndex[name];\r\n\t\t},\r\n\t\t\r\n\t\tgetElementRenderer: function(/* String */name){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet the given element renderer, by name.\r\n\t\t\t// name: String\r\n\t\t\t//\t\tThe name of the element as defined using addElement.\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\tThe element renderer returned by the\r\n\t\t\t//\t\tdrawing function or by the refreshRendering() method\r\n\t\t\t//\t\tin the case of framework classes.\r\n\t\t\treturn this._elementsRenderers[name];\r\n\t\t},\r\n\t\t\r\n\t\tonStartEditing: function(event){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when an interaction begins (keyboard, mouse or gesture).\r\n\t\t\t// event:\r\n\t\t\t//\t\tOn object with a unique member \"indicator\". This member is a reference to the modified indicator.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\t\t\r\n\t\tonEndEditing: function(event){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when an interaction ends (keyboard, mouse or gesture).\r\n\t\t\t// event:\r\n\t\t\t//\t\tOn object with a unique member \"indicator\". This member is a reference to the modified indicator.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t}\r\n\t})\r\n});\r\n"]}