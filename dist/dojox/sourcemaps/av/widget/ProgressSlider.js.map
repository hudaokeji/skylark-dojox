{"version":3,"sources":["av/widget/ProgressSlider.js"],"names":["define","dojo","dijit","_Widget","_TemplatedMixin","declare","templateString","cache","postCreate","this","seeking","handleWidth","marginBox","handle","w","dim","coords","domNode","finalWidth","width","x","setSelectable","setMedia","med","playerWidget","media","connect","data","duration","disconnect","posCon","setHandle","percent","setLoadedPosition","onDrag","evt","clientX","p","seek","style","progressPosition","startDrag","cmove","doc","cup","endDrag","handleOut","time","decimal","progressLoaded","handleOver","addClass","removeClass","onResize","playerDimensions"],"mappings":"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","file":"../../../av/widget/ProgressSlider.js","sourcesContent":["define(['dojo', 'dijit', 'dijit/_Widget', 'dijit/_TemplatedMixin'],function(dojo, dijit, _Widget, _TemplatedMixin){\r\n\r\nreturn dojo.declare(\"dojox.av.widget.ProgressSlider\", [_Widget, _TemplatedMixin], {\r\n\t// summary:\r\n\t//\t\tA custom slider widget to use with dojox.av.widget.Player.\r\n\t// description:\r\n\t//\t\tDisplays the current playhead position of the media. Has two\r\n\t//\t\tprogress bars: one for playhead position, and one for download\r\n\t//\t\tprogress.\r\n\r\n\ttemplateString: dojo.cache(\"dojox.av.widget\",\"resources/ProgressSlider.html\"),\r\n\tpostCreate: function(){\r\n\t\t// summary:\r\n\t\t//\t\tInitialize slider.\r\n\r\n\t\tthis.seeking = false;\r\n\t\tthis.handleWidth = dojo.marginBox(this.handle).w;\r\n\t\tvar dim = dojo.coords(this.domNode);\r\n\t\tthis.finalWidth = dim.w\r\n\t\tthis.width = dim.w-this.handleWidth;\r\n\t\tthis.x = dim.x;\r\n\r\n\t\tdojo.setSelectable(this.domNode, false);\r\n\t\tdojo.setSelectable(this.handle, false);\r\n\t},\r\n\tsetMedia: function(/* Object */med, playerWidget){\r\n\t\t// summary:\r\n\t\t//\t\tA common method to set the media in all Player widgets.\r\n\t\t//\t\tMay do connections and initializations.\r\n\r\n\t\tthis.playerWidget = playerWidget;\r\n\t\tthis.media = med;\r\n\t\tdojo.connect(this.media, \"onMetaData\", this, function(data){\r\n\t\t\tif(data && data.duration){\r\n\t\t\t\tthis.duration = data.duration;\r\n\t\t\t}\r\n\t\t});\r\n\t\tdojo.connect(this.media, \"onEnd\", this,  function(){\r\n\t\t\tdojo.disconnect(this.posCon);\r\n\t\t\tthis.setHandle(this.duration);\r\n\t\t});\r\n\t\tdojo.connect(this.media, \"onStart\", this, function(){\r\n\t\t\tthis.posCon = dojo.connect(this.media, \"onPosition\", this, \"setHandle\");\r\n\t\t});\r\n\r\n\t\tdojo.connect(this.media, \"onDownloaded\", this, function(percent){\r\n\t\t\tthis.setLoadedPosition(percent*.01);\r\n\t\t\tthis.width = this.finalWidth * .01 * percent;\r\n\t\t});\r\n\r\n\t},\r\n\tonDrag: function(/* HTMLEvent */ evt){\r\n\t\t// summary:\r\n\t\t//\t\tFired when the mouse is moved. Sets the slider.\r\n\r\n\t\tvar x = evt.clientX - this.x;\r\n\t\tif(x<0) x = 0;\r\n\t\tif(x>this.width-this.handleWidth) x=this.width-this.handleWidth;\r\n\r\n\t\tvar p = x/this.finalWidth;\r\n\t\tthis.media.seek( this.duration * p );\r\n\t\tdojo.style(this.handle, \"marginLeft\", x+\"px\");\r\n\t\tdojo.style(this.progressPosition, \"width\", x+\"px\");\r\n\t},\r\n\tstartDrag: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFired onmousedown of the slider handle.\r\n\r\n\t\tdojo.setSelectable(this.playerWidget.domNode, false);\r\n\t\tthis.seeking = true;\r\n\t\tthis.cmove = dojo.connect(dojo.doc, \"mousemove\", this, \"onDrag\");\r\n\t\tthis.cup = dojo.connect(dojo.doc, \"mouseup\", this, \"endDrag\");\r\n\t},\r\n\tendDrag: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFired on document.onmouseup.\r\n\r\n\t\tdojo.setSelectable(this.playerWidget.domNode, true);\r\n\t\tthis.seeking = false;\r\n\t\tif(this.cmove) dojo.disconnect(this.cmove);\r\n\t\tif(this.cup) dojo.disconnect(this.cup);\r\n\t\tthis.handleOut();\r\n\t},\r\n\r\n\tsetHandle: function(time){\r\n\t\t// summary:\r\n\t\t//\t\tSets the slider handle (when it is not being dragged)\r\n\r\n\t\tif(!this.seeking){\r\n\t\t\tvar w = this.width-this.handleWidth;\r\n\t\t\tvar p = time/this.duration;\r\n\t\t\tvar x = p*w;\r\n\r\n\t\t\tdojo.style(this.handle, \"marginLeft\", x+\"px\");\r\n\t\t\tdojo.style(this.progressPosition, \"width\", x+\"px\");\r\n\t\t}\r\n\t},\r\n\r\n\tsetLoadedPosition: function(decimal){\r\n\t\t// summary:\r\n\t\t//\t\tSets the download progress bar to the percentage of how much\r\n\t\t//\t\tthe media has been downloaded.\r\n\t\tdojo.style(this.progressLoaded, \"width\", (this.finalWidth*decimal)+\"px\");\r\n\t},\r\n\r\n\thandleOver: function(){\r\n\t\t// summary:\r\n\t\t//\t\tHighlights the slider handle on mouseover, and\r\n\t\t//\t\tstays highlighted during drag.\r\n\r\n\t\tdojo.addClass(this.handle, \"over\");\r\n\t},\r\n\thandleOut: function(){\r\n\t\t// summary:\r\n\t\t//\t\tUnhighlights handle onmouseover, or on endDrag.\r\n\r\n\t\tif(!this.seeking){\r\n\t\t\tdojo.removeClass(this.handle, \"over\");\r\n\t\t}\r\n\t},\r\n\tonResize: function(playerDimensions){\r\n\t\t// summary:\r\n\t\t//\t\tHandles player resize. Need to recalculate the width of\r\n\t\t//\t\tposition an download bars.\r\n\t\tvar dim = dojo.coords(this.domNode);\r\n\t\tthis.finalWidth = dim.w;\r\n\r\n\t}\r\n\r\n});\r\n\r\n});\r\n"]}