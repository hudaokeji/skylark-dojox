{"version":3,"sources":["av/widget/Player.js"],"names":["define","dojo","dijit","_Widget","_TemplatedMixin","experimental","declare","playerWidth","widgetsInTemplate","templateString","cache","_fillContent","this","items","srcNodeRef","nodes","query","forEach","n","push","postCreate","style","domNode","isString","indexOf","connect","window","children","i","id","getUniqueId","attr","playContainer","appendChild","controlsBottom","statusContainer","progressContainer","mediaNode","playerScreen","startup","media","byId","isAIR","child","setMedia","onResize","evt","dim","marginBox"],"mappings":";;;;;;;AAAAA,QAAQ,OAAQ,QAAS,gBAAiB,yBAAyB,SAASC,EAAMC,EAAOC,EAASC,GAIlG,OAFAH,EAAKI,aAAa,0BAEXJ,EAAKK,QAAQ,0BAA2BH,EAASC,IA2BvDG,YAAa,QAObC,mBAAkB,EAClBC,eAAgBR,EAAKS,MAAM,kBAAkB,yBAE7CC,aAAc,WAGb,IAAIC,KAAKC,OAASD,KAAKE,WAAW,CACjCF,KAAKC,SACL,IAAIE,EAAQd,EAAKe,MAAM,IAAKJ,KAAKE,YACjCb,EAAKgB,QAAQF,EAAO,SAASG,GAC5BN,KAAKC,MAAMM,KAAKD,IACdN,QAILQ,WAAY,WAIXnB,EAAKoB,MAAMT,KAAKU,QAAS,QAASV,KAAKL,aAAaN,EAAKsB,SAASX,KAAKL,aAAa,GAAG,OAEpFN,EAAKsB,SAASX,KAAKL,cAAgBK,KAAKL,YAAYiB,QAAQ,MAC9DvB,EAAKwB,QAAQC,OAAQ,SAAUd,KAAM,YAEtCA,KAAKe,YAEL1B,EAAKgB,QAAQL,KAAKC,MAAO,SAASK,EAAGU,GAEpC,OADAV,EAAEW,GAAK3B,EAAM4B,YAAY,kBAClB7B,EAAK8B,KAAKb,EAAG,gBACnB,IAAK,OACJN,KAAKoB,cAAcC,YAAYf,GAAI,MACpC,IAAK,SACJN,KAAKsB,eAAeD,YAAYf,GAAI,MACrC,IAAK,SACJN,KAAKuB,gBAAgBF,YAAYf,GAAI,MACtC,IAAK,WACL,IAAK,SACJN,KAAKwB,kBAAkBH,YAAYf,GAAI,MACxC,IAAK,QACJN,KAAKyB,UAAYnB,EACjBN,KAAK0B,aAAaL,YAAYf,GAIhCN,KAAKC,MAAMe,GAAKV,EAAEW,IAChBjB,OAGJ2B,QAAS,WAKR3B,KAAK4B,MAAQtC,EAAMuC,KAAK7B,KAAKyB,UAAUR,IACnC5B,EAAKyC,QACRzC,EAAKoB,MAAMT,KAAK4B,MAAMlB,QAAS,QAAS,QACxCrB,EAAKoB,MAAMT,KAAK4B,MAAMlB,QAAS,SAAU,SAE1CrB,EAAKgB,QAAQL,KAAKC,MAAO,SAASgB,GACjC,GAAGA,IAAOjB,KAAKyB,UAAUR,GAAG,CAC3B,IAAIc,EAAQzC,EAAMuC,KAAKZ,GACvBjB,KAAKe,SAASR,KAAKwB,GAChBA,GACFA,EAAMC,SAAShC,KAAK4B,MAAO5B,QAG3BA,OAGJiC,SAAU,SAASC,GAKlB,IAAIC,EAAM9C,EAAK+C,UAAUpC,KAAKU,SAC3BV,KAAK4B,OAAiC,OAAxB5B,KAAK4B,MAAMK,UAC3BjC,KAAK4B,MAAMK,SAASE,GAErB9C,EAAKgB,QAAQL,KAAKe,SAAU,SAASgB,GACjCA,EAAME,UACRF,EAAME,SAASE","file":"../../../av/widget/Player.js","sourcesContent":["define(['dojo', 'dijit', 'dijit/_Widget', 'dijit/_TemplatedMixin'],function(dojo, dijit, _Widget, _TemplatedMixin){\r\n\r\ndojo.experimental(\"dojox.av.widget.Player\");\r\n\r\nreturn dojo.declare(\"dojox.av.widget.Player\", [_Widget, _TemplatedMixin], {\r\n\t// summary:\r\n\t//\t\tA Media Player UI widget for all types of dojox.av and AIR media.\r\n\t// description:\r\n\t//\t\tCurrently for markup only. All controls should reside as child\r\n\t//\t\tnodes within the Player node. 'controlType' is used to determine\r\n\t//\t\tthe placement of the control. If no type or an unrecognized type\r\n\t//\t\tis used, it will be left-aligned in the same row as the volume.\r\n\t//\r\n\t//\t\tNote:\r\n\t//\t\tBe sure to use 'controlType' as a node attribute. It is not a\r\n\t//\t\tproperty of the widget.\r\n\t// example:\r\n\t//\t\t|\t<div dojoType=\"dojox.av.widget.Player\" playerWidth=\"100%\">\r\n    //\t\t| \t\t<div controlType=\"video\" initialVolume=\".1\"\r\n\t//\t\t| \t\t\tmediaUrl=\"video/Grog.flv\" autoPlay=\"true\"\r\n\t//\t\t|\t\t\tisDebug=\"false\" dojoType=\"dojox.av.FLVideo\"></div>\r\n    //\t\t|     \t<div controlType=\"play\" dojoType=\"dojox.av.widget.PlayButton\"></div>\r\n    //\t\t|     \t<div controlType=\"volume\" dojoType=\"dojox.av.widget.VolumeButton\"></div>\r\n    //\t\t|     \t<div controlType=\"progress\" dojoType=\"dojox.av.widget.ProgressSlider\"></div>\r\n    //\t\t|     \t<div controlType=\"status\" dojoType=\"dojox.av.widget.Status\"></div>\r\n    //\t\t| </div>\r\n\r\n\t// playerWidth: Number|String\r\n\t//\t\tSets the width of the player (not the video size)\r\n\t//\t\tNumber will be converted to pixels\r\n\t//\t\tString will be used literally. EX: \"320px\" or \"100%\"\r\n\tplayerWidth: \"480px\",\r\n\r\n\t// TODO:\r\n\t//playerHeight\r\n\t//videoWidth: 320,\r\n\t//videoHeight: 240,\r\n\r\n\twidgetsInTemplate:true,\r\n\ttemplateString: dojo.cache(\"dojox.av.widget\",\"resources/Player.html\"),\r\n\r\n\t_fillContent: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFinding and collecting child nodes\r\n\t\tif(!this.items && this.srcNodeRef){\r\n\t\t\tthis.items = [];\r\n\t\t\tvar nodes = dojo.query(\"*\", this.srcNodeRef);\r\n\t\t\tdojo.forEach(nodes, function(n){\r\n\t\t\t\tthis.items.push(n);\r\n\t\t\t}, this);\r\n\t\t}\r\n\t},\r\n\r\n\tpostCreate: function(){\r\n\t\t// summary:\r\n\t\t//\t\tDo player styling, and place child widgets in the proper location.\r\n\r\n\t\tdojo.style(this.domNode, \"width\", this.playerWidth+(dojo.isString(this.playerWidth)?\"\":\"px\"));\r\n\r\n\t\tif(dojo.isString(this.playerWidth) && this.playerWidth.indexOf(\"%\")){\r\n\t\t\tdojo.connect(window, \"resize\", this, \"onResize\");\r\n\t\t}\r\n\t\tthis.children = [];\r\n\t\tvar domNode;\r\n\t\tdojo.forEach(this.items, function(n, i){\r\n\t\t\tn.id = dijit.getUniqueId(\"player_control\");\r\n\t\t\tswitch(dojo.attr(n, \"controlType\")){\r\n\t\t\t\tcase \"play\":\r\n\t\t\t\t\tthis.playContainer.appendChild(n); break;\r\n\t\t\t\tcase \"volume\" :\r\n\t\t\t\t\tthis.controlsBottom.appendChild(n);\tbreak;\r\n\t\t\t\tcase \"status\" :\r\n\t\t\t\t\tthis.statusContainer.appendChild(n);\tbreak;\r\n\t\t\t\tcase \"progress\":\r\n\t\t\t\tcase \"slider\":\r\n\t\t\t\t\tthis.progressContainer.appendChild(n);\tbreak;\r\n\t\t\t\tcase \"video\":\r\n\t\t\t\t\tthis.mediaNode = n;\r\n\t\t\t\t\tthis.playerScreen.appendChild(n);\tbreak;\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t}\r\n\t\t\tthis.items[i] = n.id;\r\n\t\t}, this);\r\n\r\n\t},\r\n\tstartup: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFired when all children are ready. Set the media in\r\n\t\t//\t\tall children with setMedia()\r\n\r\n\t\tthis.media = dijit.byId(this.mediaNode.id);\r\n\t\tif(!dojo.isAIR){\r\n\t\t\tdojo.style(this.media.domNode, \"width\", \"100%\");\r\n\t\t\tdojo.style(this.media.domNode, \"height\", \"100%\");\r\n\t\t}\r\n\t\tdojo.forEach(this.items, function(id){\r\n\t\t\tif(id !== this.mediaNode.id){\r\n\t\t\t\tvar child = dijit.byId(id);\r\n\t\t\t\tthis.children.push(child);\r\n\t\t\t\tif(child){\r\n\t\t\t\t\tchild.setMedia(this.media, this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, this);\r\n\t},\r\n\r\n\tonResize: function(evt){\r\n\t\t// summary:\r\n\t\t//\t\tIf a player size is a percentage, this will fire an onResize\r\n\t\t//\t\tevent for all children, passing the size of the player.\r\n\r\n\t\tvar dim = dojo.marginBox(this.domNode);\r\n\t\tif(this.media && this.media.onResize !== null){\r\n\t\t\tthis.media.onResize(dim);\r\n\t\t}\r\n\t\tdojo.forEach(this.children, function(child){\r\n\t\t\tif(child.onResize){\r\n\t\t\t\tchild.onResize(dim);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n});\r\n\r\n});\r\n"]}