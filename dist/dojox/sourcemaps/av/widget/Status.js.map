{"version":3,"sources":["av/widget/Status.js"],"names":["define","dojo","dijit","_Widget","_TemplatedMixin","declare","templateString","cache","setMedia","med","this","media","connect","data","duration","durNode","innerHTML","toSeconds","time","timeNode","forEach","c","onMetaData","title","a","mediaUrl","split","b","length","onBuffer","isBuffering","console","warn","setStatus","onPosition","onStart","onPlay","onPaused","onStop","onEnd","onError","evt","log","msg","info","code","onLoad","str","isError","addClass","titleNode","removeClass","ts","toString","indexOf","substring"],"mappings":";;;;;;;AAAAA,QAAQ,OAAQ,QAAS,gBAAiB,yBAAyB,SAASC,EAAMC,EAAOC,EAASC,GAElG,OAAOH,EAAKI,QAAQ,0BAA2BF,EAASC,IAQvDE,eAAgBL,EAAKM,MAAM,kBAAkB,yBAE7CC,SAAU,SAAqBC,GAK9BC,KAAKC,MAAQF,EACbR,EAAKW,QAAQF,KAAKC,MAAO,aAAcD,KAAM,SAASG,GACrDH,KAAKI,SAAWD,EAAKC,SACrBJ,KAAKK,QAAQC,UAAYN,KAAKO,UAAUP,KAAKI,YAE9Cb,EAAKW,QAAQF,KAAKC,MAAO,aAAcD,KAAM,SAASQ,GACrDR,KAAKS,SAASH,UAAYN,KAAKO,UAAUC,KAI1CjB,EAAKmB,SADO,aAAc,aAAc,UAAW,WAAY,SAAU,WAAY,SAAU,QAAS,UAAW,UAChG,SAASC,GAC3BpB,EAAKW,QAAQF,KAAKC,MAAOU,EAAGX,KAAMW,IAChCX,OAGJY,WAAY,SAAST,GAGpB,GAFAH,KAAKI,SAAWD,EAAKC,SACrBJ,KAAKK,QAAQC,UAAYN,KAAKO,UAAUP,KAAKI,UAC1CJ,KAAKC,MAAMY,MACbb,KAAKa,MAAQb,KAAKC,MAAMY,UACpB,CACJ,IAAIC,EAAId,KAAKC,MAAMc,SAASC,MAAM,KAC9BC,EAAIH,EAAEA,EAAEI,OAAO,GAAGF,MAAM,KAAK,GACjChB,KAAKa,MAAQI,IAGfE,SAAU,SAASC,GAClBpB,KAAKoB,YAAcA,EACnBC,QAAQC,KAAK,kBAAmBtB,KAAKoB,aAClCpB,KAAKoB,YACPpB,KAAKuB,UAAU,gBAEfvB,KAAKuB,UAAU,YAGjBC,WAAW,SAAShB,KAIpBiB,QAAS,WACRzB,KAAKuB,UAAU,aAEhBG,OAAQ,WACP1B,KAAKuB,UAAU,YAEhBI,SAAU,WACT3B,KAAKuB,UAAU,WAEhBK,OAAQ,WACP5B,KAAKuB,UAAU,YAEhBM,MAAO,WACN7B,KAAKuB,UAAU,YAEhBO,QAAS,SAASC,GACjBV,QAAQW,IAAI,gBAAiBD,GAC7B,IAAIE,EAAMF,EAAIG,KAAKC,KACT,iCAAPF,IACFA,EAAM,oBAEPjC,KAAKuB,UAAU,UAAWU,GAAK,IAEhCG,OAAQ,WACPpC,KAAKuB,UAAU,eAGhBA,UAAW,SAASc,EAAKC,GACrBA,EACF/C,EAAKgD,SAASvC,KAAKwC,UAAW,gBAE9BjD,EAAKkD,YAAYzC,KAAKwC,UAAW,eAC9BxC,KAAKoB,cACPiB,EAAM,iBAIRrC,KAAKwC,UAAUlC,UAAY,6BAA6BN,KAAKa,MAAM,oCAAoCwB,EAAI,WAG5G9B,UAAW,SAASC,GACnB,IAAIkC,EAAKlC,EAAKmC,WASd,OAPGD,EAAGE,QAAQ,KAAK,EAClBF,GAAM,MACEA,EAAGxB,OAASwB,EAAGE,QAAQ,MAAM,EACrCF,GAAI,IACIA,EAAGxB,OAASwB,EAAGE,QAAQ,KAAK,IACpCF,EAAKA,EAAGG,UAAU,EAAGH,EAAGE,QAAQ,KAAK,IAE/BF","file":"../../../av/widget/Status.js","sourcesContent":["define(['dojo', 'dijit', 'dijit/_Widget', 'dijit/_TemplatedMixin'],function(dojo, dijit, _Widget, _TemplatedMixin){\r\n\r\nreturn dojo.declare(\"dojox.av.widget.Status\", [_Widget, _TemplatedMixin], {\r\n\t// summary:\r\n\t//\t\tA Status widget to use with dojox.av.widget.Player\r\n\t// description:\r\n\t//\t\tDisplays the name of the media file, and it's current status\r\n\t//\t\t(playing, paused, buffering, etc.) in the middle. Displays\r\n\t//\t\tthe playhead time on the left and the duration on the right.\r\n\r\n\ttemplateString: dojo.cache(\"dojox.av.widget\",\"resources/Status.html\"),\r\n\r\n\tsetMedia: function(/* Object */med){\r\n\t\t// summary:\r\n\t\t//\t\tA common method to set the media in all Player widgets.\r\n\t\t//\t\tMay do connections and initializations.\r\n\r\n\t\tthis.media = med;\r\n\t\tdojo.connect(this.media, \"onMetaData\", this, function(data){\r\n\t\t\tthis.duration = data.duration;\r\n\t\t\tthis.durNode.innerHTML = this.toSeconds(this.duration);\r\n\t\t});\r\n\t\tdojo.connect(this.media, \"onPosition\", this, function(time){\r\n\t\t\tthis.timeNode.innerHTML = this.toSeconds(time);\r\n\t\t});\r\n\r\n\t\tvar cons = [\"onMetaData\", \"onPosition\", \"onStart\", \"onBuffer\", \"onPlay\", \"onPaused\", \"onStop\", \"onEnd\", \"onError\", \"onLoad\"];\r\n\t\tdojo.forEach(cons, function(c){\r\n\t\t\tdojo.connect(this.media, c, this, c);\r\n\t\t}, this);\r\n\r\n\t},\r\n\tonMetaData: function(data){\r\n\t\tthis.duration = data.duration;\r\n\t\tthis.durNode.innerHTML = this.toSeconds(this.duration);\r\n\t\tif(this.media.title){\r\n\t\t\tthis.title = this.media.title;\r\n\t\t}else{\r\n\t\t\tvar a = this.media.mediaUrl.split(\"/\");\r\n\t\t\tvar b = a[a.length-1].split(\".\")[0];\r\n\t\t\tthis.title = b;\r\n\t\t}\r\n\t},\r\n\tonBuffer: function(isBuffering){\r\n\t\tthis.isBuffering = isBuffering;\r\n\t\tconsole.warn(\"status onBuffer\", this.isBuffering);\r\n\t\tif(this.isBuffering){\r\n\t\t\tthis.setStatus(\"buffering...\");\r\n\t\t}else{\r\n\t\t\tthis.setStatus(\"Playing\");\r\n\t\t}\r\n\t},\r\n\tonPosition:function(time){\r\n\t\t//console.log(\"onPosition:\", time)\r\n\t\t//\tthis.timeNode.innerHTML = this.toSeconds(time);\r\n\t},\r\n\tonStart: function(){\r\n\t\tthis.setStatus(\"Starting\");\r\n\t},\r\n\tonPlay: function(){\r\n\t\tthis.setStatus(\"Playing\");\r\n\t},\r\n\tonPaused: function(){\r\n\t\tthis.setStatus(\"Paused\");\r\n\t},\r\n\tonStop: function(){\r\n\t\tthis.setStatus(\"Stopped\");\r\n\t},\r\n\tonEnd: function(){\r\n\t\tthis.setStatus(\"Stopped\");\r\n\t},\r\n\tonError: function(evt){\r\n\t\tconsole.log(\"status error:\", evt)\r\n\t\tvar msg = evt.info.code;\r\n\t\tif(msg == \"NetStream.Play.StreamNotFound\"){\r\n\t\t\tmsg = \"Stream Not Found\"\r\n\t\t}\r\n\t\tthis.setStatus(\"ERROR: \"+ msg, true);\r\n\t},\r\n\tonLoad: function(){\r\n\t\tthis.setStatus(\"Loading...\");\r\n\t},\r\n\r\n\tsetStatus: function(str, isError){\r\n\t\tif(isError){\r\n\t\t\tdojo.addClass(this.titleNode, \"statusError\");\r\n\t\t}else{\r\n\t\t\tdojo.removeClass(this.titleNode, \"statusError\");\r\n\t\t\tif(this.isBuffering){\r\n\t\t\t\tstr = \"buffering...\";\r\n\t\t\t}\r\n\t\t}\r\n\t\t//console.log(this.titleNode, \"title:\",this.title, \"str:\",str)\r\n\t\tthis.titleNode.innerHTML = '<span class=\"statusTitle\">'+this.title+'</span> <span class=\"statusInfo\">'+str+'</span>';\r\n\t},\r\n\r\n\ttoSeconds: function(time){\r\n\t\tvar ts = time.toString()\r\n\r\n\t\tif(ts.indexOf(\".\")<0){\r\n\t\t\tts += \".00\"\r\n\t\t}else if(ts.length - ts.indexOf(\".\")==2){\r\n\t\t\tts+=\"0\"\r\n\t\t}else if(ts.length - ts.indexOf(\".\")>2){\r\n\t\t\tts = ts.substring(0, ts.indexOf(\".\")+3)\r\n\t\t}\r\n\t\treturn ts;\r\n\t}\r\n\r\n});\r\n\r\n});\r\n"]}