{"version":3,"sources":["av/widget/VolumeButton.js"],"names":["define","dojo","dijit","_Widget","_TemplatedMixin","Button","declare","templateString","cache","postCreate","this","handleWidth","marginBox","handle","w","width","volumeSlider","slotWidth","setSelectable","domNode","removeChild","setMedia","med","media","updateIcon","vol","undefined","volume","attr","onShowVolume","evt","showing","body","appendChild","onHideVolume","dim","_getVolumeDim","hand","_getHandleDim","x","style","y","h","clickOff","connect","doc","onDocClick","isDescendant","target","endDrag","onDrag","beg","end","clientX","p","startDrag","isDragging","cmove","cup","disconnect","handleOut","handleOver","addClass","removeClass","_domCoords","coords","_handleCoords","onResize","playerDimensions"],"mappings":"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","file":"../../../av/widget/VolumeButton.js","sourcesContent":["define(['dojo', 'dijit', 'dijit/_Widget', 'dijit/_TemplatedMixin', 'dijit/form/Button'],\t// TODO: why button??\r\nfunction(dojo, dijit, _Widget, _TemplatedMixin, Button){\r\n\r\nreturn dojo.declare(\"dojox.av.widget.VolumeButton\", [_Widget, _TemplatedMixin], {\r\n\t// summary:\r\n\t//\t\tA volume widget to use with dojox.av.widget.Player\r\n\t// description:\r\n\t//\t\tControls and displays the volume of the media. This widget\r\n\t//\t\topens a slider on click that is used to adjust the volume.\r\n\t//\t\tThe icon changes according to the volume level.\r\n\r\n\ttemplateString: dojo.cache(\"dojox.av.widget\",\"resources/VolumeButton.html\"),\r\n\r\n\tpostCreate: function(){\r\n\t\t// summary:\r\n\t\t//\tInitialize the widget.\r\n\t\t//\r\n\t\tthis.handleWidth = dojo.marginBox(this.handle).w;\r\n\t\tthis.width = dojo.marginBox(this.volumeSlider).w;\r\n\t\tthis.slotWidth = 100;\r\n\t\tdojo.setSelectable(this.handle, false);\r\n\t\tthis.volumeSlider = this.domNode.removeChild(this.volumeSlider);\r\n\t},\r\n\tsetMedia: function(/* Object */med){\r\n\t\t// summary:\r\n\t\t//\t\tA common method to set the media in all Player widgets.\r\n\t\t//\t\tMay do connections and initializations.\r\n\t\t//\r\n\t\tthis.media = med;\r\n\t\tthis.updateIcon();\r\n\t},\r\n\tupdateIcon: function(/*Float*/ vol){\r\n\t\t// summary:\r\n\t\t//\t\tChanges the icon on the button according to volume level.\r\n\t\t//\r\n\t\tvol = (vol===undefined) ? this.media.volume() : vol;\r\n\t\tif(vol===0){\r\n\t\t\tdojo.attr(this.domNode, \"class\", \"Volume mute\");\r\n\t\t}else if(vol<.334){\r\n\t\t\tdojo.attr(this.domNode, \"class\", \"Volume low\");\r\n\t\t}else if(vol<.667){\r\n\t\t\tdojo.attr(this.domNode, \"class\", \"Volume med\");\r\n\t\t}else{\r\n\t\t\tdojo.attr(this.domNode, \"class\", \"Volume high\");\r\n\t\t}\r\n\t},\r\n\r\n\tonShowVolume: function(/*DOMEvent*/evt){\r\n\t\t// summary:\r\n\t\t//\t\tShows the volume slider.\r\n\t\t//\r\n\t\tif(this.showing==undefined){\r\n\t\t\tdojo.body().appendChild(this.volumeSlider);\r\n\t\t\tthis.showing = false;\r\n\t\t}\r\n\t\tif(!this.showing){\r\n\r\n\t\t\tvar TOPMARG = 2;\r\n\t\t\tvar LEFTMARG = 7;\r\n\t\t\tvar vol = this.media.volume();\r\n\t\t\tvar dim = this._getVolumeDim();\r\n\t\t\tvar hand = this._getHandleDim();\r\n\t\t\tthis.x = dim.x - this.width;\r\n\r\n\r\n\r\n\t\t\tdojo.style(this.volumeSlider, \"display\", \"\");\r\n\t\t\tdojo.style(this.volumeSlider, \"top\", dim.y+\"px\");\r\n\t\t\tdojo.style(this.volumeSlider, \"left\", (this.x)+\"px\");\r\n\r\n\t\t\tvar x = (this.slotWidth * vol);\r\n\r\n\t\t\tdojo.style(this.handle, \"top\", (TOPMARG+(hand.w/2))+\"px\");\r\n\t\t\tdojo.style(this.handle, \"left\", (x+LEFTMARG+(hand.h/2))+\"px\");\r\n\r\n\t\t\tthis.showing = true;\r\n\t\t\t//this.startDrag();\r\n\r\n\t\t\tthis.clickOff = dojo.connect(dojo.doc, \"onmousedown\", this, \"onDocClick\");\r\n\t\t}else{\r\n\t\t\tthis.onHideVolume();\r\n\t\t}\r\n\t},\r\n\tonDocClick: function(/*DOMEvent*/evt){\r\n\t\t// summary:\r\n\t\t//\t\tFired on document.onmousedown. Checks if clicked inside\r\n\t\t//\t\tof this widget or not.\r\n\t\t//\r\n\t\tif(!dojo.isDescendant(evt.target, this.domNode) && !dojo.isDescendant(evt.target, this.volumeSlider)){\r\n\t\t\tthis.onHideVolume();\r\n\t\t}\r\n\t},\r\n\r\n\tonHideVolume: function(){\r\n\t\t// summary:\r\n\t\t//\t\tHides volume slider.\r\n\r\n\t\tthis.endDrag();\r\n\t\tdojo.style(this.volumeSlider, \"display\", \"none\");\r\n\t\tthis.showing = false;\r\n\t},\r\n\r\n\tonDrag: function(/*DOMEvent*/evt){\r\n\t\t// summary:\r\n\t\t//\t\tFired on mousemove. Updates volume and position of\r\n\t\t//\t\tslider handle.\r\n\t\tvar beg = this.handleWidth/2;\r\n\t\tvar end = beg + this.slotWidth\r\n\t\tvar x = evt.clientX - this.x;\r\n\t\tif(x<beg) x = beg;\r\n\t\tif(x>end) x=end;\r\n\t\tdojo.style(this.handle, \"left\", (x)+\"px\");\r\n\r\n\t\tvar p = (x-beg)/(end-beg);\r\n\t\tthis.media.volume(p);\r\n\t\tthis.updateIcon(p);\r\n\t},\r\n\tstartDrag: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFired on mousedown of the slider handle.\r\n\r\n\t\tthis.isDragging = true;\r\n\t\tthis.cmove = dojo.connect(dojo.doc, \"mousemove\", this, \"onDrag\");\r\n\t\tthis.cup = dojo.connect(dojo.doc, \"mouseup\", this, \"endDrag\");\r\n\t},\r\n\tendDrag: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFired on mouseup of the slider handle.\r\n\r\n\t\tthis.isDragging = false;\r\n\t\tif(this.cmove) dojo.disconnect(this.cmove);\r\n\t\tif(this.cup) dojo.disconnect(this.cup);\r\n\t\tthis.handleOut();\r\n\t},\r\n\r\n\thandleOver: function(){\r\n\t\t// summary:\r\n\t\t//\t\tHighlights the slider handle on mouseover, and\r\n\t\t//\t\tstays highlighted during drag.\r\n\r\n\t\tdojo.addClass(this.handle, \"over\");\r\n\t},\r\n\thandleOut: function(){\r\n\t\t// summary:\r\n\t\t//\t\tUnhighlights handle onmouseover, or on endDrag.\r\n\t\t//\r\n\t\tif(!this.isDragging){\r\n\t\t\tdojo.removeClass(this.handle, \"over\");\r\n\t\t}\r\n\t},\r\n\r\n\t_getVolumeDim: function(){\r\n\t\t// summary:\r\n\t\t//\t\tGets dimensions of slider background node.\r\n\t\t//\t\tOnly uses dojo.coords once, unless the page\r\n\t\t//\t\tor player is resized.\r\n\r\n\t\tif(this._domCoords){\r\n\t\t\treturn this._domCoords;\r\n\t\t}\r\n\t\tthis._domCoords = dojo.coords(this.domNode);\r\n\t\treturn this._domCoords;\r\n\t},\r\n\t_getHandleDim: function(){\r\n\t\t// summary:\r\n\t\t//\t\tGets dimensions of slider handle.\r\n\t\t//\t\tOnly uses dojo.marginBox once.\r\n\t\tif(this._handleCoords){\r\n\t\t\treturn this._handleCoords;\r\n\t\t}\r\n\t\tthis._handleCoords = dojo.marginBox(this.handle);\r\n\t\treturn this._handleCoords;\r\n\t},\r\n\r\n\tonResize: function(/*Object*/playerDimensions){\r\n\t\t// summary:\r\n\t\t//\t\tFired on player resize. Zeros dimensions\r\n\t\t//\t\tso that it can be calculated again.\r\n\r\n\t\tthis.onHideVolume();\r\n\t\tthis._domCoords = null;\r\n\t}\r\n});\r\n\r\n});\r\n"]}