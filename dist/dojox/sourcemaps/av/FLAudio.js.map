{"version":3,"sources":["av/FLAudio.js"],"names":["define","dojo","dijit","experimental","declare","id","initialVolume","initialPan","isDebug","statusInterval","_swfPath","moduleUrl","allowScriptAccess","allowNetworking","constructor","options","global","swfIsInHTML","mixin","this","Date","getTime","domNode","doc","createElement","style","position","width","height","top","left","body","appendChild","init","_subs","_normalizeVolume","args","path","minimumVersion","expressInstall","params","wmode","vars","autoPlay","_sub","_flashObject","dojox","embed","Flash","onError","err","console","warn","onLoad","hitch","mov","flashMedia","isPlaying","isStopped","load","timing","doLater","url","Error","_normalizeUrl","doPlay","pause","stop","doStop","setVolume","setPan","getVolume","getPan","getPosition","msg","onLoadStatus","events","onAllLoaded","onPlayStatus","onComplete","onID3","evt","destroy","forEach","s","unsubscribe","_cons","c","disconnect","push","connect","topic","method","subscribe","vol","_url","toLowerCase","indexOf","loc","window","location","href","split","pop","join"],"mappings":"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","file":"../../av/FLAudio.js","sourcesContent":["define(['dojo', 'dojox/embed/Flash', 'dojox/timing/doLater'],function(dojo, dijit){\r\n\r\ndojo.experimental(\"dojox.av.FLVideo\");\r\n\r\nreturn dojo.declare(\"dojox.av.FLAudio\", null, {\r\n\r\n\t// summary:\r\n\t//\t\tPlay MP3 files through the Flash SWF built in the\r\n\t//\t\tDEFT project.\r\n\t// description:\r\n\t//\t\tThis class is brand new, so there is a lot of\r\n\t//\t\tfunctionality not yet available. The initial\r\n\t//\t\tpurpose is for playing \"event\" sounds like button\r\n\t//\t\tclicks, and for loading and controlling multiple\r\n\t//\t\tsounds at once. As of yet, streaming is not supported\r\n\t//\t\tand polling the sounds for events during playback\r\n\t//\t\tmay still be missing information. Markup is not\r\n\t//\t\tsupported, as it may not be needed.\r\n\t//\r\n\t//\t\tTODO:\r\n\t//\t\tStreaming, playback events, crossdomain, CDN support,\r\n\t//\t\t(alternate SWF location), global volume, ID3 tag,\r\n\t//\t\tfactor out doLater, onLoadStatus needs work,\r\n\t//\t\tplay(position) / seek()\r\n\t//\r\n\t// example:\r\n\t//\t\t|\tnew dojox.av.FLAudio({\r\n\t//\t\t|\t\tinitialVolume:.7,\r\n\t//\t\t|\t\tinitialPan:0,\r\n\t//\t\t|\t\tautoPlay:false\r\n\t//\t\t|\t});\r\n\r\n\t// id: String?\r\n\t//\t\tThe id of this widget and the id of the SWF movie.\r\n\tid:\"\",\r\n\r\n\t// initialVolume: Number\r\n\t//\t\tFrom 0-1\r\n\t//\t\tSets volume for all files unless changed with doPlay\r\n\t//\t\tor setVolume\r\n\tinitialVolume: 0.7,\r\n\r\n\t// initialPan: Number\r\n\t//\t\tFrom -1 to 1 (-1 is left, 1 is right, 0 is middle)\r\n\t//\t\tSets pan for all files unless changed with play\r\n\t//\t\tor setPan\r\n\tinitialPan: 0,\r\n\r\n\t// autoPlay: Boolean\r\n\t//\t\tIf true, all files will play upon load. If false,\r\n\t//\t\tthey load and wait for doPlay() command.\r\n\r\n\t// isDebug: Boolean?\r\n\t//\t\tSetting to true tells the SWF to output log messages to Firebug.\r\n\tisDebug: false,\r\n\r\n\t// statusInterval: Number\r\n\t//\t\tHow often in milliseconds that the status of the\r\n\t//\t\tplayer is checked - both load and play\r\n\tstatusInterval:200,\r\n\r\n\t// _swfPath: Uri\r\n\t//\t\tThe path to the video player SWF resource\r\n\t_swfPath: dojo.moduleUrl(\"dojox.av\", \"resources/audio.swf\"),\r\n\r\n\t// allowScriptAccess: String\r\n\t//\t\tWhether the SWF can access the container JS\r\n\tallowScriptAccess:\"always\",\r\n\r\n\t// allowNetworking: String\r\n\t//\t\tWhether SWF is restricted to a domain\r\n\tallowNetworking: \"all\",\r\n\r\n\tconstructor: function(/*Object*/options){\r\n\r\n\t\t// Provide this function for the SWF to ensure that the it is playing\r\n\t\t// in HTML.\r\n\t\tdojo.global.swfIsInHTML = function(){ return true; }\r\n\r\n\t\tdojo.mixin(this, options || {});\r\n\t\tif(!this.id){ this.id = \"flaudio_\"+new Date().getTime(); }\r\n\t\tthis.domNode = dojo.doc.createElement(\"div\");\r\n\t\tdojo.style(this.domNode, {\r\n\t\t\tposition:\"relative\",\r\n\t\t\twidth:\"1px\",\r\n\t\t\theight:\"1px\",\r\n\t\t\ttop:\"1px\",\r\n\t\t\tleft:\"1px\"\r\n\t\t});\r\n\t\tdojo.body().appendChild(this.domNode);\r\n\t\tthis.init();\r\n\t},\r\n\r\n\tinit: function(){\r\n\t\t// summary:\r\n\t\t//\t\tInitialize the media.\r\n\r\n\t\tthis._subs = [];\r\n\t\tthis.initialVolume = this._normalizeVolume(this.initialVolume);\r\n\r\n\t\tvar args = {\r\n\t\t\tpath:this._swfPath,\r\n\t\t\twidth:\"1px\",\r\n\t\t\theight:\"1px\",\r\n\t\t\tminimumVersion:9, // this may need to be 10, not sure\r\n\t\t\texpressInstall:true,\r\n\t\t\tparams:{\r\n\t\t\t\twmode:\"transparent\",\r\n\t\t\t\tallowScriptAccess:this.allowScriptAccess,\r\n\t\t\t\tallowNetworking:this.allowNetworking\r\n\t\t\t},\r\n\t\t\t// only pass in simple variables - no deep objects\r\n\t\t\tvars:{\r\n\t\t\t\tid:this.id,\r\n\t\t\t\tautoPlay:this.autoPlay,\r\n\t\t\t\tinitialVolume:this.initialVolume,\r\n\t\t\t\tinitialPan:this.initialPan,\r\n\t\t\t\tstatusInterval:this.statusInterval,\r\n\t\t\t\tisDebug:this.isDebug\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis._sub(\"mediaError\",    \"onError\");\r\n\t\tthis._sub(\"filesProgress\", \"onLoadStatus\");\r\n\t\tthis._sub(\"filesAllLoaded\", \"onAllLoaded\");\r\n\t\tthis._sub(\"mediaPosition\", \"onPlayStatus\");\r\n\t\tthis._sub(\"mediaEnd\", \"onComplete\");\r\n\t\tthis._sub(\"mediaMeta\",     \"onID3\");\r\n\r\n\t\tthis._flashObject = new dojox.embed.Flash(args, this.domNode);\r\n\t\tthis._flashObject.onError = function(err){\r\n\t\t\tconsole.warn(\"Flash Error:\", err);\r\n\t\t};\r\n\t\tthis._flashObject.onLoad = dojo.hitch(this, function(mov){\r\n\t\t\tthis.flashMedia = mov;\r\n\t\t\tthis.isPlaying = this.autoPlay;\r\n\t\t\tthis.isStopped = !this.autoPlay;\r\n\t\t\tthis.onLoad(this.flashMedia);\r\n\t\t});\r\n\t},\r\n\r\n\t//  ==============  //\r\n\t//  Loading Files   //\r\n\t//  ==============  //\r\n\r\n\tload: function(/*Object*/options){\r\n\t\t// summary:\r\n\t\t//\t\tAdds a media object to the playlist\r\n\t\t//\t\t***This can be called repeatedly to add multiple items.\r\n\t\t// options: Object\r\n\t\t//\t\t- url: String:\r\n\t\t//\t\t\t(required) path to MP3 media\r\n\t\t//\t\t\turl must be absolute or relative to SWF,\r\n\t\t//\t\t\tnot dojo or the html. An effort will be made\r\n\t\t//\t\t\tto fix incorrect paths.\r\n\t\t//\t\t- id: String:\r\n\t\t//\t\t\t(optional) an identifier to later determine\r\n\t\t//\t\t\twhich media to control.\r\n\t\t// returns:\r\n\t\t//\t\tThe normalized url, which can be used to identify the\r\n\t\t//\t\taudio.\r\n\r\n\t\tif(dojox.timing.doLater(this.flashMedia, this)){ return false; }\r\n\t\tif(!options.url){\r\n\t\t\tthrow new Error(\"An url is required for loading media\");\r\n\t\t}else{\r\n\t\t\toptions.url = this._normalizeUrl(options.url);\r\n\t\t}\r\n\t\tthis.flashMedia.load(options);\r\n\r\n\t\treturn options.url; // String\r\n\t},\r\n\r\n\t//  =============================  //\r\n\t//  Methods to control the sound   //\r\n\t//  =============================  //\r\n\r\n\tdoPlay: function(/*Object*/options){\r\n\t\t// summary:\r\n\t\t//\t\tTell media to play, based on\r\n\t\t//\t\tthe options passed.\r\n\t\t// options: Object\r\n\t\t//\t\t- volume: Number:\r\n\t\t//\t\t\tSets the volume\r\n\t\t//\t\t- pan: Number:\r\n\t\t//\t\t\tSets left/right pan\r\n\t\t//\t\t- index:Number OR id:String OR url:String:\r\n\t\t//\t\t\tChoose one of the above to identify\r\n\t\t//\t\t\tthe media you wish to control. id is\r\n\t\t//\t\t\tset by you. index is the order in which\r\n\t\t//\t\t\tmedia was added (zero based)\r\n\t\t//\t\t\tNOTE: lack of an identifier will default\r\n\t\t//\t\t\tto first (or only) item.\r\n\r\n\t\t//\tNOTE: Can't name this method \"play()\" as it causes\r\n\t\t//\t\t\tan IE error.\r\n\t\tthis.flashMedia.doPlay(options);\r\n\t},\r\n\r\n\tpause: function(/*Object*/options){\r\n\t\t// summary:\r\n\t\t//\t\tTell media to pause, based on identifier in\r\n\t\t//\t\tthe options passed.\r\n\t\t// options: Object\r\n\t\t//\t\tindex:Number OR id:String OR url:String.\r\n\t\t//\t\tSee doPlay().\r\n\r\n\t\tthis.flashMedia.pause(options);\r\n\t},\r\n\r\n\tstop: function(/*Object*/options){\r\n\t\t// summary:\r\n\t\t//\t\tTell media to stop, based on identifier in\r\n\t\t//\t\tthe options passed.\r\n\t\t// options:\r\n\t\t//\t\tindex:Number OR id:String OR url:String.\r\n\t\t//\t\tSee doPlay().\r\n\r\n\t\tthis.flashMedia.doStop(options);\r\n\t},\r\n\r\n\tsetVolume: function(/*Object*/options){\r\n\t\t// summary:\r\n\t\t//\t\tSet media volume, based on identifier in\r\n\t\t//\t\tthe options passed.\r\n\t\t// options:\r\n\t\t//\t\tvolume: Number\r\n\t\t//\t\t0 to 1\r\n\t\t//\t\tindex:Number OR id:String OR url:String.\r\n\t\t//\t\tSee doPlay().\r\n\r\n\t\tthis.flashMedia.setVolume(options);\r\n\t},\r\n\r\n\tsetPan: function(/*Object*/options){\r\n\t\t// summary:\r\n\t\t//\t\tSet media pan, based on identifier in\r\n\t\t//\t\tthe options passed.\r\n\t\t// options:\r\n\t\t//\t\t- pan:Number (from -1 to 1)\r\n\t\t//\t\t- index:Number OR id:String OR url:String (see doPlay())\r\n\r\n\t\tthis.flashMedia.setPan(options);\r\n\t},\r\n\r\n\tgetVolume: function(/*Object*/options){\r\n\t\t// summary:\r\n\t\t//\t\tGet media volume, based on identifier in\r\n\t\t//\t\tthe options passed.\r\n\t\t// options:\r\n\t\t//\t\tindex:Number OR id:String OR url:String.\r\n\t\t//\t\tSee doPlay().\r\n\r\n\t\treturn this.flashMedia.getVolume(options);\r\n\t},\r\n\r\n\tgetPan: function(/*Object*/options){\r\n\t\t// summary:\r\n\t\t//\t\tSet media pan, based on identifier in\r\n\t\t//\t\tthe options passed.\r\n\t\t// options:\r\n\t\t//\t\tindex:Number OR id:String OR url:String.\r\n\t\t//\t\tSee doPlay().\r\n\r\n\t\treturn this.flashMedia.getPan(options);\r\n\t},\r\n\r\n\tgetPosition: function(/*Object*/options){\r\n\t\t// summary:\r\n\t\t//\t\tGet the current time.\r\n\t\t// options:\r\n\t\t//\t\tindex:Number OR id:String OR url:String.\r\n\t\t//\t\tSee doPlay().\r\n\r\n\t\treturn this.flashMedia.getPosition(options);\r\n\t},\r\n\r\n\t//  =============  //\r\n\t//  Sound Events   //\r\n\t//  =============  //\r\n\tonError: function(msg){\r\n\t\t// summary:\r\n\t\t//\t\tstub fired when an error occurs\r\n\t\tconsole.warn(\"SWF ERROR:\", msg)\r\n\t},\r\n\r\n\tonLoadStatus: function(/*Array*/events){\r\n\t\t// summary:\r\n\t},\r\n\r\n\tonAllLoaded: function(){\r\n\t\t// summary:\r\n\t\t//\t\tstub fired\r\n\t},\r\n\r\n\tonPlayStatus: function(/*Array*/events){\r\n\t\t// summary:\r\n\t},\r\n\r\n\tonComplete: function(/*Array*/events){\r\n\t\t// summary:\r\n\t\t//\t\tFired at the end of a media file.\r\n\t},\r\n\r\n\tonLoad: function(){\r\n\t\t// summary:\r\n\t\t//\t\tstub fired when SWF is ready\r\n\t},\r\n\tonID3: function(evt){\r\n\t\t// summary:\r\n\t\t//\t\tFired when the ID3 data is received.\r\n\t},\r\n\r\n\r\n\r\n\tdestroy: function(){\r\n\t\t// summary:\r\n\t\t//\t\tdestroys flash\r\n\t\tif(!this.flashMedia){\r\n\t\t\tthis._cons.push(dojo.connect(this, \"onLoad\", this, \"destroy\"));\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tdojo.forEach(this._subs, function(s){\r\n\t\t\tdojo.unsubscribe(s);\r\n\t\t});\r\n\t\tdojo.forEach(this._cons, function(c){\r\n\t\t\tdojo.disconnect(c);\r\n\t\t});\r\n\t\tthis._flashObject.destroy();\r\n\t\t//dojo._destroyElement(this.flashDiv);\r\n\t},\r\n\r\n\r\n\r\n\t_sub: function(topic, method){\r\n\t\t// summary:\r\n\t\t//\t\thelper for subscribing to topics\r\n\t\tdojo.subscribe(this.id+\"/\"+topic, this, method);\r\n\t},\r\n\r\n\t_normalizeVolume: function(vol){\r\n\t\t// summary:\r\n\t\t//\t\tEnsures volume is less than one\r\n\t\t//\r\n\t\tif(vol>1){\r\n\t\t\twhile(vol>1){\r\n\t\t\t\tvol*=.1\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn vol;\r\n\t},\r\n\r\n\t_normalizeUrl: function(_url){\r\n\t\t// summary:\r\n\t\t//\t\tChecks that path is relative to HTML file or\r\n\t\t//\t\tconverts it to an absolute path.\r\n\r\n\t\tif(_url && _url.toLowerCase().indexOf(\"http\")<0){\r\n\t\t\t//\r\n\t\t\t// Appears to be a relative path. Attempt to  convert it to absolute,\r\n\t\t\t// so it will better target the SWF.\r\n\t\t\tvar loc = window.location.href.split(\"/\");\r\n\t\t\tloc.pop();\r\n\t\t\tloc = loc.join(\"/\")+\"/\";\r\n\r\n\t\t\t_url = loc+_url;\r\n\t\t}\r\n\t\treturn _url;\r\n\t}\r\n\r\n});\r\n\r\n});\r\n"]}