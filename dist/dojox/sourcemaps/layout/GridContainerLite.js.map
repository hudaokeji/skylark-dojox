{"version":3,"sources":["layout/GridContainerLite.js"],"names":["define","dojo","template","declare","query","has","domClass","domStyle","geom","domConstruct","domAttr","array","lang","events","keys","topic","registry","focus","baseFocus","_WidgetBase","_TemplatedMixin","_LayoutWidget","NodeList","gcl","autoRefresh","templateString","dragHandleClass","nbZones","doLayout","isAutoOrganized","acceptTypes","colWidths","constructor","props","node","this","_disabled","postCreate","inherited","arguments","_grid","_createCells","subscribe","_dragManager","dojox","mdnd","areaManager","_border","h","getBorderExtents","gridContainerTable","w","set","domNode","startup","_started","_organizeChildren","_organizeChildrenManually","forEach","getChildren","child","_isShown","enableDnd","resizeChildAfterDrop","targetArea","indexChild","getEnclosingWidget","widget","byNode","resize","isFunction","parentNode","cellIndex","domNodeHeight","_contentBox","getContentBox","gridContainerDiv","resizeChildAfterDragStart","sourceArea","_draggedNode","setMarginBox","children","dropZone","map","item","push","open","style","display","visibility","contains","layout","contentBox","setContentSize","onShow","onHide","disableDnd","accept","join","i","widths","_computeColWidth","create","class","id","width","gridNode","_getZonesAttr","containerNode","m","registerByNode","_dropMode","updateAreas","_areaList","unregister","GridContainerLite","superclass","call","numZones","numPerZone","Math","floor","length","mod","z","r","_insertChild","e","console","error","column","p","zone","childNodes","place","dragRestriction","addDragItem","removeChild","removeDragItem","addService","kernel","deprecated","addChild","undefined","_setColWidthsAttr","value","isString","split","isArray","_updateColumnsWidth","manager","colWidth","origWidths","widthSum","divisor","_selectFocus","event","found","j","area","key","keyCode","k","focusNode","getFocus","DOWN_ARROW","RIGHT_ARROW","stop","UP_ARROW","LEFT_ARROW","pos","focusTemp","num","shiftKey","parent","publish","nodeType","_dndType","getAttribute","dndType","parentSource","t","childToSelect","destroy","ChildWidgetProperties","extend"],"mappings":"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","file":"../../layout/GridContainerLite.js","sourcesContent":["define([\r\n\t\"dojo/_base/kernel\",\r\n\t\"dojo/text!./resources/GridContainer.html\",\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/query\",\r\n\t\"dojo/_base/sniff\",\r\n\t\"dojo/dom-class\",\r\n\t\"dojo/dom-style\",\r\n\t\"dojo/dom-geometry\",\r\n\t\"dojo/dom-construct\",\r\n\t\"dojo/dom-attr\", // domAttr.get\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/event\",\r\n\t\"dojo/keys\", // keys\r\n\t\"dojo/topic\", // topic.publish()\r\n\t\"dijit/registry\",\r\n\t\"dijit/focus\",\r\n\t\"dijit/_base/focus\", // dijit.getFocus()\r\n\t\"dijit/_WidgetBase\",\r\n\t\"dijit/_TemplatedMixin\",\r\n\t\"dijit/layout/_LayoutWidget\",\r\n\t\"dojo/_base/NodeList\",\r\n\t\"dojox/mdnd/AreaManager\", \"dojox/mdnd/DropIndicator\",\r\n\t\"dojox/mdnd/dropMode/OverDropMode\",\"dojox/mdnd/AutoScroll\"\r\n],function(dojo, template, declare, query, has, domClass, domStyle, geom, domConstruct, domAttr, array, lang, events, keys, topic, registry, focus, baseFocus, _WidgetBase, _TemplatedMixin, _LayoutWidget, NodeList){\r\n\r\n\tvar gcl = declare(\r\n\t\t\"dojox.layout.GridContainerLite\",\r\n\t\t[_LayoutWidget, _TemplatedMixin],\r\n\t{\r\n\t\t// summary:\r\n\t\t//\t\tThe GridContainerLite is a container of child elements that are placed in a kind of grid.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tGridContainerLite displays the child elements by column\r\n\t\t//\t\t(ie: the children widths are fixed by the column width of the grid but\r\n\t\t//\t\tthe children heights are free).\r\n\t\t//\t\tEach child is movable by drag and drop inside the GridContainer.\r\n\t\t//\t\tThe position of other children is automatically calculated when a child is moved.\r\n\t\t//\r\n\t\t// example:\r\n\t\t// \t|\t<div dojoType=\"dojox.layout.GridContainerLite\" nbZones=\"3\" isAutoOrganized=\"true\">\r\n\t\t// \t|\t\t<div dojoType=\"dijit.layout.ContentPane\">Content Pane 1 : Drag Me !</div>\r\n\t\t// \t|\t\t<div dojoType=\"dijit.layout.ContentPane\">Content Pane 2 : Drag Me !</div>\r\n\t\t// \t|\t\t<div dojoType=\"dijit.layout.ContentPane\">Content Pane 3 : Drag Me !</div>\r\n\t\t// \t|\t</div>\r\n\t\t//\r\n\t\t// example:\r\n\t\t// \t|\tdojo.ready(function(){\r\n\t\t// \t|\t\tvar cpane1 = new dijit.layout.ContentPane({\r\n\t\t//\t|\t\t\ttitle:\"cpane1\", content: \"Content Pane 1 : Drag Me !\"\r\n\t\t//\t|\t\t}),\r\n\t\t// \t|\t\tcpane2 = new dijit.layout.ContentPane({\r\n\t\t//\t|\t\t\ttitle:\"cpane2\",\r\n\t\t//\t|\t\t\tcontent: \"Content Pane 2 : Drag Me !\"\r\n\t\t//\t|\t\t}),\r\n\t\t// \t|\t\tcpane3 = new dijit.layout.ContentPane({\r\n\t\t//\t|\t\t\ttitle:\"cpane3\",\r\n\t\t//\t|\t\t\tcontent: \"Content Pane 3 : Drag Me !\"\r\n\t\t//\t|\t\t});\r\n\t\t// \t|\r\n\t\t// \t|\t\tvar widget = new dojox.layout.GridContainerLite({\r\n\t\t// \t|\t\t\tnbZones: 3,\r\n\t\t// \t|\t\t\tisAutoOrganized: true\r\n\t\t// \t|\t\t}, dojo.byId(\"idNode\"));\r\n\t\t// \t|\t\twidget.addChild(cpane1, 0, 0);\r\n\t\t// \t|\t\twidget.addChild(cpane2, 1, 0);\r\n\t\t// \t|\t\twidget.addChild(cpane3, 2, 1);\r\n\t\t// \t|\t\twidget.startup();\r\n\t\t// \t|\t});\r\n\r\n\t\t// autoRefresh: Boolean\r\n\t\t//\t\tEnable the refresh of registered areas on drag start.\r\n\t\tautoRefresh: true,\r\n\r\n\r\n\t\t// templateString: String\r\n\t\t//\t\ttemplate of gridContainer.\r\n\t\ttemplateString: template,\r\n\r\n\t\t// dragHandleClass: Array\r\n\t\t//\t\tCSS class enabling a drag handle on a child.\r\n\t\tdragHandleClass: \"dojoxDragHandle\",\r\n\r\n\t\t// nbZones: Integer\r\n\t\t//\t\tThe number of dropped zones, by default 1.\r\n\t\tnbZones: 1,\r\n\r\n\t\t// doLayout: Boolean\r\n\t\t//\t\tIf true, change the size of my currently displayed child to match my size.\r\n\t\tdoLayout: true,\r\n\r\n\t\t// isAutoOrganized: Boolean\r\n\t\t//\t\tIf true, widgets are organized automatically,\r\n\t\t//\t\telse the attribute colum of child will define the right column.\r\n\t\tisAutoOrganized: true,\r\n\r\n\t\t// acceptTypes: Array\r\n\t\t//\t\tThe GridContainer will only accept the children that fit to the types.\r\n\t\tacceptTypes: [],\r\n\r\n\t\t// colWidths: String\r\n\t\t//\t\tA comma separated list of column widths. If the column widths do not add up\r\n\t\t//\t\tto 100, the remaining columns split the rest of the width evenly\r\n\t\t//\t\tbetween them.\r\n\t\tcolWidths: \"\",\r\n\r\n\t\tconstructor: function(/*Object*/props, /*DOMNode*/node){\r\n\t\t\tthis.acceptTypes = (props || {}).acceptTypes || [\"text\"];\r\n\t\t\tthis._disabled = true;\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\t//console.log(\"dojox.layout.GridContainerLite ::: postCreate\");\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._grid = [];\r\n\r\n\t\t\tthis._createCells();\r\n\r\n\t\t\t// need to resize dragged child when it's dropped.\r\n\t\t\tthis.subscribe(\"/dojox/mdnd/drop\", \"resizeChildAfterDrop\");\r\n\t\t\tthis.subscribe(\"/dojox/mdnd/drag/start\", \"resizeChildAfterDragStart\");\r\n\r\n\t\t\tthis._dragManager = dojox.mdnd.areaManager();\r\n\t\t\t// console.info(\"autorefresh ::: \", this.autoRefresh);\r\n\t\t\tthis._dragManager.autoRefresh = this.autoRefresh;\r\n\r\n\t\t\t//\tAdd specific dragHandleClass to the manager.\r\n\t\t\tthis._dragManager.dragHandleClass = this.dragHandleClass;\r\n\r\n\t\t\tif(this.doLayout){\r\n\t\t\t\tthis._border = {\r\n\t\t\t\t\th: has(\"ie\") ? geom.getBorderExtents(this.gridContainerTable).h : 0,\r\n\t\t\t\t\tw: (has(\"ie\") == 6) ? 1 : 0\r\n\t\t\t\t};\r\n\t\t\t}else{\r\n\t\t\t\tdomStyle.set(this.domNode, \"overflowY\", \"hidden\");\r\n\t\t\t\tdomStyle.set(this.gridContainerTable, \"height\", \"auto\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\t//console.log(\"dojox.layout.GridContainerLite ::: startup\");\r\n\t\t\tif(this._started){ return; }\r\n\r\n\t\t\tif(this.isAutoOrganized){\r\n\t\t\t\tthis._organizeChildren();\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tthis._organizeChildrenManually();\r\n\t\t\t}\r\n\r\n\t\t\t// Need to call getChildren because getChildren return null\r\n\t\t\t// The children are not direct children because of _organizeChildren method\r\n\t\t\tarray.forEach(this.getChildren(), function(child){\r\n\t\t\t  child.startup();\r\n\t\t\t});\r\n\r\n\t\t\t// Need to enable the Drag And Drop only if the GridContainer is visible.\r\n\t\t\tif(this._isShown()){\r\n\t\t\t\tthis.enableDnd();\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tresizeChildAfterDrop: function(/*Node*/node, /*Object*/targetArea, /*Integer*/indexChild){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tResize the GridContainerLite inner table and the dropped widget.\r\n\t\t\t// description:\r\n\t\t\t//\t\tThese components are resized only if the targetArea.node is a\r\n\t\t\t//\t\tchild of this instance of gridContainerLite.\r\n\t\t\t//\t\tTo be resized, the dropped node must have also a method resize.\r\n\t\t\t// node:\r\n\t\t\t//\t\tdomNode of dropped widget.\r\n\t\t\t// targetArea:\r\n\t\t\t//\t\tAreaManager Object containing information of targetArea\r\n\t\t\t// indexChild:\r\n\t\t\t//\t\tIndex where the dropped widget has been placed\r\n\t\t\t// returns:\r\n\t\t\t//\t\tTrue if resized.\r\n\r\n\t\t\t//console.log(\"dojox.layout.GridContainerLite ::: resizeChildAfterDrop\");\r\n\t\t\tif(this._disabled){\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(registry.getEnclosingWidget(targetArea.node) == this){\r\n\t\t\t\tvar widget = registry.byNode(node);\r\n\t\t\t\tif(widget.resize && lang.isFunction(widget.resize)){\r\n\t\t\t\t\twidget.resize();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Update the column of the widget\r\n\t\t\t\twidget.set(\"column\", node.parentNode.cellIndex);\r\n\r\n\t\t\t\tif(this.doLayout){\r\n\t\t\t\t\tvar domNodeHeight = this._contentBox.h,\r\n\t\t\t\t\t\tdivHeight = geom.getContentBox(this.gridContainerDiv).h;\r\n\t\t\t\t\tif(divHeight >= domNodeHeight){\r\n\t\t\t\t\t\tdomStyle.set(this.gridContainerTable, \"height\",\r\n\t\t\t\t\t\t\t\t(domNodeHeight - this._border.h) + \"px\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\tresizeChildAfterDragStart: function(/*Node*/node, /*Object*/sourceArea, /*Integer*/indexChild){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tResize the GridContainerLite inner table only if the drag source\r\n\t\t\t//\t\tis a child of this gridContainer.\r\n\t\t\t// node:\r\n\t\t\t//\t\tdomNode of dragged widget.\r\n\t\t\t// sourceArea:\r\n\t\t\t//\t\tAreaManager Object containing information of sourceArea\r\n\t\t\t// indexChild:\r\n\t\t\t//\t\tIndex where the dragged widget has been placed\r\n\r\n\t\t\t//console.log(\"dojox.layout.GridContainerLite ::: resizeChildAfterDragStart\");\r\n\t\t\tif(this._disabled){\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(registry.getEnclosingWidget(sourceArea.node) == this){\r\n\t\t\t\tthis._draggedNode = node;\r\n\t\t\t\tif(this.doLayout){\r\n\t\t\t\t\tgeom.setMarginBox(this.gridContainerTable, {\r\n\t\t\t\t\t\th: geom.getContentBox(this.gridContainerDiv).h - this._border.h\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\tgetChildren: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tA specific method which returns children after they were placed in zones.\r\n\t\t\t// returns:\r\n\t\t\t//\t\tA NodeList containing all children (widgets).\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tvar children = new NodeList();\r\n\t\t\tarray.forEach(this._grid, function(dropZone){\r\n\t\t\t\tquery(\"> [widgetId]\", dropZone.node).map(registry.byNode).forEach(function(item){\r\n\t\t\t\t  children.push(item);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn children;\t// Array\r\n\t\t},\r\n\r\n\t\t_isShown: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCheck if the domNode is visible or not.\r\n\t\t\t// returns:\r\n\t\t\t//\t\ttrue if the content is currently shown\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\t//console.log(\"dojox.layout.GridContainerLite ::: _isShown\");\r\n\t\t\tif(\"open\" in this){\t\t// for TitlePane, etc.\r\n\t\t\t\treturn this.open;\t\t// Boolean\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tvar node = this.domNode;\r\n\t\t\t\treturn (node.style.display != 'none') && (node.style.visibility != 'hidden') && !domClass.contains(node, \"dijitHidden\"); // Boolean\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tlayout: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tResize of each child\r\n\r\n\t\t\t//console.log(\"dojox.layout.GridContainerLite ::: layout\");\r\n\t\t\tif(this.doLayout){\r\n\t\t\t\tvar contentBox = this._contentBox;\r\n\t\t\t\tgeom.setMarginBox(this.gridContainerTable, {\r\n\t\t\t\t\th: contentBox.h - this._border.h\r\n\t\t\t\t});\r\n\t\t\t\tgeom.setContentSize(this.domNode, {\r\n\t\t\t\t\tw: contentBox.w - this._border.w\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tarray.forEach(this.getChildren(), function(widget){\r\n\t\t\t\tif(widget.resize && lang.isFunction(widget.resize)){\r\n\t\t\t\t\twidget.resize();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tonShow: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEnabled the Drag And Drop if it's necessary.\r\n\r\n\t\t\t//console.log(\"dojox.layout.GridContainerLite ::: onShow\");\r\n\t\t\tif(this._disabled){\r\n\t\t\t\tthis.enableDnd();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonHide: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDisabled the Drag And Drop if it's necessary.\r\n\r\n\t\t\t//console.log(\"dojox.layout.GridContainerLite ::: onHide\");\r\n\t\t\tif(!this._disabled){\r\n\t\t\t\tthis.disableDnd();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_createCells: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate the columns of the GridContainer.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\t//console.log(\"dojox.layout.GridContainerLite ::: _createCells\");\r\n\t\t\tif(this.nbZones === 0){ this.nbZones = 1; }\r\n\t\t\tvar accept = this.acceptTypes.join(\",\"),\r\n\t\t\t\ti = 0;\r\n\r\n\t\t\tvar widths = this._computeColWidth();\r\n\r\n\t\t\twhile(i < this.nbZones){\r\n\t\t\t\t// Add the parameter accept in each zone used by AreaManager\r\n\t\t\t\t// (see method dojox.mdnd.AreaManager:registerByNode)\r\n\t\t\t\tthis._grid.push({\r\n\t\t\t\t\tnode: domConstruct.create(\"td\", {\r\n\t\t\t\t\t\t'class': \"gridContainerZone\",\r\n\t\t\t\t\t\taccept: accept,\r\n\t\t\t\t\t\tid: this.id + \"_dz\" + i,\r\n\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t'width': widths[i] + \"%\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this.gridNode)\r\n\t\t\t\t});\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_getZonesAttr: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturn array of zone (domNode)\r\n\t\t\treturn query(\".gridContainerZone\",  this.containerNode);\r\n\t\t},\r\n\r\n\t\tenableDnd: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEnable the Drag And Drop for children of GridContainer.\r\n\r\n\t\t\t//console.log(\"dojox.layout.GridContainerLite ::: enableDnd\");\r\n\t\t\tvar m = this._dragManager;\r\n\t\t\tarray.forEach(this._grid, function(dropZone){\r\n\t\t\t\tm.registerByNode(dropZone.node);\r\n\t\t\t});\r\n\t\t\tm._dropMode.updateAreas(m._areaList);\r\n\t\t\tthis._disabled = false;\r\n\t\t},\r\n\r\n\t\tdisableDnd: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDisable the Drag And Drop for children of GridContainer.\r\n\r\n\t\t\t//console.log(\"dojox.layout.GridContainerLite ::: disableDnd\");\r\n\t\t\tvar m = this._dragManager;\r\n\t\t\tarray.forEach(this._grid, function(dropZone){\r\n\t\t\t\tm.unregister(dropZone.node);\r\n\t\t\t});\r\n\t\t\tm._dropMode.updateAreas(m._areaList);\r\n\t\t\tthis._disabled = true;\r\n\t\t},\r\n\r\n\t\t_organizeChildren: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tList all zones and insert child into columns.\r\n\r\n\t\t\t//console.log(\"dojox.layout.GridContainerLite ::: _organizeChildren\");\r\n\t\t\tvar children = dojox.layout.GridContainerLite.superclass.getChildren.call(this);\r\n\t\t\tvar numZones = this.nbZones,\r\n\t\t\t\tnumPerZone = Math.floor(children.length / numZones),\r\n\t\t\t\tmod = children.length % numZones,\r\n\t\t\t\ti = 0;\r\n\t//\t\tconsole.log('numPerZone', numPerZone, ':: mod', mod);\r\n\t\t\tfor(var z = 0; z < numZones; z++){\r\n\t\t\t\tfor(var r = 0; r < numPerZone; r++){\r\n\t\t\t\t\tthis._insertChild(children[i], z);\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t\tif(mod > 0){\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\tthis._insertChild(children[i], z);\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch(e){\r\n\t\t\t\t\t\tconsole.error(\"Unable to insert child in GridContainer\", e);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmod--;\r\n\t\t\t\t}\r\n\t\t\t\telse if(numPerZone === 0){\r\n\t\t\t\t\tbreak;\t// Optimization\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_organizeChildrenManually: function (){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOrganize children by column property of widget.\r\n\r\n\t\t\t//console.log(\"dojox.layout.GridContainerLite ::: _organizeChildrenManually\");\r\n\t\t\tvar children = dojox.layout.GridContainerLite.superclass.getChildren.call(this),\r\n\t\t\t\tlength = children.length,\r\n\t\t\t\tchild;\r\n\t\t\tfor(var i = 0; i < length; i++){\r\n\t\t\t\tchild = children[i];\r\n\t\t\t\ttry{\r\n\t\t\t\t\tthis._insertChild(child, child.column - 1);\r\n\t\t\t\t}\r\n\t\t\t\tcatch(e){\r\n\t\t\t\t\tconsole.error(\"Unable to insert child in GridContainer\", e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_insertChild: function(/*Widget*/child, /*Integer*/column, /*Integer?*/p){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInsert a child in a specific column of the GridContainer widget.\r\n\t\t\t// column:\r\n\t\t\t//\t\tColumn number\r\n\t\t\t// p:\r\n\t\t\t//\t\tPlace in the zone (0 - first)\r\n\t\t\t// returns:\r\n\t\t\t//\t\tThe widget inserted\r\n\r\n\t\t\t//console.log(\"dojox.layout.GridContainerLite ::: _insertChild\", child, column, p);\r\n\t\t\tvar zone = this._grid[column].node,\r\n\t\t\t\tlength = zone.childNodes.length;\r\n\t\t\tif(typeof p === \"undefined\" || p > length){\r\n\t\t\t\tp = length;\r\n\t\t\t}\r\n\t\t\tif(this._disabled){\r\n\t\t\t\tdomConstruct.place(child.domNode, zone, p);\r\n\t\t\t\tdomAttr.set(child.domNode, \"tabIndex\", \"0\");\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(!child.dragRestriction){\r\n\t\t\t\t\tthis._dragManager.addDragItem(zone, child.domNode, p, true);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tdomConstruct.place(child.domNode, zone, p);\r\n\t\t\t\t\tdomAttr.set(child.domNode, \"tabIndex\", \"0\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tchild.set(\"column\", column);\r\n\t\t\treturn child; // Widget\r\n\t\t},\r\n\r\n\t\tremoveChild: function(/*Widget*/ widget){\r\n\t\t\t//console.log(\"dojox.layout.GridContainerLite ::: removeChild\");\r\n\t\t\tif(this._disabled){\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tthis._dragManager.removeDragItem(widget.domNode.parentNode, widget.domNode);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\taddService: function(/*Object*/child, /*Integer?*/column, /*Integer?*/p){\r\n\t\t\t//console.log(\"dojox.layout.GridContainerLite ::: addService\");\r\n\t\t\tkernel.deprecated(\"addService is deprecated.\", \"Please use  instead.\", \"Future\");\r\n\t\t\tthis.addChild(child, column, p);\r\n\t\t},\r\n\r\n\t\taddChild: function(/*Object*/child, /*Integer?*/column, /*Integer?*/p){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdd a child in a specific column of the GridContainer widget.\r\n\t\t\t// child:\r\n\t\t\t//\t\twidget to insert\r\n\t\t\t// column:\r\n\t\t\t//\t\tcolumn number\r\n\t\t\t// p:\r\n\t\t\t//\t\tplace in the zone (first = 0)\r\n\t\t\t// returns:\r\n\t\t\t//\t\tThe widget inserted\r\n\r\n\t\t\t//console.log(\"dojox.layout.GridContainerLite ::: addChild\");\r\n\t\t\tchild.domNode.id = child.id;\r\n\t\t\tdojox.layout.GridContainerLite.superclass.addChild.call(this, child, 0);\r\n\t\t\tif(column < 0 || column === undefined){ column = 0; }\r\n\t\t\tif(p <= 0){ p = 0; }\r\n\t\t\ttry{\r\n\t\t\t\treturn this._insertChild(child, column, p);\r\n\t\t\t}\r\n\t\t\tcatch(e){\r\n\t\t\t\tconsole.error(\"Unable to insert child in GridContainer\", e);\r\n\t\t\t}\r\n\t\t\treturn null; \t// Widget\r\n\t\t},\r\n\r\n\t\t_setColWidthsAttr: function(value){\r\n\t\t\tthis.colWidths = lang.isString(value) ? value.split(\",\") : (lang.isArray(value) ? value : [value]);\r\n\r\n\t\t\tif(this._started){\r\n\t\t\t\tthis._updateColumnsWidth();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_updateColumnsWidth: function(/*Object*/ manager){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUpdate the columns width.\r\n\t\t\t// manager:\r\n\t\t\t//\t\tdojox.mdnd.AreaManager singleton\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t//console.log(\"dojox.layout.GridContainer ::: _updateColumnsWidth\");\r\n\t\t\tvar length = this._grid.length;\r\n\r\n\t\t\tvar widths = this._computeColWidth();\r\n\r\n\t\t\t// Set the widths of each node\r\n\t\t\tfor (var i = 0; i < length; i++){\r\n\t\t\t\tthis._grid[i].node.style.width = widths[i] + \"%\";\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_computeColWidth: function(){\r\n\t\t\tvar origWidths = this.colWidths || [];\r\n\t\t\tvar widths = [];\r\n\t\t\tvar colWidth;\r\n\t\t\tvar widthSum = 0;\r\n\t\t\tvar i;\r\n\r\n\t\t\t// Calculate the widths of each column.\r\n\t\t\tfor(i = 0; i < this.nbZones; i++){\r\n\t\t\t\tif(widths.length < origWidths.length){\r\n\t\t\t\t\twidthSum += origWidths[i] * 1;\r\n\t\t\t\t\twidths.push(origWidths[i]);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(!colWidth){\r\n\t\t\t\t\t\tcolWidth = (100 - widthSum)/(this.nbZones - i);\r\n\r\n\t\t\t\t\t\t// If the numbers don't work out, make the remaining columns\r\n\t\t\t\t\t\t// an even width and let the code below average\r\n\t\t\t\t\t\t// out the differences.\r\n\t\t\t\t\t\tif(colWidth < 0){\r\n\t\t\t\t\t\t\tcolWidth = 100 / this.nbZones;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\twidths.push(colWidth);\r\n\t\t\t\t\twidthSum += colWidth * 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// If the numbers are wrong, divide them all so they add up to 100\r\n\t\t\tif(widthSum > 100){\r\n\t\t\t\tvar divisor = 100 / widthSum;\r\n\t\t\t\tfor(i = 0; i < widths.length; i++){\r\n\t\t\t\t\twidths[i] *= divisor;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn widths;\r\n\t\t},\r\n\r\n\t\t_selectFocus: function(/*Event*/event){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEnable keyboard accessibility into the GridContainer.\r\n\t\t\t// description:\r\n\t\t\t//\t\tPossibility to move focus into the GridContainer (TAB, LEFT ARROW, RIGHT ARROW, UP ARROW, DOWN ARROW).\r\n\t\t\t//\t\tPossibility to move GridContainer's children (Drag and Drop) with keyboard. (SHIFT +  ARROW).\r\n\t\t\t//\t\tIf the type of widget is not draggable, a popup is displayed.\r\n\r\n\t\t\t//console.log(\"dojox.layout.GridContainerLite ::: _selectFocus\");\r\n\t\t\tif(this._disabled){ return; }\r\n\t\t\tvar key = event.keyCode,\r\n\t\t\t\tk = keys,\r\n\t\t\t\tzone = null,\r\n\t\t\t\tcFocus = baseFocus.getFocus(),\r\n\t\t\t\tfocusNode = cFocus.node,\r\n\t\t\t\tm = this._dragManager,\r\n\t\t\t\tfound,\r\n\t\t\t\ti,\r\n\t\t\t\tj,\r\n\t\t\t\tr,\r\n\t\t\t\tchildren,\r\n\t\t\t\tarea,\r\n\t\t\t\twidget;\r\n\t\t\tif(focusNode == this.containerNode){\r\n\t\t\t\tarea = this.gridNode.childNodes;\r\n\t\t\t\tswitch(key){\r\n\t\t\t\t\tcase k.DOWN_ARROW:\r\n\t\t\t\t\tcase k.RIGHT_ARROW:\r\n\t\t\t\t\t\tfound = false;\r\n\t\t\t\t\t\tfor(i = 0; i < area.length; i++){\r\n\t\t\t\t\t\t\tchildren = area[i].childNodes;\r\n\t\t\t\t\t\t\tfor(j = 0; j < children.length; j++){\r\n\t\t\t\t\t\t\t\tzone = children[j];\r\n\t\t\t\t\t\t\t\tif(zone !== null && zone.style.display != \"none\"){\r\n\t\t\t\t\t\t\t\t\tfocus.focus(zone);\r\n\t\t\t\t\t\t\t\t\tevents.stop(event);\r\n\t\t\t\t\t\t\t\t\tfound = true;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(found){ break };\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase k.UP_ARROW:\r\n\t\t\t\t\tcase k.LEFT_ARROW:\r\n\t\t\t\t\t\tarea = this.gridNode.childNodes;\r\n\t\t\t\t\t\tfound = false;\r\n\t\t\t\t\t\tfor(i = area.length-1; i >= 0 ; i--){\r\n\t\t\t\t\t\t\tchildren = area[i].childNodes;\r\n\t\t\t\t\t\t\tfor(j = children.length; j >= 0; j--){\r\n\t\t\t\t\t\t\t\tzone = children[j];\r\n\t\t\t\t\t\t\t\tif(zone !== null && zone.style.display != \"none\"){\r\n\t\t\t\t\t\t\t\t\tfocus.focus(zone);\r\n\t\t\t\t\t\t\t\t\tevents.stop(event);\r\n\t\t\t\t\t\t\t\t\tfound = true;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(found){ break };\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(focusNode.parentNode.parentNode == this.gridNode){\r\n\t\t\t\t\tvar child = (key == k.UP_ARROW || key == k.LEFT_ARROW) ? \"lastChild\" : \"firstChild\";\r\n\t\t\t\t\tvar pos = (key == k.UP_ARROW || key == k.LEFT_ARROW) ? \"previousSibling\" : \"nextSibling\";\r\n\t\t\t\t\tswitch(key){\r\n\t\t\t\t\t\tcase k.UP_ARROW:\r\n\t\t\t\t\t\tcase k.DOWN_ARROW:\r\n\t\t\t\t\t\t\tevents.stop(event);\r\n\t\t\t\t\t\t\tfound = false;\r\n\t\t\t\t\t\t\tvar focusTemp = focusNode;\r\n\t\t\t\t\t\t\twhile(!found){\r\n\t\t\t\t\t\t\t\tchildren = focusTemp.parentNode.childNodes;\r\n\t\t\t\t\t\t\t\tvar num = 0;\r\n\t\t\t\t\t\t\t\tfor(i = 0; i < children.length; i++){\r\n\t\t\t\t\t\t\t\t\tif(children[i].style.display != \"none\"){ num++; }\r\n\t\t\t\t\t\t\t\t\tif(num > 1){ break; }\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(num == 1){ return; }\r\n\t\t\t\t\t\t\t\tif(focusTemp[pos] === null){\r\n\t\t\t\t\t\t\t\t\tzone = focusTemp.parentNode[child];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\t\tzone = focusTemp[pos];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(zone.style.display === \"none\"){\r\n\t\t\t\t\t\t\t\t\tfocusTemp = zone;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\t\tfound = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(event.shiftKey){\r\n\t\t\t\t\t\t\t\tvar parent = focusNode.parentNode;\r\n\t\t\t\t\t\t\t\tfor(i = 0; i < this.gridNode.childNodes.length; i++){\r\n\t\t\t\t\t\t\t\t\tif(parent == this.gridNode.childNodes[i]){\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tchildren = this.gridNode.childNodes[i].childNodes;\r\n\t\t\t\t\t\t\t\tfor(j = 0; j < children.length; j++){\r\n\t\t\t\t\t\t\t\t\tif(zone == children[j]){\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(has(\"mozilla\") || has(\"webkit\")){ i--; }\r\n\r\n\t\t\t\t\t\t\t\twidget = registry.byNode(focusNode);\r\n\t\t\t\t\t\t\t\tif(!widget.dragRestriction){\r\n\t\t\t\t\t\t\t\t\tr = m.removeDragItem(parent, focusNode);\r\n\t\t\t\t\t\t\t\t\tthis.addChild(widget, i, j);\r\n\t\t\t\t\t\t\t\t\tdomAttr.set(focusNode, \"tabIndex\", \"0\");\r\n\t\t\t\t\t\t\t\t\tfocus.focus(focusNode);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\t\ttopic.publish(\"/dojox/layout/gridContainer/moveRestriction\", this);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\tfocus.focus(zone);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase k.RIGHT_ARROW:\r\n\t\t\t\t\t\tcase k.LEFT_ARROW:\r\n\t\t\t\t\t\t\tevents.stop(event);\r\n\t\t\t\t\t\t\tif(event.shiftKey){\r\n\t\t\t\t\t\t\t\tvar z = 0;\r\n\t\t\t\t\t\t\t\tif(focusNode.parentNode[pos] === null){\r\n\t\t\t\t\t\t\t\t\tif(has(\"ie\") && key == k.LEFT_ARROW){\r\n\t\t\t\t\t\t\t\t\t\tz = this.gridNode.childNodes.length-1;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if(focusNode.parentNode[pos].nodeType == 3){\r\n\t\t\t\t\t\t\t\t\tz = this.gridNode.childNodes.length - 2;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\t\tfor(i = 0; i < this.gridNode.childNodes.length; i++){\r\n\t\t\t\t\t\t\t\t\t\tif(focusNode.parentNode[pos] == this.gridNode.childNodes[i]){\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tz++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif(has(\"mozilla\") || has(\"webkit\")){ z--; }\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\twidget = registry.byNode(focusNode);\r\n\t\t\t\t\t\t\t\tvar _dndType = focusNode.getAttribute(\"dndtype\");\r\n\t\t\t\t\t\t\t\tif(_dndType === null){\r\n\t\t\t\t\t\t\t\t\t//check if it's a dijit object\r\n\t\t\t\t\t\t\t\t\tif(widget && widget.dndType){\r\n\t\t\t\t\t\t\t\t\t\t_dndType = widget.dndType.split(/\\s*,\\s*/);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\t\t\t_dndType = [\"text\"];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\t\t_dndType = _dndType.split(/\\s*,\\s*/);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvar accept = false;\r\n\t\t\t\t\t\t\t\tfor(i = 0; i < this.acceptTypes.length; i++){\r\n\t\t\t\t\t\t\t\t\tfor(j = 0; j < _dndType.length; j++){\r\n\t\t\t\t\t\t\t\t\t\tif(_dndType[j] == this.acceptTypes[i]){\r\n\t\t\t\t\t\t\t\t\t\t\taccept = true;\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(accept && !widget.dragRestriction){\r\n\t\t\t\t\t\t\t\t\tvar parentSource = focusNode.parentNode,\r\n\t\t\t\t\t\t\t\t\t\tplace = 0;\r\n\t\t\t\t\t\t\t\t\tif(k.LEFT_ARROW == key){\r\n\t\t\t\t\t\t\t\t\t\tvar t = z;\r\n\t\t\t\t\t\t\t\t\t\tif(has(\"mozilla\") || has(\"webkit\")){ t = z + 1; }\r\n\t\t\t\t\t\t\t\t\t\tplace = this.gridNode.childNodes[t].childNodes.length;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t// delete of manager :\r\n\t\t\t\t\t\t\t\t\tr = m.removeDragItem(parentSource, focusNode);\r\n\t\t\t\t\t\t\t\t\tthis.addChild(widget, z, place);\r\n\t\t\t\t\t\t\t\t\tdomAttr.set(r, \"tabIndex\", \"0\");\r\n\t\t\t\t\t\t\t\t\tfocus.focus(r);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\t\ttopic.publish(\"/dojox/layout/gridContainer/moveRestriction\", this);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\tvar node = focusNode.parentNode;\r\n\t\t\t\t\t\t\t\twhile(zone === null){\r\n\t\t\t\t\t\t\t\t\tif(node[pos] !== null && node[pos].nodeType !== 3){\r\n\t\t\t\t\t\t\t\t\t\tnode = node[pos];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\t\t\tif(pos === \"previousSibling\"){\r\n\t\t\t\t\t\t\t\t\t\t\tnode = node.parentNode.childNodes[node.parentNode.childNodes.length-1];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\t\t\t\tnode = node.parentNode.childNodes[has(\"ie\") ? 0 : 1];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tzone = node[child];\r\n\t\t\t\t\t\t\t\t\tif(zone && zone.style.display == \"none\"){\r\n\t\t\t\t\t\t\t\t\t\t// check that all elements are not hidden\r\n\t\t\t\t\t\t\t\t\t\tchildren = zone.parentNode.childNodes;\r\n\t\t\t\t\t\t\t\t\t\tvar childToSelect = null;\r\n\t\t\t\t\t\t\t\t\t\tif(pos == \"previousSibling\"){\r\n\t\t\t\t\t\t\t\t\t\t\tfor(i = children.length-1; i >= 0; i--){\r\n\t\t\t\t\t\t\t\t\t\t\t\tif(children[i].style.display != \"none\"){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tchildToSelect = children[i];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\t\t\t\tfor(i = 0; i < children.length; i++){\r\n\t\t\t\t\t\t\t\t\t\t\t\tif(children[i].style.display != \"none\"){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tchildToSelect = children[i];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif(!childToSelect){\r\n\t\t\t\t\t\t\t\t\t\t\tfocusNode = zone;\r\n\t\t\t\t\t\t\t\t\t\t\tnode = focusNode.parentNode;\r\n\t\t\t\t\t\t\t\t\t\t\tzone = null;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\t\t\t\tzone = childToSelect;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tfocus.focus(zone);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\t//console.log(\"dojox.layout.GridContainerLite ::: destroy\");\r\n\t\t\tvar m = this._dragManager;\r\n\t\t\tarray.forEach(this._grid, function(dropZone){\r\n\t\t\t\tm.unregister(dropZone.node);\r\n\t\t\t});\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n\r\n\tgcl.ChildWidgetProperties = {\r\n\t\t// summary:\r\n\t\t//\t\tProperties set on children of a GridContainerLite\r\n\r\n\t\t// column: String\r\n\t\t//\t\tColumn of the grid to place the widget.\r\n\t\t//\t\tDefined only if dojo.require(\"dojox.layout.GridContainerLite\") is done.\r\n\t\tcolumn: \"1\",\r\n\r\n\t\t// dragRestriction: Boolean\r\n\t\t//\t\tIf true, the widget can not be draggable.\r\n\t\t//\t\tDefined only if dojo.require(\"dojox.layout.GridContainerLite\") is done.\r\n\t\tdragRestriction: false\r\n\t};\r\n\r\n\t// Add to widget base for benefit of parser.   Remove for 2.0.   Also, hide from doc viewer.\r\n\tlang.extend(_WidgetBase, /*===== {} || =====*/ gcl.ChildWidgetProperties);\r\n\r\n\treturn gcl;\r\n});\r\n"]}