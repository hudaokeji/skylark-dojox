{"version":3,"sources":["layout/GridContainer.js"],"names":["define","dojo","declare","array","connect","has","domClass","domStyle","geom","domConstruct","lang","win","ready","GridContainerLite","hasResizableColumns","liveResizeColumns","minColWidth","minChildWidth","mode","isRightFixed","isLeftFixed","startup","this","inherited","arguments","i","_grid","length","_createGrip","getParent","hitch","resizeChildAfterDrop","node","targetArea","indexChild","_placeGrips","onShow","resize","_isShown","index","dropZone","grip","create","class","domNode","gripHandler","e","gridContainerGripShow","contains","replace","target","_isResized","gripWidth","height","left","forEach","offsetWidth","getMarginBox","w","set","getContentBox","gridNode","h","_onGripDbClick","_updateColumnsWidth","_dragManager","_resizeColumnOn","_activeGrip","_initX","pageX","preventDefault","body","style","cursor","grid","tabSize","_oldTabSize","_currentColumn","_currentColumnWidth","_nextColumn","_nextColumnWidth","width","calculateChildMinWidth","childNodes","minChild","childMinWidth","child","nodeType","objectStyle","getComputedStyle","minWidth","parseInt","marginLeft","marginRight","currentColumnMinWidth","nextColumnMinWidth","minPix","Math","round","gridContainerTable","_currentMinCol","_nextMinCol","_connectResizeColumnMove","doc","_connectOnGripMouseUp","_onGripMouseUp","disconnect","_resizeColumnMove","_connectResizeColumnOff","d","_resizeColumnOff","testSize","tabWidth","clientWidth","update","mul","setColumns","nbColumns","z","j","delta","zone","start","end","nbChildren","count","id","_deleteColumn","publish","_addColumn","abs","isRightMode","accept","acceptTypes","join","m","nbZones","splice","parentNode","insertBefore","push","appendChild","registerByNode","indices","nbDelZones","handler","destroy","removeChild","unregister","lastGrid","manager","_dropMode","updateAreas","_areaList","unsubscribe","_dropHandler"],"mappings":"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","file":"../../layout/GridContainer.js","sourcesContent":["define([\r\n\t\"dojo/_base/kernel\",\r\n\t\"dojo/_base/declare\", // declare \r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/connect\",\r\n\t\"dojo/_base/sniff\",\r\n\t\"dojo/dom-class\",\r\n\t\"dojo/dom-style\",\r\n\t\"dojo/dom-geometry\",\r\n\t\"dojo/dom-construct\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/window\",\r\n\t\"dojo/ready\",\t// dojo.ready\r\n\t\"dojox/layout/GridContainerLite\"\r\n],function(dojo, declare, array, connect, has, domClass, domStyle, geom, domConstruct, lang, win, ready, GridContainerLite){\r\n\treturn declare(\r\n\t\t\"dojox.layout.GridContainer\",\r\n\t\tGridContainerLite,\r\n\t{\r\n\t\t// summary:\r\n\t\t//\t\tA grid containing any kind of objects and acting like web portals.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tThis component inherits of all features of gridContainerLite plus :\r\n\t\t//\r\n\t\t//\t\t- Resize colums\r\n\t\t//\t\t- Add / remove columns\r\n\t\t//\t\t- Fix columns at left or at right.\r\n\t\t// example:\r\n\t\t// \t|\t<div dojoType=\"dojox.layout.GridContainer\" nbZones=\"3\" isAutoOrganized=\"true\">\r\n\t\t// \t|\t\t<div dojoType=\"dijit.layout.ContentPane\">Content Pane 1 : Drag Me !</div>\r\n\t\t// \t|\t\t<div dojoType=\"dijit.layout.ContentPane\">Content Pane 2 : Drag Me !</div>\r\n\t\t// \t|\t\t<div dojoType=\"dijit.layout.ContentPane\">Content Pane 3 : Drag Me !</div>\r\n\t\t// \t|\t</div>\r\n\t\t//\r\n\t\t// example:\r\n\t\t// \t|\tdojo.ready(function(){\r\n\t\t// \t|\t\tvar cpane1 = new dijit.layout.ContentPane({ title:\"cpane1\", content: \"Content Pane 1 : Drag Me !\" }),\r\n\t\t// \t|\t\t\tcpane2 = new dijit.layout.ContentPane({ title:\"cpane2\", content: \"Content Pane 2 : Drag Me !\" }),\r\n\t\t// \t|\t\t\tcpane3 = new dijit.layout.ContentPane({ title:\"cpane3\", content: \"Content Pane 3 : Drag Me !\" });\r\n\t\t// \t|\r\n\t\t// \t|\t\tvar widget = new dojox.layout.GridContainer({\r\n\t\t// \t|\t\t\tnbZones: 3,\r\n\t\t// \t|\t\t\tisAutoOrganized: true\r\n\t\t// \t|\t\t}, dojo.byId(\"idNode\"));\r\n\t\t// \t|\t\twidget.addChild(cpane1, 0, 0);\r\n\t\t// \t|\t\twidget.addChild(cpane2, 1, 0);\r\n\t\t// \t|\t\twidget.addChild(cpane3, 2, 1);\r\n\t\t// \t|\t\twidget.startup();\r\n\t\t// \t|\t});\r\n\r\n\t\t// hasResizableColumns: Boolean\r\n\t\t//\t\tAllow or not resizing of columns by a grip handle.\r\n\t\thasResizableColumns: true,\r\n\r\n\t\t// liveResizeColumns: Boolean\r\n\t\t//\t\tSpecifies whether columns resize as you drag (true) or only upon mouseup (false)\r\n\t\tliveResizeColumns : false,\r\n\r\n\t\t// minColWidth: Integer\r\n\t\t//\t\tMinimum column width in percentage.\r\n\t\tminColWidth: 20,\r\n\r\n\t\t// minChildWidth: Integer\r\n\t\t//\t\tMinimum children width in pixel (only used for IE6 which doesn't handle min-width css property)\r\n\t\tminChildWidth: 150,\r\n\r\n\t\t// mode: String\r\n\t\t//\t\tLocation to add/remove columns, must be set to 'left' or 'right' (default).\r\n\t\tmode: \"right\",\r\n\r\n\t\t// isRightFixed: Boolean\r\n\t\t//\t\tDefine if the last right column is fixed.\r\n\t\t//\t\tUsed when you add or remove columns by calling setColumns method.\r\n\t\tisRightFixed: false,\r\n\r\n\t\t// isLeftFixed: Boolean\r\n\t\t//\t\tDefine if the last left column is fixed.\r\n\t\t//\t\tUsed when you add or remove columns by calling setColumns method.\r\n\t\tisLeftFixed: false,\r\n\r\n\t\tstartup: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCall the startup of GridContainerLite and place grips\r\n\t\t\t//\t\tif user has chosen the hasResizableColumns attribute to true.\r\n\r\n\t\t\t//console.log(\"dojox.layout.GridContainer ::: startup\");\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(this.hasResizableColumns){\r\n\t\t\t\tfor(var i = 0; i < this._grid.length - 1; i++){\r\n\t\t\t\t\tthis._createGrip(i);\r\n\t\t\t\t}\r\n\t\t\t\t// If widget has a container parent, grips will be placed\r\n\t\t\t\t// by method onShow.\r\n\t\t\t\tif(!this.getParent()){\r\n\t\t\t\t\t// Fix IE7 :\r\n\t\t\t\t\t//\t\tThe CSS property height:100% for the grip\r\n\t\t\t\t\t//\t\tdoesn't work anytime. It's necessary to wait\r\n\t\t\t\t\t//\t\tthe end of loading before to place grips.\r\n\t\t\t\t\tready(lang.hitch(this, \"_placeGrips\"));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tresizeChildAfterDrop : function(/*Node*/node, /*Object*/targetArea, /*Integer*/indexChild){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCall when a child is dropped.\r\n\t\t\t// description:\r\n\t\t\t//\t\tAllow to resize and put grips\r\n\t\t\t// node:\r\n\t\t\t//\t\tdomNode of dropped widget.\r\n\t\t\t// targetArea:\r\n\t\t\t//\t\tAreaManager Object containing information of targetArea\r\n\t\t\t// indexChild:\r\n\t\t\t//\t\tIndex where the dropped widget has been placed\r\n\r\n\t\t\tif(this.inherited(arguments)){\r\n\t\t\t\tthis._placeGrips();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonShow: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPlace grips in the right place when the GridContainer becomes visible.\r\n\r\n\t\t\t//console.log(\"dojox.layout.GridContainer ::: onShow\");\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._placeGrips();\r\n\t\t},\r\n\r\n\t\tresize: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tResize the GridContainer widget and columns.\r\n\t\t\t//\t\tReplace grips if it's necessary.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\r\n\t\t\t//console.log(\"dojox.layout.GridContainer ::: resize\");\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\t// Fix IE6 :\r\n\t\t\t//\t\tIE6 calls method resize itself.\r\n\t\t\t//\t\tIf the GridContainer is not visible at this time,\r\n\t\t\t//\t\tthe method _placeGrips can return a negative value with\r\n\t\t\t//\t\tcontentBox method. (see method _placeGrip() with Fix Ie6 for the height)\r\n\t\t\tif(this._isShown() && this.hasResizableColumns){\r\n\t\t\t\tthis._placeGrips();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_createGrip: function(/*Integer*/ index){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate a grip for a specific zone.\r\n\t\t\t// index:\r\n\t\t\t//\t\tindex where the grip has to be created.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\t//console.log(\"dojox.layout.GridContainer ::: _createGrip\");\r\n\t\t\tvar dropZone = this._grid[index],\r\n\t\t\t\tgrip = domConstruct.create(\"div\", { 'class': \"gridContainerGrip\" }, this.domNode);\r\n\t\t\tdropZone.grip = grip;\r\n\t\t\tdropZone.gripHandler = [\r\n\t\t\t\tthis.connect(grip, \"onmouseover\", function(e){\r\n\t\t\t\t\tvar gridContainerGripShow = false;\r\n\t\t\t\t\tfor(var i = 0; i < this._grid.length - 1; i++){\r\n\t\t\t\t\t\tif(domClass.contains(this._grid[i].grip, \"gridContainerGripShow\")){\r\n\t\t\t\t\t\t\tgridContainerGripShow = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!gridContainerGripShow){\r\n\t\t\t\t\t\tdomClass.replace(e.target, \"gridContainerGripShow\", \"gridContainerGrip\");\r\n\t\t\t\t\t}\r\n\t\t\t\t})[0],\r\n\t\t\t\tthis.connect(grip, \"onmouseout\", function(e){\r\n\t\t\t\t\tif(!this._isResized){\r\n\t\t\t\t\t\tdomClass.replace(e.target, \"gridContainerGrip\", \"gridContainerGripShow\");\r\n\t\t\t\t\t}\r\n\t\t\t\t})[0],\r\n\t\t\t\tthis.connect(grip, \"onmousedown\", \"_resizeColumnOn\")[0],\r\n\t\t\t\tthis.connect(grip, \"ondblclick\", \"_onGripDbClick\")[0]\r\n\t\t\t];\r\n\t\t},\r\n\r\n\t\t_placeGrips: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDefine the position of a grip and place it on page.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\t//console.log(\"dojox.layout.GridContainer ::: _placeGrips\");\r\n\t\t\tvar gripWidth, height, left = 0, grip;\r\n\t\t\t//var scroll = this.domNode.style.overflowY;\r\n\r\n\t\t\tarray.forEach(this._grid, function(dropZone){\r\n\t\t\t\tif(dropZone.grip){\r\n\t\t\t\t\tgrip = dropZone.grip;\r\n\t\t\t\t\tif(!gripWidth){\r\n\t\t\t\t\t\tgripWidth = grip.offsetWidth / 2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tleft += geom.getMarginBox(dropZone.node).w;\r\n\r\n\t\t\t\t\tdomStyle.set(grip, \"left\", (left - gripWidth) + \"px\");\r\n\t\t\t\t\t//if(dojo.isIE == 6){ do it fot all navigators\r\n\t\t\t\t\tif(!height){\r\n\t\t\t\t\t\theight = geom.getContentBox(this.gridNode).h;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(height > 0){\r\n\t\t\t\t\t\tdomStyle.set(grip, \"height\", height + \"px\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//}\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\t_onGripDbClick: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when a double click is catch. Resize all columns with the same width.\r\n\t\t\t//\t\tThe method resize of children have to be called.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback protected\r\n\r\n\t\t\t//console.log(\"dojox.layout.GridContainer ::: _onGripDbClick\");\r\n\t\t\tthis._updateColumnsWidth(this._dragManager);\r\n\t\t\tthis.resize();\r\n\t\t},\r\n\r\n\t\t_resizeColumnOn: function(/*Event*/e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConnect events to listen the resize action.\r\n\t\t\t//\t\tChange the type of width columns (% to px).\r\n\t\t\t//\t\tCalculate the minwidth according to the children.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\r\n\t\t\t//console.log(\"dojox.layout.GridContainer ::: _resizeColumnOn\", e);\r\n\t\t\tthis._activeGrip = e.target;\r\n\t\t\tthis._initX = e.pageX;\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\twin.body().style.cursor = \"ew-resize\";\r\n\r\n\t\t\tthis._isResized = true;\r\n\r\n\t\t\tvar tabSize = [];\r\n\t\t\tvar grid;\r\n\t\t\tvar i;\r\n\r\n\t\t\tfor(i = 0; i < this._grid.length; i++){\r\n\t\t\t\ttabSize[i] = geom.getContentBox(this._grid[i].node).w;\r\n\t\t\t}\r\n\r\n\t\t\tthis._oldTabSize = tabSize;\r\n\r\n\t\t\tfor(i = 0; i < this._grid.length; i++){\r\n\t\t\t\tgrid = this._grid[i];\r\n\t\t\t\tif(this._activeGrip == grid.grip){\r\n\t\t\t\t\tthis._currentColumn = grid.node;\r\n\t\t\t\t\tthis._currentColumnWidth = tabSize[i];\r\n\t\t\t\t\tthis._nextColumn = this._grid[i + 1].node;\r\n\t\t\t\t\tthis._nextColumnWidth = tabSize[i + 1];\r\n\t\t\t\t}\r\n\t\t\t\tgrid.node.style.width = tabSize[i] + \"px\";\r\n\t\t\t}\r\n\r\n\t\t\t// calculate the minWidh of all children for current and next column\r\n\t\t\tvar calculateChildMinWidth = function(childNodes, minChild){\r\n\t\t\t\tvar width = 0;\r\n\t\t\t\tvar childMinWidth = 0;\r\n\r\n\t\t\t\tarray.forEach(childNodes, function(child){\r\n\t\t\t\t\tif(child.nodeType == 1){\r\n\t\t\t\t\t\tvar objectStyle = domStyle.getComputedStyle(child);\r\n\t\t\t\t\t\tvar minWidth = (has(\"ie\")) ? minChild : parseInt(objectStyle.minWidth);\r\n\r\n\t\t\t\t\t\tchildMinWidth = minWidth +\r\n\t\t\t\t\t\t\t\t\tparseInt(objectStyle.marginLeft) +\r\n\t\t\t\t\t\t\t\t\tparseInt(objectStyle.marginRight);\r\n\r\n\t\t\t\t\t\tif(width < childMinWidth){\r\n\t\t\t\t\t\t\twidth = childMinWidth;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn width;\r\n\t\t\t};\r\n\t\t\tvar currentColumnMinWidth = calculateChildMinWidth(this._currentColumn.childNodes, this.minChildWidth);\r\n\r\n\t\t\tvar nextColumnMinWidth = calculateChildMinWidth(this._nextColumn.childNodes, this.minChildWidth);\r\n\r\n\t\t\tvar minPix = Math.round((geom.getMarginBox(this.gridContainerTable).w * this.minColWidth) / 100);\r\n\r\n\t\t\tthis._currentMinCol = currentColumnMinWidth;\r\n\t\t\tthis._nextMinCol = nextColumnMinWidth;\r\n\r\n\t\t\tif(minPix > this._currentMinCol){\r\n\t\t\t\tthis._currentMinCol = minPix;\r\n\t\t\t}\r\n\t\t\tif(minPix > this._nextMinCol){\r\n\t\t\t\tthis._nextMinCol = minPix;\r\n\t\t\t}\r\n\t\t\tthis._connectResizeColumnMove = connect.connect(win.doc, \"onmousemove\", this, \"_resizeColumnMove\");\r\n\t\t\tthis._connectOnGripMouseUp = connect.connect(win.doc, \"onmouseup\", this, \"_onGripMouseUp\");\r\n\t\t},\r\n\r\n\t\t_onGripMouseUp: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCall on the onMouseUp only if the reiszeColumnMove was not called.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\r\n\t\t\t//console.log(dojox.layout.GridContainer ::: _onGripMouseUp\");\r\n\t\t\twin.body().style.cursor = \"default\";\r\n\r\n\t\t\tconnect.disconnect(this._connectResizeColumnMove);\r\n\t\t\tconnect.disconnect(this._connectOnGripMouseUp);\r\n\r\n\t\t\tthis._connectOnGripMouseUp = this._connectResizeColumnMove = null;\r\n\r\n\t\t\tif(this._activeGrip){\r\n\t\t\t\tdomClass.replace(this._activeGrip, \"gridContainerGrip\", \"gridContainerGripShow\");\r\n\t\t\t}\r\n\r\n\t\t\tthis._isResized = false;\r\n\t\t},\r\n\r\n\t\t_resizeColumnMove: function(/*Event*/e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tChange columns size.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\r\n\t\t\t//console.log(\"dojox.layout.GridContainer ::: _resizeColumnMove\");\r\n\t\t\te.preventDefault();\r\n\t\t\tif(!this._connectResizeColumnOff){\r\n\t\t\t\tconnect.disconnect(this._connectOnGripMouseUp);\r\n\t\t\t\tthis._connectOnGripMouseUp = null;\r\n\t\t\t\tthis._connectResizeColumnOff = connect.connect(win.doc, \"onmouseup\", this, \"_resizeColumnOff\");\r\n\t\t\t}\r\n\r\n\t\t\tvar d = e.pageX - this._initX;\r\n\t\t\tif(d == 0){ return; }\r\n\r\n\t\t\tif(!(this._currentColumnWidth + d < this._currentMinCol ||\r\n\t\t\t\t\tthis._nextColumnWidth - d < this._nextMinCol)){\r\n\r\n\t\t\t\tthis._currentColumnWidth += d;\r\n\t\t\t\tthis._nextColumnWidth -= d;\r\n\t\t\t\tthis._initX = e.pageX;\r\n\t\t\t\tthis._activeGrip.style.left = parseInt(this._activeGrip.style.left) + d + \"px\";\r\n\r\n\t\t\t\tif(this.liveResizeColumns){\r\n\t\t\t\t\tthis._currentColumn.style[\"width\"] = this._currentColumnWidth + \"px\";\r\n\t\t\t\t\tthis._nextColumn.style[\"width\"] = this._nextColumnWidth + \"px\";\r\n\t\t\t\t\tthis.resize();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_resizeColumnOff: function(/*Event*/e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDisconnect resize events.\r\n\t\t\t//\t\tChange the type of width columns (px to %).\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\r\n\t\t\t//console.log(\"dojox.layout.GridContainer ::: _resizeColumnOff\");\r\n\t\t\twin.body().style.cursor = \"default\";\r\n\r\n\t\t\tconnect.disconnect(this._connectResizeColumnMove);\r\n\t\t\tconnect.disconnect(this._connectResizeColumnOff);\r\n\r\n\t\t\tthis._connectResizeColumnOff = this._connectResizeColumnMove = null;\r\n\r\n\t\t\tif(!this.liveResizeColumns){\r\n\t\t\t\tthis._currentColumn.style[\"width\"] = this._currentColumnWidth + \"px\";\r\n\t\t\t\tthis._nextColumn.style[\"width\"] = this._nextColumnWidth + \"px\";\r\n\t\t\t\t//this.resize();\r\n\t\t\t}\r\n\r\n\t\t\tvar tabSize = [],\r\n\t\t\t\ttestSize = [],\r\n\t\t\t\ttabWidth = this.gridContainerTable.clientWidth,\r\n\t\t\t\tnode,\r\n\t\t\t\tupdate = false,\r\n\t\t\t\ti;\r\n\r\n\t\t\tfor(i = 0; i < this._grid.length; i++){\r\n\t\t\t\tnode = this._grid[i].node;\r\n\t\t\t\tif(has(\"ie\")){\r\n\t\t\t\t\ttabSize[i] = geom.getMarginBox(node).w;\r\n\t\t\t\t\ttestSize[i] = geom.getContentBox(node).w;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\ttabSize[i] = geom.getContentBox(node).w;\r\n\t\t\t\t\ttestSize = tabSize;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor(i = 0; i < testSize.length; i++){\r\n\t\t\t\tif(testSize[i] != this._oldTabSize[i]){\r\n\t\t\t\t\tupdate = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(update){\r\n\t\t\t\tvar mul = has(\"ie\") ? 100 : 10000;\r\n\t\t\t\tfor(i = 0; i < this._grid.length; i++){\r\n\t\t\t\t\tthis._grid[i].node.style.width = Math.round((100 * mul * tabSize[i]) / tabWidth) / mul + \"%\";\r\n\t\t\t\t}\r\n\t\t\t\tthis.resize();\r\n\t\t\t}\r\n\r\n\t\t\tif(this._activeGrip){\r\n\t\t\t\tdomClass.replace(this._activeGrip, \"gridContainerGrip\", \"gridContainerGripShow\");\r\n\t\t\t}\r\n\r\n\t\t\tthis._isResized = false;\r\n\t\t},\r\n\r\n\t\tsetColumns: function(/*Integer*/nbColumns){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet the number of columns.\r\n\t\t\t// nbColumns:\r\n\t\t\t//\t\tNumber of columns\r\n\r\n\t\t\t//console.log(\"dojox.layout.GridContainer ::: setColumns\");\r\n\t\t\tvar z, j;\r\n\t\t\tif(nbColumns > 0){\r\n\t\t\t\tvar length = this._grid.length,\r\n\t\t\t\t\tdelta = length - nbColumns;\r\n\t\t\t\tif(delta > 0){\r\n\t\t\t\t\tvar count = [], zone, start, end, nbChildren;\r\n\t\t\t\t\t// Check if right or left columns are fixed\r\n\t\t\t\t\t// Columns are not taken in account and can't be deleted\r\n\t\t\t\t\tif(this.mode == \"right\"){\r\n\t\t\t\t\t\tend = (this.isLeftFixed && length > 0) ? 1 : 0;\r\n\t\t\t\t\t\tstart = (this.isRightFixed) ? length - 2 : length - 1\r\n\t\t\t\t\t\tfor(z = start; z >= end; z--){\r\n\t\t\t\t\t\t\tnbChildren = 0;\r\n\t\t\t\t\t\t\tzone = this._grid[z].node;\r\n\t\t\t\t\t\t\tfor(j = 0; j < zone.childNodes.length; j++){\r\n\t\t\t\t\t\t\t\tif(zone.childNodes[j].nodeType == 1 && !(zone.childNodes[j].id == \"\")){\r\n\t\t\t\t\t\t\t\t\tnbChildren++;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(nbChildren == 0){ count[count.length] = z; }\r\n\t\t\t\t\t\t\tif(count.length >= delta){\r\n\t\t\t\t\t\t\t\tthis._deleteColumn(count);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(count.length < delta){\r\n\t\t\t\t\t\t\tconnect.publish(\"/dojox/layout/gridContainer/noEmptyColumn\", [this]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{ // mode = \"left\"\r\n\t\t\t\t\t\tstart = (this.isLeftFixed && length > 0) ? 1 : 0;\r\n\t\t\t\t\t\tend = (this.isRightFixed) ? length - 1 : length;\r\n\t\t\t\t\t\tfor(z = start; z < end; z++){\r\n\t\t\t\t\t\t\tnbChildren = 0;\r\n\t\t\t\t\t\t\tzone = this._grid[z].node;\r\n\t\t\t\t\t\t\tfor(j = 0; j < zone.childNodes.length; j++){\r\n\t\t\t\t\t\t\t\tif(zone.childNodes[j].nodeType == 1 && !(zone.childNodes[j].id == \"\")){\r\n\t\t\t\t\t\t\t\t\tnbChildren++;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(nbChildren == 0){ count[count.length] = z; }\r\n\t\t\t\t\t\t\tif(count.length >= delta){\r\n\t\t\t\t\t\t\t\tthis._deleteColumn(count);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(count.length < delta){\r\n\t\t\t\t\t\t\t//Not enough empty columns\r\n\t\t\t\t\t\t\tconnect.publish(\"/dojox/layout/gridContainer/noEmptyColumn\", [this]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(delta < 0){ this._addColumn(Math.abs(delta)); }\r\n\t\t\t\t}\r\n\t\t\t\tif(this.hasResizableColumns){ this._placeGrips(); }\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_addColumn: function(/*Integer*/nbColumns){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdd some columns.\r\n\t\t\t// nbColumns:\r\n\t\t\t//\t\tNumber of column to added\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t//console.log(\"dojox.layout.GridContainer ::: _addColumn\");\r\n\t\t\tvar grid = this._grid,\r\n\t\t\t\tdropZone,\r\n\t\t\t\tnode,\r\n\t\t\t\tindex,\r\n\t\t\t\tlength,\r\n\t\t\t\tisRightMode = (this.mode == \"right\"),\r\n\t\t\t\taccept = this.acceptTypes.join(\",\"),\r\n\t\t\t\tm = this._dragManager;\r\n\r\n\t\t\t//Add a grip to the last column\r\n\t\t\tif(this.hasResizableColumns && ((!this.isRightFixed && isRightMode)\r\n\t\t\t\t|| (this.isLeftFixed && !isRightMode && this.nbZones == 1) )){\r\n\t\t\t\tthis._createGrip(grid.length - 1);\r\n\t\t\t}\r\n\r\n\t\t\tfor(var i = 0; i < nbColumns; i++){\r\n\t\t\t\t// Fix CODEX defect #53025 :\r\n\t\t\t\t//\t\tApply acceptType attribute on each new column.\r\n\t\t\t\tnode = domConstruct.create(\"td\", {\r\n\t\t\t\t\t'class': \"gridContainerZone dojoxDndArea\" ,\r\n\t\t\t\t\t'accept': accept,\r\n\t\t\t\t\t'id': this.id + \"_dz\" + this.nbZones\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlength = grid.length;\r\n\r\n\t\t\t\tif(isRightMode){\r\n\t\t\t\t\tif(this.isRightFixed){\r\n\t\t\t\t\t\tindex = length - 1;\r\n\t\t\t\t\t\tgrid.splice(index, 0, {\r\n\t\t\t\t\t\t\t'node': grid[index].node.parentNode.insertBefore(node, grid[index].node)\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tindex = length;\r\n\t\t\t\t\t\tgrid.push({ 'node': this.gridNode.appendChild(node) });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(this.isLeftFixed){\r\n\t\t\t\t\t\tindex = (length == 1) ? 0 : 1;\r\n\t\t\t\t\t\tthis._grid.splice(1, 0, {\r\n\t\t\t\t\t\t\t'node': this._grid[index].node.parentNode.appendChild(node, this._grid[index].node)\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tindex = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tindex = length - this.nbZones;\r\n\t\t\t\t\t\tthis._grid.splice(index, 0, {\r\n\t\t\t\t\t\t\t'node': grid[index].node.parentNode.insertBefore(node, grid[index].node)\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(this.hasResizableColumns){\r\n\t\t\t\t\t//Add a grip to resize columns\r\n\t\t\t\t\tif((!isRightMode && this.nbZones != 1) ||\r\n\t\t\t\t\t\t\t(!isRightMode && this.nbZones == 1 && !this.isLeftFixed) ||\r\n\t\t\t\t\t\t\t\t(isRightMode && i < nbColumns-1) ||\r\n\t\t\t\t\t\t\t\t\t(isRightMode && i == nbColumns-1 && this.isRightFixed)){\r\n\t\t\t\t\t\tthis._createGrip(index);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// register tnbZoneshe new area into the areaManager\r\n\t\t\t\tm.registerByNode(grid[index].node);\r\n\t\t\t\tthis.nbZones++;\r\n\t\t\t}\r\n\t\t\tthis._updateColumnsWidth(m);\r\n\t\t},\r\n\r\n\t\t_deleteColumn: function(/*Array*/indices){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRemove some columns with indices passed as an array.\r\n\t\t\t// indices:\r\n\t\t\t//\t\tColumn index array\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t//console.log(\"dojox.layout.GridContainer ::: _deleteColumn\");\r\n\t\t\tvar child, grid, index,\r\n\t\t\t\tnbDelZones = 0,\r\n\t\t\t\tlength = indices.length,\r\n\t\t\t\tm = this._dragManager;\r\n\t\t\tfor(var i = 0; i < length; i++){\r\n\t\t\t\tindex = (this.mode == \"right\") ? indices[i] : indices[i] - nbDelZones;\r\n\t\t\t\tgrid = this._grid[index];\r\n\r\n\t\t\t\tif(this.hasResizableColumns && grid.grip){\r\n\t\t\t\t\tarray.forEach(grid.gripHandler, function(handler){\r\n\t\t\t\t\t\tconnect.disconnect(handler);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tdomConstruct.destroy(this.domNode.removeChild(grid.grip));\r\n\t\t\t\t\tgrid.grip = null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tm.unregister(grid.node);\r\n\t\t\t\tdomConstruct.destroy(this.gridNode.removeChild(grid.node));\r\n\t\t\t\tthis._grid.splice(index, 1);\r\n\t\t\t\tthis.nbZones--;\r\n\t\t\t\tnbDelZones++;\r\n\t\t\t}\r\n\r\n\t\t\t// last grip\r\n\t\t\tvar lastGrid = this._grid[this.nbZones-1];\r\n\t\t\tif(lastGrid.grip){\r\n\t\t\t\tarray.forEach(lastGrid.gripHandler, connect.disconnect);\r\n\t\t\t\tdomConstruct.destroy(this.domNode.removeChild(lastGrid.grip));\r\n\t\t\t\tlastGrid.grip = null;\r\n\t\t\t}\r\n\r\n\t\t\tthis._updateColumnsWidth(m);\r\n\t\t},\r\n\r\n\t\t_updateColumnsWidth: function(/*Object*/ manager){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUpdate the columns width.\r\n\t\t\t// manager:\r\n\t\t\t//\t\tdojox.mdnd.AreaManager singleton\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t//console.log(\"dojox.layout.GridContainer ::: _updateColumnsWidth\");\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tmanager._dropMode.updateAreas(manager._areaList);\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tconnect.unsubscribe(this._dropHandler);\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n});\r\n"]}