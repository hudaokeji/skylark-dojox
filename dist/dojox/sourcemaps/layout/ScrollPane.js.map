{"version":3,"sources":["layout/ScrollPane.js"],"names":["define","kernel","declare","html","baseFx","Templated","ContentPane","domClass","template","experimental","_line","_lo","_offset","orientation","autoHide","templateString","resize","size","h","style","this","domNode","w","dir","_dir","vert","_vertical","val","containerNode","wrapper","coords","_size","Math","max","helper","display","_scroll","_Line","u","r","min","s","c","floor","_helpLine","postCreate","inherited","arguments","_showAnim","_fade","node","end","duration","_hideAnim","fadeOut","_edge","add","play","_set","n","getValue","_calc","e","pageY","y","pageX","x","_enter","status","stop","_leave"],"mappings":"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","file":"../../layout/ScrollPane.js","sourcesContent":["define([\"dojo/_base/kernel\",\"dojo/_base/declare\",\"dojo/_base/html\",\"dojo/_base/fx\",\r\n\t\t\"dijit/_Templated\",\"dijit/layout/ContentPane\",\"dojo/dom-class\",\r\n\t\t\"dojo/text!./resources/ScrollPane.html\"],\r\nfunction(kernel,declare,html,baseFx,Templated,ContentPane,domClass,template){\r\n\r\nkernel.experimental(\"dojox.layout.ScrollPane\");\r\n\r\n// FIXME: need to adjust the _line somehow, it stops scrolling\r\n\r\nvar Scrollpane = declare(\"dojox.layout.ScrollPane\",[ContentPane, Templated],{\r\n\t// summary:\r\n\t//\t\tA pane that \"scrolls\" its content based on the mouse poisition inside\r\n\t// description:\r\n\t//\t\tA sizable container that takes it's content's natural size and creates\r\n\t//\t\ta scroll effect based on the relative mouse position. It is an interesting\r\n\t//\t\tway to display lists of data, or blocks of content, within a confined\r\n\t//\t\tspace.\r\n\t//\r\n\t//\t\tHorizontal scrolling is supported. Combination scrolling is not.\r\n\t// example:\r\n\t// |\t<div dojoType=\"dojox.layout.ScrollPane\" style=\"width:150px height:300px;\">\r\n\t// |\t\t<!-- any height content -->\r\n\t// |\t</div>\r\n\t\r\n\t// _line: dojo/_base/fx._Line\r\n\t//\t\tstorage for our top and bottom most scrollpoints\r\n\t_line: null,\r\n\t\r\n\t// _lo: \r\n\t//\t\tthe height of the visible pane\r\n\t_lo: null,\r\n\t\r\n\t_offset: 15,\r\n\t\r\n\t// orientation: String\r\n\t//\t\teither \"horizontal\" or \"vertical\" for scroll orientation.\r\n\torientation: \"vertical\",\r\n\t\r\n\t// autoHide: Boolean\r\n\t//\t\twhether the scroll helper should hide when mouseleave\r\n\tautoHide: true,\r\n\ttemplateString: template,\r\n\t\r\n\tresize: function(/*Integer?*/ size){\r\n\t\t// summary:\r\n\t\t//\t\tcalculates required sizes. Call this if you add/remove\r\n\t\t//\t\tcontent manually, or reload the content.\r\n\t\t\r\n\t\t// if size is passed, it means we need to take care of sizing ourself (this is for IE<8)\r\n\t\tif(size){\r\n\t\t\tif(size.h){\r\n\t\t\t\thtml.style(this.domNode,'height',size.h+'px');\r\n\t\t\t}\r\n\t\t\tif(size.w){\r\n\t\t\t\thtml.style(this.domNode,'width',size.w+'px');\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar dir = this._dir,\r\n\t\t\tvert = this._vertical,\r\n\t\t\tval = this.containerNode[(vert ? \"scrollHeight\" : \"scrollWidth\")];\r\n\r\n\t\thtml.style(this.wrapper, this._dir, this.domNode.style[this._dir]);\r\n\t\tthis._lo = html.coords(this.wrapper, true);\r\n\t\t\r\n\t\tthis._size = Math.max(0, val - this._lo[(vert ? \"h\" : \"w\")]);\r\n\t\tif(!this._size){\r\n\t\t\tthis.helper.style.display=\"none\";\r\n\t\t\t//make sure we reset scroll position, otherwise the content may be hidden\r\n\t\t\tthis.wrapper[this._scroll]=0;\r\n\t\t\treturn;\r\n\t\t}else{\r\n\t\t\tthis.helper.style.display=\"\";\r\n\t\t}\r\n\t\tthis._line = new baseFx._Line(0 - this._offset, this._size + (this._offset * 2));\r\n\t\r\n\t\t// share a relative position w the scroll offset via a line\r\n\t\tvar u = this._lo[(vert ? \"h\" : \"w\")],\r\n\t\t\tr = Math.min(1, u / val), // ratio\r\n\t\t\ts = u * r, // size\r\n\t\t\tc = Math.floor(u - (u * r)); // center\r\n\t\t\t  \r\n\t\tthis._helpLine = new baseFx._Line(0, c);\r\n\t\r\n\t\t// size the helper\r\n\t\thtml.style(this.helper, dir, Math.floor(s) + \"px\");\r\n\t\t\r\n\t},\r\n\t\r\n\tpostCreate: function(){\r\n\t\tthis.inherited(arguments);\r\n\t\t// for the helper\r\n\t\tif(this.autoHide){\r\n\t\t\tthis._showAnim = baseFx._fade({ node:this.helper, end:0.5, duration:350 });\r\n\t\t\tthis._hideAnim = baseFx.fadeOut({ node:this.helper, duration: 750 });\r\n\t\t}\r\n\t\r\n\t\t// orientation helper\r\n\t\tthis._vertical = (this.orientation == \"vertical\");\r\n\t\tif(!this._vertical){\r\n\t\t\tdomClass.add(this.containerNode,\"dijitInline\");\r\n\t\t\tthis._dir = \"width\";\r\n\t\t\tthis._edge = \"left\";\r\n\t\t\tthis._scroll = \"scrollLeft\";\r\n\t\t}else{\r\n\t\t\tthis._dir = \"height\";\r\n\t\t\tthis._edge = \"top\";\r\n\t\t\tthis._scroll = \"scrollTop\";\r\n\t\t}\r\n\r\n\t\tif(this._hideAnim){\r\n\t\t\tthis._hideAnim.play();\r\n\t\t}\r\n\t\thtml.style(this.wrapper,\"overflow\",\"hidden\");\r\n\t\r\n\t},\r\n\t\r\n\t_set: function(/* Float */n){\r\n\t\t// summary:\r\n\t\t//\t\tset the pane's scroll offset, and position the virtual scroll helper\r\n\t\tif(!this._size || n === 'focused'){ return; }\r\n\t\tthis.wrapper[this._scroll] = Math.floor(this._line.getValue(n));\r\n\t\thtml.style(this.helper, this._edge, Math.floor(this._helpLine.getValue(n)) + \"px\");\r\n\t},\r\n\t\r\n\t_calc: function(/* Event */e){\r\n\t\t// summary:\r\n\t\t//\t\tcalculate the relative offset of the cursor over the node, and call _set\r\n\t\tif(!this._lo){ this.resize(); }\r\n\t\tthis._set(this._vertical ?\r\n\t\t\t((e.pageY - this._lo.y) / this._lo.h) :\r\n\t\t\t((e.pageX - this._lo.x) / this._lo.w)\r\n\t\t);\r\n\t},\r\n\t\r\n\t_enter: function(e){\r\n\t\tif(this._hideAnim){\r\n\t\t\tif(this._hideAnim.status() == \"playing\"){\r\n\t\t\t\tthis._hideAnim.stop();\r\n\t\t\t}\r\n\t\t\tthis._showAnim.play();\r\n\t\t}\r\n\t},\r\n\t\r\n\t_leave: function(e){\r\n\t\tif(this._hideAnim){\r\n\t\t\tthis._hideAnim.play();\r\n\t\t}\r\n\t} \r\n});\r\nreturn Scrollpane;\r\n});\r\n"]}