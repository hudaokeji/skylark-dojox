{"version":3,"sources":["layout/RotatorContainer.js"],"names":["define","declare","html","connect","lang","array","baseFx","coreFx","manager","StackContainer","StackController","Widget","Templated","Contained","RotatorContainer","templateString","showTabs","transitionDelay","transition","transitionDuration","autoStart","suspendOnHover","pauseOnManualChange","reverse","pagerId","cycles","pagerClass","postCreate","this","inherited","arguments","style","domNode","id","Date","getTime","sc","containerId","tabNode","_stackController","_subscriptions","subscribe","d","Math","round","startup","_started","c","getChildren","i","len","length","declaredClass","pagerNode","appendChild","setTimeout","hitch","_updatePager","destroy","forEach","unsubscribe","_setShowTabsAttr","value","publish","_playing","indexOf","selectedChildWidget","_onMouseOver","_resetTimer","_over","_onMouseOut","clearTimeout","_timer","_cycle","next","Boolean","_manualChange","selectChild","_play","skip","_pause","getAttribute","_state","playing","_transition","prev","_fade","_transitionEnd","_styleNode","_showChild","doLayout","resize","_containerContentBox","_contentBox","args","duration","anim","combine","mixin","node","_hideChild","play","opacity","zIndex","widgetsInTemplate","rotatorId","postMixInProperties","srcNodeRef","innerHTML","p","byId","getParent","previous","playPause","set","checked","_update","current","total"],"mappings":"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","file":"../../layout/RotatorContainer.js","sourcesContent":["define([\"dojo/_base/declare\",\"dojo/_base/html\",\"dojo/_base/connect\",\"dojo/_base/lang\",\"dojo/_base/array\",\r\n\t\"dojo/_base/fx\",\"dojo/fx\",\"dijit/_base/manager\",\"dijit/layout/StackContainer\",\"dijit/layout/StackController\",\"dijit/_Widget\",\r\n\t\"dijit/_Templated\",\"dijit/_Contained\"\r\n],function(declare,html,connect,lang,array,baseFx,coreFx,manager,\r\n\tStackContainer,StackController,Widget,Templated,Contained){\r\n\r\nvar RotatorContainer = declare(\"dojox.layout.RotatorContainer\",[StackContainer, Templated], {\r\n\t// summary:\r\n\t//\t\tExtends a StackContainer to automatically transition between children\r\n\t//\t\tand display navigation in the form of tabs or a pager.\r\n\t//\r\n\t// description:\r\n\t//\t\tThe RotatorContainer cycles through the children with a transition.\r\n\t//\r\n\t//\t\t####published topics:\r\n\t//\r\n\t//\t\t[widgetId]-update - Notifies pager(s) that a child has changed.\r\n\t//\t\tParameters:\r\n\t//\r\n\t//\t\t- /*boolean*/ playing - true if playing, false if paused\r\n\t//\t\t- /*int*/ current     - current selected child\r\n\t//\t\t- /*int*/ total       - total number of children\r\n\t//\r\n\t// example:\r\n\t// |\t<div dojoType=\"dojox.layout.RotatorContainer\" id=\"myRotator\" showTabs=\"true\" autoStart=\"true\" transitionDelay=\"5000\">\r\n\t// |\t\t<div id=\"pane1\" dojoType=\"dijit.layout.ContentPane\" title=\"1\">\r\n\t// |\t\t\tPane 1!\r\n\t// |\t\t</div>\r\n\t// |\t\t<div id=\"pane2\" dojoType=\"dijit.layout.ContentPane\" title=\"2\">\r\n\t// |\t\t\tPane 2!\r\n\t// |\t\t</div>\r\n\t// |\t\t<div id=\"pane3\" dojoType=\"dijit.layout.ContentPane\" title=\"3\" transitionDelay=\"10000\">\r\n\t// |\t\t\tPane 3 with overrided transitionDelay!\r\n\t// |\t\t</div>\r\n\t// |\t</div>\r\n\r\n\ttemplateString: '<div class=\"dojoxRotatorContainer\"><div dojoAttachPoint=\"tabNode\"></div><div class=\"dojoxRotatorPager\" dojoAttachPoint=\"pagerNode\"></div><div class=\"dojoxRotatorContent\" dojoAttachPoint=\"containerNode\"></div></div>',\r\n\r\n\t// showTabs: Boolean\r\n\t//\t\tSets the display of the tabs.  The tabs are actually a StackController.\r\n\t//\t\tThe child's title is used for the tab's label.\r\n\tshowTabs: true,\r\n\r\n\t// transitionDelay: int\r\n\t//\t\tThe delay in milliseconds before transitioning to the next child.\r\n\ttransitionDelay: 5000,\r\n\r\n\t// transition: String\r\n\t//\t\tThe type of transition to perform when switching children.\r\n\t//\t\tA null transition will transition instantly.\r\n\ttransition: \"fade\",\r\n\r\n\t// transitionDuration: int\r\n\t//\t\tThe duration of the transition in milliseconds.\r\n\ttransitionDuration: 1000,\r\n\r\n\t// autoStart: Boolean\r\n\t//\t\tStarts the timer to transition children upon creation.\r\n\tautoStart: true,\r\n\r\n\t// suspendOnHover: Boolean\r\n\t//\t\tPause the rotator when the mouse hovers over it.\r\n\tsuspendOnHover: false,\r\n\r\n\t// pauseOnManualChange: Boolean\r\n\t//\t\tPause the rotator when the tab is changed or the pager's next/previous\r\n\t//\t\tbuttons are clicked.\r\n\tpauseOnManualChange: null,\r\n\r\n\t// reverse: Boolean\r\n\t//\t\tCauses the rotator to rotate in reverse order.\r\n\treverse: false,\r\n\r\n\t// pagerId: String\r\n\t//\t\tID the pager widget.\r\n\tpagerId: \"\",\r\n\r\n\t// cycles: int\r\n\t//\t\tNumber of cycles before pausing.\r\n\tcycles: -1,\r\n\r\n\t// pagerClass: String\r\n\t//\t\tThe declared Class of the Pager used for this Widget\r\n \tpagerClass: \"dojox.layout.RotatorPager\",\r\n\r\n\tpostCreate: function(){\r\n\t\t// summary:\r\n\t\t//\t\tInitializes the DOM nodes, tabs, and transition stuff.\r\n\t\tthis.inherited(arguments);\r\n\r\n\t\t// force this DOM node to a relative position and make sure the children are absolute positioned\r\n\t\thtml.style(this.domNode, \"position\", \"relative\");\r\n\r\n\t\t// validate the cycles counter\r\n\t\tif(this.cycles-0 == this.cycles && this.cycles != -1){\r\n\t\t\t// we need to add 1 because we decrement cycles before the animation starts\r\n\t\t\tthis.cycles++;\r\n\t\t}else{\r\n\t\t\tthis.cycles = -1;\r\n\t\t}\r\n\r\n\t\t// if they didn't specify the pauseOnManualChange, then we want it to be the opposite of\r\n\t\t// the suspendOnHover since it doesn't make sense to do both, unless you really want to\r\n\t\tif(this.pauseOnManualChange === null){\r\n\t\t\tthis.pauseOnManualChange = !this.suspendOnHover;\r\n\t\t}\r\n\r\n\t\t// create the stack controller if we are using tabs\r\n\t\tvar id = this.id || \"rotator\"+(new Date()).getTime(),\r\n\t\t\tsc = new StackController({ containerId:id }, this.tabNode);\r\n\t\tthis.tabNode = sc.domNode;\r\n\t\tthis._stackController = sc;\r\n\t\thtml.style(this.tabNode, \"display\", this.showTabs ? \"\" : \"none\");\r\n\r\n\t\t// if the controller's tabs are clicked, check if we should pause and reset the cycle counter\r\n\t\tthis.connect(sc, \"onButtonClick\",\"_manualChange\");\r\n\r\n\t\t// set up our topic listeners\r\n\t\tthis._subscriptions = [\r\n\t\t\tconnect.subscribe(this.id+\"-cycle\", this, \"_cycle\"),\r\n\t\t\tconnect.subscribe(this.id+\"-state\", this, \"_state\")\r\n\t\t];\r\n\r\n\t\t// make sure the transition duration isn't less than the transition delay\r\n\t\tvar d = Math.round(this.transitionDelay * 0.75);\r\n\t\tif(d < this.transitionDuration){\r\n\t\t\tthis.transitionDuration = d;\r\n\t\t}\r\n\r\n\t\t// wire up the mouse hover events\r\n\t\tif(this.suspendOnHover){\r\n\t\t\tthis.connect(this.domNode, \"onmouseover\", \"_onMouseOver\");\r\n\t\t\tthis.connect(this.domNode, \"onmouseout\", \"_onMouseOut\");\r\n\t\t}\r\n\t},\r\n\r\n\tstartup: function(){\r\n\t\t// summary:\r\n\t\t//\t\tInitializes the pagers.\r\n\t\tif(this._started){ return; }\r\n\r\n\t\t// check if the pager is defined within the rotator container\r\n\t\tvar c = this.getChildren();\r\n\t\tfor(var i=0, len=c.length; i<len; i++){\r\n\t\t\tif(c[i].declaredClass == this.pagerClass){\r\n\t\t\t\tthis.pagerNode.appendChild(c[i].domNode);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// process the child widgets\r\n\t\tthis.inherited(arguments);\r\n\r\n\t\t// check if we should start automatically\r\n\t\tif(this.autoStart){\r\n\t\t\t// start playing\r\n\t\t\tsetTimeout(lang.hitch(this, \"_play\"), 10);\r\n\t\t}else{\r\n\t\t\t// update the pagers with the initial state\r\n\t\t\tthis._updatePager();\r\n\t\t}\r\n\t},\r\n\r\n\tdestroy: function(){\r\n\t\t// summary:\r\n\t\t//\t\tUnsubscribe to all of our topics\r\n\t\tarray.forEach(this._subscriptions, connect.unsubscribe);\r\n\t\tthis.inherited(arguments);\r\n\t},\r\n\r\n\t_setShowTabsAttr: function(/*anything*/value){\r\n\t\tthis.showTabs = value;\r\n\t\thtml.style(this.tabNode, \"display\", value ? \"\" : \"none\");\r\n\t},\r\n\r\n\t_updatePager: function(){\r\n\t\t// summary:\r\n\t\t//\t\tNotify the pager's current and total numbers.\r\n\t\tvar c = this.getChildren();\r\n\t\tconnect.publish(this.id+\"-update\", [this._playing, array.indexOf(c, this.selectedChildWidget)+1, c.length]);\r\n\t},\r\n\r\n\t_onMouseOver: function(){\r\n\t\t// summary:\r\n\t\t//\t\tTriggered when the mouse is moved over the rotator container.\r\n\r\n\t\t// temporarily suspend the cycling, but don't officially pause it\r\n\t\tthis._resetTimer();\r\n\t\tthis._over = true;\r\n\t},\r\n\r\n\t_onMouseOut: function(){\r\n\t\t// summary:\r\n\t\t//\t\tTriggered when the mouse is moved off the rotator container.\r\n\t\tthis._over = false;\r\n\r\n\t\t// if we were playing, resume playback in 200ms\r\n\t\t// we need to wait because we may be moused over again right away\r\n\t\tif(this._playing){\r\n\t\t\tclearTimeout(this._timer);\r\n\t\t\tthis._timer = setTimeout(lang.hitch(this, \"_play\", true), 200);\r\n\t\t}\r\n\t},\r\n\r\n\t_resetTimer: function(){\r\n\t\t// summary:\r\n\t\t//\t\tResets the timer used to start the next transition.\r\n\t\tclearTimeout(this._timer);\r\n\t\tthis._timer = null;\r\n\t},\r\n\r\n\t_cycle: function(/*boolean or int*/next){\r\n\t\t// summary:\r\n\t\t//\t\tCycles to the next/previous child.\r\n\r\n\t\t// if next is an int, then _cycle() was called via a timer\r\n\t\t// if next is a boolean, then _cycle() was called via the next/prev buttons, stop playing and reset cycles\r\n\t\tif(next instanceof Boolean || typeof next == \"boolean\"){\r\n\t\t\tthis._manualChange();\r\n\t\t}\r\n\r\n\t\tvar c = this.getChildren(),\r\n\t\t\tlen = c.length,\r\n\t\t\ti = array.indexOf(c, this.selectedChildWidget) + (next === false || (next !== true && this.reverse) ? -1 : 1);\r\n\t\tthis.selectChild(c[(i < len ? (i < 0 ? len-1 : i) : 0)]);\r\n\t\tthis._updatePager();\r\n\t},\r\n\r\n\t_manualChange: function(){\r\n\t\t// summary:\r\n\t\t//\t\tThis function is only called when a manual change occurs in which\r\n\t\t//\t\tcase we may need to stop playing and we need to reset the cycle counter\r\n\t\tif(this.pauseOnManualChange){\r\n\t\t\tthis._playing = false;\r\n\t\t}\r\n\t\tthis.cycles = -1;\r\n\t},\r\n\r\n\t_play: function(skip){\r\n\t\t// summary:\r\n\t\t//\t\tSchedules the next transition.\r\n\t\tthis._playing = true;\r\n\t\tthis._resetTimer();\r\n\t\tif(skip !== true && this.cycles>0){\r\n\t\t\tthis.cycles--;\r\n\t\t}\r\n\t\tif(this.cycles==0){\r\n\t\t\tthis._pause();\r\n\t\t}else if((!this.suspendOnHover || !this._over) && this.transitionDelay){\r\n\t\t\t// check if current pane has a delay\r\n\t\t\tthis._timer = setTimeout(lang.hitch(this, \"_cycle\"), this.selectedChildWidget.domNode.getAttribute(\"transitionDelay\") || this.transitionDelay);\r\n\t\t}\r\n\t\tthis._updatePager();\r\n\t},\r\n\r\n\t_pause: function(){\r\n\t\t// summary:\r\n\t\t//\t\tClears the transition timer and pauses the rotator.\r\n\t\tthis._playing = false;\r\n\t\tthis._resetTimer();\r\n\t},\r\n\r\n\t_state: function(playing){\r\n\t\t// summary:\r\n\t\t//\t\tFired when the play/pause pager button is toggled.\r\n\t\tif(playing){\r\n\t\t\t// since we were manually changed, disable the cycle counter\r\n\t\t\tthis.cycles = -1;\r\n\t\t\tthis._play();\r\n\t\t}else{\r\n\t\t\tthis._pause();\r\n\t\t}\r\n\t},\r\n\r\n\t_transition: function(/*dijit._Widget*/ next, /*dijit._Widget*/ prev){\r\n\t\t// summary:\r\n\t\t//\t\tDispatches the appropriate transition.\r\n\t\tthis._resetTimer();\r\n\r\n\t\t// check if we have anything to transition\r\n\t\tif(prev && this.transitionDuration){\r\n\t\t\tswitch(this.transition){\r\n\t\t\t\tcase \"fade\": this._fade(next, prev); return;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._transitionEnd();\r\n\t\tthis.inherited(arguments);\r\n\t},\r\n\r\n\t_transitionEnd: function(){\r\n\t\tif(this._playing){\r\n\t\t\tthis._play();\r\n\t\t}else{\r\n\t\t\tthis._updatePager();\r\n\t\t}\r\n\t},\r\n\r\n\t_fade: function(/*dijit._Widget*/ next, /*dijit._Widget*/ prev){\r\n\t\t// summary:\r\n\t\t//\t\tCrossfades two children.\r\n\t\tthis._styleNode(prev.domNode, 1, 1);\r\n\t\tthis._styleNode(next.domNode, 0, 2);\r\n\r\n\t\t// show the next child and make sure it's sized properly\r\n\t\tthis._showChild(next);\r\n\t\tif(this.doLayout && next.resize){\r\n\t\t\tnext.resize(this._containerContentBox || this._contentBox);\r\n\t\t}\r\n\r\n\t\t// create the crossfade animation\r\n\t\tvar args = { duration:this.transitionDuration },\r\n\t\t\tanim = coreFx.combine([\r\n\t\t\t\tbaseFx[\"fadeOut\"](lang.mixin({node:prev.domNode}, args)),\r\n\t\t\t\tbaseFx[\"fadeIn\"](lang.mixin({node:next.domNode}, args))\r\n\t\t\t]);\r\n\r\n\t\tthis.connect(anim, \"onEnd\", lang.hitch(this,function(){\r\n\t\t\tthis._hideChild(prev);\r\n\t\t\tthis._transitionEnd();\r\n\t\t}));\r\n\r\n\t\tanim.play();\r\n\t},\r\n\r\n\t_styleNode: function(/*DomNode*/node, /*number*/opacity, /*int*/zIndex){\r\n\t\t// summary:\r\n\t\t//\t\tHelper function to style the children.\r\n\t\thtml.style(node, \"opacity\", opacity);\r\n\t\thtml.style(node, \"zIndex\", zIndex);\r\n\t\thtml.style(node, \"position\", \"absolute\");\r\n\t}\r\n});\r\n\r\ndeclare(\"dojox.layout.RotatorPager\", [Widget, Templated, Contained], {\r\n\t// summary:\r\n\t//\t\tDefines controls used to manipulate a RotatorContainer\r\n\t//\r\n\t// description:\r\n\t//\t\tA pager can be defined one of two ways:\r\n\t//\r\n\t//\t\t- Externally of the RotatorContainer's template and tell the\r\n\t//\t\tRotatorPager the rotatorId of the RotatorContainer\r\n\t//\t\t- As a direct descendant of the RotatorContainer (i.e. inside the\r\n\t//\t\tRotatorContainer's template)\r\n\t//\r\n\t//\t\tThe pager can contain the following components:\r\n\t//\r\n\t//\t\t- Previous button\r\n\t//\t\t\t- Must be a dijit.form.Button\r\n\t//\t\t\t- dojoAttachPoint must be named \"previous\"\r\n\t//\t\t- Next button\r\n\t//\t\t\t- Must be a dijit.form.Button\r\n\t//\t\t\t- dojoAttachPoint must be named \"next\"\r\n\t//\t\t- Play/Pause toggle button\r\n\t//\t\t\t- Must be a dijit.form.ToggleButton\r\n\t//\t\t\t- dojoAttachPoint must be named \"playPause\"\r\n\t//\t\t\t- Use iconClass to specify toggled state\r\n\t//\t\t- Current child #\r\n\t//\t\t\t- dojoAttachPoint must be named \"current\"\r\n\t//\t\t- Total # of children\r\n\t//\t\t\t- dojoAttachPoint must be named \"total\"\r\n\t//\r\n\t//\t\tYou can choose to exclude specific controls as well as add elements\r\n\t//\t\tfor styling.\r\n\t//\r\n\t//\t\tShould you need a pager, but don't want to use Dijit buttons, you can\r\n\t//\t\twrite your own pager widget and just wire it into the topics.  The\r\n\t//\t\ttopic names are prefixed with the widget ID of the RotatorContainer.\r\n\t//\t\tNotifications are received from and sent to the RotatorContainer as\r\n\t//\t\twell as other RotatorPagers.\r\n\t//\r\n\t//\t\t####published topics:\r\n\t//\r\n\t//\t\t[widgetId]-cycle - Notify that the next or previous button was pressed.\r\n\t//\t\tParameters:\r\n\t//\r\n\t//\t\t- /*boolean*/ next - true if next, false if previous\r\n\t//\r\n\t//\t\t[widgetId]-state - Notify that the play/pause button was toggled.\r\n\t//\t\tParameters:\r\n\t//\r\n\t//\t\t- /*boolean*/ playing - true if playing, false if paused\r\n\t//\r\n\t// example:\r\n\t//\t\tA pager with the current/total children and previous/next buttons.\r\n\t// |\t<div dojoType=\"dojox.layout.RotatorPager\" rotatorId=\"myRotator\">\r\n\t// |\t\t<button dojoType=\"dijit.form.Button\" dojoAttachPoint=\"previous\">Prev</button>\r\n\t// |\t\t<span dojoAttachPoint=\"current\"></span> / <span dojoAttachPoint=\"total\"></span>\r\n\t// |\t\t<button dojoType=\"dijit.form.Button\" dojoAttachPoint=\"next\">Next</button>\r\n\t// |\t</div>\r\n\t//\r\n\t// example:\r\n\t//\t\tA pager with only a play/pause toggle button.\r\n\t// |\t<div dojoType=\"dojox.layout.RotatorPager\" rotatorId=\"myRotator\">\r\n\t// |\t\t<button dojoType=\"dijit.form.ToggleButton\" dojoAttachPoint=\"playPause\"></button>\r\n\t// |\t</div>\r\n\t//\r\n\t// example:\r\n\t//\t\tA pager styled with iconClass.\r\n\t// |\t<div dojoType=\"dojox.layout.RotatorPager\" class=\"rotatorIcons\" rotatorId=\"myRotator\">\r\n\t// |\t\t<button dojoType=\"dijit.form.Button\" iconClass=\"previous\" dojoAttachPoint=\"previous\">Prev</button>\r\n\t// |\t\t<button dojoType=\"dijit.form.ToggleButton\" iconClass=\"playPause\" dojoAttachPoint=\"playPause\"></button>\r\n\t// |\t\t<button dojoType=\"dijit.form.Button\" iconClass=\"next\" dojoAttachPoint=\"next\">Next</button>\r\n\t// |\t\t<span dojoAttachPoint=\"current\"></span> / <span dojoAttachPoint=\"total\"></span>\r\n\t// |\t</div>\r\n\r\n\twidgetsInTemplate: true,\r\n\r\n\t// rotatorId: int\r\n\t//\t\tThe ID of the rotator this pager is tied to.\r\n\t//\t\tOnly required if defined outside of the RotatorContainer's container.\r\n\trotatorId: \"\",\r\n\r\n\tpostMixInProperties: function(){\r\n\t\tthis.templateString = \"<div>\" + this.srcNodeRef.innerHTML + \"</div>\";\r\n\t},\r\n\r\n\tpostCreate: function(){\r\n\t\tvar p = manager.byId(this.rotatorId) || this.getParent();\r\n\t\tif(p && p.declaredClass == \"dojox.layout.RotatorContainer\"){\r\n\t\t\tif(this.previous){\r\n\t\t\t\tconnect.connect(this.previous, \"onClick\", function(){\r\n\t\t\t\t\tconnect.publish(p.id+\"-cycle\", [false]);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif(this.next){\r\n\t\t\t\tconnect.connect(this.next, \"onClick\", function(){\r\n\t\t\t\t\tconnect.publish(p.id+\"-cycle\", [true]);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif(this.playPause){\r\n\t\t\t\tconnect.connect(this.playPause, \"onClick\", function(){\r\n\t\t\t\t\tthis.set('label', this.checked ? \"Pause\" : \"Play\");\r\n\t\t\t\t\tconnect.publish(p.id+\"-state\", [this.checked]);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tthis._subscriptions = [\r\n\t\t\t\tconnect.subscribe(p.id+\"-state\", this, \"_state\"),\r\n\t\t\t\tconnect.subscribe(p.id+\"-update\", this, \"_update\")\r\n\t\t\t];\r\n\t\t}\r\n\t},\r\n\r\n\tdestroy: function(){\r\n\t\t// Unsubscribe to all of our topics\r\n\t\tarray.forEach(this._subscriptions, connect.unsubscribe);\r\n\t\tthis.inherited(arguments);\r\n\t},\r\n\r\n\t_state: function(/*boolean*/playing){\r\n\t\t// summary:\r\n\t\t//\t\tUpdates the display of the play/pause button\r\n\t\tif(this.playPause && this.playPause.checked != playing){\r\n\t\t\tthis.playPause.set(\"label\", playing ? \"Pause\" : \"Play\");\r\n\t\t\tthis.playPause.set(\"checked\", playing);\r\n\t\t}\r\n\t},\r\n\r\n\t_update: function(/*boolean*/playing, /*int*/current, /*int*/total){\r\n\t\t// summary:\r\n\t\t//\t\tUpdates the pager's play/pause button, current child, and total number of children.\r\n\t\tthis._state(playing);\r\n\t\tif(this.current && current){\r\n\t\t\tthis.current.innerHTML = current;\r\n\t\t}\r\n\t\tif(this.total && total){\r\n\t\t\tthis.total.innerHTML = total;\r\n\t\t}\r\n\t}\r\n});\r\nreturn RotatorContainer;\r\n});\r\n"]}