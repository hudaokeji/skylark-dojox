{"version":3,"sources":["layout/tests/resources/script_dnd.js"],"names":["tabContainer","gridContainer","init","dijit","byId","dojo","subscribe","adapter","dojox","mdnd","dndToDojo","dojoNode","query","tablist","containerNode","forEach","node","register","declaredClass","c2","isAccepted","draggedNode","target","dndType","byNode","get","type","tabButton","panes","getChildren","i","l","length","gc","controlButton","j","acceptTypes","removeClass","domNode","id","createNode","source","nodes","copy","dropIndex","widget","_createWidget","areaManager","addDragItem","getAttribute","layout","ContentPane","addClass","set","Portlet","title","closable","TitlePane","startup","onOver","accept","onOut","onDrop","addChild","refresh","addOnLoad"],"mappings":";;;;;;;AACA,IAAIA,aAAcC,cAClB,SAASC,OACRF,aAAeG,MAAMC,KAAK,OAC1BC,KAAKC,UAAU,kBAAmB,cAClC,IAAIC,EAAUC,MAAMC,KAAKF,QAAQG,YAE7BC,EAAWN,KAAKO,MAAM,YAAaZ,aAAaa,QAAQC,eAAeC,QAAQ,SAASC,GAC3FT,EAAQU,SAASD,EAAMhB,aAAakB,iBAErCX,EAAQU,SAASE,GAAGH,KAAM,cAAc,EAAM,aAE9CT,EAAQa,WAAa,SAASC,EAAaC,GAE1C,IAAIC,EAAUpB,MAAMqB,OAAOH,GAAaI,IAAI,WAC5C,OAAOH,EAAOI,MACb,IAAK,4BAGJ,IAFA,IAAIC,EAAYxB,MAAMqB,OAAOF,EAAON,MAChCY,EAAQ5B,aAAa6B,cAChBC,EAAI,EAAGC,EAAIH,EAAMI,OAAQF,EAAIC,EAAGD,IAAK,CAC7C,IAAIG,EAAKL,EAAME,GACf,GAAIG,EAAGC,eAAiBP,EAAW,CAClC,IAAK,IAAIQ,EAAE,EAAGA,EAAIF,EAAGG,YAAYJ,OAAQG,IACxC,GAAIZ,GAAWU,EAAGG,YAAYD,GAE7B,OADAlC,cAAgBgC,GACT,EAGT,GAAIE,GAAKF,EAAGG,YAAYJ,OACvB,OAAO,GAIV,MACD,QACC,OAAO,IAMV3B,KAAKC,UAAU,qCAAsC,KAAM,UAC3DD,KAAKC,UAAU,oCAAqC,KAAM,SAC1DD,KAAKC,UAAU,qCAAsC,KAAM,UAE3DD,KAAKC,UAAU,mBAAoB,KAAM,WACxCD,KAAKU,QAAQJ,EAAU,SAASK,GAC/BX,KAAKgC,YAAYrB,EAAM,WACvBX,KAAKgC,YAAYrB,EAAM,0BAIzBX,KAAKC,UAAUN,aAAasC,QAAQC,GAAG,eAAgB,KAAM,WAW9D,SAASC,WAAWC,EAAQC,EAAOC,EAAMrB,EAAQsB,GAEhD,GAAGtB,EAAO,CACT,IAAIuB,EAASC,cAAcJ,GAC3BlC,MAAMC,KAAKsC,cAAcC,YAAY1B,EAAQuB,EAAOP,QAASM,IAM/D,SAASE,cAAuBJ,GAC/B,IACIG,EACJ,OAFWH,EAAM,GAAGO,aAAa,YAGhC,IAAK,cACJJ,EAAS,IAAI1C,MAAM+C,OAAOC,YAC1B9C,KAAK+C,SAASP,EAAOP,QAAS,SAC9BO,EAAOQ,IAAI,UAAU,eACrB,MACD,IAAK,UACJR,EAAS,IAAIrC,MAAMqC,OAAOS,SACzBC,MAAO,UACPC,UAAW,EACXjC,QAAQ,YAET,MACD,IAAK,YACJsB,EAAS,IAAI1C,MAAMsD,WAClBF,MAAO,YACPhC,QAAQ,cAET,MACD,QACCsB,EAAS,IAAI1C,MAAM+C,OAAOC,YAC1B9C,KAAK+C,SAASP,EAAOP,QAAS,SAC9BO,EAAOQ,IAAI,UAAU,eAKvB,OAFAR,EAAOQ,IAAI,UAAU,6DACrBR,EAAOa,UACAb,EAUR,SAASc,OAAOrC,EAAQI,EAAML,EAAauC,GAG1C,OAAOlC,GACN,IAAK,4BACAkC,EACHvD,KAAK+C,SAAS9B,EAAQ,WAGtBjB,KAAK+C,SAAS9B,EAAQ,uBAS1B,SAASuC,MAAMvC,EAAQI,EAAML,EAAauC,GAGzC,OAAOlC,GACN,IAAK,4BACJrB,KAAKgC,YAAYf,EAAQ,WACzBjB,KAAKgC,YAAYf,EAAQ,uBAK5B,SAASwC,OAAO9C,EAAMM,EAAQI,GAE7B,OAAOA,GACN,IAAK,4BACJzB,cAAc8D,SAAS5D,MAAMqB,OAAOR,GAAO,EAAG,GAC9CX,KAAKgC,YAAYf,EAAQ,WACzBjB,KAAKgC,YAAYf,EAAQ,uBAK5B,SAAS0C,UAERxD,MAAMC,KAAKF,QAAQG,YAAYsD,UA3JhC3D,KAAK4D,UAAU/D","file":"../../../../layout/tests/resources/script_dnd.js","sourcesContent":["dojo.addOnLoad(init);\r\nvar tabContainer, gridContainer;\r\nfunction init(){\r\n\ttabContainer = dijit.byId(\"tb1\");\r\n\tdojo.subscribe(\"/dnd/drop/after\", \"createNode\");\r\n\tvar adapter = dojox.mdnd.adapter.dndToDojo();\r\n\t// register tabs of tabContainer.\r\n\tvar dojoNode = dojo.query('.dijitTab', tabContainer.tablist.containerNode).forEach(function(node){\r\n\t\tadapter.register(node, tabContainer.declaredClass);\r\n\t});\r\n\tadapter.register(c2.node, \"targetDojo\", true, \"Drag Me !\");\r\n\t\r\n\tadapter.isAccepted = function(draggedNode, target){\r\n\t\t//console.log(\"isAccepted ::: \", draggedNode, target);\r\n\t\tvar dndType = dijit.byNode(draggedNode).get(\"dndType\");\r\n\t\tswitch(target.type){\r\n\t\t\tcase \"dijit.layout.TabContainer\" :\r\n\t\t\t\tvar tabButton = dijit.byNode(target.node);\r\n\t\t\t\tvar panes = tabContainer.getChildren();\r\n\t\t\t\tfor (var i = 0, l = panes.length; i < l; i++) {\r\n\t\t\t\t\tvar gc = panes[i];\r\n\t\t\t\t\tif (gc.controlButton == tabButton) {\r\n\t\t\t\t\t\tfor (var j=0; j < gc.acceptTypes.length; j++){\r\n\t\t\t\t\t\t\tif (dndType == gc.acceptTypes[j]){\r\n\t\t\t\t\t\t\t\tgridContainer = gc;\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (j == gc.acceptTypes.length){\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn true;\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t};\r\n\t};\r\n\t\r\n\tdojo.subscribe(\"/dojox/mdnd/adapter/dndToDojo/over\", null, \"onOver\");\r\n\tdojo.subscribe(\"/dojox/mdnd/adapter/dndToDojo/out\", null, \"onOut\");\r\n\tdojo.subscribe(\"/dojox/mdnd/adapter/dndToDojo/drop\", null, \"onDrop\");\r\n\t\r\n\tdojo.subscribe(\"/dojox/mdnd/drop\", null, function(){\r\n\t\tdojo.forEach(dojoNode, function(node){\r\n\t\t\tdojo.removeClass(node, \"dndOver\");\r\n\t\t\tdojo.removeClass(node, \"dndOverNotAccepted\");\r\n\t\t});\r\n\t});\r\n\t\r\n\tdojo.subscribe(tabContainer.domNode.id+\"-removeChild\", null, \"refresh\");\r\n};\r\n\r\n/**\r\n * DojoDndAdapter functions :\r\n * \tsource/target dojo to D&D OAF Area\r\n */\r\n\r\n/*Function: createNode\r\n * \tCreate a widget with a dojo draggedNode and drop this into a D&D OAF Area.\r\n */\r\nfunction createNode(source, nodes, copy, target, dropIndex){\r\n\t//console.log(\"createNode ::: \", source, nodes, copy, target, dropIndex);\r\n\tif(target){\r\n\t\tvar widget = _createWidget(nodes);\r\n\t\tdojox.mdnd.areaManager().addDragItem(target, widget.domNode, dropIndex);\r\n\t}\r\n};\r\n/*\r\n * Widget Factory : Create a Dijit Widget with the type of draggedNode.\r\n */\r\nfunction _createWidget(/*Array*/nodes){\r\n\tvar type = nodes[0].getAttribute(\"dndType\");\r\n\tvar widget;\r\n\tswitch (type) {\r\n\t\tcase \"ContentPane\":\r\n\t\t\twidget = new dijit.layout.ContentPane();\r\n\t\t\tdojo.addClass(widget.domNode, 'cpane');\r\n\t\t\twidget.set('dndType','ContentPane');\r\n\t\t\tbreak;\r\n\t\tcase \"Portlet\":\r\n\t\t\twidget = new dojox.widget.Portlet({\r\n\t\t\t\ttitle: \"portlet\",\r\n\t\t\t\tclosable : true,\r\n\t\t\t\tdndType:\"Portlet\"\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\t\tcase \"TitlePane\":\r\n\t\t\twidget = new dijit.TitlePane({\r\n\t\t\t\ttitle: \"TitlePane\",\r\n\t\t\t\tdndType:\"TitlePane\"\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\twidget = new dijit.layout.ContentPane();\r\n\t\t\tdojo.addClass(widget.domNode, 'cpane');\r\n\t\t\twidget.set('dndType','ContentPane');\r\n\t\t\tbreak;\r\n\t}\r\n\twidget.set('content','Lorem ipsum dolor sit amet, consectetuer adipiscing elit.');\r\n\twidget.startup();\r\n\treturn widget;\r\n};\r\n\r\n/**\r\n * Adapter functions\r\n */\r\n\r\n/*Function: onOver\r\n * Call when the OAF draggedNode enters in a dojo target registered by the oafDndAdapter\r\n */\r\nfunction onOver(target, type, draggedNode, accept){\r\n\t//console.info(\"onOver ::: \", target, type, draggedNode);\r\n\t// add the dropIndicator style for the tab of tabContainer.\r\n\tswitch(type){\r\n\t\tcase \"dijit.layout.TabContainer\" :\r\n\t\t\tif (accept){\r\n\t\t\t\tdojo.addClass(target, \"dndOver\");\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tdojo.addClass(target, \"dndOverNotAccepted\");\r\n\t\t\t}\r\n\t\tbreak;\r\n\t}\r\n};\r\n\r\n/*Function: onOut\r\n * Call when the OAF draggedNode exits of a dojo target registered by the oafDndAdapter\r\n */\r\nfunction onOut(target, type, draggedNode, accept){\r\n\t//console.info(\"onOut ::: \", target, type, draggedNode);\r\n\t// remove the dropIndicator style for the tab of tabContainer.\r\n\tswitch(type){\r\n\t\tcase \"dijit.layout.TabContainer\" :\r\n\t\t\tdojo.removeClass(target, \"dndOver\");\r\n\t\t\tdojo.removeClass(target, \"dndOverNotAccepted\");\r\n\t\tbreak;\r\n\t}\r\n};\r\n\r\nfunction onDrop(node, target, type){\r\n\t//console.log(\"onDrop ::: \", node, target, type);\r\n\tswitch(type){\r\n\t\tcase \"dijit.layout.TabContainer\" :\r\n\t\t\tgridContainer.addChild(dijit.byNode(node), 0, 0); // add in first column / first element\r\n\t\t\tdojo.removeClass(target, \"dndOver\");\r\n\t\t\tdojo.removeClass(target, \"dndOverNotAccepted\");\r\n\t\tbreak;\r\n\t}\r\n};\r\n\r\nfunction refresh(){\r\n\t//console.info(\"refresh\");\r\n\tdojox.mdnd.adapter.dndToDojo().refresh();\r\n};\r\n\r\n"]}