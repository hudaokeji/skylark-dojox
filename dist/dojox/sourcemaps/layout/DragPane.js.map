{"version":3,"sources":["layout/DragPane.js"],"names":["define","declare","Widget","htmlUtil","domStyle","invert","postCreate","this","connect","domNode","_down","e","t","preventDefault","set","_x","pageX","_y","pageY","offsetLeft","clientWidth","offsetTop","clientHeight","setSelectable","_mover","_up","disconnect","_move","mod","scrollTop","scrollLeft"],"mappings":";;;;;;;AAAAA,QAAQ,qBAAsB,gBAAiB,kBAAmB,kBAChE,SAASC,EAASC,EAAQC,EAAUC,GACtC,OAAOH,EAAQ,wBAAyBC,GAYvCG,QAAQ,EAERC,WAAY,WACXC,KAAKC,QAAQD,KAAKE,QAAS,cAAe,SAC1CF,KAAKC,QAAQD,KAAKE,QAAS,eAAgB,OAC3CF,KAAKC,QAAQD,KAAKE,QAAS,YAAa,QAGzCC,MAAO,SAAmBC,GAGzB,IAAIC,EAAIL,KAAKE,QACbE,EAAEE,iBACFT,EAASU,IAAIF,EAAG,SAAU,QAC1BL,KAAKQ,GAAKJ,EAAEK,MACZT,KAAKU,GAAKN,EAAEO,MACPX,KAAKQ,GAAKH,EAAEO,WAAaP,EAAEQ,aAC9Bb,KAAKU,GAAKL,EAAES,UAAYT,EAAEU,eAC3BnB,EAASoB,cAAcX,GAAE,GACzBL,KAAKiB,OAASjB,KAAKC,QAAQI,EAAG,cAAe,WAI/Ca,IAAK,SAAmBd,GAGvBR,EAASoB,cAAchB,KAAKE,SAAQ,GACpCL,EAASU,IAAIP,KAAKE,QAAS,SAAU,WACrCF,KAAKiB,QAAUjB,KAAKmB,WAAWnB,KAAKiB,eAC7BjB,KAAKiB,QAGbG,MAAO,SAAmBhB,GAKzB,IAAIiB,EAAMrB,KAAKF,OAAS,GAAK,EAC7BE,KAAKE,QAAQoB,YAActB,KAAKU,GAAKN,EAAEO,OAASU,EAChDrB,KAAKE,QAAQqB,aAAevB,KAAKQ,GAAKJ,EAAEK,OAASY,EACjDrB,KAAKQ,GAAKJ,EAAEK,MACZT,KAAKU,GAAKN,EAAEO","file":"../../layout/DragPane.js","sourcesContent":["define([\"dojo/_base/declare\", \"dijit/_Widget\", \"dojo/_base/html\", \"dojo/dom-style\"],\r\n  function(declare, Widget, htmlUtil, domStyle){\r\nreturn declare(\"dojox.layout.DragPane\", Widget, {\r\n\t// summary:\r\n\t//\t\tMakes a pane's content draggable by/within it's surface\r\n\t// description:\r\n\t//\t\tA small widget which takes a node with overflow:auto and\r\n\t//\t\tallows dragging to position the content. Useful with images,\r\n\t//\t\tor for just adding \"something\" to a overflow-able div.\r\n\r\n\t// invert: Boolean\r\n\t//\t\tNaturally, the behavior is to invert the axis of the drag.\r\n\t//\t\tSetting invert:false will make the pane drag in the same\r\n\t//\t\tdirection as the mouse.\r\n\tinvert: true,\r\n\t\r\n\tpostCreate: function(){\r\n\t\tthis.connect(this.domNode, \"onmousedown\", \"_down\");\r\n\t\tthis.connect(this.domNode, \"onmouseleave\", \"_up\");\r\n\t\tthis.connect(this.domNode, \"onmouseup\", \"_up\");\r\n\t},\r\n\t\r\n\t_down: function(/*Event*/ e){\r\n\t\t// summary:\r\n\t\t//\t\tmousedown handler, start the dragging\r\n\t\tvar t = this.domNode;\r\n\t\te.preventDefault();\r\n\t\tdomStyle.set(t, \"cursor\", \"move\");\r\n\t\tthis._x = e.pageX;\r\n\t\tthis._y = e.pageY;\r\n\t\tif ((this._x < t.offsetLeft + t.clientWidth) &&\r\n\t\t\t(this._y < t.offsetTop + t.clientHeight)) {\r\n\t\t\thtmlUtil.setSelectable(t,false);\r\n\t\t\tthis._mover = this.connect(t, \"onmousemove\", \"_move\");\r\n\t\t}\r\n\t},\r\n\t\r\n\t_up: function(/*Event*/ e){\r\n\t\t// summary:\r\n\t\t//\t\tmouseup handler, stop the dragging\r\n\t\thtmlUtil.setSelectable(this.domNode,true);\r\n\t\tdomStyle.set(this.domNode, \"cursor\", \"pointer\");\r\n\t\tthis._mover && this.disconnect(this._mover);\r\n\t\tdelete this._mover;\r\n\t},\r\n\t\r\n\t_move: function(/*Event*/ e){\r\n\t\t// summary:\r\n\t\t//\t\tmousemove listener, offset the scroll amount by the delta\r\n\t\t//\t\tsince our last call.\r\n\t\t\r\n\t\tvar mod = this.invert ? 1 : -1;\r\n\t\tthis.domNode.scrollTop += (this._y - e.pageY) * mod;\r\n\t\tthis.domNode.scrollLeft += (this._x - e.pageX) * mod;\r\n\t\tthis._x = e.pageX;\r\n\t\tthis._y = e.pageY;\r\n\t\t\r\n\t}\r\n\t\r\n});\r\n});\r\n"]}