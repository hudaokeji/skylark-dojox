{"version":3,"sources":["rpc/Service.js"],"names":["define","dojo","dojox","declare","constructor","smd","options","url","self","this","processSmd","serviceName","_baseUrl","_Url","isBrowser","location","href","config","baseUrl","_smd","services","pieces","split","current","i","length","_generateService","isString","text","_getText","Error","fromJson","_options","_requestId","method","name","func","hitch","transport","rpc","transportRegistry","match","getExecutor","schema","returns","_schema","servicePath","_service","id","Service","_nextId","_getRequest","args","envDef","envelopeRegistry","envelope","parameters","concat","namedParams","isObject","data","optional","strictParameters","found","j","param","toOrdered","mixin","request","serialize","apply","_envDef","contentType","sync","_sync","headers","target","getTarget","timeout","callbackParamName","rpcObjectParamName","handleAs","preventCache","frameDoc","undefined","_executeMethod","arguments","push","deferred","fire","addBoth","results","deserialize","call","dest","isArray","AdapterRegistry","register","str","objectToQuery","toJson","r","postData","rawXhrPost","xhrGet","indexOf","io","script","get","_contentHandlers","auto","xhr","handlers","retContentType","getResponseHeader","json","javascript","xml"],"mappings":"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","file":"../../rpc/Service.js","sourcesContent":["define(\"dojox/rpc/Service\", [\"dojo\", \"dojox\", \"dojo/AdapterRegistry\", \"dojo/_base/url\"], function(dojo, dojox) {\r\n\r\ndojo.declare(\"dojox.rpc.Service\", null, {\r\n\tconstructor: function(smd, options){\r\n\t\t// summary:\r\n\t\t//\t\tTake a string as a url to retrieve an smd or an object that is an smd or partial smd to use\r\n\t\t//\t\tas a definition for the service\r\n\t\t// description:\r\n\t\t//\t\tdojox.rpc.Service must be loaded prior to any plugin services like dojox.rpc.Rest\r\n\t\t//\t\tdojox.rpc.JsonRpc in order for them to register themselves, otherwise you get\r\n\t\t//\t\ta \"No match found\" error.\r\n\t\t// smd: object\r\n\t\t//\t\tTakes a number of properties as kwArgs for defining the service.  It also\r\n\t\t//\t\taccepts a string.  When passed a string, it is treated as a url from\r\n\t\t//\t\twhich it should synchronously retrieve an smd file.  Otherwise it is a kwArgs\r\n\t\t//\t\tobject.  It accepts serviceUrl, to manually define a url for the rpc service\r\n\t\t//\t\tallowing the rpc system to be used without an smd definition. strictArgChecks\r\n\t\t//\t\tforces the system to verify that the # of arguments provided in a call\r\n\t\t//\t\tmatches those defined in the smd.  smdString allows a developer to pass\r\n\t\t//\t\ta jsonString directly, which will be converted into an object or alternatively\r\n\t\t//\t\tsmdObject is accepts an smdObject directly.\r\n\r\n\t\tvar url;\r\n\t\tvar self = this;\r\n\t\tfunction processSmd(smd){\r\n\t\t\tsmd._baseUrl = new dojo._Url((dojo.isBrowser ? location.href : dojo.config.baseUrl) ,url || '.') + '';\r\n\t\t\tself._smd = smd;\r\n\r\n\t\t\t//generate the methods\r\n \t\t\tfor(var serviceName in self._smd.services){\r\n\t\t\t\tvar pieces = serviceName.split(\".\"); // handle \"namespaced\" services by breaking apart by .\r\n\t\t\t\tvar current = self;\r\n\t\t\t\tfor(var i=0; i< pieces.length-1; i++){\r\n\t\t\t\t\t// create or reuse each object as we go down the chain\r\n\t\t\t\t\tcurrent = current[pieces[i]] || (current[pieces[i]] = {});\r\n\t\t\t\t}\r\n\t\t\t\tcurrent[pieces[pieces.length-1]]=\tself._generateService(serviceName, self._smd.services[serviceName]);\r\n \t\t\t}\r\n\t\t}\r\n\t\tif(smd){\r\n\t\t\t//ifthe arg is a string, we assume it is a url to retrieve an smd definition from\r\n\t\t\tif( (dojo.isString(smd)) || (smd instanceof dojo._Url)){\r\n\t\t\t\tif(smd instanceof dojo._Url){\r\n\t\t\t\t\turl = smd + \"\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\turl = smd;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar text = dojo._getText(url);\r\n\t\t\t\tif(!text){\r\n\t\t\t\t\tthrow new Error(\"Unable to load SMD from \" + smd);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tprocessSmd(dojo.fromJson(text));\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tprocessSmd(smd);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._options = (options ? options : {});\r\n\t\tthis._requestId = 0;\r\n\t},\r\n\r\n\t_generateService: function(serviceName, method){\r\n\t\tif(this[method]){\r\n\t\t\tthrow new Error(\"WARNING: \"+ serviceName+ \" already exists for service. Unable to generate function\");\r\n\t\t}\r\n\t\tmethod.name = serviceName;\r\n\t\tvar func = dojo.hitch(this, \"_executeMethod\",method);\r\n\t\tvar transport = dojox.rpc.transportRegistry.match(method.transport || this._smd.transport);\r\n\t\tif(transport.getExecutor){\r\n\t\t\tfunc = transport.getExecutor(func,method,this);\r\n\t\t}\r\n\t\tvar schema = method.returns || (method._schema = {}); // define the schema\r\n\t\tvar servicePath = '/' + serviceName +'/';\r\n\t\t// schemas are minimally used to track the id prefixes for the different services\r\n\t\tschema._service = func;\r\n\t\tfunc.servicePath = servicePath;\r\n\t\tfunc._schema = schema;\r\n\t\tfunc.id = dojox.rpc.Service._nextId++;\r\n\t\treturn func;\r\n\t},\r\n\t_getRequest: function(method,args){\r\n\t\tvar smd = this._smd;\r\n\t\tvar envDef = dojox.rpc.envelopeRegistry.match(method.envelope || smd.envelope || \"NONE\");\r\n\t\tvar parameters = (method.parameters || []).concat(smd.parameters || []);\r\n\t\tif(envDef.namedParams){\r\n\t\t\t// the serializer is expecting named params\r\n\t\t\tif((args.length==1) && dojo.isObject(args[0])){\r\n\t\t\t\t// looks like we have what we want\r\n\t\t\t\targs = args[0];\r\n\t\t\t}else{\r\n\t\t\t\t// they provided ordered, must convert\r\n\t\t\t\tvar data={};\r\n\t\t\t\tfor(var i=0;i<method.parameters.length;i++){\r\n\t\t\t\t\tif(typeof args[i] != \"undefined\" || !method.parameters[i].optional){\r\n\t\t\t\t\t\tdata[method.parameters[i].name]=args[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\targs = data;\r\n\t\t\t}\r\n\t\t\tif(method.strictParameters||smd.strictParameters){\r\n\t\t\t\t//remove any properties that were not defined\r\n\t\t\t\tfor(i in args){\r\n\t\t\t\t\tvar found=false;\r\n\t\t\t\t\tfor(var j=0; j<parameters.length;j++){\r\n\t\t\t\t\t\tif(parameters[j].name==i){ found=true; }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!found){\r\n\t\t\t\t\t\tdelete args[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\t// setting default values\r\n\t\t\tfor(i=0; i< parameters.length; i++){\r\n\t\t\t\tvar param = parameters[i];\r\n\t\t\t\tif(!param.optional && param.name && !args[param.name]){\r\n\t\t\t\t\tif(param[\"default\"]){\r\n\t\t\t\t\t\targs[param.name] = param[\"default\"];\r\n\t\t\t\t\t}else if(!(param.name in args)){\r\n\t\t\t\t\t\tthrow new Error(\"Required parameter \" + param.name + \" was omitted\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else if(parameters && parameters[0] && parameters[0].name && (args.length==1) && dojo.isObject(args[0])){\r\n\t\t\t// looks like named params, we will convert\r\n\t\t\tif(envDef.namedParams === false){\r\n\t\t\t\t// the serializer is expecting ordered params, must be ordered\r\n\t\t\t\targs = dojox.rpc.toOrdered(parameters, args);\r\n\t\t\t}else{\r\n\t\t\t\t// named is ok\r\n\t\t\t\targs = args[0];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(dojo.isObject(this._options)){\r\n\t\t\targs = dojo.mixin(args, this._options);\r\n\t\t}\r\n\r\n\t\tvar schema = method._schema || method.returns; // serialize with the right schema for the context;\r\n\t\tvar request = envDef.serialize.apply(this, [smd, method, args]);\r\n\t\trequest._envDef = envDef;// save this for executeMethod\r\n\t\tvar contentType = (method.contentType || smd.contentType || request.contentType);\r\n\r\n\t\t// this allows to mandate synchronous behavior from elsewhere when necessary, this may need to be changed to be one-shot in FF3 new sync handling model\r\n\t\treturn dojo.mixin(request, {\r\n\t\t\tsync: dojox.rpc._sync,\r\n\t\t\tcontentType: contentType,\r\n\t\t\theaders: method.headers || smd.headers || request.headers || {},\r\n\t\t\ttarget: request.target || dojox.rpc.getTarget(smd, method),\r\n\t\t\ttransport: method.transport || smd.transport || request.transport,\r\n\t\t\tenvelope: method.envelope || smd.envelope || request.envelope,\r\n\t\t\ttimeout: method.timeout || smd.timeout,\r\n\t\t\tcallbackParamName: method.callbackParamName || smd.callbackParamName,\r\n\t\t\trpcObjectParamName: method.rpcObjectParamName || smd.rpcObjectParamName,\r\n\t\t\tschema: schema,\r\n\t\t\thandleAs: request.handleAs || \"auto\",\r\n\t\t\tpreventCache: method.preventCache || smd.preventCache,\r\n\t\t\tframeDoc: this._options.frameDoc || undefined\r\n\t\t});\r\n\t},\r\n\t_executeMethod: function(method){\r\n\t\tvar args = [];\r\n\t\tvar i;\r\n\t\tfor(i=1; i< arguments.length; i++){\r\n\t\t\targs.push(arguments[i]);\r\n\t\t}\r\n\t\tvar request = this._getRequest(method,args);\r\n\t\tvar deferred = dojox.rpc.transportRegistry.match(request.transport).fire(request);\r\n\r\n\t\tdeferred.addBoth(function(results){\r\n\t\t\treturn request._envDef.deserialize.call(this,results);\r\n\t\t});\r\n\t\treturn deferred;\r\n\t}\r\n});\r\n\r\ndojox.rpc.getTarget = function(smd, method){\r\n\tvar dest=smd._baseUrl;\r\n\tif(smd.target){\r\n\t\tdest = new dojo._Url(dest,smd.target) + '';\r\n\t}\r\n\tif(method.target){\r\n\t\tdest = new dojo._Url(dest,method.target) + '';\r\n\t}\r\n\treturn dest;\r\n};\r\n\r\ndojox.rpc.toOrdered=function(parameters, args){\r\n\tif(dojo.isArray(args)){ return args; }\r\n\tvar data=[];\r\n\tfor(var i=0;i<parameters.length;i++){\r\n\t\tdata.push(args[parameters[i].name]);\r\n\t}\r\n\treturn data;\r\n};\r\n\r\ndojox.rpc.transportRegistry = new dojo.AdapterRegistry(true);\r\ndojox.rpc.envelopeRegistry = new dojo.AdapterRegistry(true);\r\n//Built In Envelopes\r\n\r\ndojox.rpc.envelopeRegistry.register(\r\n\t\"URL\",\r\n\tfunction(str){ return str == \"URL\"; },\r\n\t{\r\n\t\tserialize:function(smd, method, data ){\r\n\t\t\tvar d = dojo.objectToQuery(data);\r\n\t\t\treturn {\r\n\t\t\t\tdata: d,\r\n\t\t\t\ttransport:\"POST\"\r\n\t\t\t};\r\n\t\t},\r\n\t\tdeserialize:function(results){\r\n\t\t\treturn results;\r\n\t\t},\r\n\t\tnamedParams: true\r\n\t}\r\n);\r\n\r\ndojox.rpc.envelopeRegistry.register(\r\n\t\"JSON\",\r\n\tfunction(str){ return str == \"JSON\"; },\r\n\t{\r\n\t\tserialize: function(smd, method, data){\r\n\t\t\tvar d = dojo.toJson(data);\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdata: d,\r\n\t\t\t\thandleAs: 'json',\r\n\t\t\t\tcontentType : 'application/json'\r\n\t\t\t};\r\n\t\t},\r\n\t\tdeserialize: function(results){\r\n\t\t\treturn results;\r\n\t\t}\r\n\t}\r\n);\r\ndojox.rpc.envelopeRegistry.register(\r\n\t\"PATH\",\r\n\tfunction(str){ return str == \"PATH\"; },\r\n\t{\r\n\t\tserialize:function(smd, method, data){\r\n\t\t\tvar i;\r\n\t\t\tvar target = dojox.rpc.getTarget(smd, method);\r\n\t\t\tif(dojo.isArray(data)){\r\n\t\t\t\tfor(i = 0; i < data.length;i++){\r\n\t\t\t\t\ttarget += '/' + data[i];\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tfor(i in data){\r\n\t\t\t\t\ttarget += '/' + i + '/' + data[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdata:'',\r\n\t\t\t\ttarget: target\r\n\t\t\t};\r\n\t\t},\r\n\t\tdeserialize:function(results){\r\n\t\t\treturn results;\r\n\t\t}\r\n\t}\r\n);\r\n\r\n\r\n\r\n//post is registered first because it is the default;\r\ndojox.rpc.transportRegistry.register(\r\n\t\"POST\",\r\n\tfunction(str){ return str == \"POST\"; },\r\n\t{\r\n\t\tfire:function(r){\r\n\t\t\tr.url = r.target;\r\n\t\t\tr.postData = r.data;\r\n\t\t\treturn dojo.rawXhrPost(r);\r\n\t\t}\r\n\t}\r\n);\r\n\r\ndojox.rpc.transportRegistry.register(\r\n\t\"GET\",\r\n\tfunction(str){ return str == \"GET\"; },\r\n\t{\r\n\t\tfire: function(r){\r\n\t\t\tr.url=  r.target + (r.data ? '?' + ((r.rpcObjectParamName) ? r.rpcObjectParamName + '=' : '') + r.data : '');\r\n\t\t\treturn dojo.xhrGet(r);\r\n\t\t}\r\n\t}\r\n);\r\n\r\n\r\n//only works ifyou include dojo.io.script\r\ndojox.rpc.transportRegistry.register(\r\n\t\"JSONP\",\r\n\tfunction(str){ return str == \"JSONP\"; },\r\n\t{\r\n\t\tfire: function(r){\r\n\t\t\tr.url = r.target + ((r.target.indexOf(\"?\") == -1) ? '?' : '&') + ((r.rpcObjectParamName) ? r.rpcObjectParamName + '=' : '') + r.data;\r\n\t\t\tr.callbackParamName = r.callbackParamName || \"callback\";\r\n\t\t\treturn dojo.io.script.get(r);\r\n\t\t}\r\n\t}\r\n);\r\ndojox.rpc.Service._nextId = 1;\r\n\r\ndojo._contentHandlers.auto = function(xhr){\r\n\t// automatically choose the right handler based on the returned content type\r\n\tvar handlers = dojo._contentHandlers;\r\n\tvar retContentType = xhr.getResponseHeader(\"Content-Type\");\r\n\tvar results = !retContentType ? handlers.text(xhr) :\r\n\t\tretContentType.match(/\\/.*json/) ? handlers.json(xhr) :\r\n\t\tretContentType.match(/\\/javascript/) ? handlers.javascript(xhr) :\r\n\t\tretContentType.match(/\\/xml/) ? handlers.xml(xhr) : handlers.text(xhr);\r\n\treturn results;\r\n};\r\n\r\nreturn dojox.rpc.Service;\r\n\r\n});\r\n"]}