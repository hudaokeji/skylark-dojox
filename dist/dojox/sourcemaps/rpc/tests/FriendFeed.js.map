{"version":3,"sources":["rpc/tests/FriendFeed.js"],"names":["dojo","provide","require","declare","name","timeout","constructor","method","parameters","fn","props","_method","_parameters","_test","mixin","this","setUp","service","dojox","rpc","Service","moduleUrl","runTest","t","d","doh","Deferred","addCallback","results","errorCode","errback","Error","callback","tearDown","undefined","register","tests","FFTest","nickname","entries","q","entry_id","length","url","domain","filter","entry","id","num"],"mappings":";;;;;;;AAAAA,KAAKC,QAAQ,8BAEbD,KAAKE,QAAQ,kBACbF,KAAKE,QAAQ,qBAKbF,KAAKG,QAAQ,yBAAyB,MAClCC,KAAM,GACNC,QAAS,IAETC,YAAa,SAASF,EAAMG,EAAQC,EAAYC,GAC5C,IAAIC,GAAUN,KAAMA,EACNO,QAASJ,EACTK,YAAaJ,EACbK,MAAOJ,GAGrB,OADAT,KAAKc,MAAOC,KAAML,GACXK,MAEXC,MAAO,WACHD,KAAKE,QAAU,IAAIC,MAAMC,IAAIC,QAChBpB,KAAKqB,UAAU,uBAAwB,oBAExDC,QAAS,SAAUC,GACf,IAAIC,EAAI,IAAIC,IAAIC,SACPX,KAAKE,QAASF,KAAKJ,SAAWI,KAAKH,aACzCe,YAAaZ,KAAM,SAAUa,GAU5B,OATKA,EAAQC,UACTL,EAAEM,QAAS,IAAIC,MAAM,cAAeH,IAE/Bb,KAAKF,MAAOe,GACbJ,EAAEQ,UAAU,GAEZR,EAAEM,QAAS,IAAIC,MAAM,eAAgBH,IAGtCJ,KAGfS,SAAU,WACNlB,KAAKE,aAAUiB,KAKvBT,IAAIU,SAAS,8BAET,IAAIjB,MAAMC,IAAIiB,MAAMC,OAAO,WACvB,SACEC,SAAU,QACZ,SAAUV,GACN,OAAOA,EAAQW,UAGvB,IAAIrB,MAAMC,IAAIiB,MAAMC,OAAO,YACvB,UACEG,EAAG,QACL,SAAWZ,GACP,OAAOA,EAAQW,UAGvB,IAAIrB,MAAMC,IAAIiB,MAAMC,OAAO,YACvB,SACEI,SAAU,wCACZ,SAAWb,GACT,OAAOA,EAAQW,SAAqC,GAA1BX,EAAQW,QAAQG,SAIhD,IAAIxB,MAAMC,IAAIiB,MAAMC,OAAO,SACvB,OACEM,IAAK,mCACP,SAAUf,GACN,OAAOA,EAAQW,SAAWX,EAAQW,QAAQG,QAAU,IAG5D,IAAIxB,MAAMC,IAAIiB,MAAMC,OAAO,YACvB,UACEO,OAAQ,mBACV,SAAWhB,GACP,OAAOA,EAAQW,SAAWX,EAAQW,QAAQG,QAAS,IAG3D,IAAIxB,MAAMC,IAAIiB,MAAMC,OAAO,yBACvB,SACEC,SAAU,OAAQrB,QAAS,WAC7B,SAAWW,GAIP,OAAqB,GAHV5B,KAAK6C,OAAQjB,EAAQW,QAAS,SAAUO,GAC/C,MAA2B,WAApBA,EAAM7B,QAAQ8B,KAEdL,SAGnB,IAAIxB,MAAMC,IAAIiB,MAAMC,OAAO,qBACvB,SACEC,SAAU,OAAQU,IAAK,IACzB,SAAWpB,GACP,OAAyB,IAAlBA,EAAQc","file":"../../../rpc/tests/FriendFeed.js","sourcesContent":["dojo.provide('dojox.rpc.tests.FriendFeed');\r\n\r\ndojo.require('dojo.io.script');\r\ndojo.require('dojox.rpc.Service');\r\n\r\n(function() {\r\n\r\n// simple class to help write tests...\r\ndojo.declare(\"dojox.rpc.tests.FFTest\",null, {\r\n    name: \"\",\r\n    timeout: 8000,\r\n\r\n    constructor: function(name, method, parameters, fn) {\r\n        var props = { name: name,\r\n                      _method: method,\r\n                      _parameters: parameters,\r\n                      _test: fn\r\n        };\r\n        dojo.mixin( this, props );\r\n        return this;\r\n    },\r\n    setUp: function() {\r\n        this.service = new dojox.rpc.Service(\r\n                     dojo.moduleUrl(\"dojox.rpc.SMDLibrary\", \"friendfeed.smd\"));\r\n    },\r\n    runTest: function( t ) {\r\n        var d = new doh.Deferred();\r\n        var ff = this.service[ this._method ]( this._parameters );\r\n        ff.addCallback( this, function( results ) {\r\n            if ( results.errorCode ) {\r\n                d.errback( new Error(\"Test failed\", results ) );\r\n            } else {\r\n                if ( this._test( results ) )  {\r\n                    d.callback( true );\r\n                } else {\r\n                    d.errback( new Error(\"Test failed \", results ) );\r\n                }\r\n            }\r\n            return d;\r\n        });\r\n    },\r\n    tearDown: function() {\r\n        this.service = undefined;\r\n    }\r\n});\r\n\r\n// test the methods and parameters of the SMD file\r\ndoh.register('dojox.rpc.tests.friendfeed',\r\n    [\r\n    new dojox.rpc.tests.FFTest(\"#1 Users\",\r\n        \"users\",\r\n        { nickname: \"paul\" },\r\n        function( results ) {\r\n            return results.entries;\r\n        }\r\n    ),\r\n    new dojox.rpc.tests.FFTest(\"#2 Search\",\r\n        \"search\",\r\n        { q: \"dojo\" },\r\n        function ( results ) {\r\n            return results.entries;\r\n        }\r\n    ),\r\n    new dojox.rpc.tests.FFTest(\"#3 Domain\",\r\n        \"entry\",\r\n        { entry_id: \"245da66c-d6dd-8a4b-1719-b5bfb1f9d5eb\" },\r\n        function ( results ) {\r\n          return results.entries && results.entries.length == 1;\r\n          // ???: check user info too?\r\n        }\r\n    ),\r\n    new dojox.rpc.tests.FFTest(\"#4 URL\",\r\n        \"url\",\r\n        { url: \"http://blog.medryx.org/tag/doh/\"  },\r\n        function( results ) {\r\n            return results.entries && results.entries.length >= 1;\r\n        }\r\n    ),\r\n    new dojox.rpc.tests.FFTest(\"#5 Domain\",\r\n        \"domain\",\r\n        { domain: \"dojotoolkit.org\" },\r\n        function ( results ) {\r\n            return results.entries && results.entries.length >=1;\r\n        }\r\n    ),\r\n    new dojox.rpc.tests.FFTest(\"#6 Parameter - service\",\r\n        \"users\",\r\n        { nickname: \"paul\", service: \"twitter\" },\r\n        function ( results ) {\r\n            var ent  = dojo.filter( results.entries, function( entry ) {\r\n                return entry.service.id != 'twitter';\r\n            });\r\n            return ent.length == 0;\r\n        }\r\n    ),\r\n    new dojox.rpc.tests.FFTest(\"#7 Parameter - num\",\r\n        \"users\",\r\n        { nickname: \"paul\", num: 42 },\r\n        function ( results ) {\r\n            return results.length == 42;\r\n        }\r\n    )\r\n]);\r\n })();\r\n"]}