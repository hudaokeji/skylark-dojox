{"version":3,"sources":["rpc/tests/stores/JsonRestStore.js"],"names":["dojo","provide","require","dojox","rpc","tests","stores","JsonRestStore","error","t","d","errData","errback","testServices","Service","moduleUrl","jsonStore","data","service","jsonRestStore","doh","register","name","timeout","runTest","Deferred","fetch","query","onComplete","items","request","is","length","callback","onError","partial","item","hasAttribute","getValues","isItem","now","Date","getTime","setValue","foo","obj","save","updated","testArray","newObject","push","deleteItem","parent","sort","obj1","obj2","unsetAttribute","getValue","undefined","revert","reverse","unshift","pop","onSave","count","onBegin","onItem","requestObj","assertTrue","readApi","api","Read","i","toString","charAt"],"mappings":"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","file":"../../../../rpc/tests/stores/JsonRestStore.js","sourcesContent":["dojo.provide(\"dojox.rpc.tests.stores.JsonRestStore\");\r\n\r\ndojo.require(\"dojox.data.JsonRestStore\");\r\ndojo.require(\"dojo.data.api.Read\");\r\ndojo.require(\"dojox.rpc.Service\");\r\n\r\ndojox.rpc.tests.stores.JsonRestStore.error = function(t, d, errData){\r\n\t// summary:\r\n\t//\t\tThe error callback function to be used for all of the tests.\r\n\td.errback(errData);\r\n}\r\nvar testServices = new dojox.rpc.Service(dojo.moduleUrl(\"dojox.rpc.tests.resources\", \"test.smd\"));\r\nvar jsonStore = new dojox.data.JsonRestStore({service:testServices.jsonRestStore});\r\n\r\ndoh.register(\"dojox.rpc.tests.stores.JsonRestStore\",\r\n\t[\r\n\t\t{\r\n\t\t\tname: \"Fetch some items\",\r\n\t\t\ttimeout:\t10000, //10 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of a basic fetch on JsonRestStore of a simple query.\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tjsonStore.fetch({query:\"query\",\r\n\t\t\t\t\tonComplete: function(items, request){\r\n\t\t\t\t\t\tt.is(4, items.length);\r\n\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonError: dojo.partial(dojox.rpc.tests.stores.JsonRestStore.error, doh, d)});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"fetch by id\",\r\n\t\t\ttimeout:\t10000, //10 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of a basic fetch on JsonRestStore of a single item.\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tjsonStore.fetch({query:\"obj1\",\r\n\t\t\t\t\tonComplete: function(item, request){\r\n\t\t\t\t\t\tt.is(\"Object 1\", item.name);\r\n\t\t\t\t\t\tt.t(jsonStore.hasAttribute(item,\"name\"));\r\n\t\t\t\t\t\tt.is(jsonStore.getValues(item,\"name\").length,1);\r\n\t\t\t\t\t\tt.t(jsonStore.isItem(item));\r\n\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonError: dojo.partial(dojox.rpc.tests.stores.JsonRestStore.error, doh, d)});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Modify,save, check by id\",\r\n\t\t\ttimeout:\t10000, //10 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tFetch an item from a query, modify and save it, and check to see if it was modified correctly\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tjsonStore.fetch({query:\"query\",\r\n\t\t\t\t\tonComplete: function(items, request){\r\n\t\t\t\t\t\tvar now = new Date().getTime();\r\n\t\t\t\t\t\tjsonStore.setValue(items[0],\"updated\",now);\r\n\t\t\t\t\t\tjsonStore.setValue(items[0],\"obj\",{foo:'bar'});\r\n\t\t\t\t\t\tjsonStore.setValue(items[0],\"obj dup\",items[0].obj);\r\n\t\t\t\t\t\tjsonStore.setValue(items[0],\"testArray\",[1,2,3,4]);\r\n\t\t\t\t\t\tjsonStore.save();\r\n\t\t\t\t\t\tjsonStore.fetch({query:\"obj1\",\r\n\t\t\t\t\t\t\tonComplete: function(item, request){\r\n\t\t\t\t\t\t\t\tt.is(\"Object 1\", item.name);\r\n\t\t\t\t\t\t\t\tt.is(now, item.updated);\r\n\t\t\t\t\t\t\t\tt.is(\"bar\", item.obj.foo);\r\n\t\t\t\t\t\t\t\tt.is(item.obj, item['obj dup']);\r\n\t\t\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tonError: dojo.partial(dojox.rpc.tests.stores.JsonRestStore.error, doh, d)});\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonError: dojo.partial(dojox.rpc.tests.stores.JsonRestStore.error, doh, d)});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Post, delete, and put\",\r\n\t\t\ttimeout:\t10000, //10 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tappend/post an item, delete it, sort the lists, resort the list, saving each time.\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tjsonStore.fetch({query:\"obj1\",\r\n\t\t\t\t\tonComplete: function(item, request){\r\n\t\t\t\t\t\tvar now = new Date().getTime();\r\n\t\t\t\t\t\tvar testArray = item.testArray;\r\n\t\t\t\t\t\tvar newObject = {\"name\":\"new object\"};\r\n\t\t\t\t\t\ttestArray.push(newObject);\r\n\t\t\t\t\t\tjsonStore.save();\r\n\t\t\t\t\t\tjsonStore.deleteItem(newObject,{parent:testArray});\r\n\t\t\t\t\t\tjsonStore.save();\r\n\t\t\t\t\t\ttestArray.sort(function(obj1,obj2) { return obj1 < obj2; });\r\n\t\t\t\t\t\tjsonStore.save();\r\n\t\t\t\t\t\ttestArray.sort(function(obj1,obj2) { return obj1 > obj2; });\r\n\t\t\t\t\t\tjsonStore.save();\r\n\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonError: dojo.partial(dojox.rpc.tests.stores.JsonRestStore.error, doh, d)});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Revert\",\r\n\t\t\ttimeout:\t10000, //10 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tappend/post an item, delete it, sort the lists, resort the list, saving each time.\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tjsonStore.fetch({query:\"obj1\",\r\n\t\t\t\t\tonComplete: function(item, request){\r\n\t\t\t\t\t\tjsonStore.setValue(item,\"name\",\"new name\");\r\n\t\t\t\t\t\tjsonStore.setValue(item,\"newProp\",\"new value\");\r\n\t\t\t\t\t\tjsonStore.unsetAttribute(item,\"updated\");\r\n\t\t\t\t\t\tt.is(jsonStore.getValue(item,\"name\"),\"new name\");\r\n\t\t\t\t\t\tt.is(jsonStore.getValue(item,\"newProp\"),\"new value\");\r\n\t\t\t\t\t\tt.is(jsonStore.getValue(item,\"updated\"),undefined);\r\n\t\t\t\t\t\tjsonStore.revert();\r\n\t\t\t\t\t\tt.is(jsonStore.getValue(item,\"name\"),\"Object 1\");\r\n\t\t\t\t\t\tt.is(jsonStore.getValue(item,\"newProp\"),undefined);\r\n\t\t\t\t\t\tt.t(typeof jsonStore.getValue(item,\"updated\") == 'number');\r\n\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonError: dojo.partial(dojox.rpc.tests.stores.JsonRestStore.error, doh, d)});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Lazy loading\",\r\n\t\t\ttimeout:\t10000, //10 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\ttest lazy loading\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tjsonStore.fetch({query:\"query\",\r\n\t\t\t\t\tonComplete: function(items, request){\r\n\t\t\t\t\t\t/*var item = jsonStore.getValue(items,2); // sync lazy loading\r\n\t\t\t\t\t\tt.is(item.name == 'Object 3');*/\r\n\t\t\t\t\t\tjsonStore.getValue(items,3,function(item) { // async lazy loading\r\n\t\t\t\t\t\t\tt.is(item.name,'Object 4');\r\n\t\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonError: dojo.partial(dojox.rpc.tests.stores.JsonRestStore.error, doh, d)});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Array manipulation\",\r\n\t\t\ttimeout:\t10000, //10 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\ttest array manipulation\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tjsonStore.fetch({query:\"obj1\",\r\n\t\t\t\t\tonComplete: function(item, request){\r\n\t\t\t\t\t\tvar testArray = item.testArray;\r\n\t\t\t\t\t\ttestArray.reverse();\r\n\t\t\t\t\t\ttestArray.unshift(testArray.pop());\r\n\t\t\t\t\t\tjsonStore.onSave = function(data) {\r\n\t\t\t\t\t\t\tt.is(data.length,1);\r\n\t\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t\t\tjsonStore.onSave = function(){};\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tjsonStore.save();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonError: dojo.partial(dojox.rpc.tests.stores.JsonRestStore.error, doh, d)});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t{\r\n\t\t\tname: \"ReadAPI:  Fetch_20_Streaming\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Json can sometimes be slow.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tfetching with paging\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tvar count = 0;\r\n\r\n\t\t\t\tfunction onItem(item, requestObj){\r\n\t\t\t\t  t.assertTrue(typeof item == 'number');\r\n\t\t\t\t  count++;\r\n\t\t\t\t}\r\n\t\t\t\tfunction onComplete(items, request){\r\n\t\t\t\t\tt.is(5, count);\r\n\t\t\t\t\t\r\n\t\t\t\t\tt.is(null, items);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\t//Get everything...\r\n\t\t\t\tjsonStore.fetch({\r\n\t\t\t\t\tquery: \"bigQuery\",\r\n\t\t\t\t\tonBegin: null,\r\n\t\t\t\t\tcount: 5,\r\n\t\t\t\t\tonItem: onItem,\r\n\t\t\t\t\tonComplete: onComplete,\r\n\t\t\t\t\tonError: dojo.partial(dojox.rpc.tests.stores.JsonRestStore.error, t, d)\r\n\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\tfunction testReadAPI_functionConformance(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test read API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test read API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\r\n\t\t\tvar readApi = new dojo.data.api.Read();\r\n\t\t\tvar passed = true;\r\n\r\n\t\t\tfor(i in readApi){\r\n\t\t\t\tif(i.toString().charAt(0) !== '_')\r\n\t\t\t\t{\r\n\t\t\t\t\tvar member = readApi[i];\r\n\t\t\t\t\t//Check that all the 'Read' defined functions exist on the test store.\r\n\t\t\t\t\tif(typeof member === \"function\"){\r\n\t\t\t\t\t\tvar testStoreMember = jsonStore\t[i];\r\n\t\t\t\t\t\tif(!(typeof testStoreMember === \"function\")){\r\n\t\t\t\t\t\t\tpassed = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n);\r\n\r\n"]}