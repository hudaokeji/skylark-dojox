{"version":3,"sources":["treemap/TreeMap.js"],"names":["define","arr","lang","declare","event","Color","touch","when","on","query","domConstruct","domGeom","domClass","domStyle","utils","_WidgetBase","_Invalidating","Selection","has","baseClass","store","queryOptions","itemToRenderer","_dataChanged","rootItem","_rootItemChanged","tooltipAttr","areaAttr","_areaChanged","labelAttr","labelThreshold","NaN","colorAttr","colorModel","_coloringChanged","groupAttrs","groupFuncs","_groupFuncs","_groupingChanged","constructor","this","invalidatingProperties","getIdentity","item","__treeID","resize","box","setMarginBox","domNode","invalidateRendering","postCreate","inherited","arguments","own","hitch","_onMouseOver","_onMouseOut","release","_onMouseUp","setAttribute","buildRendering","refreshRendering","forceCreate","_set","_updateTreeMapHierarchy","_data","initialize","colorFunc","_removeAreaForGroup","undefined","_items","empty","rootParentItem","rootItemRenderer","_getRenderer","_isLeaf","parentItem","getMarginBox","_buildRenderer","x","l","y","t","w","h","_buildChildrenRenderers","__treeRoot","children","_setRootItemAttr","value","_setStoreAttr","r","_observeHandler","remove","results","observe","_updateItem","_initItems","items","previousIndex","newIndex","splice","_setGroupAttrsAttr","map","attr","_setGroupFuncsAttr","_setAreaAttrAttr","areaFunc","length","parseFloat","_setAreaFuncAttr","labelFunc","label","toString","tooltipFunc","tooltip","_setColorModelAttr","_setColorAttrAttr","color","_setColorFuncAttr","createRenderer","level","kind","div","create","set","styleRenderer","renderer","getColorForItem","toHex","getLabelForItem","isNaN","innerHTML","group","_getAreaForItem","__treeValue","i","area","_computeAreaForItem","getColor","__treeName","delta","anim","rectangle","rectangles","solve","isLeftToRight","j","_isRoot","parent","container","child","rect","isLeaf","_updateLeafRenderer","_updateGroupRenderer","updateRenderers","Math","floor","place","getContentBox","_layoutGroupContent","onRendererUpdated","width","height","header","content","add","_updateHeaderRenderer","_updateGroupContentRenderer","title","_getRendererFromTarget","target","parentNode","e","_hoveredItem","onItemRollOver","triggerEvent","onItemRollOut","selectFromEvent","isArray","selected","isItemSelected","ie","previousSibling","rStyle","get","contains","position","overflow","bWidth","parseInt","left","top","removeChild"],"mappings":";;;;;;;AAAAA,QAAQ,mBAAoB,kBAAmB,qBAAsB,mBAAoB,mBAAoB,aAC3G,YAAa,UAAW,aAAc,qBAAsB,oBAAqB,iBAAkB,iBACnG,WAAY,oBAAqB,6BAA8B,yBAC/D,mBAAoB,cACrB,SAASC,EAAKC,EAAMC,EAASC,EAAOC,EAAOC,EAAOC,EAAMC,EAAIC,EAAOC,EAAcC,EAASC,EAAUC,EACnGC,EAAOC,EAAaC,EAAeC,EAAWC,GAE/C,OAAOf,EAAQ,yBAA0BY,EAAaC,EAAeC,IAIpEE,UAAW,eAIXC,MAAO,KAIPX,SAIAY,aAAc,KAIdC,eAAgB,KAGhBC,cAAc,EAMdC,SAAU,KACVC,kBAAkB,EAKlBC,YAAa,GAKbC,SAAU,GACVC,cAAc,EAKdC,UAAW,QAOXC,eAAgBC,IAKhBC,UAAW,GAIXC,WAAY,KACZC,kBAAkB,EAKlBC,cAMAC,WAAY,KAENC,YAAa,KACnBC,kBAAkB,EAElBC,YAAa,WACZC,KAAKlB,kBACLkB,KAAKC,wBAA2B,aAAc,aAAc,aAAc,WAAY,WACrF,YAAa,YAAa,iBAAkB,cAAe,cAC3D,YAAa,YAAa,aAG5BC,YAAa,SAASC,GACrB,OAAOA,EAAKC,SAASD,EAAKC,SAASJ,KAAKpB,MAAMsB,YAAYC,IAG3DE,OAAQ,SAASC,GACbA,IACFnC,EAAQoC,aAAaP,KAAKQ,QAASF,GACnCN,KAAKS,wBAIPC,WAAY,WACXV,KAAKW,UAAUC,WACfZ,KAAKa,IAAI7C,EAAGgC,KAAKQ,QAAS,YAAa9C,EAAKoD,MAAMd,KAAMA,KAAKe,gBAC7Df,KAAKa,IAAI7C,EAAGgC,KAAKQ,QAAS,WAAY9C,EAAKoD,MAAMd,KAAMA,KAAKgB,eAC5DhB,KAAKa,IAAI7C,EAAGgC,KAAKQ,QAAS1C,EAAMmD,QAASvD,EAAKoD,MAAMd,KAAMA,KAAKkB,cAC/DlB,KAAKQ,QAAQW,aAAa,OAAQ,gBAClCnB,KAAKQ,QAAQW,aAAa,aAAc,YAGzCC,eAAgB,WACfpB,KAAKW,UAAUC,WACfZ,KAAKqB,oBAGNA,iBAAkB,WACjB,IAAIC,GAAc,EAkClB,GAhCGtB,KAAKjB,eACPiB,KAAKjB,cAAe,EACpBiB,KAAKF,kBAAmB,EACxBE,KAAKN,kBAAmB,GAGtBM,KAAKF,mBACPE,KAAKF,kBAAmB,EACxBE,KAAKuB,KAAK,WAAY,MACtBvB,KAAKwB,0BACLF,GAAc,GAGZtB,KAAKf,mBACPe,KAAKf,kBAAmB,EACxBqC,GAAc,GAGZtB,KAAKN,mBACPM,KAAKN,kBAAmB,EACF,MAAnBM,KAAKP,YAAoC,MAAdO,KAAKyB,OAAiBzB,KAAKP,WAAWiC,YACnE1B,KAAKP,WAAWiC,WAAW1B,KAAKyB,MAAO/D,EAAKoD,MAAMd,KAAM,SAASG,GAChE,OAAOH,KAAK2B,UAAUxB,EAAMH,KAAKpB,WAKjCoB,KAAKZ,eACPY,KAAKZ,cAAe,EACpBY,KAAK4B,4BAGaC,GAAhB7B,KAAKQ,SAAuC,MAAfR,KAAK8B,OAArC,CAIGR,GACFpD,EAAa6D,MAAM/B,KAAKQ,SAGzB,IAA8BwB,EAA1BhD,EAAWgB,KAAKhB,SAEpB,GAAe,MAAZA,EAAiB,CACnB,IAAIiD,EAAmBjC,KAAKkC,aAAalD,GACtCiD,IACCjC,KAAKmC,QAAQnD,KACfA,EAAWiD,EAAiBG,YAE7BJ,EAAiBC,EAAiBG,YAIpC,IAAI9B,EAAMnC,EAAQkE,aAAarC,KAAKQ,SACrB,MAAZxB,EACFgB,KAAKsC,eAAetC,KAAKQ,QAASwB,EAAgBhD,GACjDuD,EAAGjC,EAAIkC,EAAGC,EAAGnC,EAAIoC,EAAGC,EAAGrC,EAAIqC,EAAGC,EAAGtC,EAAIsC,GACnC,EAAGtB,GAENtB,KAAK6C,wBAAwB7C,KAAKQ,QAASxB,IAAoB8D,YAAY,EAAMC,SAAW/C,KAAK8B,QAChG,EAAGR,EAAahB,KAInB0C,iBAAkB,SAASC,GAC1BjD,KAAKf,kBAAmB,EACxBe,KAAKuB,KAAK,WAAY0B,IAGvBC,cAAe,SAASD,GACvB,IAAIE,EAKJ,GAJGnD,KAAKoD,kBACPpD,KAAKoD,gBAAgBC,SACrBrD,KAAKoD,gBAAkB,MAEZ,MAATH,EAAc,CAChB,IAAIK,EAAUL,EAAMhF,MAAM+B,KAAK/B,MAAO+B,KAAKnB,cACxCyE,EAAQC,UAEVvD,KAAKoD,gBAAkBE,EAAQC,QAAQ7F,EAAKoD,MAAMd,KAAMA,KAAKwD,cAAc,IAE5EL,EAAIpF,EAAKuF,EAAS5F,EAAKoD,MAAMd,KAAMA,KAAKyD,kBAExCN,EAAInD,KAAKyD,eAGV,OADAzD,KAAKuB,KAAK,QAAS0B,GACZE,GAGRM,WAAY,SAASC,GAIpB,OAHA1D,KAAKjB,cAAe,EACpBiB,KAAKyB,MAAQiC,EACb1D,KAAKS,sBACEiD,GAGRF,YAAa,SAASrD,EAAMwD,EAAeC,IACvB,GAAhBD,EACCC,GAAUD,EAEZ3D,KAAKyB,MAAMoC,OAAOF,EAAe,GAIjC3D,KAAKyB,MAAMmC,GAAYzD,GAEL,GAAXyD,GAER5D,KAAKyB,MAAMoC,OAAOD,EAAU,EAAGzD,GAGhCH,KAAKjB,cAAe,EACpBiB,KAAKS,uBAGNqD,mBAAoB,SAASb,GAC5BjD,KAAKF,kBAAmB,EACF,MAAnBE,KAAKJ,aAENI,KAAKH,YADK,MAARoD,EACiBxF,EAAIsG,IAAId,EAAO,SAASe,GAC1C,OAAO,SAAS7D,GACf,OAAOA,EAAK6D,MAIK,MAGrBhE,KAAKuB,KAAK,aAAc0B,IAGnBgB,mBAAoB,SAAShB,GAClCjD,KAAKF,kBAAmB,EACxBE,KAAKuB,KAAK,aAAcvB,KAAKH,YAAcoD,GAC/B,MAATA,GAAoC,MAAnBjD,KAAKL,aACxBK,KAAKH,YAAcpC,EAAIsG,IAAI/D,KAAKL,WAAY,SAASqE,GACpD,OAAO,SAAS7D,GACf,OAAOA,EAAK6D,QAMhBE,iBAAkB,SAASjB,GAC1BjD,KAAKZ,cAAe,EACpBY,KAAKuB,KAAK,WAAY0B,IAMvBkB,SAAU,SAAoBhE,EAA+BvB,GAC5D,OAAQoB,KAAKb,UAAYa,KAAKb,SAASiF,OAAS,EAAGC,WAAWlE,EAAKH,KAAKb,WAAW,GAGpFmF,iBAAkB,SAASrB,GAC1BjD,KAAKZ,cAAe,EACpBY,KAAKuB,KAAK,WAAY0B,IAMvBsB,UAAW,SAAoBpE,EAA+BvB,GAC7D,IAAI4F,EAASxE,KAAKX,WAAaW,KAAKX,UAAU+E,OAAS,EAAGjE,EAAKH,KAAKX,WAAW,KAC/E,OAAOmF,EAAMA,EAAMC,WAAW,MAM/BC,YAAa,SAAoBvE,EAA+BvB,GAC/D,IAAI+F,EAAW3E,KAAKd,aAAec,KAAKd,YAAYkF,OAAS,EAAGjE,EAAKH,KAAKd,aAAa,KACvF,OAAOyF,EAAQA,EAAQF,WAAW,MAGnCG,mBAAoB,SAAS3B,GAC5BjD,KAAKN,kBAAmB,EACxBM,KAAKuB,KAAK,aAAc0B,IAGzB4B,kBAAmB,SAAS5B,GAC3BjD,KAAKN,kBAAmB,EACxBM,KAAKuB,KAAK,YAAa0B,IAQxBtB,UAAW,SAAoBxB,EAA+BvB,GAC7D,IAAIkG,EAAS9E,KAAKR,WAAaQ,KAAKR,UAAU4E,OAAS,EAAGjE,EAAKH,KAAKR,WAAW,EAI/E,OAHY,MAATsF,IACFA,EAAQ,GAEFT,WAAWS,IAGnBC,kBAAmB,SAAS9B,GAC3BjD,KAAKN,kBAAmB,EACxBM,KAAKuB,KAAK,YAAa0B,IAGxB+B,eAAgB,SAAS7E,EAAM8E,EAAOC,GAerC,IAAIC,EAAMjH,EAAakH,OAAO,OAK9B,MAJW,UAARF,IACF7G,EAASgH,IAAIF,EAAK,WAAY,UAC9B9G,EAASgH,IAAIF,EAAK,WAAY,aAExBA,GAGRG,cAAe,SAASC,EAAUpF,EAAM8E,EAAOC,GAe9C,OAAOA,GACN,IAAK,OACJ7G,EAASgH,IAAIE,EAAU,aAAcvF,KAAKwF,gBAAgBrF,GAAMsF,SACjE,IAAK,SACJ,IAAIjB,EAAQxE,KAAK0F,gBAAgBvF,GAC9BqE,IAAUmB,MAAM3F,KAAKV,iBAAmB2F,EAAQjF,KAAKV,gBACvDiG,EAASK,UAAYpB,EAErBtG,EAAa6D,MAAMwD,KAQvB/D,wBAAyB,WACP,MAAdxB,KAAKyB,QAGe,MAApBzB,KAAKH,aAAuBG,KAAKH,YAAYuE,OAAS,EACxDpE,KAAK8B,OAASxD,EAAMuH,MAAM7F,KAAKyB,MAAOzB,KAAKH,YAAanC,EAAKoD,MAAMd,KAAMA,KAAK8F,kBAAkB/C,SAEhG/C,KAAK8B,OAAS9B,KAAKyB,QAIrBG,oBAAqB,SAASzB,GAC7B,IAAI4C,EACJ,GAAW,MAAR5C,EAAa,CACf,IAAGA,EAAK4F,YAKP,cAJO5F,EAAK4F,YACZhD,EAAW5C,EAAK4C,cAMjBA,EAAW/C,KAAK8B,OAEjB,GAAGiB,EACF,IAAI,IAAIiD,EAAI,EAAGA,EAAIjD,EAASqB,SAAU4B,EACrChG,KAAK4B,oBAAoBmB,EAASiD,KAKrCF,gBAAiB,SAAS3F,GACzB,IAAI8F,EAAOjG,KAAKmE,SAAShE,EAAMH,KAAKpB,OACpC,OAAO+G,MAAMM,GAAQ,EAAIA,GAG1BC,oBAAqB,SAAS/F,GAC7B,IAAI8C,EACJ,GAAG9C,EAAKC,UAEP,KADA6C,EAAQ9C,EAAK4F,aACH,CACT9C,EAAQ,EAER,IADA,IAAIF,EAAW5C,EAAK4C,SACZiD,EAAI,EAAGA,EAAIjD,EAASqB,SAAU4B,EACrC/C,GAASjD,KAAKkG,oBAAoBnD,EAASiD,IAE5C7F,EAAK4F,YAAc9C,QAGpBA,EAAQjD,KAAK8F,gBAAgB3F,GAE9B,OAAO8C,GAGRuC,gBAAiB,SAASrF,GAQzB,IAAI8C,EAAQjD,KAAK2B,UAAUxB,EAAMH,KAAKpB,OACtC,OAAsB,MAAnBoB,KAAKP,WACAO,KAAKP,WAAW0G,SAASlD,GAEzB,IAAIpF,EAAMoF,IAInByC,gBAAiB,SAASvF,GAOzB,OAAOA,EAAKiG,WAAWjG,EAAKiG,WAAWpG,KAAKuE,UAAUpE,EAAMH,KAAKpB,QAGlEiE,wBAAyB,SAASrC,EAASL,EAAM8E,EAAO3D,EAAa+E,EAAOC,GAC3E,IAgBIC,EAhBAxD,EAAW5C,EAAK4C,SAChBzC,EAAMnC,EAAQkE,aAAa7B,GAK3BgG,EAHWlI,EAAMmI,MAAM1D,EAAUzC,EAAIqC,EAAGrC,EAAIsC,EAAGlF,EAAKoD,MAAMd,KAC5DA,KAAKkG,sBAAuBlG,KAAK0G,iBAETF,WAEvBH,IACFG,EAAa/I,EAAIsG,IAAIyC,EAAY,SAASrG,GAGzC,OAFAA,EAAKoC,GAAK8D,EAAM7D,EAChBrC,EAAKsC,GAAK4D,EAAM3D,EACTvC,KAKT,IAAI,IAAIwG,EAAI,EAAGA,EAAI5D,EAASqB,SAAUuC,EACrCJ,EAAYC,EAAWG,GACvB3G,KAAKsC,eAAe9B,EAASL,EAAM4C,EAAS4D,GAAIJ,EAAWtB,EAAO3D,EAAagF,IAIjFnE,QAAS,SAAShC,GACjB,OAAQA,EAAK4C,UAGd6D,QAAS,SAASzG,GACjB,OAAOA,EAAK2C,YAGbZ,aAAc,SAAS/B,EAAMmG,EAAMO,GAClC,GAAGP,EAGF,IAAI,IAAIN,EAAI,EAAGA,EAAIa,EAAO9D,SAASqB,SAAU4B,EACtC,GAAGa,EAAO9D,SAASiD,GAAG7F,MAAQA,EAC1B,OAAO0G,EAAO9D,SAASiD,GAInC,OAAOhG,KAAKlB,eAAekB,KAAKE,YAAYC,KAG7CmC,eAAgB,SAASwE,EAAWD,EAAQE,EAAOC,EAAM/B,EAAO3D,EAAagF,GAC5E,IAAIW,EAASjH,KAAKmC,QAAQ4E,GACtBxB,EAAYjE,EAA0D,KAA5CtB,KAAKkC,aAAa6E,EAAOT,EAAMQ,GAC7DvB,EAAW0B,EAASjH,KAAKkH,oBAAoB3B,EAAUwB,EAAO9B,GAASjF,KAAKmH,qBAAqB5B,EAC/FwB,EAAO9B,GACN3D,IACFiE,EAASN,MAAQA,EACjBM,EAASpF,KAAO4G,EAChBxB,EAASnD,WAAayE,EACtB7G,KAAKlB,eAAekB,KAAKE,YAAY6G,IAAUxB,EAE/CvF,KAAKoH,gBAAgBL,IAMtB,IAAIxE,EAAI8E,KAAKC,MAAMN,EAAKzE,GACpBE,EAAI4E,KAAKC,MAAMN,EAAKvE,GACpBE,EAAI0E,KAAKC,MAAMN,EAAKzE,EAAIyE,EAAKrE,EAAI,OAAiBJ,EAClDK,EAAIyE,KAAKC,MAAMN,EAAKvE,EAAIuE,EAAKpE,EAAI,OAAiBH,EAYtD,GARGnB,GACFpD,EAAaqJ,MAAMhC,EAAUuB,GAG9B3I,EAAQoC,aAAagF,GACpB/C,EAAGD,EAAGG,EAAGD,EAAGE,EAAGA,EAAGC,EAAGA,KAGlBqE,EAAO,CACV,IAAI3G,EAAMnC,EAAQqJ,cAAcjC,GAChCvF,KAAKyH,oBAAoBlC,EAAUjF,EAAIqC,EAAGrC,EAAIsC,EAAGqC,EAAQ,EAAG3D,EAAagF,GAG1EtG,KAAK0H,mBAAoBnC,SAAUA,EAAUpF,KAAM4G,EAAO7B,KAAM+B,EAAO,OAAO,QAAShC,MAAOA,KAG/FwC,oBAAqB,SAASlC,EAAUoC,EAAOC,EAAQ3C,EAAO3D,EAAagF,GAC1E,IAAIuB,EAAS5J,EAAM,sBAAuBsH,GAAU,GAChDuC,EAAU7J,EAAM,4BAA6BsH,GAAU,GAC3D,GAAa,MAAVsC,GAA6B,MAAXC,EAArB,CAIA,IAAIxH,EAAMnC,EAAQkE,aAAawF,GAI5BvH,EAAIsC,EAAIgF,GAGVtH,EAAIsC,EAAIgF,EACRvJ,EAASgH,IAAIyC,EAAS,UAAW,UAEjCzJ,EAASgH,IAAIyC,EAAS,UAAW,SACjC3J,EAAQoC,aAAauH,GACpBtF,EAAG,EAAGE,EAAGpC,EAAIsC,EAAGD,EAAGgF,EAAO/E,EAAIgF,EAAStH,EAAIsC,IAE5C5C,KAAK6C,wBAAwBiF,EAASvC,EAASpF,KAAM8E,EAAO3D,EAAa,KAAMgF,IAGhFnI,EAAQoC,aAAasH,GACpBrF,EAAG,EAAGE,EAAG,EAAGC,EAAGgF,EAAO/E,EAAGtC,EAAIsC,MAI/BuE,qBAAsB,SAAS5B,EAAUpF,EAAM8E,GAY9C,IAAI3D,EAA0B,MAAZiE,EACH,MAAZA,IACFA,EAAWvF,KAAKgF,eAAe,MAAOC,EAAO,SAC7C7G,EAAS2J,IAAIxC,EAAU,sBAExBvF,KAAKsF,cAAcC,EAAUpF,EAAM8E,EAAO,SAC1C,IAAI4C,EAAS5J,EAAM,sBAAuBsH,GAAU,GACpDsC,EAAS7H,KAAKgI,sBAAsBH,EAAQ1H,EAAM8E,GAC/C3D,GACFpD,EAAaqJ,MAAMM,EAAQtC,GAE5B,IAAIuC,EAAU7J,EAAM,4BAA6BsH,GAAU,GAK3D,OAJAuC,EAAU9H,KAAKiI,4BAA4BH,EAAS3H,EAAM8E,GACvD3D,GACFpD,EAAaqJ,MAAMO,EAASvC,GAEtBA,GAGRyC,sBAAuB,SAASzC,EAAUpF,EAAM8E,GAkB/C,OANe,MAAZM,IACFA,EAAWvF,KAAKgF,eAAe7E,EAAM8E,EAAO,UAC5C7G,EAAS2J,IAAIxC,EAAU,sBACvBnH,EAAS2J,IAAIxC,EAAU,sBAAwBN,IAEhDjF,KAAKsF,cAAcC,EAAUpF,EAAM8E,EAAO,UACnCM,GAGR2B,oBAAqB,SAAS3B,EAAUpF,EAAM8E,GAY9B,MAAZM,IACFA,EAAWvF,KAAKgF,eAAe7E,EAAM8E,EAAO,QAC5C7G,EAAS2J,IAAIxC,EAAU,oBACvBnH,EAAS2J,IAAIxC,EAAU,oBAAsBN,IAE9CjF,KAAKsF,cAAcC,EAAUpF,EAAM8E,EAAO,QAC1C,IAAIN,EAAU3E,KAAK0E,YAAYvE,EAAMH,KAAKpB,OAI1C,OAHG+F,IACFY,EAAS2C,MAAQvD,GAEXY,GAGR0C,4BAA6B,SAAS1C,EAAUpF,EAAM8E,GAkBrD,OANe,MAAZM,IACFA,EAAWvF,KAAKgF,eAAe7E,EAAM8E,EAAO,WAC5C7G,EAAS2J,IAAIxC,EAAU,4BACvBnH,EAAS2J,IAAIxC,EAAU,4BAA8BN,IAEtDjF,KAAKsF,cAAcC,EAAUpF,EAAM8E,EAAO,WACnCM,GAGR4C,uBAAwB,SAASC,GAEhC,IADA,IAAI7C,EAAW6C,EACT7C,GAAYvF,KAAKQ,UAAY+E,EAASpF,MAC3CoF,EAAWA,EAAS8C,WAErB,OAAO9C,GAGRxE,aAAc,SAASuH,GACtB,IAAI/C,EAAWvF,KAAKmI,uBAAuBG,EAAEF,QAC7C,GAAG7C,EAASpF,KAAK,CAChB,IAAIA,EAAOoF,EAASpF,KACpBH,KAAKuI,aAAepI,EACpBH,KAAKoH,gBAAgBjH,GACrBH,KAAKwI,gBAAgBjD,SAAUA,EAAUpF,KAAOA,EAAMsI,aAAcH,MAItEtH,YAAa,SAASsH,GACrB,IAAI/C,EAAWvF,KAAKmI,uBAAuBG,EAAEF,QAC7C,GAAG7C,EAASpF,KAAK,CAChB,IAAIA,EAAOoF,EAASpF,KACpBH,KAAKuI,aAAe,KACpBvI,KAAKoH,gBAAgBjH,GACrBH,KAAK0I,eAAenD,SAAUA,EAAUpF,KAAOA,EAAMsI,aAAcH,MAIrEpH,WAAY,SAASoH,GACpB,IAAI/C,EAAWvF,KAAKmI,uBAAuBG,EAAEF,QAC1C7C,EAASpF,MACXH,KAAK2I,gBAAgBL,EAAG/C,EAASpF,KAAMoF,GAAU,IAKnDmC,kBAAmB,aASnBc,eAAgB,aAOhBE,cAAe,aAOftB,gBAAiB,SAAS1D,GAKzB,GAAIA,EAAJ,CAGIhG,EAAKkL,QAAQlF,KAChBA,GAASA,IAEV,IAAI,IAAIsC,EAAE,EAAGA,EAAEtC,EAAMU,OAAO4B,IAAI,CAC/B,IAAI7F,EAAOuD,EAAMsC,GACbT,EAAWvF,KAAKkC,aAAa/B,GAEjC,GAAIoF,EAAJ,CAGA,IAEIJ,EAFA0D,EAAW7I,KAAK8I,eAAe3I,GAC/B4I,EAAKrK,EAAI,MAEb,GAAGmK,GAEF,GADAzK,EAAS2J,IAAIxC,EAAU,wBACpBwD,IAAOrK,EAAI,WAAaqK,EAAK,GAAG,CAElC5D,EAAMI,EAASyD,gBACf,IAAIC,EAAS5K,EAAS6K,IAAI3D,GACtBJ,GAAQ/G,EAAS+K,SAAShE,EAAK,wBAClCA,EAAMnF,KAAKgF,eAAe7E,GAAO,GAAI,SACrC/B,EAAS2J,IAAI5C,EAAK,sBAClB/G,EAAS2J,IAAI5C,EAAK,wBAClB9G,EAASgH,IAAIF,GACZiE,SAAU,WACVC,SAAU,WAEXnL,EAAaqJ,MAAMpC,EAAKI,EAAU,WAGnC,IAAI+D,EAAS,EAAEC,SAASlL,EAAS6K,IAAI/D,EAAK,iBACvCnF,KAAKmC,QAAQhC,GACfmJ,GAAU,EAEVA,GAAU,EAGU,QAAlBL,EAAa,MACf5K,EAASgH,IAAIF,GACZqE,KAAOD,SAASN,EAAa,MAAG,EAAG,KACnCQ,IAAMF,SAASN,EAAY,KAAG,EAAG,KACjCtB,MAAQ4B,SAASN,EAAc,OAAGK,EAAQ,KAC1C1B,OAAS2B,SAASN,EAAe,QAAGK,EAAQ,aAK5CP,IAAOrK,EAAI,WAAaqK,EAAK,KAC/B5D,EAAMI,EAASyD,kBACL5K,EAAS+K,SAAShE,EAAK,uBAChCA,EAAIkD,WAAWqB,YAAYvE,GAG7B/G,EAASiF,OAAOkC,EAAU,wBAGxBvF,KAAKuI,cAAgBpI,EACvB/B,EAAS2J,IAAIxC,EAAU,uBAEvBnH,EAASiF,OAAOkC,EAAU,uBAExBsD,GAAY7I,KAAKuI,cAAgBpI,EACnC9B,EAASgH,IAAIE,EAAU,SAAU,IAEjClH,EAASgH,IAAIE,EAAU,SAAW7G,EAAI,OAAO,EAAG,EAAE","file":"../../treemap/TreeMap.js","sourcesContent":["define([\"dojo/_base/array\", \"dojo/_base/lang\", \"dojo/_base/declare\", \"dojo/_base/event\", \"dojo/_base/Color\", \"dojo/touch\",\r\n\t\t\"dojo/when\", \"dojo/on\", \"dojo/query\", \"dojo/dom-construct\", \"dojo/dom-geometry\", \"dojo/dom-class\", \"dojo/dom-style\",\r\n\t\t\"./_utils\", \"dijit/_WidgetBase\", \"dojox/widget/_Invalidating\", \"dojox/widget/Selection\",\r\n\t\t\"dojo/_base/sniff\", \"dojo/uacss\"],\r\n\tfunction(arr, lang, declare, event, Color, touch, when, on, query, domConstruct, domGeom, domClass, domStyle,\r\n\t\tutils, _WidgetBase, _Invalidating, Selection, has){\r\n\r\n\treturn declare(\"dojox.treemap.TreeMap\", [_WidgetBase, _Invalidating, Selection], {\r\n\t\t// summary:\r\n\t\t//\t\tA treemap widget.\r\n\t\t\r\n\t\tbaseClass: \"dojoxTreeMap\",\r\n\t\t\r\n\t\t// store: dojo/store/api/Store\r\n\t\t//\t\tThe store that contains the items to display.\r\n\t\tstore: null,\r\n\t\t\r\n\t\t// query: Object\r\n\t\t//\t\tA query that can be passed to when querying the store.\r\n\t\tquery: {},\r\n\r\n\t\t// queryOptions: dojo/store/api/Store.QueryOptions?\r\n\t\t//\t\tOptions to be applied when querying the store.\r\n\t\tqueryOptions: null,\r\n\t\t\r\n\t\t// itemToRenderer: [protected] Object\r\n\t\t//\t\tThe associated array item to renderer list.\r\n\t\titemToRenderer: null,\r\n\r\n\t\t// Data\r\n\t\t_dataChanged: false,\r\n\t\r\n\t\t// rootItem: Object\r\n\t\t//\t\tThe root item of the treemap, that is the first visible item.\r\n\t\t//\t\tIf null the entire treemap hierarchy is shown.\t\r\n\t\t//\t\tDefault is null.\r\n\t\trootItem: null,\r\n\t\t_rootItemChanged: false,\r\n\t\r\n\t\t// tooltipAttr: String\r\n\t\t//\t\tThe attribute of the store item that contains the tooltip text of a treemap cell.\t\r\n\t\t//\t\tDefault is \"\". \r\n\t\ttooltipAttr: \"\",\r\n\t\r\n\t\t// areaAttr: String\r\n\t\t//\t\tThe attribute of the store item that contains the data used to compute the area of a treemap cell.\t\r\n\t\t//\t\tDefault is \"\". \r\n\t\tareaAttr: \"\",\r\n\t\t_areaChanged: false,\r\n\t\r\n\t\t// labelAttr: String\r\n\t\t//\t\tThe attribute of the store item that contains the label of a treemap cell.\t\r\n\t\t//\t\tDefault is \"label\". \r\n\t\tlabelAttr: \"label\",\r\n\t\t\r\n\t\t// labelThreshold: Number\r\n\t\t//\t\tThe starting depth level at which the labels are not displayed anymore on cells.  \r\n\t\t//\t\tIf NaN no threshold is applied. The depth is the visual depth of the items on the screen not\r\n\t\t//\t\tin the data (i.e. after drill down the depth of an item might change).\r\n\t\t//\t\tDefault is NaN.\r\n\t\tlabelThreshold: NaN, \r\n\t\t\r\n\t\t// colorAttr: String\r\n\t\t//\t\tThe attribute of the store item that contains the data used to compute the color of a treemap cell.\r\n\t\t//\t\tDefault is \"\". \r\n\t\tcolorAttr: \"\",\r\n\t\t// colorModel: dojox/color/api/ColorModel\r\n\t\t//\t\tThe optional color model that converts data to color.\t\r\n\t\t//\t\tDefault is null.\r\n\t\tcolorModel: null,\r\n\t\t_coloringChanged: false,\r\n\t\t\r\n\t\t// groupAttrs: Array\r\n\t\t//\t\tAn array of data attributes used to group data in the treemap.\t\r\n\t\t//\t\tDefault is []. \r\n\t\tgroupAttrs: [],\r\n\r\n\t\t// groupFuncs: Array\r\n\t\t//\t\tAn array of grouping functions used to group data in the treemap.\r\n\t\t//\t\tWhen null, groupAttrs is to compute grouping functions.\r\n\t\t//\t\tDefault is null.\r\n\t\tgroupFuncs: null,\r\n\r\n        _groupFuncs: null,\r\n\t\t_groupingChanged: false,\r\n\t\r\n\t\tconstructor: function(){\r\n\t\t\tthis.itemToRenderer = {};\r\n\t\t\tthis.invalidatingProperties = [ \"colorModel\", \"groupAttrs\", \"groupFuncs\", \"areaAttr\", \"areaFunc\",\r\n\t\t\t\t\"labelAttr\", \"labelFunc\", \"labelThreshold\", \"tooltipAttr\", \"tooltipFunc\",\r\n\t\t\t\t\"colorAttr\", \"colorFunc\", \"rootItem\" ];\r\n\t\t},\r\n\t\t\r\n\t\tgetIdentity: function(item){\r\n\t\t\treturn item.__treeID?item.__treeID:this.store.getIdentity(item);\r\n\t\t},\r\n\t\r\n\t\tresize: function(box){\r\n\t\t\tif(box){\r\n\t\t\t\tdomGeom.setMarginBox(this.domNode, box);\r\n\t\t\t\tthis.invalidateRendering();\t\t\t\t\t\t\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.own(on(this.domNode, \"mouseover\", lang.hitch(this, this._onMouseOver)));\r\n\t\t\tthis.own(on(this.domNode, \"mouseout\", lang.hitch(this, this._onMouseOut)));\r\n\t\t\tthis.own(on(this.domNode, touch.release, lang.hitch(this, this._onMouseUp)));\r\n\t\t\tthis.domNode.setAttribute(\"role\", \"presentation\");\r\n\t\t\tthis.domNode.setAttribute(\"aria-label\", \"treemap\");\r\n\t\t},\r\n\t\t\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.refreshRendering();\r\n\t\t},\r\n\t\r\n\t\trefreshRendering: function(){\r\n\t\t\tvar forceCreate = false;\r\n\t\r\n\t\t\tif(this._dataChanged){\r\n\t\t\t\tthis._dataChanged = false;\r\n\t\t\t\tthis._groupingChanged = true;\r\n\t\t\t\tthis._coloringChanged = true;\r\n\t\t\t}\r\n\t\r\n\t\t\tif(this._groupingChanged){\r\n\t\t\t\tthis._groupingChanged = false;\r\n\t\t\t\tthis._set(\"rootItem\", null);\r\n\t\t\t\tthis._updateTreeMapHierarchy();\r\n\t\t\t\tforceCreate = true;\r\n\t\t\t}\r\n\t\r\n\t\t\tif(this._rootItemChanged){\r\n\t\t\t\tthis._rootItemChanged = false;\r\n\t\t\t\tforceCreate = true;\r\n\t\t\t}\r\n\t\r\n\t\t\tif(this._coloringChanged){\r\n\t\t\t\tthis._coloringChanged = false;\t\t\t\r\n\t\t\t\tif(this.colorModel != null && this._data != null && this.colorModel.initialize){\r\n\t\t\t\t\tthis.colorModel.initialize(this._data, lang.hitch(this, function(item){\r\n\t\t\t\t\t\treturn this.colorFunc(item, this.store);\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\tif(this._areaChanged){\r\n\t\t\t\tthis._areaChanged = false;\r\n\t\t\t\tthis._removeAreaForGroup();\r\n\t\t\t}\r\n\t\r\n\t\t\tif(this.domNode == undefined || this._items == null){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(forceCreate){\r\n\t\t\t\tdomConstruct.empty(this.domNode);\r\n\t\t\t}\r\n\t\r\n\t\t\tvar rootItem = this.rootItem, rootParentItem;\r\n\t\r\n\t\t\tif(rootItem != null){\r\n\t\t\t\tvar rootItemRenderer = this._getRenderer(rootItem);\r\n\t\t\t\tif(rootItemRenderer){\r\n\t\t\t\t\tif(this._isLeaf(rootItem)){\r\n\t\t\t\t\t\trootItem = rootItemRenderer.parentItem;\r\n\t\t\t\t\t}\r\n\t\t\t\t\trootParentItem = rootItemRenderer.parentItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar box = domGeom.getMarginBox(this.domNode);\r\n\t\t\tif(rootItem != null){\r\n\t\t\t\tthis._buildRenderer(this.domNode, rootParentItem, rootItem, {\r\n\t\t\t\t\tx: box.l, y: box.t, w: box.w, h: box.h\r\n\t\t\t\t}, 0, forceCreate);\r\n\t\t\t}else{\r\n\t\t\t\tthis._buildChildrenRenderers(this.domNode, rootItem?rootItem:{ __treeRoot: true, children : this._items },\r\n\t\t\t\t\t0, forceCreate, box);\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t_setRootItemAttr: function(value){\r\n\t\t\tthis._rootItemChanged = true;\r\n\t\t\tthis._set(\"rootItem\", value);\r\n\t\t},\r\n\t\r\n\t\t_setStoreAttr: function(value){\r\n\t\t\tvar r;\r\n\t\t\tif(this._observeHandler){\r\n\t\t\t\tthis._observeHandler.remove();\r\n\t\t\t\tthis._observeHandler = null;\r\n\t\t\t}\r\n\t\t\tif(value != null){\r\n\t\t\t\tvar results = value.query(this.query, this.queryOptions);\r\n\t\t\t\tif(results.observe){\r\n\t\t\t\t\t// user asked us to observe the store\r\n\t\t\t\t\tthis._observeHandler = results.observe(lang.hitch(this, this._updateItem), true);\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t\tr = when(results, lang.hitch(this, this._initItems));\r\n\t\t\t}else{\r\n\t\t\t\tr = this._initItems([]);\r\n\t\t\t}\r\n\t\t\tthis._set(\"store\", value);\r\n\t\t\treturn r;\r\n\t\t},\r\n\t\r\n\t\t_initItems: function(items){\r\n\t\t\tthis._dataChanged = true;\r\n\t\t\tthis._data = items;\r\n\t\t\tthis.invalidateRendering();\r\n\t\t\treturn items;\r\n\t\t},\r\n\r\n\t\t_updateItem: function(item, previousIndex, newIndex){\r\n\t\t\tif(previousIndex!=-1){\r\n\t\t\t\tif(newIndex!=previousIndex){\r\n\t\t\t\t\t// this is a remove or a move\r\n\t\t\t\t\tthis._data.splice(previousIndex, 1);\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// this is a put, previous and new index identical\r\n\t\t\t\t\t// we don't know what has change exactly with store API\r\n\t\t\t\t\tthis._data[newIndex] = item;\r\n\t\t\t\t}\r\n\t\t\t}else if(newIndex!=-1){\r\n\t\t\t\t// this is a add \r\n\t\t\t\tthis._data.splice(newIndex, 0, item);\r\n\t\t\t}\r\n\t\t\t// as we have no details let's refresh everything...\r\n\t\t\tthis._dataChanged = true;\t\t\t\r\n\t\t\tthis.invalidateRendering();\r\n\t\t},\r\n\t\r\n\t\t_setGroupAttrsAttr: function(value){\r\n\t\t\tthis._groupingChanged = true;\r\n\t\t\tif(this.groupFuncs == null){\r\n\t\t\t\tif(value !=null){\r\n\t\t\t\t\tthis._groupFuncs = arr.map(value, function(attr){\r\n\t\t\t\t\t\treturn function(item){\r\n\t\t\t\t\t\t\treturn item[attr];\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis._groupFuncs = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._set(\"groupAttrs\", value);\r\n\t\t},\r\n\r\n        _setGroupFuncsAttr: function(value){\r\n\t\t\tthis._groupingChanged = true;\r\n\t\t\tthis._set(\"groupFuncs\", this._groupFuncs = value);\r\n\t\t\tif(value == null && this.groupAttrs != null){\r\n\t\t\t\tthis._groupFuncs = arr.map(this.groupAttrs, function(attr){\r\n\t\t\t\t\treturn function(item){\r\n\t\t\t\t\t\treturn item[attr];\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setAreaAttrAttr: function(value){\r\n\t\t\tthis._areaChanged = true;\r\n\t\t\tthis._set(\"areaAttr\", value);\r\n\t\t},\r\n\t\r\n\t\t// areaFunc: Function\r\n\t\t//\t\tA function that returns the value use to compute the area of cell from a store item.\r\n\t\t//\t\tDefault implementation is using areaAttr.\t\r\n\t\tareaFunc: function(/*Object*/ item, /*dojo/store/api/Store*/ store){\r\n\t\t\treturn (this.areaAttr && this.areaAttr.length > 0)?parseFloat(item[this.areaAttr]):1;\r\n\t\t},\r\n\t\t\r\n\t\t_setAreaFuncAttr: function(value){\r\n\t\t\tthis._areaChanged = true;\r\n\t\t\tthis._set(\"areaFunc\", value);\r\n\t\t},\r\n\r\n\t\t// labelFunc: Function\r\n\t\t//\t\tA function that returns the label of cell from a store item.\t\r\n\t\t//\t\tDefault implementation is using labelAttr.\r\n\t\tlabelFunc: function(/*Object*/ item, /*dojo/store/api/Store*/ store){\r\n\t\t\tvar label = (this.labelAttr && this.labelAttr.length > 0)?item[this.labelAttr]:null;\r\n\t\t\treturn label?label.toString():null;\r\n\t\t},\r\n\t\r\n\t\t// tooltipFunc: Function\r\n\t\t//\t\tA function that returns the tooltip of cell from a store item.\t\r\n\t\t//\t\tDefault implementation is using tooltipAttr.\r\n\t\ttooltipFunc: function(/*Object*/ item, /*dojo/store/api/Store*/ store){\r\n\t\t\tvar tooltip = (this.tooltipAttr && this.tooltipAttr.length > 0)?item[this.tooltipAttr]:null;\r\n\t\t\treturn tooltip?tooltip.toString():null;\r\n\t\t},\r\n\r\n\t\t_setColorModelAttr: function(value){\r\n\t\t\tthis._coloringChanged = true;\r\n\t\t\tthis._set(\"colorModel\", value);\r\n\t\t},\r\n\t\r\n\t\t_setColorAttrAttr: function(value){\r\n\t\t\tthis._coloringChanged = true;\r\n\t\t\tthis._set(\"colorAttr\", value);\r\n\t\t},\r\n\t\r\n\t\t// colorFunc: Function\r\n\t\t//\t\tA function that returns from a store item the color value of cell or the value used by the \r\n\t\t//\t\tColorModel to compute the cell color. If a color must be returned it must be in form accepted by the\r\n\t\t//\t\tdojo/_base/Color constructor. If a value must be returned it must be a Number.\r\n\t\t//\t\tDefault implementation is using colorAttr.\r\n\t\tcolorFunc: function(/*Object*/ item, /*dojo/store/api/Store*/ store){\r\n\t\t\tvar color = (this.colorAttr && this.colorAttr.length > 0)?item[this.colorAttr]:0;\r\n\t\t\tif(color == null){\r\n\t\t\t\tcolor = 0;\r\n\t\t\t}\r\n\t\t\treturn parseFloat(color);\r\n\t\t},\r\n\t\t\r\n\t\t_setColorFuncAttr: function(value){\r\n\t\t\tthis._coloringChanged = true;\r\n\t\t\tthis._set(\"colorFunc\", value);\r\n\t\t},\r\n\t\t\r\n\t\tcreateRenderer: function(item, level, kind){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates an item renderer of the specified kind. This is called only when the treemap\r\n\t\t\t//\t\tis created. Default implementation always create div nodes. It also sets overflow\r\n\t\t\t//\t\tto hidden and position to absolute on non-header renderers.\r\n\t\t\t// item: Object\r\n\t\t\t//\t\tThe data item.\r\n\t\t\t// level: Number\r\n\t\t\t//\t\tThe item depth level.\t\t\r\n\t\t\t// kind: String\r\n\t\t\t//\t\tThe specified kind. This can either be \"leaf\", \"group\", \"header\" or \"content\". \r\n\t\t\t// returns: DomNode\r\n\t\t\t//\t\tThe renderer use for the specified kind.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\t\t\t\t\t\r\n\t\t\tvar div = domConstruct.create(\"div\");\r\n\t\t\tif(kind != \"header\"){\r\n\t\t\t\tdomStyle.set(div, \"overflow\", \"hidden\");\r\n\t\t\t\tdomStyle.set(div, \"position\", \"absolute\");\t\t\t\t\t\r\n\t\t\t}\r\n\t\t\treturn div;\r\n\t\t},\r\n\t\t\r\n\t\tstyleRenderer: function(renderer, item, level, kind){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStyle the item renderer. This is called each time the treemap is refreshed.\r\n\t\t\t//\t\tFor leaf items it colors them with the color computed from the color model. \r\n\t\t\t//\t\tFor other items it does nothing.\r\n\t\t\t// renderer: DomNode\r\n\t\t\t//\t\tThe item renderer.\r\n\t\t\t// item: Object\r\n\t\t\t//\t\tThe data item.\r\n\t\t\t// level: Number\r\n\t\t\t//\t\tThe item depth level.\r\n\t\t\t// kind: String\r\n\t\t\t//\t\tThe specified kind. This can either be \"leaf\", \"group\", \"header\" or \"content\". \r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tswitch(kind){\r\n\t\t\t\tcase \"leaf\":\r\n\t\t\t\t\tdomStyle.set(renderer, \"background\", this.getColorForItem(item).toHex());\r\n\t\t\t\tcase \"header\":\r\n\t\t\t\t\tvar label = this.getLabelForItem(item);\r\n\t\t\t\t\tif(label && (isNaN(this.labelThreshold) || level < this.labelThreshold)){\r\n\t\t\t\t\t\trenderer.innerHTML = label;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tdomConstruct.empty(renderer);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\r\n\t\t\t}\t\t\t\t\r\n\t\t},\r\n\t\t\r\n\t\t_updateTreeMapHierarchy: function(){\r\n\t\t\tif(this._data == null){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(this._groupFuncs != null && this._groupFuncs.length > 0){\r\n\t\t\t\tthis._items = utils.group(this._data, this._groupFuncs, lang.hitch(this, this._getAreaForItem)).children;\r\n\t\t\t}else{\r\n\t\t\t\tthis._items = this._data;\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t_removeAreaForGroup: function(item){\r\n\t\t\tvar children;\r\n\t\t\tif(item != null){\r\n\t\t\t\tif(item.__treeValue){\r\n\t\t\t\t\tdelete item.__treeValue;\r\n\t\t\t\t\tchildren = item.children;\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// not a grouping item\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tchildren = this._items;\r\n\t\t\t}\r\n\t\t\tif(children){\r\n\t\t\t\tfor(var i = 0; i < children.length; ++i){\r\n\t\t\t\t\tthis._removeAreaForGroup(children[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t_getAreaForItem: function(item){\r\n\t\t\tvar area = this.areaFunc(item, this.store);\r\n\t\t\treturn isNaN(area) ? 0 : area;\r\n\t\t},\r\n\r\n\t\t_computeAreaForItem: function(item){\r\n\t\t\tvar value;\r\n\t\t\tif(item.__treeID){ // group\r\n\t\t\t\tvalue = item.__treeValue;\r\n\t\t\t\tif(!value){\r\n\t\t\t\t\tvalue = 0;\r\n\t\t\t\t\tvar children = item.children;\r\n\t\t\t\t\tfor(var i = 0; i < children.length; ++i){\r\n\t\t\t\t\t\tvalue += this._computeAreaForItem(children[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\titem.__treeValue = value;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tvalue = this._getAreaForItem(item);\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t},\r\n\t\r\n\t\tgetColorForItem: function(item){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the color for a given item. This either use the colorModel if not null\r\n\t\t\t//\t\tor just the result of the colorFunc.\r\n\t\t\t// item: Object\r\n\t\t\t//\t\tThe data item.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\t\r\n\t\t\tvar value = this.colorFunc(item, this.store);\r\n\t\t\tif(this.colorModel != null){\r\n\t\t\t\treturn this.colorModel.getColor(value);\r\n\t\t\t}else{\r\n\t\t\t\treturn new Color(value);\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\tgetLabelForItem: function(item){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the label for a given item.\r\n\t\t\t// item: Object\r\n\t\t\t//\t\tThe data item.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\t\r\n\t\t\treturn item.__treeName?item.__treeName:this.labelFunc(item, this.store);\r\n\t\t},\r\n\t\r\n\t\t_buildChildrenRenderers: function(domNode, item, level, forceCreate, delta, anim){\r\n\t\t\tvar children = item.children;\r\n\t\t\tvar box = domGeom.getMarginBox(domNode);\r\n\r\n\t\t\tvar solution = utils.solve(children, box.w, box.h, lang.hitch(this,\r\n\t\t\t\t\tthis._computeAreaForItem), !this.isLeftToRight());\r\n\t\t\t\t\t\r\n\t\t\tvar rectangles = solution.rectangles;\r\n\t\t\t\r\n\t\t\tif(delta){\r\n\t\t\t\trectangles = arr.map(rectangles, function(item){\r\n\t\t\t\t\titem.x += delta.l;\r\n\t\t\t\t\titem.y += delta.t;\r\n\t\t\t\t\treturn item;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\r\n\t\t\tvar rectangle;\r\n\t\t\tfor(var j = 0; j < children.length; ++j){\r\n\t\t\t\trectangle = rectangles[j];\r\n\t\t\t\tthis._buildRenderer(domNode, item, children[j], rectangle, level, forceCreate, anim);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t_isLeaf: function(item){\r\n\t\t\treturn !item.children;\r\n\t\t},\r\n\t\t\r\n\t\t_isRoot: function(item){\r\n\t\t\treturn item.__treeRoot;\r\n\t\t},\r\n\t\t\r\n\t\t_getRenderer: function(item, anim, parent){\r\n\t\t\tif(anim){\r\n\t\t\t\t// while animating we do that on a copy of the subtree\r\n\t\t\t\t// so we can use our hash object to get to the renderer\r\n\t\t\t\tfor(var i = 0; i < parent.children.length; ++i){\r\n\t        \t\tif(parent.children[i].item == item){\r\n\t            \t\treturn parent.children[i];\r\n\t                }\r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\t\t\treturn this.itemToRenderer[this.getIdentity(item)];\r\n\t\t},\r\n\r\n\t\t_buildRenderer: function(container, parent, child, rect, level, forceCreate, anim){\r\n\t\t\tvar isLeaf = this._isLeaf(child);\r\n\t\t\tvar renderer = !forceCreate ? this._getRenderer(child, anim, container) : null;\r\n\t\t\trenderer = isLeaf ? this._updateLeafRenderer(renderer, child, level) : this._updateGroupRenderer(renderer,\r\n\t\t\t\t\tchild, level);\r\n\t\t\tif(forceCreate){\r\n\t\t\t\trenderer.level = level;\r\n\t\t\t\trenderer.item = child;\r\n\t\t\t\trenderer.parentItem = parent;\r\n\t\t\t\tthis.itemToRenderer[this.getIdentity(child)] = renderer;\r\n\t\t\t\t// update its selection status\r\n\t\t\t\tthis.updateRenderers(child);\r\n\t\t\t}\r\n\t\r\n\t\t\t// in some cases the computation might be slightly incorrect (0.0000...1)\r\n\t\t\t// and due to the floor this will cause 1px gaps \r\n\t\r\n\t\t\tvar x = Math.floor(rect.x);\r\n\t\t\tvar y = Math.floor(rect.y);\r\n\t\t\tvar w = Math.floor(rect.x + rect.w + 0.00000000001) - x;\r\n\t\t\tvar h = Math.floor(rect.y + rect.h + 0.00000000001) - y;\r\n\r\n\t\t\t// before sizing put the item inside its parent so that styling\r\n\t\t\t// is applied and taken into account\r\n\t\t\tif(forceCreate){\r\n\t\t\t\tdomConstruct.place(renderer, container);\r\n\t\t\t}\r\n\r\n\t\t\tdomGeom.setMarginBox(renderer, {\r\n\t\t\t\tl: x, t: y, w: w, h: h\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tif(!isLeaf){\r\n\t\t\t\tvar box = domGeom.getContentBox(renderer);\r\n\t\t\t\tthis._layoutGroupContent(renderer, box.w, box.h, level + 1, forceCreate, anim);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.onRendererUpdated({ renderer: renderer, item: child, kind: isLeaf?\"leaf\":\"group\", level: level });\t\t\r\n\t\t},\r\n\t\r\n\t\t_layoutGroupContent: function(renderer, width, height, level, forceCreate, anim){\r\n\t\t\tvar header = query(\".dojoxTreeMapHeader\", renderer)[0];\r\n\t\t\tvar content = query(\".dojoxTreeMapGroupContent\", renderer)[0];\r\n\t\t\tif(header == null || content == null){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\r\n\t\t\tvar box = domGeom.getMarginBox(header);\r\n\t\r\n\t\t\t// If the header is too high, reduce its area\r\n\t\t\t// and don't show the children..\r\n\t\t\tif(box.h > height){\r\n\t\t\t\t// TODO: this might cause pb when coming back to visibility later\r\n\t\t\t\t// as the getMarginBox of the header will keep that value?\r\n\t\t\t\tbox.h = height;\r\n\t\t\t\tdomStyle.set(content, \"display\", \"none\");\r\n\t\t\t}else{\r\n\t\t\t\tdomStyle.set(content, \"display\", \"block\");\r\n\t\t\t\tdomGeom.setMarginBox(content, {\r\n\t\t\t\t\tl: 0, t: box.h, w: width, h: (height - box.h)\r\n\t\t\t\t});\r\n\t\t\t\tthis._buildChildrenRenderers(content, renderer.item, level, forceCreate, null, anim);\r\n\t\t\t}\r\n\t\r\n\t\t\tdomGeom.setMarginBox(header, {\r\n\t\t\t\tl: 0, t: 0, w: width, h: box.h\r\n\t\t\t});\r\n\t\t},\r\n\t\r\n\t\t_updateGroupRenderer: function(renderer, item, level){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUpdate a group renderer. This creates the renderer if not already created,\r\n\t\t\t//\t\tcall styleRender for it and recurse into children.\r\n\t\t\t// renderer: DomNode\r\n\t\t\t//\t\tThe item renderer.\r\n\t\t\t// item: Object\r\n\t\t\t//\t\tThe data item.\r\n\t\t\t// level: Number\r\n\t\t\t//\t\tThe item depth level.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\t\t\t\t\r\n\t\t\tvar forceCreate = renderer == null;\r\n\t\t\tif(renderer == null){\r\n\t\t\t\trenderer = this.createRenderer(\"div\", level, \"group\");\r\n\t\t\t\tdomClass.add(renderer, \"dojoxTreeMapGroup\");\r\n\t\t\t}\r\n\t\t\tthis.styleRenderer(renderer, item, level, \"group\");\r\n\t\t\tvar header = query(\".dojoxTreeMapHeader\", renderer)[0];\r\n\t\t\theader = this._updateHeaderRenderer(header, item, level);\r\n\t\t\tif(forceCreate){\r\n\t\t\t\tdomConstruct.place(header, renderer);\r\n\t\t\t}\r\n\t\t\tvar content = query(\".dojoxTreeMapGroupContent\", renderer)[0];\r\n\t\t\tcontent = this._updateGroupContentRenderer(content, item, level);\r\n\t\t\tif(forceCreate){\r\n\t\t\t\tdomConstruct.place(content, renderer);\r\n\t\t\t}\r\n\t\t\treturn renderer;\r\n\t\t},\r\n\t\r\n\t\t_updateHeaderRenderer: function(renderer, item, level){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUpdate a leaf renderer. This creates the renderer if not already created,\r\n\t\t\t//\t\tcall styleRender for it and set the label as its innerHTML.\r\n\t\t\t// renderer: DomNode\r\n\t\t\t//\t\tThe item renderer.\r\n\t\t\t// item: Object\r\n\t\t\t//\t\tThe data item.\r\n\t\t\t// level: Number\r\n\t\t\t//\t\tThe item depth level.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\t\t\t\r\n\t\t\tif(renderer == null){\r\n\t\t\t\trenderer = this.createRenderer(item, level, \"header\");\r\n\t\t\t\tdomClass.add(renderer, \"dojoxTreeMapHeader\");\r\n\t\t\t\tdomClass.add(renderer, \"dojoxTreeMapHeader_\" + level);\t\t\t\t\r\n\t\t\t}\r\n\t\t\tthis.styleRenderer(renderer, item, level, \"header\");\r\n\t\t\treturn renderer;\r\n\t\t},\r\n\t\r\n\t\t_updateLeafRenderer: function(renderer, item, level){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUpdate a leaf renderer. This creates the renderer if not already created,\r\n\t\t\t//\t\tcall styleRender for it and set the label as its innerHTML.\r\n\t\t\t// renderer: DomNode\r\n\t\t\t//\t\tThe item renderer.\r\n\t\t\t// item: Object\r\n\t\t\t//\t\tThe data item.\r\n\t\t\t// level: Number\r\n\t\t\t//\t\tThe item depth level.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\t\t\t\t\r\n\t\t\tif(renderer == null){\r\n\t\t\t\trenderer = this.createRenderer(item, level, \"leaf\");\r\n\t\t\t\tdomClass.add(renderer, \"dojoxTreeMapLeaf\");\r\n\t\t\t\tdomClass.add(renderer, \"dojoxTreeMapLeaf_\" + level);\r\n\t\t\t}\t\t\r\n\t\t\tthis.styleRenderer(renderer, item, level, \"leaf\");\r\n\t\t\tvar tooltip = this.tooltipFunc(item, this.store);\r\n\t\t\tif(tooltip){\r\n\t\t\t\trenderer.title = tooltip;\r\n\t\t\t}\r\n\t\t\treturn renderer;\r\n\t\t},\r\n\t\r\n\t\t_updateGroupContentRenderer: function(renderer, item, level){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUpdate a group content renderer. This creates the renderer if not already created,\r\n\t\t\t//\t\tand call styleRender for it.\r\n\t\t\t// renderer:\r\n\t\t\t//\t\tThe item renderer.\r\n\t\t\t// item: Object\r\n\t\t\t//\t\tThe data item.\r\n\t\t\t// level: Number\r\n\t\t\t//\t\tThe item depth level.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\t\t\t\t\r\n\t\t\tif(renderer == null){\r\n\t\t\t\trenderer = this.createRenderer(item, level, \"content\");\r\n\t\t\t\tdomClass.add(renderer, \"dojoxTreeMapGroupContent\");\r\n\t\t\t\tdomClass.add(renderer, \"dojoxTreeMapGroupContent_\" + level);\r\n\t\t\t}\r\n\t\t\tthis.styleRenderer(renderer, item, level, \"content\");\r\n\t\t\treturn renderer;\r\n\t\t},\r\n\t\t\r\n\t\t_getRendererFromTarget: function(target){\r\n\t\t\tvar renderer = target;\r\n\t\t\twhile(renderer != this.domNode && !renderer.item){\r\n\t\t\t\trenderer = renderer.parentNode;\r\n\t\t\t}\t\t\t\r\n\t\t\treturn renderer;\r\n\t\t},\r\n\r\n\t\t_onMouseOver: function(e){\r\n\t\t\tvar renderer = this._getRendererFromTarget(e.target);\r\n\t\t\tif(renderer.item){\t\r\n\t\t\t\tvar item = renderer.item;\r\n\t\t\t\tthis._hoveredItem = item;\r\n\t\t\t\tthis.updateRenderers(item);\r\n\t\t\t\tthis.onItemRollOver({renderer: renderer, item : item, triggerEvent: e});\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t_onMouseOut: function(e){\r\n\t\t\tvar renderer = this._getRendererFromTarget(e.target);\r\n\t\t\tif(renderer.item){\t\r\n\t\t\t\tvar item = renderer.item;\r\n\t\t\t\tthis._hoveredItem = null;\r\n\t\t\t\tthis.updateRenderers(item);\r\n\t\t\t\tthis.onItemRollOut({renderer: renderer, item : item, triggerEvent: e});\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t_onMouseUp: function(e){\r\n\t\t\tvar renderer = this._getRendererFromTarget(e.target);\r\n\t\t\tif(renderer.item){\r\n\t\t\t\tthis.selectFromEvent(e, renderer.item, renderer, true);\r\n\t\t\t\t//event.stop(e);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tonRendererUpdated: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when a renderer has been updated. This is called after creation, styling and sizing for \r\n\t\t\t//\t\teach group and leaf renderers. For group renders this is also called after creation of children\r\n\t\t\t//\t\trenderers. \r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\t\t\t\r\n\t\t},\r\n\t\t\r\n\t\tonItemRollOver: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when an item renderer has been hovered.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\t\t\t\r\n\t\t},\r\n\t\t\r\n\t\tonItemRollOut: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when an item renderer has been rolled out.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\t\t\t\r\n\t\t},\t\t\r\n\t\t\r\n\t\tupdateRenderers: function(items){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUpdates the renderer(s) that represent the specified item(s).\r\n\t\t\t// item: Object|Array\r\n\t\t\t//\t\tThe item(s).\r\n\t\t\tif(!items){\r\n\t\t\t\treturn;\r\n\t\t\t}\t\t\t\r\n\t\t\tif(!lang.isArray(items)){\r\n\t\t\t\titems = [items];\r\n\t\t\t}\r\n\t\t\tfor(var i=0; i<items.length;i++){\r\n\t\t\t\tvar item = items[i];\r\n\t\t\t\tvar renderer = this._getRenderer(item);\r\n\t\t\t\t// at init time the renderer might not be ready\r\n\t\t\t\tif(!renderer){\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tvar selected = this.isItemSelected(item);\r\n\t\t\t\tvar ie = has(\"ie\");\r\n\t\t\t\tvar div;\r\n\t\t\t\tif(selected){\r\n\t\t\t\t\tdomClass.add(renderer, \"dojoxTreeMapSelected\");\r\n\t\t\t\t\tif(ie && (has(\"quirks\") || ie < 9)){\r\n\t\t\t\t\t\t// let's do all of this only if not already done\r\n\t\t\t\t\t\tdiv = renderer.previousSibling;\r\n\t\t\t\t\t\tvar rStyle = domStyle.get(renderer);\r\n\t\t\t\t\t\tif(!div || !domClass.contains(div, \"dojoxTreeMapIEHack\")){\r\n\t\t\t\t\t\t\tdiv = this.createRenderer(item, -10, \"group\");\r\n\t\t\t\t\t\t\tdomClass.add(div, \"dojoxTreeMapIEHack\");\r\n\t\t\t\t\t\t\tdomClass.add(div, \"dojoxTreeMapSelected\");\r\n\t\t\t\t\t\t\tdomStyle.set(div, {\r\n\t\t\t\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t\t\t\toverflow: \"hidden\"\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tdomConstruct.place(div, renderer, \"before\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// TODO: might fail if different border widths for different sides\r\n\t\t\t\t\t\tvar bWidth = 2*parseInt(domStyle.get(div, \"border-width\"));\r\n\t\t\t\t\t\tif(this._isLeaf(item)){\r\n\t\t\t\t\t\t\tbWidth -= 1;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tbWidth += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// if we just drill down some renders might not be laid out?\r\n\t\t\t\t\t\tif(rStyle[\"left\"] != \"auto\"){\r\n\t\t\t\t\t\t\tdomStyle.set(div, {\r\n\t\t\t\t\t\t\t\tleft: (parseInt(rStyle[\"left\"])+1)+\"px\",\r\n\t\t\t\t\t\t\t\ttop: (parseInt(rStyle[\"top\"])+1)+\"px\",\r\n\t\t\t\t\t\t\t\twidth: (parseInt(rStyle[\"width\"])-bWidth)+\"px\",\r\n\t\t\t\t\t\t\t\theight: (parseInt(rStyle[\"height\"])-bWidth)+\"px\"\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(ie && (has(\"quirks\") || ie < 9)){\r\n\t\t\t\t\t\tdiv = renderer.previousSibling;\r\n\t\t\t\t\t\tif(div && domClass.contains(div, \"dojoxTreeMapIEHack\")){\r\n\t\t\t\t\t\t\tdiv.parentNode.removeChild(div);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdomClass.remove(renderer, \"dojoxTreeMapSelected\");\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif(this._hoveredItem == item){\r\n\t\t\t\t\tdomClass.add(renderer, \"dojoxTreeMapHovered\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdomClass.remove(renderer, \"dojoxTreeMapHovered\");\r\n\t\t\t\t}\r\n\t\t\t\tif(selected || this._hoveredItem == item){\r\n\t\t\t\t\tdomStyle.set(renderer, \"zIndex\", 20);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdomStyle.set(renderer, \"zIndex\", (has(\"ie\")<=7)?0:\"auto\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n"]}