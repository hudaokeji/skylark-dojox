{"version":3,"sources":["treemap/ScaledLabel.js"],"names":["define","declare","domGeom","domConstruct","domStyle","onRendererUpdated","evt","kind","renderer","oldSize","get","set","firstChild","parseInt","hRatio","getContentBox","w","getMarginBox","vRatio","h","hDiff","vDiff","newSize","Math","floor","min","createRenderer","item","level","this","inherited","arguments","p","create","position","width","place","styleRenderer","getColorForItem","toHex","innerHTML","getLabelForItem"],"mappings":";;;;;;;AAAAA,QAAQ,qBAAsB,oBAAqB,qBAAsB,kBACxE,SAASC,EAASC,EAASC,EAAcC,GAEzC,OAAOH,EAAQ,4BAA6B,MAI3CI,kBAAmB,SAASC,GAC3B,GAAe,QAAZA,EAAIC,KAAe,CACrB,IAAIC,EAAWF,EAAIE,SAEfC,EAAUL,EAASM,IAAIF,EAAU,YACrCJ,EAASO,IAAIH,EAASI,WAAY,WAAYH,GAC9CA,EAAUI,SAASJ,GAMnB,IALA,IAAIK,EAAS,IAAOZ,EAAQa,cAAcP,GAAUQ,EAAId,EAAQe,aAAaT,EAASI,YAAYI,EAC9FE,EAAShB,EAAQa,cAAcP,GAAUW,EAAKjB,EAAQe,aAAaT,EAASI,YAAYO,EACxFC,EAAQlB,EAAQa,cAAcP,GAAUQ,EAAId,EAAQe,aAAaT,EAASI,YAAYI,EACtFK,EAAQnB,EAAQa,cAAcP,GAAUW,EAAIjB,EAAQe,aAAaT,EAASI,YAAYO,EACtFG,EAAUC,KAAKC,MAAMf,EAAUc,KAAKE,IAAIX,EAAQI,IAC9CG,EAAQ,GAAKD,EAAQ,GAC1BhB,EAASO,IAAIH,EAASI,WAAY,WAAYU,EAAU,MACxDF,EAAQlB,EAAQa,cAAcP,GAAUQ,EAAId,EAAQe,aAAaT,EAASI,YAAYI,EACtFK,EAAQnB,EAAQa,cAAcP,GAAUW,EAAIjB,EAAQe,aAAaT,EAASI,YAAYO,EACtFV,EAAUa,EACVA,GAAW,GAETD,EAAQ,GAAKD,EAAQ,IAEvBhB,EAASO,IAAIH,EAASI,WAAY,WAAYH,EAAU,QAK3DiB,eAAgB,SAASC,EAAMC,EAAOrB,GACrC,IAAIC,EAAWqB,KAAKC,UAAUC,WAC9B,GAAW,QAARxB,EAAe,CACjB,IAAIyB,EAAI7B,EAAa8B,OAAO,OAC5B7B,EAASO,IAAIqB,GACZE,SAAY,WACZC,MAAS,SAEVhC,EAAaiC,MAAMJ,EAAGxB,GAEvB,OAAOA,GAGR6B,cAAe,SAAS7B,EAAUmB,EAAMC,EAAOrB,GAClC,QAARA,EACHsB,KAAKC,UAAUC,YAEf3B,EAASO,IAAIH,EAAU,aAAcqB,KAAKS,gBAAgBX,GAAMY,SAChE/B,EAASI,WAAW4B,UAAYX,KAAKY,gBAAgBd","file":"../../treemap/ScaledLabel.js","sourcesContent":["define([\"dojo/_base/declare\", \"dojo/dom-geometry\", \"dojo/dom-construct\", \"dojo/dom-style\"],\r\n\tfunction(declare, domGeom, domConstruct, domStyle) {\r\n\r\n\treturn declare(\"dojox.treemap.ScaledLabel\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tSpecializes TreeMap to display scaled leaf labels instead of constant size labels.\r\n\r\n\t\tonRendererUpdated: function(evt){\r\n\t\t\tif(evt.kind == \"leaf\"){\r\n\t\t\t\tvar renderer = evt.renderer;\r\n\t\t\t\t// start back with default size\r\n\t\t\t\tvar oldSize = domStyle.get(renderer, \"fontSize\");\r\n\t\t\t\tdomStyle.set(renderer.firstChild, \"fontSize\", oldSize);\r\n\t\t\t\toldSize = parseInt(oldSize);\r\n\t\t\t\tvar hRatio = 0.75 * domGeom.getContentBox(renderer).w / domGeom.getMarginBox(renderer.firstChild).w;\r\n\t\t\t\tvar vRatio = domGeom.getContentBox(renderer).h  / domGeom.getMarginBox(renderer.firstChild).h;\r\n\t\t\t\tvar hDiff = domGeom.getContentBox(renderer).w - domGeom.getMarginBox(renderer.firstChild).w;\r\n\t\t\t\tvar vDiff = domGeom.getContentBox(renderer).h - domGeom.getMarginBox(renderer.firstChild).h;\r\n\t\t\t\tvar newSize = Math.floor(oldSize * Math.min(hRatio, vRatio));\r\n\t\t\t\twhile(vDiff > 0 && hDiff > 0){\r\n\t\t\t\t\tdomStyle.set(renderer.firstChild, \"fontSize\", newSize + \"px\");\r\n\t\t\t\t\thDiff = domGeom.getContentBox(renderer).w - domGeom.getMarginBox(renderer.firstChild).w;\r\n\t\t\t\t\tvDiff = domGeom.getContentBox(renderer).h - domGeom.getMarginBox(renderer.firstChild).h;\r\n\t\t\t\t\toldSize = newSize;\r\n\t\t\t\t\tnewSize += 1;\r\n\t\t\t\t}\r\n\t\t\t\tif(vDiff < 0 || hDiff < 0){\r\n\t\t\t\t\t// back track\r\n\t\t\t\t\tdomStyle.set(renderer.firstChild, \"fontSize\", oldSize + \"px\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tcreateRenderer: function(item, level, kind){\r\n\t\t\tvar renderer = this.inherited(arguments);\r\n\t\t\tif(kind == \"leaf\"){\r\n\t\t\t\tvar p = domConstruct.create(\"div\");\r\n\t\t\t\tdomStyle.set(p, {\r\n\t\t\t\t\t\"position\": \"absolute\",\r\n\t\t\t\t\t\"width\": \"auto\"\r\n\t\t\t\t});\r\n\t\t\t\tdomConstruct.place(p, renderer);\r\n\t\t\t}\r\n\t\t\treturn renderer;\r\n\t\t},\r\n\t\t\r\n\t\tstyleRenderer: function(renderer, item, level, kind){\r\n\t\t\tif (kind != \"leaf\"){\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t}else{\r\n\t\t\t\tdomStyle.set(renderer, \"background\", this.getColorForItem(item).toHex());\r\n\t\t\t\trenderer.firstChild.innerHTML = this.getLabelForItem(item);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});"]}