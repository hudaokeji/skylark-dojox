{"version":3,"sources":["widget/Selection.js"],"names":["define","declare","arr","lang","Stateful","constructor","this","selectedItems","selectionMode","_setSelectionModeAttr","value","set","selectedItem","_setSelectedItemAttr","_set","_setSelectedItemsAttr","oldSelectedItems","length","updateRenderers","_getSelectedItemsAttr","concat","isItemSelected","item","some","hitch","sitem","getIdentity","setItemSelected","sel","get","unshift","res","filter","id","selectFromEvent","e","renderer","dispatch","changed","oldSelectedItem","selected","ctrlKey","dispatchChange","newSelectedItem","triggerEvent","onChange","oldValue","newValue"],"mappings":"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","file":"../../widget/Selection.js","sourcesContent":["define([\"dojo/_base/declare\", \"dojo/_base/array\", \"dojo/_base/lang\", \"dojo/Stateful\"], \r\n\tfunction(declare, arr, lang, Stateful){\r\n\t\t\r\n\treturn declare(\"dojox.widget.Selection\", Stateful, {\r\n\t\t// summary:\r\n\t\t//\t\tBase class for widgets that manage a list of selected data items.\r\n\r\n\t\tconstructor: function(){\r\n\t\t\tthis.selectedItems = [];\r\n\t\t},\r\n\t\t\r\n\t\t// selectionMode: String\r\n\t\t//\t\tValid values are:\r\n\t\t//\r\n\t\t//\t\t1. \"none\": No selection can be done.\r\n\t\t//\t\t2. \"single\": Only one item can be selected at a time.\r\n\t\t//\t\t3. \"multiple\": Several item can be selected using the control key modifier.\r\n\t\t//\t\tDefault value is \"single\".\r\n\t\tselectionMode: \"single\",\r\n\t\t\r\n\t\t_setSelectionModeAttr: function(value){\r\n\t\t\tif(value != \"none\" && value != \"single\" && value != \"multiple\"){\r\n\t\t\t\tvalue = \"single\"; //default value\r\n\t\t\t}\t\t\t\r\n\t\t\tif(value != this.selectionMode){\r\n\t\t\t\tthis.selectionMode = value;\r\n\t\t\t\tif(value == \"none\"){\r\n\t\t\t\t\tthis.set(\"selectedItems\", null);\r\n\t\t\t\t}else if(value == \"single\"){\r\n\t\t\t\t\tthis.set(\"selectedItem\", this.selectedItem); // null or last selected item \r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t// selectedItem: Object\r\n\t\t//\t\tIn single selection mode, the selected item or in multiple selection mode the last selected item.\r\n\t\t//\t\tWarning: Do not use this property directly, make sure to call set() or get() methods.\r\n\t\tselectedItem: null,\r\n\t\t\r\n\t\t_setSelectedItemAttr: function(value){\r\n\t\t\tif(this.selectedItem != value){\r\n\t\t\t\tthis._set(\"selectedItem\", value);\r\n\t\t\t\tthis.set(\"selectedItems\", value ? [value] : null);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t// selectedItems: Object[]\r\n\t\t//\t\tThe list of selected items.\r\n\t\t//\t\tWarning: Do not use this property directly, make sure to call set() or get() methods.\r\n\t\tselectedItems: null,\r\n\t\t\r\n\t\t_setSelectedItemsAttr: function(value){\r\n\t\t\tvar oldSelectedItems = this.selectedItems;\r\n\t\t\t\r\n\t\t\tthis.selectedItems = value;\r\n\t\t\tthis.selectedItem = null;\r\n\t\t\t\r\n\t\t\tif(oldSelectedItems != null && oldSelectedItems.length>0){\r\n\t\t\t\tthis.updateRenderers(oldSelectedItems, true);\r\n\t\t\t}\r\n\t\t\tif(this.selectedItems && this.selectedItems.length>0){\r\n\t\t\t\tthis.selectedItem = this.selectedItems[0];\r\n\t\t\t\tthis.updateRenderers(this.selectedItems, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t_getSelectedItemsAttr: function(){\r\n\t\t\treturn this.selectedItems == null ? [] : this.selectedItems.concat();\r\n\t\t},\r\n\t\t\r\n\t\tisItemSelected: function(item){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns whether an item is selected or not.\r\n\t\t\t// item: Object\r\n\t\t\t//\t\tThe item to test the selection for.\t\t\t\r\n\t\t\tif(this.selectedItems == null || this.selectedItems.length== 0){\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\treturn arr.some(this.selectedItems, lang.hitch(this, function(sitem){\r\n\t\t\t\treturn this.getIdentity(sitem) == this.getIdentity(item);\r\n\t\t\t}));\r\n\t\t},\r\n\t\t\r\n\t\tgetIdentity: function(item){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis function must be implemented to return the id of a item.\r\n\t\t\t// item: Object\r\n\t\t\t//\t\tThe item to query the identity for.\r\n\t\t},\r\n\t\t\r\n\t\tsetItemSelected: function(item, value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tChange the selection state of an item.\r\n\t\t\t// item: Object\r\n\t\t\t//\t\tThe item to change the selection state for.\r\n\t\t\t// value: Boolean\r\n\t\t\t//\t\tTrue to select the item, false to deselect it. \r\n\t\t\t\r\n\t\t\tif(this.selectionMode == \"none\" || item == null){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// copy is returned\r\n\t\t\tvar sel = this.get(\"selectedItems\");\r\n\t\t\tvar old = this.get(\"selectedItems\");\r\n\t\t\t\r\n\t\t\tif(this.selectionMode == \"single\"){\r\n\t\t\t\tif(value){\r\n\t\t\t\t\tthis.set(\"selectedItem\", item);\r\n\t\t\t\t}else if(this.isItemSelected(item)){\r\n\t\t\t\t\tthis.set(\"selectedItems\", null);\r\n\t\t\t\t}\r\n\t\t\t}else{ // multiple\r\n\t\t\t\tif(value){\r\n\t\t\t\t\tif(this.isItemSelected(item)){\r\n\t\t\t\t\t\treturn; // already selected\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(sel == null){\r\n\t\t\t\t\t\tsel = [item];\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tsel.unshift(item);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.set(\"selectedItems\", sel);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar res = arr.filter(sel, function(sitem){\r\n\t\t\t\t\t\treturn sitem.id != item.id; \r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(res == null || res.length == sel.length){\r\n\t\t\t\t\t\treturn; // already not selected\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.set(\"selectedItems\", res);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tselectFromEvent: function(e, item, renderer, dispatch){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tApplies selection triggered by an user interaction\r\n\t\t\t// e: Event\r\n\t\t\t//\t\tThe source event of the user interaction.\r\n\t\t\t// item: Object\r\n\t\t\t//\t\tThe render item that has been selected/deselected.\r\n\t\t\t// renderer: Object\r\n\t\t\t//\t\tThe visual renderer of the selected/deselected item.\t\t\t\r\n\t\t\t// dispatch: Boolean\r\n\t\t\t//\t\tWhether an event must be dispatched or not.\r\n\t\t\t// returns: Boolean\r\n\t\t\t//\t\tReturns true if the selection has changed and false otherwise.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\t\r\n\t\t\tif(this.selectionMode == \"none\"){\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar changed;\r\n\t\t\tvar oldSelectedItem = this.get(\"selectedItem\");\r\n\t\t\tvar selected = item ? this.isItemSelected(item): false;\r\n\t\t\t\r\n\t\t\tif(item == null){\r\n\t\t\t\tif(!e.ctrlKey && this.selectedItem != null){\r\n\t\t\t\t\tthis.set(\"selectedItem\", null);\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t}\r\n\t\t\t}else if(this.selectionMode == \"multiple\"){\r\n\t\t\t\t if(e.ctrlKey){\r\n\t\t\t\t\tthis.setItemSelected(item, !selected);\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.set(\"selectedItem\", item);\t\t\t\t\t\r\n\t\t\t\t\tchanged = true;\t\t\t\t\t\t\r\n\t\t\t\t}\t\t\t\t \t\t\t\t\t\t\t\t\r\n\t\t\t}else{ // single\r\n\t\t\t\tif(e.ctrlKey){\t\t\t\t\t\r\n\t\t\t\t\t//if the object is selected deselects it.\r\n\t\t\t\t\tthis.set(\"selectedItem\", selected ? null : item);\r\n\t\t\t\t\tchanged = true;\t\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(!selected){\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.set(\"selectedItem\", item);\r\n\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\r\n\t\t\tif(dispatch && changed){\r\n\t\t\t\tthis.dispatchChange(oldSelectedItem, this.get(\"selectedItem\"), renderer, e);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn changed;\r\n\t\t},\r\n\t\t\r\n\t\tdispatchChange: function(oldSelectedItem, newSelectedItem, renderer, triggerEvent){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDispatch a selection change event.\r\n\t\t\t// oldSelectedItem: Object\r\n\t\t\t//\t\tThe previously selectedItem.\r\n\t\t\t// newSelectedItem: Object\r\n\t\t\t//\t\tThe new selectedItem.\r\n\t\t\t// renderer: Object\r\n\t\t\t//\t\tThe visual renderer of the selected/deselected item.\r\n\t\t\t// triggerEvent: Event\r\n\t\t\t//\t\tThe event that lead to the selection of the item. \t\t\t\r\n\t\t\tthis.onChange({\r\n\t\t\t\toldValue: oldSelectedItem,\r\n\t\t\t\tnewValue: newSelectedItem,\r\n\t\t\t\trenderer: renderer,\r\n\t\t\t\ttriggerEvent: triggerEvent\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\tonChange: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the selection changed.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\t\t\t\r\n\t\t}\r\n\t});\r\n});\r\n"]}