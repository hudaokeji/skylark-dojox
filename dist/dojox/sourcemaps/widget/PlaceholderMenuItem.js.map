{"version":3,"sources":["widget/PlaceholderMenuItem.js"],"names":["define","array","declare","lang","style","kernel","query","registry","Menu","MenuItem","experimental","PlaceholderMenuItem","_replaced","_replacedWith","_isPlaceholder","postCreate","set","this","domNode","label","containerNode","innerHTML","inherited","arguments","replace","menuItems","index","getIndexInParent","p","getParent","forEach","item","addChild","unReplace","destroy","r","removeChild","destroyRecursive","extend","getPlaceholders","children","getChildren","child","_started","popup","concat","dropDownContainer","node","menu","byNode","push"],"mappings":";;;;;;;AAAAA,QAAQ,mBAAoB,qBAAsB,kBAAmB,iBAAkB,oBAAqB,aAAc,iBAAkB,aAAa,kBACrJ,SAASC,EAAOC,EAASC,EAAMC,EAAOC,EAAQC,EAAOC,EAAUC,EAAMC,GAEzEJ,EAAOK,aAAa,oCAEpB,IAAIC,EAAsBT,EAAQ,mCAAoCO,GAMrEG,WAAW,EACXC,cAAe,KACfC,gBAAgB,EAEhBC,WAAY,WACXX,EAAMY,IAAIC,KAAKC,QAAS,UAAW,QACnCD,KAAKJ,iBACDI,KAAKE,QACRF,KAAKE,MAAQF,KAAKG,cAAcC,WAEjCJ,KAAKK,UAAUC,YAGhBC,QAAS,SAA8BC,GAOtC,GAAGR,KAAKL,UAAY,OAAO,EAE3B,IAAIc,EAAQT,KAAKU,mBACjB,GAAGD,EAAQ,EAAI,OAAO,EAEtB,IAAIE,EAAIX,KAAKY,YAQb,OANA5B,EAAM6B,QAAQL,EAAW,SAASM,GACjCH,EAAEI,SAASD,EAAML,OAElBT,KAAKJ,cAAgBY,EAErBR,KAAKL,WAAY,GACV,GAGRqB,UAAW,SAAsBC,GAUhC,IAAIjB,KAAKL,UAAY,SAErB,IAAIgB,EAAIX,KAAKY,YACb,IAAID,EAAI,SAER,IAAIO,EAAIlB,KAAKJ,cAUb,OATAZ,EAAM6B,QAAQb,KAAKJ,cAAe,SAASkB,GAC1CH,EAAEQ,YAAYL,GACXG,GACFH,EAAKM,qBAGPpB,KAAKJ,iBACLI,KAAKL,WAAY,EAEVuB,KAmCT,OA9BAhC,EAAKmC,OAAO9B,GACX+B,gBAAiB,SAAqBpB,GASrC,IAAIgB,KAEAK,EAAWvB,KAAKwB,cAcpB,OAbAxC,EAAM6B,QAAQU,EAAU,SAASE,GAChC,IAAGA,EAAM5B,gBAAoBK,GAASuB,EAAMvB,OAASA,GAE/C,GAAGuB,EAAMC,UAAYD,EAAME,OAASF,EAAME,MAAML,gBACrDJ,EAAIA,EAAEU,OAAOH,EAAME,MAAML,gBAAgBpB,SACpC,IAAIuB,EAAMC,UAAYD,EAAMI,kBAAkB,CACnD,IAAIC,EAAOzC,EAAM,aAAcoC,EAAMI,mBAAmB,GACpDE,EAAOzC,EAAS0C,OAAOF,GACxBC,EAAKT,kBACPJ,EAAIA,EAAEU,OAAOG,EAAKT,gBAAgBpB,WAPnCgB,EAAEe,KAAKR,IAUNzB,MACIkB,KAIFxB","file":"../../widget/PlaceholderMenuItem.js","sourcesContent":["define([\"dojo/_base/array\", \"dojo/_base/declare\", \"dojo/_base/lang\", \"dojo/dom-style\", \"dojo/_base/kernel\", \"dojo/query\", \"dijit/registry\", \"dijit/Menu\",\"dijit/MenuItem\"],\r\n    function(array, declare, lang, style, kernel, query, registry, Menu, MenuItem){\r\n\r\nkernel.experimental(\"dojox.widget.PlaceholderMenuItem\");\r\n\r\nvar PlaceholderMenuItem = declare(\"dojox.widget.PlaceholderMenuItem\", MenuItem, {\r\n\t// summary:\r\n\t//\t\tA menu item that can be used as a placeholder.  Set the label\r\n\t//\t\tof this item to a unique key and you can then use it to add new\r\n\t//\t\titems at that location.  This item is not displayed.\r\n\t\r\n\t_replaced: false,\r\n\t_replacedWith: null,\r\n\t_isPlaceholder: true,\r\n\r\n\tpostCreate: function(){\r\n\t\tstyle.set(this.domNode, \"display\", \"none\");\r\n\t\tthis._replacedWith = [];\r\n\t\tif(!this.label){\r\n\t\t\tthis.label = this.containerNode.innerHTML;\r\n\t\t}\r\n\t\tthis.inherited(arguments);\r\n\t},\r\n\t\r\n\treplace: function(/*dijit/MenuItem[]*/ menuItems){\r\n\t\t// summary:\r\n\t\t//\t\treplaces this menu item with the given menuItems.  The original\r\n\t\t//\t\tmenu item is not actually removed from the menu - so if you want\r\n\t\t//\t\tit removed, you must do that explicitly.\r\n\t\t// returns:\r\n\t\t//\t\ttrue if the replace happened, false if not\r\n\t\tif(this._replaced){ return false; }\r\n\r\n\t\tvar index = this.getIndexInParent();\r\n\t\tif(index < 0){ return false; }\r\n\r\n\t\tvar p = this.getParent();\r\n\r\n\t\tarray.forEach(menuItems, function(item){\r\n\t\t\tp.addChild(item, index++);\r\n\t\t});\r\n\t\tthis._replacedWith = menuItems;\r\n\r\n\t\tthis._replaced = true;\r\n\t\treturn true;\r\n\t},\r\n\t\r\n\tunReplace: function(/*Boolean?*/ destroy){\r\n\t\t// summary:\r\n\t\t//\t\tRemoves menu items added by calling replace().  It returns the\r\n\t\t//\t\tarray of items that were actually removed (in case you want to\r\n\t\t//\t\tclean them up later)\r\n\t\t// destroy:\r\n\t\t//\t\tAlso call destroy on any removed items.\r\n\t\t// returns:\r\n\t\t//\t\tThe array of items that were actually removed\r\n\t\t\r\n\t\tif(!this._replaced){ return []; }\r\n\r\n\t\tvar p = this.getParent();\r\n\t\tif(!p){ return []; }\r\n\r\n\t\tvar r = this._replacedWith;\r\n\t\tarray.forEach(this._replacedWith, function(item){\r\n\t\t\tp.removeChild(item);\r\n\t\t\tif(destroy){\r\n\t\t\t\titem.destroyRecursive();\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis._replacedWith = [];\r\n\t\tthis._replaced = false;\r\n\r\n\t\treturn r; // dijit/MenuItem[]\r\n\t}\r\n});\r\n\r\n// Se need to extend dijit.Menu so that we have a getPlaceholders function.\r\nlang.extend(Menu, {\r\n\tgetPlaceholders: function(/*String?*/ label){\r\n\t\t// summary:\r\n\t\t//\t\tReturns an array of placeholders with the given label.  There\r\n\t\t//\t\tcan be multiples.\r\n\t\t// label:\r\n\t\t//\t\tLabel to search for - if not specified, then all placeholders\r\n\t\t//\t\tare returned\r\n\t\t// returns:\r\n\t\t//\t\tAn array of placeholders that match the given label\r\n\t\tvar r = [];\r\n\r\n\t\tvar children = this.getChildren();\r\n\t\tarray.forEach(children, function(child){\r\n\t\t\tif(child._isPlaceholder && (!label || child.label == label)){\r\n\t\t\t\tr.push(child);\r\n\t\t\t}else if(child._started && child.popup && child.popup.getPlaceholders){\r\n\t\t\t\tr = r.concat(child.popup.getPlaceholders(label));\r\n\t\t\t}else if(!child._started && child.dropDownContainer){\r\n\t\t\t\tvar node = query(\"[widgetId]\", child.dropDownContainer)[0];\r\n\t\t\t\tvar menu = registry.byNode(node);\r\n\t\t\t\tif(menu.getPlaceholders){\r\n\t\t\t\t\tr = r.concat(menu.getPlaceholders(label));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, this);\r\n\t\treturn r; // dojox/widget/PlaceholderMenuItem[]\r\n\t}\r\n});\r\n\r\nreturn PlaceholderMenuItem;\r\n\r\n});\r\n"]}