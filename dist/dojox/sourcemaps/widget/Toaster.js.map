{"version":3,"sources":["widget/Toaster.js"],"names":["define","declare","lang","connect","baseFx","domStyle","domClass","domGeometry","registry","WidgetBase","Templated","BackgroundIframe","coreFx","has","baseWindow","window","getObject","capitalize","w","substring","toUpperCase","templateString","messageTopic","messageTypes","MESSAGE","WARNING","ERROR","FATAL","defaultType","positionDirection","positionDirectionTypes","duration","slideDuration","separator","postCreate","this","inherited","arguments","hide","body","appendChild","domNode","subscribe","_handleMessage","message","isString","setContent","type","messageType","slideAnim","status","stop","fadeAnim","setTimeout","hitch","remove","containerNode","set","_setContent","add","show","nodeSize","getMarginBox","_cancelHideTimer","isVisible","_placeClip","_stickyMessage","_setHideTimer","style","pd","indexOf","left","top","h","Error","id","slideTo","node","nodes","anim","fadeOut","evt","play","isFunction","contentNode","innerHTML","_hideTimer","clearTimeout","bgIframe","iframe","display","view","getBox","clipNode","height","width","match","t","l","Math","round","clip","getUniqueId","onSelect","e","_scrollConnected","disconnect"],"mappings":"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","file":"../../widget/Toaster.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\", // declare\r\n        \"dojo/_base/lang\", // lang.getObject...\r\n\t\"dojo/_base/connect\", // connect.connect, connect.subscribe\r\n\t\"dojo/_base/fx\", // fx.fadeOut\r\n        \"dojo/dom-style\", // domStyle.set\r\n\t\"dojo/dom-class\", // domClass.add\r\n\t\"dojo/dom-geometry\", // domGeometry.getMarginBox\r\n\t\"dijit/registry\",    // registry.getUniqueId()\r\n\t\"dijit/_WidgetBase\",\r\n\t\"dijit/_TemplatedMixin\",\r\n\t\"dijit/BackgroundIframe\",\r\n\t\"dojo/fx\",\r\n\t\"dojo/has\",\r\n\t\"dojo/_base/window\",\r\n\t\"dojo/window\"\r\n], function(declare, lang, connect, baseFx, domStyle, domClass, domGeometry, registry, WidgetBase, Templated, BackgroundIframe, coreFx, has, baseWindow, window){\r\n\r\n\tlang.getObject(\"dojox.widget\", true);\r\n\r\n\tvar capitalize = function(/* String */w){\r\n\t    return w.substring(0,1).toUpperCase() + w.substring(1);\r\n\t};\r\n\r\n\treturn declare(\"dojox.widget.Toaster\", [WidgetBase, Templated], {\r\n\t\t// summary:\r\n\t\t//\t\tMessage that slides in from the corner of the screen, used for notifications\r\n\t\t//\t\tlike \"new email\".\r\n\r\n\t\ttemplateString: '<div class=\"dijitToasterClip\" dojoAttachPoint=\"clipNode\"><div class=\"dijitToasterContainer\" dojoAttachPoint=\"containerNode\" dojoAttachEvent=\"onclick:onSelect\"><div class=\"dijitToasterContent\" dojoAttachPoint=\"contentNode\"></div></div></div>',\r\n\r\n\t\t// messageTopic: String\r\n\t\t//\t\tName of topic; anything published to this topic will be displayed as a message.\r\n\t\t//\t\tMessage format is either String or an object like\r\n\t\t//\t\t{message: \"hello word\", type: \"error\", duration: 500}\r\n\t\tmessageTopic: \"\",\r\n\r\n\t\t// messageTypes: Enumeration\r\n\t\t//\t\tPossible message types.\r\n\t\tmessageTypes: {\r\n\t\t\tMESSAGE: \"message\",\r\n\t\t\tWARNING: \"warning\",\r\n\t\t\tERROR: \"error\",\r\n\t\t\tFATAL: \"fatal\"\r\n\t\t},\r\n\r\n\t\t// defaultType: String\r\n\t\t//\t\tIf message type isn't specified (see \"messageTopic\" parameter),\r\n\t\t//\t\tthen display message as this type.\r\n\t\t//\t\tPossible values in messageTypes enumeration (\"message\", \"warning\", \"error\", \"fatal\")\r\n\t\tdefaultType: \"message\",\r\n\r\n\t\t// positionDirection: String\r\n\t\t//\t\tPosition from which message slides into screen, one of\r\n\t\t//\t\t[\"br-up\", \"br-left\", \"bl-up\", \"bl-right\", \"tr-down\", \"tr-left\", \"tl-down\", \"tl-right\"]\r\n\t\tpositionDirection: \"br-up\",\r\n\r\n\t\t// positionDirectionTypes: Array\r\n\t\t//\t\tPossible values for positionDirection parameter\r\n\t\tpositionDirectionTypes: [\"br-up\", \"br-left\", \"bl-up\", \"bl-right\", \"tr-down\", \"tr-left\", \"tl-down\", \"tl-right\"],\r\n\r\n\t\t// duration: Integer\r\n\t\t//\t\tNumber of milliseconds to show message\r\n\t\tduration: 2000,\r\n\r\n\t\t// slideDuration: Integer\r\n\t\t//\t\tNumber of milliseconds for the slide animation, increasing will cause the Toaster\r\n\t\t//\t\tto slide in more slowly.\r\n\t\tslideDuration: 500,\r\n\r\n\t\t// separator: String\r\n\t\t//\t\tString used to separate messages if consecutive calls are made to setContent before previous messages go away\r\n\t\tseparator: \"<hr></hr>\",\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.hide();\r\n\r\n\t\t\t// place node as a child of body for positioning\r\n\t\t\tbaseWindow.body().appendChild(this.domNode);\r\n\r\n\t\t\tif(this.messageTopic){\r\n\t\t\t\tconnect.subscribe(this.messageTopic, this, \"_handleMessage\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_handleMessage: function(/*String|Object*/message){\r\n\t\t\tif(lang.isString(message)){\r\n\t\t\t\tthis.setContent(message);\r\n\t\t\t}else{\r\n\t\t\t\tthis.setContent(message.message, message.type, message.duration);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetContent: function(/*String|Function*/message, /*String*/messageType, /*int?*/duration){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets and displays the given message and show duration\r\n\t\t\t// message:\r\n\t\t\t//\t\tthe message. If this is a function, it will be called with this toaster widget as the only argument.\r\n\t\t\t// messageType:\r\n\t\t\t//\t\ttype of message; possible values in messageTypes enumeration (\"message\", \"warning\", \"error\", \"fatal\")\r\n\t\t\t// duration:\r\n\t\t\t//\t\tduration in milliseconds to display message before removing it. Widget has default value.\r\n\t\t\tduration = duration||this.duration;\r\n\t\t\t// sync animations so there are no ghosted fades and such\r\n\t\t\tif(this.slideAnim){\r\n\t\t\t\tif(this.slideAnim.status() != \"playing\"){\r\n\t\t\t\t\tthis.slideAnim.stop();\r\n\t\t\t\t}\r\n\t\t\t\tif(this.slideAnim.status() == \"playing\" || (this.fadeAnim && this.fadeAnim.status() == \"playing\")){\r\n\t\t\t\t\tsetTimeout(lang.hitch(this, function(){\r\n\t\t\t\t\t\tthis.setContent(message, messageType, duration);\r\n\t\t\t\t\t}), 50);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// determine type of content and apply appropriately\r\n\t\t\tfor(var type in this.messageTypes){\r\n\t\t\t\tdomClass.remove(this.containerNode, \"dijitToaster\" + capitalize(this.messageTypes[type]));\r\n\t\t\t}\r\n\r\n\t\t\tdomStyle.set(this.containerNode, \"opacity\", 1);\r\n\r\n\t\t\tthis._setContent(message);\r\n\r\n\t\t\tdomClass.add(this.containerNode, \"dijitToaster\" + capitalize(messageType || this.defaultType));\r\n\r\n\t\t\t// now do funky animation of widget appearing from\r\n\t\t\t// bottom right of page and up\r\n\t\t\tthis.show();\r\n\t\t\tvar nodeSize = domGeometry.getMarginBox(this.containerNode);\r\n\t\t\tthis._cancelHideTimer();\r\n\t\t\tif(this.isVisible){\r\n\t\t\t\tthis._placeClip();\r\n\t\t\t\t//update hide timer if no sticky message in stack\r\n\t\t\t\tif(!this._stickyMessage) {\r\n\t\t\t\t\tthis._setHideTimer(duration);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tvar style = this.containerNode.style;\r\n\t\t\t\tvar pd = this.positionDirection;\r\n\t\t\t\t// sets up initial position of container node and slide-out direction\r\n\t\t\t\tif(pd.indexOf(\"-up\") >= 0){\r\n\t\t\t\t\tstyle.left=0+\"px\";\r\n\t\t\t\t\tstyle.top=nodeSize.h + 10 + \"px\";\r\n\t\t\t\t}else if(pd.indexOf(\"-left\") >= 0){\r\n\t\t\t\t\tstyle.left=nodeSize.w + 10 +\"px\";\r\n\t\t\t\t\tstyle.top=0+\"px\";\r\n\t\t\t\t}else if(pd.indexOf(\"-right\") >= 0){\r\n\t\t\t\t\tstyle.left = 0 - nodeSize.w - 10 + \"px\";\r\n\t\t\t\t\tstyle.top = 0+\"px\";\r\n\t\t\t\t}else if(pd.indexOf(\"-down\") >= 0){\r\n\t\t\t\t\tstyle.left = 0+\"px\";\r\n\t\t\t\t\tstyle.top = 0 - nodeSize.h - 10 + \"px\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthrow new Error(this.id + \".positionDirection is invalid: \" + pd);\r\n\t\t\t\t}\r\n\t\t\t\tthis.slideAnim = coreFx.slideTo({\r\n\t\t\t\t\tnode: this.containerNode,\r\n\t\t\t\t\ttop: 0, left: 0,\r\n\t\t\t\t\tduration: this.slideDuration});\r\n\t\t\t\tthis.connect(this.slideAnim, \"onEnd\", function(nodes, anim){\r\n\t\t\t\t\t\t//we build the fadeAnim here so we dont have to duplicate it later\r\n\t\t\t\t\t\t// can't do a fadeHide because we're fading the\r\n\t\t\t\t\t\t// inner node rather than the clipping node\r\n\t\t\t\t\t\tthis.fadeAnim = baseFx.fadeOut({\r\n\t\t\t\t\t\t\tnode: this.containerNode,\r\n\t\t\t\t\t\t\tduration: 1000});\r\n\t\t\t\t\t\tthis.connect(this.fadeAnim, \"onEnd\", function(evt){\r\n\t\t\t\t\t\t\tthis.isVisible = false;\r\n\t\t\t\t\t\t\tthis.hide();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthis._setHideTimer(duration);\r\n\t\t\t\t\t\tthis.connect(this, 'onSelect', function(evt){\r\n\t\t\t\t\t\t\tthis._cancelHideTimer();\r\n\t\t\t\t\t\t\t//force clear sticky message\r\n\t\t\t\t\t\t\tthis._stickyMessage=false;\r\n\t\t\t\t\t\t\tthis.fadeAnim.play();\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tthis.isVisible = true;\r\n\t\t\t\t\t});\r\n\t\t\t\tthis.slideAnim.play();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setContent: function(message){\r\n\t\t\tif(lang.isFunction(message)){\r\n\t\t\t\tmessage(this);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(message && this.isVisible){\r\n\t\t\t\tmessage = this.contentNode.innerHTML + this.separator + message;\r\n\t\t\t}\r\n\t\t\tthis.contentNode.innerHTML = message;\r\n\t\t},\r\n\t\t_cancelHideTimer:function(){\r\n\t\t\tif (this._hideTimer){\r\n\t\t\t\tclearTimeout(this._hideTimer);\r\n\t\t\t\tthis._hideTimer=null;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setHideTimer:function(duration){\r\n\t\t\tthis._cancelHideTimer();\r\n\t\t\t//if duration == 0 we keep the message displayed until clicked\r\n\t\t\tif(duration>0){\r\n\t\t\t\tthis._cancelHideTimer();\r\n\t\t\t\tthis._hideTimer=setTimeout(lang.hitch(this, function(evt){\r\n\t\t\t\t\t// we must hide the iframe in order to fade\r\n\t\t\t\t\t// TODO: figure out how to fade with a BackgroundIframe\r\n\t\t\t\t\tif(this.bgIframe && this.bgIframe.iframe){\r\n\t\t\t\t\t\tthis.bgIframe.iframe.style.display=\"none\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._hideTimer=null;\r\n\t\t\t\t\t//force clear sticky message\r\n\t\t\t\t\tthis._stickyMessage=false;\r\n\t\t\t\t\tthis.fadeAnim.play();\r\n\t\t\t\t}), duration);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tthis._stickyMessage=true;\r\n\t\t},\r\n\r\n\t\t_placeClip: function(){\r\n\t\t\tvar view = window.getBox();\r\n\r\n\t\t\tvar nodeSize = domGeometry.getMarginBox(this.containerNode);\r\n\r\n\t\t\tvar style = this.clipNode.style;\r\n\t\t\t// sets up the size of the clipping node\r\n\t\t\tstyle.height = nodeSize.h+\"px\";\r\n\t\t\tstyle.width = nodeSize.w+\"px\";\r\n\r\n\t\t\t// sets up the position of the clipping node\r\n\t\t\tvar pd = this.positionDirection;\r\n\t\t\tif(pd.match(/^t/)){\r\n\t\t\t\tstyle.top = view.t+\"px\";\r\n\t\t\t}else if(pd.match(/^b/)){\r\n\t\t\t\tstyle.top = (view.h - nodeSize.h - 2 + view.t)+\"px\";\r\n\t\t\t}\r\n\t\t\tif(pd.match(/^[tb]r-/)){\r\n\t\t\t\tstyle.left = (view.w - nodeSize.w - 1 - view.l)+\"px\";\r\n\t\t\t}else if(pd.match(/^[tb]l-/)){\r\n\t\t\t\tstyle.left = 0 + \"px\";\r\n\t\t\t}else if(pd.match(/^[tb]c-/)){\r\n\t\t\t\tstyle.left = Math.round((view.w - nodeSize.w - 1 - view.l)/2)+\"px\";\r\n\t\t\t}\r\n\r\n\t\t\tstyle.clip = \"rect(0px, \" + nodeSize.w + \"px, \" + nodeSize.h + \"px, 0px)\";\r\n\t\t\tif(has(\"ie\")){\r\n\t\t\t\tif(!this.bgIframe){\r\n\t\t\t\t\tif (!this.clipNode.id) {\r\n\t\t\t\t\t\tthis.clipNode.id = registry.getUniqueId(\"dojox_widget_Toaster_clipNode\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.bgIframe = new BackgroundIframe(this.clipNode);\r\n\t\t\t\t}\r\n\t\t\t\tvar iframe = this.bgIframe.iframe;\r\n\t\t\t\tif(iframe){ iframe.style.display=\"block\"; }\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonSelect: function(/*Event*/e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcallback for when user clicks the message\r\n\t\t},\r\n\r\n\t\tshow: function(){\r\n\t\t\t// summary:'\r\n\t\t\t//\t\tshow the Toaster\r\n\t\t\tdomStyle.set(this.domNode, 'display', 'block');\r\n\r\n\t\t\tthis._placeClip();\r\n\r\n\t\t\tif(!this._scrollConnected){\r\n\t\t\t\tthis._scrollConnected = connect.connect(window, \"onscroll\", this, this._placeClip);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\thide: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\thide the Toaster\r\n\r\n\t\t\tdomStyle.set(this.domNode, 'display', 'none');\r\n\r\n\t\t\tif(this._scrollConnected){\r\n\t\t\t\tconnect.disconnect(this._scrollConnected);\r\n\t\t\t\tthis._scrollConnected = false;\r\n\t\t\t}\r\n\r\n\t\t\tdomStyle.set(this.containerNode, \"opacity\", 1);\r\n\t\t}\r\n\t});\r\n\r\n});\r\n"]}