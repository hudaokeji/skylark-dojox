{"version":3,"sources":["widget/Portlet.js"],"names":["define","declare","kernel","lang","array","event","connect","domStyle","domClass","domConstruct","fx","registry","TitlePane","_Container","PortletSettings","PortletDialogSettings","experimental","resizeChildren","closable","_parents","_size","dragRestriction","buildRendering","this","inherited","arguments","set","domNode","postCreate","add","remove","arrowNode","titleBarNode","hideNode","_this","subscribe","_updateSize","widget","onSizeChange","window","lastId","doSelectSubscribe","hitch","id","byId","selectChild","s","child","n","parentNode","unsubscribe","push","parent","p","getAttribute","evt","contains","target","stop","_wipeOut","_publish","_wipeIn","closeIcon","_createIcon","startup","_started","children","getChildren","_placeSettingsWidgets","forEach","started","e","console","log","declaredClass","portletIconClass","toggle","get","portletIconHoverClass","place","containerNode","_settingsWidget","clazz","hoverClazz","fn","icon","create","class","waiRole","onClose","open","_timer","clearTimeout","setTimeout","size","w","h","i","length","sel","selectedChildWidget","fns","kids","isFunction","onUpdateSize","publish","_onTitleClick","addChild","destroyDescendants","preserveDom","destroyRecursive","destroy","_setCss","toggleable"],"mappings":"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","file":"../../widget/Portlet.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/kernel\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/event\",\r\n\t\"dojo/_base/connect\",\r\n\t\"dojo/dom-style\",\r\n\t\"dojo/dom-class\",\r\n\t\"dojo/dom-construct\",\r\n\t\"dojo/fx\",\r\n\t\"dijit/registry\",\r\n\t\"dijit/TitlePane\",\r\n\t\"dijit/_Container\",\r\n\t\"./PortletSettings\",\r\n\t\"./PortletDialogSettings\"\r\n\t], function(declare, kernel, lang, array, event, connect, domStyle, domClass, domConstruct, fx, registry,\r\n\t\t\t\tTitlePane, _Container, PortletSettings, PortletDialogSettings){\r\n\t\r\n\tkernel.experimental(\"dojox.widget.Portlet\");\r\n\t\r\n\treturn declare(\"dojox.widget.Portlet\", [TitlePane, _Container],{\r\n\t\t// summary:\r\n\t\t//\t\tA container widget that is designed to be contained\r\n\t\t//\t\tin a dojox.layout.GridContainer. Child widgets can insert\r\n\t\t//\t\tan icon into the title bar of the Portlet, which when\r\n\t\t//\t\tclicked, executes the \"toggle\" method of the child widget.\r\n\t\t//\t\tA child widget must specify the attribute\r\n\t\t//\t\t\"portletIconClass\", and the optional class\r\n\t\t//\t\t\"portletIconHoverClass\", as well as the\r\n\t\t//\t\t\"toggle\" function.\r\n\r\n\t\t// resizeChildren: Boolean\r\n\t\t//\t\tIf true, when the Portlet is resized, any child widgets\r\n\t\t//\t\twith a 'resize' method have that method called.\r\n\t\tresizeChildren: true,\r\n\r\n\t\t// closable: Boolean\r\n\t\t//\t\tIf true, a close button is placed in the title bar,\r\n\t\t//\t\tand the Portlet can be hidden. If false, the Portlet\r\n\t\t//\t\tcannot be closed.\r\n\t\tclosable: true,\r\n\r\n\t\t// _parents: Array\r\n\t\t//\t\t An array of all the StackContainer widgets that this Portlet\r\n\t\t//\t\tis contained in.\tThese are used to determine if the portlet\r\n\t\t//\t\tis visible or not.\r\n\t\t_parents: null,\r\n\r\n\t\t// _size: Object\r\n\t\t//\t\tCache of the previous size of the portlet, used to determine\r\n\t\t//\t\tif the size has changed and if the child widgets should be\r\n\t\t//\t\tresized.\r\n\t\t_size: null,\r\n\r\n\t\t// dragRestriction: Boolean\r\n\t\t//\t\tTo remove the drag capability.\r\n\t\tdragRestriction : false,\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Hide the portlet until it is fully constructed.\r\n\t\t\tdomStyle.set(this.domNode, \"visibility\", \"hidden\");\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Add the portlet classes\r\n\t\t\tdomClass.add(this.domNode, \"dojoxPortlet\");\r\n\t\t\tdomClass.remove(this.arrowNode, \"dijitArrowNode\");\r\n\t\t\tdomClass.add(this.arrowNode, \"dojoxPortletIcon dojoxArrowDown\");\r\n\t\t\tdomClass.add(this.titleBarNode, \"dojoxPortletTitle\");\r\n\t\t\tdomClass.add(this.hideNode, \"dojoxPortletContentOuter\");\r\n\r\n\t\t\t// Choose the class to add depending on if the portlet is draggable or not.\r\n\t\t\tdomClass.add(this.domNode, \"dojoxPortlet-\" + (!this.dragRestriction ? \"movable\" : \"nonmovable\"));\r\n\r\n\t\t\tvar _this = this;\r\n\t\t\tif(this.resizeChildren){\r\n\t\t\t\t// If children should be resized\twhen the portlet size changes,\r\n\t\t\t\t// listen for items being dropped, when the window is resized,\r\n\t\t\t\t// or when another portlet's size changes.\r\n\r\n\t\t\t\tthis.subscribe(\"/dnd/drop\", function(){_this._updateSize();});\r\n\r\n\t\t\t\tthis.subscribe(\"/Portlet/sizechange\", function(widget){_this.onSizeChange(widget);});\r\n\t\t\t\tthis.connect(window, \"onresize\", function(){_this._updateSize();});\r\n\r\n\t\t\t\t// Subscribe to all possible child-selection events that could affect this\r\n\t\t\t\t// portlet\r\n\t\t\t\tvar doSelectSubscribe = lang.hitch(this, function(id, lastId){\r\n\t\t\t\t\tvar widget = registry.byId(id);\r\n\t\t\t\t\tif(widget.selectChild){\r\n\t\t\t\t\t\tvar s = this.subscribe(id + \"-selectChild\", function(child){\r\n\t\t\t\t\t\t\tvar n = _this.domNode.parentNode;\r\n\r\n\t\t\t\t\t\t\twhile(n){\r\n\t\t\t\t\t\t\t\tif(n == child.domNode){\r\n\r\n\t\t\t\t\t\t\t\t\t// Only fire this once, as the widget is now visible\r\n\t\t\t\t\t\t\t\t\t// at least once, so child measurements should be accurate.\r\n\t\t\t\t\t\t\t\t\t_this.unsubscribe(s);\r\n\t\t\t\t\t\t\t\t\t_this._updateSize();\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tn = n.parentNode;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// Record the StackContainer and child widget that this portlet\r\n\t\t\t\t\t\t// is in, so it can figure out whether or not it is visible.\r\n\t\t\t\t\t\t// If it is not visible, it will not update it's size dynamically.\r\n\t\t\t\t\t\tvar child = registry.byId(lastId);\r\n\t\t\t\t\t\tif(widget && child){\r\n\t\t\t\t\t\t\t_this._parents.push({parent: widget, child: child});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tvar lastId;\r\n\t\t\t\tthis._parents = [];\r\n\r\n\t\t\t\t// Find all parent widgets, and if they are StackContainers,\r\n\t\t\t\t// subscribe to their selectChild method calls.\r\n\t\t\t\tfor(var p = this.domNode.parentNode; p != null; p = p.parentNode){\r\n\t\t\t\t\tvar id = p.getAttribute ? p.getAttribute(\"widgetId\") : null;\r\n\t\t\t\t\tif(id){\r\n\t\t\t\t\t\tdoSelectSubscribe(id, lastId);\r\n\t\t\t\t\t\tlastId = id;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Prevent clicks on icons from causing a drag to start.\r\n\t\t\tthis.connect(this.titleBarNode, \"onmousedown\", function(evt){\r\n\t\t\t\tif (domClass.contains(evt.target, \"dojoxPortletIcon\")) {\r\n\t\t\t\t\tevent.stop(evt);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\r\n\t\t\t// Inform all portlets that the size of this one has changed,\r\n\t\t\t// and therefore perhaps they have too\r\n\t\t\tthis.connect(this._wipeOut, \"onEnd\", function(){_this._publish();});\r\n\t\t\tthis.connect(this._wipeIn, \"onEnd\", function(){_this._publish();});\r\n\r\n\t\t\tif(this.closable){\r\n\t\t\t\tthis.closeIcon = this._createIcon(\"dojoxCloseNode\", \"dojoxCloseNodeHover\", lang.hitch(this, \"onClose\"));\r\n\t\t\t\tdomStyle.set(this.closeIcon, \"display\", \"\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\tif(this._started){return;}\r\n\r\n\t\t\tvar children = this.getChildren();\r\n\t\t\tthis._placeSettingsWidgets();\r\n\r\n\t\t\t// Start up the children\r\n\t\t\tarray.forEach(children, function(child){\r\n\t\t\t\ttry{\r\n\t\t\t\t\tif(!child.started && !child._started){\r\n\t\t\t\t\t\tchild.startup()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcatch(e){\r\n\t\t\t\t\tconsole.log(this.id + \":\" + this.declaredClass, e);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t//this._updateSize();\r\n\t\t\tdomStyle.set(this.domNode, \"visibility\", \"visible\");\r\n\t\t},\r\n\r\n\t\t_placeSettingsWidgets: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tChecks all the children to see if they are instances\r\n\t\t\t//\t\tof dojox.widget.PortletSettings. If they are,\r\n\t\t\t//\t\tcreate an icon for them in the title bar which when clicked,\r\n\t\t\t//\t\tcalls their toggle() method.\r\n\r\n\t\t\tarray.forEach(this.getChildren(), lang.hitch(this, function(child){\r\n\t\t\t\tif(child.portletIconClass && child.toggle && !child.get(\"portlet\")){\r\n\t\t\t\t\tthis._createIcon(child.portletIconClass, child.portletIconHoverClass, lang.hitch(child, \"toggle\"));\r\n\t\t\t\t\tdomConstruct.place(child.domNode, this.containerNode, \"before\");\r\n\t\t\t\t\tchild.set(\"portlet\", this);\r\n\t\t\t\t\tthis._settingsWidget = child;\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t},\r\n\r\n\t\t_createIcon: function(clazz, hoverClazz, fn){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreates an icon in the title bar.\r\n\r\n\t\t\tvar icon = domConstruct.create(\"div\",{\r\n\t\t\t\t\"class\": \"dojoxPortletIcon \" + clazz,\r\n\t\t\t\t\"waiRole\": \"presentation\"\r\n\t\t\t});\r\n\t\t\tdomConstruct.place(icon, this.arrowNode, \"before\");\r\n\r\n\t\t\tthis.connect(icon, \"onclick\", fn);\r\n\r\n\t\t\tif(hoverClazz){\r\n\t\t\t\tthis.connect(icon, \"onmouseover\", function(){\r\n\t\t\t\t\tdomClass.add(icon, hoverClazz);\r\n\t\t\t\t});\r\n\t\t\t\tthis.connect(icon, \"onmouseout\", function(){\r\n\t\t\t\t\tdomClass.remove(icon, hoverClazz);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn icon;\r\n\t\t},\r\n\r\n\t\tonClose: function(evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHides the portlet. Note that it does not\r\n\t\t\t//\t\tpersist this, so it is up to the client to\r\n\t\t\t//\t\tlisten to this method and persist the closed state\r\n\t\t\t//\t\tin their own way.\r\n\t\t\tdomStyle.set(this.domNode, \"display\", \"none\");\r\n\t\t},\r\n\r\n\t\tonSizeChange: function(widget){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUpdates the Portlet size if any other Portlet\r\n\t\t\t//\t\tchanges its size.\r\n\t\t\tif(widget == this){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._updateSize();\r\n\t\t},\r\n\r\n\t\t_updateSize: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUpdates the size of all child widgets.\r\n\t\t\tif(!this.open || !this._started || !this.resizeChildren){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(this._timer){\r\n\t\t\t\tclearTimeout(this._timer);\r\n\t\t\t}\r\n\t\t\t// Delay applying the size change in case the size\r\n\t\t\t// changes very frequently, for performance reasons.\r\n\t\t\tthis._timer = setTimeout(lang.hitch(this, function(){\r\n\t\t\t\tvar size ={\r\n\t\t\t\t\tw: domStyle.get(this.domNode, \"width\"),\r\n\t\t\t\t\th: domStyle.get(this.domNode, \"height\")\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// If the Portlet is in a StackWidget, and it is not\r\n\t\t\t\t// visible, do not update the size, as it could\r\n\t\t\t\t// make child widgets miscalculate.\r\n\t\t\t\tfor(var i = 0; i < this._parents.length; i++){\r\n\t\t\t\t\tvar p = this._parents[i];\r\n\t\t\t\t\tvar sel = p.parent.selectedChildWidget\r\n\t\t\t\t\tif(sel && sel != p.child){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(this._size){\r\n\t\t\t\t\t// If the size of the portlet hasn't changed, don't\r\n\t\t\t\t\t// resize the children, as this can be expensive\r\n\t\t\t\t\tif(this._size.w == size.w && this._size.h == size.h){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._size = size;\r\n\r\n\t\t\t\tvar fns = [\"resize\", \"layout\"];\r\n\t\t\t\tthis._timer = null;\r\n\t\t\t\tvar kids = this.getChildren();\r\n\r\n\t\t\t\tarray.forEach(kids, function(child){\r\n\t\t\t\t\tfor(var i = 0; i < fns.length; i++){\r\n\t\t\t\t\t\tif(lang.isFunction(child[fns[i]])){\r\n\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\tchild[fns[i]]();\r\n\t\t\t\t\t\t\t} catch(e){\r\n\t\t\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tthis.onUpdateSize();\r\n\t\t\t}), 100);\r\n\t\t},\r\n\r\n\t\tonUpdateSize: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStub function called when the size is changed.\r\n\t\t},\r\n\r\n\t\t_publish: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPublishes an event that all other portlets listen to.\r\n\t\t\t//\t\tThis causes them to update their child widgets if their\r\n\t\t\t//\t\tsize has changed.\r\n\t\t\tconnect.publish(\"/Portlet/sizechange\",[this]);\r\n\t\t},\r\n\r\n\t\t_onTitleClick: function(evt){\r\n\t\t\tif(evt.target == this.arrowNode){\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\taddChild: function(child){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdds a child widget to the portlet.\r\n\t\t\tthis._size = null;\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tif(this._started){\r\n\t\t\t\tthis._placeSettingsWidgets();\r\n\t\t\t\tthis._updateSize();\r\n\t\t\t}\r\n\t\t\tif(this._started && !child.started && !child._started){\r\n\t\t\t\tchild.startup();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdestroyDescendants: function(/*Boolean*/ preserveDom){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(this._settingsWidget){\r\n\t\t\t\tthis._settingsWidget.destroyRecursive(preserveDom);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tif(this._timer){\r\n\t\t\t\tclearTimeout(this._timer);\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_setCss: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tdomStyle.set(this.arrowNode, \"display\", this.toggleable ? \"\":\"none\");\r\n\t\t}\r\n\t});\r\n});"]}