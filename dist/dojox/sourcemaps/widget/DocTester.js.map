{"version":3,"sources":["widget/DocTester.js"],"names":["dojo","provide","require","declare","dijit","_Widget","_Templated","templateString","cache","widgetsInTemplate","_fillContent","source","src","innerHTML","this","doctests","dojox","testing","DocTest","tests","getTestsFromString","_unescapeHtml","lineNumbers","map","lines","split","actualResultHtml","content","i","length","index","indexOf","replace","containerNode","postCreate","inherited","arguments","connect","runButtonNode","hitch","resetButtonNode","numTestsNode","runTests","results","ok","nok","ret","runTest","commands","expectedResult","query","domNode","addClass","success","numTestsOkNode","numTestsNokNode","act","style","toJson","actualResult","cancel","reset","removeClass","str","String"],"mappings":";;;;;;;AAAAA,KAAKC,QAAQ,0BAEbD,KAAKE,QAAQ,eACbF,KAAKE,QAAQ,iBACbF,KAAKE,QAAQ,oBACbF,KAAKE,QAAQ,yBACbF,KAAKE,QAAQ,yBAEbF,KAAKG,QAAQ,0BACXC,MAAMC,QAASD,MAAME,aAKrBC,eAAgBP,KAAKQ,MAAM,eAAe,4BAC1CC,mBAAmB,EAEnBC,aAAa,SAAoBC,GAGhC,IAAIC,EAAMD,EAAOE,UACjBC,KAAKC,SAAW,IAAIC,MAAMC,QAAQC,QAClCJ,KAAKK,MAAQL,KAAKC,SAASK,mBAAmBN,KAAKO,cAAcT,IAKjE,IAJA,IAAIU,EAActB,KAAKuB,IAAIT,KAAKK,MAAO,sBACnCK,EAAQZ,EAAIa,MAAM,MAClBC,EAAmB,0FACnBC,EAAU,sCACLC,EAAE,EAAGA,EAAEJ,EAAMK,OAAQD,IAAI,CACjC,IAAIE,EAAQ9B,KAAK+B,QAAQT,EAAaM,GACtC,GAAIE,EAAM,IAAa,GAARA,EAEdH,GAAWD,EACVC,GAAW,qCAAsCG,EAAO,KAF3CA,EAAM,EAAI,OAAS,OAEoC,KAEtEH,GAAWH,EAAMI,GAAGI,QAAQ,OAAQ,IAAI,KAEzCL,GAAWD,EAAmB,SAC9BZ,KAAKmB,cAAcpB,UAAYc,GAGhCO,WAAW,WACVpB,KAAKqB,UAAU,aAAcC,WAC7BpC,KAAKqC,QAAQvB,KAAKwB,cAAe,UAAWtC,KAAKuC,MAAMzB,KAAM,aAC7Dd,KAAKqC,QAAQvB,KAAK0B,gBAAiB,UAAWxC,KAAKuC,MAAMzB,KAAM,UAC/DA,KAAK2B,aAAa5B,UAAYC,KAAKK,MAAMU,QAG1Ca,SAAS,WAER,IADA,IAAIC,GAAWC,GAAG,EAAGC,IAAI,GAChBjB,EAAE,EAAGA,EAAEd,KAAKK,MAAMU,OAAQD,IAAI,CACtC,IAAIkB,EAAMhC,KAAKC,SAASgC,QAAQjC,KAAKK,MAAMS,GAAGoB,SAAUlC,KAAKK,MAAMS,GAAGqB,gBAEtE,GADAjD,KAAKkD,MAAM,WAAWtB,EAAGd,KAAKqC,SAASC,SAASN,EAAIO,QAAU,WAAa,aACtEP,EAAIO,QAORV,EAAQC,KACR9B,KAAKwC,eAAezC,UAAY8B,EAAQC,OARxB,CAChBD,EAAQE,MACR/B,KAAKyC,gBAAgB1C,UAAY8B,EAAQE,IACzC,IAAIW,EAAMxD,KAAKkD,MAAM,WAAWtB,EAAE,iBAAkBd,KAAKqC,SAAS,GAClEnD,KAAKyD,MAAMD,EAAK,UAAW,UAC3BxD,KAAKkD,MAAM,UAAWM,GAAK,GAAG3C,UAAYb,KAAK0D,OAAOZ,EAAIa,eAM5D7C,KAAKwB,cAAcsB,SACnB5D,KAAKyD,MAAM3C,KAAKwB,cAAca,QAAS,UAAW,QAClDnD,KAAKyD,MAAM3C,KAAK0B,gBAAgBW,QAAS,UAAW,KAGrDU,MAAM,WAGL7D,KAAKyD,MAAM3C,KAAKwB,cAAca,QAAS,UAAW,IAClDnD,KAAKyD,MAAM3C,KAAK0B,gBAAgBW,QAAS,UAAW,QACpDrC,KAAKwC,eAAezC,UAAY,IAChCC,KAAKyC,gBAAgB1C,UAAY,IACjCb,KAAKkD,MAAM,gBAAiBpC,KAAKqC,SAASM,MAAM,UAAW,QAC3DzD,KAAKkD,MAAM,YAAapC,KAAKqC,SAASW,YAAY,YAAYA,YAAY,cAG3EzC,cAAc,SAAsB0C,GAMnC,OAHAA,EAAMC,OAAOD,GAAK/B,QAAQ,UAAW,KAAKA,QAAQ,SAAU,KAC1DA,QAAQ,SAAU,KAAKA,QAAQ,WAAY","file":"../../widget/DocTester.js","sourcesContent":["dojo.provide(\"dojox.widget.DocTester\");\r\n\r\ndojo.require(\"dojo.string\");\r\ndojo.require(\"dijit._Widget\");\r\ndojo.require(\"dijit._Templated\");\r\ndojo.require(\"dojox.form.BusyButton\");\r\ndojo.require(\"dojox.testing.DocTest\");\r\n\r\ndojo.declare('dojox.widget.DocTester',\r\n\t[dijit._Widget, dijit._Templated],\r\n\t{\r\n\t\t// summary:\r\n\t\t//\t\tA widget to run DocTests inside an HTML page.\r\n\r\n\t\ttemplateString: dojo.cache('dojox.widget','DocTester/DocTester.html'),\r\n\t\twidgetsInTemplate: true,\r\n\t\r\n\t\t_fillContent:function(/*DomNode*/source){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverridden from _Templates.js, which actually just takes care of filling the containerNode.\r\n\t\t\tvar src = source.innerHTML;\r\n\t\t\tthis.doctests = new dojox.testing.DocTest();\r\n\t\t\tthis.tests = this.doctests.getTestsFromString(this._unescapeHtml(src));\r\n\t\t\tvar lineNumbers = dojo.map(this.tests, 'return item.line-1');\r\n\t\t\tvar lines = src.split(\"\\n\");\r\n\t\t\tvar actualResultHtml = '<div class=\"actualResult\">FAILED, actual result was: <span class=\"result\"></span></div>';\r\n\t\t\tvar content = '<pre class=\"testCase testNum0 odd\">';\r\n\t\t\tfor (var i=0; i<lines.length; i++){\r\n\t\t\t\tvar index = dojo.indexOf(lineNumbers, i);\r\n\t\t\t\tif (index>0 && index!=-1){\r\n\t\t\t\t\tvar evenOdd = index%2 ? \"even\" : \"odd\";\r\n\t\t\t\t\tcontent += actualResultHtml;\r\n \t\t\t\t\tcontent += '</pre><pre class=\"testCase testNum'+ index +' '+evenOdd+'\">';\r\n\t\t\t\t}\r\n\t\t\t\tcontent += lines[i].replace(/^\\s+/, \"\")+\"\\n\";\r\n\t\t\t}\r\n\t\t\tcontent += actualResultHtml + '</pre>';\r\n\t\t\tthis.containerNode.innerHTML = content;\r\n\t\t},\r\n\t\r\n\t\tpostCreate:function(){\r\n\t\t\tthis.inherited(\"postCreate\", arguments);\r\n\t\t\tdojo.connect(this.runButtonNode, \"onClick\", dojo.hitch(this, \"runTests\"));\r\n\t\t\tdojo.connect(this.resetButtonNode, \"onClick\", dojo.hitch(this, \"reset\"));\r\n\t\t\tthis.numTestsNode.innerHTML = this.tests.length;\r\n\t\t},\r\n\t\t\r\n\t\trunTests:function(){\r\n\t\t\tvar results = {ok:0, nok:0};\r\n\t\t\tfor (var i=0; i<this.tests.length; i++){\r\n\t\t\t\tvar ret = this.doctests.runTest(this.tests[i].commands, this.tests[i].expectedResult);\r\n\t\t\t\tdojo.query(\".testNum\"+i, this.domNode).addClass(ret.success ? \"resultOk\" : \"resultNok\");\r\n\t\t\t\tif (!ret.success){\r\n\t\t\t\t\tresults.nok++;\r\n\t\t\t\t\tthis.numTestsNokNode.innerHTML = results.nok;\r\n\t\t\t\t\tvar act = dojo.query(\".testNum\"+i+\" .actualResult\", this.domNode)[0];\r\n\t\t\t\t\tdojo.style(act, \"display\", \"inline\");\r\n\t\t\t\t\tdojo.query(\".result\", act)[0].innerHTML = dojo.toJson(ret.actualResult);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresults.ok++;\r\n\t\t\t\t\tthis.numTestsOkNode.innerHTML = results.ok;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.runButtonNode.cancel();\r\n\t\t\tdojo.style(this.runButtonNode.domNode, \"display\", \"none\");\r\n\t\t\tdojo.style(this.resetButtonNode.domNode, \"display\", \"\");\r\n\t\t},\r\n\t\t\r\n\t\treset:function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReset the DocTester visuals and enable the \"Run tests\" button again.\r\n\t\t\tdojo.style(this.runButtonNode.domNode, \"display\", \"\");\r\n\t\t\tdojo.style(this.resetButtonNode.domNode, \"display\", \"none\");\r\n\t\t\tthis.numTestsOkNode.innerHTML = \"0\";\r\n\t\t\tthis.numTestsNokNode.innerHTML = \"0\";\r\n\t\t\tdojo.query(\".actualResult\", this.domNode).style(\"display\", \"none\");\r\n\t\t\tdojo.query(\".testCase\", this.domNode).removeClass(\"resultOk\").removeClass(\"resultNok\");\r\n\t\t},\r\n\t\t\r\n\t\t_unescapeHtml:function(/* String */ str){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdds escape sequences for special characters in XML: &<>\"'\r\n\t\t\tstr = String(str).replace(/&amp;/gm, \"&\").replace(/&lt;/gm, \"<\")\r\n\t\t\t\t.replace(/&gt;/gm, \">\").replace(/&quot;/gm, '\"');\r\n\t\t\t// TODO Should become dojo.html.unentities() or so, when exists use instead\r\n\t\t\treturn str; // String\r\n\t\t}\r\n\t}\r\n);"]}