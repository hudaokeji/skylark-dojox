{"version":3,"sources":["widget/SortList.js"],"names":["dojo","provide","experimental","require","declare","dijit","layout","_LayoutWidget","_Templated","title","heading","descending","selected","sortable","store","key","baseClass","templateString","cache","_addItem","item","create","innerHTML","this","getValue","replace","containerNode","postCreate","getObject","props","onItem","hitch","onComplete","fetch","onSort","inherited","arguments","startup","setTitle","setTimeout","connect","titleNode","resize","offset","_contentBox","style","bodyWrapper","height","Math","abs","e","arr","query","domNode","addClass","removeClass","sort","_sorter","reverse","i","forEach","appendChild","_set","target","_unset","_handleClick","toggleClass","focus","_updateValues","_selected","node","push","onChanged","a","b","aStr","bStr","focusNode"],"mappings":";;;;;;;AAAAA,KAAKC,QAAQ,yBACbD,KAAKE,aAAa,yBAElBF,KAAKG,QAAQ,8BACbH,KAAKG,QAAQ,oBAEbH,KAAKI,QAAQ,yBACXC,MAAMC,OAAOC,cAAeF,MAAMG,aASnCC,MAAO,GAMPC,QAAS,GAITC,YAAY,EAIZC,SAAU,KAIVC,UAAU,EAGVC,MAAO,GACPC,IAAK,OAELC,UAAW,gBAEXC,eAAgBjB,KAAKkB,MAAM,eAAe,0BAE1CC,SAAU,SAASC,GAClBpB,KAAKqB,OAAO,MACXC,UAAWC,KAAKT,MAAMU,SAASJ,EAAMG,KAAKR,KAAKU,QAAQ,KAAM,SAC3DF,KAAKG,gBAGTC,WAAY,WACX,GAAGJ,KAAKT,MAAM,CACbS,KAAKT,MAAQd,KAAK4B,UAAUL,KAAKT,OACjC,IAAIe,GACHC,OAAQ9B,KAAK+B,MAAMR,KAAM,YACzBS,WAAYhC,KAAK+B,MAAMR,KAAM,WAE9BA,KAAKT,MAAMmB,MAAMJ,QACXN,KAAKW,SACZX,KAAKY,UAAUC,YAGhBC,QAAS,WACRd,KAAKY,UAAUC,WACZb,KAAKb,UACPa,KAAKe,SAASf,KAAKb,SACnBa,KAAKd,MAAQc,KAAKb,SAGnB6B,WAAWvC,KAAK+B,MAAMR,KAAK,UAAW,GACnCA,KAAKV,UAAWU,KAAKiB,QAAQjB,KAAKkB,UAAU,UAAW,WAG3DC,OAAQ,WAGPnB,KAAKY,UAAUC,WAMf,IAAIO,EAAWpB,KAAKqB,YAAa,EAAK5C,KAAK6C,MAAMtB,KAAKkB,UAAU,UAAY,GAC5ElB,KAAKuB,YAAYD,MAAME,OAASC,KAAKC,IAAIN,GAAU,MAGpDT,OAAQ,SAAoBgB,GAI3B,IAAIC,EAAMnD,KAAKoD,MAAM,KAAK7B,KAAK8B,SAC3B9B,KAAKV,WACRU,KAAKZ,YAAcY,KAAKZ,WACxBX,KAAKsD,SAAS/B,KAAKkB,UAAYlB,KAAe,WAAE,eAAe,eAC/DvB,KAAKuD,YAAYhC,KAAKkB,UAAYlB,KAAe,WAAE,cAAc,gBACjE4B,EAAIK,KAAKjC,KAAKkC,SACXlC,KAAKZ,YAAawC,EAAIO,WAE1B,IAAIC,EAAE,EACN3D,KAAK4D,QAAQT,EAAI,SAAS/B,GACzBpB,KAAM2D,IAAO,GAAM,EAAI,WAAa,eAAevC,EAAK,mBACxDG,KAAKG,cAAcmC,YAAYzC,IAC9BG,OAGHuC,KAAM,SAAoBZ,GAGtBA,EAAEa,SAAWxC,KAAKuB,aACpB9C,KAAKsD,SAASJ,EAAEa,OAAO,sBAIzBC,OAAQ,SAAqBd,GAG5BlD,KAAKuD,YAAYL,EAAEa,OAAO,sBAG3BE,aAAc,SAAqBf,GAIlClD,KAAKkE,YAAYhB,EAAEa,OAAO,wBAC1Bb,EAAEa,OAAOI,QACT5C,KAAK6C,cAAclB,EAAEa,OAAOzC,YAG7B8C,cAAe,WACd7C,KAAK8C,UAAYrE,KAAKoD,MAAM,0BAA2B7B,KAAKG,eAC5DH,KAAKX,YACLZ,KAAK4D,QAAQrC,KAAK8C,UAAW,SAASC,GACrC/C,KAAKX,SAAS2D,KAAKD,EAAKhD,YACtBC,MACHA,KAAKiD,UAAUpC,YAGhBqB,QAAS,SAASgB,EAAEC,GAGnB,IAAIC,EAAOF,EAAEnD,UACTsD,EAAOF,EAAEpD,UACb,OAAGqD,EAAKC,EAAc,EACnBD,EAAKC,GAAe,EAChB,GAGRtC,SAAU,SAAsB7B,GAG/Bc,KAAKsD,UAAUvD,UAAYC,KAAKd,MAAQA,GAGzC+D,UAAW","file":"../../widget/SortList.js","sourcesContent":["dojo.provide(\"dojox.widget.SortList\");\r\ndojo.experimental(\"dojox.widget.SortList\"); // level: prototype, designed for dijit.chat.demo\r\n\r\ndojo.require(\"dijit.layout._LayoutWidget\");\r\ndojo.require(\"dijit._Templated\");\r\n\r\ndojo.declare(\"dojox.widget.SortList\",\r\n\t[dijit.layout._LayoutWidget, dijit._Templated],\r\n\t{\r\n\t// summary:\r\n\t//\t\tA sortable unordered-list with a fixed header for use in dijit.demos.chat\r\n\t//\t\tfor demonstration purposes only for now. feel free to make API suggestions\r\n\t//\t\tor fixes.\r\n\t//\r\n\t// title: String\r\n\t//\t\tThe title in the header\r\n\ttitle: \"\",\r\n\t\r\n\t// heading: String\r\n\t//\t\tIn the event a parent container is expecting a title=\"\" attribute, set it for the parent\r\n\t//\t\tvia title, and the title of this widget via heading=\"\" ... assuming you want different\r\n\t//\t\ttitles for each. eg: TabContainer, AccordionContainer, etc.\r\n\theading: \"\",\r\n\r\n\t// descending: Boolean\r\n\t//\t\tToggle sort order based on this value.\r\n\tdescending: true,\r\n\r\n\t// selected: Array\r\n\t//\t\tA list of the selected `<li>` nodes at any given time.\r\n\tselected: null,\r\n\r\n\t// sortable: Boolean\r\n\t//\t\ttoggle to enable/disable sorting\r\n\tsortable: true,\r\n\r\n\t// FIXME: this is really simple store support\r\n\tstore: \"\",\r\n\tkey: \"name\",\r\n\t\r\n\tbaseClass: \"dojoxSortList\",\r\n\r\n\ttemplateString: dojo.cache(\"dojox.widget\",\"SortList/SortList.html\"),\r\n\r\n\t_addItem: function(item){\r\n\t\tdojo.create(\"li\", {\r\n\t\t\tinnerHTML: this.store.getValue(item, this.key).replace(/</g, \"&lt;\")\r\n\t\t}, this.containerNode);\r\n\t},\r\n\r\n\tpostCreate: function(){\r\n\t\tif(this.store){\r\n\t\t\tthis.store = dojo.getObject(this.store);\r\n\t\t\tvar props = {\r\n\t\t\t\tonItem: dojo.hitch(this, \"_addItem\"),\r\n\t\t\t\tonComplete: dojo.hitch(this, \"onSort\")\r\n\t\t\t};\r\n\t\t\tthis.store.fetch(props);\r\n\t\t}else{ this.onSort(); }\r\n\t\tthis.inherited(arguments);\r\n\t},\r\n\r\n\tstartup: function(){\r\n\t\tthis.inherited(arguments);\r\n\t\tif(this.heading){\r\n\t\t\tthis.setTitle(this.heading);\r\n\t\t\tthis.title = this.heading;\r\n\t\t}\r\n\t\t// we cheat, and give the browser just enough time so we know our height\r\n\t\tsetTimeout(dojo.hitch(this,\"resize\"), 5);\r\n\t\tif(this.sortable){ this.connect(this.titleNode,\"onclick\", \"onSort\"); }\r\n\t},\r\n\r\n\tresize: function(){\r\n\t\t// summary:\r\n\t\t//\t\tdo our additional calculations when resize() is called by or in a parent\r\n\t\tthis.inherited(arguments);\r\n\t\t// FIXME:\r\n\t\t// the 10 comes from the difference between the contentBox and calculated height\r\n\t\t// because of badding and border extents. this shouldn't be done this way, a theme change will\r\n\t\t// break it: but we also don't want to run getComputedStyle or dojo.coords() every time resize()\r\n\t\t// is fired.\r\n\t\tvar offset = ((this._contentBox.h) - (dojo.style(this.titleNode,\"height\")))-10;\r\n\t\tthis.bodyWrapper.style.height = Math.abs(offset) + \"px\";\r\n\t},\r\n\t\r\n\tonSort: function(/* Event */e){\r\n\t\t// summary:\r\n\t\t//\t\tsort the data, and style the nodes.\r\n\r\n\t\tvar arr = dojo.query(\"li\",this.domNode);\r\n\t\tif (this.sortable){\r\n\t\t\tthis.descending = !this.descending;\r\n\t\t\tdojo.addClass(this.titleNode,((this.descending)?\"sortListDesc\":\"sortListAsc\"));\r\n\t\t\tdojo.removeClass(this.titleNode,((this.descending)?\"sortListAsc\":\"sortListDesc\"));\r\n\t\t\tarr.sort(this._sorter);\r\n\t\t\tif(this.descending){ arr.reverse(); }\r\n\t\t}\r\n\t\tvar i=0;\r\n\t\tdojo.forEach(arr,function(item){\r\n\t\t\tdojo[(i++) % 2 === 0 ? \"addClass\" : \"removeClass\"](item,\"sortListItemOdd\");\r\n\t\t\tthis.containerNode.appendChild(item);\r\n\t\t},this);\r\n\t},\r\n\t\r\n\t_set: function(/* Event */e){\r\n\t\t// summary:\r\n\t\t//\t\tset hover state\r\n\t\tif(e.target !== this.bodyWrapper){\r\n\t\t\tdojo.addClass(e.target,\"sortListItemHover\");\r\n\t\t}\r\n\t},\r\n\r\n\t_unset: function(/* Event */ e){\r\n\t\t// summary:\r\n\t\t//\t\tremove hover state (FIXME: combine with _set?)\r\n\t\tdojo.removeClass(e.target,\"sortListItemHover\");\r\n\t},\r\n\r\n\t_handleClick: function(/* Event */ e){\r\n\t\t// summary:\r\n\t\t//\t\tclick listener for data portion of widget. toggle selected state\r\n\t\t//\t\tof node, and update this.selected array accordingly\r\n\t\tdojo.toggleClass(e.target,\"sortListItemSelected\");\r\n\t\te.target.focus();\r\n\t\tthis._updateValues(e.target.innerHTML);\r\n\t},\r\n\r\n\t_updateValues: function(){\r\n\t\tthis._selected = dojo.query(\"li.sortListItemSelected\", this.containerNode);\r\n\t\tthis.selected = [];\r\n\t\tdojo.forEach(this._selected, function(node){\r\n\t\t\tthis.selected.push(node.innerHTML);\r\n\t\t}, this);\r\n\t\tthis.onChanged(arguments);\r\n\t},\r\n\r\n\t_sorter: function(a,b){\r\n\t\t// summary:\r\n\t\t//\t\ta basic sort function, use query sort, or keep this?\r\n\t\tvar aStr = a.innerHTML;\r\n\t\tvar bStr = b.innerHTML;\r\n\t\tif(aStr>bStr){ return 1; }\r\n\t\tif(aStr<bStr){ return -1; }\r\n\t\treturn 0;\r\n\t},\r\n\r\n\tsetTitle: function(/* String */ title){\r\n\t\t// summary:\r\n\t\t//\t\tSets the widget title to a String\r\n\t\tthis.focusNode.innerHTML = this.title = title;\r\n\t},\r\n\r\n\tonChanged: function(){\r\n\t\t// summary:\r\n\t\t//\t\tstub function, passes the last changed item, and is fired after current state\r\n\t}\r\n\t\r\n});\r\n"]}