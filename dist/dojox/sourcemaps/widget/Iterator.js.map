{"version":3,"sources":["widget/Iterator.js"],"names":["dojo","provide","require","experimental","declare","dijit","Declaration","constructor","ctr","this","attrs","children","widgetClass","start","fetchMax","query","name","defaultValue","widgetCtor","dataValues","data","store","_srcIndex","_srcParent","_setSrcIndex","s","parentNode","ts","previousSibling","postscript","p","inherited","arguments","wc","getObject","map","prototype","templateString","match","slice","forEach","m","update","clear","length","domNode","fetch","onDataAvailable","_addItem","config","idx","isString","value","widget","push","place","getAttrValuesObj","item","obj","attr","getValue","end","count","onComplete","hitch","dojox","Iterator","_classes"],"mappings":";;;;;;;AAAAA,KAAKC,QAAQ,yBACbD,KAAKE,QAAQ,qBAEbF,KAAKG,aAAa,yBAoDlBH,KAAKI,QAAQ,yBACVC,MAAMC,cAGRC,YAAa,WACZ,IAAIC,EAAM,EACV,OAAO,WACNC,KAAKC,SACLD,KAAKE,YACLF,KAAKG,YAAc,mCAAoCJ,KAL5C,GASbK,MAAO,EACPC,SAAU,IACVC,OAASC,KAAM,KACfN,SACAO,aAAc,GACdC,WAAY,KACZC,cACAC,KAAM,KACNC,MAAO,KACPC,UAAW,EACXC,WAAY,KAEZC,aAAc,SAASC,GACtBhB,KAAKa,UAAY,EACjBb,KAAKc,WAAaE,EAAEC,WAEpB,IADA,IAAIC,EAAKF,EACHE,EAAGC,iBACRnB,KAAKa,YACLK,EAAKA,EAAGC,iBAIVC,WAAY,SAASC,EAAGL,GAEvBhB,KAAKe,aAAaC,GAGlBhB,KAAKsB,UAAU,aAAcC,WAC7B,IAAIC,EAAKxB,KAAKS,WAAalB,KAAKkC,UAAUzB,KAAKG,aAE/CH,KAAKC,MAAQV,KAAKmC,IACjBF,EAAGG,UAAUC,eAAeC,MAAM,0CAClC,SAASb,GAAI,OAAOA,EAAEc,MAAM,GAAI,KAEjCvC,KAAKwC,QACJ/B,KAAKC,MACL,SAAS+B,GAAIR,EAAGG,UAAUK,GAAK,KAEhChC,KAAKiC,UAGNC,MAAO,WACHlC,KAAKE,SAASiC,QAChBnC,KAAKe,aAAaf,KAAKE,SAAS,GAAGkC,SAEpC7C,KAAKwC,QAAQ/B,KAAKE,SAAU,mBAC5BF,KAAKE,aAGN+B,OAAQ,WACJjC,KAAKY,MAEPZ,KAAKqC,QAGLrC,KAAKsC,gBAAgBtC,KAAKW,MAAMX,KAAKU,aAIvC6B,SAAU,SAAmBC,EAAQC,GACjClD,KAAKmD,SAASF,KAChBA,GAAWG,MAAOH,IAEnB,IAAII,EAAS,IAAI5C,KAAKS,WAAW+B,GACjCxC,KAAKE,SAAS2C,KAAKD,GACnBrD,KAAKuD,MAAMF,EAAOR,QAASpC,KAAKc,WAAYd,KAAKa,UAAU4B,IAG5DM,iBAAkB,SAASC,GAC1B,IAAIC,KAcJ,OAbG1D,KAAKmD,SAASM,GAChBzD,KAAKwC,QAAQ/B,KAAKC,MAAO,SAASiD,GACjCD,EAAIC,GAAiB,SAARA,EAAmBF,EAAOhD,KAAKQ,cAC1CR,MAEHT,KAAKwC,QAAQ/B,KAAKC,MAAO,SAASiD,GAC9BlD,KAAKY,MACPqC,EAAIC,GAAQlD,KAAKY,MAAMuC,SAASH,EAAME,IAAOlD,KAAKQ,aAElDyC,EAAIC,GAAQF,EAAKE,IAAOlD,KAAKQ,cAE5BR,MAEGiD,GAGRX,gBAAiB,SAAS3B,GACzBX,KAAKkC,QAEL3C,KAAKwC,QAAQpB,EAAM,SAASqC,EAAMP,GACjCzC,KAAKuC,SAASvC,KAAK+C,iBAAiBC,GAAOP,IACzCzC,OAGJqC,MAAO,SAAS/B,EAAOF,EAAOgD,GAC7BpD,KAAKY,MAAMyB,OACV/B,MAAOA,GAAON,KAAKM,MACnBF,MAAOA,GAAOJ,KAAKI,MACnBiD,MAAOD,GAAKpD,KAAKK,SACjBiD,WAAY/D,KAAKgE,MAAMvD,KAAK,wBAK/BwD,MAAMZ,OAAOa,SAASC","file":"../../widget/Iterator.js","sourcesContent":["dojo.provide(\"dojox.widget.Iterator\");\r\ndojo.require(\"dijit.Declaration\");\r\n\r\ndojo.experimental(\"dojox.widget.Iterator\"); // level: prototype, designed for dijit.chat.demo\r\n\r\n/*\r\n\texample:\r\n\t\tfrom markup:\r\n\t|\t<span dojoType=\"dojo.data.ItemFileReadStore\"\r\n\t|\t\tjsId=\"cstore\" url=\"countries.json\"></span>\r\n\t|\r\n\t|\t<div>\r\n\t|\t\t<div dojoType=\"dojox.widget.Iterator\" store=\"cstore\"\r\n\t|\t\t\tquery=\"{ name: 'A*'}\">\r\n\t|\t\t\t${name} is a ${type}\r\n\t|\t\t</div>\r\n\t|\t</div>\r\n\r\n\texample:\r\n\t\tprogrammatic:\r\n\t|\tvar store = new dojo.data.ItemFileReadStore({ url: \"countries.json\" });\r\n\t|\r\n\t|\tvar iter = new dojox.widget.Iterator({\r\n\t|\t\tstore: store,\r\n\t|\t\ttemplate: \"\"\r\n\t|\t});\r\n\t|\r\n\r\n\texample:\r\n\t\tprogrammatic from an array of objects:\r\n\t|\tvar dataArr = [\r\n\t|\t\t{ name: \"foo\", valueAttr: \"bar\" },\r\n\t|\t\t{ name: \"thinger\", valueAttr: \"blah\" }\r\n\t|\t];\r\n\t|\r\n\t|\tvar iter = new dojox.widget.Iterator({\r\n\t|\t\tdata: dataArr,\r\n\t|\t\ttemplate: \"\"\r\n\t|\t});\r\n\r\n\texample:\r\n\t\tprogrammatic from an array of strings:\r\n\t|\tvar dataArr = [\r\n\t|\t\t{ name: \"foo\", valueAttr: \"bar\" },\r\n\t|\t\t{ name: \"thinger\", valueAttr: \"blah\" }\r\n\t|\t];\r\n\t|\r\n\t|\tvar iter = new dojox.widget.Iterator({\r\n\t|\t\tdata: dataArr,\r\n\t|\t\ttemplate: \"\"\r\n\t|\t});\r\n\r\n*/\r\n\r\n\r\ndojo.declare(\"dojox.widget.Iterator\",\r\n\t[ dijit.Declaration ],\r\n\t{\r\n\r\n\tconstructor: (function(){\r\n\t\tvar ctr = 0;\r\n\t\treturn function(){\r\n\t\t\tthis.attrs = [];\r\n\t\t\tthis.children = [];\r\n\t\t\tthis.widgetClass = \"dojox.widget.Iterator._classes._\"+(ctr++);\r\n\t\t}\r\n\t})(),\r\n\r\n\tstart: 0,\r\n\tfetchMax: 1000,\r\n\tquery: { name: \"*\" },\r\n\tattrs: [],\r\n\tdefaultValue: \"\",\r\n\twidgetCtor: null,\r\n\tdataValues: [], // an array of strings\r\n\tdata: null, // should be a reference to an Array\r\n\tstore: null,\r\n\t_srcIndex: 0,\r\n\t_srcParent: null,\r\n\r\n\t_setSrcIndex: function(s){\r\n\t\tthis._srcIndex = 0;\r\n\t\tthis._srcParent = s.parentNode;\r\n\t\tvar ts = s;\r\n\t\twhile(ts.previousSibling){\r\n\t\t\tthis._srcIndex++;\r\n\t\t\tts = ts.previousSibling;\r\n\t\t};\r\n\t},\r\n\r\n\tpostscript: function(p, s){\r\n\t\t// figure out the position of the source node in it's parent\r\n\t\tthis._setSrcIndex(s);\r\n\t\t// this._srcIndex = dojo.query(\">\", this._srcParent).indexOf(s);\r\n\r\n\t\tthis.inherited(\"postscript\", arguments);\r\n\t\tvar wc = this.widgetCtor = dojo.getObject(this.widgetClass);\r\n\r\n\t\tthis.attrs = dojo.map(\r\n\t\t\twc.prototype.templateString.match(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g),\r\n\t\t\tfunction(s){ return s.slice(2, -1); }\r\n\t\t);\r\n\t\tdojo.forEach(\r\n\t\t\tthis.attrs,\r\n\t\t\tfunction(m){ wc.prototype[m] = \"\"; }\r\n\t\t);\r\n\t\tthis.update();\r\n\t},\r\n\r\n\tclear: function(){\r\n\t\tif(this.children.length){\r\n\t\t\tthis._setSrcIndex(this.children[0].domNode);\r\n\t\t}\r\n\t\tdojo.forEach(this.children, \"item.destroy();\");\r\n\t\tthis.children = [];\r\n\t},\r\n\r\n\tupdate: function(){\r\n\t\tif(this.store){\r\n\t\t\t// we're executing a query\r\n\t\t\tthis.fetch();\r\n\t\t}else{\r\n\t\t\t// we came from an array of objects. Easier!\r\n\t\t\tthis.onDataAvailable(this.data||this.dataValues);\r\n\t\t}\r\n\t},\r\n\r\n\t_addItem: function(/*Object*/config, idx){\r\n\t\tif(dojo.isString(config)){\r\n\t\t\tconfig = { value: config };\r\n\t\t}\r\n\t\tvar widget = new this.widgetCtor(config);\r\n\t\tthis.children.push(widget);\r\n\t\tdojo.place(widget.domNode, this._srcParent, this._srcIndex+idx);\r\n\t},\r\n\r\n\tgetAttrValuesObj: function(item){\r\n\t\tvar obj = {};\r\n\t\tif(dojo.isString(item)){\r\n\t\t\tdojo.forEach(this.attrs, function(attr){\r\n\t\t\t\tobj[attr] = (attr == \"value\") ? item : this.defaultValue;\r\n\t\t\t}, this);\r\n\t\t}else{\r\n\t\t\tdojo.forEach(this.attrs, function(attr){\r\n\t\t\t\tif(this.store){\r\n\t\t\t\t\tobj[attr] = this.store.getValue(item, attr)||this.defaultValue;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tobj[attr] = item[attr]||this.defaultValue;\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t}\r\n\t\treturn obj;\r\n\t},\r\n\r\n\tonDataAvailable: function(data){\r\n\t\tthis.clear();\r\n\t\t// console.debug(data);\r\n\t\tdojo.forEach(data, function(item, idx){\r\n\t\t\tthis._addItem(this.getAttrValuesObj(item), idx);\r\n\t\t}, this);\r\n\t},\r\n\r\n\tfetch: function(query, start, end){\r\n\t\tthis.store.fetch({\r\n\t\t\tquery: query||this.query,\r\n\t\t\tstart: start||this.start,\r\n\t\t\tcount: end||this.fetchMax,\r\n\t\t\tonComplete: dojo.hitch(this,\"onDataAvailable\")\r\n\t\t});\r\n\t}\r\n});\r\n\r\ndojox.widget.Iterator._classes = {};\r\n"]}