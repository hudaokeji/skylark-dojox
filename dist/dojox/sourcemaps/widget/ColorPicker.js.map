{"version":3,"sources":["widget/ColorPicker.js"],"names":["define","kernel","declare","lang","ArrayUtil","html","Hub","has","win","Event","DOM","DOMClass","Keys","fx","move","registry","FocusManager","FormWidget","Typematic","color","i18n","bundle1","bundle2","template","experimental","showRgb","showHsv","showHex","webSafe","animatePoint","slideDuration","liveUpdate","PICKER_HUE_H","PICKER_SAT_VAL_H","PICKER_SAT_VAL_W","PICKER_HUE_SELECTOR_H","PICKER_SAT_SELECTOR_H","PICKER_SAT_SELECTOR_W","value","_underlay","require","toUrl","_hueUnderlay","_pickerPointer","_huePickerPointer","_huePickerPointerAlly","templateString","postMixInProperties","contains","body","this","_uId","getUniqueId","id","mixin","getLocalization","inherited","arguments","postCreate","colorUnderlay","style","filter","src","_blankGif","toString","rgbNode","visibility","hsvNode","hexNode","safePreviewNode","startup","_started","set","_mover","boxConstrainedMoveable","cursorNode","box","t","l","w","h","_hueMover","hueCursorNode","_subs","push","subscribe","hitch","_keyListeners","_connects","addKeyListener","charOrCode","UP_ARROW","shiftKey","metaKey","ctrlKey","altKey","_updateHueCursorNode","DOWN_ARROW","_updateCursorNode","LEFT_ARROW","RIGHT_ARROW","_setValueAttr","fireOnChange","setColor","col","force","fromString","_updatePickerLocations","_updateColorInputs","_updateValue","_setTimer","mover","node","focus","setSelectable","domNode","_timer","setInterval","_clearTimer","clearInterval","onChange","_setHue","fromHsv","toHex","count","e","y","selCenter","update","_updateColor","selCenterH","selCenterW","x","fireChange","hueSelCenter","satSelCenterH","satSelCenterW","_huetop","_pickertop","_pickerleft","Math","round","_hue","_colorInputChange","hasit","target","hexCode","Rval","Gval","Bval","fromArray","Hval","Sval","Vval","hex","valueNode","hsv","toHsv","ypos","newLeft","s","newTop","v","slideTo","duration","top","left","play","r","g","b","previewNode","backgroundColor","webSafeFromHex","_setHuePoint","evt","layerY","onEnd","_setPoint","layerX","_handleKey","focused","focusNode","_stopDrag","stop","destroy","forEach","sub","unsubscribe"],"mappings":"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","file":"../../widget/ColorPicker.js","sourcesContent":["define([\r\n\t\"dojo/_base/kernel\",\"dojo/_base/declare\",\"dojo/_base/lang\",\"dojo/_base/array\",\r\n\t\"dojo/_base/html\",\"dojo/_base/connect\",\"dojo/_base/sniff\",\"dojo/_base/window\",\r\n\t\"dojo/_base/event\",\"dojo/dom\",\"dojo/dom-class\",\"dojo/keys\",\"dojo/fx\",\"dojo/dnd/move\",\r\n\t\"dijit/registry\",\"dijit/_base/focus\",\"dijit/form/_FormWidget\",\"dijit/typematic\",\r\n\t\"dojox/color\",\"dojo/i18n\",\"dojo/i18n!./nls/ColorPicker\",\"dojo/i18n!dojo/cldr/nls/number\",\r\n\t\"dojo/text!./ColorPicker/ColorPicker.html\"\r\n], function(kernel,declare,lang,ArrayUtil,html,Hub,has,win,Event,DOM,DOMClass,Keys,fx,move,\r\n\t\tregistry,FocusManager,FormWidget,Typematic,color,i18n,bundle1,bundle2,template){\r\n\r\n\tkernel.experimental(\"dojox.widget.ColorPicker\");\r\n\t\r\n\tvar webSafeFromHex = function(hex){\r\n\t\t// stub, this is planned later:\r\n\t\treturn hex;\r\n\t};\r\n\r\n\t// TODO: shouldn't this extend _FormValueWidget?\r\n\treturn declare(\"dojox.widget.ColorPicker\", FormWidget, {\r\n\t\t// summary:\r\n\t\t//\t\ta HSV color picker - similar to Photoshop picker\r\n\t\t// description:\r\n\t\t//\t\tProvides an interactive HSV ColorPicker similar to\r\n\t\t//\t\tPhotoShop's color selction tool. This is an enhanced\r\n\t\t//\t\tversion of the default dijit.ColorPalette, though provides\r\n\t\t//\t\tno accessibility.\r\n\t\t// example:\r\n\t\t// |\tvar picker = new dojox.widget.ColorPicker({\r\n\t\t// |\t\t// a couple of example toggles:\r\n\t\t// |\t\tanimatePoint:false,\r\n\t\t// |\t\tshowHsv: false,\r\n\t\t// |\t\twebSafe: false,\r\n\t\t// |\t\tshowRgb: false\r\n\t\t// |\t});\r\n\t\t// example:\r\n\t\t// |\t<!-- markup: -->\r\n\t\t// |\t<div dojoType=\"dojox.widget.ColorPicker\"></div>\r\n\r\n\t\t// showRgb: Boolean\r\n\t\t//\t\tshow/update RGB input nodes\r\n\t\tshowRgb: true,\r\n\t\r\n\t\t// showHsv: Boolean\r\n\t\t//\t\tshow/update HSV input nodes\r\n\t\tshowHsv: true,\r\n\t\r\n\t\t// showHex: Boolean\r\n\t\t//\t\tshow/update Hex value field\r\n\t\tshowHex: true,\r\n\r\n\t\t// webSafe: Boolean\r\n\t\t//\t\tdeprecated? or just use a toggle to show/hide that node, too?\r\n\t\twebSafe: true,\r\n\r\n\t\t// animatePoint: Boolean\r\n\t\t//\t\ttoggle to use slideTo (true) or just place the cursor (false) on click\r\n\t\tanimatePoint: true,\r\n\r\n\t\t// slideDuration: Integer\r\n\t\t//\t\ttime in ms picker node will slide to next location (non-dragging) when animatePoint=true\r\n\t\tslideDuration: 250,\r\n\r\n\t\t// liveUpdate: Boolean\r\n\t\t//\t\tSet to true to fire onChange in an indeterminate way\r\n\t\tliveUpdate: false,\r\n\r\n\t\t// PICKER_HUE_H: int\r\n\t\t//\t\tHeight of the hue picker, used to calculate positions\r\n\t\tPICKER_HUE_H: 150,\r\n\t\t\r\n\t\t// PICKER_SAT_VAL_H: int\r\n\t\t//\t\tHeight of the 2d picker, used to calculate positions\r\n\t\tPICKER_SAT_VAL_H: 150,\r\n\t\t\r\n\t\t// PICKER_SAT_VAL_W: int\r\n\t\t//\t\tWidth of the 2d picker, used to calculate positions\r\n\t\tPICKER_SAT_VAL_W: 150,\r\n\r\n\t\t// PICKER_HUE_SELECTOR_H: int\r\n\t\t//\t\tHeight of the hue selector DOM node, used to calc offsets so that selection\r\n\t\t//\t\tis center of the image node.\r\n\t\tPICKER_HUE_SELECTOR_H: 8,\r\n\t\t\r\n\t\t// PICKER_SAT_SELECTOR_H: int\r\n\t\t//\t\tHeight of the saturation selector DOM node, used to calc offsets so that selection\r\n\t\t//\t\tis center of the image node.\r\n\t\tPICKER_SAT_SELECTOR_H: 10,\r\n\r\n\t\t// PICKER_SAT_SELECTOR_W: int\r\n\t\t//\t\tWidth of the saturation selector DOM node, used to calc offsets so that selection\r\n\t\t//\t\tis center of the image node.\r\n\t\tPICKER_SAT_SELECTOR_W: 10,\r\n\r\n\t\t// value: String\r\n\t\t//\t\tDefault color for this component. Only hex values are accepted as incoming/returned\r\n\t\t//\t\tvalues. Adjust this value with `.attr`, eg: dijit.byId(\"myPicker\").attr(\"value\", \"#ededed\");\r\n\t\t//\t\tto cause the points to adjust and the values to reflect the current color.\r\n\t\tvalue: \"#ffffff\",\r\n\t\t\r\n\t\t_underlay: require.toUrl(\"dojox/widget/ColorPicker/images/underlay.png\"),\r\n\r\n\t\t_hueUnderlay: require.toUrl(\"dojox/widget/ColorPicker/images/hue.png\"),\r\n\r\n\t\t_pickerPointer: require.toUrl(\"dojox/widget/ColorPicker/images/pickerPointer.png\"),\r\n\r\n\t\t_huePickerPointer: require.toUrl(\"dojox/widget/ColorPicker/images/hueHandle.png\"),\r\n\r\n\t\t_huePickerPointerAlly: require.toUrl(\"dojox/widget/ColorPicker/images/hueHandleA11y.png\"),\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tif(DOMClass.contains(win.body(), \"dijit_a11y\")){\r\n\t\t\t\t// Use the pointer that will show up in high contrast.\r\n\t\t\t\tthis._huePickerPointer = this._huePickerPointerAlly;\r\n\t\t\t}\r\n\t\t\tthis._uId = registry.getUniqueId(this.id);\r\n\t\t\tlang.mixin(this, i18n.getLocalization(\"dojox.widget\", \"ColorPicker\"));\r\n\t\t\tlang.mixin(this, i18n.getLocalization(\"dojo.cldr\", \"number\"));\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAs quickly as we can, set up ie6 alpha-filter support for our\r\n\t\t\t//\t\tunderlay.  we don't do image handles (done in css), just the 'core'\r\n\t\t\t//\t\tof this widget: the underlay.\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(has(\"ie\") < 7){\r\n\t\t\t\tthis.colorUnderlay.style.filter = \"progid:DXImageTransform.Microsoft.AlphaImageLoader(src='\"+this._underlay+\"', sizingMethod='scale')\";\r\n\t\t\t\tthis.colorUnderlay.src = this._blankGif.toString();\r\n\t\t\t}\r\n\t\t\t// hide toggle-able nodes:\r\n\t\t\tif(!this.showRgb){ this.rgbNode.style.visibility = \"hidden\"; }\r\n\t\t\tif(!this.showHsv){ this.hsvNode.style.visibility = \"hidden\"; }\r\n\t\t\tif(!this.showHex){ this.hexNode.style.visibility = \"hidden\"; }\r\n\t\t\tif(!this.webSafe){ this.safePreviewNode.style.visibility = \"hidden\"; }\r\n\t\t},\r\n\t\t\r\n\t\tstartup: function(){\r\n\t\t\tif(this._started){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._started = true;\r\n\t\t\tthis.set(\"value\", this.value);\r\n\t\t\tthis._mover = new move.boxConstrainedMoveable(this.cursorNode, {\r\n\t\t\t\tbox: {\r\n\t\t\t\t\tt: -(this.PICKER_SAT_SELECTOR_H/2),\r\n\t\t\t\t\tl: -(this.PICKER_SAT_SELECTOR_W/2),\r\n\t\t\t\t\tw:this.PICKER_SAT_VAL_W,\r\n\t\t\t\t\th:this.PICKER_SAT_VAL_H\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis._hueMover = new move.boxConstrainedMoveable(this.hueCursorNode, {\r\n\t\t\t\tbox: {\r\n\t\t\t\t\tt: -(this.PICKER_HUE_SELECTOR_H/2),\r\n\t\t\t\t\tl:0,\r\n\t\t\t\t\tw:0,\r\n\t\t\t\t\th:this.PICKER_HUE_H\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis._subs = [];\r\n\t\t\t// no dnd/move/move published ... use a timer:\r\n\t\t\tthis._subs.push(Hub.subscribe(\"/dnd/move/stop\", lang.hitch(this, \"_clearTimer\")));\r\n\t\t\tthis._subs.push(Hub.subscribe(\"/dnd/move/start\", lang.hitch(this, \"_setTimer\")));\r\n\r\n\t\t\t// Bind to up, down, left and right  arrows on the hue and saturation nodes.\r\n\t\t\tthis._keyListeners = [];\r\n\t\t\tthis._connects.push(Typematic.addKeyListener(this.hueCursorNode,{\r\n\t\t\t\tcharOrCode: Keys.UP_ARROW,\r\n\t\t\t\tshiftKey: false,\r\n\t\t\t\tmetaKey: false,\r\n\t\t\t\tctrlKey: false,\r\n\t\t\t\taltKey: false\r\n\t\t\t}, this, lang.hitch(this, this._updateHueCursorNode), 25, 25));\r\n\t\t\tthis._connects.push(Typematic.addKeyListener(this.hueCursorNode,{\r\n\t\t\t\tcharOrCode: Keys.DOWN_ARROW,\r\n\t\t\t\tshiftKey: false,\r\n\t\t\t\tmetaKey: false,\r\n\t\t\t\tctrlKey: false,\r\n\t\t\t\taltKey: false\r\n\t\t\t}, this, lang.hitch(this, this._updateHueCursorNode), 25, 25));\r\n\t\t\tthis._connects.push(Typematic.addKeyListener(this.cursorNode,{\r\n\t\t\t\tcharOrCode: Keys.UP_ARROW,\r\n\t\t\t\tshiftKey: false,\r\n\t\t\t\tmetaKey: false,\r\n\t\t\t\tctrlKey: false,\r\n\t\t\t\taltKey: false\r\n\t\t\t}, this, lang.hitch(this, this._updateCursorNode), 25, 25));\r\n\t\t\tthis._connects.push(Typematic.addKeyListener(this.cursorNode,{\r\n\t\t\t\tcharOrCode: Keys.DOWN_ARROW,\r\n\t\t\t\tshiftKey: false,\r\n\t\t\t\tmetaKey: false,\r\n\t\t\t\tctrlKey: false,\r\n\t\t\t\taltKey: false\r\n\t\t\t}, this, lang.hitch(this, this._updateCursorNode), 25, 25));\r\n\t\t\tthis._connects.push(Typematic.addKeyListener(this.cursorNode,{\r\n\t\t\t\tcharOrCode: Keys.LEFT_ARROW,\r\n\t\t\t\tshiftKey: false,\r\n\t\t\t\tmetaKey: false,\r\n\t\t\t\tctrlKey: false,\r\n\t\t\t\taltKey: false\r\n\t\t\t}, this, lang.hitch(this, this._updateCursorNode), 25, 25));\r\n\t\t\tthis._connects.push(Typematic.addKeyListener(this.cursorNode,{\r\n\t\t\t\tcharOrCode: Keys.RIGHT_ARROW,\r\n\t\t\t\tshiftKey: false,\r\n\t\t\t\tmetaKey: false,\r\n\t\t\t\tctrlKey: false,\r\n\t\t\t\taltKey: false\r\n\t\t\t}, this, lang.hitch(this, this._updateCursorNode), 25, 25));\r\n\t\t},\r\n\t\t\r\n\t\t_setValueAttr: function(value, fireOnChange){\r\n\t\t\tif(!this._started){ return; }\r\n\t\t\tthis.setColor(value, fireOnChange);\r\n\t\t},\r\n\t\t\r\n\t\tsetColor: function(/* String */col, force){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet a color on a picker. Usually used to set\r\n\t\t\t//\t\tinitial color as an alternative to passing defaultColor option\r\n\t\t\t//\t\tto the constructor.\r\n\t\t\tcol = color.fromString(col);\r\n\t\t\tthis._updatePickerLocations(col);\r\n\t\t\tthis._updateColorInputs(col);\r\n\t\t\tthis._updateValue(col, force);\r\n\t\t},\r\n\t\t\r\n\t\t_setTimer: function(/* dojo/dnd/Mover */mover){\r\n\t\t\tif(mover.node != this.cursorNode && mover.node != this.hueCursorNode){ return; }\r\n\t\t\t// FIXME: should I assume this? focus on mouse down so on mouse up\r\n\t\t\tFocusManager.focus(mover.node);\r\n\t\t\tDOM.setSelectable(this.domNode,false);\r\n\t\t\tthis._timer = setInterval(lang.hitch(this, \"_updateColor\"), 45);\r\n\t\t},\r\n\t\t\r\n\t\t_clearTimer: function(/* dojo/dnd/Mover */mover){\r\n\t\t\tif(!this._timer){ return; }\r\n\t\t\tclearInterval(this._timer);\r\n\t\t\tthis._timer = null;\r\n\t\t\tthis.onChange(this.value);\r\n\t\t\tDOM.setSelectable(this.domNode,true);\r\n\t\t},\r\n\t\t\r\n\t\t_setHue: function(/* Float */h){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets a natural color background for the\r\n\t\t\t//\t\tunderlay image against closest hue value (full saturation)\r\n\t\t\t// h:\r\n\t\t\t//\t\t0..360\r\n\t\t\thtml.style(this.colorUnderlay, \"backgroundColor\", color.fromHsv(h,100,100).toHex());\r\n\t\t\t\r\n\t\t},\r\n\r\n\t\t_updateHueCursorNode: function(count, node, e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction used by the typematic code to handle cursor position and update\r\n\t\t\t//\t\tvia keyboard.\r\n\t\t\t// count: Number\r\n\t\t\t//\t\t-1 means stop, anything else is just how many times it was called.\r\n\t\t\t// node: DomNode\r\n\t\t\t//\t\tThe node generating the event.\r\n\t\t\t// e: Event\r\n\t\t\t//\t\tThe event.\r\n\t\t\tif(count !== -1){\r\n\t\t\t\tvar y = html.style(this.hueCursorNode, \"top\");\r\n\t\t\t\tvar selCenter = this.PICKER_HUE_SELECTOR_H/2;\r\n\r\n\t\t\t\t// Account for our offset\r\n\t\t\t\ty += selCenter;\r\n\t\t\t\tvar update = false;\r\n\t\t\t\tif(e.charOrCode == Keys.UP_ARROW){\r\n\t\t\t\t\tif(y > 0){\r\n\t\t\t\t\t\ty -= 1;\r\n\t\t\t\t\t\tupdate = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else if(e.charOrCode == Keys.DOWN_ARROW){\r\n\t\t\t\t\tif(y < this.PICKER_HUE_H){\r\n\t\t\t\t\t\ty += 1;\r\n\t\t\t\t\t\tupdate = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ty -= selCenter;\r\n\t\t\t\tif(update){\r\n\t\t\t\t\thtml.style(this.hueCursorNode, \"top\", y + \"px\");\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis._updateColor(true);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t_updateCursorNode: function(count, node, e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction used by the typematic code to handle cursor position and update\r\n\t\t\t//\t\tvia keyboard.\r\n\t\t\t// count:\r\n\t\t\t//\t\t-1 means stop, anything else is just how many times it was called.\r\n\t\t\t// node:\r\n\t\t\t//\t\tThe node generating the event.\r\n\t\t\t// e:\r\n\t\t\t//\t\tThe event.\r\n\t\t\tvar selCenterH = this.PICKER_SAT_SELECTOR_H/2;\r\n\t\t\tvar selCenterW = this.PICKER_SAT_SELECTOR_W/2;\r\n\r\n\t\t\tif(count !== -1){\r\n\t\t\t\tvar y = html.style(this.cursorNode, \"top\");\r\n\t\t\t\tvar x = html.style(this.cursorNode, \"left\");\r\n\t\t\t\t\r\n\t\t\t\t// Account for our offsets to center\r\n\t\t\t\ty += selCenterH;\r\n\t\t\t\tx += selCenterW;\r\n\r\n\t\t\t\tvar update = false;\r\n\t\t\t\tif(e.charOrCode == Keys.UP_ARROW){\r\n\t\t\t\t\tif(y > 0){\r\n\t\t\t\t\t\ty -= 1;\r\n\t\t\t\t\t\tupdate = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else if(e.charOrCode == Keys.DOWN_ARROW){\r\n\t\t\t\t\tif(y < this.PICKER_SAT_VAL_H){\r\n\t\t\t\t\t\ty += 1;\r\n\t\t\t\t\t\tupdate = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else if(e.charOrCode == Keys.LEFT_ARROW){\r\n\t\t\t\t\tif(x > 0){\r\n\t\t\t\t\t\tx -= 1;\r\n\t\t\t\t\t\tupdate = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else if(e.charOrCode == Keys.RIGHT_ARROW){\r\n\t\t\t\t\tif(x < this.PICKER_SAT_VAL_W){\r\n\t\t\t\t\t\tx += 1;\r\n\t\t\t\t\t\tupdate = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(update){\r\n\t\t\t\t\t// Account for our offsets to center\r\n\t\t\t\t\ty -= selCenterH;\r\n\t\t\t\t\tx -= selCenterW;\r\n\t\t\t\t\thtml.style(this.cursorNode, \"top\", y + \"px\");\r\n\t\t\t\t\thtml.style(this.cursorNode, \"left\", x + \"px\");\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis._updateColor(true);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_updateColor: function(fireChange){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tupdate the previewNode color, and input values [optional]\r\n\t\t\t\r\n\t\t\tvar hueSelCenter = this.PICKER_HUE_SELECTOR_H/2,\r\n\t\t\t\tsatSelCenterH = this.PICKER_SAT_SELECTOR_H/2,\r\n\t\t\t\tsatSelCenterW = this.PICKER_SAT_SELECTOR_W/2;\r\n\r\n\t\t\tvar _huetop = html.style(this.hueCursorNode,\"top\") + hueSelCenter,\r\n\t\t\t\t_pickertop = html.style(this.cursorNode,\"top\") + satSelCenterH,\r\n\t\t\t\t_pickerleft = html.style(this.cursorNode,\"left\") + satSelCenterW,\r\n\t\t\t\th = Math.round(360 - (_huetop / this.PICKER_HUE_H * 360)),\r\n\t\t\t\tcol = color.fromHsv(h, _pickerleft / this.PICKER_SAT_VAL_W * 100, 100 - (_pickertop / this.PICKER_SAT_VAL_H * 100))\r\n\t\t\t;\r\n\t\t\t\r\n\t\t\tthis._updateColorInputs(col);\r\n\t\t\tthis._updateValue(col, fireChange);\r\n\t\t\t\r\n\t\t\t// update hue, not all the pickers\r\n\t\t\tif(h!=this._hue){\r\n\t\t\t\tthis._setHue(h);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t_colorInputChange: function(e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tupdates picker position and inputs\r\n\t\t\t//\t\taccording to rgb, hex or hsv input changes\r\n\t\t\tvar col, hasit = false;\r\n\t\t\tswitch(e.target){\r\n\t\t\t\t//transform to hsv to pixels\r\n\r\n\t\t\t\tcase this.hexCode:\r\n\t\t\t\t\tcol = color.fromString(e.target.value);\r\n\t\t\t\t\thasit = true;\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase this.Rval:\r\n\t\t\t\tcase this.Gval:\r\n\t\t\t\tcase this.Bval:\r\n\t\t\t\t\tcol = color.fromArray([this.Rval.value, this.Gval.value, this.Bval.value]);\r\n\t\t\t\t\thasit = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase this.Hval:\r\n\t\t\t\tcase this.Sval:\r\n\t\t\t\tcase this.Vval:\r\n\t\t\t\t\tcol = color.fromHsv(this.Hval.value, this.Sval.value, this.Vval.value);\r\n\t\t\t\t\thasit = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(hasit){\r\n\t\t\t\tthis._updatePickerLocations(col);\r\n\t\t\t\tthis._updateColorInputs(col);\r\n\t\t\t\tthis._updateValue(col, true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t},\r\n\t\t\r\n\t\t_updateValue: function(/* dojox/color/Color */col, /* Boolean */fireChange){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tupdates the value of the widget\r\n\t\t\t//\t\tcan cancel reverse onChange by specifying second param\r\n\t\t\tvar hex = col.toHex();\r\n\t\t\t\r\n\t\t\tthis.value = this.valueNode.value = hex;\r\n\t\t\t\r\n\t\t\t// anytime we muck with the color, fire onChange?\r\n\t\t\tif(fireChange && (!this._timer || this.liveUpdate)){\r\n\t\t\t\tthis.onChange(hex);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t_updatePickerLocations: function(/* dojox/color/Color */col){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tupdate handles on the pickers acording to color values\r\n\t\t\t\r\n\t\t\tvar hueSelCenter = this.PICKER_HUE_SELECTOR_H/2,\r\n\t\t\t\tsatSelCenterH = this.PICKER_SAT_SELECTOR_H/2,\r\n\t\t\t\tsatSelCenterW = this.PICKER_SAT_SELECTOR_W/2;\r\n\r\n\t\t\tvar hsv = col.toHsv(),\r\n\t\t\t\typos = Math.round(this.PICKER_HUE_H - hsv.h / 360 * this.PICKER_HUE_H) - hueSelCenter,\r\n\t\t\t\tnewLeft = Math.round(hsv.s / 100 * this.PICKER_SAT_VAL_W) - satSelCenterW,\r\n\t\t\t\tnewTop = Math.round(this.PICKER_SAT_VAL_H - hsv.v / 100 * this.PICKER_SAT_VAL_H) - satSelCenterH\r\n\t\t\t;\r\n\t\t\t\r\n\t\t\tif(this.animatePoint){\r\n\t\t\t\tfx.slideTo({\r\n\t\t\t\t\tnode: this.hueCursorNode,\r\n\t\t\t\t\tduration: this.slideDuration,\r\n\t\t\t\t\ttop: ypos,\r\n\t\t\t\t\tleft: 0\r\n\t\t\t\t}).play();\r\n\t\t\t\t\r\n\t\t\t\tfx.slideTo({\r\n\t\t\t\t\tnode: this.cursorNode,\r\n\t\t\t\t\tduration: this.slideDuration,\r\n\t\t\t\t\ttop: newTop,\r\n\t\t\t\t\tleft: newLeft\r\n\t\t\t\t}).play();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\thtml.style(this.hueCursorNode, \"top\", ypos + \"px\");\r\n\t\t\t\thtml.style(this.cursorNode, {\r\n\t\t\t\t\tleft: newLeft + \"px\",\r\n\t\t\t\t\ttop: newTop + \"px\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// limit hue calculations to only when it changes\r\n\t\t\tif(hsv.h != this._hue){\r\n\t\t\t\tthis._setHue(hsv.h);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t},\r\n\t\t\r\n\t\t_updateColorInputs: function(/* dojox/color/Color */ col){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tupdates color inputs that were changed through other inputs\r\n\t\t\t//\t\tor by clicking on the picker\r\n\t\t\t\r\n\t\t\tvar hex = col.toHex();\r\n\t\t\t\r\n\t\t\tif(this.showRgb){\r\n\t\t\t\tthis.Rval.value = col.r;\r\n\t\t\t\tthis.Gval.value = col.g;\r\n\t\t\t\tthis.Bval.value = col.b;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this.showHsv){\r\n\t\t\t\tvar hsv = col.toHsv();\r\n\t\t\t\tthis.Hval.value = Math.round((hsv.h)); // convert to 0..360\r\n\t\t\t\tthis.Sval.value = Math.round(hsv.s);\r\n\t\t\t\tthis.Vval.value = Math.round(hsv.v);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this.showHex){\r\n\t\t\t\tthis.hexCode.value = hex;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.previewNode.style.backgroundColor = hex;\r\n\t\t\t\r\n\t\t\tif(this.webSafe){\r\n\t\t\t\tthis.safePreviewNode.style.backgroundColor = webSafeFromHex(hex);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t_setHuePoint: function(/* Event */evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tset the hue picker handle on relative y coordinates\r\n\t\t\tvar selCenter = this.PICKER_HUE_SELECTOR_H/2;\r\n\t\t\tvar ypos = evt.layerY - selCenter;\r\n\t\t\tif(this.animatePoint){\r\n\t\t\t\tfx.slideTo({\r\n\t\t\t\t\tnode: this.hueCursorNode,\r\n\t\t\t\t\tduration:this.slideDuration,\r\n\t\t\t\t\ttop: ypos,\r\n\t\t\t\t\tleft: 0,\r\n\t\t\t\t\tonEnd: lang.hitch(this, function(){ this._updateColor(false); FocusManager.focus(this.hueCursorNode); })\r\n\t\t\t\t}).play();\r\n\t\t\t}else{\r\n\t\t\t\thtml.style(this.hueCursorNode, \"top\", ypos + \"px\");\r\n\t\t\t\tthis._updateColor(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t_setPoint: function(/* Event */evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tset our picker point based on relative x/y coordinates\r\n\r\n\t\t\t//\tevt.preventDefault();\r\n\t\t\tvar satSelCenterH = this.PICKER_SAT_SELECTOR_H/2;\r\n\t\t\tvar satSelCenterW = this.PICKER_SAT_SELECTOR_W/2;\r\n\t\t\tvar newTop = evt.layerY - satSelCenterH;\r\n\t\t\tvar newLeft = evt.layerX - satSelCenterW;\r\n\t\t\t\r\n\t\t\tif(evt){ FocusManager.focus(evt.target); }\r\n\r\n\t\t\tif(this.animatePoint){\r\n\t\t\t\tfx.slideTo({\r\n\t\t\t\t\tnode: this.cursorNode,\r\n\t\t\t\t\tduration: this.slideDuration,\r\n\t\t\t\t\ttop: newTop,\r\n\t\t\t\t\tleft: newLeft,\r\n\t\t\t\t\tonEnd: lang.hitch(this, function(){ this._updateColor(true); FocusManager.focus(this.cursorNode); })\r\n\t\t\t\t}).play();\r\n\t\t\t}else{\r\n\t\t\t\thtml.style(this.cursorNode, {\r\n\t\t\t\t\tleft: newLeft + \"px\",\r\n\t\t\t\t\ttop: newTop + \"px\"\r\n\t\t\t\t});\r\n\t\t\t\tthis._updateColor(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t_handleKey: function(/* Event */e){\r\n\t\t\t// TODO: not implemented YET\r\n\t\t\t// var keys = d.keys;\r\n\t\t},\r\n\r\n\t\tfocus: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPut focus on this widget, only if focus isn't set on it already.\r\n\t\t\tif(!this.focused){\r\n\t\t\t\tFocusManager.focus(this.focusNode);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_stopDrag: function(e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to halt the mouse down default\r\n\t\t\t//\t\tto disable dragging of images out of the color\r\n\t\t\t//\t\tpicker.\r\n\t\t\tEvent.stop(e);\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOver-ride to clean up subscriptions, etc.\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tArrayUtil.forEach(this._subs, function(sub){\r\n\t\t\t\tHub.unsubscribe(sub);\r\n\t\t\t});\r\n\t\t\tdelete this._subs;\r\n\t\t}\r\n\t});\r\n});\r\n"]}