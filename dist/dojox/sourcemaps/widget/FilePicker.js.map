{"version":3,"sources":["widget/FilePicker.js"],"names":["dojo","provide","require","requireLocalization","declare","dojox","widget","_RollingListPane","templateString","cache","postMixInProperties","this","_messages","i18n","getLocalization","lang","inherited","arguments","onItems","store","item","items","nameNode","innerHTML","getLabel","pathNode","getIdentity","sizeNode","getValue","parentWidget","scrollIntoView","_onError","Error","RollingList","className","pathSeparator","topDir","parentAttr","pathAttr","preloadItems","selectDirectories","selectFiles","_itemsMatch","item1","item2","_isIdentity","iArr","forEach","i","idx","lastIndexOf","length","substring","startup","_started","conn","child","getChildren","setSeparator","hitch","disconnect","parent","path","connect","getChildItems","ret","getMenuItemForItem","parentPane","children","menuOptions","iconClass","l","disabled","dijit","MenuItem","getPaneForItem","isItem","_RollingListGroupPane","_FileInfoPane","_setPathValueAttr","resetLastExec","onSet","fetchItemByIdentity","identity","onItem","v","_lastExecutedValue","set","scope","_getPathValueAttr","val","value","_setValue","_setInProgress","isDirectory","_onChange"],"mappings":"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","file":"../../widget/FilePicker.js","sourcesContent":["dojo.provide(\"dojox.widget.FilePicker\");\r\n\r\ndojo.require(\"dojox.widget.RollingList\");\r\n\r\ndojo.require(\"dojo.i18n\");\r\ndojo.requireLocalization(\"dojox.widget\", \"FilePicker\");\r\n\r\ndojo.declare(\"dojox.widget._FileInfoPane\",\r\n\t[dojox.widget._RollingListPane], {\r\n\t// summary:\r\n\t//\t\ta pane to display the information for the currently-selected\r\n\t//\t\tfile\r\n\t\r\n\t// templateString: string\r\n\t//\t\tdelete our template string\r\n\ttemplateString: \"\",\r\n\t\r\n\t// templateString: String\r\n\t//\t\tThe template to be used to construct the widget.\r\n\ttemplateString: dojo.cache(\"dojox.widget\", \"FilePicker/_FileInfoPane.html\"),\r\n\t\r\n\tpostMixInProperties: function(){\r\n\t\tthis._messages = dojo.i18n.getLocalization(\"dojox.widget\", \"FilePicker\", this.lang);\r\n\t\tthis.inherited(arguments);\r\n\t},\r\n\r\n\tonItems: function(){\r\n\t\t// summary:\r\n\t\t//\t\tcalled after a fetch or load - at this point, this.items should be\r\n\t\t//\t\tset and loaded.\r\n\t\tvar store = this.store, item = this.items[0];\r\n\t\tif(!item){\r\n\t\t\tthis._onError(\"Load\", new Error(\"No item defined\"));\r\n\t\t}else{\r\n\t\t\tthis.nameNode.innerHTML = store.getLabel(item);\r\n\t\t\tthis.pathNode.innerHTML = store.getIdentity(item);\r\n\t\t\tthis.sizeNode.innerHTML = store.getValue(item, \"size\");\r\n\t\t\tthis.parentWidget.scrollIntoView(this);\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t}\r\n});\r\n\r\ndojo.declare(\"dojox.widget.FilePicker\", dojox.widget.RollingList, {\r\n\t// summary:\r\n\t//\t\ta specialized version of RollingList that handles file information\r\n\t//\t\tin a store\r\n\t\r\n\tclassName: \"dojoxFilePicker\",\r\n\t\r\n\t// pathSeparator: String\r\n\t//\t\tOur file separator - it will be guessed if not set\r\n\tpathSeparator: \"\",\r\n\t\r\n\t// topDir: String\r\n\t//\t\tThe top directory string - it will be guessed if not set\r\n\ttopDir: \"\",\r\n\t\t\r\n\t// parentAttr: String\r\n\t//\t\tthe attribute to read for finding our parent directory\r\n\tparentAttr: \"parentDir\",\r\n\t\r\n\t// pathAttr: String\r\n\t//\t\tthe attribute to read for getting the full path of our file\r\n\tpathAttr: \"path\",\r\n\t\r\n\t// preloadItems: Boolean|Int\r\n\t//\t\tSet this to a sane number - since we expect to mostly be using the\r\n\t//\t\tdojox.data.FileStore - which doesn't like loading lots of items\r\n\t//\t\tall at once.\r\n\tpreloadItems: 50,\r\n\r\n\t// selectDirectories: Boolean\r\n\t//\t\twhether or not we allow selection of directories - that is, whether or\r\n\t//\t\tour value can be set to a directory.\r\n\tselectDirectories: true,\r\n\r\n\t// selectFiles: Boolean\r\n\t//\t\twhether or not we allow selection of files - that is, we will disable\r\n\t//\t\tthe file entries.\r\n\tselectFiles: true,\r\n\r\n\t_itemsMatch: function(/*item*/ item1, /*item*/ item2){\r\n\t\t// Summary:\r\n\t\t//\t\tReturns whether or not the two items match - checks ID if\r\n\t\t//\t\tthey aren't the exact same object - ignoring trailing slashes\r\n\t\tif(!item1 && !item2){\r\n\t\t\treturn true;\r\n\t\t}else if(!item1 || !item2){\r\n\t\t\treturn false;\r\n\t\t}else if(item1 == item2){\r\n\t\t\treturn true;\r\n\t\t}else if (this._isIdentity){\r\n\t\t\tvar iArr = [ this.store.getIdentity(item1), this.store.getIdentity(item2) ];\r\n\t\t\tdojo.forEach(iArr, function(i, idx){\r\n\t\t\t\tif(i.lastIndexOf(this.pathSeparator) == (i.length - 1)){\r\n\t\t\t\t\tiArr[idx] = i.substring(0, i.length - 1);\r\n\t\t\t\t}else{\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t\treturn (iArr[0] == iArr[1]);\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\t\r\n\tstartup: function(){\r\n\t\tif(this._started){ return; }\r\n\t\tthis.inherited(arguments);\r\n\t\t// Figure out our file separator if we don't have it yet\r\n\t\tvar conn, child = this.getChildren()[0];\r\n\t\tvar setSeparator = dojo.hitch(this, function(){\r\n\t\t\tif(conn){\r\n\t\t\t\tthis.disconnect(conn);\r\n\t\t\t}\r\n\t\t\tdelete conn;\r\n\t\t\tvar item = child.items[0];\r\n\t\t\tif(item){\r\n\t\t\t\tvar store = this.store;\r\n\t\t\t\tvar parent = store.getValue(item, this.parentAttr);\r\n\t\t\t\tvar path = store.getValue(item, this.pathAttr);\r\n\t\t\t\tthis.pathSeparator = this.pathSeparator || store.pathSeparator;\r\n\t\t\t\tif(!this.pathSeparator){\r\n\t\t\t\t\tthis.pathSeparator = path.substring(parent.length, parent.length + 1);\r\n\t\t\t\t}\r\n\t\t\t\tif(!this.topDir){\r\n\t\t\t\t\tthis.topDir = parent;\r\n\t\t\t\t\tif(this.topDir.lastIndexOf(this.pathSeparator) != (this.topDir.length - 1)){\r\n\t\t\t\t\t\tthis.topDir += this.pathSeparator;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tif(!this.pathSeparator || !this.topDir){\r\n\t\t\tif(!child.items){\r\n\t\t\t\tconn = this.connect(child, \"onItems\", setSeparator);\r\n\t\t\t}else{\r\n\t\t\t\tsetSeparator();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\tgetChildItems: function(item){\r\n\t\tvar ret = this.inherited(arguments);\r\n\t\tif(!ret && this.store.getValue(item, \"directory\")){\r\n\t\t\t// It's an empty directory - so pass through an empty array\r\n\t\t\tret = [];\r\n\t\t}\r\n\t\treturn ret;\r\n\t},\r\n\t\r\n\tgetMenuItemForItem: function(/*item*/ item, /* dijit/_Contained */ parentPane, /* item[]? */ children){\r\n\t\tvar menuOptions = {iconClass: \"dojoxDirectoryItemIcon\"};\r\n\t\tif(!this.store.getValue(item, \"directory\")){\r\n\t\t\tmenuOptions.iconClass = \"dojoxFileItemIcon\";\r\n\t\t\tvar l = this.store.getLabel(item), idx = l.lastIndexOf(\".\");\r\n\t\t\tif(idx >= 0){\r\n\t\t\t\tmenuOptions.iconClass += \" dojoxFileItemIcon_\" + l.substring(idx + 1);\r\n\t\t\t}\r\n\t\t\tif(!this.selectFiles){\r\n\t\t\t\tmenuOptions.disabled = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar ret = new dijit.MenuItem(menuOptions);\r\n\t\treturn ret;\r\n\t},\r\n\t\r\n\tgetPaneForItem: function(/*item*/ item, /* dijit/_Contained */ parentPane, /* item[]? */ children){\r\n\t\tvar ret = null;\r\n\t\tif(!item || (this.store.isItem(item) && this.store.getValue(item, \"directory\"))){\r\n\t\t\tret = new dojox.widget._RollingListGroupPane({});\r\n\t\t}else if(this.store.isItem(item) && !this.store.getValue(item, \"directory\")){\r\n\t\t\tret = new dojox.widget._FileInfoPane({});\r\n\t\t}\r\n\t\treturn ret;\r\n\t},\r\n\t\r\n\t_setPathValueAttr: function(/*String*/ path, /*Boolean?*/ resetLastExec, /*function?*/ onSet){\r\n\t\t// summary:\r\n\t\t//\t\tsets the value of this widget based off the given path\r\n\t\tif(!path){\r\n\t\t\tthis.set(\"value\", null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(path.lastIndexOf(this.pathSeparator) == (path.length - 1)){\r\n\t\t\tpath = path.substring(0, path.length - 1);\r\n\t\t}\r\n\t\tthis.store.fetchItemByIdentity({identity: path,\r\n\t\t\t\t\t\t\t\t\t\tonItem: function(v){\r\n\t\t\t\t\t\t\t\t\t\t\tif(resetLastExec){\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis._lastExecutedValue = v;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tthis.set(\"value\", v);\r\n\t\t\t\t\t\t\t\t\t\t\tif(onSet){ onSet(); }\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tscope: this});\r\n\t},\r\n\t\r\n\t_getPathValueAttr: function(/*item?*/val){\r\n\t\t// summary:\r\n\t\t//\t\treturns the path value of the given value (or current value\r\n\t\t//\t\tif not passed a value)\r\n\t\tif(!val){\r\n\t\t\tval = this.value;\r\n\t\t}\r\n\t\tif(val && this.store.isItem(val)){\r\n\t\t\treturn this.store.getValue(val, this.pathAttr);\r\n\t\t}else{\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\t},\r\n\t\r\n\t_setValue: function(/* item */ value){\r\n\t\t// summary:\r\n\t\t//\t\tinternally sets the value and fires onchange\r\n\t\tdelete this._setInProgress;\r\n\t\tvar store = this.store;\r\n\t\tif(value && store.isItem(value)){\r\n\t\t\tvar isDirectory = this.store.getValue(value, \"directory\");\r\n\t\t\tif((isDirectory && !this.selectDirectories) ||\r\n\t\t\t\t(!isDirectory && !this.selectFiles)){ return; }\r\n\t\t}else{\r\n\t\t\tvalue = null;\r\n\t\t}\r\n\t\tif(!this._itemsMatch(this.value, value)){\r\n\t\t\tthis.value = value;\r\n\t\t\tthis._onChange(value);\r\n\t\t}\r\n\t}\r\n});\r\n"]}