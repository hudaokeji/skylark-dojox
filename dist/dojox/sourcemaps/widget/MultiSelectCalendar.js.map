{"version":3,"sources":["widget/MultiSelectCalendar.js"],"names":["define","dojo","dijit","template","supplemental","date","locale","_Widget","_TemplatedMixin","_WidgetsInTemplateMixin","_CssStateMixin","DropDownButton","typematic","experimental","MultiSelectCalendar","declare","templateString","widgetsInTemplate","value","datePackage","dayWidth","tabIndex","returnIsoRanges","currentFocus","Date","baseClass","cssStateNodes","decrementMonth","incrementMonth","previousYearLabelNode","nextYearLabelNode","_areValidDates","selDate","this","valid","isNaN","toString","constructor","prototype","_getValueAttr","datesWithRanges","_returnDatesWithIsoRanges","_sort","_setValueAttr","priorityChange","isArray","forEach","element","i","indexOf","dateA","stamp","fromISOString","substr","dateB","toggleDate","_addToRangeRTL","_addToRangeLTR","length","focusOnLastDate","dateClassObj","_isValidDate","setHours","isDisabledDate","lang","dateIndex","toISOString","substring","set","onChange","get","onValueSelected","_populateGrid","lastElement","lastDate","_setText","node","text","firstChild","removeChild","appendChild","doc","createTextNode","month","setDate","firstDay","getDay","daysInMonth","dateFuncObj","getDaysInMonth","daysInPreviousMonth","add","today","dayOffset","cldr","getFirstDayOfWeek","listOfNodes","query","domNode","number","clazz","adj","compare","_isSelectedDate","replace","clazz2","getClassForDate","className","dijitDateValue","valueOf","attr","label","getDateLocalized","getDate","monthNames","dateLocaleModule","getNames","monthDropDownButton","dropDown","containerNode","innerHTML","isIE","getMonth","y","getFullYear","d","name","setFullYear","format","selector","goToToday","args","dateClass","getObject","buildRendering","inherited","arguments","setSelectable","cloneClass","hitch","n","parentNode","cloneNode","dayNames","dateObj","MonthDropDown","id","_this","nodeProp","dateProp","_connects","push","addMouseListener","count","_adjustDisplay","part","amount","_setCurrentFocusAttr","forceFocus","oldFocus","oldCell","_set","currentMonth","previousMonth","newCell","setAttribute","_focused","focus","isWebKit","removeAttribute","_onMonthSelect","newMonth","dateToToggle","selectedDates","unselectedDates","unselectDate","selectDate","dateToSelect","_getNodeByDate","dateToUnselect","dateNode","firstDate","difference","Math","abs","_onDayClick","evt","stopEvent","target","hasClass","rangeJustSelected","previouslySelectedDay","_onDayMouseOver","addClass","_currentNode","_setEndRangeAttr","endRange","_getEndRangeAttr","_onDayMouseOut","relatedTarget","cls","removeClass","_onDayMouseDown","shiftKey","selectingRange","_selectRange","previousRangeStart","previousRangeEnd","_onDayMouseUp","handleKey","interval","dk","keys","increment","newValue","keyCode","RIGHT_ARROW","LEFT_ARROW","isLeftToRight","DOWN_ARROW","UP_ARROW","PAGE_DOWN","PAGE_UP","ctrlKey","altKey","END","HOME","ENTER","SPACE","_onKeyDown","_removeFromRangeLTR","beginning","end","nextDay","_removeFromRangeRTL","removingFromRange","onValueUnselected","dates","dateObject","sort","a","b","returnDates","weHaveRange","startRange","lastDayRange","previousDate","currentDate","range","_MonthDropDown","months","_setMonthsAttr","map","idx","join","_onClick","_onMenuHover","toggleClass","type"],"mappings":";;;;;;;AAAAA,OAAO,oCACH,YAAa,QACb,2DACA,yBACA,YACA,mBACA,gBAAiB,wBAAyB,gCAC7C,uBAAwB,4BAA6B,mBAElD,SAASC,EAAMC,EAAOC,EAAUC,EAAcC,EAAMC,EACtDC,EAASC,EAAiBC,EAC1BC,EAAgBC,EAAgBC,GAElCX,EAAKY,aAAa,oCAElB,IAAIC,EAAsBb,EAAKc,QAC9B,oCACCR,EAASC,EAAiBC,EAAyBC,IAiBnDM,eAAgBb,EAChBc,mBAAmB,EAInBC,SAKAC,YAAa,YAIbC,SAAU,SAIVC,SAAU,IAIVC,iBAAkB,EAMlBC,aAAc,IAAIC,KAElBC,UAAU,gBAEVC,eACCC,eAAkB,qBAClBC,eAAkB,qBAClBC,sBAAyB,4BACzBC,kBAAqB,yBAGtBC,eAAgB,SAAkBb,GAMjC,IAAK,IAAIc,KAAWC,KAAKf,MAExB,GADAgB,MAASF,IAAYG,MAAMH,IAA4B,iBAATd,GAAqBc,EAAQI,YAAcH,KAAKI,YAAYC,UAAUpB,MAAMkB,YACtHF,MAAQ,OAAO,EAEpB,OAAO,GAGRK,cAAe,WAGd,OAAGN,KAAKX,iBACPkB,gBAAkBP,KAAKQ,0BAA0BR,KAAKS,SAC/CF,iBAEAP,KAAKS,SAIdC,cAAe,SAA+BzB,EAAmB0B,GAahEX,KAAKf,SACFjB,EAAK4C,QAAQ3B,IACfjB,EAAK6C,QAAQ5B,EAAM,SAAS6B,EAASC,GAGpC,IAAqB,GADDD,EAAQE,QAAQ,KAGnChB,KAAKf,MAAM6B,GAAW,MAClB,CAEJ,IAAIG,EAAQjD,EAAKI,KAAK8C,MAAMC,cAAcL,EAAQM,OAAO,EAAE,KACvDC,EAAQrD,EAAKI,KAAK8C,MAAMC,cAAcL,EAAQM,OAAO,GAAG,KAE5DpB,KAAKsB,WAAWL,SACZA,EAAQI,EAAS,EAEpBrB,KAAKuB,eAAeN,EAAOI,SAG3BrB,KAAKwB,eAAeP,EAAOI,WAG5BrB,MACAf,EAAMwC,OAAS,GACjBzB,KAAK0B,gBAAgBzC,EAAMA,EAAMwC,OAAO,MAGrCxC,IAGFA,EAAQ,IAAIe,KAAK2B,aAAa1C,IAE5Be,KAAK4B,aAAa3C,KACpBA,EAAM4C,SAAS,EAAG,EAAG,EAAG,GAEpB7B,KAAK8B,eAAe7C,EAAOe,KAAK+B,QACnCC,UAAYhE,EAAKI,KAAK8C,MAAMe,YAAYhD,GAAOiD,UAAU,EAAE,IAE3DlC,KAAKf,MAAM+C,WAAa,EAKxBhC,KAAKmC,IAAI,eAAgBlD,IAEtB0B,QAA2C,IAAlBA,KAC3BX,KAAKoC,SAASpC,KAAKqC,IAAI,UACvBrC,KAAKsC,gBAAgBtC,KAAKqC,IAAI,cAKlCrC,KAAKuC,iBAENb,gBAAkB,SAASc,GAG1B,IACIvB,EAAMI,GACmB,GAFDmB,EAAYxB,QAAQ,KAI/CyB,SAAWD,GAEXvB,EAAM,IAAIjD,EAAKI,KAAK8C,MAAMC,cAAcqB,EAAYpB,OAAO,EAAE,KAC7DC,EAAM,IAAIrD,EAAKI,KAAK8C,MAAMC,cAAcqB,EAAYpB,OAAO,GAAG,KAE7DqB,SADGxB,EAAQI,EAAS,EACTJ,EAEAI,GAGbrB,KAAKmC,IAAI,eAAgBM,WAE1Bb,aAAc,SAAkB3C,GAM/B,OAAOA,IAAUiB,MAAMjB,IAA0B,iBAATA,GACvCA,EAAMkB,YAAcH,KAAKI,YAAYC,UAAUpB,MAAMkB,YAEvDuC,SAAU,SAASC,EAAMC,GAMxB,KAAMD,EAAKE,YACVF,EAAKG,YAAYH,EAAKE,YAEvBF,EAAKI,YAAY/E,EAAKgF,IAAIC,eAAeL,KAG1CL,cAAe,WAMd,IAAIW,EAAQ,IAAIlD,KAAK2B,aAAa3B,KAAKV,cACvC4D,EAAMC,QAAQ,GAEd,IAAIC,EAAWF,EAAMG,SACpBC,EAActD,KAAKuD,YAAYC,eAAeN,GAC9CO,EAAsBzD,KAAKuD,YAAYC,eAAexD,KAAKuD,YAAYG,IAAIR,EAAO,SAAU,IAC5FS,EAAQ,IAAI3D,KAAK2B,aACjBiC,EAAY5F,EAAK6F,KAAK1F,aAAa2F,kBAAkB9D,KAAK+B,MACxD6B,EAAYR,IAAWQ,GAAa,GAGvC5D,KAAK+D,YAAc/F,EAAKgG,MAAM,6BAA8BhE,KAAKiE,SAGjEjE,KAAK+D,YAAYlD,QAAQ,SAAS3C,EAAU6C,GAC3CA,GAAK6C,EACL,IACCM,EADG9F,EAAO,IAAI4B,KAAK2B,aAAauB,GACxBiB,EAAQ,gBAAiBC,EAAM,EAErCrD,EAAIqC,GACNc,EAAST,EAAsBL,EAAWrC,EAAI,EAC9CqD,GAAO,EACPD,GAAS,YACDpD,GAAMqC,EAAWE,GACzBY,EAASnD,EAAIqC,EAAWE,EAAc,EACtCc,EAAM,EACND,GAAS,SAETD,EAASnD,EAAIqC,EAAW,EACxBe,GAAS,WAGPC,IACFhG,EAAO4B,KAAKuD,YAAYG,IAAItF,EAAM,QAASgG,IAE5ChG,EAAK+E,QAAQe,GAETlE,KAAKuD,YAAYc,QAAQjG,EAAMuF,EAAO,UACzCQ,EAAQ,4BAA8BA,GAIvCnC,UAAYhE,EAAKI,KAAK8C,MAAMe,YAAY7D,GAAM8D,UAAU,EAAE,IAEtDlC,KAAK8B,eAAe1D,EAAM4B,KAAK+B,OAI/B/B,KAAKsE,gBAAgBlG,EAAM4B,KAAK+B,QAEjCoC,EADEnE,KAAKf,MAAM+C,WACL,6BAA+BmC,EAE/BA,EAAMI,QAAQ,6BAA6B,KAInDvE,KAAKsE,gBAAgBlG,EAAM4B,KAAK+B,QAClCoC,EAAQ,6BAA+BA,GAGrCnE,KAAK8B,eAAe1D,EAAM4B,KAAK+B,QACjCoC,EAAQ,6BAA+BA,GAGxC,IAAIK,EAASxE,KAAKyE,gBAAgBrG,EAAM4B,KAAK+B,MAC1CyC,IACFL,EAAQK,EAAS,IAAML,GAGxBjG,EAASwG,UAAYP,EAAQ,kCAC7BjG,EAASyG,eAAiBvG,EAAKwG,UAC/B5G,EAAK6G,KAAK3G,EAAU,iBAAkBE,EAAKwG,WAC3C,IAAIE,EAAQ9G,EAAKgG,MAAM,0BAA2B9F,GAAU,GAC3D0E,EAAOxE,EAAK2G,iBAAmB3G,EAAK2G,iBAAiB/E,KAAK+B,MAAQ3D,EAAK4G,UACxEhF,KAAK0C,SAASoC,EAAOlC,IACnB5C,MAIH,IAAIiF,EAAajF,KAAKkF,iBAAiBC,SAAS,SAAU,OAAQ,aAAcnF,KAAK+B,KAAMmB,GAC3FlD,KAAKoF,oBAAoBC,SAASlD,IAAI,SAAU8C,GAKhDjF,KAAKoF,oBAAoBE,cAAcC,WACxB,GAAbvH,EAAKwH,KAAY,GAAK,4BAA8BxF,KAAKoF,oBAAoBC,SAASpB,QAAQsB,UAAY,UAC3G,uEAA0EN,EAAW/B,EAAMuC,YAAc,SAG1G,IAAIC,EAAIxC,EAAMyC,cAAgB,EAC1BC,EAAI,IAAI5F,KAAK2B,aACjB3D,EAAK6C,SAAS,WAAY,UAAW,QAAS,SAASgF,GACtDD,EAAEE,YAAYJ,KACd1F,KAAK0C,SAAS1C,KAAK6F,EAAK,iBACvB7F,KAAKkF,iBAAiBa,OAAOH,GAAII,SAAS,OAAQ3H,OAAO2B,KAAK+B,SAC7D/B,OAGJiG,UAAW,WAGVjG,KAAKmC,IAAI,eAAgB,IAAInC,KAAK2B,cAAgB,IAGnDvB,YAAa,SAAmB8F,GAC/B,IAAIC,EAAaD,EAAKhH,aAAoC,aAApBgH,EAAKhH,YAA8BgH,EAAKhH,YAAc,QAAU,OACtGc,KAAK2B,aAAe3D,EAAKoI,UAAUD,GAAW,GAC9CnG,KAAKd,YAAcgH,EAAKhH,aAAec,KAAKd,YAC5Cc,KAAKuD,YAAcvF,EAAKoI,UAAUpG,KAAKd,aAAa,GACpDc,KAAKkF,iBAAmBlH,EAAKoI,UAAUpG,KAAKd,YAAc,WAAW,IAGtEmH,eAAgB,WACfrG,KAAKsG,UAAUC,WACfvI,EAAKwI,cAAcxG,KAAKiE,SAAS,GAEjC,IAAIwC,EAAazI,EAAK0I,MAAM1G,KAAM,SAASmE,EAAOwC,GAEhD,IADD,IAAIzI,EAAWF,EAAKgG,MAAMG,EAAOnE,KAAKiE,SAAS,GACtClD,EAAE,EAAGA,EAAE4F,EAAG5F,IAClB7C,EAAS0I,WAAW7D,YAAY7E,EAAS2I,WAAU,MAKrDJ,EAAW,iCAAkC,GAC7CA,EAAW,6BAA8B,GAGzCA,EAAW,6BAA8B,GAGzC,IAAIK,EAAW9G,KAAKkF,iBAAiBC,SAAS,OAAQnF,KAAKb,SAAU,aAAca,KAAK+B,MACpF6B,EAAY5F,EAAK6F,KAAK1F,aAAa2F,kBAAkB9D,KAAK+B,MAC9D/D,EAAKgG,MAAM,yBAA0BhE,KAAKiE,SAASpD,QAAQ,SAASiE,EAAO/D,GAC1Ef,KAAK0C,SAASoC,EAAOgC,GAAU/F,EAAI6C,GAAa,KAC9C5D,MAEH,IAAI+G,EAAU,IAAI/G,KAAK2B,aAAa3B,KAAKV,cAEzCU,KAAKoF,oBAAoBC,SAAW,IAAI2B,GACvCC,GAAIjH,KAAKiH,GAAK,OACd7E,SAAUpE,EAAK0I,MAAM1G,KAAM,oBAG5BA,KAAKmC,IAAI,eAAgB4E,GAAS,GAGlC,IAAIG,EAAQlH,KACRrB,EAAY,SAASwI,EAAUC,EAAUhD,GAC5C8C,EAAMG,UAAUC,KACfrJ,EAAMU,UAAU4I,iBAAiBL,EAAMC,GAAWD,EAAO,SAASM,GAC9DA,GAAS,GAAIN,EAAMO,eAAeL,EAAUhD,IAC7C,GAAK,OAGVzF,EAAU,iBAAkB,QAAS,GACrCA,EAAU,iBAAkB,SAAU,GACtCA,EAAU,oBAAqB,OAAQ,GACvCA,EAAU,wBAAyB,QAAS,IAG7C8I,eAAgB,SAAoBC,EAAcC,GASjD3H,KAAK4H,qBAAqB5H,KAAKuD,YAAYG,IAAI1D,KAAKV,aAAcoI,EAAMC,KAGzEC,qBAAsB,SAAkBxJ,EAAkByJ,GASzD,IAAIC,EAAW9H,KAAKV,aACnByI,EAAUD,EAAW9J,EAAKgG,MAAM,mBAAqB8D,EAASlD,UAAY,IAAK5E,KAAKiE,SAAS,GAAK,MAGnG7F,EAAO,IAAI4B,KAAK2B,aAAavD,IACxByD,SAAS,EAAG,EAAG,EAAG,GAEvB7B,KAAKgI,KAAK,eAAgB5J,GAC1B,IAAI6J,EAAejK,EAAKI,KAAK8C,MAAMe,YAAY7D,GAAM8D,UAAU,EAAE,GAE9D+F,GAAgBjI,KAAKkI,gBACvBlI,KAAKuC,gBACLvC,KAAKkI,cAAgBD,GAItB,IAAIE,EAAUnK,EAAKgG,MAAM,oBAAsB5F,EAAKwG,UAAY,KAAM5E,KAAKiE,SAAS,GACpFkE,EAAQC,aAAa,WAAYpI,KAAKZ,WACnCY,KAAKqI,UAAYR,IACnBM,EAAQG,QAINP,GAAWA,GAAWI,IACrBnK,EAAKuK,SACPR,EAAQK,aAAa,WAAY,MAEhCL,EAAQS,gBAAgB,cAK5BF,MAAO,WAGNtI,KAAK4H,qBAAqB5H,KAAKV,cAAc,IAG9CmJ,eAAgB,SAAoBC,GAQnC1I,KAAKV,aAAeU,KAAKuD,YAAYG,IAAI1D,KAAKV,aAAc,QAC3DoJ,EAAW1I,KAAKV,aAAamG,YAC9BzF,KAAKuC,iBAGNjB,WAAa,SAAkBqH,EAAiCC,EAAkCC,GAGjG,IAAI7G,EAAYhE,EAAKI,KAAK8C,MAAMe,YAAY0G,GAAczG,UAAU,EAAE,IAEnElC,KAAKf,MAAM+C,GACbhC,KAAK8I,aAAaH,EAAcE,GAEhC7I,KAAK+I,WAAWJ,EAAcC,IAIhCG,WAAa,SAAkBC,EAAiCJ,GAE/D,IAAIjG,EAAO3C,KAAKiJ,eAAeD,GAC3B7E,EAAQxB,EAAK+B,UACb1C,EAAYhE,EAAKI,KAAK8C,MAAMe,YAAY+G,GAAc9G,UAAU,EAAE,IACtElC,KAAKf,MAAM+C,GAAa,EACxB4G,EAActB,KAAKtF,GACnBmC,EAAQ,6BAA+BA,EAEvCxB,EAAK+B,UAAYP,GAGlB2E,aAAe,SAAkBI,EAAmCL,GAEnE,IAAIlG,EAAO3C,KAAKiJ,eAAeC,GAC3B/E,EAAQxB,EAAK+B,UACb1C,EAAYhE,EAAKI,KAAK8C,MAAMe,YAAYiH,GAAgBhH,UAAU,EAAE,WACjElC,KAAKf,MAAM+C,GAClB6G,EAAgBvB,KAAKtF,GACrBmC,EAAQA,EAAMI,QAAQ,6BAA6B,IAEnD5B,EAAK+B,UAAYP,GAGlB8E,eAAiB,SAAsBE,GAEtC,IAAIC,EAAY,IAAIpJ,KAAK2B,aAAa3B,KAAK+D,YAAY,GAAGY,gBACtD0E,EAAaC,KAAKC,IAAIvL,EAAKI,KAAKiL,WAAWD,EAAWD,EAAU,QACpE,OAAOnJ,KAAK+D,YAAYsF,IAGzBG,YAAa,SAAmBC,GAS9BzL,EAAK0L,UAAUD,GACf,IAAI,IAAI9G,EAAO8G,EAAIE,OAAQhH,IAASA,EAAKgC,eAAgBhC,EAAOA,EAAKiE,YAClEjE,IAAS3E,EAAK4L,SAASjH,EAAM,+BAC/B1D,MAAQ,IAAIe,KAAK2B,aAAagB,EAAKgC,gBAC/B3E,KAAK6J,mBASR7J,KAAK6J,mBAAoB,EACzB7J,KAAKmC,IAAI,eAAgBlD,SATzBe,KAAKsB,WAAWrC,aAGhBe,KAAK8J,sBAAwB7K,MAC7Be,KAAKmC,IAAI,eAAgBlD,OACzBe,KAAKsC,iBAAiBtE,EAAKI,KAAK8C,MAAMe,YAAYhD,OAAOiD,UAAU,EAAE,SASzE6H,gBAAiB,SAAmBN,GAQnC,IAAI9G,EACH3E,EAAK4L,SAASH,EAAIE,OAAQ,0BAC1BF,EAAIE,OAAO/C,WACX6C,EAAIE,OAEFhH,IAASA,EAAKgC,gBAAkBhC,GAAQ3C,KAAKJ,uBAAyB+C,GAAQ3C,KAAKH,qBACrF7B,EAAKgM,SAASrH,EAAM,4BACpB3C,KAAKiK,aAAetH,IAGtBuH,iBAAkB,SAAkBjL,IAKnCA,EAAQ,IAAIe,KAAK2B,aAAa1C,IACxB4C,SAAS,GACf7B,KAAKmK,SAAWlL,GAEjBmL,iBAAkB,WAEjB,IAAInL,EAAQ,IAAIe,KAAK2B,aAAa3B,KAAKmK,UAQvC,OAPAlL,EAAM4C,SAAS,EAAG,EAAG,EAAG,GAIrB5C,EAAM+F,UAAYhF,KAAKmK,SAASnF,YAClC/F,EAAQe,KAAKuD,YAAYG,IAAIzE,EAAO,OAAQ,IAEtCA,GAGRoL,eAAgB,SAAmBZ,GAMlC,GAAIzJ,KAAKiK,gBAGNR,EAAIa,eAAiBb,EAAIa,cAAc1D,YAAc5G,KAAKiK,cAA7D,CACA,IAAIM,EAAM,2BACPvM,EAAK4L,SAAS5J,KAAKiK,aAAc,6BACnCM,GAAO,4BAERvM,EAAKwM,YAAYxK,KAAKiK,aAAcM,GACpCvK,KAAKiK,aAAe,OAErBQ,gBAAiB,SAAmBhB,GACnC,IAAI9G,EAAO8G,EAAIE,OAAO/C,WACnBjE,GAAQA,EAAKgC,iBACf3G,EAAKgM,SAASrH,EAAM,2BACpB3C,KAAKiK,aAAetH,GAIlB8G,EAAIiB,UAAY1K,KAAK8J,uBAEvB9J,KAAK2K,gBAAiB,EACtB3K,KAAKmC,IAAI,WAAYQ,EAAKgC,gBAC1B3E,KAAK4K,iBAEL5K,KAAK2K,gBAAiB,EACtB3K,KAAK6K,mBAAqB,KAC1B7K,KAAK8K,iBAAmB,OAI1BC,cAAe,SAAmBtB,GACjC,IAAI9G,EAAO8G,EAAIE,OAAO/C,WACnBjE,GAAQA,EAAKgC,gBACf3G,EAAKwM,YAAY7H,EAAM,4BAKzBqI,UAAW,SAAmBvB,GAY7B,IAECwB,EAFGC,EAAKlN,EAAKmN,KACbC,GAAa,EAEbC,EAAWrL,KAAKV,aACjB,OAAOmK,EAAI6B,SACV,KAAKJ,EAAGK,YACPH,EAAY,EAEb,KAAKF,EAAGM,WACPP,EAAW,MACPjL,KAAKyL,kBAAkBL,IAAc,GACzC,MACD,KAAKF,EAAGQ,WACPN,EAAY,EAEb,KAAKF,EAAGS,SACPV,EAAW,OACX,MACD,KAAKC,EAAGU,UACPR,EAAY,EAEb,KAAKF,EAAGW,QACPZ,EAAWxB,EAAIqC,SAAWrC,EAAIsC,OAAS,OAAS,QAChD,MACD,KAAKb,EAAGc,IAEPX,EAAWrL,KAAKuD,YAAYG,IAAI2H,EAAU,QAAS,GAEnDJ,EAAW,MAEZ,KAAKC,EAAGe,MACPZ,EAAW,IAAIrL,KAAK2B,aAAa0J,IACxBlI,QAAQ,GACjB,MACD,KAAK+H,EAAGgB,MACR,KAAKhB,EAAGiB,MACJ1C,EAAIiB,UAAY1K,KAAK8J,uBACvB9J,KAAK2K,gBAAiB,EACtB3K,KAAKmC,IAAI,WAAYkJ,GACrBrL,KAAK4K,iBAEL5K,KAAK2K,gBAAiB,EACtB3K,KAAKsB,WAAW+J,SAGhBrL,KAAK8J,sBAAwBuB,EAC7BrL,KAAK6K,mBAAqB,KAC1B7K,KAAK8K,iBAAmB,KACxB9K,KAAKsC,iBAAiBtE,EAAKI,KAAK8C,MAAMe,YAAYoJ,GAAUnJ,UAAU,EAAE,OAGzE,MACD,QACC,OAAO,EAST,OANG+I,IACFI,EAAWrL,KAAKuD,YAAYG,IAAI2H,EAAUJ,EAAUG,IAGrDpL,KAAKmC,IAAI,eAAgBkJ,IAElB,GAGRe,WAAY,SAAmB3C,GAG1BzJ,KAAKgL,UAAUvB,IAClBzL,EAAK0L,UAAUD,IAIjB4C,oBAAsB,SAAkBC,EAAoBC,EAAc3D,EAAwBC,GAEjGQ,WAAaC,KAAKC,IAAIvL,EAAKI,KAAKiL,WAAWiD,EAAWC,EAAK,QAC3D,IAAI,IAAIxL,EAAI,EAAGA,GAAKsI,WAAYtI,IAAI,CACnC,IAAIyL,EAAUxO,EAAKI,KAAKsF,IAAI4I,EAAW,MAAMvL,GAC7Cf,KAAKsB,WAAWkL,EAAS5D,EAAeC,GAEb,MAAzB7I,KAAK8K,iBAEP9K,KAAK8K,iBAAmByB,EAErBvO,EAAKI,KAAKiG,QAAQkI,EAAKvM,KAAK8K,iBAAkB,QAAU,IAC1D9K,KAAK8K,iBAAmByB,GAEI,MAA3BvM,KAAK6K,mBAEP7K,KAAK6K,mBAAqB0B,EAEvBvO,EAAKI,KAAKiG,QAAQkI,EAAKvM,KAAK6K,mBAAoB,QAAU,IAC5D7K,KAAK6K,mBAAqB0B,GAE5BvM,KAAK8J,sBAAwB9L,EAAKI,KAAKsF,IAAI8I,EAAS,MAAM,IAE3DC,oBAAsB,SAAkBH,EAAoBC,EAAc3D,EAAwBC,GAIjGQ,WAAaC,KAAKC,IAAIvL,EAAKI,KAAKiL,WAAWiD,EAAWC,EAAK,QAC3D,IAAI,IAAIxL,EAAI,EAAGA,GAAKsI,WAAYtI,IAAI,CACnC,IAAIyL,EAAUxO,EAAKI,KAAKsF,IAAI4I,EAAW,OAAOvL,GAC9Cf,KAAKsB,WAAWkL,EAAS5D,EAAeC,GAEb,MAAzB7I,KAAK8K,iBACP9K,KAAK8K,iBAAmByB,EAErBvO,EAAKI,KAAKiG,QAAQkI,EAAKvM,KAAK8K,iBAAkB,QAAU,IAC1D9K,KAAK8K,iBAAmByB,GAGI,MAA3BvM,KAAK6K,mBACP7K,KAAK6K,mBAAqB0B,EAEvBvO,EAAKI,KAAKiG,QAAQkI,EAAKvM,KAAK6K,mBAAoB,QAAU,IAC5D7K,KAAK6K,mBAAqB0B,GAG5BvM,KAAK8J,sBAAwB9L,EAAKI,KAAKsF,IAAI8I,EAAS,OAAO,IAE5DjL,eAAiB,SAAkB+K,EAAoBC,EAAc3D,EAAwBC,GAE5FQ,WAAaC,KAAKC,IAAIvL,EAAKI,KAAKiL,WAAWiD,EAAWC,EAAK,QAG3D,IAAI,IAAIxL,EAAI,EAAGA,GAAKsI,WAAYtI,IAAI,CACnC,IAAIyL,EAAUxO,EAAKI,KAAKsF,IAAI4I,EAAW,OAAOvL,GAC9Cf,KAAKsB,WAAWkL,EAAS5D,EAAeC,GAGX,MAA3B7I,KAAK6K,mBACP7K,KAAK6K,mBAAqB0B,EAEvBvO,EAAKI,KAAKiG,QAAQkI,EAAKvM,KAAK6K,mBAAoB,QAAU,IAC5D7K,KAAK6K,mBAAqB0B,GAGA,MAAzBvM,KAAK8K,iBACP9K,KAAK8K,iBAAmBwB,EAErBtO,EAAKI,KAAKiG,QAAQiI,EAAWtM,KAAK8K,iBAAkB,QAAU,IAChE9K,KAAK8K,iBAAmBwB,GAG1BtM,KAAK8J,sBAAwB0C,GAE9BhL,eAAiB,SAAkB8K,EAAoBC,EAAc3D,EAAwBC,GAG5FQ,WAAaC,KAAKC,IAAIvL,EAAKI,KAAKiL,WAAWiD,EAAWC,EAAK,QAC3D,IAAI,IAAIxL,EAAI,EAAGA,GAAKsI,WAAYtI,IAAI,CACnC,IAAIyL,EAAUxO,EAAKI,KAAKsF,IAAI4I,EAAW,MAAMvL,GAC7Cf,KAAKsB,WAAWkL,EAAS5D,EAAeC,GAEX,MAA3B7I,KAAK6K,mBACP7K,KAAK6K,mBAAqByB,EAEvBtO,EAAKI,KAAKiG,QAAQiI,EAAWtM,KAAK6K,mBAAoB,QAAU,IAClE7K,KAAK6K,mBAAqByB,GAGA,MAAzBtM,KAAK8K,iBACP9K,KAAK8K,iBAAmByB,EAErBvO,EAAKI,KAAKiG,QAAQkI,EAAKvM,KAAK8K,iBAAkB,QAAU,IAC1D9K,KAAK8K,iBAAmByB,GAG1BvM,KAAK8J,sBAAwB0C,GAE9B5B,aAAe,WAEd,IAAIhC,KACAC,KACAyD,EAAYtM,KAAK8J,sBACjByC,EAAMvM,KAAKqC,IAAI,YAEfrC,KAAK6K,oBAAuB7K,KAAK8K,iBAGhC9M,EAAKI,KAAKiG,QAAQkI,EAAKvM,KAAK6K,mBAAoB,QAAU,GAAO7M,EAAKI,KAAKiG,QAAQkI,EAAKvM,KAAK8K,iBAAkB,QAAU,EAE5H4B,mBAAoB,EAEpBA,mBAAoB,EANrBA,mBAAoB,EASG,GAArBA,kBACC1O,EAAKI,KAAKiG,QAAQkI,EAAKD,EAAW,QAAU,EAE9CtM,KAAKyM,oBAAoBH,EAAWC,EAAK3D,EAAeC,GAGxD7I,KAAKqM,oBAAoBC,EAAWC,EAAK3D,EAAeC,GAItD7K,EAAKI,KAAKiG,QAAQkI,EAAKD,EAAW,QAAU,EAC9CtM,KAAKuB,eAAe+K,EAAWC,EAAK3D,EAAeC,GAEnD7I,KAAKwB,eAAe8K,EAAWC,EAAK3D,EAAeC,GAIlDD,EAAcnH,OAAS,GACzBzB,KAAKsC,gBAAgBsG,GAEnBC,EAAgBpH,OAAS,GAC3BzB,KAAK2M,kBAAkB9D,GAExB7I,KAAK6J,mBAAoB,GAG1BvH,gBAAiB,SAAgCsK,KASjDD,kBAAmB,SAAgCC,KAQnDxK,SAAU,SAAkBhE,KAK5BkG,gBAAiB,SAAkBuI,EAAwBxO,GAKzD,OADA2D,UAAYhE,EAAKI,KAAK8C,MAAMe,YAAY4K,GAAY3K,UAAU,EAAE,IACzDlC,KAAKf,MAAM+C,YAGpBF,eAAgB,SAAkB+K,EAAwBxO,KAU1DoG,gBAAiB,SAAkBoI,EAAwBxO,KAW3DoC,MAAQ,WAEP,GAAGT,KAAKf,UAAa,SAErB,IAAI2J,KACJ,IAAK,IAAI7I,KAAWC,KAAKf,MACxB2J,EAActB,KAAKvH,GAOpB,OAJA6I,EAAckE,KAAK,SAASC,EAAGC,GAE9B,OADU,IAAIzN,KAAKwN,GAAU,IAAIxN,KAAKyN,KAGhCpE,GAERpI,0BAA4B,SAASoI,GAIrC,IAAIqE,KACJ,GAAGrE,EAAcnH,OAAS,EAAE,CAQ3B,IANA,IAAIyL,GAAc,EAEjBC,EAAa,KACbC,EAAe,KACfC,EAAerP,EAAKI,KAAK8C,MAAMC,cAAcyH,EAAc,IAEpD7H,EAAI,EAAGA,EAAI6H,EAAcnH,OAAO,EAAGV,IAC1CuM,YAActP,EAAKI,KAAK8C,MAAMC,cAAcyH,EAAc7H,IACvDmM,GAEF7D,WAAaC,KAAKC,IAAIvL,EAAKI,KAAKiL,WAAWgE,EAAcC,YAAa,QACrD,GAAdjE,WAEF+D,EAAeE,aAGfC,MAAQvP,EAAKI,KAAK8C,MAAMe,YAAYkL,GAAYjL,UAAU,EAAE,IACxD,IAAMlE,EAAKI,KAAK8C,MAAMe,YAAYmL,GAAclL,UAAU,EAAE,IAChE+K,EAAY3F,KAAKiG,OACjBL,GAAc,KAIf7D,WAAaC,KAAKC,IAAIvL,EAAKI,KAAKiL,WAAWgE,EAAcC,YAAa,QACrD,GAAdjE,YAEF6D,GAAc,EACdC,EAAaE,EACbD,EAAeE,aAGfL,EAAY3F,KAAKtJ,EAAKI,KAAK8C,MAAMe,YAAYoL,GAAcnL,UAAU,EAAE,MAGzEmL,EAAeC,YAEhB,OAAOL,EAGN,OAAOrE,KAOP5B,EAAgBnI,EAAoB2O,eAAiBxP,EAAKc,QAAQ,+BACjER,EAASC,EAAiBC,IAO9BiP,UAEA1O,eAAgB,2IAGhB2O,eAAgB,SAAsBD,GACrCzN,KAAKiE,QAAQsB,UAAYvH,EAAK2P,IAAIF,EAAQ,SAASvK,EAAO0K,GACxD,OAAO1K,EAAQ,+CAAiD0K,EAAK,KAAO1K,EAAQ,SAAW,KAC7F2K,KAAK,KAGVC,SAAU,SAAmBrE,GAC5BzJ,KAAKoC,SAASpE,EAAK6G,KAAK4E,EAAIE,OAAQ,WAGrCvH,SAAU,SAAoBc,KAK9B6K,aAAc,SAAStE,GACtBzL,EAAKgQ,YAAYvE,EAAIE,OAAQ,+BAA4C,aAAZF,EAAIwE,SAInE,OAAOpP","file":"../../widget/MultiSelectCalendar.js","sourcesContent":["define(\"dojox/widget/MultiSelectCalendar\", [\r\n    \"dojo/main\", \"dijit\", \r\n    \"dojo/text!./MultiSelectCalendar/MultiSelectCalendar.html\", \r\n    \"dojo/cldr/supplemental\", \r\n    \"dojo/date\", \r\n    \"dojo/date/locale\", \r\n    \"dijit/_Widget\", \"dijit/_TemplatedMixin\", \"dijit/_WidgetsInTemplateMixin\",\r\n\t\"dijit/_CssStateMixin\", \"dijit/form/DropDownButton\", \"dijit/typematic\"\r\n],\r\n    function(dojo, dijit, template, supplemental, date, locale,\r\n\t\t_Widget, _TemplatedMixin, _WidgetsInTemplateMixin,\r\n\t\t_CssStateMixin, DropDownButton, typematic) {\r\n\r\ndojo.experimental(\"dojox.widget.MultiSelectCalendar\");\r\n\r\nvar MultiSelectCalendar = dojo.declare(\r\n\t\"dojox.widget.MultiSelectCalendar\",\r\n\t[_Widget, _TemplatedMixin, _WidgetsInTemplateMixin, _CssStateMixin],\r\n\t{\r\n\t\t// summary:\r\n\t\t//\t\tA simple GUI for choosing several dates in the context of a monthly calendar.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tA simple GUI for choosing several dates in the context of a monthly calendar.\r\n\t\t//\t\tThis widget serialises its selected dates to ISO dates or ISO ranges of dates, \r\n\t\t//\t\tdepending on developer selection\r\n\t\t//\t\tNote that it accepts an Array of ISO dates as its input\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\tvar calendar = new dojox.widget.MultiSelectCalendar({value: ['2011-05-07,'2011-05-08',2011-05-09','2011-05-23']}, dojo.byId(\"calendarNode\"));\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\t<div dojoType=\"dojox.widget.MultiSelectCalendar\"></div>\r\n\r\n\t\ttemplateString: template,\r\n\t\twidgetsInTemplate: true,\r\n\r\n\t\t// value: Date\r\n\t\t//\t\tThe currently selected Dates, initially set to an empty object to indicate no selection.\r\n\t\tvalue: {},\r\n\r\n\t\t// datePackage: String\r\n\t\t//\t\tJavaScript namespace to find Calendar routines.  Uses Gregorian Calendar routines\r\n\t\t//\t\tat dojo.date by default.\r\n\t\tdatePackage: \"dojo.date\",\r\n\r\n\t\t// dayWidth: String\r\n\t\t//\t\tHow to represent the days of the week in the calendar header. See dojo.date.locale\r\n\t\tdayWidth: \"narrow\",\r\n\r\n\t\t// tabIndex: String\r\n\t\t//\t\tOrder fields are traversed when user hits the tab key\r\n\t\ttabIndex: \"0\",\r\n\t\t\r\n\t\t// if returnIsoRanges is true, the selected dates will be returned as ISO ranges\r\n\t\t// else each selected date will be returned sequentially\r\n\t\treturnIsoRanges : false,\r\n\t\t\r\n\t\t// currentFocus: Date\r\n\t\t//\t\tDate object containing the currently focused date, or the date which would be focused\r\n\t\t//\t\tif the calendar itself was focused.   Also indicates which year and month to display,\r\n\t\t//\t\ti.e. the current \"page\" the calendar is on.\r\n\t\tcurrentFocus: new Date(),\r\n\r\n\t\tbaseClass:\"dijitCalendar\",\r\n\t\t\r\n\t\tcssStateNodes: {\r\n\t\t\t\"decrementMonth\": \"dijitCalendarArrow\",\r\n\t\t\t\"incrementMonth\": \"dijitCalendarArrow\",\r\n\t\t\t\"previousYearLabelNode\": \"dijitCalendarPreviousYear\",\r\n\t\t\t\"nextYearLabelNode\": \"dijitCalendarNextYear\"\t\t\t\r\n\t\t},\r\n\r\n\t\t_areValidDates: function(/*Date*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRuns various tests on each selected date, checking that they're a valid date, rather\r\n\t\t\t//\t\tthan blank or NaN.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tfor (var selDate in this.value){\r\n\t\t\t\tvalid = (selDate && !isNaN(selDate) && typeof value == \"object\" && selDate.toString() != this.constructor.prototype.value.toString());\r\n\t\t\t\tif(!valid){ return false; }\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\t_getValueAttr: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tthis method returns the list of selected dates in an array structure\r\n\t\t\tif(this.returnIsoRanges){\r\n\t\t\t\tdatesWithRanges = this._returnDatesWithIsoRanges(this._sort());\r\n\t\t\t\treturn datesWithRanges;\r\n\t\t\t}else{\r\n\t\t\t\treturn this._sort();\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t_setValueAttr: function(/*Date|Number|array*/ value, /*Boolean*/ priorityChange){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSupport set(\"value\", ...)\r\n\t\t\t// description:\r\n\t\t\t//\t\tSet the passed dates to the selected date and updates the value of this widget\r\n\t\t\t//\t\tto reflect that\r\n\t\t\t// value:\r\n\t\t\t//\t\tCan be a Date, the number of milliseconds since 1970 or an array of ISO dates (['2011-07-01', '2001-06-01']).\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\t\r\n\t\t\t//If we are passed an array of ISO dates, we are going to mark each date in the list as selected\r\n\t\t\t//We perform the normalization of the passed date\r\n\t\t\tthis.value = {};\r\n\t\t\tif(dojo.isArray(value)) {\r\n\t\t\t\tdojo.forEach(value,function(element, i){\r\n\t\t\t\t\t//Each element of the array could be a date or a date range\r\n\t\t\t\t\tvar slashPosition = element.indexOf(\"/\");\r\n\t\t\t\t\tif(slashPosition == -1){\r\n\t\t\t\t\t\t//The element is a single date\r\n\t\t\t\t\t\tthis.value[element] = 1;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t//We have a slash somewhere in the string so this is an ISO date range\r\n\t\t\t\t\t\tvar dateA = dojo.date.stamp.fromISOString(element.substr(0,10));\r\n\t\t\t\t\t\tvar dateB = dojo.date.stamp.fromISOString(element.substr(11,10));\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.toggleDate(dateA,[],[]);\r\n\t\t\t\t\t\tif((dateA - dateB) > 0){\r\n\t\t\t\t\t\t\t//We select the first date then the rest is handled as if we had selected a range\r\n\t\t\t\t\t\t\tthis._addToRangeRTL(dateA, dateB, [], []);\t\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t//We select the first date then the rest is handled as if we had selected a range\r\n\t\t\t\t\t\t\tthis._addToRangeLTR(dateA, dateB, [], []);\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},this);\r\n\t\t\tif(value.length > 0){\r\n\t\t\t\tthis.focusOnLastDate(value[value.length-1]);\r\n\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(value){\r\n\t\t\t\t\t// convert from Number to Date, or make copy of Date object so that setHours() call below\r\n\t\t\t\t\t// doesn't affect original value\r\n\t\t\t\t\tvalue = new this.dateClassObj(value);\r\n\t\t\t\t}\r\n\t\t\t\tif(this._isValidDate(value)){\r\n\t\t\t\t\tvalue.setHours(1, 0, 0, 0); // round to nearest day (1am to avoid issues when DST shift occurs at midnight, see #8521, #9366)\r\n\t\r\n\t\t\t\t\tif(!this.isDisabledDate(value, this.lang)){\r\n\t\t\t\t\t\tdateIndex = dojo.date.stamp.toISOString(value).substring(0,10);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.value[dateIndex] = 1;\r\n\t\t\r\n\t\t\t\t\t\t// Set focus cell to the new value.   Arguably this should only happen when there isn't a current\r\n\t\t\t\t\t\t// focus point.   This will also repopulate the grid, showing the new selected value (and possibly\r\n\t\t\t\t\t\t// new month/year).\r\n\t\t\t\t\t\tthis.set(\"currentFocus\", value);\r\n\t\r\n\t\t\t\t\t\tif(priorityChange || typeof priorityChange == \"undefined\"){\r\n\t\t\t\t\t\t\tthis.onChange(this.get('value'));\r\n\t\t\t\t\t\t\tthis.onValueSelected(this.get('value'));\t// remove in 2.0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._populateGrid();\r\n\t\t},\r\n\t\tfocusOnLastDate : function(lastElement){\r\n\t\t\t//We put the focus on the last date so that when the user re-clicks on the calendar it will be \r\n\t\t\t//on the proper month\r\n\t\t\tvar slashPositionLastDate = lastElement.indexOf(\"/\");\r\n\t\t\tvar dateA,dateB;\r\n\t\t\tif(slashPositionLastDate == -1){\r\n\t\t\t\t//This is a singleDate\r\n\t\t\t\tlastDate = lastElement;\r\n\t\t\t}else{\r\n\t\t\t\tdateA=new dojo.date.stamp.fromISOString(lastElement.substr(0,10));\r\n\t\t\t\tdateB=new dojo.date.stamp.fromISOString(lastElement.substr(11,10));\r\n\t\t\t\tif((dateA - dateB) > 0){\r\n\t\t\t\t\tlastDate = dateA;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tlastDate = dateB;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.set(\"currentFocus\", lastDate);\t\t\r\n\t\t},\r\n\t\t_isValidDate: function(/*Date*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRuns various tests on the value, checking that it's a valid date, rather\r\n\t\t\t//\t\tthan blank or NaN.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\treturn value && !isNaN(value) && typeof value == \"object\" &&\r\n\t\t\t\tvalue.toString() != this.constructor.prototype.value.toString();\r\n\t\t},\r\n\t\t_setText: function(node, text){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis just sets the content of node to the specified text.\r\n\t\t\t//\t\tCan't do \"node.innerHTML=text\" because of an IE bug w/tables, see #3434.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\twhile(node.firstChild){\r\n\t\t\t\tnode.removeChild(node.firstChild);\r\n\t\t\t}\r\n\t\t\tnode.appendChild(dojo.doc.createTextNode(text));\r\n\t\t},\r\n\r\n\t\t_populateGrid: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFills in the calendar grid with each day (1-31)\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar month = new this.dateClassObj(this.currentFocus);\r\n\t\t\tmonth.setDate(1);\r\n\r\n\t\t\tvar firstDay = month.getDay(),\r\n\t\t\t\tdaysInMonth = this.dateFuncObj.getDaysInMonth(month),\r\n\t\t\t\tdaysInPreviousMonth = this.dateFuncObj.getDaysInMonth(this.dateFuncObj.add(month, \"month\", -1)),\r\n\t\t\t\ttoday = new this.dateClassObj(),\r\n\t\t\t\tdayOffset = dojo.cldr.supplemental.getFirstDayOfWeek(this.lang);\r\n\t\t\tif(dayOffset > firstDay){ dayOffset -= 7; }\r\n\r\n\t\t\t//List of all 42 displayed days in the calendar\r\n\t\t\tthis.listOfNodes = dojo.query(\".dijitCalendarDateTemplate\", this.domNode);\r\n\r\n\t\t\t// Iterate through dates in the calendar and fill in date numbers and style info\r\n\t\t\tthis.listOfNodes.forEach(function(template, i){\r\n\t\t\t\ti += dayOffset;\r\n\t\t\t\tvar date = new this.dateClassObj(month),\r\n\t\t\t\t\tnumber, clazz = \"dijitCalendar\", adj = 0;\r\n\r\n\t\t\t\tif(i < firstDay){\r\n\t\t\t\t\tnumber = daysInPreviousMonth - firstDay + i + 1;\r\n\t\t\t\t\tadj = -1;\r\n\t\t\t\t\tclazz += \"Previous\";\r\n\t\t\t\t}else if(i >= (firstDay + daysInMonth)){\r\n\t\t\t\t\tnumber = i - firstDay - daysInMonth + 1;\r\n\t\t\t\t\tadj = 1;\r\n\t\t\t\t\tclazz += \"Next\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\tnumber = i - firstDay + 1;\r\n\t\t\t\t\tclazz += \"Current\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(adj){\r\n\t\t\t\t\tdate = this.dateFuncObj.add(date, \"month\", adj);\r\n\t\t\t\t}\r\n\t\t\t\tdate.setDate(number);\r\n\r\n\t\t\t\tif(!this.dateFuncObj.compare(date, today, \"date\")){\r\n\t\t\t\t\tclazz = \"dijitCalendarCurrentDate \" + clazz;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//If the date falls outside of the min or max constraints, we do nothing\r\n\t\t\t\tdateIndex = dojo.date.stamp.toISOString(date).substring(0,10);\r\n\t\t\t\t\r\n\t\t\t\tif(!this.isDisabledDate(date, this.lang)){\r\n\t\t\t\t\t//If the node is already selected, the user clicking on it once more will deselect it \r\n\t\t\t\t\t//so we will destroy it in the value object. If the date was not previously selected\r\n\t\t\t\t\t//The user wants to select it so we add it to the value object\r\n\t\t\t\t\tif(this._isSelectedDate(date, this.lang)){\r\n\t\t\t\t\t\tif(this.value[dateIndex]){\r\n\t\t\t\t\t\t\tclazz = \"dijitCalendarSelectedDate \" + clazz;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tclazz = clazz.replace(\"dijitCalendarSelectedDate \",\"\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(this._isSelectedDate(date, this.lang)){\r\n\t\t\t\t\tclazz = \"dijitCalendarBrowsingDate \" + clazz;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(this.isDisabledDate(date, this.lang)){\r\n\t\t\t\t\tclazz = \"dijitCalendarDisabledDate \" + clazz;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar clazz2 = this.getClassForDate(date, this.lang);\r\n\t\t\t\tif(clazz2){\r\n\t\t\t\t\tclazz = clazz2 + \" \" + clazz;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemplate.className = clazz + \"Month dijitCalendarDateTemplate\";\r\n\t\t\t\ttemplate.dijitDateValue = date.valueOf();\t\t\t\t// original code\r\n\t\t\t\tdojo.attr(template, \"dijitDateValue\", date.valueOf());\t// so I can dojo.query() it\r\n\t\t\t\tvar label = dojo.query(\".dijitCalendarDateLabel\", template)[0],\r\n\t\t\t\t\ttext = date.getDateLocalized ? date.getDateLocalized(this.lang) : date.getDate();\r\n\t\t\t\tthis._setText(label, text);\r\n\t\t\t}, this);\r\n\r\n\t\t\t// Repopulate month drop down list based on current year.\r\n\t\t\t// Need to do this to hide leap months in Hebrew calendar.\r\n\t\t\tvar monthNames = this.dateLocaleModule.getNames('months', 'wide', 'standAlone', this.lang, month);\r\n\t\t\tthis.monthDropDownButton.dropDown.set(\"months\", monthNames);\r\n\r\n\t\t\t// Set name of current month and also fill in spacer element with all the month names \r\n\t\t\t// (invisible) so that the maximum width will affect layout.   But not on IE6 because then\r\n\t\t\t// the center <TH> overlaps the right <TH> (due to a browser bug).\r\n\t\t\tthis.monthDropDownButton.containerNode.innerHTML =\r\n\t\t\t\t(dojo.isIE == 6 ? \"\" : \"<div class='dijitSpacer'>\" + this.monthDropDownButton.dropDown.domNode.innerHTML + \"</div>\") + \r\n\t\t\t\t\"<div class='dijitCalendarMonthLabel dijitCalendarCurrentMonthLabel'>\" +  monthNames[month.getMonth()] + \"</div>\";\r\n\r\n\t\t\t// Fill in localized prev/current/next years\r\n\t\t\tvar y = month.getFullYear() - 1;\r\n\t\t\tvar d = new this.dateClassObj();\r\n\t\t\tdojo.forEach([\"previous\", \"current\", \"next\"], function(name){\r\n\t\t\t\td.setFullYear(y++);\r\n\t\t\t\tthis._setText(this[name+\"YearLabelNode\"],\r\n\t\t\t\t\tthis.dateLocaleModule.format(d, {selector:'year', locale:this.lang}));\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\tgoToToday: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tWe go to today but we do no select it\r\n\t\t\tthis.set('currentFocus', new this.dateClassObj(), false);\r\n\t\t},\r\n\r\n\t\tconstructor: function(/*Object*/args){\r\n\t\t\tvar dateClass = (args.datePackage && (args.datePackage != \"dojo.date\"))? args.datePackage + \".Date\" : \"Date\";\r\n\t\t\tthis.dateClassObj = dojo.getObject(dateClass, false);\r\n\t\t\tthis.datePackage = args.datePackage || this.datePackage;\r\n\t\t\tthis.dateFuncObj = dojo.getObject(this.datePackage, false);\r\n\t\t\tthis.dateLocaleModule = dojo.getObject(this.datePackage + \".locale\", false);\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tdojo.setSelectable(this.domNode, false);\r\n\r\n\t\t\tvar cloneClass = dojo.hitch(this, function(clazz, n){\r\n\t\t\t\tvar template = dojo.query(clazz, this.domNode)[0];\r\n\t \t\t\tfor(var i=0; i<n; i++){\r\n\t\t\t\t\ttemplate.parentNode.appendChild(template.cloneNode(true));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// clone the day label and calendar day templates 6 times to make 7 columns\r\n\t\t\tcloneClass(\".dijitCalendarDayLabelTemplate\", 6);\r\n\t\t\tcloneClass(\".dijitCalendarDateTemplate\", 6);\r\n\r\n\t\t\t// now make 6 week rows\r\n\t\t\tcloneClass(\".dijitCalendarWeekTemplate\", 5);\r\n\r\n\t\t\t// insert localized day names in the header\r\n\t\t\tvar dayNames = this.dateLocaleModule.getNames('days', this.dayWidth, 'standAlone', this.lang);\r\n\t\t\tvar dayOffset = dojo.cldr.supplemental.getFirstDayOfWeek(this.lang);\r\n\t\t\tdojo.query(\".dijitCalendarDayLabel\", this.domNode).forEach(function(label, i){\r\n\t\t\t\tthis._setText(label, dayNames[(i + dayOffset) % 7]);\r\n\t\t\t}, this);\r\n\r\n\t\t\tvar dateObj = new this.dateClassObj(this.currentFocus);\r\n\r\n\t\t\tthis.monthDropDownButton.dropDown = new MonthDropDown({\r\n\t\t\t\tid: this.id + \"_mdd\",\r\n\t\t\t\tonChange: dojo.hitch(this, \"_onMonthSelect\")\r\n\t\t\t});\r\n\r\n\t\t\tthis.set('currentFocus', dateObj, false);\t// draw the grid to the month specified by currentFocus\r\n\r\n\t\t\t// Set up repeating mouse behavior for increment/decrement of months/years\r\n\t\t\tvar _this = this;\r\n\t\t\tvar typematic = function(nodeProp, dateProp, adj){\r\n\t\t\t\t_this._connects.push(\r\n\t\t\t\t\tdijit.typematic.addMouseListener(_this[nodeProp], _this, function(count){\r\n\t\t\t\t\t\tif(count >= 0){ _this._adjustDisplay(dateProp, adj); }\r\n\t\t\t\t\t}, 0.8, 500)\r\n\t\t\t\t);\r\n\t\t\t};\r\n\t\t\ttypematic(\"incrementMonth\", \"month\", 1);\r\n\t\t\ttypematic(\"decrementMonth\", \"month\", -1);\r\n\t\t\ttypematic(\"nextYearLabelNode\", \"year\", 1);\r\n\t\t\ttypematic(\"previousYearLabelNode\", \"year\", -1);\r\n\t\t},\r\n\r\n\t\t_adjustDisplay: function(/*String*/ part, /*int*/ amount){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMoves calendar forwards or backwards by months or years\r\n\t\t\t// part:\r\n\t\t\t//\t\t\"month\" or \"year\"\r\n\t\t\t// amount:\r\n\t\t\t//\t\tNumber of months or years\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tthis._setCurrentFocusAttr(this.dateFuncObj.add(this.currentFocus, part, amount));\r\n\t\t},\r\n\r\n\t\t_setCurrentFocusAttr: function(/*Date*/ date, /*Boolean*/ forceFocus){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tIf the calendar currently has focus, then focuses specified date,\r\n\t\t\t//\t\tchanging the currently displayed month/year if necessary.\r\n\t\t\t//\t\tIf the calendar doesn't have focus, updates currently\r\n\t\t\t//\t\tdisplayed month/year, and sets the cell that will get focus.\r\n\t\t\t// forceFocus:\r\n\t\t\t//\t\tIf true, will focus() the cell even if calendar itself doesn't have focus\r\n\r\n\t\t\tvar oldFocus = this.currentFocus,\r\n\t\t\t\toldCell = oldFocus ? dojo.query(\"[dijitDateValue=\" + oldFocus.valueOf() + \"]\", this.domNode)[0] : null;\r\n\r\n\t\t\t// round specified value to nearest day (1am to avoid issues when DST shift occurs at midnight, see #8521, #9366)\r\n\t\t\tdate = new this.dateClassObj(date);\r\n\t\t\tdate.setHours(1, 0, 0, 0); \r\n\r\n\t\t\tthis._set(\"currentFocus\", date);\r\n\t\t\tvar currentMonth = dojo.date.stamp.toISOString(date).substring(0,7);\r\n\t\t\t//We only redraw the grid if we're in a new month\r\n\t\t\tif(currentMonth != this.previousMonth){\r\n\t\t\t\tthis._populateGrid();\r\n\t\t\t\tthis.previousMonth = currentMonth;\r\n\t\t\t}\r\n\r\n\t\t\t// set tabIndex=0 on new cell, and focus it (but only if Calendar itself is focused)\r\n\t\t\tvar newCell = dojo.query(\"[dijitDateValue='\" + date.valueOf() + \"']\", this.domNode)[0];\r\n\t\t\tnewCell.setAttribute(\"tabIndex\", this.tabIndex);\r\n\t\t\tif(this._focused || forceFocus){\r\n\t\t\t\tnewCell.focus();\r\n\t\t\t}\r\n\r\n\t\t\t// set tabIndex=-1 on old focusable cell\r\n\t\t\tif(oldCell && oldCell != newCell){\r\n\t\t\t\tif(dojo.isWebKit){\t// see #11064 about webkit bug\r\n\t\t\t\t\toldCell.setAttribute(\"tabIndex\", \"-1\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\t\toldCell.removeAttribute(\"tabIndex\");\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tfocus: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFocus the calendar by focusing one of the calendar cells\r\n\t\t\tthis._setCurrentFocusAttr(this.currentFocus, true);\r\n\t\t},\r\n\r\n\t\t_onMonthSelect: function(/*Number*/ newMonth){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for when user selects a month from the drop down list\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\t// move to selected month, bounding by the number of days in the month\r\n\t\t\t// (ex: dec 31 --> jan 28, not jan 31)\r\n\t\t\tthis.currentFocus = this.dateFuncObj.add(this.currentFocus, \"month\",\r\n\t\t\t\tnewMonth - this.currentFocus.getMonth());\r\n\t\t\tthis._populateGrid();\r\n\t\t},\r\n\t\t\r\n\t\ttoggleDate : function(/*date*/ dateToToggle, /*array of dates*/ selectedDates, /*array of dates*/ unselectedDates){\r\n\t\t\t\r\n\t\t\t//Obtain CSS class before toggling if necessary\r\n\t\t\tvar dateIndex = dojo.date.stamp.toISOString(dateToToggle).substring(0,10);\t\t\t \r\n\t\t\t//If previously selected we unselect and vice-versa\r\n\t\t\tif(this.value[dateIndex]){\r\n\t\t\t\tthis.unselectDate(dateToToggle, unselectedDates);\t\t\t\r\n\t\t\t}else{\r\n\t\t\t\tthis.selectDate(dateToToggle, selectedDates);\r\n\t\t\t}\t\t\r\n\t\t},\r\n\t\t\r\n\t\tselectDate : function(/*date*/ dateToSelect, /*array of dates*/ selectedDates){\r\n\t\t\t//Selects the passed iso date, changes its class and records it in the selected dates array\r\n\t\t\tvar node = this._getNodeByDate(dateToSelect);\r\n\t\t\tvar clazz = node.className;\r\n\t\t\tvar dateIndex = dojo.date.stamp.toISOString(dateToSelect).substring(0,10);\r\n\t\t\tthis.value[dateIndex] = 1;\r\n\t\t\tselectedDates.push(dateIndex);\t\t\t\r\n\t\t\tclazz = \"dijitCalendarSelectedDate \" + clazz;\r\n\t\t\t//We update CSS class\r\n\t\t\tnode.className = clazz;\r\n\t\t},\r\n\t\t\r\n\t\tunselectDate : function(/*date*/ dateToUnselect, /*array of dates*/ unselectedDates){\r\n\t\t\t//Unselects the passed iso date, changes its class and records it in the unselected dates array\r\n\t\t\tvar node = this._getNodeByDate(dateToUnselect);\r\n\t\t\tvar clazz = node.className;\r\n\t\t\tvar dateIndex = dojo.date.stamp.toISOString(dateToUnselect).substring(0,10);\r\n\t\t\tdelete(this.value[dateIndex]);\r\n\t\t\tunselectedDates.push(dateIndex);\r\n\t\t\tclazz = clazz.replace(\"dijitCalendarSelectedDate \",\"\");\r\n\t\t\t//We update CSS class\r\n\t\t\tnode.className = clazz;\r\n\t\t},\r\n\r\n\t\t_getNodeByDate : function(/*ISO date*/ dateNode){\r\n\t\t\t//return the node that corresponds to the passed ISO date\r\n\t\t\tvar firstDate = new this.dateClassObj(this.listOfNodes[0].dijitDateValue);\r\n\t\t\tvar difference = Math.abs(dojo.date.difference(firstDate, dateNode, \"day\"));\r\n\t\t\treturn this.listOfNodes[difference];\r\n\t\t},\r\n\r\n\t\t_onDayClick: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for day clicks, selects the date if appropriate\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\t\r\n\t\t\t//If we coming out of selecting a range, we need to skip this onDayClick or else we\r\n\t\t\t//are going to deselect a date that has just been selected or deselect one that just was \r\n\t\t\t//selected\r\n\t\t\t\tdojo.stopEvent(evt);\r\n\t\t\t\tfor(var node = evt.target; node && !node.dijitDateValue; node = node.parentNode);\r\n\t\t\t\tif(node && !dojo.hasClass(node, \"dijitCalendarDisabledDate\")){\r\n\t\t\t\t\tvalue = new this.dateClassObj(node.dijitDateValue);\r\n\t\t\t\t\tif(!this.rangeJustSelected){\r\n\t\t\t\t\t\tthis.toggleDate(value,[],[]);\r\n\t\t\t\t\t\t//To record the date that was selected prior to the one currently selected\r\n\t\t\t\t\t\t//needed in the event we are selecting a range of dates\r\n\t\t\t\t\t\tthis.previouslySelectedDay = value;\r\n\t\t\t\t\t\tthis.set(\"currentFocus\", value);\r\n\t\t\t\t\t\tthis.onValueSelected([dojo.date.stamp.toISOString(value).substring(0,10)]);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.rangeJustSelected = false;\r\n\t\t\t\t\t\tthis.set(\"currentFocus\", value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onDayMouseOver: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for mouse over events on days, sets hovered style\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\t// event can occur on <td> or the <span> inside the td,\r\n\t\t\t// set node to the <td>.\r\n\t\t\tvar node =\r\n\t\t\t\tdojo.hasClass(evt.target, \"dijitCalendarDateLabel\") ?\r\n\t\t\t\tevt.target.parentNode :\r\n\t\t\t\tevt.target;\r\n\r\n\t\t\tif(node && (node.dijitDateValue || node == this.previousYearLabelNode || node == this.nextYearLabelNode) ){\r\n\t\t\t\tdojo.addClass(node, \"dijitCalendarHoveredDate\");\r\n\t\t\t\tthis._currentNode = node;\r\n\t\t\t}\r\n\t\t},\r\n\t\t_setEndRangeAttr: function(/*Date*/ value){\r\n\t\t\t// description:\r\n\t\t\t//\t\trecords the end of a date range\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvalue = new this.dateClassObj(value);\r\n\t\t\tvalue.setHours(1); // to avoid issues when DST shift occurs at midnight, see #8521, #9366\r\n\t\t\tthis.endRange = value;\r\n\t\t},\r\n\t\t_getEndRangeAttr: function(){\r\n\t\t//\t\tReturns the EndRange date that is set when selecting a range\r\n\t\t\tvar value = new this.dateClassObj(this.endRange);\r\n\t\t\tvalue.setHours(0, 0, 0, 0); // return midnight, local time for back-compat\r\n\t\t\r\n\t\t\t// If daylight savings pushes midnight to the previous date, fix the Date\r\n\t\t\t// object to point at 1am so it will represent the correct day. See #9366\r\n\t\t\tif(value.getDate() < this.endRange.getDate()){\r\n\t\t\t\tvalue = this.dateFuncObj.add(value, \"hour\", 1);\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t},\r\n\r\n\t\t_onDayMouseOut: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for mouse out events on days, clears hovered style\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\r\n\t\t\tif(!this._currentNode){ return; }\r\n\t\t\t\r\n\t\t\t// if mouse out occurs moving from <td> to <span> inside <td>, ignore it\r\n\t\t\tif(evt.relatedTarget && evt.relatedTarget.parentNode == this._currentNode){ return; }\r\n\t\t\tvar cls = \"dijitCalendarHoveredDate\";\r\n\t\t\tif(dojo.hasClass(this._currentNode, \"dijitCalendarActiveDate\")) {\r\n\t\t\t\tcls += \" dijitCalendarActiveDate\";\r\n\t\t\t}\r\n\t\t\tdojo.removeClass(this._currentNode, cls);\r\n\t\t\tthis._currentNode = null;\r\n\t\t},\r\n\t\t_onDayMouseDown: function(/*Event*/ evt){ \r\n\t\t\tvar node = evt.target.parentNode;\r\n\t\t\tif(node && node.dijitDateValue){\r\n\t\t\t\tdojo.addClass(node, \"dijitCalendarActiveDate\");\r\n\t\t\t\tthis._currentNode = node;\r\n\t\t\t}\r\n\t\t\t//if shift is pressed, we know the user is selecting a range,\r\n\t\t\t//in which case we are going to select a range of date \r\n\t\t\tif(evt.shiftKey && this.previouslySelectedDay){\r\n\t\t\t\t//necessary to know whether or not we are in the process of selecting a range of dates\t\r\n\t\t\t\tthis.selectingRange = true;\r\n\t\t\t\tthis.set('endRange', node.dijitDateValue);\r\n\t\t\t\tthis._selectRange();\r\n\t\t\t}else{\r\n\t\t\t\tthis.selectingRange = false;\r\n\t\t\t\tthis.previousRangeStart = null;\r\n\t\t\t\tthis.previousRangeEnd = null;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t_onDayMouseUp: function(/*Event*/ evt){\r\n\t\t\tvar node = evt.target.parentNode;\r\n\t\t\tif(node && node.dijitDateValue){\r\n\t\t\t\tdojo.removeClass(node, \"dijitCalendarActiveDate\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n//TODO: use typematic\r\n\t\thandleKey: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tProvides keyboard navigation of calendar.\r\n\t\t\t// description:\r\n\t\t\t//\t\tCalled from _onKeyDown() to handle keypress on a stand alone Calendar,\r\n\t\t\t//\t\tand also from `dijit.form._DateTimeTextBox` to pass a keypress event \r\n\t\t\t//\t\tfrom the `dijit.form.DateTextBox` to be handled in this widget\r\n\t\t\t// returns:\r\n\t\t\t//\t\tFalse if the key was recognized as a navigation key,\r\n\t\t\t//\t\tto indicate that the event was handled by Calendar and shouldn't be propogated\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar dk = dojo.keys,\r\n\t\t\t\tincrement = -1,\r\n\t\t\t\tinterval,\r\n\t\t\t\tnewValue = this.currentFocus;\r\n\t\t\tswitch(evt.keyCode){\r\n\t\t\t\tcase dk.RIGHT_ARROW:\r\n\t\t\t\t\tincrement = 1;\r\n\t\t\t\t\t//fallthrough...\r\n\t\t\t\tcase dk.LEFT_ARROW:\r\n\t\t\t\t\tinterval = \"day\";\r\n\t\t\t\t\tif(!this.isLeftToRight()){ increment *= -1; }\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase dk.DOWN_ARROW:\r\n\t\t\t\t\tincrement = 1;\r\n\t\t\t\t\t//fallthrough...\r\n\t\t\t\tcase dk.UP_ARROW:\r\n\t\t\t\t\tinterval = \"week\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase dk.PAGE_DOWN:\r\n\t\t\t\t\tincrement = 1;\r\n\t\t\t\t\t//fallthrough...\r\n\t\t\t\tcase dk.PAGE_UP:\r\n\t\t\t\t\tinterval = evt.ctrlKey || evt.altKey ? \"year\" : \"month\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase dk.END:\r\n\t\t\t\t\t// go to the next month\r\n\t\t\t\t\tnewValue = this.dateFuncObj.add(newValue, \"month\", 1);\r\n\t\t\t\t\t// subtract a day from the result when we're done\r\n\t\t\t\t\tinterval = \"day\";\r\n\t\t\t\t\t//fallthrough...\r\n\t\t\t\tcase dk.HOME:\r\n\t\t\t\t\tnewValue = new this.dateClassObj(newValue);\r\n\t\t\t\t\tnewValue.setDate(1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase dk.ENTER:\r\n\t\t\t\tcase dk.SPACE:\r\n\t\t\t\t\tif(evt.shiftKey && this.previouslySelectedDay){\r\n\t\t\t\t\t\tthis.selectingRange = true;\r\n\t\t\t\t\t\tthis.set('endRange', newValue);\r\n\t\t\t\t\t\tthis._selectRange();\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.selectingRange = false;\t\t\t\t\r\n\t\t\t\t\t\tthis.toggleDate(newValue,[],[]);\r\n\t\t\t\t\t\t//We record the selected date as the previous one \r\n\t\t\t\t\t\t//In case we are selecting the first date of a range\r\n\t\t\t\t\t\tthis.previouslySelectedDay = newValue;\r\n\t\t\t\t\t\tthis.previousRangeStart = null;\r\n\t\t\t\t\t\tthis.previousRangeEnd = null;\r\n\t\t\t\t\t\tthis.onValueSelected([dojo.date.stamp.toISOString(newValue).substring(0,10)]);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tif(interval){\r\n\t\t\t\tnewValue = this.dateFuncObj.add(newValue, interval, increment);\r\n\t\t\t}\r\n\r\n\t\t\tthis.set(\"currentFocus\", newValue);\r\n\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\t_onKeyDown: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFor handling keypress events on a stand alone calendar\r\n\t\t\tif(!this.handleKey(evt)){\r\n\t\t\t\tdojo.stopEvent(evt);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t_removeFromRangeLTR : function(/*date*/ beginning, /*date*/ end, /*array*/selectedDates, /*array*/unselectedDates){\r\n\t//In this method we remove some dates from a range from left to right\r\n\t\t\tdifference = Math.abs(dojo.date.difference(beginning, end, \"day\"));\r\n\t\t\tfor(var i = 0; i <= difference; i++){\r\n\t\t\t\tvar nextDay = dojo.date.add(beginning, 'day',i);\r\n\t\t\t\tthis.toggleDate(nextDay, selectedDates, unselectedDates);\r\n\t\t\t}\r\n\t\t\tif(this.previousRangeEnd == null){\r\n\t\t\t\t//necessary to keep track of the previous range's end date\r\n\t\t\t\tthis.previousRangeEnd = end;\r\n\t\t\t}else{\r\n\t\t\t\tif(dojo.date.compare(end, this.previousRangeEnd, 'date') > 0 )\r\n\t\t\t\t\tthis.previousRangeEnd = end;\r\n\t\t\t}\r\n\t\t\tif(this.previousRangeStart == null){\r\n\t\t\t\t//necessary to keep track of the previous range's start date\r\n\t\t\t\tthis.previousRangeStart = end;\r\n\t\t\t}else{\r\n\t\t\t\tif(dojo.date.compare(end, this.previousRangeStart, 'date') > 0 )\r\n\t\t\t\t\tthis.previousRangeStart = end;\r\n\t\t\t}\r\n\t\t\tthis.previouslySelectedDay = dojo.date.add(nextDay, 'day',1);\t\r\n\t\t},\r\n\t\t_removeFromRangeRTL : function(/*date*/ beginning, /*date*/ end, /*array*/selectedDates, /*array*/unselectedDates){\r\n\t\t\t//If the end of the range is earlier than the beginning (back in time), \r\n\t\t\t//we are going to start from the end and move backward \r\n\t\r\n\t\t\tdifference = Math.abs(dojo.date.difference(beginning, end, \"day\"));\r\n\t\t\tfor(var i = 0; i <= difference; i++){\r\n\t\t\t\tvar nextDay = dojo.date.add(beginning, 'day',-i);\r\n\t\t\t\tthis.toggleDate(nextDay, selectedDates, unselectedDates);\r\n\t\t\t}\r\n\t\t\tif(this.previousRangeEnd == null){\r\n\t\t\t\tthis.previousRangeEnd = end;\r\n\t\t\t}else{\r\n\t\t\t\tif(dojo.date.compare(end, this.previousRangeEnd, 'date') < 0 ){\r\n\t\t\t\t\tthis.previousRangeEnd = end;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(this.previousRangeStart == null){\r\n\t\t\t\tthis.previousRangeStart = end;\r\n\t\t\t}else{\r\n\t\t\t\tif(dojo.date.compare(end, this.previousRangeStart, 'date') < 0 ){\r\n\t\t\t\t\tthis.previousRangeStart = end;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.previouslySelectedDay = dojo.date.add(nextDay, 'day',-1);\r\n\t\t},\r\n\t\t_addToRangeRTL : function(/*date*/ beginning, /*date*/ end, /*array*/selectedDates, /*array*/unselectedDates){\r\n\t\t\r\n\t\t\tdifference = Math.abs(dojo.date.difference(beginning, end, \"day\"));\r\n\t\t\t//If the end of the range is earlier than the beginning (back in time), \r\n\t\t\t//we are going to start from the end and move backward \r\n\t\t\tfor(var i = 1; i <= difference; i++){\r\n\t\t\t\tvar nextDay = dojo.date.add(beginning, 'day',-i);\r\n\t\t\t\tthis.toggleDate(nextDay, selectedDates, unselectedDates);\r\n\t\t\t}\r\n\t\r\n\t\t\tif(this.previousRangeStart == null){\r\n\t\t\t\tthis.previousRangeStart = end;\r\n\t\t\t}else{\r\n\t\t\t\tif(dojo.date.compare(end, this.previousRangeStart, 'date') < 0 ){\r\n\t\t\t\t\tthis.previousRangeStart = end;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(this.previousRangeEnd == null){\r\n\t\t\t\tthis.previousRangeEnd = beginning;\r\n\t\t\t}else{\r\n\t\t\t\tif(dojo.date.compare(beginning, this.previousRangeEnd, 'date') > 0 ){\r\n\t\t\t\t\tthis.previousRangeEnd = beginning;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.previouslySelectedDay = nextDay;\r\n\t\t},\r\n\t\t_addToRangeLTR : function(/*date*/ beginning, /*date*/ end, /*array*/selectedDates, /*array*/unselectedDates){\r\n\t\t\t//If the end of the range is later than the beginning, \r\n\t\t\t//adding dates from left to right\r\n\t\t\tdifference = Math.abs(dojo.date.difference(beginning, end, \"day\"));\r\n\t\t\tfor(var i = 1; i <= difference; i++){\r\n\t\t\t\tvar nextDay = dojo.date.add(beginning, 'day',i);\r\n\t\t\t\tthis.toggleDate(nextDay, selectedDates, unselectedDates);\r\n\t\t\t}\r\n\t\t\tif(this.previousRangeStart == null){\r\n\t\t\t\tthis.previousRangeStart = beginning;\r\n\t\t\t}else{\r\n\t\t\t\tif(dojo.date.compare(beginning, this.previousRangeStart, 'date') < 0 ){\r\n\t\t\t\t\tthis.previousRangeStart = beginning;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(this.previousRangeEnd == null){\r\n\t\t\t\tthis.previousRangeEnd = end;\r\n\t\t\t}else{\r\n\t\t\t\tif(dojo.date.compare(end, this.previousRangeEnd, 'date') > 0 ){\r\n\t\t\t\t\tthis.previousRangeEnd = end;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.previouslySelectedDay = nextDay;\r\n\t\t},\r\n\t\t_selectRange : function(){\r\n\t\t\t//This method will toggle the dates in the selected range.\r\n\t\t\tvar selectedDates = []; //Will gather the list of ISO dates that are selected\r\n\t\t\tvar unselectedDates = []; //Will gather the list of ISO dates that are unselected\r\n\t\t\tvar beginning = this.previouslySelectedDay;\r\n\t\t\tvar end = this.get('endRange');\r\n\t\t\t\r\n\t\t\tif(!this.previousRangeStart && !this.previousRangeEnd){\r\n\t\t\t\tremovingFromRange = false;\r\n\t\t\t}else{\r\n\t\t\t\tif((dojo.date.compare(end, this.previousRangeStart, 'date') < 0) || (dojo.date.compare(end, this.previousRangeEnd, 'date') > 0)){\r\n\t\t\t\t//We are adding to range\r\n\t\t\t\t\tremovingFromRange = false;\r\n\t\t\t\t}else{// Otherwise we are removing from the range\r\n\t\t\t\t\tremovingFromRange = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(removingFromRange == true){\r\n\t\t\t\tif(dojo.date.compare(end, beginning, 'date') < 0){\r\n\t\t\t\t\t//We are removing from the range, starting from the end (Right to left)\r\n\t\t\t\t\tthis._removeFromRangeRTL(beginning, end, selectedDates, unselectedDates);\r\n\t\t\t\t}else{\r\n\t\t\t\t//The end of the range is later in time than the beginning: We go from left to right\r\n\t\t\t\t\tthis._removeFromRangeLTR(beginning, end, selectedDates, unselectedDates);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t//We are adding to the range\r\n\t\t\t\tif(dojo.date.compare(end, beginning, 'date') < 0){\r\n\t\t\t\t\tthis._addToRangeRTL(beginning, end, selectedDates, unselectedDates);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis._addToRangeLTR(beginning, end, selectedDates, unselectedDates);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//We call the extension point with the changed dates\r\n\t\t\tif(selectedDates.length > 0){\r\n\t\t\t\tthis.onValueSelected(selectedDates);\r\n\t\t\t}\r\n\t\t\tif(unselectedDates.length > 0){\r\n\t\t\t\tthis.onValueUnselected(unselectedDates);\r\n\t\t\t}\r\n\t\t\tthis.rangeJustSelected = true; //Indicates that we just selected a range.\r\n\t\t},\r\n\r\n\t\tonValueSelected: function(/*array of ISO dates*/ dates){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tNotification that a date cell or more were selected.\r\n\t\t\t// description:\r\n\t\t\t//\t\tPasses on the list of ISO dates that are selected\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t},\r\n\r\n\t\tonValueUnselected: function(/*array of ISO dates*/ dates){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tNotification that a date cell or more were unselected.\r\n\t\t\t// description:\r\n\t\t\t//\t\tPasses on the list of ISO dates that are unselected\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t},\r\n\t\tonChange: function(/*Date*/ date){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled only when the selected date has changed\r\n\t\t},\r\n\r\n\t\t_isSelectedDate: function(/*Date*/ dateObject, /*String?*/ locale){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns true if the passed date is part of the selected dates of the calendar\r\n\t\t\t\r\n\t\t\t\tdateIndex = dojo.date.stamp.toISOString(dateObject).substring(0,10);\r\n\t\t\t\treturn this.value[dateIndex];\r\n\t\t},\r\n\r\n\t\tisDisabledDate: function(/*Date*/ dateObject, /*String?*/ locale){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMay be overridden to disable certain dates in the calendar e.g. `isDisabledDate=dojo.date.locale.isWeekend`\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n/*=====\r\n\t\t\treturn false; // Boolean\r\n=====*/\r\n\t\t},\r\n\r\n\t\tgetClassForDate: function(/*Date*/ dateObject, /*String?*/ locale){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMay be overridden to return CSS classes to associate with the date entry for the given dateObject,\r\n\t\t\t//\t\tfor example to indicate a holiday in specified locale.\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\r\n/*=====\r\n\t\t\treturn \"\"; // String\r\n=====*/\r\n\t\t},\r\n\t\t_sort : function(){\r\n\t\t\t//This function returns a sorted version of the value array that represents the selected dates.\r\n\t\t\tif(this.value == {}){return [];}\r\n\t\t\t//We create an array of date objects with the dates that were selected by the user.\r\n\t\t\tvar selectedDates = [];\r\n\t\t\tfor (var selDate in this.value){\r\n\t\t\t\tselectedDates.push(selDate);\r\n\t\t\t}\r\n\t\t\t//Actual sorting\r\n\t\t\tselectedDates.sort(function(a, b){\r\n\t\t\t\tvar dateA=new Date(a), dateB=new Date(b);\r\n\t\t\t\treturn dateA-dateB;\r\n\t\t\t});\r\n\t\t\treturn selectedDates;\r\n\t\t},\r\n\t\t_returnDatesWithIsoRanges : function(selectedDates /*Array of sorted ISO dates*/){\r\n\t\t//this method receives a sorted array of dates and returns an array of dates and date ranges where\r\n\t\t//such range exist. For instance when passed with selectedDates = ['2010-06-14', '2010-06-15', '2010-12-25']\r\n\t\t//it would return [2010-06-14/2010-06-15,  '2010-12-25']\r\n\t\tvar returnDates = [];\r\n\t\tif(selectedDates.length > 1){\r\n\t\t\t//initialisation\r\n\t\t\tvar weHaveRange = false,\r\n\t\t\t\trangeCount = 0,\r\n\t\t\t\tstartRange = null,\r\n\t\t\t\tlastDayRange = null,\r\n\t\t\t\tpreviousDate = dojo.date.stamp.fromISOString(selectedDates[0]);\r\n\t\t\t\r\n\t\t\tfor(var i = 1; i < selectedDates.length+1; i++){\r\n\t\t\t\tcurrentDate = dojo.date.stamp.fromISOString(selectedDates[i]);\r\n\t\t\t\tif(weHaveRange){\r\n\t\t\t\t//We are in the middle of a range\t\t\t\t\r\n\t\t\t\t\tdifference = Math.abs(dojo.date.difference(previousDate, currentDate, \"day\"));\r\n\t\t\t\t\tif(difference == 1){\r\n\t\t\t\t\t\t//we continue with the range\r\n\t\t\t\t\t\tlastDayRange = currentDate;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t//end of the range, reset variables for maybe the next range..\r\n\t\t\t\t\t\trange = dojo.date.stamp.toISOString(startRange).substring(0,10)\r\n\t\t\t\t\t\t\t\t+ \"/\" + dojo.date.stamp.toISOString(lastDayRange).substring(0,10);\r\n\t\t\t\t\t\treturnDates.push(range);\r\n\t\t\t\t\t\tweHaveRange = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\t//We are not in a range to begin with\r\n\t\t\t\t\tdifference = Math.abs(dojo.date.difference(previousDate, currentDate, \"day\"));\r\n\t\t\t\t\tif(difference == 1){\r\n\t\t\t\t\t\t//These are two consecutive dates: This is a range!\r\n\t\t\t\t\t\tweHaveRange = true;\r\n\t\t\t\t\t\tstartRange = previousDate;\r\n\t\t\t\t\t\tlastDayRange = currentDate;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t//this is a standalone date\r\n\t\t\t\t\t\treturnDates.push(dojo.date.stamp.toISOString(previousDate).substring(0,10));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tpreviousDate = currentDate;\r\n\t\t\t}\r\n\t\t\treturn returnDates;\r\n\t\t}else{\r\n\t\t\t//If there's only one selected date we return only it\r\n\t\t\t\treturn selectedDates;\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\r\n);\r\n\r\n//FIXME: can we use dijit.Calendar._MonthDropDown directly?\r\nvar MonthDropDown = MultiSelectCalendar._MonthDropDown = dojo.declare(\"dojox.widget._MonthDropDown\",\r\n    [_Widget, _TemplatedMixin, _WidgetsInTemplateMixin], {\r\n\t// summary:\r\n\t//\t\tThe month drop down\r\n\r\n\t// months: String[]\r\n\t//\t\tList of names of months, possibly w/some undefined entries for Hebrew leap months\r\n\t//\t\t(ex: [\"January\", \"February\", undefined, \"April\", ...])\r\n\tmonths: [],\r\n\r\n\ttemplateString: \"<div class='dijitCalendarMonthMenu dijitMenu' \" +\r\n\t\t\"dojoAttachEvent='onclick:_onClick,onmouseover:_onMenuHover,onmouseout:_onMenuHover'></div>\",\r\n\r\n\t_setMonthsAttr: function(/*String[]*/ months){\r\n\t\tthis.domNode.innerHTML = dojo.map(months, function(month, idx){\r\n\t\t\t\treturn month ? \"<div class='dijitCalendarMonthLabel' month='\" + idx +\"'>\" + month + \"</div>\" : \"\";\r\n\t\t\t}).join(\"\");\r\n\t},\r\n\r\n\t_onClick: function(/*Event*/ evt){\r\n\t\tthis.onChange(dojo.attr(evt.target, \"month\"));\r\n\t},\r\n\r\n\tonChange: function(/*Number*/ month){\r\n\t\t// summary:\r\n\t\t//\t\tCallback when month is selected from drop down\r\n\t},\r\n\r\n\t_onMenuHover: function(evt){\r\n\t\tdojo.toggleClass(evt.target, \"dijitCalendarMonthLabelHover\", evt.type == \"mouseover\");\r\n\t}\r\n});\r\n\r\nreturn MultiSelectCalendar;\r\n\r\n});\r\n"]}