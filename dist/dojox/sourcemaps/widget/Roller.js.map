{"version":3,"sources":["widget/Roller.js"],"names":["define","dojo","dijit","Roller","declare","_Widget","delay","autoStart","itemSelector","durationIn","durationOut","_idx","postCreate","this","items","addClass","domNode","query","forEach","item","i","push","innerHTML","_roller","destroy","create","makeAnims","start","n","mixin","_anim","in","fadeIn","node","duration","out","fadeOut","_setupConnects","anim","connect","_setIndex","play","_timeout","setTimeout","hitch","rolling","_run","gotoPercent","stop","m","t","clearTimeout","l","length","RollerSlide","dojox","widget","style","animateProperty","properties","top","end","opacity","_Hover","inherited","arguments"],"mappings":";;;;;;;AAAAA,QAAQ,OAAQ,QAAS,iBAAkB,SAASC,EAAMC,GAEzD,IAAIC,EAASF,EAAKG,QAAQ,sBAAuBF,EAAMG,SAiCtDC,MAAO,IAKPC,WAAW,EAMXC,aAAc,OAIdC,WAAY,IAIZC,YAAa,IASbC,MAAO,EAEPC,WAAY,WAGPC,KAAY,QACfA,KAAKC,UAGNb,EAAKc,SAASF,KAAKG,QAAQ,eAG3Bf,EAAKgB,MAAMJ,KAAKL,aAAcK,KAAKG,SAASE,QAAQ,SAASC,EAAMC,GAClEP,KAAKC,MAAMO,KAAKF,EAAKG,WAEb,GAALF,GACFP,KAAKU,QAAUJ,EACfN,KAAKF,KAAO,GACNV,EAAKuB,QAAQL,IAClBN,MAGCA,KAAKU,UACRV,KAAKU,QAAUtB,EAAKwB,OAAO,KAAM,KAAMZ,KAAKG,UAG7CH,KAAKa,YAGFb,KAAKN,WAAYM,KAAKc,SAI1BD,UAAW,WAKV,IAAIE,EAAIf,KAAKG,QACbf,EAAK4B,MAAMhB,MACViB,OACCC,GAAM9B,EAAK+B,QAASC,KAAKL,EAAGM,SAAUrB,KAAKJ,aAC3C0B,IAAOlC,EAAKmC,SAAUH,KAAKL,EAAGM,SAAUrB,KAAKH,iBAG/CG,KAAKwB,kBAINA,eAAgB,WAGf,IAAIC,EAAOzB,KAAKiB,MAEhBjB,KAAK0B,QAAQD,EAAU,IAAG,QAAS,WAElCzB,KAAK2B,UAAU3B,KAAKF,KAAO,GAC3B2B,EAAS,GAAEG,KAAK,MAGjB5B,KAAK0B,QAAQD,EAAS,GAAG,QAAS,WAEjCzB,KAAK6B,SAAWC,WAAW1C,EAAK2C,MAAM/B,KAAM,QAASA,KAAKP,UAI5DqB,MAAO,WAGFd,KAAKgC,UACRhC,KAAKgC,SAAU,EACfhC,KAAKiC,SAIPA,KAAM,WACLjC,KAAKiB,MAAW,IAAEiB,YAAY,GAAG,IAGlCC,KAAM,WAGLnC,KAAKgC,SAAU,EAEf,IAAII,EAAIpC,KAAKiB,MACZoB,EAAIrC,KAAK6B,SAEPQ,GAAIC,aAAaD,GACpBD,EAAM,GAAED,OACRC,EAAO,IAAED,QAGVR,UAAW,SAASpB,GAGnB,IAAIgC,EAAIvC,KAAKC,MAAMuC,OAAS,EACzBjC,EAAI,IAAIA,EAAIgC,GACZhC,EAAIgC,IAAIhC,EAAI,GACfP,KAAKU,QAAQD,UAAYT,KAAKC,MAAMM,IAAM,SAC1CP,KAAKF,KAAOS,KAyEd,OApEAjB,EAAOmD,YAAcrD,EAAKG,QAAQ,2BAA4BmD,MAAMC,OAAOrD,QAM1EO,YAAa,IAEbgB,UAAW,WAMV,IAAIE,EAAIf,KAAKG,QAObf,EAAKwD,MAAM7B,EAPiB,WAOT,YACnB3B,EAAKwD,MAAM5C,KAAKU,QARY,WAQE,YAE9BtB,EAAK4B,MAAMhB,MACViB,OAECC,GAAM9B,EAAKyD,iBACVzB,KAAML,EACNM,SAAUrB,KAAKJ,WACfkD,YAdDC,KAAOC,IAAK,EAAGlC,MAAO,IACtBmC,QAAS,KAgBT3B,IAAOlC,EAAKmC,SAAUH,KAAML,EAAGM,SAAUrB,KAAKH,iBAIhDG,KAAKwB,oBAKPlC,EAAO4D,OAAS9D,EAAKG,QAAQ,4BAA6B,MAkBzDQ,WAAY,WACXC,KAAKmD,UAAUC,WACfpD,KAAK0B,QAAQ1B,KAAKG,QAAS,eAAgB,QAC3CH,KAAK0B,QAAQ1B,KAAKG,QAAS,eAAgB,YAKtCb","file":"../../widget/Roller.js","sourcesContent":["define([\"dojo\", \"dijit\", \"dijit/_Widget\"], function(dojo, dijit){\r\n\r\n\tvar Roller = dojo.declare(\"dojox.widget.Roller\", dijit._Widget, {\r\n\t\t// summary:\r\n\t\t//\t\tA simple widget to take an unordered-list of Text and roll through them\r\n\t\t// description:\r\n\t\t//\t\tThe Roller widget takes an unordered-list of items, and converts\r\n\t\t//\t\tthem to a single-area (the size of one list-item, however you so choose\r\n\t\t//\t\tto style it) and loops continually, fading between items.\r\n\t\t//\r\n\t\t//\t\tIn it's current state, it requires it be created from an unordered (or ordered)\r\n\t\t//\t\tlist, though can contain complex markup.\r\n\t\t//\r\n\t\t//\t\tYou can manipulate the `items` array at any point during the cycle with\r\n\t\t//\t\tstandard array manipulation techniques.\r\n\t\t//\r\n\t\t//\t\tThe class \"dojoxRoller\" is added to the UL element for styling purposes.\r\n\t\t// example:\r\n\t\t//\t|\t// create a scroller from a unordered list with id=\"lister\"\r\n\t\t//\t|\tvar thinger = new dojox.widget.Roller.Roller({},\"lister\");\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\t// create a scroller from a fixed array, and place in the DOM:\r\n\t\t//\t|\tnew dojox.widget.Roller({ items:[\"one\",\"two\",\"three\"] }).placeAt(dojo.body());\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\t// add an item:\r\n\t\t//\t|\tdijit.byId(\"roller\").items.push(\"I am a new Label\");\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\t// stop a roller from rolling:\r\n\t\t//\t|\tdijit.byId(\"roller\").stop();\r\n\t\t\r\n\t\t// delay: Integer\r\n\t\t//\t\tInterval between rolls\r\n\t\tdelay: 2000,\r\n\r\n\t\t// autoStart: Boolean\r\n\t\t//\t\tToggle to control starup behavior. Call .start() manually\r\n\t\t//\t\tif set to `false`\r\n\t\tautoStart: true,\r\n\r\n\t\t// itemSelector: String\r\n\t\t//\t\tA CSS selector to be used by `dojo.query` to find the children\r\n\t\t//\t\titems in this widget. Defaults to \"> li\", finding only first-children\r\n\t\t//\t\tlist-items in the list, allowing for embedded lists to occur.\r\n\t\titemSelector: \"> li\",\r\n\r\n\t\t// durationIn: Integer\r\n\t\t//\t\tSpeed (in ms) to apply to the \"in\" animation (show the node)\r\n\t\tdurationIn: 400,\r\n\r\n\t\t// durationOut: Integer\r\n\t\t//\t\tSpeed (in ms) to apply to the \"out\" animation (hide the showing node)\r\n\t\tdurationOut: 275,\r\n\t/*=====\r\n\t\t// items: Array\r\n\t\t//\t\tIf populated prior to instantiation, is used as the Items over the children\r\n\t\titems: [],\r\n\t=====*/\r\n\r\n\t\t// _idx: Integer\r\n\t\t//\t\tIndex of the the currently visible item in the list of items[]\r\n\t\t_idx: -1,\r\n\r\n\t\tpostCreate: function(){\r\n\r\n\t\t\t// add some instance vars:\r\n\t\t\tif(!this[\"items\"]){\r\n\t\t\t\tthis.items = [];\r\n\t\t\t}\r\n\r\n\t\t\tdojo.addClass(this.domNode,\"dojoxRoller\");\r\n\r\n\t\t\t// find all the items in this list, and popuplate\r\n\t\t\tdojo.query(this.itemSelector, this.domNode).forEach(function(item, i){\r\n\t\t\t\tthis.items.push(item.innerHTML);\r\n\t\t\t\t// reuse the first match, destroy the rest\r\n\t\t\t\tif(i == 0){\r\n\t\t\t\t\tthis._roller = item;\r\n\t\t\t\t\tthis._idx = 0;\r\n\t\t\t\t}else{ dojo.destroy(item); }\r\n\t\t\t}, this);\r\n\r\n\t\t\t// handle the case where items[] were passed, and no srcNodeRef exists\r\n\t\t\tif(!this._roller){\r\n\t\t\t\tthis._roller = dojo.create('li', null, this.domNode);\r\n\t\t\t}\r\n\t\t\t// stub out animation creation (for overloading maybe later)\r\n\t\t\tthis.makeAnims();\r\n\r\n\t\t\t// and start, if true:\r\n\t\t\tif(this.autoStart){ this.start(); }\r\n\r\n\t\t},\r\n\r\n\t\tmakeAnims: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAnimation creator function. Need to create an 'in' and 'out'\r\n\t\t\t//\t\tAnimation stored in _anim Object, which the rest of the widget\r\n\t\t\t//\t\twill reuse.\r\n\t\t\tvar n = this.domNode;\r\n\t\t\tdojo.mixin(this, {\r\n\t\t\t\t_anim: {\r\n\t\t\t\t\t\"in\": dojo.fadeIn({ node:n, duration: this.durationIn }),\r\n\t\t\t\t\t\"out\": dojo.fadeOut({ node:n, duration: this.durationOut })\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis._setupConnects();\r\n\r\n\t\t},\r\n\r\n\t\t_setupConnects: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsetup the loop connection logic\r\n\t\t\tvar anim = this._anim;\r\n\r\n\t\t\tthis.connect(anim[\"out\"], \"onEnd\", function(){\r\n\t\t\t\t// onEnd of the `out` animation, select the next items and play `in` animation\r\n\t\t\t\tthis._setIndex(this._idx + 1);\r\n\t\t\t\tanim[\"in\"].play(15);\r\n\t\t\t});\r\n\r\n\t\t\tthis.connect(anim[\"in\"], \"onEnd\", function(){\r\n\t\t\t\t// onEnd of the `in` animation, call `start` again after some delay:\r\n\t\t\t\tthis._timeout = setTimeout(dojo.hitch(this, \"_run\"), this.delay);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tstart: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStarts to Roller looping\r\n\t\t\tif(!this.rolling){\r\n\t\t\t\tthis.rolling = true;\r\n\t\t\t\tthis._run();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_run: function(){\r\n\t\t\tthis._anim[\"out\"].gotoPercent(0, true);\r\n\t\t},\r\n\r\n\t\tstop: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStops the Roller from looping anymore.\r\n\t\t\tthis.rolling = false;\r\n\r\n\t\t\tvar m = this._anim,\r\n\t\t\t\tt = this._timeout;\r\n\r\n\t\t\tif(t){ clearTimeout(t); }\r\n\t\t\tm[\"in\"].stop();\r\n\t\t\tm[\"out\"].stop();\r\n\t\t},\r\n\r\n\t\t_setIndex: function(i){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet the Roller to some passed index. If beyond range, go to first.\r\n\t\t\tvar l = this.items.length - 1;\r\n\t\t\tif(i < 0){ i = l; }\r\n\t\t\tif(i > l){ i = 0; }\r\n\t\t\tthis._roller.innerHTML = this.items[i] || \"error!\";\r\n\t\t\tthis._idx = i;\r\n\t\t}\r\n\r\n\t});\r\n\r\n\tRoller.RollerSlide = dojo.declare(\"dojox.widget.RollerSlide\", dojox.widget.Roller, {\r\n\t\t// summary:\r\n\t\t//\t\tAn add-on to the Roller to modify animations. This produces\r\n\t\t//\t\ta slide-from-bottom like effect. See `dojox.widget.Roller` for\r\n\t\t//\t\tfull API information.\r\n\r\n\t\tdurationOut: 175, // slightly faster than default\r\n\r\n\t\tmakeAnims: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAnimation creator function. Need to create an 'in' and 'out'\r\n\t\t\t//\t\tAnimation stored in _anim Object, which the rest of the widget\r\n\t\t\t//\t\twill reuse.\r\n\r\n\t\t\tvar n = this.domNode, pos = \"position\",\r\n\t\t\t\tprops = {\r\n\t\t\t\t\ttop: { end: 0, start: 25 },\r\n\t\t\t\t\topacity: 1\r\n\t\t\t\t}\r\n\t\t\t;\r\n\r\n\t\t\tdojo.style(n, pos, \"relative\");\r\n\t\t\tdojo.style(this._roller, pos, \"absolute\");\r\n\r\n\t\t\tdojo.mixin(this, {\r\n\t\t\t\t_anim: {\r\n\r\n\t\t\t\t\t\"in\": dojo.animateProperty({\r\n\t\t\t\t\t\tnode: n,\r\n\t\t\t\t\t\tduration: this.durationIn,\r\n\t\t\t\t\t\tproperties: props\r\n\t\t\t\t\t}),\r\n\r\n\t\t\t\t\t\"out\": dojo.fadeOut({ node: n, duration: this.durationOut })\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// don't forget to do this in the class. override if necessary.\r\n\t\t\tthis._setupConnects();\r\n\t\t}\r\n\r\n\t});\r\n\r\n\tRoller._Hover = dojo.declare(\"dojox.widget._RollerHover\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tA mixin class to provide a way to automate the \"stop on hover\" functionality.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tA mixin class used to provide a way to automate a \"stop on hover\" behavior,\r\n\t\t//\t\twhile still allowing for ambiguous subclassing for custom animations.\r\n\t\t//\t\tSimply mix this class into a `dojox.widget.Roller` variant, and instantiate\r\n\t\t//\t\tas you would. The hover connection is done automatically.\r\n\t\t//\r\n\t\t//\t\tThe \"hover\" functionality is as such: Stop rotation while the mouse is over the\r\n\t\t//\t\tinstance, and resume again once leaving. Even if autoStart is disabled, the widget\r\n\t\t//\t\twill start if a mouse enters and leaves the node in this case.\r\n\t\t//\r\n\t\t// example:\r\n\t\t// |\tdojo.declare(\"my.Roller\", [Roller.RollerSlide, Roller._Hover], {});\r\n\t\t// |\tnew my.Roller({}, \"myList\");\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.connect(this.domNode, \"onmouseenter\", \"stop\");\r\n\t\t\tthis.connect(this.domNode, \"onmouseleave\", \"start\");\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn Roller;\r\n});\r\n"]}