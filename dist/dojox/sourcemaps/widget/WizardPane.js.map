{"version":3,"sources":["widget/WizardPane.js"],"names":["define","lang","declare","ContentPane","canGoBack","passFunction","doneFunction","startup","this","inherited","arguments","isFirstChild","isString","getObject","_onShow","_checkPass","r","isFunction","failMessage","alert","done"],"mappings":";;;;;;;AAAAA,QACC,kBACA,qBACA,4BACE,SAASC,EAAMC,EAASC,GAE3B,OAAOD,EAAQ,0BAA2BC,GAUzCC,WAAW,EAOXC,aAAc,KAIdC,aAAc,KAEdC,QAAS,WACRC,KAAKC,UAAUC,WACZF,KAAKG,eAAeH,KAAKJ,WAAY,GACrCH,EAAKW,SAASJ,KAAKH,gBACrBG,KAAKH,aAAeJ,EAAKY,UAAUL,KAAKH,eAEtCJ,EAAKW,SAASJ,KAAKF,eAAiBE,KAAKF,eAC3CE,KAAKF,aAAeL,EAAKY,UAAUL,KAAKF,gBAI1CQ,QAAS,WACLN,KAAKG,eAAeH,KAAKJ,WAAY,GACxCI,KAAKC,UAAUC,YAGhBK,WAAY,WAQX,IAAIC,GAAI,EACR,GAAGR,KAAKH,cAAgBJ,EAAKgB,WAAWT,KAAKH,cAAc,CAC1D,IAAIa,EAAcV,KAAKH,eACvB,cAAca,GACb,IAAK,UACJF,EAAIE,EACJ,MACD,IAAK,SACJC,MAAMD,GACNF,GAAI,GAIP,OAAOA,GAGRI,KAAM,WACFZ,KAAKF,cAAgBL,EAAKgB,WAAWT,KAAKF,eAAgBE,KAAKF","file":"../../widget/WizardPane.js","sourcesContent":["define([\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dijit/layout/ContentPane\"\r\n], function(lang, declare, ContentPane){\r\n  \r\nreturn declare(\"dojox.widget.WizardPane\", ContentPane, {\r\n\t// summary:\r\n\t//\t\tA panel in a `dojox.widget.Wizard`\r\n\t// description:\r\n\t//\t\tAn extended ContentPane with additional hooks for passing named\r\n\t//\t\tfunctions to prevent the pane from going either forward or\r\n\t//\t\tbackwards.\r\n\r\n\t// canGoBack: Boolean\r\n\t//\t\tIf true, then can move back to a previous panel (by clicking the \"Previous\" button)\r\n\tcanGoBack: true,\r\n\r\n\t// passFunction: String\r\n\t//\t\tName of function that checks if it's OK to advance to the next panel.\r\n\t//\t\tIf it's not OK (for example, mandatory field hasn't been entered), then\r\n\t//\t\treturns an error message (String) explaining the reason. Can return null (pass)\r\n\t//\t\tor a Boolean (true == pass)\r\n\tpassFunction: null,\r\n\t\r\n\t// doneFunction: String\r\n\t//\t\tName of function that is run if you press the \"Done\" button from this panel\r\n\tdoneFunction: null,\r\n\r\n\tstartup: function(){\r\n\t\tthis.inherited(arguments);\r\n\t\tif(this.isFirstChild){ this.canGoBack = false; }\r\n\t\tif(lang.isString(this.passFunction)){\r\n\t\t\tthis.passFunction = lang.getObject(this.passFunction);\r\n\t\t}\r\n\t\tif(lang.isString(this.doneFunction) && this.doneFunction){\r\n\t\t\tthis.doneFunction = lang.getObject(this.doneFunction);\r\n\t\t}\r\n\t},\r\n\r\n\t_onShow: function(){\r\n\t\tif(this.isFirstChild){ this.canGoBack = false; }\r\n\t\tthis.inherited(arguments);\r\n\t},\r\n\r\n\t_checkPass: function(){\r\n\t\t// summary:\r\n\t\t//\t\tCalled when the user presses the \"next\" button.\r\n\t\t//\t\tCalls passFunction to see if it's OK to advance to next panel, and\r\n\t\t//\t\tif it isn't, then display error.\r\n\t\t//\t\tReturns true to advance, false to not advance. If passFunction\r\n\t\t//\t\treturns a string, it is assumed to be a custom error message, and\r\n\t\t//\t\tis alert()'ed\r\n\t\tvar r = true;\r\n\t\tif(this.passFunction && lang.isFunction(this.passFunction)){\r\n\t\t\tvar failMessage = this.passFunction();\r\n\t\t\tswitch(typeof failMessage){\r\n\t\t\t\tcase \"boolean\":\r\n\t\t\t\t\tr = failMessage;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\t\talert(failMessage);\r\n\t\t\t\t\tr = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn r; // Boolean\r\n\t},\r\n\r\n\tdone: function(){\r\n\t\tif(this.doneFunction && lang.isFunction(this.doneFunction)){ this.doneFunction(); }\r\n\t}\r\n});\r\n\r\n});\r\n\r\n"]}