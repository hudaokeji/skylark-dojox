{"version":3,"sources":["widget/DynamicTooltip.js"],"names":["dojo","provide","experimental","require","requireLocalization","declare","dijit","Tooltip","hasLoaded","href","label","preventCache","postMixInProperties","this","inherited","arguments","_setLoadingLabel","i18n","getLocalization","lang","loadingState","_setHrefAttr","loadContent","node","xhrGet","url","handleAs","tooltipWidget","load","response","ioArgs","close","open","refresh","target","_connectNodes"],"mappings":";;;;;;;AAAAA,KAAKC,QAAQ,+BACbD,KAAKE,aAAa,+BAElBF,KAAKG,QAAQ,iBACbH,KAAKI,oBAAoB,QAAS,WAElCJ,KAAKK,QAAQ,8BAA+BC,MAAMC,SAQhDC,WAAW,EAIXC,KAAM,GAINC,MAAO,GAIPC,cAAc,EAEdC,oBAAqB,WACpBC,KAAKC,UAAUC,WACfF,KAAKG,oBAGNA,iBAAkB,WAKdH,KAAKJ,OACPI,KAAKH,MAAQV,KAAKiB,KAAKC,gBAAgB,QAAS,UAAWL,KAAKM,MAAMC,eAYxEC,aAAc,SAAwBZ,GAQrCI,KAAKJ,KAAOA,EACZI,KAAKL,WAAY,GAGlBc,YAAa,SAASC,IAMjBV,KAAKL,WAAaK,KAAKJ,OAC1BI,KAAKG,mBACLH,KAAKL,WAAY,EAEjBR,KAAKwB,QACJC,IAAKZ,KAAKJ,KACViB,SAAU,OACVC,cAAed,KACfe,KAAM,SAASC,EAAUC,GACxBjB,KAAKc,cAAcjB,MAAQmB,EAC3BhB,KAAKc,cAAcI,QACnBlB,KAAKc,cAAcK,KAAKT,IAEzBZ,aAAcE,KAAKF,iBAKtBsB,QAAS,WAKRpB,KAAKL,WAAY,GAGlBwB,KAAM,SAAqBE,IAI1BA,EAASA,GAAWrB,KAAKsB,eAAiBtB,KAAKsB,cAAc,MAG7DtB,KAAKS,YAAYY,GACjBrB,KAAKC,UAAUC","file":"../../widget/DynamicTooltip.js","sourcesContent":["dojo.provide(\"dojox.widget.DynamicTooltip\");\r\ndojo.experimental(\"dojox.widget.DynamicTooltip\");\r\n\r\ndojo.require(\"dijit.Tooltip\");\r\ndojo.requireLocalization(\"dijit\", \"loading\");\r\n\r\ndojo.declare(\"dojox.widget.DynamicTooltip\", dijit.Tooltip,\r\n\t{\r\n\t\t// summary:\r\n\t\t//\t\tExtension of dijit.Tooltip providing content set via XHR\r\n\t\t//\t\trequest via href param\r\n\r\n\t\t// hasLoaded: Boolean\r\n\t\t//\t\tfalse if the contents are yet to be loaded from the HTTP request\r\n\t\thasLoaded: false,\r\n\t\t\r\n\t\t// href: String\r\n\t\t//\t\tlocation from where to fetch the contents\r\n\t\thref: \"\",\r\n\t\t\r\n\t\t// label: String\r\n\t\t//\t\tcontents to display in the tooltip. Initialized to a loading icon.\r\n\t\tlabel: \"\",\r\n\r\n\t\t// preventCache: Boolean\r\n\t\t//\t\tCache content retrieved externally\r\n\t\tpreventCache:\tfalse,\r\n\t\t\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._setLoadingLabel();\r\n\t\t},\r\n\t\t\r\n\t\t_setLoadingLabel: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tChanges the tooltip label / contents to loading message, only if\r\n\t\t\t//\t\tthere's an href param, otherwise acts as normal tooltip\r\n\r\n\t\t\tif(this.href){\r\n\t\t\t\tthis.label = dojo.i18n.getLocalization(\"dijit\", \"loading\", this.lang).loadingState;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// MOW: this is a new widget, do we really need a deprecated stub?\r\n\t\t// setHref: function(/*String|Uri*/ href){\r\n\t\t//\t// summary:\r\n\t\t//\t//\t\tDeprecated.   Use set('href', ...) instead.\r\n\t\t//\tdojo.deprecated(\"dojox.widget.DynamicTooltip.setHref() is deprecated.\tUse set('href', ...) instead.\", \"\", \"2.0\");\r\n\t\t//\treturn this.set(\"href\", href);\r\n\t\t// },\r\n\r\n\t\t_setHrefAttr: function(/*String|Uri*/ href){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook so attr(\"href\", ...) works.\r\n\t\t\t// description:\r\n\t\t\t//\t\tresets so next show loads new href\r\n\t\t\t// href:\r\n\t\t\t//\t\turl to the content you want to show, must be within the same domain as your mainpage\r\n\t\t\r\n\t\t\tthis.href = href;\r\n\t\t\tthis.hasLoaded = false;\r\n\t\t},\r\n\t\t\r\n\t\tloadContent: function(node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDownload contents of href via XHR and display\r\n\t\t\t// description:\r\n\t\t\t//\t\t1. checks if content already loaded\r\n\t\t\t//\t\t2. if not, sends XHR to download new data\r\n\t\t\tif(!this.hasLoaded && this.href){\r\n\t\t\t\tthis._setLoadingLabel();\r\n\t\t\t\tthis.hasLoaded = true;\r\n\t\t\t\t\r\n\t\t\t\tdojo.xhrGet({\r\n\t\t\t\t\turl: this.href,\r\n\t\t\t\t\thandleAs: \"text\",\r\n\t\t\t\t\ttooltipWidget: this,\r\n\t\t\t\t\tload: function(response, ioArgs){\r\n\t\t\t\t\t\tthis.tooltipWidget.label = response;\r\n\t\t\t\t\t\tthis.tooltipWidget.close();\r\n\t\t\t\t\t\tthis.tooltipWidget.open(node);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpreventCache: this.preventCache\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\trefresh: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAllows re-download of contents of href and display\r\n\t\t\t//\t\tUseful with preventCache = true\r\n\r\n\t\t\tthis.hasLoaded = false;\r\n\t\t},\r\n\t\t\r\n\t\topen: function(/*DomNode*/ target){\r\n \t\t\t// summary:\r\n\t\t\t//\t\tDisplay the tooltip; usually not called directly.\r\n\t\t\t\r\n\t\t\ttarget = target || (this._connectNodes && this._connectNodes[0]);\r\n\t\t\tif(!target){ return; }\r\n\r\n\t\t\tthis.loadContent(target);\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t}\r\n);\r\n"]}