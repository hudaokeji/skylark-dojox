{"version":3,"sources":["widget/Dialog.js"],"names":["define","dojo","dojox","template","getObject","declare","widget","DialogSimple","templateString","sizeToViewport","viewportPadding","dimensions","easing","sizeDuration","dijit","_defaultDuration","sizeMethod","showTitle","draggable","modal","constructor","props","node","this","_defaultEasing","_setup","inherited","arguments","_alreadyInitialized","_navIn","fadeIn","closeButtonNode","_navOut","fadeOut","addClass","domNode","layout","e","_setSize","_vp","window","getBox","tc","containerNode","vpSized","_displaysize","w","scrollWidth","h","scrollHeight","show","open","style","overflow","opacity","width","height","_modalconnects","push","connect","body","charOrCode","keys","ESCAPE","stopEvent","_underlay","_handleNav","animou","type","animin","stop","play","_position","_started","_sizing","disconnect","_sizingConnect","pad","duration","method","ds","fx","sizeTo","_showContent","container","titleNode","offsetHeight","anim"],"mappings":";;;;;;;AAAAA,QACC,OAAQ,QAAS,iCACjB,eAAgB,cAAe,WAAY,kBACzC,SAASC,EAAMC,EAAOC,GAIxB,OAFAF,EAAKG,UAAU,UAAU,EAAMF,GAExBD,EAAKI,QAAQ,sBAAuBH,EAAMI,OAAOC,cAavDC,eAAgBL,EAQhBM,gBAAgB,EAOhBC,gBAAiB,GAKjBC,WAAY,KAIZC,OAAQ,KAIRC,aAAcC,MAAMC,iBAKpBC,WAAY,QAIZC,WAAW,EAIXC,WAAW,EAMXC,OAAO,EAEPC,YAAa,SAASC,EAAOC,GAC5BC,KAAKX,OAASS,EAAMT,QAAUX,EAAKuB,eACnCD,KAAKZ,WAAaU,EAAMV,aAAe,IAAK,MAG7Cc,OAAQ,WAIPF,KAAKG,UAAUC,WACXJ,KAAKK,sBACRL,KAAKM,OAAS5B,EAAK6B,QAASR,KAAMC,KAAKQ,kBACvCR,KAAKS,QAAU/B,EAAKgC,SAAUX,KAAMC,KAAKQ,kBACrCR,KAAKN,WACRhB,EAAKiC,SAASX,KAAKY,QAAQ,wBAK9BC,OAAQ,SAASC,GAChBd,KAAKe,WACLf,KAAKG,UAAUC,YAGhBW,SAAU,WAGTf,KAAKgB,IAAMtC,EAAKuC,OAAOC,SACvB,IAAIC,EAAKnB,KAAKoB,cACbC,EAAUrB,KAAKd,eAEhB,OAAOc,KAAKsB,cACXC,EAAGF,EAAUF,EAAGK,YAAcxB,KAAKZ,WAAW,GAC9CqC,EAAGJ,EAAUF,EAAGO,aAAe1B,KAAKZ,WAAW,KAIjDuC,KAAM,WACF3B,KAAK4B,OAER5B,KAAKe,WACLrC,EAAKmD,MAAM7B,KAAKQ,gBAAgB,UAAW,GAC3C9B,EAAKmD,MAAM7B,KAAKY,SACfkB,SAAU,SACVC,QAAS,EACTC,MAAO,MACPC,OAAQ,QAETvD,EAAKmD,MAAM7B,KAAKoB,eACfW,QAAS,EACTD,SAAU,WAGX9B,KAAKG,UAAUC,WAEZJ,KAAKJ,MAIPI,KAAKkC,eAAeC,KAAKzD,EAAK0D,QAAQ1D,EAAK2D,OAAQ,aAAc,SAASvB,GACtEA,EAAEwB,YAAc5D,EAAK6D,KAAKC,QAC5B9D,EAAK+D,UAAU3B,MAKjBd,KAAKkC,eAAeC,KAAKzD,EAAK0D,QAAQ7C,MAAMmD,UAAU9B,QAAS,UAAWZ,KAAM,aAEjFA,KAAKkC,eAAeC,KAAKzD,EAAK0D,QAAQpC,KAAKY,QAAQ,eAAeZ,KAAK,eACvEA,KAAKkC,eAAeC,KAAKzD,EAAK0D,QAAQpC,KAAKY,QAAQ,eAAeZ,KAAK,iBAIxE2C,WAAY,SAAS7B,GAIpB,IAEC8B,EAAoB,YAAV9B,EAAE+B,KADJ,SADG,UAGXC,EAAoB,YAAVhC,EAAE+B,KAHD,UACH,SAKT7C,KAAK4C,GAAQG,OACb/C,KAAK8C,GAAQE,QA0CdC,UAAW,WAEV,GAAIjD,KAAKkD,SAAT,CAEGlD,KAAKmD,UACPnD,KAAKmD,QAAQJ,OACb/C,KAAKoD,WAAWpD,KAAKqD,uBACdrD,KAAKmD,SAGbnD,KAAKG,UAAUC,WAEXJ,KAAK4B,MAAOlD,EAAKmD,MAAM7B,KAAKoB,cAAe,UAAW,GAC1D,IAAIkC,EAA6B,EAAvBtD,KAAKb,gBAEXW,GACHC,KAAMC,KAAKY,QACX2C,SAAUvD,KAAKV,cAAgBC,MAAMC,iBACrCH,OAAQW,KAAKX,OACbmE,OAAQxD,KAAKP,YAGVgE,EAAKzD,KAAKsB,cAAgBtB,KAAKe,WACnCjB,EAAa,MAAI2D,EAAGlC,EAAKkC,EAAGlC,EAAI+B,GAAOtD,KAAKgB,IAAIO,GAAKvB,KAAKd,eACvDc,KAAKgB,IAAIO,EAAI+B,EAAMG,EAAGlC,EAEzBzB,EAAc,OAAI2D,EAAGhC,EAAKgC,EAAGhC,EAAI6B,GAAOtD,KAAKgB,IAAIS,GAAKzB,KAAKd,eACxDc,KAAKgB,IAAIS,EAAI6B,EAAMG,EAAGhC,EAEzBzB,KAAKmD,QAAUxE,EAAM+E,GAAGC,OAAO7D,GAC/BE,KAAKqD,eAAiBrD,KAAKoC,QAAQpC,KAAKmD,QAAQ,QAAQ,gBACxDnD,KAAKmD,QAAQH,SAIdY,aAAc,SAAS9C,GAItB,IAAI+C,EAAY7D,KAAKoB,cACrB1C,EAAKmD,MAAM7B,KAAKY,SACfkB,SAAU,UACVC,QAAS,IAEVrD,EAAKmD,MAAM7B,KAAKQ,gBAAgB,UAAU,GAC1C9B,EAAKmD,MAAMgC,GACV5B,OAAQjC,KAAKsB,aAAaG,EAAIzB,KAAK8D,UAAUC,aAAe,KAC5D/B,MAAOhC,KAAKsB,aAAaC,EAAI,KAC7BO,SAAS,SAEVpD,EAAKsF,KAAKH,GAAa9B,QAAQ","file":"../../widget/Dialog.js","sourcesContent":["define([\r\n\t\"dojo\", \"dojox\", \"dojo/text!./Dialog/Dialog.html\", \r\n\t\"dijit/Dialog\", \"dojo/window\", \"dojox/fx\", \"./DialogSimple\"\r\n], function(dojo, dojox, template){\r\n\r\n\tdojo.getObject('widget', true, dojox);\r\n\t\r\n\treturn dojo.declare('dojox.widget.Dialog', dojox.widget.DialogSimple,\r\n\t\t{\r\n\t\t// summary:\r\n\t\t//\t\tA Lightbox-like Modal-dialog for HTML Content\r\n\t\t// description:\r\n\t\t//\t\tAn HTML-capable Dialog widget with advanced sizing\r\n\t\t//\t\toptions, animated show/hide and other useful options.\r\n\t\t//\r\n\t\t//\t\tThis Dialog is also very easy to apply custom styles to.\r\n\t\t//\r\n\t\t//\t\tIt works identically to a `dijit.Dialog` with several\r\n\t\t//\t\tadditional parameters.\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\t// sizeToViewport: Boolean\r\n\t\t//\t\tIf true, fix the size of the dialog to the Viewport based on\r\n\t\t//\t\tviewportPadding value rather than the calculated or natural\r\n\t\t//\t\tstyle. If false, base the size on a passed dimension attribute.\r\n\t\t//\t\tEither way, the viewportPadding value is used if the the content\r\n\t\t//\t\textends beyond the viewport size for whatever reason.\r\n\t\tsizeToViewport: false,\r\n\r\n\t\t// viewportPadding: Integer\r\n\t\t//\t\tIf sizeToViewport=\"true\", this is the amount of padding in pixels to leave\r\n\t\t//\t\tbetween the dialog border and the viewport edge.\r\n\t\t//\t\tThis value is also used when sizeToViewport=\"false\" and dimensions exceeded\r\n\t\t//\t\tby dialog content to ensure dialog does not go outside viewport boundary\r\n\t\tviewportPadding: 35,\r\n\r\n\t\t// dimensions: Array\r\n\t\t//\t\tA two-element array of [width,height] to animate the Dialog to if sizeToViewport=\"false\"\r\n\t\t//\t\tDefaults to [300,300]\r\n\t\tdimensions: null,\r\n\r\n\t\t// easing: Function?|String?\r\n\t\t//\t\tAn easing function to apply to the sizing animation.\r\n\t\teasing: null,\r\n\r\n\t\t// sizeDuration: Integer\r\n\t\t//\t\tTime (in ms) to use in the Animation for sizing.\r\n\t\tsizeDuration: dijit._defaultDuration,\r\n\r\n\t\t// sizeMethod: String\r\n\t\t//\t\tTo be passed to dojox.fx.sizeTo, one of \"chain\" or \"combine\" to effect\r\n\t\t//\t\tthe animation sequence.\r\n\t\tsizeMethod: \"chain\",\r\n\r\n\t\t// showTitle: Boolean\r\n\t\t//\t\tToogle to show or hide the Title area. Can only be set at startup.\r\n\t\tshowTitle: false,\r\n\r\n\t\t// draggable: Boolean\r\n\t\t//\t\tMake the pane draggable. Differs from dijit.Dialog by setting default to false\r\n\t\tdraggable: false, // simply over-ride the default from dijit.Dialog\r\n\r\n\t\t// modal: Boolean\r\n\t\t//\t\tIf true, this Dialog instance will be truly modal and prevent closing until\r\n\t\t//\t\texplicitly told to by calling hide() - Defaults to false to preserve previous\r\n\t\t//\t\tbehaviors.\r\n\t\tmodal: false,\r\n\r\n\t\tconstructor: function(props, node){\r\n\t\t\tthis.easing = props.easing || dojo._defaultEasing;\r\n\t\t\tthis.dimensions = props.dimensions || [300, 300];\r\n\t\t},\r\n\r\n\t\t_setup: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPiggyback on dijit.Dialog's _setup for load-time options, deferred to\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(!this._alreadyInitialized){\r\n\t\t\t\tthis._navIn = dojo.fadeIn({ node: this.closeButtonNode });\r\n\t\t\t\tthis._navOut = dojo.fadeOut({ node: this.closeButtonNode });\r\n\t\t\t\tif(!this.showTitle){\r\n\t\t\t\t\tdojo.addClass(this.domNode,\"dojoxDialogNoTitle\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tlayout: function(e){\r\n\t\t\tthis._setSize();\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_setSize: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcache and set our desired end position\r\n\t\t\tthis._vp = dojo.window.getBox();\r\n\t\t\tvar tc = this.containerNode,\r\n\t\t\t\tvpSized = this.sizeToViewport\r\n\t\t\t;\r\n\t\t\treturn this._displaysize = {\r\n\t\t\t\tw: vpSized ? tc.scrollWidth : this.dimensions[0],\r\n\t\t\t\th: vpSized ? tc.scrollHeight : this.dimensions[1]\r\n\t\t\t}; // Object\r\n\t\t},\r\n\r\n\t\tshow: function(){\r\n\t\t\tif(this.open){ return; }\r\n\r\n\t\t\tthis._setSize();\r\n\t\t\tdojo.style(this.closeButtonNode,\"opacity\", 0);\r\n\t\t\tdojo.style(this.domNode, {\r\n\t\t\t\toverflow: \"hidden\",\r\n\t\t\t\topacity: 0,\r\n\t\t\t\twidth: \"1px\",\r\n\t\t\t\theight: \"1px\"\r\n\t\t\t});\r\n\t\t\tdojo.style(this.containerNode, {\r\n\t\t\t\topacity: 0,\r\n\t\t\t\toverflow: \"hidden\"\r\n\t\t\t});\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tif(this.modal){\r\n\t\t\t\t// prevent escape key from closing dialog\r\n\t\t\t\t// connect to body to trap this event from the Dialog a11y code, and stop escape key\r\n\t\t\t\t// from doing anything in the modal:true case:\r\n\t\t\t\tthis._modalconnects.push(dojo.connect(dojo.body(), \"onkeypress\", function(e){\r\n\t\t\t\t\tif(e.charOrCode == dojo.keys.ESCAPE){\r\n\t\t\t\t\t\tdojo.stopEvent(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}));\r\n\t\t\t}else{\r\n\t\t\t\t// otherwise, allow clicking on the underlay to close\r\n\t\t\t\tthis._modalconnects.push(dojo.connect(dijit._underlay.domNode, \"onclick\", this, \"onCancel\"));\r\n\t\t\t}\r\n\t\t\tthis._modalconnects.push(dojo.connect(this.domNode,\"onmouseenter\",this,\"_handleNav\"));\r\n\t\t\tthis._modalconnects.push(dojo.connect(this.domNode,\"onmouseleave\",this,\"_handleNav\"));\r\n\r\n\t\t},\r\n\r\n\t\t_handleNav: function(e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandle's showing or hiding the close icon\r\n\r\n\t\t\tvar navou = \"_navOut\",\r\n\t\t\t\tnavin = \"_navIn\",\r\n\t\t\t\tanimou = (e.type == \"mouseout\" ? navin : navou),\r\n\t\t\t\tanimin = (e.type == \"mouseout\" ? navou : navin)\r\n\t\t\t;\r\n\r\n\t\t\tthis[animou].stop();\r\n\t\t\tthis[animin].play();\r\n\r\n\t\t},\r\n\r\n\t\t// an experiment in a quicksilver-like hide. too choppy for me.\r\n\t\t/*\r\n\t\thide: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHide the dialog\r\n\r\n\t\t\t// if we haven't been initialized yet then we aren't showing and we can just return\r\n\t\t\tif(!this._alreadyInitialized){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._fadeIn && this._fadeIn.stop();\r\n\r\n\t\t\tif (this._scrollConnected){\r\n\t\t\t\tthis._scrollConnected = false;\r\n\t\t\t}\r\n\t\t\tdojo.forEach(this._modalconnects, dojo.disconnect);\r\n\t\t\tthis._modalconnects = [];\r\n\t\t\tif(this.refocus){\r\n\t\t\t\tthis.connect(this._fadeOut,\"onEnd\",dojo.hitch(dijit,\"focus\",this._savedFocus));\r\n\t\t\t}\r\n\t\t\tif(this._relativePosition){\r\n\t\t\t\tdelete this._relativePosition;\r\n\t\t\t}\r\n\r\n\t\t\tdojox.fx.sizeTo({\r\n\t\t\t\tnode: this.domNode,\r\n\t\t\t\tduration:this.sizeDuration || this.duration,\r\n\t\t\t\twidth: this._vp.w - 1,\r\n\t\t\t\theight: 5,\r\n\t\t\t\tonBegin: dojo.hitch(this,function(){\r\n\t\t\t\t\tthis._fadeOut.play(this.sizeDuration / 2);\r\n\t\t\t\t})\r\n\t\t\t}).play();\r\n\r\n\t\t\tthis.open = false;\r\n\t\t}, */\r\n\r\n\t\t_position: function(){\r\n\r\n\t\t\tif(!this._started){ return; } // prevent content: from firing this anim #8914\r\n\r\n\t\t\tif(this._sizing){\r\n\t\t\t\tthis._sizing.stop();\r\n\t\t\t\tthis.disconnect(this._sizingConnect);\r\n\t\t\t\tdelete this._sizing;\r\n\t\t\t}\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tif(!this.open){ dojo.style(this.containerNode, \"opacity\", 0); }\r\n\t\t\tvar pad = this.viewportPadding * 2;\r\n\r\n\t\t\tvar props = {\r\n\t\t\t\tnode: this.domNode,\r\n\t\t\t\tduration: this.sizeDuration || dijit._defaultDuration,\r\n\t\t\t\teasing: this.easing,\r\n\t\t\t\tmethod: this.sizeMethod\r\n\t\t\t};\r\n\r\n\t\t\tvar ds = this._displaysize || this._setSize();\r\n\t\t\tprops['width'] = ds.w = (ds.w + pad >= this._vp.w || this.sizeToViewport)\r\n\t\t\t\t? this._vp.w - pad : ds.w;\r\n\r\n\t\t\tprops['height'] = ds.h = (ds.h + pad >= this._vp.h || this.sizeToViewport)\r\n\t\t\t\t? this._vp.h - pad : ds.h;\r\n\r\n\t\t\tthis._sizing = dojox.fx.sizeTo(props);\r\n\t\t\tthis._sizingConnect = this.connect(this._sizing,\"onEnd\",\"_showContent\");\r\n\t\t\tthis._sizing.play();\r\n\r\n\t\t},\r\n\r\n\t\t_showContent: function(e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tShow the inner container after sizing animation\r\n\r\n\t\t\tvar container = this.containerNode;\r\n\t\t\tdojo.style(this.domNode, {\r\n\t\t\t\toverflow: \"visible\",\r\n\t\t\t\topacity: 1\r\n\t\t\t});\r\n\t\t\tdojo.style(this.closeButtonNode,\"opacity\",1);\r\n\t\t\tdojo.style(container, {\r\n\t\t\t\theight: this._displaysize.h - this.titleNode.offsetHeight + \"px\",\r\n\t\t\t\twidth: this._displaysize.w + \"px\",\r\n\t\t\t\toverflow:\"auto\"\r\n\t\t\t});\r\n\t\t\tdojo.anim(container, { opacity:1 });\r\n\t\t}\r\n\r\n\t});\r\n});\r\n\r\n"]}