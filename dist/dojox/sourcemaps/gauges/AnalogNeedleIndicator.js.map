{"version":3,"sources":["gauges/AnalogNeedleIndicator.js"],"names":["define","declare","AnalogIndicatorBase","_getShapes","group","this","_gauge","x","Math","floor","width","shapes","color","stroke","strokeColor","strokeWidth","type","colors","xy","sqrt","createPath","setStroke","setFill","moveTo","arcTo","lineTo","length","closePath","createCircle","cx","cy","r"],"mappings":";;;;;;;AAAAA,QAAQ,qBAAqB,yBAC3B,SAASC,EAASC,GAEpB,OAAOD,EAAQ,sCAAuCC,IAKrDC,WAAY,SAASC,GAGpB,IAAIC,KAAKC,OACR,OAAO,KAER,IAAIC,EAAIC,KAAKC,MAAMJ,KAAKK,MAAM,GAC1BC,KAEAC,EAAQP,KAAKO,MAAQP,KAAKO,MAAQ,QAIlCC,GACHD,MAJiBP,KAAKS,YAAcT,KAAKS,YAAcF,EAKvDF,MAJiBL,KAAKU,YAAcV,KAAKU,YAAc,GAOpDH,EAAMI,OAASX,KAAKS,cACvBD,EAAOD,MAAQA,EAAMK,OAAO,GAAGL,OAGhC,IAAIM,EAAMV,KAAKW,KAAK,GAAK,EAQzB,OAPAR,EAAO,GAAKP,EAAMgB,aACdC,UAAUR,GAAQS,QAAQV,GAC1BW,OAAOL,GAAKA,GAAIM,MAAO,EAAEjB,EAAK,EAAEA,EAAI,EAAG,EAAG,GAAIW,GAAKA,GACnDO,OAAO,GAAIpB,KAAKqB,QAAQC,YAC5BhB,EAAO,GAAKP,EAAMwB,cAAcC,GAAI,EAAGC,GAAI,EAAGC,EAAG1B,KAAKK,QAClDW,UAAUR,GACVS,QAAQV,GACLD","file":"../../gauges/AnalogNeedleIndicator.js","sourcesContent":["define([\"dojo/_base/declare\",\"./AnalogIndicatorBase\"],\r\n  function(declare, AnalogIndicatorBase) { \r\n\r\nreturn declare(\"dojox.gauges.AnalogNeedleIndicator\", [AnalogIndicatorBase], {\r\n\t// summary:\r\n\t//\t\tAn indicator for the AnalogGauge that draws a needle. The needle is drawn on the angle that corresponds\r\n\t//\t\tto the value of the indicator.\r\n\t\r\n\t_getShapes: function(group){\r\n\t\t// summary:\r\n\t\t//\t\tOverride of dojox.gauges.AnalogLineIndicator._getShapes\r\n\t\tif(!this._gauge){\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar x = Math.floor(this.width/2);\r\n\t\tvar shapes = [];\r\n\t\t\r\n\t\tvar color = this.color ? this.color : 'black';\r\n\t\tvar strokeColor = this.strokeColor ? this.strokeColor : color;\r\n\t\tvar strokeWidth = this.strokeWidth ? this.strokeWidth : 1;\r\n\r\n\t\tvar stroke = {\r\n\t\t\tcolor: strokeColor,\r\n\t\t\twidth: strokeWidth\r\n\t\t};\r\n\t\t\r\n\t\tif (color.type && !this.strokeColor){\r\n\t\t\tstroke.color = color.colors[0].color;\r\n\t\t}\r\n\r\n\t\tvar xy = (Math.sqrt(2) * (x));\r\n\t\tshapes[0] = group.createPath()\r\n\t\t\t\t\t.setStroke(stroke).setFill(color)\r\n\t\t\t\t\t.moveTo(xy, -xy).arcTo((2*x), (2*x), 0, 0, 0, -xy, -xy)\r\n\t\t\t\t\t.lineTo(0, -this.length).closePath();\r\n\t\tshapes[1] = group.createCircle({cx: 0, cy: 0, r: this.width})\r\n\t\t\t\t\t.setStroke(stroke)\r\n\t\t\t\t\t.setFill(color);\r\n\t\treturn shapes;\r\n\t}\r\n});\r\n});\r\n"]}