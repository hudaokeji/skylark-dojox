{"version":3,"sources":["gauges/_Gauge.js"],"names":["define","kernel","declare","lang","html","arr","event","connect","dom","Widget","gfx","Range","deprecated","_numberModule","width","height","background","image","useRangeStyles","useTooltip","majorTicks","minorTicks","_defaultIndicator","defaultColors","min","max","surface","hideValues","gaugeContent","undefined","_backgroundDefault","color","_rangeData","_indicatorData","_drag","_img","_overOverlay","_lastHover","startup","this","handleMouseDown","handleMouseMove","handleMouseOver","handleMouseOut","handleTouchStart","handleTouchEnd","handleTouchMove","isArray","ranges","indicators","i","hasChildren","children","getChildren","length","test","declaredClass","push","prototype","concat","createSurface","addRanges","interval","setMinorTicks","setMajorTicks","addIndicator","inherited","arguments","buildRendering","n","domNode","srcNodeRef","create","className","containerNode","mouseNode","hasChildNodes","appendChild","firstChild","place","_setTicks","oldTicks","newTicks","major","_ticks","_removeScaleTick","t","offset","noChange","font","labelPlacement","direction","_isScaleCircular","value","NumberUtils","_getNumberModule","label","fixedPrecision","precision","format","places","toFixed","toString","_addScaleTick","ticks","postCreate","style","require","dojo","hitch","Tooltip","show","isLeftToRight","hide","e","_backgroundGroup","createGroup","_rangeGroup","_minorTicksGroup","_majorTicksGroup","_overlayGroup","_indicatorsGroup","_foregroundGroup","_background","createRect","x","y","setFill","url","imageGroup","overlay","createImage","src","setTransform","dx","dy","draw","drawBackground","drawRange","_minorTicksData","_majorTicksData","drawForeground","group","setBackground","addRange","range","low","high","colorIndex","svg","indicator","_gauge","splice","remove","hideValue","removeIndicator","moveIndicatorToFront","shape","moveToFront","drawText","txt","align","createText","text","setFont","removeText","parent","updateTooltip","target","getEventSource","hover","r","getRangeUnderMouse","_hideTooltip","pageX","pageY","_getInteractiveIndicator","_handleMouseDownIndicator","_handleDragInteractionMouseMove","_dragIndicator","stop","_handleDragInteractionMouseUp","_mouseListeners","disconnect","document","_handleMouseOverIndicator","onDragMove","cursor","_handleMouseOutIndicator","_handleMouseOutRange","_handleMouseOverRange","handleTouchStartIndicator","firstTouch","touches","_dragIndicatorAt","interactionMode"],"mappings":"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","file":"../../gauges/_Gauge.js","sourcesContent":["define([\"dojo/_base/kernel\", \"dojo/_base/declare\",\"dojo/_base/lang\",\"dojo/_base/html\",\"dojo/_base/array\",\"dojo/_base/event\",\r\n\t\t\"dojo/_base/connect\",\"dojo/dom-construct\", \"dijit/_Widget\", \"dojox/gfx\", \"./Range\", \"dojo/fx/easing\"], \r\n  function(kernel, declare, lang, html, arr, event, connect, dom, Widget, gfx, Range) {\r\n\r\n  kernel.deprecated(\"dojox.gauges\", \"Use the new extensible dojox.dgauges framework instead\", \"2.0\");\r\n\r\n\r\n\tvar _tooltipModule =  0;\r\n\tvar _numberModule =  0;\r\n\r\n/*=====\r\n\tWidget = dijit._Widget;\r\n=====*/\r\n\t\r\nreturn declare(\"dojox.gauges._Gauge\",[Widget],{\r\n\t// summary:\r\n\t//\t\tThe abstract base class for gauges.\r\n\t//\r\n\t// description:\r\n\t//\t\tusing dojo.gfx (and thus either SVG or VML based on what is supported), this widget\r\n\t//\t\tbuilds a gauge component, used to display numerical data in a familiar format.\r\n\t//\t\tThis widget is not to be used alone. it is meant to be subclassed, such as\r\n\t//\t\tdojox.gauges.BarGauge or dojox.gauges.AnalogGauge\r\n\r\n\t// width: Number\r\n\t//\t\tThe width of the gauge (default is 300)\r\n\twidth: 0,\r\n\r\n\t// height: Number\r\n\t//\t\tThe height of the gauge (default is 200)\r\n\theight: 0,\r\n\r\n\t// background: Object\r\n\t//\t\tThe color of the background.  This must be an object of one of two forms:\r\n\t//\t\t{'color': 'color-name'}\r\n\t//\t\tOR\r\n\t//\t\t(for a gradient:)\r\n\t//\t\t{'type': 'linear', 'x1': 0, 'x2': 0, 'y1': 0, 'y2': 200, 'colors': [{offset: 0, color:'#C0C0C0'}, {offset: 1, color: '#E0E0E0'}] }\r\n\tbackground: null,\r\n\r\n\t// image: String\r\n\t//\t\tBackground image for gauge (default is no image)\r\n\timage: null,\r\n\r\n\t// useRangeStyles: Number\r\n\t//\t\tIndicates whether to use given css classes (dojoxGaugeRangeXX)\r\n\t//\t\tto determine the color (and other style attributes?) of the ranges\r\n\t//\t\tthis value should be the number of dojoxGaugeRange classes that are\r\n\t//\t\tdefined, starting at dojoxGaugeRange1 (0 indicates falling to default\r\n\t//\t\thardcoded colors)\r\n\tuseRangeStyles: 0,\r\n\r\n\t// useTooltip: Boolean\r\n\t//\t\tIndicates whether tooltips should be displayed for ranges, indicators, etc.\r\n\tuseTooltip: true,\r\n\t\r\n\t// majorTicks: Object\r\n\t//\t\tAn object representing the tick marks that should be added to the gauge. Major tick marks have a text label\r\n\t//\t\tindicating the value.  The object can have the following attributes (required are marked with a *):\r\n\t//\r\n\t//\t\t- offset: the distance from the 'center' of the gauge.  Used differently for Analog vs. Bar\r\n\t//\t\t- width: The width of the mark\r\n\t//\t\t- length: The length of the mark\r\n\t//\t\t- interval: The interval the ticks should be added on\r\n\t//\t\t- color: The color of the mark and text\r\n\t//\t\t- font: an object with any/all of the following parameters:\r\n\t// |\t{family: \"Helvetica\", style: \"italic\", variant: 'small-caps', weight: 'bold', size: \"18pt\"}\r\n\tmajorTicks: null,\r\n\t\r\n\t// minorTicks: Object\r\n\t//\t\tAn object of the same format as majorTicks, indicating where the minor (label-less) marks should be placed\r\n\t//\t\tThe font parameter is ignored if provided since minor tick marks have no text label.\r\n\tminorTicks: null,\r\n\r\n\t// _defaultIndicator: Object\r\n\t//\t\tShould be overridden by any extending classes and used to indicate what the 'default' indicator is.\r\n\t//\t\tThis object is used as the indicator when creating tick marks or when an anonymous object is passed into\r\n\t//\t\taddIndicator.\r\n\t_defaultIndicator: null,\r\n\r\n\t// defaultColors: Array\r\n\t//\t\t Set of default colors to color ranges with.\r\n\tdefaultColors: [[0x00,0x54,0xAA,1],\r\n\t\t\t\t\t[0x44,0x77,0xBB,1],\r\n\t\t\t\t\t[0x66,0x99,0xCC,1],\r\n\t\t\t\t\t[0x99,0xBB,0xEE,1],\r\n\t\t\t\t\t[0x99,0xCC,0xFF,1],\r\n\t\t\t\t\t[0xCC,0xEE,0xFF,1],\r\n\t\t\t\t\t[0xDD,0xEE,0xFF,1]],\r\n\t\r\n\t// min: Number\r\n\t//\t\tThe minimum value of the gauge.  Normally not set explicitly, as it will be determined by\r\n\t//\t\tthe ranges that are added.\r\n\tmin: null,\r\n\t\r\n\t// max: Number\r\n\t//\t\tThe maximum value of the gauge.  Normally not set explicitly, as it will be determined by\r\n\t//\t\tthe ranges that are added.\r\n\tmax: null,\r\n\t\r\n\t// surface: Object\r\n\t//\t\tThe GFX surface that the shapes are drawn on.  Can be accessed/used by indicators to draw themselves\r\n\tsurface: null,\r\n\r\n\t// hideValues: Boolean\r\n\t//\t\tIndicates whether the text boxes showing the value of the indicator (as text\r\n\t//\t\tcontent) should be hidden or shown.  Default is not hidden, aka shown.\r\n\thideValues: false,\r\n\r\n\t// internal data\r\n\tgaugeContent: undefined,\r\n\t_backgroundDefault: {color: '#E0E0E0'},\r\n\t_rangeData: null,\r\n\t_indicatorData: null,\r\n\t_drag: null,\r\n\t_img: null,\r\n\t_overOverlay: false,\r\n\t_lastHover: '',\r\n\r\n\tstartup: function(){\r\n\t\t// handle settings from HTML by making sure all the options are\r\n\t\t// converted correctly to numbers and that we calculate defaults\r\n\t\t// for cx, cy and radius\r\n\t\tif(this.image === null){\r\n\t\t\tthis.image={};\r\n\t\t}\r\n\t\t\r\n\t\tthis.connect(this.gaugeContent, 'onmousedown', this.handleMouseDown);\r\n\t\tthis.connect(this.gaugeContent, 'onmousemove', this.handleMouseMove);\r\n\t\tthis.connect(this.gaugeContent, 'onmouseover', this.handleMouseOver);\r\n\t\tthis.connect(this.gaugeContent, 'onmouseout', this.handleMouseOut);\r\n\t\tthis.connect(this.gaugeContent, 'touchstart', this.handleTouchStart);\r\n\t\tthis.connect(this.gaugeContent, 'touchend', this.handleTouchEnd);\r\n\t\tthis.connect(this.gaugeContent, 'touchmove', this.handleTouchMove);\t\r\n\r\n\t\tif(!lang.isArray(this.ranges)){ this.ranges = []; }\r\n\t\tif(!lang.isArray(this.indicators)){ this.indicators = []; }\r\n\t\tvar ranges = [], indicators = [];\r\n\t\tvar i;\r\n\t\tif(this.hasChildren()){\r\n\t\t\tvar children = this.getChildren();\r\n\t\t\tfor(i=0; i<children.length; i++){\r\n\t\t\t\tif(/.*Indicator/.test(children[i].declaredClass)){\r\n\t\t\t\t\tindicators.push(children[i]);\r\n\t\t\t\t\t//this.addIndicator(children[i]);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tswitch(children[i].declaredClass){\r\n\t\t\t\t\tcase Range.prototype.declaredClass:\r\n\t\t\t\t\t\tranges.push(children[i]);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.ranges = this.ranges.concat(ranges);\r\n\t\t\tthis.indicators = this.indicators.concat(indicators);\r\n\t\t}\r\n\t\tif(!this.background){ this.background = this._backgroundDefault; }\r\n\t\tthis.background = this.background.color || this.background;\r\n\t\tif(!this.surface){ this.createSurface(); }\r\n\r\n\t\tthis.addRanges(this.ranges);\r\n\t\tif(this.minorTicks && this.minorTicks.interval){\r\n\t\t\tthis.setMinorTicks(this.minorTicks);\r\n\t\t}\r\n\t\tif(this.majorTicks && this.majorTicks.interval){\r\n\t\t\tthis.setMajorTicks(this.majorTicks);\r\n\t\t}\r\n\t\tfor(i=0; i<this.indicators.length; i++){\r\n\t\t\tthis.addIndicator(this.indicators[i]);\r\n\t\t}\r\n\t\tthis.inherited(arguments);\r\n\t},\r\n\t\r\n\thasChildren: function(){\r\n\t\t// summary:\r\n\t\t//\t\tReturns true if widget has children, i.e. if this.containerNode contains something.\r\n\t\treturn this.getChildren().length > 0;\t// Boolean\r\n\t},\r\n\t\r\n\tbuildRendering: function(){\r\n\t\t// summary:\r\n\t\t//\t\tOverrides _Widget.buildRendering\r\n\t\tvar n = this.domNode = this.srcNodeRef ? this.srcNodeRef: dom.create(\"div\");\r\n\t\tthis.gaugeContent = dom.create(\"div\", {\r\n\t\t\tclassName: \"dojoxGaugeContent\"\r\n\t\t});\r\n\t\tthis.containerNode = dom.create(\"div\");\r\n\t\tthis.mouseNode = dom.create(\"div\");\r\n\t\twhile(n.hasChildNodes()){\r\n\t\t\tthis.containerNode.appendChild(n.firstChild);\r\n\t\t}\r\n\t\tdom.place(this.gaugeContent, n);\r\n\t\tdom.place(this.containerNode, n);\r\n\t\tdom.place(this.mouseNode, n);\r\n\t},\r\n\r\n\t_setTicks: function(/*Object*/ oldTicks, /*Object*/ newTicks, /*Boolean*/ major){\r\n\t\t// summary:\r\n\t\t//\t\tinternal method used to clear existing tick marks, then add new ones\r\n\t\tvar i;\r\n\t\tif (oldTicks && lang.isArray(oldTicks._ticks)){\r\n\t\t\tfor (i = 0; i < oldTicks._ticks.length; i++){\r\n\t\t\t\tthis._removeScaleTick(oldTicks._ticks[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar t = {\r\n\t\t\tlength: newTicks.length,\r\n\t\t\toffset: newTicks.offset,\r\n\t\t\tnoChange: true\r\n\t\t};\r\n\t\tif (newTicks.color){\r\n\t\t\tt.color = newTicks.color;\r\n\t\t}\r\n\t\tif (newTicks.font){\r\n\t\t\tt.font = newTicks.font;\r\n\t\t}\r\n\t\tif (newTicks.labelPlacement){\r\n\t\t\tt.direction = newTicks.labelPlacement;\r\n\t\t}\r\n\t\tnewTicks._ticks = [];\r\n\t\tfor (i=this.min;i<=this.max;i+=newTicks.interval){\r\n\t\t\tif (i==this.max&&this._isScaleCircular()) continue; // do not draw last tick on fully circular gauges\r\n\t\t\tt.value=i;\r\n\t\t\tif (major){\r\n\t\t\t\tvar NumberUtils = this._getNumberModule();\r\n\t\t\t\tif (NumberUtils){ // use internationalization if loaded\r\n\t\t\t\t\tt.label = (newTicks.fixedPrecision && newTicks.precision) ? NumberUtils.format(i, {\r\n\t\t\t\t\t\tplaces: newTicks.precision\r\n\t\t\t\t\t}): NumberUtils.format(i);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tt.label = (newTicks.fixedPrecision && newTicks.precision) ? i.toFixed(newTicks.precision): i.toString();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tnewTicks._ticks.push(this._addScaleTick(t, major));\r\n\t\t}\r\n\t\treturn newTicks;\r\n\t},\r\n\t\r\n\t_isScaleCircular: function(){\r\n\t\t// summary:\r\n\t\t//\t\tInternal method to check if the scale is fully circular\r\n\t\treturn false;\r\n\t},\r\n\t\r\n\tsetMinorTicks: function(/*Object*/ ticks){\r\n\t\t// summary:\r\n\t\t//\t\tCreates and draws the minor tick marks based on the passed object (expecting the same format\r\n\t\t//\t\tas the minorTicks object documented above)\r\n\t\tthis.minorTicks = this._setTicks(this.minorTicks, ticks, false);\r\n\t},\r\n\r\n\tsetMajorTicks: function(/*Object*/ ticks){\r\n\t\t// summary:\r\n\t\t//\t\tCreates and draws the major tick marks based on the passed object (expecting the same format\r\n\t\t//\t\tas the majorTicks object documented above)\r\n\t\tthis.majorTicks = this._setTicks(this.majorTicks, ticks, true);\r\n\t},\r\n\r\n\tpostCreate: function(){\r\n\t\tif(this.hideValues){\r\n\t\t\thtml.style(this.containerNode, \"display\", \"none\");\r\n\t\t}\r\n\t\thtml.style(this.mouseNode, 'width', '0');\r\n\t\thtml.style(this.mouseNode, 'height', '0');\r\n\t\thtml.style(this.mouseNode, 'position', 'absolute');\r\n\t\thtml.style(this.mouseNode, 'z-index', '100');\r\n\r\n\t\tif(this.useTooltip){\r\n\t\t\trequire([\"dijit/Tooltip\"], dojo.hitch(this, function(Tooltip){\r\n\t\t\t\tTooltip.show('test', this.mouseNode, !this.isLeftToRight());\r\n\t\t\t\tTooltip.hide(this.mouseNode);\r\n\t\t\t}));\r\n\t\t}\r\n\t},\r\n\r\n\t_getNumberModule :function() {\r\n\t\t// summary:\r\n\t\t//\t\tTests is AMD dojo/number is loaded\r\n\t\t\r\n\t\tif (_numberModule == 0) {\r\n\t\t\ttry {\r\n\t\t\t\t_numberModule = require(\"dojo/number\");\r\n\t\t\t} \r\n\t\t\tcatch (e) {\r\n\t\t\t\t_numberModule = null;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn _numberModule;\r\n\t},\r\n\t\r\n\tcreateSurface: function(){\r\n\t\t// summary:\r\n\t\t//\t\tInternal method used by the gauge to create the graphics surface area\r\n\t\tthis.gaugeContent.style.width = this.width + 'px';\r\n\t\tthis.gaugeContent.style.height = this.height + 'px';\r\n\t\tthis.surface = gfx.createSurface(this.gaugeContent, this.width, this.height);\r\n\t\t\r\n\t\t// create several groups where various gauge elements will be created.\r\n\t\tthis._backgroundGroup = this.surface.createGroup();\r\n\t\tthis._rangeGroup = this.surface.createGroup();\r\n\t\tthis._minorTicksGroup = this.surface.createGroup();\r\n\t\tthis._majorTicksGroup = this.surface.createGroup();\r\n\t\tthis._overlayGroup = this.surface.createGroup();\r\n\t\tthis._indicatorsGroup = this.surface.createGroup();\r\n\t\tthis._foregroundGroup = this.surface.createGroup();\r\n\t\t\r\n\t\tthis._background = this._backgroundGroup.createRect({x: 0, y: 0, width: this.width, height: this.height });\r\n\t\tthis._background.setFill(this.background);\r\n\r\n\t\tif(this.image.url){\r\n\t\t\tvar imageGroup = this._backgroundGroup;\r\n\t\t\tif (this.image.overlay)\r\n\t\t\t   imageGroup = this._overlayGroup;\r\n\t\t\t   \r\n\t\t\tthis._img = imageGroup.createImage({width: this.image.width || this.width, height: this.image.height || this.height, src: this.image.url});\r\n\t\t\tif(this.image.x || this.image.y){\r\n\t\t\t\tthis._img.setTransform({dx: this.image.x || 0, dy: this.image.y || 0});\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tdraw: function(){\r\n\t\t// summary:\r\n\t\t//\t\tThis function is used to draw (or redraw) the gauge.\r\n\t\t// description:\r\n\t\t//\t\tDraws the gauge by drawing the surface, the ranges, and the indicators.\r\n\t\tvar i;\r\n\t\tif (!this.surface)return;\r\n\t\t\r\n\t\tthis.drawBackground(this._backgroundGroup);\r\n\t\t\r\n\t\tif(this._rangeData){\r\n\t\t\tfor(i=0; i<this._rangeData.length; i++){\r\n\t\t\t\tthis.drawRange(this._rangeGroup, this._rangeData[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(this._minorTicksData){\r\n\t\t\tfor(i=0; i<this._minorTicksData.length; i++){\r\n\t\t\t\tthis._minorTicksData[i].draw(this._minorTicksGroup);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(this._majorTicksData){\r\n\t\t\tfor(i=0; i<this._majorTicksData.length; i++){\r\n\t\t\t\tthis._majorTicksData[i].draw(this._majorTicksGroup);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(this._indicatorData){\r\n\t\t\tfor(i=0; i<this._indicatorData.length; i++){\r\n\t\t\t\tthis._indicatorData[i].draw(this._indicatorsGroup);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.drawForeground(this._foregroundGroup);\r\n\t},\r\n\r\n\r\n\tdrawBackground:function(group){\r\n\t\t// summary:\r\n\t\t//\t\tThis function is used to draw (or redraw) the background of the gauge.\r\n\t\t// description:\r\n\t\t//\t\tThe method may be used by subclasses to draw (or redraw) the background of the gauge.\r\n\t\t\r\n\t},\r\n\t\r\n\tdrawForeground:function(group){\r\n\t\t// summary:\r\n\t\t//\t\tThis function is used to draw (or redraw) the foreground of the gauge.\r\n\t\t// description:\r\n\t\t//\t\tThe method may be used by subclasses to draw (or redraw) the foreground of the gauge.\r\n\t\t\r\n\t},\r\n\r\n\tsetBackground: function(background){\r\n\t\t// summary:\r\n\t\t//\t\tThis method is used to set the background of the gauge after it is created.\r\n\t\t// description:\r\n\t\t//\t\tSets the background using the given object.  Must be the same 'type' of object\r\n\t\t//\t\tas the original background argument.\r\n\t\t// background: Object\r\n\t\t//\t\tAn object in one of the two forms:\r\n\t\t// |\t\t{'color': 'color-name'}\r\n\t\t//\t\tOR (for a gradient:)\r\n\t\t// |\t\t{'type': 'linear', 'colors': [{offset: 0, color:'#C0C0C0'}, {offset: 1, color: '#E0E0E0'}] }\r\n\t\t//\t\tIf background is null or undefined, this will set the fill to this._backgroundDefault\r\n\t\tif(!background){ background = this._backgroundDefault; }\r\n\t\tthis.background = background.color || background;\r\n\t\tthis._background.setFill(this.background);\r\n\t},\r\n\r\n\taddRange: function(/*Object*/range){\r\n\t\t// summary:\r\n\t\t//\t\tThis method is used to add a range to the gauge.\r\n\t\t// description:\r\n\t\t//\t\tCreates a range (colored area on the background of the gauge)\r\n\t\t//\t\tbased on the given arguments.\r\n\t\t// range: Object\r\n\t\t//\t\tA range is either a dojox.gauges.Range object, or a object\r\n\t\t//\t\twith similar parameters (low, high, hover, etc.).\r\n\t\tthis.addRanges([range]);\r\n\t},\r\n\r\n\taddRanges: function(/*Array*/ranges){\r\n\t\t// summary:\r\n\t\t//\t\tThis method is used to add ranges to the gauge.\r\n\t\t// description:\r\n\t\t//\t\tCreates a range (colored area on the background of the gauge)\r\n\t\t//\t\tbased on the given arguments.\r\n\t\t// range: Range\r\n\t\t//\t\tA range is either a dojox.gauges.Range object, or a object\r\n\t\t//\t\twith similar parameters (low, high, hover, etc.).\r\n\t\tif(!this._rangeData){\r\n\t\t\tthis._rangeData = [];\r\n\t\t}\r\n\t\tvar range;\r\n\t\tfor(var i=0; i<ranges.length; i++){\r\n\t\t\trange = ranges[i];\r\n\t\t\tif((this.min === null) || (range.low < this.min)){this.min = range.low;}\r\n\t\t\tif((this.max === null) || (range.high > this.max)){this.max = range.high;}\r\n\r\n\t\t\tif(!range.color){\r\n\t\t\t\tvar colorIndex = this._rangeData.length % this.defaultColors.length;\r\n\t\t\t\tif(gfx.svg && this.useRangeStyles > 0){\r\n\t\t\t\t\tcolorIndex = (this._rangeData.length % this.useRangeStyles)+1;\r\n\t\t\t\t\trange.color = {style: \"dojoxGaugeRange\"+colorIndex};\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcolorIndex = this._rangeData.length % this.defaultColors.length;\r\n\t\t\t\t\trange.color = this.defaultColors[colorIndex];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._rangeData[this._rangeData.length] = range;\r\n\t\t}\r\n\t\tthis.draw();\r\n\t},\r\n\r\n\t_addScaleTick: function(/*Object*/indicator, /*Boolean*/ major){\r\n\t\t// summary:\r\n\t\t//\t\tAdds a scale ticks, that is an indicator.\r\n\t\t// description:\r\n\t\t//\t\tThis method adds  a tick mark to the gauge\r\n\t\t// indicator: dojox.gauges._Indicator\r\n\t\t//\t\tA dojox.gauges._Indicator or an object with similar parameters\r\n\t\t//\t\t(value, color, offset, etc.).\r\n\t\r\n\t\tif(!indicator.declaredClass){// !== 'dojox.gauges.Indicator'){\r\n\t\t\t// We were passed a plain object, need to make an indicator out of it.\r\n\t\t\tindicator = new this._defaultIndicator(indicator);\r\n\t\t}\r\n\t\r\n\t\tindicator._gauge = this;\r\n\t\tif (major){\r\n\t\t\tif (!this._majorTicksData){\r\n\t\t\t\tthis._majorTicksData = [];\r\n\t\t\t}\r\n\t\t\tthis._majorTicksData[this._majorTicksData.length] = indicator;\r\n\t\t\tindicator.draw(this._majorTicksGroup);\r\n\t\t} else {\r\n\t\t\t\tif (!this._minorTicksData){\r\n\t\t\t\tthis._minorTicksData = [];\r\n\t\t\t}\r\n\t\t\tthis._minorTicksData[this._minorTicksData.length] = indicator;\r\n\t\t\tindicator.draw(this._minorTicksGroup);\r\n\t\t}\r\n\t\treturn indicator;\r\n\t},\r\n\t\r\n\t_removeScaleTick: function(/*Object*/indicator){\r\n\t\t// summary:\r\n\t\t//\t\tRemoves the given scale tick from the gauge by calling it's remove function \r\n\t\t//\t\tand removing it from the local cache.\r\n\t\tvar i;\r\n\t\tif (this._majorTicksData) for (i = 0; i < this._majorTicksData.length; i++){\r\n\t\t\tif (this._majorTicksData[i] === indicator){\r\n\t\t\t\tthis._majorTicksData.splice(i, 1);\r\n\t\t\t\tindicator.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._minorTicksData) for (i = 0; i < this._minorTicksData.length; i++){\r\n\t\t\tif (this._minorTicksData[i] === indicator){\r\n\t\t\t\tthis._minorTicksData.splice(i, 1);\r\n\t\t\t\tindicator.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\taddIndicator: function(/*Object*/indicator){\r\n\t\t// summary:\r\n\t\t//\t\tThis method is used to add an indicator to the gauge.\r\n\t\t// description:\r\n\t\t//\t\tThis method adds an indicator, such as a t needle,\r\n\t\t//\t\tto the gauge.\r\n\t\t// indicator: dojox.gauges._Indicator\r\n\t\t//\t\tA dojox.gauges._Indicator or an object with similar parameters\r\n\t\t//\t\t(value, color, offset, etc.).\r\n\r\n\t\tif(!indicator.declaredClass){// !== 'dojox.gauges.Indicator'){\r\n\t\t\t// We were passed a plain object, need to make an indicator out of it.\r\n\t\t\tindicator = new this._defaultIndicator(indicator);\r\n\t\t}\r\n\t\tindicator._gauge = this;\r\n\t\tif(!indicator.hideValue){\r\n\t\t\tthis.containerNode.appendChild(indicator.domNode);\r\n\t\t}\r\n\t\tif(!this._indicatorData){this._indicatorData = [];}\r\n\t\tthis._indicatorData[this._indicatorData.length] = indicator;\r\n\t\tindicator.draw(this._indicatorsGroup);\r\n\t\treturn indicator;\r\n\t},\r\n\r\n\tremoveIndicator: function(/*Object*/indicator){\r\n\t\t// summary:\r\n\t\t//\t\tRemoves the given indicator from the gauge by calling it's remove function \r\n\t\t//\t\tand removing it from the local cache.\r\n\t\t// indicator: dojox.gauges._Indicator\r\n\t\t//\t\tThe indicator to remove.\r\n\t\tfor(var i=0; i<this._indicatorData.length; i++){\r\n\t\t\tif(this._indicatorData[i] === indicator){\r\n\t\t\t\tthis._indicatorData.splice(i, 1);\r\n\t\t\t\tindicator.remove();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tmoveIndicatorToFront: function(/*Object*/indicator){\r\n\t\t// summary:\r\n\t\t//\t\tThis function is used to move an indicator the the front (top)\r\n\t\t//\t\tof the gauge\r\n\t\t// indicator: dojox.gauges._Indicator\r\n\t\t//\t\tA dojox.gauges._Indicator or an object with similar parameters\r\n\t\t//\t\t(value, color, offset, etc.).\r\n\t\tif(indicator.shape)\r\n\t\t   indicator.shape.moveToFront();\r\n\t\t\r\n\t},\r\n\r\n\tdrawText: function(/*dojox.gfx.Group*/ group, /*String*/txt, /*Number*/x, /*Number*/y, /*String?*/align, /*String?*/color, /*Object?*/font){\r\n\t\t// summary:\r\n\t\t//\t\tThis function is used draw text onto the gauge.  The text object\r\n\t\t//\t\tis also returned by the function so that may be removed later\r\n\t\t//\t\tby calling removeText\r\n\t\t// group: dojox/gfx/Group\r\n\t\t//\t\tThe GFX Group where the text will be added.\r\n\t\t// txt:\tString\r\n\t\t//\t\tThe text to be drawn\r\n\t\t// x: Number\r\n\t\t//\t\tThe x coordinate at which to place the text\r\n\t\t// y: Number\r\n\t\t//\t\tThe y coordinate at which to place the text\r\n\t\t// align: String?\r\n\t\t//\t\tIndicates how to align the text\r\n\t\t//\t\tValid value is 'right', otherwise text is left-aligned\r\n\t\t// color: String?\r\n\t\t//\t\tIndicates the color of the text\r\n\t\t// font: Object?\r\n\t\t//\t\tA font object, generally of the following format:\r\n\t\t//\t\t{family: \"Helvetica\", style: \"italic\", variant: 'small-caps', weight: 'bold', size: \"18pt\"}\r\n\r\n\t\tvar t = group.createText({x: x, y: y, text: txt, align: align});\r\n\t\tt.setFill(color ? color: 'black');\r\n\t\tif (font) t.setFont(font);\r\n\t\treturn t;\r\n\t},\r\n\r\n\tremoveText:function(/*String*/t){\r\n\t\t// summary:\r\n\t\t//\t\tRemoves a text element from the gauge.\r\n\t\t// t: String\r\n\t\t//\t\tThe text to remove.\r\n\t\tif (t.parent)\r\n\t    \tt.parent.remove(t);\r\n\t},\r\n\r\n\tupdateTooltip: function(/*String*/txt, /*Event*/ e){\r\n\t\t// summary:\r\n\t\t//\t\tUpdates the tooltip for the gauge to display the given text.\r\n\t\t// txt:\tString\r\n\t\t//\t\tThe text to put in the tooltip.\r\n\t\r\n\t\tif (this.useTooltip) {\r\n\t\t\trequire([\"dijit/Tooltip\"], dojo.hitch(this, function(Tooltip){\r\n\t\t\t\tif (this._lastHover != txt) {\r\n\t\t\t\t\tif (txt !== '') {\r\n\t\t\t\t\t\tTooltip.hide(this.mouseNode);\r\n\t\t\t\t\t\tTooltip.show(txt, this.mouseNode, !this.isLeftToRight());\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tTooltip.hide(this.mouseNode);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._lastHover = txt;\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t},\r\n\r\n\thandleMouseOver: function(/*Object*/e){\r\n\t\t// summary:\r\n\t\t//\t\tThis is an internal handler used by the gauge to support \r\n\t\t//\t\thover text\r\n\t\t// e: Object\r\n\t\t//\t\tThe event object\r\n\t\t\r\n\t\tif (this.image && this.image.overlay){\r\n\t\t\tif (e.target == this._img.getEventSource()){\r\n\t\t\t\tvar hover;\r\n\t\t\t\tthis._overOverlay = true;\r\n\t\t\t\tvar r = this.getRangeUnderMouse(e);\r\n\t\t\t\tif (r && r.hover){\r\n\t\t\t\t\thover = r.hover;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (this.useTooltip && !this._drag){\t\t\t\t\t\r\n\t\t\t\t\tif (hover){\r\n\t\t\t\t\t\tthis.updateTooltip(hover, e);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.updateTooltip('', e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\thandleMouseOut: function(/*Object*/e){\r\n\t\t// summary:\r\n\t\t//\t\tThis is an internal handler used by the gauge to support\r\n\t\t//\t\thover text\r\n\t\t// e:\tObject\r\n\t\t//\t\tThe event object\r\n\r\n\t\tthis._overOverlay = false;\r\n\t\tthis._hideTooltip();\r\n\t},\r\n\r\n\thandleMouseMove: function(/*Object*/e){\r\n\t\t// summary:\r\n\t\t//\t\tThis is an internal handler used by the gauge to support using\r\n\t\t//\t\tthe mouse to show the tooltips\r\n\t\t// e: Object\r\n\t\t//\t\tThe event object\r\n\t\t\t\r\n\t\tif (this.useTooltip) {\r\n\t\t\t\tif (e) {\r\n\t\t\t\t\thtml.style(this.mouseNode, 'left', e.pageX + 1 + 'px');\r\n\t\t\t\t\thtml.style(this.mouseNode, 'top', e.pageY + 1 + 'px');\r\n\t\t\t\t}\r\n\t\t\t\tif (this._overOverlay) {\r\n\t\t\t\t\tvar r = this.getRangeUnderMouse(e);\r\n\t\t\t\t\tif (r && r.hover) {\r\n\t\t\t\t\t\tthis.updateTooltip(r.hover, e);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.updateTooltip('', e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\thandleMouseDown: function(e){\r\n\t\t// summary:\r\n\t\t//\t\tThis is an internal handler used by the gauge to support using\r\n\t\t//\t\tthe mouse to move indicators\r\n\t\t// e: Object\r\n\t\t//\t\tThe event object\r\n\t\tvar indicator = this._getInteractiveIndicator();\r\n\t\tif (indicator){\r\n\t\t\tthis._handleMouseDownIndicator(indicator, e);\r\n\t\t}\r\n\t},\t\r\n\t\r\n\t_handleDragInteractionMouseMove: function(e){\r\n\t\t// summary:\r\n\t\t//\t\tThis is an internal handler used by the gauge to support using\r\n\t\t//\t\tthe mouse to drag an indicator to modify it's value\r\n\t\t// e: Object\r\n\t\t//\t\tThe event object\r\n\t\t\r\n\t\tif(this._drag){\r\n\t\t\tthis._dragIndicator(this, e);\r\n\t\t\tevent.stop(e);\r\n\t\t}\r\n\t},\r\n\t\r\n\t_handleDragInteractionMouseUp: function(/*Object*/e){\r\n\t\t// summary:\r\n\t\t//\t\tThis is an internal handler used by the gauge to support using\r\n\t\t//\t\tthe mouse to drag an indicator to modify it's value\r\n\t\t// e: Object\r\n\t\t//\t\tThe event object\r\n\t\tthis._drag = null;\r\n\t\t\r\n\t\tfor (var i = 0 ; i < this._mouseListeners.length; i++){\r\n\t\t\tconnect.disconnect(this._mouseListeners[i]);\r\n\t\t}\r\n\t\tthis._mouseListeners = [];\r\n\t\tevent.stop(e);\r\n\t},\r\n\t\r\n\t_handleMouseDownIndicator: function (indicator, e){\r\n\t\t// summary:\r\n\t\t//\t\tThis is an internal handler used by the gauge to support using\r\n\t\t//\t\tthe mouse to drag an indicator to modify it's value\r\n\t\t// indicator: _Indicator \r\n\t\t//\t\tThe indicator object\r\n\t\t// e:Object\r\n\t\t//\t\tThe event object\r\n\t\t\r\n\t\tif (!indicator.noChange){\r\n\t\t\tif (!this._mouseListeners) this._mouseListeners = [];\r\n\t\t\tthis._drag = indicator;\r\n\t\t\tthis._mouseListeners.push(connect.connect(document, \"onmouseup\", this, this._handleDragInteractionMouseUp));\r\n\t\t\tthis._mouseListeners.push(connect.connect(document, \"onmousemove\", this, this._handleDragInteractionMouseMove));\r\n\t\t\tthis._mouseListeners.push(connect.connect(document, \"ondragstart\", this, event.stop));\r\n\t\t\tthis._mouseListeners.push(connect.connect(document, \"onselectstart\", this, event.stop));\r\n\t\t\tthis._dragIndicator(this, e);\r\n\t\t\tevent.stop(e);\r\n\t\t}\r\n\t},\r\n\t\r\n\t_handleMouseOverIndicator: function (indicator, e){\r\n\t\t// summary:\r\n\t\t//\t\tThis is an internal handler used by the gauge to support using\r\n\t\t//\t\tthe mouse to drag an indicator to modify it's value\r\n\t\t// indicator: _Indicator \r\n\t\t//\t\tThe indicator object\r\n\t\t// e: Object\r\n\t\t//\t\tThe event object\t\r\n\t\tif (this.useTooltip && !this._drag){\r\n\t\t\t\r\n\t\t\tif (indicator.hover){\r\n\t\t\t\trequire([\"dijit/Tooltip\"], dojo.hitch(this, function(Tooltip){\r\n\t\t\t\t\thtml.style(this.mouseNode, 'left', e.pageX + 1 + 'px');\r\n\t\t\t\t\thtml.style(this.mouseNode, 'top', e.pageY + 1 + 'px');\r\n\t\t\t\t\tTooltip.show(indicator.hover, this.mouseNode, !this.isLeftToRight());\r\n\t\t\t\t}));\r\n\t\t\t} else {\r\n\t\t\t\tthis.updateTooltip('', e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (indicator.onDragMove && !indicator.noChange){\r\n\t\t\tthis.gaugeContent.style.cursor = 'pointer';\r\n\t\t}\r\n\t},\r\n\t\r\n\t_handleMouseOutIndicator: function (indicator, e){\r\n\t\t// summary:\r\n\t\t//\t\tThis is an internal handler used by the gauge to support using\r\n\t\t//\t\tthe mouse to drag an indicator to modify it's value\r\n\t\t// indicator: _Indicator \r\n\t\t//\t\tThe indicator object\r\n\t\t// e: Object\r\n\t\t//\t\tThe event object\r\n\t\tthis._hideTooltip();\r\n\t\tthis.gaugeContent.style.cursor = 'pointer';\r\n\t\t\r\n\t},\r\n\t\r\n\t_hideTooltip: function(){\r\n\t\tif (this.useTooltip && this.mouseNode) {\r\n\t\t\trequire([\"dijit/Tooltip\"], dojo.hitch(this, function(Tooltip){\r\n\t\t\t\tTooltip.hide(this.mouseNode);\r\n\t\t\t}));\r\n\t\t}\r\n\t},\r\n\t\r\n\t_handleMouseOutRange: function ( range, e){\r\n\t\t\tthis._hideTooltip();\r\n\t},\r\n\t\r\n\t_handleMouseOverRange: function (range, e){\r\n\t\tif (this.useTooltip && !this._drag){\r\n\t\t\tif (range.hover) {\r\n\t\t\t\thtml.style(this.mouseNode, 'left', e.pageX + 1 + 'px');\r\n\t\t\t\thtml.style(this.mouseNode, 'top', e.pageY + 1 + 'px');\r\n\t\t\t\trequire([\"dijit/Tooltip\"], dojo.hitch(this, function(Tooltip){\r\n\t\t\t\t\tTooltip.show(range.hover, this.mouseNode, !this.isLeftToRight());\r\n\t\t\t\t}));\r\n\t\t\t} else {\r\n\t\t\t\tthis.updateTooltip('', e);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\thandleTouchStartIndicator: function(indicator, e){\r\n\t\t// summary:\r\n\t\t//\t\tThis is an internal handler used by the gauge to support using\r\n\t\t//\t\ttouch events to drag an indicator to modify it's value\r\n\t\t// indicator: _Indicator \r\n\t\t//\t\tThe indicator object\r\n\t\t// e: Object\r\n\t\t//\t\tThe event object\r\n\t\tif (!indicator.noChange){\r\n\t\t\tthis._drag = indicator;\r\n\t\t\tevent.stop(e);\r\n\t\t}\r\n\t},\r\n\t\t\r\n\thandleTouchStart: function(e){\r\n\t\t// summary:\r\n\t\t//\t\tThis is an internal handler used by the gauge to support using\r\n\t\t//\t\ttouch events to drag an indicator to modify it's value\r\n\t\t// e: Object\r\n\t\t//\t\tThe touch event object\r\n\t\tthis._drag = this._getInteractiveIndicator();\r\n\t\tthis.handleTouchMove(e); //drag indicator to touch position\r\n\t},\t\r\n\t\r\n\thandleTouchEnd: function(e){\r\n\t\t// summary:\r\n\t\t//\t\tThis is an internal handler used by the gauge to support using\r\n\t\t//\t\ttouch events to drag an indicator to modify it's value\r\n\t\t// e: Object\r\n\t\t//\t\tThe touch e object\t\r\n\t\tif (this._drag){\r\n\t\t\tthis._drag = null;\r\n\t\t\tevent.stop(e);\r\n\t\t}\r\n\t},\t\r\n\r\n\thandleTouchMove: function(e){\r\n\t\t// summary:\r\n\t\t//\t\tThis is an internal handler used by the gauge to support using\r\n\t\t//\t\ttouch events to drag an indicator to modify it's value\r\n\t\t// e: Object\r\n\t\t//\t\tThe touch event object\r\n\t\t\r\n\t\tif (this._drag && !this._drag.noChange){\r\n\t\t\tvar touches = e.touches;\r\n\t\t\tvar firstTouch = touches[0];\r\n\t\t\tthis._dragIndicatorAt(this, firstTouch.pageX, firstTouch.pageY);\r\n\t\t\tevent.stop(e);\r\n\t\t}\r\n\t},\r\n\r\n\t_getInteractiveIndicator: function(){\r\n\t\tfor (var i = 0; i < this._indicatorData.length; i++){\r\n\t\t\tvar indicator = this._indicatorData[i];\r\n\t\t\tif (indicator.interactionMode == \"gauge\" && !indicator.noChange){\r\n\t\t\t\treturn indicator;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n});\r\n});\r\n\r\n"]}