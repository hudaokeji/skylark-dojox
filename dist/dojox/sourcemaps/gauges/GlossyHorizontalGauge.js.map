{"version":3,"sources":["gauges/GlossyHorizontalGauge.js"],"names":["define","declare","connect","lang","Color","gfx","BarGauge","BarCircleIndicator","GlossyHorizontalGaugeMarker","_defaultIndicator","color","markerColor","majorTicksInterval","_majorTicksLength","majorTicksColor","minorTicksInterval","_minorTicksLength","minorTicksColor","value","noChange","title","font","scalePrecision","_font","_margin","_minBorderWidth","_maxBorderWidth","_tickLabelOffset","_designHeight","constructor","this","min","max","startup","inherited","arguments","_gaugeStarted","scale","height","_computeDataRectangle","scaleHeight","normalizedLength","size","Math","yOffset","addRange","low","high","setMajorTicks","fixedPrecision","precision","labelPlacement","offset","interval","length","setMinorTicks","_needle","hideValue","addIndicator","hitch","onValueChanged","_layoutGauge","_setMajorTicksProperty","_setMinorTicksProperty","removeIndicator","_formatNumber","val","NumberUtils","_getNumberModule","format","places","toFixed","leftTextMargin","_getTextWidth","rightTextMargin","textMargin","margin","_getBorderWidth","dataHeight","dataY","dataX","dataWidth","width","s","_base","_getTextBox","makeFontString","makeParameters","defaultFont","w","drawBackground","group","_gaugeBackground","lighterColor","blendColors","createGroup","borderWidth","h","radius","createRect","x","y","r","setFill","left","right","top","w2","h2","type","x1","y1","x2","y2","colors","f","sqrt","createPath","path","_setColorAttr","parent","remove","draw","_setMarkerColorAttr","shape","_setMajorTicksIntervalAttr","setMajorTicksLength","getMajorTicksLength","_setMajorTicksColorAttr","prop","majorTicks","mixin","_setMinorTicksIntervalAttr","setMinorTicksLength","getMinorTicksLength","_setMinorTicksColorAttr","minorTicks","_setMinAttr","_setMaxAttr","_setValueAttr","update","_setScalePrecisionAttr","_setNoChangeAttr","_setTitleAttr","_setFontAttr","splitFontString"],"mappings":"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","file":"../../gauges/GlossyHorizontalGauge.js","sourcesContent":["define([\"dojo/_base/declare\",\"dojo/_base/connect\",\"dojo/_base/lang\",\"dojo/_base/Color\",\"dojox/gfx\",\"./BarGauge\",\"./BarCircleIndicator\",\"./GlossyHorizontalGaugeMarker\"],\r\n  function(declare, connect, lang, Color, gfx, BarGauge, BarCircleIndicator, GlossyHorizontalGaugeMarker) {\r\n\r\nreturn declare(\"dojox.gauges.GlossyHorizontalGauge\", [BarGauge], {\r\n\t// summary:\r\n\t//\t\tRepresents an horizontal bar gauge with a glossy appearance.\r\n\t//\r\n\t// example:\r\n\t//\t|\t<div dojoType=\"dojox.gauges.GlossyHorizontalGauge\"\r\n\t//\t|\t\tid=\"testGauge\"\r\n\t//\t|\t\twidth=\"500\"\r\n\t//\t|\t\theight=\"100\"\r\n\t//\t|\t\tmin=\"0\"\r\n\t//\t|\t\tmax=\"100\"\r\n\t//\t|\t\tvalue=\"0\" \r\n\t//\t|\t\tmajorTicksInterval=\"10\"\r\n\t//\t|\t\tmajorTicksColor=\"#c4c4c4\"\r\n\t//\t|\t\tminorTicksInterval=\"5\"\r\n\t//\t|\t\tminorTicksColor=\"#c4c4c4\"\r\n\t//\t|\t\tcolor=\"black\" \r\n\t//\t|\t\tmarkerColor=\"#c4c4c4\"\r\n\t//\t|\t\tfont=\"normal normal normal 10pt sans-serif\"\r\n\t//\t|\t\tnoChange=\"true\"\r\n\t//\t|\t\ttitle=\"title\"\r\n\t//\t|\t\tscalePrecision=\"0\"\r\n\t//\t|\t>\r\n\t//\t|\t</div>\r\n\r\n\r\n\t// the type of default indicator to create\r\n\t_defaultIndicator: BarCircleIndicator,\r\n\t\r\n\t// color: String\r\n\t//\t\tThe main color of the gauge.\r\n\tcolor: 'black',\r\n\t\r\n\t// needleColor: Color\r\n\t//\t\tThe main color of the needle.\r\n\tmarkerColor: 'black',\r\n\t\r\n\t// majorTicksInterval: Number\r\n\t//\t\tInterval between major ticks\r\n\tmajorTicksInterval: 10,\r\n\t\r\n\t// _majorTicksLength: Number\r\n\t//\t\tMajor tick size, at design\r\n\t_majorTicksLength: 10,\r\n\t\r\n\t// majorTicksColor: Color\r\n\t//\t\tColor of major tick marks\r\n\tmajorTicksColor: '#c4c4c4',\r\n\t\r\n\t// minorTicksInterval: Number\r\n\t//\t\tInterval between minor ticks\r\n\tminorTicksInterval: 5,\r\n\t\r\n\t// _minorTicksLength: Number\r\n\t//\t\tMinor tick size, at design\r\n\t_minorTicksLength: 6,\r\n\t\r\n\t// minorTicksColor: Color\r\n\t//\t\tColor of minor tick marks\r\n\tminorTicksColor: '#c4c4c4',\r\n\t\r\n\t// value: Number\r\n\t//\t\tThe value of the gauge.\r\n\tvalue: 0,\r\n\t\r\n\t// noChange: Boolean\r\n\t//\t\tIndicates if the gauge reacts to touch events\r\n\tnoChange: false,\r\n\t\r\n\t// title: String\r\n\t//\t\tThe title displayed in the needle's tooltip\r\n\ttitle: \"\",\r\n\t\r\n\t// font: Object\r\n\t//\t\tThe font of the gauge\r\n\tfont: \"normal normal normal 10pt serif\",\r\n\t\r\n\t// scalePrecision: Number\r\n\t//\t\tThe precision for the formatting of numbers in the scale (default is 0)\r\n\tscalePrecision: 0,\r\n\t\r\n\t_font: null,\r\n\t\r\n\t_margin: 2,\r\n\t_minBorderWidth: 2,\r\n\t_maxBorderWidth: 6,\r\n\t_tickLabelOffset: 5,\r\n\t_designHeight: 100,\r\n\t\r\n\tconstructor: function(){\r\n\t\tthis.min = 0;\r\n\t\tthis.max = 100;\r\n\t},\r\n\t\r\n\tstartup: function(){\r\n\t\tthis.inherited(arguments);\r\n\t\t\r\n\t\tif (this._gaugeStarted) return;\r\n\t\t\r\n\t\tthis._gaugeStarted = true;\r\n\t\t\r\n\t\tvar scale = this.height / this._designHeight;\r\n\t\t\r\n\t\tthis._minorTicksLength = this._minorTicksLength * scale;\r\n\t\tthis._majorTicksLength = this._majorTicksLength * scale;\r\n\t\t\r\n\t\tvar font = this._font;\r\n\t\tthis._computeDataRectangle();\r\n\t\t\r\n\t\t// computing scale height\r\n\t\t\r\n\t\tvar th = gfx.normalizedLength(font.size);\r\n\t\tvar scaleHeight = th + this._tickLabelOffset + Math.max(this._majorTicksLength, this._minorTicksLength);\r\n\t\t// indicator in the middle of the gauge\r\n\t\tvar yOffset = Math.max(0, (this.height - scaleHeight) / 2);\r\n\t\t\r\n\t\tthis.addRange({\r\n\t\t\tlow: this.min ? this.min : 0,\r\n\t\t\thigh: this.max ? this.max : 100,\r\n\t\t\tcolor: [0, 0, 0, 0]\r\n\t\t});\r\n\t\t\r\n\t\tthis.setMajorTicks({\r\n\t\t\tfixedPrecision: true,\r\n\t\t\tprecision: this.scalePrecision,\r\n\t\t\tfont: font,\r\n\t\t\tlabelPlacement: 'inside',\r\n\t\t\toffset: yOffset - this._majorTicksLength / 2,\r\n\t\t\tinterval: this.majorTicksInterval,\r\n\t\t\tlength: this._majorTicksLength,\r\n\t\t\tcolor: this.majorTicksColor\r\n\t\t\r\n\t\t});\r\n\t\t\r\n\t\tthis.setMinorTicks({\r\n\t\t\tlabelPlacement: 'inside',\r\n\t\t\toffset: yOffset - this._minorTicksLength / 2,\r\n\t\t\tinterval: this.minorTicksInterval,\r\n\t\t\tlength: this._minorTicksLength,\r\n\t\t\tcolor: this.minorTicksColor\r\n\t\t\r\n\t\t});\r\n\t\tthis._needle = new GlossyHorizontalGaugeMarker({\r\n\t\t\thideValue: true,\r\n\t\t\ttitle: this.title,\r\n\t\t\tnoChange: this.noChange,\r\n\t\t\toffset: yOffset,\r\n\t\t\tcolor: this.markerColor,\r\n\t\t\tvalue: this.value\r\n\t\t});\r\n\t\tthis.addIndicator(this._needle);\r\n\t\t\r\n\t\tconnect.connect(this._needle, \"valueChanged\", lang.hitch(this, function(){\r\n\t\t\tthis.value = this._needle.value;\r\n\t\t\tthis.onValueChanged();\r\n\t\t}));\r\n\t},\r\n\t\r\n\t_layoutGauge: function(){\r\n\t\t// summary:\r\n\t\t//\t\tLayout the gauge elements depending on the various parameters (size, font, tick length..)\r\n\t\t\r\n\t\tif (!this._gaugeStarted) \r\n\t\t\treturn;\r\n\t\t\r\n\t\tvar font = this._font;\r\n\t\tthis._computeDataRectangle();\r\n\t\tvar th = gfx.normalizedLength(font.size);\r\n\t\tvar scaleHeight = th + this._tickLabelOffset + Math.max(this._majorTicksLength, this._minorTicksLength);\r\n\t\t// indicator in the middle of the gauge\r\n\t\tvar yOffset = Math.max(0, (this.height - scaleHeight) / 2);\r\n\t\t\r\n\t\t\r\n\t\tthis._setMajorTicksProperty({\r\n\t\t\tfixedPrecision: true,\r\n\t\t\tprecision: this.scalePrecision,\r\n\t\t\tfont: font,\r\n\t\t\toffset: yOffset - this._majorTicksLength / 2,\r\n\t\t\tinterval: this.majorTicksInterval,\r\n\t\t\tlength: this._majorTicksLength\r\n\t\t});\r\n\t\t\r\n\t\tthis._setMinorTicksProperty({\r\n\t\t\toffset: yOffset - this._minorTicksLength / 2,\r\n\t\t\tinterval: this.minorTicksInterval,\r\n\t\t\tlength: this._minorTicksLength\r\n\t\t});\r\n\t\t\r\n\t\tthis.removeIndicator(this._needle);\r\n\t\tthis._needle.offset = yOffset;\r\n\t\tthis.addIndicator(this._needle);\r\n\t},\r\n\t\r\n\t_formatNumber: function(val){\r\n\t    var NumberUtils = this._getNumberModule();\r\n\t\tif(NumberUtils){ // use internationalization if loaded\r\n\t\t\treturn NumberUtils.format(val, {\r\n\t\t\t\tplaces: this.scalePrecision\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\treturn val.toFixed(this.scalePrecision);\r\n\t\t}\r\n\t},\r\n\t\r\n\t_computeDataRectangle: function(){\r\n\t\t// summary:\r\n\t\t//\t\tComputes the rectangle that defines the data area of the gauge.\r\n\t\t\r\n\t\t\r\n\t\tif (!this._gaugeStarted) \r\n\t\t\treturn;\r\n\t\t\r\n\t\tvar font = this._font;\r\n\t\tvar leftTextMargin = this._getTextWidth(this._formatNumber(this.min), font) / 2;\r\n\t\tvar rightTextMargin = this._getTextWidth(this._formatNumber(this.max), font) / 2;\r\n\t\tvar textMargin = Math.max(leftTextMargin, rightTextMargin);\r\n\t\t\r\n\t\tvar margin = this._getBorderWidth() + Math.max(this._majorTicksLength, this._majorTicksLength) / 2 + textMargin;\r\n\t\tthis.dataHeight = this.height;\r\n\t\tthis.dataY = 0;\r\n\t\tthis.dataX = margin + this._margin;\r\n\t\tthis.dataWidth = Math.max(0, this.width - 2 * this.dataX);\r\n\t},\r\n\t\r\n\t_getTextWidth: function(s, font){\r\n\t\treturn gfx._base._getTextBox(s, {\r\n\t\t\tfont: gfx.makeFontString(gfx.makeParameters(gfx.defaultFont, font))\r\n\t\t}).w ||\r\n\t\t0;\r\n\t},\r\n\t\r\n\t_getBorderWidth: function(){\r\n\t\t// summary:\r\n\t\t//\t\tComputes the width of the border surrounding the gauge\r\n\t\treturn Math.max(this._minBorderWidth, Math.min(this._maxBorderWidth, this._maxBorderWidth * this.height / this._designHeight));\r\n\t},\r\n\t\r\n\tdrawBackground: function(group){\r\n\t\t// summary:\r\n\t\t//\t\tDraws the background of the gauge\r\n\t\t// group: dojox.gfx.Group\r\n\t\t//\t\tThe GFX group where the background must be drawn\r\n\t\tif (this._gaugeBackground){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tvar lighterColor = Color.blendColors(new Color(this.color), new Color('white'), 0.4);\r\n\t\tthis._gaugeBackground = group.createGroup();\r\n\r\n\t\tvar borderWidth = this._getBorderWidth();\r\n\t\tvar margin = this._margin;\r\n\t\tvar w = this.width;\r\n\t\tvar h = this.height;\r\n\t\tvar radius = Math.min(h / 4, 23);\r\n\t\tthis._gaugeBackground.createRect({\r\n\t\t\tx: margin,\r\n\t\t\ty: margin,\r\n\t\t\twidth: Math.max(0, w - 2 * margin),\r\n\t\t\theight: Math.max(0, h - 2 * margin),\r\n\t\t\tr: radius\r\n\t\t}).setFill(this.color);\r\n\t\t\r\n\t\tvar left = margin + borderWidth;\r\n\t\tvar right = w - borderWidth - margin;\r\n\t\tvar top = margin + borderWidth;\r\n\t\tvar w2 = w - 2 * borderWidth - 2 * margin;\r\n\t\tvar h2 = h - 2 * borderWidth - 2 * margin;\r\n\t\tif (w2 <= 0 || h2 <= 0) \r\n\t\t\treturn;\r\n\t\tradius = Math.min(radius, w2 / 2);\r\n\t\tradius = Math.min(radius, h2 / 2);\r\n\t\tthis._gaugeBackground.createRect({\r\n\t\t\tx: left,\r\n\t\t\ty: top,\r\n\t\t\twidth: w2,\r\n\t\t\theight: h2,\r\n\t\t\tr: radius\r\n\t\t}).setFill({\r\n\t\t\ttype: \"linear\",\r\n\t\t\tx1: left,\r\n\t\t\ty1: 0,\r\n\t\t\tx2: left,\r\n\t\t\ty2: h - borderWidth - margin,\r\n\t\t\tcolors: [{\r\n\t\t\t\toffset: 0,\r\n\t\t\t\tcolor: lighterColor\r\n\t\t\t}, {\r\n\t\t\t\toffset: .2,\r\n\t\t\t\tcolor: this.color\r\n\t\t\t}, {\r\n\t\t\t\toffset: .8,\r\n\t\t\t\tcolor: this.color\r\n\t\t\t}, {\r\n\t\t\t\toffset: 1,\r\n\t\t\t\tcolor: lighterColor\r\n\t\t\t}]\r\n\t\t});\r\n\t\t\r\n\t\tvar f = 4 * (Math.sqrt(2) - 1) / 3 * radius;\r\n\t\tthis._gaugeBackground.createPath({\r\n\t\t\tpath: 'M' + left + ' ' + (top + radius) +\r\n\t\t\t'C' +\r\n\t\t\tleft +\r\n\t\t\t' ' +\r\n\t\t\t(top + radius - f) +\r\n\t\t\t' ' +\r\n\t\t\t(left + radius - f) +\r\n\t\t\t' ' +\r\n\t\t\ttop +\r\n\t\t\t' ' +\r\n\t\t\t(left + radius) +\r\n\t\t\t' ' +\r\n\t\t\ttop +\r\n\t\t\t'L' +\r\n\t\t\t(right - radius) +\r\n\t\t\t' ' +\r\n\t\t\ttop +\r\n\t\t\t'C' +\r\n\t\t\t(right - radius + f) +\r\n\t\t\t' ' +\r\n\t\t\ttop +\r\n\t\t\t' ' +\r\n\t\t\tright +\r\n\t\t\t' ' +\r\n\t\t\t(top + radius - f) +\r\n\t\t\t' ' +\r\n\t\t\tright +\r\n\t\t\t' ' +\r\n\t\t\t(top + radius) +\r\n\t\t\t'L' +\r\n\t\t\tright +\r\n\t\t\t' ' +\r\n\t\t\t(top + h / 2) +\r\n\t\t\t'L' +\r\n\t\t\tleft +\r\n\t\t\t' ' +\r\n\t\t\t(top + h / 3) +\r\n\t\t\t'Z'\r\n\t\t}).setFill({\r\n\t\t\ttype: \"linear\",\r\n\t\t\tx1: left,\r\n\t\t\ty1: top,\r\n\t\t\tx2: left,\r\n\t\t\ty2: top + this.height / 2,\r\n\t\t\tcolors: [{\r\n\t\t\t\toffset: 0,\r\n\t\t\t\tcolor: lighterColor\r\n\t\t\t}, {\r\n\t\t\t\toffset: 1,\r\n\t\t\t\tcolor: Color.blendColors(new Color(this.color), new Color('white'), 0.2)\r\n\t\t\t}]\r\n\t\t});\r\n\t},\r\n\t\r\n\tonValueChanged: function(){\r\n\t\t// summary:\r\n\t\t//\t\tCallback when the value of the gauge has changed.\r\n\t\r\n\t},\r\n\t\r\n\t//*******************************************************************************************\r\n\t//* Property getters and setters\r\n\t//*******************************************************************************************\r\n\t\r\n\t_setColorAttr: function(color){\r\n\t\t// summary:\r\n\t\t//\t\tSets the main color of the gauge\r\n\t\t// color: String\r\n\t\t//\t\tThe color\r\n\t\tthis.color = color ? color : 'black';\r\n\t\tif (this._gaugeBackground && this._gaugeBackground.parent) \r\n\t\t\tthis._gaugeBackground.parent.remove(this._gaugeBackground);\r\n\t\t\r\n\t\tthis._gaugeBackground = null;\r\n\t\tthis.draw();\r\n\t},\r\n\t\r\n\t_setMarkerColorAttr: function(color){\r\n\t\t// summary:\r\n\t\t//\t\tSets the main color of the marker\r\n\t\t// color: String\r\n\t\t//\t\tThe color\r\n\t\tthis.markerColor = color;\r\n\t\tif (this._needle){\r\n\t\t\tthis.removeIndicator(this._needle);\r\n\t\t\tthis._needle.color = color;\r\n\t\t\tthis._needle.shape = null;\r\n\t\t\tthis.addIndicator(this._needle);\r\n\t\t}\r\n\t},\r\n\t\r\n\t_setMajorTicksIntervalAttr: function(interval){\r\n\t\t// summary:\r\n\t\t//\t\tSets the interval between major ticks\r\n\t\tthis.majorTicksInterval = interval;\r\n\t\tthis._setMajorTicksProperty({\r\n\t\t\t'interval': this.majorTicksInterval\r\n\t\t});\r\n\t},\r\n\t\r\n\tsetMajorTicksLength: function(length){\r\n\t\t// summary:\r\n\t\t//\t\tSets the size of the major ticks.\r\n\t\tthis._majorTicksLength = length;\r\n\t\tthis._layoutGauge();\r\n\t\treturn this;\r\n\t\t\r\n\t},\r\n\t\r\n\tgetMajorTicksLength: function(){\r\n\t\t// summary:\r\n\t\t//\t\tReturns the size of the major ticks.\r\n\t\treturn this._majorTicksLength;\r\n\t},\r\n\t\r\n\t_setMajorTicksColorAttr: function(color){\r\n\t\t// summary:\r\n\t\t//\t\tSets the color of the major ticks.\r\n\t\tthis.majorTicksColor = color;\r\n\t\tthis._setMajorTicksProperty({\r\n\t\t\t'color': this.majorTicksColor\r\n\t\t});\r\n\t},\r\n\t\r\n\t_setMajorTicksProperty: function(prop){\r\n\t\tif (this.majorTicks == null){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlang.mixin(this.majorTicks, prop);\r\n\t\tthis.setMajorTicks(this.majorTicks);\r\n\t},\r\n\t\r\n\t_setMinorTicksIntervalAttr: function(interval){\r\n\t\t// summary:\r\n\t\t//\t\tSets the interval between minor ticks\r\n\t\tthis.minorTicksInterval = interval;\r\n\t\tthis._setMinorTicksProperty({\r\n\t\t\t'interval': this.minorTicksInterval\r\n\t\t});\r\n\t},\r\n\t\r\n\tsetMinorTicksLength: function(length){\r\n\t\t// summary:\r\n\t\t//\t\tSets the size of the minor ticks.\r\n\t\tthis._minorTicksLength = length;\r\n\t\tthis._layoutGauge();\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\tgetMinorTicksLength: function(){\r\n\t\t// summary:\r\n\t\t//\t\tGets the size of the minor ticks.\r\n\t\treturn this._minorTicksLength;\r\n\t},\r\n\t\r\n\t_setMinorTicksColorAttr: function(color){\r\n\t\t// summary:\r\n\t\t//\t\tSets the color of the minor ticks.\r\n\t\tthis.minorTicksColor = color;\r\n\t\tthis._setMinorTicksProperty({\r\n\t\t\t'color': this.minorTicksColor\r\n\t\t});\r\n\t},\r\n\t\r\n\t_setMinorTicksProperty: function(prop){\r\n\t\tif (this.minorTicks == null){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlang.mixin(this.minorTicks, prop);\r\n\t\tthis.setMinorTicks(this.minorTicks);\r\n\t},\r\n\t\r\n\t_setMinAttr: function(min){\r\n\t\tthis.min = min;\r\n\t\tthis._computeDataRectangle();\r\n\t\tif (this.majorTicks != null) \r\n\t\t\tthis.setMajorTicks(this.majorTicks);\r\n\t\tif (this.minorTicks != null) \r\n\t\t\tthis.setMinorTicks(this.minorTicks);\r\n\t\tthis.draw();\r\n\t},\r\n\t\r\n\t_setMaxAttr: function(max){\r\n\t\tthis.max = max;\r\n\t\tthis._computeDataRectangle();\r\n\t\tif (this.majorTicks != null) \r\n\t\t\tthis.setMajorTicks(this.majorTicks);\r\n\t\tif (this.minorTicks != null) \r\n\t\t\tthis.setMinorTicks(this.minorTicks);\r\n\t\tthis.draw();\r\n\t},\r\n\t\r\n\t_setValueAttr: function(value){\r\n\t\t// summary:\r\n\t\t//\t\tChanges the value of the gauge\r\n\t\t// value: Number\r\n\t\t//\t\tThe new value for the gauge.\t\t\t\r\n\t\t\r\n\t\tvalue = Math.min(this.max, value);\r\n\t\tvalue = Math.max(this.min, value);\r\n\t\tthis.value = value;\r\n\t\tif (this._needle){\r\n\t\t\t// update will not work if noChange is true.\r\n\t\t\tvar noChange = this._needle.noChange;\r\n\t\t\tthis._needle.noChange = false;\r\n\t\t\tthis._needle.update(value);\r\n\t\t\tthis._needle.noChange = noChange;\r\n\t\t}\r\n\t},\r\n\t\r\n\t_setScalePrecisionAttr: function(value){\r\n\t\t// summary:\r\n\t\t//\t\tChanges precision of the numbers in the scale of the gauge\r\n\t\t// value: Number\r\n\t\t//\t\tThe new value\r\n\t\tthis.scalePrecision = value;\r\n\t\tthis._layoutGauge();\r\n\t},\r\n\t\r\n\t_setNoChangeAttr: function(value){\r\n\t\t// summary:\r\n\t\t//\t\tIndicates if the value of the gauge can be changed or not\r\n\t\t// value: boolean\r\n\t\t//\t\ttrue indicates that the gauge's value cannot be changed\t\r\n\t\tthis.noChange = value;\r\n\t\tif (this._needle) \r\n\t\t\tthis._needle.noChange = this.noChange;\r\n\t},\r\n\t\r\n\t_setTitleAttr: function(value){\r\n\t\t// summary:\r\n\t\t//\t\tSets the title displayed by the needle's tooltip .\r\n\t\t// value: String\r\n\t\t//\t\tthe title\r\n\t\t\r\n\t\tthis.title = value;\r\n\t\tif (this._needle){\r\n\t\t\tthis._needle.title = this.title;\r\n\t\t}\r\n\t},\r\n\t\r\n\t_setFontAttr: function(font){\r\n\t\t// summary:\r\n\t\t//\t\tSets the font of the gauge\r\n\t\t// font: String\r\n\t\t//\t\tAn string representing the font such as 'normal normal normal 10pt Helvetica,Arial,sans-serif'\t\r\n\t\t\r\n\t\tthis.font = font;\r\n\t\tthis._font = gfx.splitFontString(font);\r\n\t\tthis._layoutGauge();\r\n\t}\r\n});\r\n});\r\n\r\n"]}