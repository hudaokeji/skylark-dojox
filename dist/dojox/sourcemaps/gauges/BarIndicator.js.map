{"version":3,"sources":["gauges/BarIndicator.js"],"names":["define","declare","fx","connect","lang","BarLineIndicator","_getShapes","group","this","_gauge","v","value","min","max","pos","_getPosition","dataX","y","dataY","Math","floor","dataHeight","width","offset","shapes","createRect","x","height","setStroke","color","setFill","createLine","x1","y1","x2","y2","highlight","highlight2","_createShapes","val","i","shape","children","newShape","j","type","setShape","_move","dontAnimate","c","currentValue","anim","Animation","curve","duration","easing","hitch","play"],"mappings":";;;;;;;AAAAA,QAAQ,qBAAqB,gBAAgB,qBAAqB,kBAAkB,sBACpF,SAASC,EAASC,EAAIC,EAASC,EAAMC,GAErC,OAAOJ,EAAQ,6BAA6BI,IAK3CC,WAAY,SAASC,GAGpB,IAAIC,KAAKC,OACR,OAAO,KAER,IAAIC,EAAIF,KAAKG,MACVD,EAAIF,KAAKC,OAAOG,MAAKF,EAAIF,KAAKC,OAAOG,KACrCF,EAAIF,KAAKC,OAAOI,MAAKH,EAAIF,KAAKC,OAAOI,KACxC,IAAIC,EAAMN,KAAKC,OAAOM,aAAaL,GAChCI,GAAON,KAAKQ,QAAOF,EAAMN,KAAKQ,MAAM,GACvC,IAAIC,EAAIT,KAAKC,OAAOS,MAAQC,KAAKC,OAAOZ,KAAKC,OAAOY,WAAab,KAAKc,OAAO,GAAKd,KAAKe,OAEnFC,KAYJ,OAXAA,EAAO,GAAKjB,EAAMkB,YAAYC,EAAElB,KAAKC,OAAOO,MAAOC,EAAEA,EAAGK,MAAMR,EAAMN,KAAKC,OAAOO,MAAOW,OAAOnB,KAAKc,QACnGE,EAAO,GAAGI,WAAWC,MAAOrB,KAAKqB,QACjCL,EAAO,GAAGM,QAAQtB,KAAKqB,OACvBL,EAAO,GAAKjB,EAAMwB,YAAaC,GAAGxB,KAAKC,OAAOO,MAAOiB,GAAGhB,EAAGiB,GAAGpB,EAAKqB,GAAGlB,IACtEO,EAAO,GAAGI,WAAWC,MAAOrB,KAAK4B,YAC9B5B,KAAK6B,aACPpB,IACAO,EAAO,GAAKjB,EAAMwB,YAAaC,GAAGxB,KAAKC,OAAOO,MAAOiB,GAAGhB,EAAGiB,GAAGpB,EAAKqB,GAAGlB,IACtEO,EAAO,GAAGI,WAAWC,MAAOrB,KAAK6B,cAG3Bb,GAERc,cAAe,SAASC,GAGvB,IAAI,IAAIC,KAAKhC,KAAKiC,MAAMC,SAAS,CAChCF,EAAIhC,KAAKiC,MAAMC,SAASF,GACxB,IAAIG,KACJ,IAAI,IAAIC,KAAKJ,EACZG,EAASC,GAAKJ,EAAEI,GAEE,QAAhBJ,EAAEC,MAAMI,KACVF,EAASF,MAAMP,GAAKK,EAAII,EAASF,MAAMT,GACf,QAAhBQ,EAAEC,MAAMI,OAChBF,EAASrB,MAAQiB,GAElBC,EAAEM,SAASH,KAGbI,MAAO,SAAsBC,GAI5B,IAAIC,EACAvC,EAAIF,KAAKG,MAMb,GALGD,EAAIF,KAAKI,MAAKF,EAAIF,KAAKI,KACvBF,EAAIF,KAAKK,MAAKH,EAAIF,KAAKK,KAC1BoC,EAAIzC,KAAKC,OAAOM,aAAaP,KAAK0C,cAClC1C,KAAK0C,aAAexC,EACpBA,EAAIF,KAAKC,OAAOM,aAAaL,GAAGF,KAAKC,OAAOO,MACzCgC,EACFxC,KAAK8B,cAAc5B,QAEnB,GAAGuC,GAAGvC,EAAE,CACP,IAAIyC,EAAO,IAAIjD,EAAGkD,WAAWC,OAAQJ,EAAGvC,GAAI4C,SAAU9C,KAAK8C,SAAUC,OAAQ/C,KAAK+C,SAClFpD,EAAQA,QAAQgD,EAAM,YAAa/C,EAAKoD,MAAMhD,KAAMA,KAAK8B,gBACzDa,EAAKM","file":"../../gauges/BarIndicator.js","sourcesContent":["define([\"dojo/_base/declare\",\"dojo/_base/fx\",\"dojo/_base/connect\",\"dojo/_base/lang\",\"./BarLineIndicator\"],\r\nfunction(declare, fx, connect, lang, BarLineIndicator) {\r\n\r\nreturn declare(\"dojox.gauges.BarIndicator\",[BarLineIndicator],{\r\n\t\r\n\t// summary:\r\n\t//\t\tAn indicator for the BarGauge that draws a bar corresponding to the indicator value.\t\r\n\t\r\n\t_getShapes: function(group){\r\n\t\t// summary:\r\n\t\t//\t\tOverride of dojox.gauges.BarLineIndicator._getShapes\r\n\t\tif(!this._gauge){\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar v = this.value;\r\n\t\tif(v < this._gauge.min){v = this._gauge.min;}\r\n\t\tif(v > this._gauge.max){v = this._gauge.max;}\r\n\t\tvar pos = this._gauge._getPosition(v);\r\n\t\tif(pos == this.dataX){pos = this.dataX+1;}\r\n\t\tvar y = this._gauge.dataY + Math.floor((this._gauge.dataHeight - this.width)/2) + this.offset;\r\n\r\n\t\tvar shapes = [];\r\n\t\tshapes[0] = group.createRect({x:this._gauge.dataX, y:y, width:pos - this._gauge.dataX, height:this.width});\r\n\t\tshapes[0].setStroke({color: this.color});\r\n\t\tshapes[0].setFill(this.color);\r\n\t\tshapes[1] = group.createLine({ x1:this._gauge.dataX, y1:y, x2:pos, y2:y });\r\n\t\tshapes[1].setStroke({color: this.highlight});\r\n\t\tif(this.highlight2){\r\n\t\t\ty--;\r\n\t\t\tshapes[2] = group.createLine({ x1:this._gauge.dataX, y1:y, x2:pos, y2:y });\r\n\t\t\tshapes[2].setStroke({color: this.highlight2});\r\n\t\t}\r\n\r\n\t\treturn shapes;\r\n\t},\r\n\t_createShapes: function(val){\r\n\t\t// summary:\r\n\t\t//\t\tCreates a shallow copy of the current shapes while adjusting for the new value\r\n\t\tfor(var i in this.shape.children){\r\n\t\t\ti = this.shape.children[i];\r\n\t\t\tvar newShape = {};\r\n\t\t\tfor(var j in i){\r\n\t\t\t\tnewShape[j] = i[j];\r\n\t\t\t}\r\n\t\t\tif(i.shape.type == \"line\"){\r\n\t\t\t\tnewShape.shape.x2 = val+newShape.shape.x1;\r\n\t\t\t}else if(i.shape.type == \"rect\"){\r\n\t\t\t\tnewShape.width = val;\r\n\t\t\t}\r\n\t\t\ti.setShape(newShape);\r\n\t\t}\r\n\t},\r\n\t_move: function(/*Boolean?*/ dontAnimate){\r\n\t\t// summary:\r\n\t\t//\t\tOverride of dojox.gauges.BarLineIndicator._move to resize the bar (rather than moving it)\r\n\t\t\r\n\t\tvar c;\r\n\t\tvar v = this.value ;\r\n\t\tif(v < this.min){v = this.min;}\r\n\t\tif(v > this.max){v = this.max;}\r\n\t\tc = this._gauge._getPosition(this.currentValue);\r\n\t\tthis.currentValue = v;\r\n\t\tv = this._gauge._getPosition(v)-this._gauge.dataX;\r\n\t\tif(dontAnimate){\r\n\t\t\tthis._createShapes(v);\r\n\t\t}else{\r\n\t\t\tif(c!=v){\r\n\t\t\t\tvar anim = new fx.Animation({curve: [c, v], duration: this.duration, easing: this.easing});\r\n\t\t\t\tconnect.connect(anim, \"onAnimate\", lang.hitch(this, this._createShapes));\r\n\t\t\t\tanim.play();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n});\r\n"]}