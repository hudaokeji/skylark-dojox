{"version":3,"sources":["app/tests/modelApp/simple/simple.js"],"names":["define","dom","connect","registry","_connectResults","currentModel","setFromModel","byId","set","First","Last","Email","ShipTo","Street","City","State","Zip","BillTo","init","connectResult","this","loadedModels","names","style","display","push","destroy","pop","disconnect"],"mappings":";;;;;;;AAAAA,QAAQ,WAAY,qBAAsB,kBAC1C,SAASC,EAAKC,EAASC,GAEtB,IAAIC,KACAC,EAAe,KAEfC,EAAe,WAClBH,EAASI,KAAK,eAAeC,IAAI,QAASH,EAAa,GAAGI,OAC1DN,EAASI,KAAK,cAAcC,IAAI,QAASH,EAAa,GAAGK,MACzDP,EAASI,KAAK,eAAeC,IAAI,QAASH,EAAa,GAAGM,OAC1DR,EAASI,KAAK,sBAAsBC,IAAI,QAASH,EAAa,GAAGO,OAAOC,QACxEV,EAASI,KAAK,oBAAoBC,IAAI,QAASH,EAAa,GAAGO,OAAOE,MACtEX,EAASI,KAAK,qBAAqBC,IAAI,QAASH,EAAa,GAAGO,OAAOG,OACvEZ,EAASI,KAAK,mBAAmBC,IAAI,QAASH,EAAa,GAAGO,OAAOI,KACrEb,EAASI,KAAK,sBAAsBC,IAAI,QAASH,EAAa,GAAGY,OAAOJ,QACxEV,EAASI,KAAK,oBAAoBC,IAAI,QAASH,EAAa,GAAGY,OAAOH,MACtEX,EAASI,KAAK,qBAAqBC,IAAI,QAASH,EAAa,GAAGY,OAAOF,OACvEZ,EAASI,KAAK,mBAAmBC,IAAI,QAASH,EAAa,GAAGY,OAAOD,MAGtE,OAECE,KAAM,WAEL,IAAIC,EADJd,EAAee,KAAKC,aAAaC,MAGjCH,EAAgBjB,EAAQA,QAAQD,EAAIM,KAAK,UAAW,QAAS,WAE5DN,EAAIM,KAAK,aAAagB,MAAMC,QAAU,OACtCvB,EAAIM,KAAK,aAAagB,MAAMC,QAAU,KAEvCpB,EAAgBqB,KAAKN,GAErBA,EAAgBjB,EAAQA,QAAQD,EAAIM,KAAK,UAAW,QAAS,WAE5DN,EAAIM,KAAK,aAAagB,MAAMC,QAAU,GACtCvB,EAAIM,KAAK,aAAagB,MAAMC,QAAU,SAEvCpB,EAAgBqB,KAAKN,GAErBA,EAAgBjB,EAAQA,QAAQD,EAAIM,KAAK,UAAW,QAAS,WAE5DD,MAGDF,EAAgBqB,KAAKN,GAErBlB,EAAIM,KAAK,aAAagB,MAAMC,QAAU,OACtClB,KAKDoB,QAAS,WAER,IADA,IAAIP,EAAgBf,EAAgBuB,MAC9BR,GACLjB,EAAQ0B,WAAWT,GACnBA,EAAgBf,EAAgBuB","file":"../../../../../app/tests/modelApp/simple/simple.js","sourcesContent":["define([\"dojo/dom\", \"dojo/_base/connect\", \"dijit/registry\"],\r\nfunction(dom, connect, registry){\r\n\r\n\tvar _connectResults = []; // events connect results\r\n\tvar currentModel = null;\r\n\r\n\tvar setFromModel = function (){\r\n\t\tregistry.byId(\"firstInput1\").set('value', currentModel[0].First);\r\n\t\tregistry.byId(\"lastInput1\").set('value', currentModel[0].Last);\r\n\t\tregistry.byId(\"emailInput1\").set('value', currentModel[0].Email);\r\n\t\tregistry.byId(\"shiptostreetInput1\").set('value', currentModel[0].ShipTo.Street);\r\n\t\tregistry.byId(\"shiptocityInput1\").set('value', currentModel[0].ShipTo.City);\r\n\t\tregistry.byId(\"shiptostateInput1\").set('value', currentModel[0].ShipTo.State);\r\n\t\tregistry.byId(\"shiptozipInput1\").set('value', currentModel[0].ShipTo.Zip);\r\n\t\tregistry.byId(\"billtostreetInput1\").set('value', currentModel[0].BillTo.Street);\r\n\t\tregistry.byId(\"billtocityInput1\").set('value', currentModel[0].BillTo.City);\r\n\t\tregistry.byId(\"billtostateInput1\").set('value', currentModel[0].BillTo.State);\r\n\t\tregistry.byId(\"billtozipInput1\").set('value', currentModel[0].BillTo.Zip);\r\n\t};\r\n\r\n\treturn {\r\n\t\t// simple view init\r\n\t\tinit: function(){\r\n\t\t\tcurrentModel = this.loadedModels.names;\r\n\t\t\tvar connectResult;\r\n\r\n\t\t\tconnectResult = connect.connect(dom.byId('shipto'), \"click\", function(){\r\n\t\t\t\t//console.log(\"shipTo called. \");\r\n\t\t\t\tdom.byId(\"billtodiv\").style.display = \"none\";\r\n\t\t\t\tdom.byId(\"shiptodiv\").style.display = \"\";\r\n\t\t\t});\r\n\t\t\t_connectResults.push(connectResult);\r\n\r\n\t\t\tconnectResult = connect.connect(dom.byId('billto'), \"click\", function(){\r\n\t\t\t\t//console.log(\"billTo called. \");\r\n\t\t\t\tdom.byId(\"billtodiv\").style.display = \"\";\r\n\t\t\t\tdom.byId(\"shiptodiv\").style.display = \"none\";\r\n\t\t\t});\r\n\t\t\t_connectResults.push(connectResult);\r\n\r\n\t\t\tconnectResult = connect.connect(dom.byId('reset1'), \"click\", function(){\r\n\t\t\t\t//console.log(\"reset called. \");\r\n\t\t\t\tsetFromModel();\r\n\t\t\t\t//console.log(\"reset done. \");\r\n\t\t\t});\r\n\t\t\t_connectResults.push(connectResult);\r\n\r\n\t\t\tdom.byId(\"billtodiv\").style.display = \"none\";\r\n\t\t\tsetFromModel();\r\n\t\t\t\r\n\t\t},\r\n\r\n\t\t// simple view destroy\r\n\t\tdestroy: function(){\r\n\t\t\tvar connectResult = _connectResults.pop();\r\n\t\t\twhile(connectResult){\r\n\t\t\t\tconnect.disconnect(connectResult);\r\n\t\t\t\tconnectResult = _connectResults.pop();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n});\r\n"]}