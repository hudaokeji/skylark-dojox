{"version":3,"sources":["app/tests/scrollableTestApp/views/Scrollable1P.js"],"names":["define","dom","domStyle","connect","lang","declare","registry","at","TransitionEvent","Repeat","getStateful","Output","has","RoundRectList","WidgetList","Templated","ListItem","RoundRectWidListTemplate","_connectResults","repeatmodel","roundRectWidList","app","showListData","datamodel","set","clz","children","childClz","childParams","transitionOptions","title","target","url","params","cursor","this","indexAtStartup","clickable","onClick","console","log","setDetailsContext","childBindings","titleNode","value","templateString","placeAt","byId","startup","init","connectResult","loadedModels","repeatmodels","e","insertResult","model","length","push","showProgressIndicator","setTimeout","hitch","maxentries","i","data","id","Math","random","First","Last","Location","Office","Email","Tel","Fax","splice","beforeActivate","afterActivate","destroy","pop","disconnect"],"mappings":";;;;;;;AAAAA,QAAQ,WAAY,iBAAkB,qBAAsB,kBAAmB,qBAAsB,iBAAkB,eACvH,+BAAgC,mBAAoB,wBAAyB,mBAAoB,aACjG,6BAA8B,uBAAwB,sBAAuB,wBAAyB,oDACtG,SAASC,EAAKC,EAAUC,EAASC,EAAMC,EAASC,EAAUC,EAAIC,EAAiBC,EAAQC,EAAaC,EAAQC,EAAKC,EAAeC,EAAYC,EAC3IC,EAAUC,GACV,IAAIC,KAEAC,EAAc,KACdC,EAAmB,KAQnBC,EAAM,KAwBNC,EAAe,SAAkDC,GASpE,GAAIH,EAoBHA,EAAiBI,IAAI,WAAYjB,EAAGgB,EAAW,cApB3B,CACpB,IAAIE,EAAMpB,GAASS,EAAYD,QAC/BO,EAAmB,IAAIK,GACtBC,SAAUnB,EAAGgB,EAAW,SACxBI,SAAUtB,GAASU,EAAyDC,IAC5EY,aACCC,mBAAoBC,MAAM,UAAUC,OAAO,gBAAgBC,IAAI,iBAAiBC,QAAQC,OAASC,KAAKC,iBACtGC,WAAW,EACXC,QAAS,WACRC,QAAQC,IAAI,kCAAkCL,KAAKC,gBACnDf,EAAIoB,kBAAkBN,KAAKC,kBAE7BM,eACCC,WAAYC,MAAOrC,EAAG,OAAQ,WAE/BsC,eAAgB5B,KAEA6B,QAAQ7C,EAAI8C,KAAK,kBAClC3B,EAAiB4B,YAMnB,OACCC,KAAM,WAIL,IAAIC,EAHJ7B,EAAMc,KAAKd,IAEXF,EAAcgB,KAAKgB,aAAaC,aAGhCF,EAAgB/C,EAAQA,QAAQF,EAAI8C,KApEtB,gBAoEuC,QAAS,SAASM,GACtEhC,EAAIiC,aAAanC,EAAYoC,MAAMC,OAAO,EAAEH,KAE7CnC,EAAgBuC,KAAKP,GAErBA,EAAgB/C,EAAQA,QAAQF,EAAI8C,KAxErB,iBAwEuC,QAAS,WAE9D1B,EAAIqC,uBAAsB,GAC1BC,WAAWvD,EAAKwD,MAAMzB,KAAK,WAE1B,IADA,IAAI0B,EAAa1C,EAAYoC,MAAMC,OAAO,GAClCM,EAAI3C,EAAYoC,MAAMC,OAAQM,EAAID,EAAYC,IAAI,CACzD,IAAIC,GAAQC,GAAGC,KAAKC,SAAUC,MAAS,QAAQhD,EAAYoC,MAAMC,OAAQY,KAAQ,OAAOjD,EAAYoC,MAAMC,OAAQa,SAAY,KAAMC,OAAU,GAAIC,MAAS,GAAIC,IAAO,GAAIC,IAAO,IACjLtD,EAAYoC,MAAMmB,OAAOvD,EAAYoC,MAAMC,OAAQ,EAAG,IAAI9C,EAAYqD,IAEvE1C,EAAIqC,uBAAsB,KACvB,OAGLxC,EAAgBuC,KAAKP,GAErBA,EAAgB/C,EAAQA,QAAQF,EAAI8C,KAtFrB,iBAsFuC,QAAS,WAE9D1B,EAAIqC,uBAAsB,GAC1BC,WAAWvD,EAAKwD,MAAMzB,KAAK,WAE1B,IADA,IAAI0B,EAAa1C,EAAYoC,MAAMC,OAAO,GAClCM,EAAI3C,EAAYoC,MAAMC,OAAQM,GAAKD,EAAYC,IACtD3C,EAAYoC,MAAMmB,OAAOZ,EAAG,GAE7B3C,EAAYK,IAAI,cAAe,GAC/BH,EAAIqC,uBAAsB,KACvB,OAELxC,EAAgBuC,KAAKP,GAErB5B,EAAaa,KAAKgB,aAAaC,eAIhCuB,eAAgB,WAGZ1E,EAAI8C,KA9GI,eA8GanC,EAAI,UAC3BV,EAASsB,IAAIvB,EAAI8C,KA/GP,aA+GqB,aAAc,UAE3C9C,EAAI8C,KAAK,kBACX7C,EAASsB,IAAIvB,EAAI8C,KAAK,gBAAiB,aAAc,WACrD7C,EAASsB,IAAIvB,EAAI8C,KAAK,gBAAiB,aAAc,YAOtDzB,EAAaa,KAAKgB,aAAaC,eAGhCwB,cAAe,aAMfC,QAAS,WAER,IADA,IAAI3B,EAAgBhC,EAAgB4D,MAC9B5B,GACL/C,EAAQ4E,WAAW7B,GACnBA,EAAgBhC,EAAgB4D","file":"../../../../../app/tests/scrollableTestApp/views/Scrollable1P.js","sourcesContent":["define([\"dojo/dom\", \"dojo/dom-style\", \"dojo/_base/connect\", \"dojo/_base/lang\", \"dojo/_base/declare\", \"dijit/registry\", \"dojox/mvc/at\", \r\n\"dojox/mobile/TransitionEvent\", \"dojox/mvc/Repeat\", \"dojox/mvc/getStateful\", \"dojox/mvc/Output\", \"dojo/sniff\", \r\n\"dojox/mobile/RoundRectList\", \"dojox/mvc/WidgetList\", \"dojox/mvc/Templated\", \"dojox/mobile/ListItem\", \"dojo/text!../views/RoundRectWidListTemplate.html\"],\r\nfunction(dom, domStyle, connect, lang, declare, registry, at, TransitionEvent, Repeat, getStateful, Output, has, RoundRectList, WidgetList, Templated, \r\n\tListItem, RoundRectWidListTemplate){\r\n\tvar _connectResults = []; // events connect result\r\n\r\n\tvar repeatmodel = null;\t//repeat view data model\r\n\tvar roundRectWidList = null;\r\n\t\r\n\t// these ids are updated here and in the html file to avoid duplicate ids\r\n\tvar backId = 'sc1back1P';\r\n\tvar insert1Id = 'sc1insert1xP';\r\n\tvar insert10Id = 'sc1insert10xP';\r\n\tvar remove10Id = 'sc1remove10xP';\r\n\r\n\tvar app = null;\r\n\r\n\t// insert an item\r\n\tvar insertResult = function(index, e){\r\n\t\tif(index<0 || index>repeatmodel.model.length){\r\n\t\t\tthrow Error(\"index out of data model.\");\r\n\t\t}\r\n\t\tif((repeatmodel.model[index].First==\"\") ||\r\n\t\t\t(repeatmodel.model[index+1] && (repeatmodel.model[index+1].First == \"\"))){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar data = {id:Math.random(), \"First\": \"\", \"Last\": \"\", \"Location\": \"CA\", \"Office\": \"\", \"Email\": \"\", \"Tel\": \"\", \"Fax\": \"\"};\r\n\t\trepeatmodel.model.splice(index+1, 0, new getStateful(data));\r\n\t\tthis.app.setDetailsContext(index+1);\r\n\t\tvar transOpts = {\r\n\t\t\ttitle : \"repeatDetails\",\r\n\t\t\ttarget : \"repeatDetails\",\r\n\t\t\turl : \"#repeatDetails\", // this is optional if not set it will be created from target   \r\n\t\t\tparams : {\"cursor\":index+1}\r\n\t\t};\r\n\t\tnew TransitionEvent(e.target, transOpts, e).dispatch(); \r\n\t\t\r\n\t};\r\n\t\r\n\tvar showListData = function(/*dojox/mvc/EditStoreRefListController*/ datamodel){\r\n\t\t// summary:\r\n\t\t//\t\tcreate the WidgetList programatically if it has not been created, and \r\n\t\t//\t\tset the children for items_list widget to the datamodel to show the items in the selected list.\r\n\t\t//\t\tRoundRectWidListTemplate is used for the templateString of the WidgetList.\r\n\t\t//\r\n\t\t// datamodel: dojox/mvc/EditStoreRefListController\r\n\t\t//\t\tThe EditStoreRefListController whose model holds the items for the selected list.\r\n\t\t//\r\n\t\tif(!roundRectWidList){\r\n\t\t\tvar clz = declare([WidgetList, RoundRectList], {});\r\n\t\t\troundRectWidList = new clz({\r\n\t\t\t\tchildren: at(datamodel, 'model'),\r\n\t\t\t\tchildClz: declare([Templated /* dojox/mvc/Templated module return value */, ListItem /* dojox/mobile/ListItem module return value */]),\r\n\t\t\t\tchildParams: {\r\n\t\t\t\t\ttransitionOptions: {title:'Details',target:'repeatDetails',url:'#repeatDetails',params:{'cursor':this.indexAtStartup}},\r\n\t\t\t\t\tclickable: true,\r\n\t\t\t\t\tonClick: function(){\r\n\t\t\t\t\t\tconsole.log(\"in onClick this.indexAtStartup=\"+this.indexAtStartup);\r\n\t\t\t\t\t\tapp.setDetailsContext(this.indexAtStartup);}\r\n\t\t\t\t},\r\n\t\t\t\tchildBindings: {\r\n\t\t\t\t\ttitleNode: {value: at(\"rel:\", \"First\")}\r\n\t\t\t\t},\r\n\t\t\t\ttemplateString: RoundRectWidListTemplate\r\n\t\t\t});\r\n\t\t\troundRectWidList.placeAt(dom.byId(\"addWidgetHere\"));\r\n\t\t\troundRectWidList.startup();\r\n\t\t}else{\r\n\t\t\troundRectWidList.set(\"children\", at(datamodel, 'model'));\r\n\t\t}\r\n\t};\r\n\r\n\treturn {\r\n\t\tinit: function(){\r\n\t\t\tapp = this.app;\r\n\r\n\t\t\trepeatmodel = this.loadedModels.repeatmodels;\r\n\t\t\tvar connectResult;\r\n\r\n\t\t\tconnectResult = connect.connect(dom.byId(insert1Id), \"click\", function(e){\r\n\t\t\t\tapp.insertResult(repeatmodel.model.length-1,e);\r\n\t\t\t});\r\n\t\t\t_connectResults.push(connectResult);\r\n\r\n\t\t\tconnectResult = connect.connect(dom.byId(insert10Id), \"click\", function(){\r\n\t\t\t\t//Add 10 items to the end of the model\r\n\t\t\t\tapp.showProgressIndicator(true);\r\n\t\t\t\tsetTimeout(lang.hitch(this,function(){\r\n\t\t\t\t\tvar maxentries = repeatmodel.model.length+10;\r\n\t\t\t\t\tfor(var i = repeatmodel.model.length; i < maxentries; i++){\r\n\t\t\t\t\t\tvar data = {id:Math.random(), \"First\": \"First\"+repeatmodel.model.length, \"Last\": \"Last\"+repeatmodel.model.length, \"Location\": \"CA\", \"Office\": \"\", \"Email\": \"\", \"Tel\": \"\", \"Fax\": \"\"};\r\n\t\t\t\t\t\trepeatmodel.model.splice(repeatmodel.model.length, 0, new getStateful(data));\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tapp.showProgressIndicator(false);\r\n\t\t\t\t}), 100);\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t\t_connectResults.push(connectResult);\r\n\r\n\t\t\tconnectResult = connect.connect(dom.byId(remove10Id), \"click\", function(){\r\n\t\t\t\t//remove 10 items to the end of the model\r\n\t\t\t\tapp.showProgressIndicator(true);\r\n\t\t\t\tsetTimeout(lang.hitch(this,function(){\t\t\t\t\r\n\t\t\t\t\tvar maxentries = repeatmodel.model.length-10;\r\n\t\t\t\t\tfor(var i = repeatmodel.model.length; i >= maxentries; i--){\r\n\t\t\t\t\t\trepeatmodel.model.splice(i, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\trepeatmodel.set(\"cursorIndex\", 0);\t\t\r\n\t\t\t\t\tapp.showProgressIndicator(false);\r\n\t\t\t\t}), 100);\t\t\t\t\r\n\t\t\t});\r\n\t\t\t_connectResults.push(connectResult);\r\n\t\t\t\r\n\t\t\tshowListData(this.loadedModels.repeatmodels);\r\n\t\t},\r\n\r\n\r\n\t\tbeforeActivate: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tview life cycle beforeActivate()\r\n\t\t\tif(dom.byId(backId) && !has(\"phone\")){ \r\n\t\t\t\tdomStyle.set(dom.byId(backId), \"visibility\", \"hidden\"); // hide the back button in tablet mode\r\n\t\t\t}\r\n\t\t\tif(dom.byId(\"tab1WrapperA\")){ \r\n\t\t\t\tdomStyle.set(dom.byId(\"tab1WrapperA\"), \"visibility\", \"visible\");  // show the nav view if it being used\r\n\t\t\t\tdomStyle.set(dom.byId(\"tab1WrapperB\"), \"visibility\", \"visible\");  // show the nav view if it being used\r\n\t\t\t}\r\n\t\t\t//domStyle.set(dom.byId(wrapperIdA), \"visibility\", \"visible\");  // show the view when it is ready\r\n\t\t\t//domStyle.set(dom.byId(wrapperIdB), \"visibility\", \"visible\");  // show the view when it is ready\r\n\t\t\t//domStyle.set(dom.byId(wrapperIdC), \"visibility\", \"visible\");  // show the view when it is ready\r\n\t\t\t//domStyle.set(dom.byId(wrapperIdD), \"visibility\", \"visible\");  // show the view when it is ready\r\n\r\n\t\t\tshowListData(this.loadedModels.repeatmodels);\t\t\t\r\n\t\t},\r\n\r\n\t\tafterActivate: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tview life cycle afterActivate()\r\n\t\t},\r\n\t\t\r\n\t\t\r\n\t\tdestroy: function(){\r\n\t\t\tvar connectResult = _connectResults.pop();\r\n\t\t\twhile(connectResult){\r\n\t\t\t\tconnect.disconnect(connectResult);\r\n\t\t\t\tconnectResult = _connectResults.pop();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n});\r\n"]}