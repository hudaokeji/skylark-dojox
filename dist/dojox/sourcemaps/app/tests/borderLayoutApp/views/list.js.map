{"version":3,"sources":["app/tests/borderLayoutApp/views/list.js"],"names":["define","lang","setDetailsContext","index","e","params","cursor","transOpts","title","target","url","this","app","transitionToView","insertResult","list","store","data","length","Error","First","id","Math","random","label","rightIcon","Last","Location","Office","Email","Tel","Fax","add","init","Store","setStore","loadedStores","listStore","on","hitch","console","log","item","query","innerHTML","listInsert1","destroy"],"mappings":";;;;;;;AAAAA,QAAQ,mBAAoB,SAASC,GAGpC,OAECC,kBAAmB,SAASC,EAAOC,EAAGC,GAClCA,EACFA,EAAOC,OAASH,EAEhBE,GAAUC,OAASH,GAGpB,IAAII,GACHC,MAAQ,cACRC,OAAS,cACTC,IAAM,eACNL,OAASA,GAEVM,KAAKC,IAAIC,iBAAiBT,EAAEK,OAAOF,EAAUH,IAM9CU,aAAc,SAASX,EAAOC,GAC7B,GAAGD,EAAM,GAAKA,EAAMQ,KAAKI,KAAKC,MAAMC,KAAKC,OACxC,MAAMC,MAAM,4BAEb,KAAyC,IAArCR,KAAKI,KAAKC,MAAMC,KAAKd,EAAM,GAAGiB,OAChCT,KAAKI,KAAKC,MAAMC,KAAKd,IAAgD,IAArCQ,KAAKI,KAAKC,MAAMC,KAAKd,GAAOiB,OAD9D,CAIA,IAAIH,GAAQI,GAAGC,KAAKC,SAAUC,MAAS,GAAIC,UAAY,8BAA+BL,MAAS,GAAIM,KAAQ,GAAIC,SAAY,KAAMC,OAAU,GAAIC,MAAS,GAAIC,IAAO,GAAIC,IAAO,IAC9KpB,KAAKI,KAAKC,MAAMgB,IAAIf,GACpBN,KAAKT,kBAAkBC,EAAOC,KAK/B6B,KAAM,WACL,IAAIlB,EAAOJ,KAAKI,KACZA,EAAKmB,OACRnB,EAAKoB,SAASxB,KAAKyB,aAAaC,WAYjC1B,KAAKI,KAAKuB,GAAG,QAASrC,EAAKsC,MAAM5B,KAAM,SAASP,GAC/CoC,QAAQC,IAAI,qBAAqBrC,GACjC,IAAIsC,EAAO/B,KAAKI,KAAKC,MAAM2B,OAAOnB,MAASpB,EAAEK,OAAOmC,YAChDzC,EAAQQ,KAAKI,KAAKC,MAAMb,MAAMuC,EAAK,GAAGrB,IAC1CmB,QAAQC,IAAI,YAAYtC,GACxBQ,KAAKT,kBAAkBC,EAAOC,EAAGO,KAAKN,WAGvCM,KAAKkC,YAAYP,GAAG,QAASrC,EAAKsC,MAAM5B,KAAM,SAASP,GACtDoC,QAAQC,IAAI,4BAA4BrC,GACxC,IAAID,EAAQQ,KAAKI,KAAKC,MAAMC,KAAKC,OACjCP,KAAKG,aAAaX,EAAOC,OAM3B0C,QAAS","file":"../../../../../app/tests/borderLayoutApp/views/list.js","sourcesContent":["define([\"dojo/_base/lang\"], function(lang){\r\n\tvar _onResults = []; // events on array\r\n\r\n\treturn {\r\n\t// setDetailsContext for an item\r\n\t\tsetDetailsContext: function(index, e, params){\r\n\t\t\tif(params){\r\n\t\t\t\tparams.cursor = index;\r\n\t\t\t}else{\r\n\t\t\t\tparams = {\"cursor\":index};\r\n\t\t\t}\r\n\t\t\t// transition to itemDetails view with the &cursor=index\r\n\t\t\tvar transOpts = {\r\n\t\t\t\ttitle : \"itemDetails\",\r\n\t\t\t\ttarget : \"itemDetails\",\r\n\t\t\t\turl : \"#itemDetails\", // this is optional if not set it will be created from target   \r\n\t\t\t\tparams : params\r\n\t\t\t};\r\n\t\t\tthis.app.transitionToView(e.target,transOpts,e);\r\n \r\n\t\t\r\n\t\t},\r\n\r\n\t// insert an item\r\n\t\tinsertResult: function(index, e){\r\n\t\t\tif(index<0 || index>this.list.store.data.length){\r\n\t\t\t\tthrow Error(\"index out of data model.\");\r\n\t\t\t}\r\n\t\t\tif((this.list.store.data[index-1].First==\"\") ||\r\n\t\t\t\t(this.list.store.data[index] && (this.list.store.data[index].First == \"\"))){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar data = {id:Math.random(), \"label\": \"\", \"rightIcon\":\"mblDomButtonBlueCircleArrow\", \"First\": \"\", \"Last\": \"\", \"Location\": \"CA\", \"Office\": \"\", \"Email\": \"\", \"Tel\": \"\", \"Fax\": \"\"};\r\n\t\t\tthis.list.store.add(data);\r\n\t\t\tthis.setDetailsContext(index, e);\r\n\t\t},\r\n\r\n\r\n\t\t// list view init\r\n\t\tinit: function(){\r\n\t\t\tvar list = this.list;\r\n\t\t\tif(!list.Store){\r\n\t\t\t\tlist.setStore(this.loadedStores.listStore);\r\n\t\t\t}\r\n\t\t//\tfor(var i = 0; i < this.list.store.data.length; i++){\r\n\t\t//\t\tvar item = dom.byId(this.list.store.data[i].id);\r\n\t\t//\t\ton(item, \"click\", lang.hitch(this, function(e){\r\n\t\t//\t\t\tvar item = this.list.store.query({\"label\": e.target.innerHTML})\r\n\t\t//\t\t\tvar index = this.list.store.index[item[0].id];\r\n\t\t//\t\t\tconsole.log(\"index is \"+index);\r\n\t\t//\t\t\tthis.setDetailsContext(index, e, this.params);\r\n\t\t//\t\t})); \r\n\t\t//\t}\r\n\t\t\t\r\n\t\t\tthis.list.on(\"click\", lang.hitch(this, function(e){\r\n\t\t\t\tconsole.log(\"List on click hit \",e);\r\n\t\t\t\tvar item = this.list.store.query({\"label\": e.target.innerHTML});\r\n\t\t\t\tvar index = this.list.store.index[item[0].id];\r\n\t\t\t\tconsole.log(\"index is \"+index);\r\n\t\t\t\tthis.setDetailsContext(index, e, this.params);\t\r\n\t\t\t})); \r\n\r\n\t\t\tthis.listInsert1.on(\"click\", lang.hitch(this, function(e){\r\n\t\t\t\tconsole.log(\"listInsert1 on click hit \",e);\r\n\t\t\t\tvar index = this.list.store.data.length;\r\n\t\t\t\tthis.insertResult(index, e);\r\n\t\t\t})); \r\n\t\t\t\r\n\t\t},\r\n\r\n\t\t// view destroy, this destroy function can be removed since it is empty\r\n\t\tdestroy: function(){\r\n\t\t\t// _WidgetBase.on listener is automatically destroyed when the Widget itself is.\r\n\t\t}\r\n\t};\r\n});\r\n"]}