{"version":3,"sources":["app/tests/doh/error.js"],"names":["define","doh","Application","json","config1","config2","config3","config4","config5","configLast","topic","register","timeout","name","runTest","t","dohDeferred","Deferred","events","this","_topic","subscribe","evt","push","fromJson","setTimeout","getTestCallback","assertEqual","tearDown","remove","testApp","goterror","require","on","assertTrue","p","waiting","execQ","length"],"mappings":";;;;;;;AAAAA,QAAQ,MAAO,iBAAkB,iBAAkB,0BAA2B,0BAC7E,0BAA2B,0BAA2B,0BAA2B,6BAA8B,cAC/G,SAASC,EAAKC,EAAaC,EAAMC,EAASC,EAASC,EAASC,EAASC,EAASC,EAAYC,GAC1FT,EAAIU,SAAS,8BAEXC,QAAS,IACTC,KAAM,SACNC,QAAS,SAASC,GACjB,IAAIC,EAAc,IAAIf,EAAIgB,SAEtBC,KASJ,OARAC,KAAKC,OAASV,EAAMW,UAAU,cAAe,SAASC,GACrDJ,EAAOK,KAAKD,KAEbpB,EAAYC,EAAKqB,SAASpB,IAE1BqB,WAAWT,EAAYU,gBAAgB,WACtCX,EAAEY,aAAa,GAAIT,KAChB,KACGF,GAERY,SAAU,WACTT,KAAKC,OAAOS,gBAELC,WAIRlB,QAAS,IACTC,KAAM,SACNC,QAAS,SAASC,GACjB,IAAIC,EAAc,IAAIf,EAAIgB,SAEtBC,KASJ,OARAC,KAAKC,OAASV,EAAMW,UAAU,cAAe,SAASC,GACrDJ,EAAOK,KAAKD,KAEbpB,EAAYC,EAAKqB,SAASnB,IAE1BoB,WAAWT,EAAYU,gBAAgB,WACtCX,EAAEY,aAAa,GAAIT,KAChB,KACGF,GAERY,SAAU,WACTT,KAAKC,OAAOS,gBAELC,WAIRlB,QAAS,IACTC,KAAM,SACNC,QAAS,SAASC,GACjB,IAAIC,EAAc,IAAIf,EAAIgB,SAEtBC,KASJ,OARAC,KAAKC,OAASV,EAAMW,UAAU,cAAe,SAASC,GACrDJ,EAAOK,KAAKD,KAEbpB,EAAYC,EAAKqB,SAASlB,IAE1BmB,WAAWT,EAAYU,gBAAgB,WACtCX,EAAEY,aAAa,GAAIT,KAChB,KACGF,GAERY,SAAU,WACTT,KAAKC,OAAOS,gBAELC,WAIRlB,QAAS,IACTC,KAAM,SACNC,QAAS,SAASC,GACjB,IAAIC,EAAc,IAAIf,EAAIgB,SAEtBC,KASJ,OARAC,KAAKC,OAASV,EAAMW,UAAU,cAAe,SAASC,GACrDJ,EAAOK,KAAKD,KAEbpB,EAAYC,EAAKqB,SAASjB,IAE1BkB,WAAWT,EAAYU,gBAAgB,WACtCX,EAAEY,aAAa,GAAIT,KAChB,KACGF,GAERY,SAAU,WACTT,KAAKC,OAAOS,gBAELC,WAIRlB,QAAS,IACTC,KAAM,SACNC,QAAS,SAASC,GACjB,IAAIC,EAAc,IAAIf,EAAIgB,SAEtBC,KACAa,GAAW,EAgBf,OAfAZ,KAAKC,OAASV,EAAMW,UAAU,cAAe,SAASC,GACrDJ,EAAOK,KAAKD,KAEbU,SAAS,kBAAmB,SAAS9B,GACpC8B,QAAQC,IAAKD,QAAQC,GAAG,QAAS,WAChCF,GAAW,IAEZ7B,EAAYC,EAAKqB,SAAShB,IAG1BiB,WAAWT,EAAYU,gBAAgB,WACtCX,EAAEY,aAAa,GAAIT,GACnBH,EAAEmB,WAAWH,KACV,OAEEf,GAERY,SAAU,WACTT,KAAKC,OAAOS,gBAELC,WAIRlB,QAAS,IACTC,KAAM,YACNC,QAAS,SAASC,GACjB,IAAIC,EAAc,IAAIf,EAAIgB,SAEtBC,KAKJ,IAAI,IAAIiB,KAJRhB,KAAKC,OAASV,EAAMW,UAAU,cAAe,SAASC,GACrDJ,EAAOK,KAAKD,KAGAU,QAAQI,eACbJ,QAAQI,QAAQD,GAUxB,OARAH,QAAQK,MAAMC,OAAS,EACvBN,SAAS,kBAAmB,SAAS9B,GACpCA,EAAYC,EAAKqB,SAASf,IAE1BgB,WAAWT,EAAYU,gBAAgB,WACtCX,EAAEY,aAAa,GAAIT,KAChB,OAEEF,GAERY,SAAU,WAET,IAAI,IAAIO,KADRhB,KAAKC,OAAOS,SACCG,QAAQI,eACbJ,QAAQI,QAAQD,GAExBH,QAAQK,MAAMC,OAAS,SAEhBR","file":"../../../../app/tests/doh/error.js","sourcesContent":["define([\"doh\", \"dojox/app/main\", \"dojox/json/ref\", \"dojo/text!./error1.json\", \"dojo/text!./error2.json\",\r\n\t\"dojo/text!./error3.json\", \"dojo/text!./error4.json\", \"dojo/text!./error5.json\", \"dojo/text!./errorLast.json\", \"dojo/topic\"],\r\n\tfunction(doh, Application, json, config1, config2, config3, config4, config5, configLast, topic){\r\n\tdoh.register(\"dojox.app.tests.doh.error\", [\r\n\t\t{\r\n\t\t\ttimeout: 4000,\r\n\t\t\tname: \"error1\",\r\n\t\t\trunTest: function(t){\r\n\t\t\t\tvar dohDeferred = new doh.Deferred();\r\n\t\t\t\t// stack events that are pushed\r\n\t\t\t\tvar events = [];\r\n\t\t\t\tthis._topic = topic.subscribe(\"/app/status\", function(evt){\r\n\t\t\t\t\tevents.push(evt);\r\n\t\t\t\t});\r\n\t\t\t\tApplication(json.fromJson(config1));\r\n\t\t\t\t// we need to check that before timeout we _never_ entered the START (2) state\r\n\t\t\t\tsetTimeout(dohDeferred.getTestCallback(function(){\r\n\t\t\t\t\tt.assertEqual([1], events);\r\n\t\t\t\t}), 3000);\r\n\t\t\t\treturn dohDeferred;\r\n\t\t\t},\r\n\t\t\ttearDown: function(){\r\n\t\t\t\tthis._topic.remove();\r\n\t\t\t\t// maybe dojox/app should do that?\r\n\t\t\t\tdelete testApp;\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttimeout: 4000,\r\n\t\t\tname: \"error2\",\r\n\t\t\trunTest: function(t){\r\n\t\t\t\tvar dohDeferred = new doh.Deferred();\r\n\t\t\t\t// stack events that are pushed\r\n\t\t\t\tvar events = [];\r\n\t\t\t\tthis._topic = topic.subscribe(\"/app/status\", function(evt){\r\n\t\t\t\t\tevents.push(evt);\r\n\t\t\t\t});\r\n\t\t\t\tApplication(json.fromJson(config2));\r\n\t\t\t\t// we need to check that before timeout we _never_ entered the START (2) state\r\n\t\t\t\tsetTimeout(dohDeferred.getTestCallback(function(){\r\n\t\t\t\t\tt.assertEqual([1], events);\r\n\t\t\t\t}), 3000);\r\n\t\t\t\treturn dohDeferred;\r\n\t\t\t},\r\n\t\t\ttearDown: function(){\r\n\t\t\t\tthis._topic.remove();\r\n\t\t\t\t// maybe dojox/app should do that?\r\n\t\t\t\tdelete testApp;\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttimeout: 4000,\r\n\t\t\tname: \"error3\",\r\n\t\t\trunTest: function(t){\r\n\t\t\t\tvar dohDeferred = new doh.Deferred();\r\n\t\t\t\t// stack events that are pushed\r\n\t\t\t\tvar events = [];\r\n\t\t\t\tthis._topic = topic.subscribe(\"/app/status\", function(evt){\r\n\t\t\t\t\tevents.push(evt);\r\n\t\t\t\t});\r\n\t\t\t\tApplication(json.fromJson(config3));\r\n\t\t\t\t// we need to check that before timeout we _never_ entered the START (2) state\r\n\t\t\t\tsetTimeout(dohDeferred.getTestCallback(function(){\r\n\t\t\t\t\tt.assertEqual([1], events);\r\n\t\t\t\t}), 3000);\r\n\t\t\t\treturn dohDeferred;\r\n\t\t\t},\r\n\t\t\ttearDown: function(){\r\n\t\t\t\tthis._topic.remove();\r\n\t\t\t\t// maybe dojox/app should do that?\r\n\t\t\t\tdelete testApp;\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttimeout: 4000,\r\n\t\t\tname: \"error4\",\r\n\t\t\trunTest: function(t){\r\n\t\t\t\tvar dohDeferred = new doh.Deferred();\r\n\t\t\t\t// stack events that are pushed\r\n\t\t\t\tvar events = [];\r\n\t\t\t\tthis._topic = topic.subscribe(\"/app/status\", function(evt){\r\n\t\t\t\t\tevents.push(evt);\r\n\t\t\t\t});\r\n\t\t\t\tApplication(json.fromJson(config4));\r\n\t\t\t\t// we need to check that before timeout we _never_ entered the START (2) state\r\n\t\t\t\tsetTimeout(dohDeferred.getTestCallback(function(){\r\n\t\t\t\t\tt.assertEqual([1], events);\r\n\t\t\t\t}), 3000);\r\n\t\t\t\treturn dohDeferred;\r\n\t\t\t},\r\n\t\t\ttearDown: function(){\r\n\t\t\t\tthis._topic.remove();\r\n\t\t\t\t// maybe dojox/app should do that?\r\n\t\t\t\tdelete testApp;\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttimeout: 4000,\r\n\t\t\tname: \"error5\",\r\n\t\t\trunTest: function(t){\r\n\t\t\t\tvar dohDeferred = new doh.Deferred();\r\n\t\t\t\t// stack events that are pushed\r\n\t\t\t\tvar events = [];\r\n\t\t\t\tvar goterror = false;\r\n\t\t\t\tthis._topic = topic.subscribe(\"/app/status\", function(evt){\r\n\t\t\t\t\tevents.push(evt);\r\n\t\t\t\t});\r\n\t\t\t\trequire([\"dojox/app/main\"], function(Application){\r\n\t\t\t\t\trequire.on ? require.on(\"error\", function(){\r\n\t\t\t\t\t\tgoterror = true;\r\n\t\t\t\t\t}) : null;\r\n\t\t\t\t\tApplication(json.fromJson(config5));\r\n\t\t\t\t\t// we need to check that before timeout we _never_ entered the START (2) state\r\n\t\t\t\t\t// and we must check error has been thrown\r\n\t\t\t\t\tsetTimeout(dohDeferred.getTestCallback(function(){\r\n\t\t\t\t\t\tt.assertEqual([1], events);\r\n\t\t\t\t\t\tt.assertTrue(goterror);\r\n\t\t\t\t\t}), 3000);\r\n\t\t\t\t});\r\n\t\t\t\treturn dohDeferred;\r\n\t\t\t},\r\n\t\t\ttearDown: function(){\r\n\t\t\t\tthis._topic.remove();\r\n\t\t\t\t// maybe dojox/app should do that?\r\n\t\t\t\tdelete testApp;\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttimeout: 4000,\r\n\t\t\tname: \"errorLast\",\r\n\t\t\trunTest: function(t){\r\n\t\t\t\tvar dohDeferred = new doh.Deferred();\r\n\t\t\t\t// stack events that are pushed\r\n\t\t\t\tvar events = [];\r\n\t\t\t\tthis._topic = topic.subscribe(\"/app/status\", function(evt){\r\n\t\t\t\t\tevents.push(evt);\r\n\t\t\t\t});\r\n\t\t\t\t// to workaround http://trac.dojotoolkit.org/ticket/16032\r\n\t\t\t\tfor(var p in require.waiting){\r\n\t\t\t\t\tdelete require.waiting[p];\r\n\t\t\t\t}\r\n\t\t\t\trequire.execQ.length = 0;\r\n\t\t\t\trequire([\"dojox/app/main\"], function(Application){\r\n\t\t\t\t\tApplication(json.fromJson(configLast));\r\n\t\t\t\t\t// we need to check that before timeout we _never_ entered the START (2) state\r\n\t\t\t\t\tsetTimeout(dohDeferred.getTestCallback(function(){\r\n\t\t\t\t\t\tt.assertEqual([1], events);\r\n\t\t\t\t\t}), 3000);\r\n\t\t\t\t});\r\n\t\t\t\treturn dohDeferred;\r\n\t\t\t},\r\n\t\t\ttearDown: function(){\r\n\t\t\t\tthis._topic.remove();\r\n\t\t\t\tfor(var p in require.waiting){\r\n\t\t\t\t\tdelete require.waiting[p];\r\n\t\t\t\t}\r\n\t\t\t\trequire.execQ.length = 0;\r\n\t\t\t\t// maybe dojox/app should do that?\r\n\t\t\t\tdelete testApp;\r\n\t\t\t}\r\n\t\t}\r\n\t]);\r\n});\r\n"]}