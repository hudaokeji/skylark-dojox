{"version":3,"sources":["app/tests/scrollableTestApp2/views/ListItem-domButtons.js"],"names":["define","dom","domStyle","connect","registry","at","TransitionEvent","Repeat","getStateful","Output","has","_connectResults","init","beforeActivate","byId","set","destroy","connectResult","pop","disconnect"],"mappings":";;;;;;;AAAAA,QAAQ,WAAY,iBAAkB,qBAAsB,iBAAkB,eAAgB,+BAAgC,mBAC5H,wBAAyB,mBAAoB,cAC/C,SAASC,EAAKC,EAAUC,EAASC,EAAUC,EAAIC,EAAiBC,EAAQC,EAAaC,EAAQC,GAC5F,IAAIC,KAGJ,OAECC,KAAM,aAINC,eAAgB,WAGZZ,EAAIa,KAAK,cAAgBJ,EAAI,UAC/BR,EAASa,IAAId,EAAIa,KAAK,YAAa,aAAc,UAE/Cb,EAAIa,KAAK,kBACXZ,EAASa,IAAId,EAAIa,KAAK,gBAAiB,aAAc,WACrDZ,EAASa,IAAId,EAAIa,KAAK,gBAAiB,aAAc,aAMvDE,QAAS,WAER,IADA,IAAIC,EAAgBN,EAAgBO,MAC9BD,GACLd,EAAQgB,WAAWF,GACnBA,EAAgBN,EAAgBO","file":"../../../../../app/tests/scrollableTestApp2/views/ListItem-domButtons.js","sourcesContent":["define([\"dojo/dom\", \"dojo/dom-style\", \"dojo/_base/connect\", \"dijit/registry\", \"dojox/mvc/at\", \"dojox/mobile/TransitionEvent\", \"dojox/mvc/Repeat\", \r\n\t\t\"dojox/mvc/getStateful\", \"dojox/mvc/Output\", \"dojo/sniff\"],\r\nfunction(dom, domStyle, connect, registry, at, TransitionEvent, Repeat, getStateful, Output, has){\r\n\tvar _connectResults = []; // events connect result\r\n\r\n\r\n\treturn {\r\n\t\t// repeat view init\r\n\t\tinit: function(){\r\n\t\t},\r\n\r\n\r\n\t\tbeforeActivate: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tview life cycle beforeActivate()\r\n\t\t\tif(dom.byId(\"mli1back\") && !has(\"phone\")){ \r\n\t\t\t\tdomStyle.set(dom.byId(\"mli1back\"), \"visibility\", \"hidden\"); // hide the back button in tablet mode\r\n\t\t\t}\r\n\t\t\tif(dom.byId(\"tab1WrapperA\")){ \r\n\t\t\t\tdomStyle.set(dom.byId(\"tab1WrapperA\"), \"visibility\", \"visible\");  // show the nav view if it being used\r\n\t\t\t\tdomStyle.set(dom.byId(\"tab1WrapperB\"), \"visibility\", \"visible\");  // show the nav view if it being used\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t\r\n\t\t// view destroy\r\n\t\tdestroy: function(){\r\n\t\t\tvar connectResult = _connectResults.pop();\r\n\t\t\twhile(connectResult){\r\n\t\t\t\tconnect.disconnect(connectResult);\r\n\t\t\t\tconnectResult = _connectResults.pop();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n});\r\n"]}