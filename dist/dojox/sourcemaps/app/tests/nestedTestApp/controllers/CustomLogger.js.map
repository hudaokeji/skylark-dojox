{"version":3,"sources":["app/tests/nestedTestApp/controllers/CustomLogger.js"],"names":["define","declare","dom","domStyle","domClass","domAttr","domConstruct","dconfig","has","Controller","constructor","app","appLogging","loggingList","add","length","log","msg","logTimeStamp","Date","getTime","i","arguments","console","e","indexOf"],"mappings":";;;;;;;AAAAA,QAAQ,qBAAsB,WAAY,iBACzC,iBAAkB,gBAAiB,qBAAsB,oBAAqB,aAC9E,wBACA,SAAUC,EAASC,EAAKC,EAAUC,EAAUC,EAASC,EAAcC,EAASC,EAAKC,GAOhF,OAAOR,EAAQQ,GAEdC,YAAa,SAAUC,GAOtBA,EAAIC,WAAWD,EAAIC,eACnBD,EAAIC,WAAWC,YAAYF,EAAIC,WAAWC,gBAE1CL,EAAIM,IAAI,eAAiBP,EAAa,SAAiB,UAAKI,EAAIC,WAAmB,QACnFJ,EAAIM,IAAI,kBAAmBH,EAAIC,WAAWC,YAAYE,OAAS,IAE5DP,EAAI,gBAAkBA,EAAI,sBAC5BG,EAAIK,IAAI,WAQP,IAAIC,EAAI,GAIR,GAHGN,EAAIC,WAAWM,eACjBD,EAAIA,GAAM,IAAIE,MAAOC,UAAY,KAE/BZ,EAAI,gBAAkBG,EAAIC,WAAmB,OAC/C,IACC,IAAI,IAAIS,EAAE,EAAGA,EAAIC,UAAUP,OAAS,EAAGM,IACtCJ,EAAIA,EAAMK,UAAUD,GAAK,IAE1BE,QAAQP,IAAIC,EAAKK,UAAUA,UAAUP,OAAS,IAC7C,MAAOS,SAEH,GAAGhB,EAAI,mBACb,IACC,GAAGG,EAAIC,WAAWC,YAAYY,QAAQH,UAAU,KAAO,EAAE,CACxD,IAAQD,EAAE,EAAGA,EAAIC,UAAUP,OAAS,EAAGM,IACtCJ,GAAUK,UAAUD,GAErBE,QAAQP,IAAIC,EAAKK,UAAUA,UAAUP,OAAS,KAE9C,MAAOS","file":"../../../../../app/tests/nestedTestApp/controllers/CustomLogger.js","sourcesContent":["define([\"dojo/_base/declare\", \"dojo/dom\", \"dojo/dom-style\",\r\n\t\"dojo/dom-class\", \"dojo/dom-attr\", \"dojo/dom-construct\", \"dojo/_base/config\", \"dojo/sniff\",\r\n\t\"dojox/app/Controller\"],\r\n\tfunction (declare, dom, domStyle, domClass, domAttr, domConstruct, dconfig, has, Controller){\r\n\t\t// module:\r\n\t\t//\t\tdapp/tests/nestedTestApp/controllers/CustomLogger\r\n\t\t// summary:\r\n\t\t//\t\tA custom logger to handle a special case to only log messages for transitions\r\n\t\t//\t\tIt will replace the app.log function with the one in this controller\r\n\t\t//\r\n\t\treturn declare(Controller, {\r\n\r\n\t\t\tconstructor: function (app){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tbind \"app-initLayout\", \"app-layoutView\" and \"app-resize\" events on application instance.\r\n\t\t\t\t//\r\n\t\t\t\t// app:\r\n\t\t\t\t//\t\tdojox/app application instance.\r\n\t\t\t\t// dojo mobile events instead\r\n\t\t\t\tapp.appLogging=app.appLogging || {};\r\n\t\t\t\tapp.appLogging.loggingList=app.appLogging.loggingList || [];\r\n\r\n\t\t\t\thas.add(\"app-log-api\", ((dconfig[\"app\"] || {}).debugApp) || app.appLogging[\"logAll\"]);\r\n\t\t\t\thas.add(\"app-log-partial\", app.appLogging.loggingList.length > 0);\r\n\r\n\t\t\t\tif(has(\"app-log-api\") || has(\"app-log-partial\")){\r\n\t\t\t\t\tapp.log=function (){\r\n\t\t\t\t\t\t// summary:\r\n\t\t\t\t\t\t// If config is set to turn on app logging, then log msg to the console\r\n\t\t\t\t\t\t//\r\n\t\t\t\t\t\t// arguments:\r\n\t\t\t\t\t\t// the message to be logged,\r\n\t\t\t\t\t\t// all but the last argument will be treated as Strings and be concatenated together,\r\n\t\t\t\t\t\t// the last argument can be an object it will be added as an argument to the console.log\r\n\t\t\t\t\t\tvar msg=\"\";\r\n\t\t\t\t\t\tif(app.appLogging.logTimeStamp){\r\n\t\t\t\t\t\t\tmsg=msg + new Date().getTime() + \" \";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(has(\"app-log-api\") || app.appLogging[\"logAll\"]){ // log all messages\r\n\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\tfor(var i=0; i < arguments.length - 1; i++){\r\n\t\t\t\t\t\t\t\t\tmsg=msg + arguments[i] + \" \";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tconsole.log(msg, arguments[arguments.length - 1]);\r\n\t\t\t\t\t\t\t} catch (e){\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if(has(\"app-log-partial\")){ // only log specific things\r\n\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\tif(app.appLogging.loggingList.indexOf(arguments[0]) > -1){ // if the 1st arg is in the loggingList log it\r\n\t\t\t\t\t\t\t\t\tfor(var i=2; i < arguments.length - 1; i++){\r\n\t\t\t\t\t\t\t\t\t\tmsg=msg + arguments[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tconsole.log(msg, arguments[arguments.length - 1]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} catch (e){\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n"]}