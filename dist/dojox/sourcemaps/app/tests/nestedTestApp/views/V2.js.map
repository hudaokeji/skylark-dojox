{"version":3,"sources":["app/tests/nestedTestApp/views/V2.js"],"names":["define","dom","domStyle","connect","registry","has","TransitionEvent","_connectResults","list","app","init","this","connectResult","byId","listStart","listCount","setTimeout","i","newdata","label","stores","longlistStore","store","put","listTotal","push","beforeActivate","set","list2","setStore","afterActivate","timedAutoFlow","timed100Loops","loopCount","console","log","time","liWidget","domNode","params","dispatch","timeEnd","beforeDeactivate","afterDeactivate","destroy","pop","disconnect"],"mappings":";;;;;;;AAAAA,QAAQ,WAAY,iBAAkB,qBAAqB,iBAAkB,aAAc,gCAC3F,SAASC,EAAKC,EAAUC,EAASC,EAAUC,EAAKC,GAC9C,IAAIC,KACAC,EAAO,KAIPC,EAAM,KAqBX,OACCC,KAAM,WACLD,EAAME,KAAKF,IAEX,IAAIG,EAAgBT,EAAQA,QAAQF,EAAIY,KA1BxB,gBA0B0C,QAAS,WArBhEJ,IAGAA,EAAIK,YACPL,EAAIK,UAAY,EAChBL,EAAIM,UAAY,GAEjBC,WAAW,WACV,IAAI,IAAIC,EAAIR,EAAIK,UAAWG,EAAIR,EAAIK,UAAU,EAAGG,IAAI,CACnD,IAAIC,GAAWC,MAAS,SAASF,GACjCR,EAAIW,OAAOC,cAAcC,MAAMC,IAAIL,GAIpC,OAFAT,EAAIK,WAAaL,EAAIM,UACrBN,EAAIe,UAAYf,EAAIK,UAAU,GACvB,GACL,QAUFP,EAAgBkB,KAAKb,IAItBc,eAAgB,WAIZzB,EAAIY,KAvCK,cAuCYR,EAAI,UAC3BH,EAASyB,IAAI1B,EAAIY,KAxCN,YAwCoB,aAAc,UAG9CJ,EAAImB,MAAQxB,EAASS,KA5CT,UA8CZL,EAAOC,EAAImB,OACFN,OACRd,EAAKqB,SAASpB,EAAIW,OAAOC,cAAcC,OAGrCrB,EAAIY,KAAK,kBACXX,EAASyB,IAAI1B,EAAIY,KAAK,gBAAiB,aAAc,WACrDX,EAASyB,IAAI1B,EAAIY,KAAK,gBAAiB,aAAc,aAGvDiB,cAAe,WAEd,GAAInB,KAAKF,IAAIsB,eAAkBpB,KAAKF,IAAIuB,cAAxC,CAGIrB,KAAKF,IAAIwB,YACZtB,KAAKF,IAAIwB,UAAY,EACrBC,QAAQC,IAAI,8CACZD,QAAQE,KAAK,2BAEdzB,KAAKF,IAAIwB,YAET,IAAII,EAAW,KACf,GAAG1B,KAAKF,IAAIuB,cACRrB,KAAKF,IAAIwB,UAAY,KACvBI,EAAWjC,EAASS,KAAK,6BAEf,IAAIP,EAAgB+B,EAASC,QAASD,EAASE,QACrDC,YAGJN,QAAQC,IAAI,+CACZD,QAAQO,QAAQ,gCAWlB,GAP0B,IAAvB9B,KAAKF,IAAIwB,UACXI,EAAWjC,EAASS,KAAK,2BACM,IAAvBF,KAAKF,IAAIwB,UACjBI,EAAWjC,EAASS,KAAK,2BACM,IAAvBF,KAAKF,IAAIwB,YACjBI,EAAWjC,EAASS,KAAK,4BAEvBwB,EACO,IAAI/B,EAAgB+B,EAASC,QAASD,EAASE,QACrDC,aAGLE,iBAAkB,aAGlBC,gBAAiB,aAIjBC,QAAS,WAER,IADA,IAAIhC,EAAgBL,EAAgBsC,MAC9BjC,GACLT,EAAQ2C,WAAWlC,GACnBA,EAAgBL,EAAgBsC","file":"../../../../../app/tests/nestedTestApp/views/V2.js","sourcesContent":["define([\"dojo/dom\", \"dojo/dom-style\", \"dojo/_base/connect\",\"dijit/registry\", \"dojo/sniff\", \"dojox/mobile/TransitionEvent\"],\r\nfunction(dom, domStyle, connect, registry, has, TransitionEvent){\r\n\t\tvar _connectResults = []; // events connect result\r\n\t\tvar\tlist = null;\r\n\t\tvar listId = 'list2';\r\n\t\tvar backId = 'sc2back1';\r\n\t\tvar insert10Id = 'sc2insert10x';\r\n\t\tvar app = null;\r\n\t\tvar MODULE = \"V2\";\r\n\r\n\tvar loadMore = function(){\r\n\t\tif(!app){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(!app.listStart){\r\n\t\t\tapp.listStart = 1;\r\n\t\t\tapp.listCount = 5;\r\n\t\t}\r\n\t\tsetTimeout(function(){ // to simulate network latency\r\n\t\t\tfor(var i = app.listStart; i < app.listStart+5; i++){\r\n\t\t\t\tvar newdata = {'label': 'Item #'+i};\r\n\t\t\t\tapp.stores.longlistStore.store.put(newdata);\r\n\t\t\t}\r\n\t\t\tapp.listStart += app.listCount;\r\n\t\t\tapp.listTotal = app.listStart-1;\r\n\t\t\treturn false;\r\n\t\t}, 500);\r\n\t};\r\n\treturn {\r\n\t\tinit: function(){\r\n\t\t\tapp = this.app;\r\n\t\t\t\r\n\t\t\tvar connectResult = connect.connect(dom.byId(insert10Id), \"click\", function(){\r\n\t\t\t\t//Add 10 items to the end of the model\r\n\t\t\t\tloadMore();\r\n\t\t\t});\r\n\t\t\t_connectResults.push(connectResult);\r\n\t\t},\r\n\r\n\r\n\t\tbeforeActivate: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tview life cycle beforeActivate()\r\n\t\t\t//console.log(MODULE+\" beforeActivate\");\r\n\t\t\tif(dom.byId(backId) && !has(\"phone\")){\r\n\t\t\t\tdomStyle.set(dom.byId(backId), \"visibility\", \"hidden\"); // hide the back button in tablet mode\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tapp.list2 = registry.byId(listId);\r\n\r\n\t\t\tlist = app.list2;\r\n\t\t\tif(!list.store){\r\n\t\t\t\tlist.setStore(app.stores.longlistStore.store);\r\n\t\t\t}\r\n\r\n\t\t\tif(dom.byId(\"tab1WrapperA\")){ \r\n\t\t\t\tdomStyle.set(dom.byId(\"tab1WrapperA\"), \"visibility\", \"visible\");  // show the nav view if it being used\r\n\t\t\t\tdomStyle.set(dom.byId(\"tab1WrapperB\"), \"visibility\", \"visible\");  // show the nav view if it being used\r\n\t\t\t}\r\n\t\t},\r\n\t\tafterActivate: function(){\r\n\t\t\t//console.log(MODULE+\" afterActivate\");\r\n\t\t\tif(!this.app.timedAutoFlow && !this.app.timed100Loops){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(!this.app.loopCount){\r\n\t\t\t\tthis.app.loopCount = 0;\r\n\t\t\t\tconsole.log(\"V2:afterActivate loopCount = 0 start timer\");\r\n\t\t\t\tconsole.time(\"timing transition loop\");\r\n\t\t\t}\r\n\t\t\tthis.app.loopCount++;\r\n\t\t\t//console.log(MODULE+\" afterActivate this.app.loopCount=\"+this.app.loopCount);\r\n\t\t\tvar liWidget = null;\r\n\t\t\tif(this.app.timed100Loops){\r\n\t\t\t\tif(this.app.loopCount < 100) {\r\n\t\t\t\t\tliWidget = registry.byId(\"dojox_mobile_ListItem_6\"); //0 - P1,S1,V1 6 - P2,S2,Ss2,V5+P2,S2,Ss2,V6\r\n\t\t\t\t\tif(liWidget){\r\n\t\t\t\t\t\tvar ev = new TransitionEvent(liWidget.domNode, liWidget.params);\r\n\t\t\t\t\t\tev.dispatch();\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.log(\"V2:afterActivate loopCount = 100 stop timer\");\r\n\t\t\t\t\tconsole.timeEnd(\"timing transition loop\");\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(this.app.loopCount === 1){\r\n\t\t\t\tliWidget = registry.byId(\"dojox_mobile_ListItem_1\"); //V2\r\n\t\t\t}else if(this.app.loopCount === 2) {\r\n\t\t\t\tliWidget = registry.byId(\"dojox_mobile_ListItem_5\"); //V4\r\n\t\t\t}else if(this.app.loopCount === 7) {\r\n\t\t\t\tliWidget = registry.byId(\"dojox_mobile_ListItem_0\"); //P1,S1,V1\r\n\t\t\t}\r\n\t\t\tif(liWidget){\r\n\t\t\t\tvar ev = new TransitionEvent(liWidget.domNode, liWidget.params);\r\n\t\t\t\tev.dispatch();\r\n\t\t\t}\r\n\t\t},\r\n\t\tbeforeDeactivate: function(){\r\n\t\t\t//console.log(MODULE+\" beforeDeactivate\");\r\n\t\t},\r\n\t\tafterDeactivate: function(){\r\n\t\t\t//console.log(MODULE+\" afterDeactivate\");\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tvar connectResult = _connectResults.pop();\r\n\t\t\twhile(connectResult){\r\n\t\t\t\tconnect.disconnect(connectResult);\r\n\t\t\t\tconnectResult = _connectResults.pop();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n});\r\n"]}