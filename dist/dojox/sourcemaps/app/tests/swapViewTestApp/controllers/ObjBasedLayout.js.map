{"version":3,"sources":["app/tests/swapViewTestApp/controllers/ObjBasedLayout.js"],"names":["define","declare","dom","domStyle","domClass","domAttr","domConstruct","LayoutBase","initLayout","event","this","app","log","view","name","parent","constraint","parentId","parentDiv","byId","appendChild","domNode","class","add","inherited","arguments","onResize","hideView","set","showView"],"mappings":";;;;;;;AAAAA,QAAQ,qBAAsB,WAAY,iBACxC,iBAAkB,gBAAiB,qBACnC,oCACF,SAASC,EAASC,EAAKC,EAAUC,EAAUC,EAASC,EAAcC,GAQjE,OAAON,EAAQ,6DAA8DM,GAE5EC,WAAY,SAASC,GAWpBC,KAAKC,IAAIC,IAAI,iEAAiEH,EAAMI,KAAKC,KAAK,6BAA6BL,EAAMI,KAAKE,OAAOD,KAAK,KAGlJJ,KAAKC,IAAIC,IAAI,sEAAsEH,EAAMI,KAAKG,YAC9F,IAAIA,EAAaP,EAAMI,KAAKG,WACxBC,EAAWD,EACZA,EAAWC,WACbA,EAAWD,EAAWC,UAEvB,IAAIC,EAAYhB,EAAIiB,KAAKF,GACtBC,EACFA,EAAUE,YAAYX,EAAMI,KAAKQ,SAEjCZ,EAAMI,KAAKE,OAAOM,QAAQD,YAAYX,EAAMI,KAAKQ,SAE/CL,EAAWM,OACblB,EAASmB,IAAId,EAAMI,KAAKQ,QAASL,EAAWM,OAG7CZ,KAAKc,UAAUC,YAGhBC,SAAU,aAIVC,SAAU,SAASd,GAClBV,EAASyB,IAAIf,EAAKQ,QAAS,UAAW,SAGvCQ,SAAU,SAAShB,GAClBV,EAASyB,IAAIf,EAAKQ,QAAS,UAAW","file":"../../../../../app/tests/swapViewTestApp/controllers/ObjBasedLayout.js","sourcesContent":["define([\"dojo/_base/declare\", \"dojo/dom\", \"dojo/dom-style\",\r\n\t\t\"dojo/dom-class\", \"dojo/dom-attr\", \"dojo/dom-construct\", \r\n\t\t\"dojox/app/controllers/LayoutBase\"],\r\nfunction(declare, dom, domStyle, domClass, domAttr, domConstruct, LayoutBase){\r\n\t// module:\r\n\t//\t\tdojox/app/tests/swapViewTestApp/controllers/ObjBasedLayout\r\n\t// summary:\r\n\t//\t\tWill layout an application based upon constraint obj with id, and class.\r\n\t//\t\tEach view will be appended inside the div with the id that matches the value set in the constraints for the view.\r\n\t//\t\t\r\n\r\n\treturn declare(\"dojox/app/tests/swapViewTestApp/controllers/ObjBasedLayout\", LayoutBase, {\r\n\r\n\t\tinitLayout: function(event){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tResponse to dojox/app \"app-initLayout\" event which is setup in LayoutBase.\r\n\t\t\t//\t\tThe initLayout event is called once when the View is being created the first time.\r\n\t\t\t//\r\n\t\t\t// example:\r\n\t\t\t//\t\tUse emit to trigger \"app-initLayout\" event, and this function will respond to the event. For example:\r\n\t\t\t//\t\t|\tthis.app.emit(\"app-initLayout\", view);\r\n\t\t\t//\r\n\t\t\t// event: Object\r\n\t\t\t// |\t\t{\"view\": view, \"callback\": function(){}};\r\n\t\t\tthis.app.log(\"in app/controllers/ObjBasedLayout.initLayout event.view.name=[\",event.view.name,\"] event.view.parent.name=[\",event.view.parent.name,\"]\");\r\n\r\n\r\n\t\t\tthis.app.log(\"in app/controllers/ObjBasedLayout.initLayout event.view.constraint=\",event.view.constraint);\r\n\t\t\tvar constraint = event.view.constraint;  // constraint holds the region for this view, center, top etc.\r\n\t\t\tvar parentId = constraint;\r\n\t\t\tif(constraint.parentId){\r\n\t\t\t\tparentId = constraint.parentId;\r\n\t\t\t}\r\n\t\t\tvar parentDiv = dom.byId(parentId);\r\n\t\t\tif(parentDiv){  // If the parentDiv is found append this views domNode to it\r\n\t\t\t\tparentDiv.appendChild(event.view.domNode);\r\n\t\t\t}else{\r\n\t\t\t\tevent.view.parent.domNode.appendChild(event.view.domNode);\r\n\t\t\t}\r\n\t\t\tif(constraint.class){\r\n\t\t\t\tdomClass.add(event.view.domNode, constraint.class);  // set the class to the constraint\r\n\t\t\t}\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tonResize: function(){\r\n\t\t\t// do nothing on resize\r\n\t\t},\r\n\r\n\t\thideView: function(view){\r\n\t\t\tdomStyle.set(view.domNode, \"display\", \"none\");\r\n\t\t},\r\n\r\n\t\tshowView: function(view){\r\n\t\t\tdomStyle.set(view.domNode, \"display\", \"\");\r\n\t\t}\r\n\t});\r\n});\r\n"]}