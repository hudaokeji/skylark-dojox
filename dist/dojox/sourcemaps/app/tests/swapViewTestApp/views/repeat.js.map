{"version":3,"sources":["app/tests/swapViewTestApp/views/repeat.js"],"names":["define","dom","connect","registry","at","TransitionEvent","Repeat","getStateful","_connectResults","repeatmodel","setDetailsContext","index","e","set","transOpts","title","target","url","params","cursor","dispatch","getIndexFromId","nodeId","perfix","len","length","Error","substring","parseInt","init","this","loadedModels","repeatmodels","beforeActivate","connectResult","repeatDom","byId","id","push","model","First","data","Math","random","Last","Location","Office","Email","Tel","Fax","splice","insertResult","nextIndex","get","deleteResult","afterDeactivate","pop","disconnect","destroy"],"mappings":";;;;;;;AAAAA,QAAQ,WAAY,qBAAsB,iBAAkB,eAAgB,+BAAgC,mBAAoB,yBAChI,SAASC,EAAKC,EAASC,EAAUC,EAAIC,EAAiBC,EAAQC,GAC7D,IAAIC,KAEAC,EAAc,KAYdC,EAAoB,SAASC,EAAMC,GACtCH,EAAYI,IAAI,cAAeF,GAG/B,IAAIG,GACHC,MAAQ,2CACRC,OAAS,2CACTC,IAAM,4CACNC,QAAUC,OAASR,IAEpB,IAAIN,EAAgBO,EAAEI,OAAQF,EAAWF,GAAGQ,YAiBzCC,EAAiB,SAASC,EAAQC,GACrC,IAAIC,EAAMD,EAAOE,OACjB,GAAGH,EAAOG,QAAUD,EACnB,MAAME,MAAM,yBAEb,IAAIf,EAAQW,EAAOK,UAAUH,EAAKF,EAAOG,QACzC,OAAOG,SAASjB,IAGjB,OAECkB,KAAM,WACLpB,EAAcqB,KAAKC,aAAaC,cAGjCC,eAAgB,WAIf,IACIC,EADAC,EAAYlC,EAAImC,KAAK,gBAEzBF,EAAgBhC,EAAQA,QAAQiC,EAAW,6BAAgC,SAASvB,GACnF,IAAID,EAAQU,EAAeT,EAAEI,OAAOqB,GAAI,UACxC3B,EAAkBC,EAAOC,KAE1BJ,EAAgB8B,KAAKJ,GAErBA,EAAgBhC,EAAQA,QAAQiC,EAAW,6BAAgC,SAASvB,IAxCnE,SAASD,EAAOC,GAClC,GAAGD,EAAM,GAAKA,EAAMF,EAAY8B,MAAMd,OACrC,MAAMC,MAAM,4BAEb,KAAoC,IAAhCjB,EAAY8B,MAAM5B,GAAO6B,OAC3B/B,EAAY8B,MAAM5B,EAAM,IAA2C,IAApCF,EAAY8B,MAAM5B,EAAM,GAAG6B,OAD5D,CAIA,IAAIC,GAAQJ,GAAGK,KAAKC,SAAUH,MAAS,GAAII,KAAQ,GAAIC,SAAY,KAAMC,OAAU,GAAIC,MAAS,GAAIC,IAAO,GAAIC,IAAO,IACtHxC,EAAY8B,MAAMW,OAAOvC,EAAM,EAAG,EAAG,IAAIJ,EAAYkC,IACrD/B,EAAkBC,EAAM,EAAGC,IAgCzBuC,CADY9B,EAAeT,EAAEI,OAAOqB,GAAI,UACpBzB,KAErBJ,EAAgB8B,KAAKJ,GAErBA,EAAgBhC,EAAQA,QAAQiC,EAAW,6BAAgC,SAASvB,IArEnE,SAASD,GAC3B,IAAIyC,EAAY3C,EAAY4C,IAAI,eAC7BD,GAAazC,IACfyC,GAAsB,GAEvB3C,EAAY8B,MAAMW,OAAOvC,EAAO,GAChCF,EAAYI,IAAI,cAAeuC,GAiE7BE,CADYjC,EAAeT,EAAEI,OAAOqB,GAAI,aAGzC7B,EAAgB8B,KAAKJ,IAItBqB,gBAAiB,WAKhB,IADA,IAAIrB,EAAgB1B,EAAgBgD,MAC9BtB,GACLhC,EAAQuD,WAAWvB,GACnBA,EAAgB1B,EAAgBgD,OAKlCE,QAAS,WAER,IADA,IAAIxB,EAAgB1B,EAAgBgD,MAC9BtB,GACLhC,EAAQuD,WAAWvB,GACnBA,EAAgB1B,EAAgBgD","file":"../../../../../app/tests/swapViewTestApp/views/repeat.js","sourcesContent":["define([\"dojo/dom\", \"dojo/_base/connect\", \"dijit/registry\", \"dojox/mvc/at\", \"dojox/mobile/TransitionEvent\", \"dojox/mvc/Repeat\", \"dojox/mvc/getStateful\"],\r\nfunction(dom, connect, registry, at, TransitionEvent, Repeat, getStateful){\r\n\tvar _connectResults = []; // events connect result\r\n\r\n\tvar repeatmodel = null;\t//repeat view data model\r\n\r\n\t// delete an item\r\n\tvar deleteResult = function(index){\r\n\t\tvar nextIndex = repeatmodel.get(\"cursorIndex\");\r\n\t\tif(nextIndex >= index){\r\n\t\t\tnextIndex = nextIndex-1;\r\n\t\t}\r\n\t\trepeatmodel.model.splice(index, 1);\r\n\t\trepeatmodel.set(\"cursorIndex\", nextIndex);\t\t\r\n\t};\r\n\t// show an item detail\r\n\tvar setDetailsContext = function(index,e){\r\n\t\trepeatmodel.set(\"cursorIndex\", index);\r\n\r\n\t\t// transition to repeatDetails view with the &cursor=index\r\n\t\tvar transOpts = {\r\n\t\t\ttitle : \"TestInfo+simple+repeatDetails+navigation\",\r\n\t\t\ttarget : \"TestInfo+simple+repeatDetails+navigation\",\r\n\t\t\turl : \"#TestInfo+simple+repeatDetails+navigation\", // this is optional if not set it will be created from target\r\n\t\t\tparams : {\"cursor\":index}\r\n\t\t};\r\n\t\tnew TransitionEvent(e.target, transOpts, e).dispatch(); \r\n\t\t\r\n\t};\r\n\t// insert an item\r\n\tvar insertResult = function(index, e){\r\n\t\tif(index<0 || index>repeatmodel.model.length){\r\n\t\t\tthrow Error(\"index out of data model.\");\r\n\t\t}\r\n\t\tif((repeatmodel.model[index].First==\"\") ||\r\n\t\t\t(repeatmodel.model[index+1] && (repeatmodel.model[index+1].First == \"\"))){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar data = {id:Math.random(), \"First\": \"\", \"Last\": \"\", \"Location\": \"CA\", \"Office\": \"\", \"Email\": \"\", \"Tel\": \"\", \"Fax\": \"\"};\r\n\t\trepeatmodel.model.splice(index+1, 0, new getStateful(data));\r\n\t\tsetDetailsContext(index+1, e);\r\n\t};\r\n\t// get index from dom node id\r\n\tvar getIndexFromId = function(nodeId, perfix){\r\n\t\tvar len = perfix.length;\r\n\t\tif(nodeId.length <= len){\r\n\t\t\tthrow Error(\"repeat node id error.\");\r\n\t\t}\r\n\t\tvar index = nodeId.substring(len, nodeId.length);\r\n\t\treturn parseInt(index);\r\n\t};\r\n\r\n\treturn {\r\n\t\t// repeat view init\r\n\t\tinit: function(){\r\n\t\t\trepeatmodel = this.loadedModels.repeatmodels;\r\n\t\t},\r\n\t\t\r\n\t\tbeforeActivate: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tview life cycle beforeActivate()\r\n\t\t\t//\r\n\t\t\tvar repeatDom = dom.byId('repeatWidget');\r\n\t\t\tvar connectResult;\r\n\t\t\tconnectResult = connect.connect(repeatDom, \"button[id^=\\\"detail\\\"]:click\", function(e){\r\n\t\t\t\tvar index = getIndexFromId(e.target.id, \"detail\");\r\n\t\t\t\tsetDetailsContext(index, e);\r\n\t\t\t});\r\n\t\t\t_connectResults.push(connectResult);\r\n\r\n\t\t\tconnectResult = connect.connect(repeatDom, \"button[id^=\\\"insert\\\"]:click\", function(e){\r\n\t\t\t\tvar index = getIndexFromId(e.target.id, \"insert\");\r\n\t\t\t\tinsertResult(index, e);\r\n\t\t\t});\r\n\t\t\t_connectResults.push(connectResult);\r\n\r\n\t\t\tconnectResult = connect.connect(repeatDom, \"button[id^=\\\"delete\\\"]:click\", function(e){\r\n\t\t\t\tvar index = getIndexFromId(e.target.id, \"delete\");\r\n\t\t\t\tdeleteResult(index);\r\n\t\t\t});\r\n\t\t\t_connectResults.push(connectResult);\r\n\r\n\t\t},\r\n\r\n\t\tafterDeactivate: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tview life cycle beforeActivate()\r\n\t\t\t//\r\n\t\t\tvar connectResult = _connectResults.pop();\r\n\t\t\twhile(connectResult){\r\n\t\t\t\tconnect.disconnect(connectResult);\r\n\t\t\t\tconnectResult = _connectResults.pop();\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t// view destroy\r\n\t\tdestroy: function(){\r\n\t\t\tvar connectResult = _connectResults.pop();\r\n\t\t\twhile(connectResult){\r\n\t\t\t\tconnect.disconnect(connectResult);\r\n\t\t\t\tconnectResult = _connectResults.pop();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n});\r\n"]}