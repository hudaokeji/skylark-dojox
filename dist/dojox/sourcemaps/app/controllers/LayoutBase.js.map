{"version":3,"sources":["app/controllers/LayoutBase.js"],"names":["define","lang","declare","has","win","config","domAttr","topic","domStyle","constraints","Controller","constructor","app","events","this","app-initLayout","initLayout","app-layoutView","layoutView","app-resize","onResize","mblHideAddressBar","subscribe","hitch","bind","global","hash","_doResize","selectedChildren","event","set","view","domNode","id","callback","_doLayout","console","warn","log","parent","parentSelChild","getSelectedChild","constraint","removeView","viewShowing","hideView","setSelectedChild","transition","currentLastSubChildMatch","showView","style","visibility"],"mappings":";;;;;;;AAAAA,QAAQ,kBAAmB,qBAAsB,aAAc,oBAAqB,oBAClF,gBAAiB,aAAc,iBAAkB,uBAAwB,iBAC3E,SAASC,EAAMC,EAASC,EAAKC,EAAKC,EAAQC,EAASC,EAAOC,EAAUC,EAAaC,GAMhF,OAAOR,EAAQ,mCAAoCQ,GAElDC,YAAa,SAASC,EAAKC,GAQ1BC,KAAKD,QACJE,iBAAkBD,KAAKE,WACvBC,iBAAkBH,KAAKI,WACvBC,aAAcL,KAAKM,UAIjBf,EAAOgB,kBACTd,EAAMe,UAAU,+BAAgCrB,EAAKsB,MAAMT,KAAMA,KAAKM,WAGtEN,KAAKU,KAAKpB,EAAIqB,OAAQtB,EAAI,OAAS,oBAAsB,SAAUF,EAAKsB,MAAMT,KAAMA,KAAKM,YAI3FA,SAAU,WAIT,IAAI,IAAIM,KAHRZ,KAAKa,UAAUb,KAAKF,KAGJE,KAAKF,IAAIgB,iBACrBd,KAAKF,IAAIgB,iBAAiBF,IAC5BZ,KAAKa,UAAUb,KAAKF,IAAIgB,iBAAiBF,KAM5CV,WAAY,SAASa,GAUpBvB,EAAQwB,IAAID,EAAME,KAAKC,QAAS,KAAMH,EAAME,KAAKE,IAC9CJ,EAAMK,UACRL,EAAMK,YAIRC,UAAW,SAASJ,GAOfA,GACHK,QAAQC,KAAK,uBAIfV,UAAW,SAASI,GAMnBjB,KAAKF,IAAI0B,IAAI,8CAA8CP,EAAKE,GAAG,SAASF,GAC5EjB,KAAKqB,UAAUJ,IAGhBb,WAAY,SAASW,GAUpB,IAAIU,EAASV,EAAMU,QAAUzB,KAAKF,IAC9BmB,EAAOF,EAAME,KAEjB,GAAIA,EAAJ,CAIAjB,KAAKF,IAAI0B,IAAI,qDAAqDT,EAAME,KAAKE,IAG7E,IAAIO,EAAiB/B,EAAYgC,iBAAiBF,EAAQR,EAAKW,YAC5Db,EAAMc,YACRZ,EAAKa,aAAc,EACnB9B,KAAK+B,SAASd,GACXA,GAAQS,GACV/B,EAAYqC,iBAAiBP,EAAQR,EAAKW,WAAY,OAE/CX,IAASS,GACdA,IAEFA,EAAeI,aAAc,EACN,QAApBf,EAAMkB,YAAwBlB,EAAMmB,2BAA6BR,GACnE1B,KAAK+B,SAASL,IAGhBT,EAAKa,aAAc,EACnB9B,KAAKmC,SAASlB,GAEdtB,EAAYqC,iBAAiBP,EAAQR,EAAKW,WAAYX,IAEtDA,EAAKa,aAAc,IAIrBC,SAAU,SAASd,GAClBjB,KAAKF,IAAI0B,IAAI,kBAAkB,yDAA4DP,EAAKE,GAAG,kBAAkBF,EAAKC,QAAQkB,MAAMC,WAAW,KACnJ3C,EAASsB,IAAIC,EAAKC,QAAS,UAAW,SAGvCiB,SAAU,SAASlB,GACfA,EAAKC,UACPlB,KAAKF,IAAI0B,IAAI,kBAAkB,+DAAkEP,EAAKE,GAAG,kBAAkBF,EAAKC,QAAQkB,MAAMC,WAAW,KACzJ3C,EAASsB,IAAIC,EAAKC,QAAS,UAAW","file":"../../../app/controllers/LayoutBase.js","sourcesContent":["define([\"dojo/_base/lang\", \"dojo/_base/declare\", \"dojo/sniff\", \"dojo/_base/window\", \"dojo/_base/config\",\r\n\t\t\"dojo/dom-attr\", \"dojo/topic\", \"dojo/dom-style\", \"../utils/constraints\", \"../Controller\"],\r\nfunction(lang, declare, has, win, config, domAttr, topic, domStyle, constraints, Controller){\r\n\t// module:\r\n\t//\t\tdojox/app/controllers/LayoutBase\r\n\t// summary:\r\n\t//\t\tBind \"app-initLayout\", \"app-layoutView\" and \"app-resize\" events on application instance.\r\n\r\n\treturn declare(\"dojox.app.controllers.LayoutBase\", Controller, {\r\n\r\n\t\tconstructor: function(app, events){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tbind \"app-initLayout\", \"app-layoutView\" and \"app-resize\" events on application instance.\r\n\t\t\t//\r\n\t\t\t// app:\r\n\t\t\t//\t\tdojox/app application instance.\r\n\t\t\t// events:\r\n\t\t\t//\t\t{event : handler}\r\n\t\t\tthis.events = {\r\n\t\t\t\t\"app-initLayout\": this.initLayout,\r\n\t\t\t\t\"app-layoutView\": this.layoutView,\r\n\t\t\t\t\"app-resize\": this.onResize\r\n\t\t\t};\r\n\t\t\t// if we are using dojo mobile & we are hiding address bar we need to be bit smarter and listen to\r\n\t\t\t// dojo mobile events instead\r\n\t\t\tif(config.mblHideAddressBar){\r\n\t\t\t\ttopic.subscribe(\"/dojox/mobile/afterResizeAll\", lang.hitch(this, this.onResize));\r\n\t\t\t}else{\r\n\t\t\t\t// bind to browsers orientationchange event for ios otherwise bind to browsers resize\r\n\t\t\t\tthis.bind(win.global, has(\"ios\") ? \"orientationchange\" : \"resize\", lang.hitch(this, this.onResize));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonResize: function(){\r\n\t\t\tthis._doResize(this.app);\r\n\t\t\t// this is needed to resize the children on an orientation change or a resize of the browser.\r\n\t\t\t// it was being done in _doResize, but was not needed for every call to _doResize.\r\n\t\t\tfor(var hash in this.app.selectedChildren){\t// need this to handle all selectedChildren\r\n\t\t\t\tif(this.app.selectedChildren[hash]){\r\n\t\t\t\t\tthis._doResize(this.app.selectedChildren[hash]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t},\r\n\t\t\r\n\t\tinitLayout: function(event){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tResponse to dojox/app \"app-initLayout\" event.\r\n\t\t\t//\r\n\t\t\t// example:\r\n\t\t\t//\t\tUse emit to trigger \"app-initLayout\" event, and this function will respond to the event. For example:\r\n\t\t\t//\t\t|\tthis.app.emit(\"app-initLayout\", view);\r\n\t\t\t//\r\n\t\t\t// event: Object\r\n\t\t\t// |\t\t{\"view\": view, \"callback\": function(){}};\r\n\t\t\tdomAttr.set(event.view.domNode, \"id\", event.view.id);\t// Set the id for the domNode\r\n\t\t\tif(event.callback){\t// if the event has a callback, call it.\r\n\t\t\t\tevent.callback();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_doLayout: function(view){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tdo view layout.\r\n\t\t\t//\r\n\t\t\t// view: Object\r\n\t\t\t//\t\tview instance needs to do layout.\r\n\r\n\t\t\tif(!view){\r\n\t\t\t\tconsole.warn(\"layout empty view.\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_doResize: function(view){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tresize view.\r\n\t\t\t//\r\n\t\t\t// view: Object\r\n\t\t\t//\t\tview instance needs to do resize.\r\n\t\t\tthis.app.log(\"in LayoutBase _doResize called for view.id=\"+view.id+\" view=\",view);\r\n\t\t\tthis._doLayout(view);\r\n\t\t},\r\n\r\n\t\tlayoutView: function(event){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tResponse to dojox/app \"app-layoutView\" event.\r\n\t\t\t//\r\n\t\t\t// example:\r\n\t\t\t//\t\tUse emit to trigger \"app-layoutView\" event, and this function will response the event. For example:\r\n\t\t\t//\t\t|\tthis.app.emit(\"app-layoutView\", view);\r\n\t\t\t//\r\n\t\t\t// event: Object\r\n\t\t\t// |\t\t{\"parent\":parent, \"view\":view, \"removeView\": boolean}\r\n\t\t\tvar parent = event.parent || this.app;\r\n\t\t\tvar view = event.view;\r\n\r\n\t\t\tif(!view){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.app.log(\"in LayoutBase layoutView called for event.view.id=\"+event.view.id);\r\n\r\n\t\t\t// if the parent has a child in the view constraint it has to be hidden, and this view displayed.\r\n\t\t\tvar parentSelChild = constraints.getSelectedChild(parent, view.constraint);\r\n\t\t\tif(event.removeView){\t// if this view is being removed set display to none and the selectedChildren entry to null\r\n\t\t\t\tview.viewShowing = false;\r\n\t\t\t\tthis.hideView(view);\r\n\t\t\t\tif(view == parentSelChild){\r\n\t\t\t\t\tconstraints.setSelectedChild(parent, view.constraint, null);\t// remove from selectedChildren\r\n\t\t\t\t}\r\n\t\t\t}else if(view !== parentSelChild){\r\n\t\t\t\tif(parentSelChild){\r\n\t\t\t\t//\tdomStyle.set(parentSelChild.domNode, \"zIndex\", 25);\r\n\t\t\t\t\tparentSelChild.viewShowing = false;\r\n\t\t\t\t\tif(event.transition == \"none\" || event.currentLastSubChildMatch !== parentSelChild){\r\n\t\t\t\t\t\tthis.hideView(parentSelChild); // only call hideView for transition none or when the transition will not hide it\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tview.viewShowing = true;\r\n\t\t\t\tthis.showView(view);\r\n\t\t\t\t//domStyle.set(view.domNode, \"zIndex\", 50);\r\n\t\t\t\tconstraints.setSelectedChild(parent, view.constraint, view);\r\n\t\t\t}else{ // this view is already the selected child and showing\r\n\t\t\t\tview.viewShowing = true;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\thideView: function(view){\r\n\t\t\tthis.app.log(\"logTransitions:\",\"LayoutBase\"+\" setting domStyle display none for view.id=[\"+view.id+\"], visibility=[\"+view.domNode.style.visibility+\"]\");\r\n\t\t\tdomStyle.set(view.domNode, \"display\", \"none\");\r\n\t\t},\r\n\r\n\t\tshowView: function(view){\r\n\t\t\tif(view.domNode){\r\n\t\t\t\tthis.app.log(\"logTransitions:\",\"LayoutBase\"+\" setting domStyle display to display for view.id=[\"+view.id+\"], visibility=[\"+view.domNode.style.visibility+\"]\");\r\n\t\t\t\tdomStyle.set(view.domNode, \"display\", \"\");\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n"]}