{"version":3,"sources":["app/controllers/Layout.js"],"names":["define","declare","lang","array","win","query","domGeom","domAttr","domStyle","registry","LayoutBase","layout","constraints","has","constructor","app","events","onResize","this","_doResize","resizeSelectedChildren","w","hash","selectedChildren","domNode","log","id","forEach","children","child","byId","resize","initLayout","event","view","parent","name","parentNode","parentElement","useConfigOrder","appendChild","addViewToParentDomByConstraint","set","constraint","inherited","arguments","newViewConstraint","insertBefore","firstChild","length","childIndex","isltr","get","LEADING_VIEW","TRAILING_VIEW","getAttribute","previousViewConstraint","node","mb","mixin","getMarginBox","cs","getComputedStyle","me","getMarginExtents","be","getBorderExtents","bb","_borderBox","h","pe","getPadExtents","_contentBox","l","toPixelValue","paddingLeft","t","paddingTop","global","innerHeight","doc","documentElement","clientHeight","innerWidth","clientWidth","layoutView","doResize","_doLayout","selectedChild","getSelectedChild","isFullScreen","console","warn","map","getEnclosingWidget","_constraint","filter","c","layoutChildren"],"mappings":"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","file":"../../../app/controllers/Layout.js","sourcesContent":["define([\"dojo/_base/declare\", \"dojo/_base/lang\", \"dojo/_base/array\", \"dojo/_base/window\",\r\n\t\t\"dojo/query\", \"dojo/dom-geometry\", \"dojo/dom-attr\", \"dojo/dom-style\", \"dijit/registry\",\r\n\t\t\"./LayoutBase\", \"../utils/layout\", \"../utils/constraints\", \"dojo/sniff\"],\r\nfunction(declare, lang, array, win, query, domGeom, domAttr, domStyle, registry, LayoutBase, layout, constraints, has){\r\n\t// module:\r\n\t//\t\tdojox/app/controllers/Layout\r\n\t// summary:\r\n\t//\t\tExtends LayoutBase which binds \"app-initLayout\", \"app-layoutView\" and \"app-resize\" events on application instance.\r\n\r\n\treturn declare(\"dojox.app.controllers.Layout\", LayoutBase, {\r\n\r\n\t\tconstructor: function(app, events){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tbind \"app-initLayout\" and \"app-layoutView\" events on application instance.\r\n\t\t\t//\r\n\t\t\t// app:\r\n\t\t\t//\t\tdojox/app application instance.\r\n\t\t\t// events:\r\n\t\t\t//\t\t{event : handler}\r\n\t\t},\r\n\r\n\t\tonResize: function(){\r\n\t\t\tthis._doResize(this.app);\r\n\t\t\t// this is needed to resize the children on an orientation change or a resize of the browser.\r\n\t\t\t// it was being done in _doResize, but was not needed for every call to _doResize.\r\n\t\t\tthis.resizeSelectedChildren(this.app);\r\n\t\t},\r\n\r\n\r\n\t\tresizeSelectedChildren: function(w){\r\n\t\t\tfor(var hash in w.selectedChildren){\t// need this to handle all selectedChildren\r\n\t\t\t\tif(w.selectedChildren[hash] && w.selectedChildren[hash].domNode){\r\n\t\t\t\t\tthis.app.log(\"in Layout resizeSelectedChildren calling resizeSelectedChildren calling _doResize for w.selectedChildren[hash].id=\"+w.selectedChildren[hash].id);\r\n\t\t\t\t\tthis._doResize(w.selectedChildren[hash]);\r\n\t\t\t\t\t// Call resize on child widgets, needed to get the scrollableView to resize correctly initially\t\r\n\t\t\t\t\tarray.forEach(w.selectedChildren[hash].domNode.children, function(child){\r\n\t\t\t\t\t\tif(registry.byId(child.id) && registry.byId(child.id).resize){ \r\n\t\t\t\t\t\t\tregistry.byId(child.id).resize(); \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\t\r\n\r\n\t\t\t\t\tthis.resizeSelectedChildren(w.selectedChildren[hash]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitLayout: function(event){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tResponse to dojox/app \"app-initLayout\" event.\r\n\t\t\t//\r\n\t\t\t// example:\r\n\t\t\t//\t\tUse emit to trigger \"app-initLayout\" event, and this function will respond to the event. For example:\r\n\t\t\t//\t\t|\tthis.app.emit(\"app-initLayout\", view);\r\n\t\t\t//\r\n\t\t\t// event: Object\r\n\t\t\t// |\t\t{\"view\": view, \"callback\": function(){}};\r\n\t\t\tthis.app.log(\"in app/controllers/Layout.initLayout event=\",event);\r\n\t\t\tthis.app.log(\"in app/controllers/Layout.initLayout event.view.parent.name=[\",event.view.parent.name,\"]\");\r\n\r\n\t\t\tif (!event.view.domNode.parentNode || (has(\"ie\") == 8 && !event.view.domNode.parentElement)) {\r\n\t\t\t\tif(this.app.useConfigOrder){\r\n\t\t\t\t\tevent.view.parent.domNode.appendChild(event.view.domNode);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.addViewToParentDomByConstraint(event);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdomAttr.set(event.view.domNode, \"data-app-constraint\", event.view.constraint);\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\taddViewToParentDomByConstraint: function(event){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInsert the view domNode into the parent domNode based upon the constraints.\r\n\t\t\t//\t\tIt should layout the children in this order: top, left, center, right, bottom\r\n\t\t\t//\t\tUnless it is rtl then it should layout the children in this order: top, right, center, left, bottom\r\n\t\t\t//\r\n\t\t\t// event: Object\r\n\t\t\t// |\t\t{\"parent\":parent, \"view\":view, \"removeView\": boolean}\r\n\t\t\tvar newViewConstraint = event.view.constraint;\r\n\t\t\tif(newViewConstraint === \"bottom\"){ // if new is bottom always place last\r\n\t\t\t\tevent.view.parent.domNode.appendChild(event.view.domNode);\r\n\t\t\t}else if(newViewConstraint === \"top\"){ // if new is top always place first\r\n\t\t\t\tevent.view.parent.domNode.insertBefore(event.view.domNode, event.view.parent.domNode.firstChild);\r\n\t\t\t}else{ // need to compare new constraint to the previous ones\r\n\t\t\t\tif(event.view.parent.domNode.children.length > 0){ // parent node has children, check constraints\r\n\t\t\t\t\t// in this loop if previous is top or left skip it and look for next child, otherwise process it\r\n\t\t\t\t\tfor(var childIndex in event.view.parent.domNode.children){\r\n\t\t\t\t\t\tvar child = event.view.parent.domNode.children[childIndex];\r\n\t\t\t\t\t\tvar dir = domStyle.get(event.view.parent.domNode,\"direction\");\r\n\t\t\t\t\t\tvar isltr = (dir === \"ltr\");\r\n\t\t\t\t\t\tvar LEADING_VIEW = isltr ? \"left\" : \"right\";\r\n\t\t\t\t\t\tvar TRAILING_VIEW = isltr ? \"right\" : \"left\";\r\n\t\t\t\t\t\tif(child.getAttribute && child.getAttribute(\"data-app-constraint\")) {\r\n\t\t\t\t\t\t\tvar previousViewConstraint = child.getAttribute(\"data-app-constraint\");\r\n \t\t\t\t\t\t\t// if previous is bottom or previous is Trailing\r\n \t\t\t\t\t\t\t// or previous is not top and newView is Leading we need to insert before this child\r\n\t\t\t\t\t\t\tif(previousViewConstraint === \"bottom\" ||\r\n\t\t\t\t\t\t\t\t(previousViewConstraint === TRAILING_VIEW) ||\r\n\t\t\t\t\t\t\t\t(previousViewConstraint !== \"top\" &&\r\n\t\t\t\t\t\t\t\t\t(newViewConstraint === LEADING_VIEW))){\r\n\t\t\t\t\t\t\t\tevent.view.parent.domNode.insertBefore(event.view.domNode, child);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// if the domNode was not added to the parent yet add it to the end now\r\n\t\t\tif (!event.view.domNode.parentNode || (has(\"ie\") == 8 && !event.view.domNode.parentElement)) {\r\n\t\t\t\tevent.view.parent.domNode.appendChild(event.view.domNode);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_doResize: function(view){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tresize view.\r\n\t\t\t//\r\n\t\t\t// view: Object\r\n\t\t\t//\t\tview instance needs to do layout.\r\n\t\t\tvar node = view.domNode;\r\n\t\t\tif(!node){\r\n\t\t\t\tthis.app.log(\"Warning - View has not been loaded, in Layout _doResize view.domNode is not set for view.id=\"+view.id+\" view=\",view);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// If either height or width wasn't specified by the user, then query node for it.\r\n\t\t\t// But note that setting the margin box and then immediately querying dimensions may return\r\n\t\t\t// inaccurate results, so try not to depend on it.\r\n\t\t\tvar mb = {};\r\n\t\t\tif( !(\"h\" in mb) || !(\"w\" in mb) ){\r\n\t\t\t\tmb = lang.mixin(domGeom.getMarginBox(node), mb);\t// just use dojo/_base/html.marginBox() to fill in missing values\r\n\t\t\t}\r\n\r\n\t\t\t// Compute and save the size of my border box and content box\r\n\t\t\t// (w/out calling dojo/_base/html.contentBox() since that may fail if size was recently set)\r\n\t\t\tif(view !== this.app){\r\n\t\t\t\tvar cs = domStyle.getComputedStyle(node);\r\n\t\t\t\tvar me = domGeom.getMarginExtents(node, cs);\r\n\t\t\t\tvar be = domGeom.getBorderExtents(node, cs);\r\n\t\t\t\tvar bb = (view._borderBox = {\r\n\t\t\t\t\tw: mb.w - (me.w + be.w),\r\n\t\t\t\t\th: mb.h - (me.h + be.h)\r\n\t\t\t\t});\r\n\t\t\t\tvar pe = domGeom.getPadExtents(node, cs);\r\n\t\t\t\tview._contentBox = {\r\n\t\t\t\t\tl: domStyle.toPixelValue(node, cs.paddingLeft),\r\n\t\t\t\t\tt: domStyle.toPixelValue(node, cs.paddingTop),\r\n\t\t\t\t\tw: bb.w - pe.w,\r\n\t\t\t\t\th: bb.h - pe.h\r\n\t\t\t\t};\r\n\t\t\t}else{\r\n\t\t\t\t// if we are layouting the top level app the above code does not work when hiding address bar\r\n\t\t\t\t// so let's use similar code to dojo mobile.\r\n\t\t\t\tview._contentBox = {\r\n\t\t\t\t\tl: 0,\r\n\t\t\t\t\tt: 0,\r\n\t\t\t\t\th: win.global.innerHeight || win.doc.documentElement.clientHeight,\r\n\t\t\t\t\tw: win.global.innerWidth || win.doc.documentElement.clientWidth\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tlayoutView: function(event){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tResponse to dojox/app \"app-layoutView\" event.\r\n\t\t\t//\r\n\t\t\t// example:\r\n\t\t\t//\t\tUse emit to trigger \"app-layoutView\" event, and this function will response the event. For example:\r\n\t\t\t//\t\t|\tthis.app.emit(\"app-layoutView\", view);\r\n\t\t\t//\r\n\t\t\t// event: Object\r\n\t\t\t// |\t\t{\"parent\":parent, \"view\":view, \"removeView\": boolean}\r\n\t\t\tif(event.view){\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t\t// normally when called from transition doResize will be false, and the resize will only be done when the app-resize event is fired\r\n\t\t\t\tif(event.doResize){\r\n\t\t\t\t\tthis._doResize(event.parent || this.app);\r\n\t\t\t\t\tthis._doResize(event.view);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_doLayout: function(view){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tdo view layout.\r\n\t\t\t//\r\n\t\t\t// view: Object\r\n\t\t\t//\t\tview instance needs to do layout.\r\n\r\n\t\t\tif(!view){\r\n\t\t\t\tconsole.warn(\"layout empty view.\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.app.log(\"in Layout _doLayout called for view.id=\"+view.id+\" view=\",view);\r\n\r\n\t\t\tvar children;\r\n\t\t\t// TODO: probably need to handle selectedChildren here, not just selected child...\r\n\t\t\t// TODO: why are we passing view here? not parent? This call does not seem logical?\r\n\t\t\tvar selectedChild = constraints.getSelectedChild(view, view.constraint);\r\n\t\t\tif(selectedChild && selectedChild.isFullScreen){\r\n\t\t\t\tconsole.warn(\"fullscreen sceen layout\");\r\n\t\t\t\t/*\r\n\t\t\t\t fullScreenScene=true;\r\n\t\t\t\t children=[{domNode: selectedChild.domNode,constraint: \"center\"}];\r\n\t\t\t\t query(\"> [constraint]\",this.domNode).forEach(function(c){\r\n\t\t\t\t if(selectedChild.domNode!==c.domNode){\r\n\t\t\t\t dstyle(c.domNode,\"display\",\"none\");\r\n\t\t\t\t }\r\n\t\t\t\t })\r\n\t\t\t\t */\r\n\t\t\t}else{\r\n\t\t\t\tchildren = query(\"> [data-app-constraint]\", view.domNode).map(function(node){\r\n\t\t\t\t\tvar w = registry.getEnclosingWidget(node);\r\n\t\t\t\t\tif(w){\r\n\t\t\t\t\t\tw._constraint = domAttr.get(node, \"data-app-constraint\");\r\n\t\t\t\t\t\treturn w;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tdomNode: node,\r\n\t\t\t\t\t\t_constraint: domAttr.get(node, \"data-app-constraint\")\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tif(selectedChild){\r\n\t\t\t\t\tchildren = array.filter(children, function(c){\r\n\t\t\t\t\t\t// do not need to set display none here it is set in select.\r\n\t\t\t\t\t\treturn c.domNode && c._constraint;\r\n\t\t\t\t\t}, view);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// We don't need to layout children if this._contentBox is null for the operation will do nothing.\r\n\t\t\tif(view._contentBox){\r\n\t\t\t\tlayout.layoutChildren(view.domNode, view._contentBox, children);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n"]}