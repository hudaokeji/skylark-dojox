{"version":3,"sources":["app/controllers/HistoryHash.js"],"names":["define","lang","declare","topic","on","Controller","hash","constructor","app","this","events","app-domNode","onDomNodeChange","domNode","oldNode","newNode","subscribe","hitch","newhash","_onHashChange","_historyStack","_historyLen","_historyDiff","_current","_next","_previous","_index","_oldHistoryLen","_newHistoryLen","_addToHistoryStack","_startTransitionEvent","currentHash","window","location","length","substr","push","url","href","detail","target","history","evt","unbind","bind","onStartTransition","regex","test","match","params","buildWithParams","_addHistory","Error","splice","emit","viewId","getTarget","opts","getParams","_back","_forward","index","i","_go","log","defaultView","publish","mixin","reverse","step"],"mappings":"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","file":"../../../app/controllers/HistoryHash.js","sourcesContent":["define([\"dojo/_base/lang\", \"dojo/_base/declare\", \"dojo/topic\", \"dojo/on\", \"../Controller\", \"../utils/hash\", \"dojo/hash\"],\r\n\tfunction(lang, declare, topic, on, Controller, hash){\r\n\t// module:\r\n\t//\t\tdojox/app/controllers/HistoryHash\r\n\t// summary:\r\n\t//\t\tBind \"app-domNode\" event on dojox/app application instance,\r\n\t//\t\tBind \"startTransition\" event on dojox/app application domNode,\r\n\t//\t\tBind \"/dojo/hashchange\" event on window object.\r\n\t//\t\tMaintain history by history hash.\r\n\r\n\treturn declare(\"dojox.app.controllers.HistoryHash\", Controller, {\r\n\r\n\t\tconstructor: function(app){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tBind \"app-domNode\" event on dojox/app application instance,\r\n\t\t\t//\t\tBind \"startTransition\" event on dojox/app application domNode,\r\n\t\t\t//\t\tsubscribe \"/dojo/hashchange\" event.\r\n\t\t\t//\r\n\t\t\t// app:\r\n\t\t\t//\t\tdojox/app application instance.\r\n\t\t\tthis.events = {\r\n\t\t\t\t\"app-domNode\": this.onDomNodeChange\r\n\t\t\t};\r\n\t\t\tif(this.app.domNode){\r\n\t\t\t\tthis.onDomNodeChange({oldNode: null, newNode: this.app.domNode});\r\n\t\t\t}\r\n\t\t\ttopic.subscribe(\"/dojo/hashchange\", lang.hitch(this, function(newhash){\r\n\t\t\t\tthis._onHashChange(newhash);\r\n\t\t\t}));\r\n\r\n\t\t\tthis._historyStack = []; // application history stack\r\n\t\t\tthis._historyLen = 0;\t// current window.history length\r\n\t\t\tthis._historyDiff = 0; // the diff of window.history stack and application history stack \r\n\t\t\tthis._current = null;\t// current history item in application history stack\r\n\t\t\tthis._next = null;\t\t// next history item in application history stack\r\n\t\t\tthis._previous = null;\t// previous history item in application history stack\r\n\t\t\tthis._index = 0;\t\t// identify current history item's index in application history stack\r\n\t\t\tthis._oldHistoryLen = 0;// window.history stack length before hash change\r\n\t\t\tthis._newHistoryLen = 0;// window.history stack length after hash change\r\n\t\t\tthis._addToHistoryStack = false;\r\n\t\t\tthis._startTransitionEvent = false;\r\n\r\n\t\t\t// push the default page to the history stack\r\n\t\t\tvar currentHash = window.location.hash;\r\n\t\t\tif(currentHash && (currentHash.length > 1)){\r\n\t\t\t\tcurrentHash = currentHash.substr(1);\r\n\t\t\t}\r\n\t\t\tthis._historyStack.push({\r\n\t\t\t\t\"hash\": currentHash,\r\n\t\t\t\t\"url\": window.location.href,\r\n\t\t\t\t\"detail\": {target:currentHash}\r\n\t\t\t});\r\n\t\t\tthis._historyLen = window.history.length;\r\n\t\t\tthis._index = this._historyStack.length - 1;\r\n\t\t\tthis._current = currentHash;\r\n\r\n\t\t\t// get the diff of window.history and application history\r\n\t\t\tthis._historyDiff = window.history.length - this._historyStack.length;\r\n\t\t},\r\n\r\n\t\tonDomNodeChange: function(evt){\r\n\t\t\tif(evt.oldNode != null){\r\n\t\t\t\tthis.unbind(evt.oldNode, \"startTransition\");\r\n\t\t\t}\r\n\t\t\tthis.bind(evt.newNode, \"startTransition\", lang.hitch(this, this.onStartTransition));\r\n\t\t},\r\n\r\n\t\tonStartTransition: function(evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tResponse to dojox/app \"startTransition\" event.\r\n\t\t\t//\r\n\t\t\t// example:\r\n\t\t\t//\t\tUse \"dojox/mobile/TransitionEvent\" to trigger \"startTransition\" event, and this function will response the event. For example:\r\n\t\t\t//\t\t|\tvar transOpts = {\r\n\t\t\t//\t\t|\t\ttitle:\"List\",\r\n\t\t\t//\t\t|\t\ttarget:\"items,list\",\r\n\t\t\t//\t\t|\t\turl: \"#items,list\"\r\n\t\t\t//\t\t|\t\tparams: {\"param1\":\"p1value\"}\r\n\t\t\t//\t\t|\t};\r\n\t\t\t//\t\t|\tnew TransitionEvent(domNode, transOpts, e).dispatch();\r\n\t\t\t//\r\n\t\t\t// evt: Object\r\n\t\t\t//\t\ttransition options parameter\r\n\r\n\t\t\tvar target = evt.detail.target;\r\n\t\t\tvar regex = /#(.+)/;\r\n\t\t\tif(!target && regex.test(evt.detail.href)){\r\n\t\t\t\ttarget = evt.detail.href.match(regex)[1];\r\n\t\t\t}\r\n\r\n\t\t\tvar currentHash = evt.detail.url || \"#\" + target;\r\n\r\n\t\t\tif(evt.detail.params){\r\n\t\t\t\tcurrentHash = hash.buildWithParams(currentHash, evt.detail.params);\r\n\t\t\t}\r\n\r\n\t\t\tthis._oldHistoryLen = window.history.length;\r\n\t\t\t// pushState on iOS will not change location bar hash because of security.\r\n\t\t\t// window.history.pushState(evt.detail, title, currentHash);\r\n\r\n\t\t\t// history.length will be changed by set location hash\r\n\t\t\t// change url hash, to workaround iOS pushState not change address bar issue.\r\n\t\t\twindow.location.hash = currentHash;\r\n\r\n\t\t\t// The operation above will trigger hashchange.\r\n\t\t\t// Use _addToHistoryStack flag to indicate the _onHashChange method should add this hash to history stack.\r\n\t\t\t// When add hash to history stack, this flag should be set to false, we do this in _addHistory.\r\n\t\t\tthis._addToHistoryStack = true;\r\n\t\t\t//set startTransition event flag to true if the hash change from startTransition event.\r\n\t\t\tthis._startTransitionEvent = true;\r\n\t\t},\r\n\r\n\t\t_addHistory: function(hash){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdd hash to application history stack, update history management flags.\r\n\t\t\t//\r\n\t\t\t// hash:\r\n\t\t\t//\t\tnew hash should be added to _historyStack.\r\n\t\t\tthis._historyStack.push({\r\n\t\t\t\t\"hash\": hash,\r\n\t\t\t\t\"url\": window.location.href,\r\n\t\t\t\t\"detail\": {target:hash}\r\n\t\t\t});\r\n\r\n\t\t\tthis._historyLen = window.history.length;\r\n\t\t\tthis._index = this._historyStack.length - 1;\r\n\r\n\t\t\tthis._previous = this._current;\r\n\t\t\tthis._current = hash;\r\n\t\t\tthis._next = null;\r\n\r\n\t\t\tthis._historyDiff = window.history.length - this._historyStack.length;\r\n\r\n\t\t\t// In order to make sure _addToHistoryStack flag invalid after add hash to history stack,\r\n\t\t\t// we set this flag to false in every addHistory operation even if it's already false.\r\n\t\t\tthis._addToHistoryStack = false;\r\n\t\t},\r\n\r\n\t\t_onHashChange: function(currentHash){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsubscribe /dojo/hashchange and do add history, back, forward and go operation.\r\n\t\t\t//\r\n\t\t\t// currentHash:\r\n\t\t\t//\t\tthe new url hash when /dojo/hashchange is triggered.\r\n\r\n\t\t\tif(this._index < 0 || this._index > (window.history.length - 1)){\r\n\t\t\t\tthrow Error(\"Application history out of management.\");\r\n\t\t\t}\r\n\r\n\t\t\tthis._newHistoryLen = window.history.length;\r\n\r\n\t\t\t// Application history stack asynchronized with window.history, refresh application history stack.\r\n\t\t\tif(this._oldHistoryLen > this._newHistoryLen){\r\n\t\t\t\t//console.log(\"need to refresh _historyStack, oldLen:\"+this._oldHistoryLen+\", newLen: \"+this._newHistoryLen+\", diff:\"+this._historyDiff);\r\n\t\t\t\tthis._historyStack.splice((this._newHistoryLen - this._historyDiff - 1), (this._historyStack.length - 1));\r\n\r\n\t\t\t\t// Reset _historyLen to make sure this._historyLen<window.history.length, so it will push this hash to history stack.\r\n\t\t\t\tthis._historyLen = this._historyStack.length;\r\n\r\n\t\t\t\t// Reset this._oldHistoryLen, so it can avoid refresh history stack again in some situation,\r\n\t\t\t\t// because by doing this, this._oldHistoryLen !== this._newHistoryLen\r\n\t\t\t\tthis._oldHistoryLen = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// this._oldHistoryLen === this._newHistoryLen, it maybe need to refresh history stack or do history go, back and forward,\r\n\t\t\t// so we use _addToHistoryStack to identify the refresh operation.\r\n\t\t\tif(this._addToHistoryStack && (this._oldHistoryLen === this._newHistoryLen)){\r\n\t\t\t\tthis._historyStack.splice((this._newHistoryLen - this._historyDiff - 1), (this._historyStack.length - 1));\r\n\t\t\t\tthis._addHistory(currentHash);\r\n\r\n\t\t\t\t// It's a refresh operation, so that's no need to check history go, back or forward, just return.\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//window.history.length increase, add hash to application history stack.\r\n\t\t\tif(this._historyLen < window.history.length){\r\n\t\t\t\tthis._addHistory(currentHash);\r\n\t\t\t\tif(!this._startTransitionEvent){\r\n\t\t\t\t\t// transition to the target view\r\n\t\t\t\t\tthis.app.emit(\"app-transition\", {\r\n\t\t\t\t\t\tviewId: hash.getTarget(currentHash),\r\n\t\t\t\t\t\topts: { params: hash.getParams(currentHash) || {} }\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(currentHash == this._current){\r\n\t\t\t\t\t// console.log(\"do nothing.\");\r\n\t\t\t\t}else if(currentHash === this._previous){ // back\r\n\t\t\t\t\tthis._back(currentHash, this._historyStack[this._index][\"detail\"]);\r\n\t\t\t\t}else if(currentHash === this._next){ //forward\r\n\t\t\t\t\tthis._forward(currentHash, this._historyStack[this._index][\"detail\"]);\r\n\t\t\t\t}else{ // go\r\n\t\t\t\t\t//search in \"back\" first, then \"forward\"\r\n\t\t\t\t\tvar index = -1;\r\n\t\t\t\t\tfor(var i = this._index; i > 0; i--){\r\n\t\t\t\t\t\tif(currentHash === this._historyStack[i][\"hash\"]){\r\n\t\t\t\t\t\t\tindex = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//search in \"forward\"\r\n\t\t\t\t\tif(-1 === index){\r\n\t\t\t\t\t\tfor(var i = this._index; i < this._historyStack.length; i++){\r\n\t\t\t\t\t\t\tif(currentHash === this._historyStack[i][\"hash\"]){\r\n\t\t\t\t\t\t\t\tindex = i;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(0 < index < this._historyStack.length){\r\n\t\t\t\t\t\tthis._go(index, (index - this._index));\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.app.log(\"go error. index out of history stack.\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// set startTransition event flag to false\r\n\t\t\tthis._startTransitionEvent = false;\r\n\t\t},\r\n\r\n\t\t_back: function(currentHash, detail){\r\n\t\t\tthis.app.log(\"back\");\r\n\t\t\tthis._next = this._historyStack[this._index][\"hash\"];\r\n\t\t\tthis._index--;\r\n\t\t\tif(this._index > 0){\r\n\t\t\t\tthis._previous = this._historyStack[this._index - 1][\"hash\"];\r\n\t\t\t}else{\r\n\t\t\t\tthis._previous = null;\r\n\t\t\t}\r\n\t\t\tthis._current = currentHash;\r\n\r\n\t\t\tvar target = hash.getTarget(currentHash, this.app.defaultView);\r\n\r\n\t\t\t// publish history back event\r\n\t\t\ttopic.publish(\"/app/history/back\", {\"viewId\": target, \"detail\": detail});\r\n\r\n\t\t\t// transition to the target view\r\n\t\t\tthis.app.emit(\"app-transition\", {\r\n\t\t\t\tviewId: target,\r\n \t\t\t\topts: lang.mixin({reverse: true}, detail, {\"params\": hash.getParams(currentHash)})\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_forward: function(currentHash, detail){\r\n\t\t\tthis.app.log(\"forward\");\r\n\t\t\tthis._previous = this._historyStack[this._index][\"hash\"];\r\n\t\t\tthis._index++;\r\n\t\t\tif(this._index < this._historyStack.length - 1){\r\n\t\t\t\tthis._next = this._historyStack[this._index + 1][\"hash\"];\r\n\t\t\t}else{\r\n\t\t\t\tthis._next = null;\r\n\t\t\t}\r\n\t\t\tthis._current = currentHash;\r\n\r\n\t\t\tvar target = hash.getTarget(currentHash, this.app.defaultView);\r\n\r\n\t\t\t// publish history forward event\r\n\t\t\ttopic.publish(\"/app/history/forward\", {\"viewId\": target, \"detail\": detail});\r\n\r\n\t\t\t// transition to the target view\r\n\t\t\tthis.app.emit(\"app-transition\", {\r\n\t\t\t\tviewId: target,\r\n \t\t\t\topts: lang.mixin({reverse: false}, detail, {\"params\": hash.getParams(currentHash)})\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_go: function(index, step){\r\n\t\t\tif(index < 0 || (index > window.history.length - 1)){\r\n\t\t\t\tthrow Error(\"Application history.go steps out of management, index: \"+index+\" length: \"+window.history.length);\r\n\t\t\t}\r\n\r\n\t\t\tthis._index = index;\r\n\t\t\tthis._current = this._historyStack[index][\"hash\"];\r\n\t\t\tthis._previous = this._historyStack[index - 1] ? this._historyStack[index - 1][\"hash\"] : null;\r\n\t\t\tthis._next = this._historyStack[index + 1] ? this._historyStack[index + 1][\"hash\"] : null;\r\n\r\n\t\t\tvar target = hash.getTarget(this._current, this.app.defaultView);\r\n\r\n\t\t\t// publish history go event\r\n\t\t\ttopic.publish(\"/app/history/go\", {\"viewId\": target, \"step\": step, \"detail\": this._historyStack[index][\"detail\"]});\r\n\r\n\t\t\t// transition to the target view\r\n\t\t\tthis.app.emit(\"app-transition\", {\r\n\t\t\t\tviewId: target,\r\n\t\t\t\topts: lang.mixin({reverse: (step <= 0)}, this._historyStack[index][\"detail\"], {\"params\": hash.getParams(this._current)})\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n});\r\n"]}