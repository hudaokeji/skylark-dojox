{"version":3,"sources":["collections/ArrayList.js"],"names":["define","dojo","darray","dxc","ArrayList","arr","items","concat","this","count","length","add","obj","push","addRange","a","getIterator","e","atEnd","get","i","clear","splice","clone","contains","forEach","fn","scope","Iterator","indexOf","insert","item","remove","removeAt","reverse","sort","setByIndex","toArray","toString","delim","join"],"mappings":";;;;;;;AAAAA,QAAQ,oBAAqB,mBAAoB,WAAY,SAASC,EAAMC,EAAQC,GAgInF,OA9HAA,EAAIC,UAAU,SAAoBC,GAGjC,IAAIC,KACDD,IAAKC,EAAMA,EAAMC,OAAOF,IAC3BG,KAAKC,MAAMH,EAAMI,OACjBF,KAAKG,IAAI,SAAoBC,GAG5BN,EAAMO,KAAKD,GACXJ,KAAKC,MAAMH,EAAMI,QAElBF,KAAKM,SAAS,SAAmBC,GAGhC,GAAGA,EAAEC,YAAY,CAEhB,IADA,IAAIC,EAAEF,EAAEC,eACDC,EAAEC,SACRV,KAAKG,IAAIM,EAAEE,OAEZX,KAAKC,MAAMH,EAAMI,WACb,CACJ,IAAI,IAAIU,EAAE,EAAGA,EAAEL,EAAEL,OAAQU,IACxBd,EAAMO,KAAKE,EAAEK,IAEdZ,KAAKC,MAAMH,EAAMI,SAGnBF,KAAKa,MAAM,WAGVf,EAAMgB,OAAO,EAAGhB,EAAMI,QACtBF,KAAKC,MAAM,GAEZD,KAAKe,MAAM,WAGV,OAAO,IAAIpB,EAAIC,UAAUE,IAE1BE,KAAKgB,SAAS,SAAoBZ,GAGjC,IAAI,IAAIQ,EAAE,EAAGA,EAAId,EAAMI,OAAQU,IAC9B,GAAGd,EAAMc,IAAMR,EACd,OAAO,EAGT,OAAO,GAERJ,KAAKiB,QAAQ,SAAsBC,EAAgBC,GAGlD1B,EAAKwB,QAAQnB,EAAOoB,EAAIC,IAEzBnB,KAAKQ,YAAY,WAGhB,OAAO,IAAIb,EAAIyB,SAAStB,IAEzBE,KAAKqB,QAAQ,SAAoBjB,GAGhC,IAAI,IAAIQ,EAAE,EAAGA,EAAId,EAAMI,OAAQU,IAC9B,GAAGd,EAAMc,IAAMR,EACd,OAAOQ,EAGT,OAAQ,GAETZ,KAAKsB,OAAO,SAAiBV,EAAcR,GAG1CN,EAAMgB,OAAOF,EAAE,EAAER,GACjBJ,KAAKC,MAAMH,EAAMI,QAElBF,KAAKuB,KAAK,SAAiBX,GAG1B,OAAOd,EAAMc,IAEdZ,KAAKwB,OAAO,SAAoBpB,GAG/B,IAAIQ,EAAEZ,KAAKqB,QAAQjB,GAChBQ,GAAI,GACNd,EAAMgB,OAAOF,EAAE,GAEhBZ,KAAKC,MAAMH,EAAMI,QAElBF,KAAKyB,SAAS,SAAiBb,GAG9Bd,EAAMgB,OAAOF,EAAE,GACfZ,KAAKC,MAAMH,EAAMI,QAElBF,KAAK0B,QAAQ,WAGZ5B,EAAM4B,WAEP1B,KAAK2B,KAAK,SAAuBT,GAG7BA,EACFpB,EAAM6B,KAAKT,GAEXpB,EAAM6B,QAGR3B,KAAK4B,WAAW,SAAiBhB,EAAcR,GAG9CN,EAAMc,GAAGR,EACTJ,KAAKC,MAAMH,EAAMI,QAElBF,KAAK6B,QAAQ,WAGZ,SAAU9B,OAAOD,IAElBE,KAAK8B,SAAS,SAAoBC,GAGjC,OAAOjC,EAAMkC,KAAMD,GAAO,OAGrBpC,EAAIC","file":"../../collections/ArrayList.js","sourcesContent":["define([\"dojo/_base/kernel\", \"dojo/_base/array\", \"./_base\"], function(dojo, darray, dxc){\r\n\r\n\tdxc.ArrayList=function(/*array?*/ arr){\r\n\t\t// summary:\r\n\t\t//\t\tReturns a new object of type dojox.collections.ArrayList\r\n\t\tvar items=[];\r\n\t\tif(arr) items=items.concat(arr);\r\n\t\tthis.count=items.length;\r\n\t\tthis.add=function(/*object*/ obj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdd an element to the collection.\r\n\t\t\titems.push(obj);\r\n\t\t\tthis.count=items.length;\r\n\t\t};\r\n\t\tthis.addRange=function(/*array*/ a){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdd a range of objects to the ArrayList\r\n\t\t\tif(a.getIterator){\r\n\t\t\t\tvar e=a.getIterator();\r\n\t\t\t\twhile(!e.atEnd()){\r\n\t\t\t\t\tthis.add(e.get());\r\n\t\t\t\t}\r\n\t\t\t\tthis.count=items.length;\r\n\t\t\t}else{\r\n\t\t\t\tfor(var i=0; i<a.length; i++){\r\n\t\t\t\t\titems.push(a[i]);\r\n\t\t\t\t}\r\n\t\t\t\tthis.count=items.length;\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.clear=function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tClear all elements out of the collection, and reset the count.\r\n\t\t\titems.splice(0, items.length);\r\n\t\t\tthis.count=0;\r\n\t\t};\r\n\t\tthis.clone=function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tClone the array list\r\n\t\t\treturn new dxc.ArrayList(items);\t//\tdojox.collections.ArrayList\r\n\t\t};\r\n\t\tthis.contains=function(/*object*/ obj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCheck to see if the passed object is a member in the ArrayList\r\n\t\t\tfor(var i=0; i < items.length; i++){\r\n\t\t\t\tif(items[i] == obj) {\r\n\t\t\t\t\treturn true;\t//\tbool\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\t//\tbool\r\n\t\t};\r\n\t\tthis.forEach=function(/*function*/ fn, /*object?*/ scope){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tfunctional iterator, following the mozilla spec.\r\n\t\t\tdojo.forEach(items, fn, scope);\r\n\t\t};\r\n\t\tthis.getIterator=function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet an Iterator for this object\r\n\t\t\treturn new dxc.Iterator(items);\t//\tdojox.collections.Iterator\r\n\t\t};\r\n\t\tthis.indexOf=function(/*object*/ obj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn the numeric index of the passed object; will return -1 if not found.\r\n\t\t\tfor(var i=0; i < items.length; i++){\r\n\t\t\t\tif(items[i] == obj) {\r\n\t\t\t\t\treturn i;\t//\tint\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn -1;\t// int\r\n\t\t};\r\n\t\tthis.insert=function(/*int*/ i, /*object*/ obj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInsert the passed object at index i\r\n\t\t\titems.splice(i,0,obj);\r\n\t\t\tthis.count=items.length;\r\n\t\t};\r\n\t\tthis.item=function(/*int*/ i){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturn the element at index i\r\n\t\t\treturn items[i];\t//\tobject\r\n\t\t};\r\n\t\tthis.remove=function(/*object*/ obj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tLook for the passed object, and if found, remove it from the internal array.\r\n\t\t\tvar i=this.indexOf(obj);\r\n\t\t\tif(i >=0) {\r\n\t\t\t\titems.splice(i,1);\r\n\t\t\t}\r\n\t\t\tthis.count=items.length;\r\n\t\t};\r\n\t\tthis.removeAt=function(/*int*/ i){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRemove the element located at the given index.\r\n\t\t\titems.splice(i,1);\r\n\t\t\tthis.count=items.length;\r\n\t\t};\r\n\t\tthis.reverse=function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReverse the internal array\r\n\t\t\titems.reverse();\r\n\t\t};\r\n\t\tthis.sort=function(/*function?*/ fn){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsort the internal array\r\n\t\t\tif(fn){\r\n\t\t\t\titems.sort(fn);\r\n\t\t\t}else{\r\n\t\t\t\titems.sort();\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.setByIndex=function(/*int*/ i, /*object*/ obj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet an element in the array by the passed index.\r\n\t\t\titems[i]=obj;\r\n\t\t\tthis.count=items.length;\r\n\t\t};\r\n\t\tthis.toArray=function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn a new array with all of the items of the internal array concatenated.\r\n\t\t\treturn [].concat(items);\r\n\t\t};\r\n\t\tthis.toString=function(/*string*/ delim){\r\n\t\t\t// summary:\r\n\t\t\t//\t\timplementation of toString, follows [].toString();\r\n\t\t\treturn items.join((delim||\",\"));\r\n\t\t};\r\n\t};\r\n\treturn dxc.ArrayList;\r\n});\r\n"]}