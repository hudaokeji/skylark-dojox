{"version":3,"sources":["collections/Dictionary.js"],"names":["define","dojo","darray","dxc","Dictionary","dictionary","items","this","count","testObject","add","k","v","b","DictionaryEntry","clear","clone","contains","containsKey","containsValue","e","getIterator","get","element","value","entry","forEach","fn","scope","a","p","push","getKeyList","map","key","getValueList","item","valueOf","DictionaryIterator","remove"],"mappings":";;;;;;;AAAAA,QAAQ,oBAAqB,mBAAoB,WAAY,SAASC,EAAMC,EAAQC,GA+GnF,OA7GAA,EAAIC,WAAW,SAA2CC,GAGzD,IAAIC,KACJC,KAAKC,MAAM,EAGX,IAAIC,KA+FJ,GA7FAF,KAAKG,IAAI,SAAoBC,EAAcC,GAG1C,IAAIC,EAAGF,KAAKL,EACZA,EAAMK,GAAG,IAAIR,EAAIW,gBAAgBH,EAAEC,GAC/BC,GACHN,KAAKC,SAGPD,KAAKQ,MAAM,WAGVT,KACAC,KAAKC,MAAM,GAEZD,KAAKS,MAAM,WAGV,OAAO,IAAIb,EAAIC,WAAWG,OAE3BA,KAAKU,SAASV,KAAKW,YAAY,SAAoBP,GAGlD,OAAGF,EAAWE,IAGI,MAAVL,EAAMK,IAEfJ,KAAKY,cAAc,SAAoBP,GAItC,IADA,IAAIQ,EAAEb,KAAKc,cACLD,EAAEE,OACP,GAAGF,EAAEG,QAAQC,OAAOZ,EACnB,OAAO,EAGT,OAAO,GAERL,KAAKkB,MAAM,SAAoBd,GAG9B,OAAOL,EAAMK,IAEdJ,KAAKmB,QAAQ,SAAsBC,EAAgBC,GAGlD,IAAIC,KACJ,IAAI,IAAIC,KAAKxB,EACRG,EAAWqB,IACdD,EAAEE,KAAKzB,EAAMwB,IAGf7B,EAAKyB,QAAQG,EAAGF,EAAIC,IAErBrB,KAAKyB,WAAW,WAGf,OAAQzB,KAAKc,cAAeY,IAAI,SAASR,GACxC,OAAOA,EAAMS,OAGf3B,KAAK4B,aAAa,WAGjB,OAAQ5B,KAAKc,cAAeY,IAAI,SAASR,GACxC,OAAOA,EAAMD,SAGfjB,KAAK6B,KAAK,SAAoBzB,GAG7B,GAAGA,KAAKL,EACP,OAAOA,EAAMK,GAAG0B,WAIlB9B,KAAKc,YAAY,WAGhB,OAAO,IAAIlB,EAAImC,mBAAmBhC,IAEnCC,KAAKgC,OAAO,SAAoB5B,GAG/B,OAAGA,KAAKL,IAAUG,EAAWE,YACrBL,EAAMK,GACbJ,KAAKC,SACE,IAKLH,EAEH,IADA,IAAIe,EAAEf,EAAWgB,cACXD,EAAEE,OACNf,KAAKG,IAAIU,EAAEG,QAAQW,IAAKd,EAAEG,QAAQC,QAI/BrB,EAAIC","file":"../../collections/Dictionary.js","sourcesContent":["define([\"dojo/_base/kernel\", \"dojo/_base/array\", \"./_base\"], function(dojo, darray, dxc){\r\n\r\n\tdxc.Dictionary=function(/*dojox.collections.Dictionary?*/ dictionary){\r\n\t\t// summary:\r\n\t\t//\t\tReturns an object of type dojox.collections.Dictionary\r\n\t\tvar items={};\r\n\t\tthis.count=0;\r\n\r\n\t\t//\tcomparator for property addition and access.\r\n\t\tvar testObject={};\r\n\r\n\t\tthis.add=function(/*string*/ k, /*object*/ v){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdd a new item to the Dictionary.\r\n\t\t\tvar b=(k in items);\r\n\t\t\titems[k]=new dxc.DictionaryEntry(k,v);\r\n\t\t\tif(!b){\r\n\t\t\t\tthis.count++;\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.clear=function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tClears the internal dictionary.\r\n\t\t\titems={};\r\n\t\t\tthis.count=0;\r\n\t\t};\r\n\t\tthis.clone=function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns a new instance of dojox.collections.Dictionary; note the the dictionary is a clone but items might not be.\r\n\t\t\treturn new dxc.Dictionary(this);\t//\tdojox.collections.Dictionary\r\n\t\t};\r\n\t\tthis.contains=this.containsKey=function(/*string*/ k){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCheck to see if the dictionary has an entry at key \"k\".\r\n\t\t\tif(testObject[k]){\r\n\t\t\t\treturn false;\t\t\t// bool\r\n\t\t\t}\r\n\t\t\treturn (items[k]!=null);\t//\tbool\r\n\t\t};\r\n\t\tthis.containsValue=function(/*object*/ v){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCheck to see if the dictionary has an entry with value \"v\".\r\n\t\t\tvar e=this.getIterator();\r\n\t\t\twhile(e.get()){\r\n\t\t\t\tif(e.element.value==v){\r\n\t\t\t\t\treturn true;\t//\tbool\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\t//\tbool\r\n\t\t};\r\n\t\tthis.entry=function(/*string*/ k){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAccessor method; similar to dojox.collections.Dictionary.item but returns the actual Entry object.\r\n\t\t\treturn items[k];\t//\tdojox.collections.DictionaryEntry\r\n\t\t};\r\n\t\tthis.forEach=function(/*function*/ fn, /*object?*/ scope){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tfunctional iterator, following the mozilla spec.\r\n\t\t\tvar a=[];\t//\tCreate an indexing array\r\n\t\t\tfor(var p in items) {\r\n\t\t\t\tif(!testObject[p]){\r\n\t\t\t\t\ta.push(items[p]);\t//\tfill it up\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdojo.forEach(a, fn, scope);\r\n\t\t};\r\n\t\tthis.getKeyList=function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns an array of the keys in the dictionary.\r\n\t\t\treturn (this.getIterator()).map(function(entry){\r\n\t\t\t\treturn entry.key;\r\n\t\t\t});\t//\tarray\r\n\t\t};\r\n\t\tthis.getValueList=function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns an array of the values in the dictionary.\r\n\t\t\treturn (this.getIterator()).map(function(entry){\r\n\t\t\t\treturn entry.value;\r\n\t\t\t});\t//\tarray\r\n\t\t};\r\n\t\tthis.item=function(/*string*/ k){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAccessor method.\r\n\t\t\tif(k in items){\r\n\t\t\t\treturn items[k].valueOf();\t//\tobject\r\n\t\t\t}\r\n\t\t\treturn undefined;\t//\tobject\r\n\t\t};\r\n\t\tthis.getIterator=function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGets a dojox.collections.DictionaryIterator for iteration purposes.\r\n\t\t\treturn new dxc.DictionaryIterator(items);\t//\tdojox.collections.DictionaryIterator\r\n\t\t};\r\n\t\tthis.remove=function(/*string*/ k){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRemoves the item at k from the internal collection.\r\n\t\t\tif(k in items && !testObject[k]){\r\n\t\t\t\tdelete items[k];\r\n\t\t\t\tthis.count--;\r\n\t\t\t\treturn true;\t//\tbool\r\n\t\t\t}\r\n\t\t\treturn false;\t//\tbool\r\n\t\t};\r\n\r\n\t\tif (dictionary){\r\n\t\t\tvar e=dictionary.getIterator();\r\n\t\t\twhile(e.get()) {\r\n\t\t\t\t this.add(e.element.key, e.element.value);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn dxc.Dictionary;\r\n});\r\n"]}