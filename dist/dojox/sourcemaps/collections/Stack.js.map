{"version":3,"sources":["collections/Stack.js"],"names":["define","dojo","darray","dxc","Stack","arr","q","concat","this","count","length","clear","clone","contains","o","i","copyTo","splice","forEach","fn","scope","getIterator","Iterator","peek","pop","r","push","toArray"],"mappings":";;;;;;;AAAAA,QAAQ,oBAAqB,mBAAoB,WAAY,SAASC,EAAMC,EAAQC,GAmEnF,OAjEAA,EAAIC,MAAM,SAAoBC,GAG7B,IAAIC,KACAD,IAAKC,EAAEA,EAAEC,OAAOF,IACpBG,KAAKC,MAAMH,EAAEI,OACbF,KAAKG,MAAM,WAGVL,KACAE,KAAKC,MAAMH,EAAEI,QAEdF,KAAKI,MAAM,WAGV,OAAO,IAAIT,EAAIC,MAAME,IAEtBE,KAAKK,SAAS,SAAoBC,GAGjC,IAAK,IAAIC,EAAE,EAAGA,EAAET,EAAEI,OAAQK,IACzB,GAAIT,EAAES,IAAMD,EACX,OAAO,EAGT,OAAO,GAERN,KAAKQ,OAAO,SAAmBX,EAAaU,GAG3CV,EAAIY,OAAOF,EAAE,EAAET,IAEhBE,KAAKU,QAAQ,SAAsBC,EAAgBC,GAGlDnB,EAAKiB,QAAQZ,EAAGa,EAAIC,IAErBZ,KAAKa,YAAY,WAGhB,OAAO,IAAIlB,EAAImB,SAAShB,IAEzBE,KAAKe,KAAK,WAGT,OAAOjB,EAAGA,EAAEI,OAAO,IAEpBF,KAAKgB,IAAI,WAGR,IAAIC,EAAEnB,EAAEkB,MAER,OADAhB,KAAKC,MAAMH,EAAEI,OACNe,GAERjB,KAAKkB,KAAK,SAAoBZ,GAG7BN,KAAKC,MAAMH,EAAEoB,KAAKZ,IAEnBN,KAAKmB,QAAQ,WAGZ,SAAUpB,OAAOD,KAGZH,EAAIC","file":"../../collections/Stack.js","sourcesContent":["define([\"dojo/_base/kernel\", \"dojo/_base/array\", \"./_base\"], function(dojo, darray, dxc){\r\n\r\n\tdxc.Stack=function(/*array?*/ arr){\r\n\t\t// summary:\r\n\t\t//\t\treturns an object of type dojox.collections.Stack\r\n\t\tvar q=[];\r\n\t\tif (arr) q=q.concat(arr);\r\n\t\tthis.count=q.length;\r\n\t\tthis.clear=function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tClear the internal array and reset the count\r\n\t\t\tq=[];\r\n\t\t\tthis.count=q.length;\r\n\t\t};\r\n\t\tthis.clone=function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate and return a clone of this Stack\r\n\t\t\treturn new dxc.Stack(q);\r\n\t\t};\r\n\t\tthis.contains=function(/*object*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcheck to see if the stack contains object o\r\n\t\t\tfor (var i=0; i<q.length; i++){\r\n\t\t\t\tif (q[i] == o){\r\n\t\t\t\t\treturn true;\t//\tbool\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\t//\tbool\r\n\t\t};\r\n\t\tthis.copyTo=function(/*array*/ arr, /*int*/ i){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcopy the stack into array arr at index i\r\n\t\t\tarr.splice(i,0,q);\r\n\t\t};\r\n\t\tthis.forEach=function(/*function*/ fn, /*object?*/ scope){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tfunctional iterator, following the mozilla spec.\r\n\t\t\tdojo.forEach(q, fn, scope);\r\n\t\t};\r\n\t\tthis.getIterator=function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tget an iterator for this collection\r\n\t\t\treturn new dxc.Iterator(q);\t//\tdojox.collections.Iterator\r\n\t\t};\r\n\t\tthis.peek=function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn the next item without altering the stack itself.\r\n\t\t\treturn q[(q.length-1)];\t//\tobject\r\n\t\t};\r\n\t\tthis.pop=function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tpop and return the next item on the stack\r\n\t\t\tvar r=q.pop();\r\n\t\t\tthis.count=q.length;\r\n\t\t\treturn r;\t//\tobject\r\n\t\t};\r\n\t\tthis.push=function(/*object*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPush object o onto the stack\r\n\t\t\tthis.count=q.push(o);\r\n\t\t};\r\n\t\tthis.toArray=function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreate and return an array based on the internal collection\r\n\t\t\treturn [].concat(q);\t//\tarray\r\n\t\t};\r\n\t};\r\n\treturn dxc.Stack;\r\n});\r\n"]}