{"version":3,"sources":["collections/Queue.js"],"names":["define","dojo","darray","dxc","Queue","arr","q","concat","this","count","length","clear","clone","contains","o","i","copyTo","splice","dequeue","r","shift","enqueue","push","forEach","fn","scope","getIterator","Iterator","peek","toArray"],"mappings":";;;;;;;AAAAA,QAAQ,oBAAqB,mBAAoB,WAAY,SAASC,EAAMC,EAAQC,GAqEnF,OAnEAA,EAAIC,MAAM,SAAoBC,GAG7B,IAAIC,KACAD,IACHC,EAAEA,EAAEC,OAAOF,IAEZG,KAAKC,MAAMH,EAAEI,OACbF,KAAKG,MAAM,WAGVL,KACAE,KAAKC,MAAMH,EAAEI,QAEdF,KAAKI,MAAM,WAGV,OAAO,IAAIT,EAAIC,MAAME,IAEtBE,KAAKK,SAAS,SAAoBC,GAGjC,IAAI,IAAIC,EAAE,EAAGA,EAAET,EAAEI,OAAQK,IACxB,GAAIT,EAAES,IAAID,EACT,OAAO,EAGT,OAAO,GAERN,KAAKQ,OAAO,SAAmBX,EAAaU,GAG3CV,EAAIY,OAAOF,EAAE,EAAET,IAEhBE,KAAKU,QAAQ,WAGZ,IAAIC,EAAEb,EAAEc,QAER,OADAZ,KAAKC,MAAMH,EAAEI,OACNS,GAERX,KAAKa,QAAQ,SAAoBP,GAGhCN,KAAKC,MAAMH,EAAEgB,KAAKR,IAEnBN,KAAKe,QAAQ,SAAsBC,EAAgBC,GAGlDxB,EAAKsB,QAAQjB,EAAGkB,EAAIC,IAErBjB,KAAKkB,YAAY,WAGhB,OAAO,IAAIvB,EAAIwB,SAASrB,IAEzBE,KAAKoB,KAAK,WAGT,OAAOtB,EAAE,IAEVE,KAAKqB,QAAQ,WAGZ,SAAUtB,OAAOD,KAGZH,EAAIC","file":"../../collections/Queue.js","sourcesContent":["define([\"dojo/_base/kernel\", \"dojo/_base/array\", \"./_base\"], function(dojo, darray, dxc){\r\n\r\n\tdxc.Queue=function(/*array?*/ arr){\r\n\t\t// summary:\r\n\t\t//\t\treturn an object of type dojox.collections.Queue\r\n\t\tvar q=[];\r\n\t\tif (arr){\r\n\t\t\tq=q.concat(arr);\r\n\t\t}\r\n\t\tthis.count=q.length;\r\n\t\tthis.clear=function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tclears the internal collection\r\n\t\t\tq=[];\r\n\t\t\tthis.count=q.length;\r\n\t\t};\r\n\t\tthis.clone=function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreates a new Queue based on this one\r\n\t\t\treturn new dxc.Queue(q);\t//\tdojox.collections.Queue\r\n\t\t};\r\n\t\tthis.contains=function(/*object*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCheck to see if the passed object is an element in this queue\r\n\t\t\tfor(var i=0; i<q.length; i++){\r\n\t\t\t\tif (q[i]==o){\r\n\t\t\t\t\treturn true;\t//\tbool\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\t//\tbool\r\n\t\t};\r\n\t\tthis.copyTo=function(/*array*/ arr, /*int*/ i){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCopy the contents of this queue into the passed array at index i.\r\n\t\t\tarr.splice(i,0,q);\r\n\t\t};\r\n\t\tthis.dequeue=function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tshift the first element off the queue and return it\r\n\t\t\tvar r=q.shift();\r\n\t\t\tthis.count=q.length;\r\n\t\t\treturn r;\t//\tobject\r\n\t\t};\r\n\t\tthis.enqueue=function(/*object*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tput the passed object at the end of the queue\r\n\t\t\tthis.count=q.push(o);\r\n\t\t};\r\n\t\tthis.forEach=function(/*function*/ fn, /*object?*/ scope){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tfunctional iterator, following the mozilla spec.\r\n\t\t\tdojo.forEach(q, fn, scope);\r\n\t\t};\r\n\t\tthis.getIterator=function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tget an Iterator based on this queue.\r\n\t\t\treturn new dxc.Iterator(q);\t//\tdojox.collections.Iterator\r\n\t\t};\r\n\t\tthis.peek=function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tget the next element in the queue without altering the queue.\r\n\t\t\treturn q[0];\r\n\t\t};\r\n\t\tthis.toArray=function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturn an array based on the internal array of the queue.\r\n\t\t\treturn [].concat(q);\r\n\t\t};\r\n\t};\r\n\treturn dxc.Queue;\r\n});\r\n"]}