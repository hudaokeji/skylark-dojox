{"version":3,"sources":["collections/SortedList.js"],"names":["define","dojo","darray","dxc","SortedList","dictionary","_this","this","items","q","sorter","a","b","key","build","e","getIterator","atEnd","push","get","sort","testObject","count","length","add","k","v","DictionaryEntry","clear","clone","contains","containsKey","containsValue","o","value","copyTo","arr","i","idx","splice","entry","forEach","fn","scope","getByIndex","valueOf","DictionaryIterator","getKey","getKeyList","getValueList","indexOfKey","indexOfValue","item","remove","removeAt","replace","setByIndex"],"mappings":"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","file":"../../collections/SortedList.js","sourcesContent":["define([\"dojo/_base/kernel\", \"dojo/_base/array\", \"./_base\"], function(dojo, darray, dxc){\r\n\r\n\tdxc.SortedList=function(/*object?*/ dictionary){\r\n\t\t// summary:\r\n\t\t//\t\tcreates a collection that acts like a dictionary but is also internally sorted.\r\n\t\t//\t\tNote that the act of adding any elements forces an internal resort, making this object potentially slow.\r\n\t\tvar _this=this;\r\n\t\tvar items={};\r\n\t\tvar q=[];\r\n\t\tvar sorter=function(a,b){\r\n\t\t\tif (a.key > b.key) return 1;\r\n\t\t\tif (a.key < b.key) return -1;\r\n\t\t\treturn 0;\r\n\t\t};\r\n\t\tvar build=function(){\r\n\t\t\tq=[];\r\n\t\t\tvar e=_this.getIterator();\r\n\t\t\twhile (!e.atEnd()){\r\n\t\t\t\tq.push(e.get());\r\n\t\t\t}\r\n\t\t\tq.sort(sorter);\r\n\t\t};\r\n\t\tvar testObject={};\r\n\r\n\t\tthis.count=q.length;\r\n\t\tthis.add=function(/*string*/ k,/*object*/ v){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tadd the passed value to the dictionary at location k\r\n\t\t\tif (!items[k]) {\r\n\t\t\t\titems[k]=new dxc.DictionaryEntry(k,v);\r\n\t\t\t\tthis.count=q.push(items[k]);\r\n\t\t\t\tq.sort(sorter);\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.clear=function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tclear the internal collections\r\n\t\t\titems={};\r\n\t\t\tq=[];\r\n\t\t\tthis.count=q.length;\r\n\t\t};\r\n\t\tthis.clone=function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreate a clone of this sorted list\r\n\t\t\treturn new dxc.SortedList(this);\t//\tdojox.collections.SortedList\r\n\t\t};\r\n\t\tthis.contains=this.containsKey=function(/*string*/ k){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCheck to see if the list has a location k\r\n\t\t\tif(testObject[k]){\r\n\t\t\t\treturn false;\t\t\t//\tbool\r\n\t\t\t}\r\n\t\t\treturn (items[k]!=null);\t//\tbool\r\n\t\t};\r\n\t\tthis.containsValue=function(/*object*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCheck to see if this list contains the passed object\r\n\t\t\tvar e=this.getIterator();\r\n\t\t\twhile (!e.atEnd()){\r\n\t\t\t\tvar item=e.get();\r\n\t\t\t\tif(item.value==o){\r\n\t\t\t\t\treturn true;\t//\tbool\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\t//\tbool\r\n\t\t};\r\n\t\tthis.copyTo=function(/*array*/ arr, /*int*/ i){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcopy the contents of the list into array arr at index i\r\n\t\t\tvar e=this.getIterator();\r\n\t\t\tvar idx=i;\r\n\t\t\twhile(!e.atEnd()){\r\n\t\t\t\tarr.splice(idx,0,e.get());\r\n\t\t\t\tidx++;\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.entry=function(/*string*/ k){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturn the object at location k\r\n\t\t\treturn items[k];\t//\tdojox.collections.DictionaryEntry\r\n\t\t};\r\n\t\tthis.forEach=function(/*function*/ fn, /*object?*/ scope){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tfunctional iterator, following the mozilla spec.\r\n\t\t\tdojo.forEach(q, fn, scope);\r\n\t\t};\r\n\t\tthis.getByIndex=function(/*int*/ i){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturn the item at index i\r\n\t\t\treturn q[i].valueOf();\t//\tobject\r\n\t\t};\r\n\t\tthis.getIterator=function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tget an iterator for this object\r\n\t\t\treturn new dxc.DictionaryIterator(items);\t//\tdojox.collections.DictionaryIterator\r\n\t\t};\r\n\t\tthis.getKey=function(/*int*/ i){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturn the key of the item at index i\r\n\t\t\treturn q[i].key;\r\n\t\t};\r\n\t\tthis.getKeyList=function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturn an array of the keys set in this list\r\n\t\t\tvar arr=[];\r\n\t\t\tvar e=this.getIterator();\r\n\t\t\twhile (!e.atEnd()){\r\n\t\t\t\tarr.push(e.get().key);\r\n\t\t\t}\r\n\t\t\treturn arr;\t//\tarray\r\n\t\t};\r\n\t\tthis.getValueList=function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturn an array of values in this list\r\n\t\t\tvar arr=[];\r\n\t\t\tvar e=this.getIterator();\r\n\t\t\twhile (!e.atEnd()){\r\n\t\t\t\tarr.push(e.get().value);\r\n\t\t\t}\r\n\t\t\treturn arr;\t//\tarray\r\n\t\t};\r\n\t\tthis.indexOfKey=function(/*string*/ k){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturn the index of the passed key.\r\n\t\t\tfor (var i=0; i<q.length; i++){\r\n\t\t\t\tif (q[i].key==k){\r\n\t\t\t\t\treturn i;\t//\tint\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn -1;\t//\tint\r\n\t\t};\r\n\t\tthis.indexOfValue=function(/*object*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturn the first index of object o\r\n\t\t\tfor (var i=0; i<q.length; i++){\r\n\t\t\t\tif (q[i].value==o){\r\n\t\t\t\t\treturn i;\t//\tint\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn -1;\t//\tint\r\n\t\t};\r\n\t\tthis.item=function(/*string*/ k){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturn the value of the object at location k.\r\n\t\t\tif(k in items && !testObject[k]){\r\n\t\t\t\treturn items[k].valueOf();\t//\tobject\r\n\t\t\t}\r\n\t\t\treturn undefined;\t//\tobject\r\n\t\t};\r\n\t\tthis.remove=function(/*string*/ k){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tremove the item at location k and rebuild the internal collections.\r\n\t\t\tdelete items[k];\r\n\t\t\tbuild();\r\n\t\t\tthis.count=q.length;\r\n\t\t};\r\n\t\tthis.removeAt=function(/*int*/ i){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tremove the item at index i, and rebuild the internal collections.\r\n\t\t\tdelete items[q[i].key];\r\n\t\t\tbuild();\r\n\t\t\tthis.count=q.length;\r\n\t\t};\r\n\t\tthis.replace=function(/*string*/ k, /*object*/ v){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReplace an existing item if it's there, and add a new one if not.\r\n\t\t\tif (!items[k]){\r\n\t\t\t\t//\t\twe're adding a new object, return false\r\n\t\t\t\tthis.add(k,v);\r\n\t\t\t\treturn false; // bool\r\n\t\t\t}else{\r\n\t\t\t\t//\twe're replacing an object, return true\r\n\t\t\t\titems[k]=new dxc.DictionaryEntry(k,v);\r\n\t\t\t\tbuild();\r\n\t\t\t\treturn true; // bool\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.setByIndex=function(/*int*/ i, /*object*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tset an item by index\r\n\t\t\titems[q[i].key].value=o;\r\n\t\t\tbuild();\r\n\t\t\tthis.count=q.length;\r\n\t\t};\r\n\t\tif (dictionary){\r\n\t\t\tvar e=dictionary.getIterator();\r\n\t\t\twhile (!e.atEnd()){\r\n\t\t\t\tvar item=e.get();\r\n\t\t\t\tq[q.length]=items[item.key]=new dxc.DictionaryEntry(item.key,item.value);\r\n\t\t\t}\r\n\t\t\tq.sort(sorter);\r\n\t\t}\r\n\t};\r\n\treturn dxc.SortedList;\r\n});\r\n"]}