{"version":3,"sources":["collections/tests/Dictionary.js"],"names":["dojo","provide","require","tests","register","t","d","dojox","collections","Dictionary","assertTrue","add","assertEqual","item","valueOf","clear","count","d2","clone","contains","containsKey","containsValue","getKeyList","join","getValueList","remove","undefined"],"mappings":";;;;;;;AAAAA,KAAKC,QAAQ,sCACbD,KAAKE,QAAQ,gCAEbC,MAAMC,SAAS,sCACd,SAAkBC,GACjB,IAAIC,EAAE,IAAIC,MAAMC,YAAYC,WAC5BJ,EAAEK,WAAWJ,aAAaC,MAAMC,YAAYC,aAE7C,SAAiBJ,GAChB,IAAIC,EAAE,IAAIC,MAAMC,YAAYC,WAC5BH,EAAEK,IAAI,MAAM,OACZN,EAAEO,YAAY,MAAON,EAAEO,KAAK,OAAOC,YAEpC,SAAmBT,GAClB,IAAIC,EAAE,IAAIC,MAAMC,YAAYC,WAC5BH,EAAEK,IAAI,MAAM,OACZL,EAAES,QACFV,EAAEO,YAAY,EAAGN,EAAEU,QAEpB,SAAmBX,GAClB,IAAIC,EAAE,IAAIC,MAAMC,YAAYC,WAC5BH,EAAEK,IAAI,MAAM,OACZL,EAAEK,IAAI,OAAO,QACbL,EAAEK,IAAI,QAAQ,UACd,IAAIM,EAAKX,EAAEY,QACXb,EAAEK,WAAWO,EAAGE,SAAS,SAE1B,SAAsBd,GACrB,IAAIC,EAAE,IAAIC,MAAMC,YAAYC,WAC5BH,EAAEK,IAAI,MAAM,OACZL,EAAEK,IAAI,MAAM,OACZL,EAAEK,IAAI,OAAO,QACbL,EAAEK,IAAI,QAAQ,UACdN,EAAEK,WAAWJ,EAAEa,SAAS,SAEzB,SAAyBd,GACxB,IAAIC,EAAE,IAAIC,MAAMC,YAAYC,WAC5BH,EAAEK,IAAI,MAAM,OACZL,EAAEK,IAAI,MAAM,OACZL,EAAEK,IAAI,OAAO,QACbL,EAAEK,IAAI,QAAQ,UACdN,EAAEK,WAAWJ,EAAEc,YAAY,UAE5B,SAA2Bf,GAC1B,IAAIC,EAAE,IAAIC,MAAMC,YAAYC,WAC5BH,EAAEK,IAAI,MAAM,OACZL,EAAEK,IAAI,MAAM,OACZL,EAAEK,IAAI,OAAO,QACbL,EAAEK,IAAI,QAAQ,UACdN,EAAEK,WAAWJ,EAAEe,cAAc,UAE9B,SAAwBhB,GACvB,IAAIC,EAAE,IAAIC,MAAMC,YAAYC,WAC5BH,EAAEK,IAAI,MAAM,OACZL,EAAEK,IAAI,MAAM,OACZL,EAAEK,IAAI,OAAO,QACbL,EAAEK,IAAI,QAAQ,UACdN,EAAEO,YAAY,qBAAsBN,EAAEgB,aAAaC,KAAK,OAEzD,SAA0BlB,GACzB,IAAIC,EAAE,IAAIC,MAAMC,YAAYC,WAC5BH,EAAEK,IAAI,MAAM,OACZL,EAAEK,IAAI,MAAM,OACZL,EAAEK,IAAI,OAAO,QACbL,EAAEK,IAAI,QAAQ,UACdN,EAAEO,YAAY,sBAAuBN,EAAEkB,eAAeD,KAAK,OAE5D,SAAoBlB,GACnB,IAAIC,EAAE,IAAIC,MAAMC,YAAYC,WAC5BH,EAAEK,IAAI,MAAM,OACZL,EAAEK,IAAI,MAAM,OACZL,EAAEK,IAAI,OAAO,QACbL,EAAEK,IAAI,QAAQ,UACdL,EAAEmB,OAAO,OACTpB,EAAEO,YAAY,EAAGN,EAAEU,OACnBX,EAAEO,iBAAYc,EAAWpB,EAAEO,KAAK","file":"../../../collections/tests/Dictionary.js","sourcesContent":["dojo.provide(\"dojox.collections.tests.Dictionary\");\r\ndojo.require(\"dojox.collections.Dictionary\");\r\n\r\ntests.register(\"dojox.collections.tests.Dictionary\", [\r\n\tfunction testCtor(t){\r\n\t\tvar d=new dojox.collections.Dictionary();\r\n\t\tt.assertTrue(d instanceof dojox.collections.Dictionary);\r\n\t},\r\n\tfunction testAdd(t){\r\n\t\tvar d=new dojox.collections.Dictionary();\r\n\t\td.add(\"foo\",\"bar\");\r\n\t\tt.assertEqual(\"bar\", d.item(\"foo\").valueOf());\r\n\t},\r\n\tfunction testClear(t){\r\n\t\tvar d=new dojox.collections.Dictionary();\r\n\t\td.add(\"foo\",\"bar\");\r\n\t\td.clear()\r\n\t\tt.assertEqual(0, d.count);\r\n\t},\r\n\tfunction testClone(t){\r\n\t\tvar d=new dojox.collections.Dictionary();\r\n\t\td.add(\"baz\",\"fab\");\r\n\t\td.add(\"buck\",\"shot\");\r\n\t\td.add(\"apple\",\"orange\");\r\n\t\tvar d2 = d.clone();\r\n\t\tt.assertTrue(d2.contains(\"baz\"));\r\n\t},\r\n\tfunction testContains(t){\r\n\t\tvar d=new dojox.collections.Dictionary();\r\n\t\td.add(\"foo\",\"bar\");\r\n\t\td.add(\"baz\",\"fab\");\r\n\t\td.add(\"buck\",\"shot\");\r\n\t\td.add(\"apple\",\"orange\");\r\n\t\tt.assertTrue(d.contains(\"baz\"));\r\n\t},\r\n\tfunction testContainsKey(t){\r\n\t\tvar d=new dojox.collections.Dictionary();\r\n\t\td.add(\"foo\",\"bar\");\r\n\t\td.add(\"baz\",\"fab\");\r\n\t\td.add(\"buck\",\"shot\");\r\n\t\td.add(\"apple\",\"orange\");\r\n\t\tt.assertTrue(d.containsKey(\"buck\"));\r\n\t},\r\n\tfunction testContainsValue(t){\r\n\t\tvar d=new dojox.collections.Dictionary();\r\n\t\td.add(\"foo\",\"bar\");\r\n\t\td.add(\"baz\",\"fab\");\r\n\t\td.add(\"buck\",\"shot\");\r\n\t\td.add(\"apple\",\"orange\");\r\n\t\tt.assertTrue(d.containsValue(\"shot\"));\r\n\t},\r\n\tfunction testGetKeyList(t){\r\n\t\tvar d=new dojox.collections.Dictionary();\r\n\t\td.add(\"foo\",\"bar\");\r\n\t\td.add(\"baz\",\"fab\");\r\n\t\td.add(\"buck\",\"shot\");\r\n\t\td.add(\"apple\",\"orange\");\r\n\t\tt.assertEqual(\"foo,baz,buck,apple\", d.getKeyList().join(\",\"));\r\n\t},\r\n\tfunction testGetValueList(t){\r\n\t\tvar d=new dojox.collections.Dictionary();\r\n\t\td.add(\"foo\",\"bar\");\r\n\t\td.add(\"baz\",\"fab\");\r\n\t\td.add(\"buck\",\"shot\");\r\n\t\td.add(\"apple\",\"orange\");\r\n\t\tt.assertEqual(\"bar,fab,shot,orange\", d.getValueList().join(\",\"));\r\n\t},\r\n\tfunction testRemove(t){\r\n\t\tvar d=new dojox.collections.Dictionary();\r\n\t\td.add(\"foo\",\"bar\");\r\n\t\td.add(\"baz\",\"fab\");\r\n\t\td.add(\"buck\",\"shot\");\r\n\t\td.add(\"apple\",\"orange\");\r\n\t\td.remove(\"baz\");\r\n\t\tt.assertEqual(3, d.count);\r\n\t\tt.assertEqual(undefined, d.item(\"baz\"));\r\n\t}\r\n]);\r\n"]}