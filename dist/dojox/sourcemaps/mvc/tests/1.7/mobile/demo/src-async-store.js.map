{"version":3,"sources":["mvc/tests/1.7/mobile/demo/src-async-store.js"],"names":["repeatModel","nextIndexToAdd","selectedIndex","setRef","setDetailsContext","insertResult","updateView","updateModel","require","genmodel","model","dojox","mvc","newStatefulModel","data","Serial","First","Last","Email","ShipTo","Street","City","State","Zip","BillTo","repeatmodel","id","addrRef","dijit","byId","set","index","value","insert","Location","Office","Tel","Fax","add","modeldata","dojo","fromJson","style","display","err","console","error","focus","toJson","toPlainObject","e","log","writeStore","ItemFileWriteStore","url","moduleUrl","modelPromise","store","DataStore","query","then","results","length","mobile","parser","parse","addOnLoad"],"mappings":";;;;;;;AAAA,IAAIA,YAAqBC,eAAgBC,cACrCC,OAAQC,kBAAmBC,aAAcC,WAAYC,YAEzDC,SACC,sBACA,YACA,eACA,8BACA,sBACA,wBACA,kBACA,qBACA,mBACA,uBACA,8BACA,6BACA,8BACA,kCACA,2BACA,iCACA,uBACA,+BACA,wBACE,WACFA,SACS,wBAGT,IA2DGC,EAxCJP,cAAgB,EAEhBQ,MAAQC,MAAMC,IAAIC,kBAAmBC,MApBpCC,OAAW,SACXC,MAAW,OACXC,KAAW,MACXC,MAAW,kBACXC,QACCC,OAAW,gBACXC,KAAW,UACXC,MAAW,KACXC,IAAW,SAEZC,QACCJ,OAAW,gBACXC,KAAW,YACXC,MAAW,KACXC,IAAW,YAObE,YAAc,KACdxB,gBAAkB,EAGlBE,OAAS,SAASuB,EAAIC,GACRC,MAAMC,KAAKH,GACjBI,IAAI,MAAOH,IAInBvB,kBAAoB,SAAS2B,GAC5B7B,cAAgB6B,EACAH,MAAMC,KAAK,gBACjBC,IAAI,MAAOC,IAItB1B,aAAe,SAAS0B,GACvB,GAAyC,KAArCN,YAAYM,EAAM,GAAGf,MAAMgB,MAAa,CAC3C,IAAIC,EAAStB,MAAMC,IAAIC,kBAAmBC,MACzCE,MAAY,GACZC,KAAY,GACZiB,SAAY,KACZC,OAAY,GACZjB,MAAY,GACZkB,IAAY,GACZC,IAAY,MAEbZ,YAAYa,IAAIP,EAAOE,GACvB7B,kBAAkB2B,GAClB9B,sBAEAG,kBAAkB2B,EAAM,IAM1BzB,WAAa,WACZ,IACC,IAAIiC,EAAYC,KAAKC,SAASD,KAAKX,KAAK,aAAaG,OACrDvB,EAAWE,MAAMC,IAAIC,kBAAmBC,KAAOyB,IAC/CX,MAAMC,KAAK,QAAQC,IAAI,MAAOrB,GAC9B+B,KAAKX,KAAK,kBAAkBa,MAAMC,QAAU,OAC5CH,KAAKX,KAAK,YAAYa,MAAMC,QAAU,GACtC,MAAMC,GACNC,QAAQC,MAAM,kCAAkCF,KAKlDrC,YAAc,WACbiC,KAAKX,KAAK,kBAAkBa,MAAMC,QAAU,GAC5C,IACCH,KAAKX,KAAK,aAAakB,QACvBP,KAAKX,KAAK,YAAYa,MAAMC,QAAU,OACtCf,MAAMC,KAAK,aAAaC,IAAI,QAASU,KAAKQ,OAAOvC,EAASwC,iBAAiB,IAC1E,MAAMC,GACPL,QAAQM,IAAID,KAQd,IAAIE,EAAa,IAAIZ,KAAK1B,KAAKuC,oBAAoBC,IAAKd,KAAKe,UAAU,wBAAyB,wBAC5FC,EAAe7C,MAAMC,IAAIC,kBAAkB4C,MAAO,IAAIjB,KAAKiB,MAAMC,WAAWD,MAAOL,IAAcO,OAAOzB,SAAa,QAEzH1B,SAAS,kBAAmB,WACxBgD,EAAaI,KAAK,SAASC,GAC1BpC,YAAcoC,EACd5D,eAAiBwB,YAAYX,KAAKgD,OAClCjB,QAAQM,IAAI,+BACZxC,MAAMoD,OAAOC,OAAOC,QACpBpB,QAAQM,IAAI,sDACZX,KAAKX,KAAK,aAAaa,MAAMC,QAAU,GACvCE,QAAQM,IAAI,yDAKjBX,KAAK0B,UAAU","file":"../../../../../../mvc/tests/1.7/mobile/demo/src-async-store.js","sourcesContent":["var repeatModel, setRef, nextIndexToAdd, selectedIndex;\r\nvar setRef, setDetailsContext, insertResult, updateView, updateModel;\r\n\r\nrequire([\r\n\t'dojox/mobile/parser',\r\n\t'dojox/mvc',\r\n\t'dojox/mobile',\r\n\t'dojox/mobile/ScrollableView',\r\n\t'dojox/mobile/Button',\r\n\t'dojox/mobile/TextArea',\r\n\t'dojox/mvc/Group',\r\n\t'dojox/mvc/Generate',\r\n\t'dojox/mvc/Repeat',\r\n\t'dojox/mobile/TextBox',\r\n\t'dojox/mobile/ViewController',\r\n\t'dojox/mobile/FixedSplitter',\r\n\t'dojox/mobile/EdgeToEdgeList',\r\n\t'dojox/mobile/EdgeToEdgeCategory',\r\n\t'dojox/mobile/deviceTheme',\r\n\t'dojox/mobile/RoundRectCategory',\r\n\t'dojox/mobile/Heading',\r\n\t'dojo/data/ItemFileWriteStore',\r\n\t'dojo/store/DataStore'\t\r\n], function(){\r\n\trequire([\r\n\t         \"dojox/mobile/compat\"\r\n\t]);\r\n\r\n\tvar names = {\r\n\t\"Serial\" : \"360324\",\r\n\t\"First\"  : \"John\",\r\n\t\"Last\"   : \"Doe\",\r\n\t\"Email\"  : \"jdoe@us.ibm.com\",\r\n\t\"ShipTo\" : {\r\n\t\t\"Street\" : \"123 Valley Rd\",\r\n\t\t\"City\"   : \"Katonah\",\r\n\t\t\"State\"  : \"NY\",\r\n\t\t\"Zip\"    : \"10536\"\r\n\t},\r\n\t\"BillTo\" : {\r\n\t\t\"Street\" : \"17 Skyline Dr\",\r\n\t\t\"City\"   : \"Hawthorne\",\r\n\t\t\"State\"  : \"NY\",\r\n\t\t\"Zip\"    : \"10532\"\r\n\t}\r\n};\r\n\r\nselectedIndex = 0;\r\n\r\nmodel = dojox.mvc.newStatefulModel({ data : names });\r\nrepeatmodel = null;  // use store for repeat data \r\nnextIndexToAdd = -1;\r\n\r\n // used in the Ship to - Bill to demo\r\nsetRef = function(id, addrRef) {\r\n\tvar widget = dijit.byId(id);\r\n\twidget.set(\"ref\", addrRef);\r\n}\r\n\r\n// used in the Repeat Data binding demo\r\nsetDetailsContext = function(index){\r\n\tselectedIndex = index;\r\n\tvar groupRoot = dijit.byId(\"detailsGroup\");\r\n\tgroupRoot.set(\"ref\", index);\r\n}\r\n\r\n// used in the Repeat Data binding demo\r\ninsertResult = function(index){\r\n\tif (repeatmodel[index-1].First.value !== \"\"){ // TODO: figure out why we are getting called twice for each click\r\n\t\tvar insert = dojox.mvc.newStatefulModel({ \"data\" : {\r\n\t\t\t\"First\"   : \"\",\r\n\t\t\t\"Last\"    : \"\",\r\n\t\t\t\"Location\": \"CA\",\r\n\t\t\t\"Office\"  : \"\",\r\n\t\t\t\"Email\"   : \"\",\r\n\t\t\t\"Tel\"     : \"\",\r\n\t\t\t\"Fax\"     : \"\"} \r\n\t\t});\r\n\t\trepeatmodel.add(index, insert);\r\n\t\tsetDetailsContext(index);\r\n\t\tnextIndexToAdd++;\r\n\t}else{\r\n\t\tsetDetailsContext(index-1);                 \r\n\t}\r\n};\r\n\r\n// used in the Generate View demo\r\nvar genmodel;\r\nupdateView = function() {\r\n\ttry {\r\n\t\tvar modeldata = dojo.fromJson(dojo.byId(\"modelArea\").value);\r\n\t\tgenmodel = dojox.mvc.newStatefulModel({ data : modeldata });\r\n\t\tdijit.byId(\"view\").set(\"ref\", genmodel);\r\n\t\tdojo.byId(\"outerModelArea\").style.display = \"none\";\r\n\t\tdojo.byId(\"viewArea\").style.display = \"\";              \t\t\r\n\t}catch(err){\r\n\t\tconsole.error(\"Error parsing json from model: \"+err);\r\n\t}\r\n};\r\n\r\n// used in the Generate View demo\r\nupdateModel = function() {\r\n\tdojo.byId(\"outerModelArea\").style.display = \"\";\r\n\ttry {\r\n\t\tdojo.byId(\"modelArea\").focus(); // hack: do this to force focus off of the textbox, bug on mobile?\r\n\t\tdojo.byId(\"viewArea\").style.display = \"none\";\r\n\t\tdijit.byId(\"modelArea\").set(\"value\",(dojo.toJson(genmodel.toPlainObject(), true)));\r\n\t} catch(e) {\r\n\t\tconsole.log(e);\r\n\t};\r\n};\r\n\r\n\r\n// The dojox.mvc.StatefulModel class creates a data model instance\r\n// where each leaf within the data model is decorated with dojo.Stateful\r\n// properties that widgets can bind to and watch for their changes.\r\nvar writeStore = new dojo.data.ItemFileWriteStore({url: dojo.moduleUrl(\"dojox.mvc.tests._data\", \"mvcRepeatData.json\")});\r\nvar modelPromise = dojox.mvc.newStatefulModel({store: new dojo.store.DataStore({store: writeStore}), query:{\"Location\" : \"CA\"}}); // example of using a query parm for Location \r\n\r\nrequire(['dojo/domReady!'], function(){\r\n\t\t\t\tmodelPromise.then(function(results){ \r\n\t\t\t\t\trepeatmodel = results;\r\n\t\t\t\t\tnextIndexToAdd = repeatmodel.data.length;\r\n\t\t\t\t\tconsole.log(\"before call to parser.parse\");\r\n\t\t\t\t\tdojox.mobile.parser.parse();\r\n\t\t\t\t\tconsole.log(\"before call to set the wholepage style for display\");\t\r\n\t\t\t\t\tdojo.byId(\"wholepage\").style.display = \"\";\r\n\t\t\t\t\tconsole.log(\"after call to set the wholepage style for display\");\t\r\n\t\t\t\t});\r\n\t\r\n\t\t});\r\n\r\ndojo.addOnLoad(function() {\r\n});\r\n\r\n}); // end function\r\n\r\n"]}