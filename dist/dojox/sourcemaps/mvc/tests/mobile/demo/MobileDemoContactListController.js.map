{"version":3,"sources":["mvc/tests/mobile/demo/MobileDemoContactListController.js"],"names":["define","declare","registry","getStateful","ListController","StoreRefController","summaryScrollableViewId","detailScrollableViewId","initialFocusElementId","setDetailsContext","uniqueId","this","set","byId","focus","addEmpty","payload","Math","random","First","Last","Location","Office","Email","Tel","Fax","_refInModelProp","push","performTransition","remove","model","i","length","idProperty","splice","get"],"mappings":";;;;;;;AAAAA,QACC,qBACA,iBACA,wBACA,2BACA,gCACE,SAASC,EAASC,EAAUC,EAAaC,EAAgBC,GAM3D,OAAOJ,GAASG,EAAgBC,IAG/BC,wBAAyB,GAIzBC,uBAAwB,GAIxBC,sBAAuB,GAEvBC,kBAAmB,SAAoBC,GAMtCC,KAAKC,IAAI,WAAYF,GACrBR,EAASW,KAAKF,KAAKH,uBAAuBM,SAG3CC,SAAU,WAIT,IAAIC,EAAUb,GACbO,SAAU,GAAKO,KAAKC,SACpBC,MAAO,GACPC,KAAM,GACNC,SAAU,KACVC,OAAQ,GACRC,MAAO,GACPC,IAAK,GACLC,IAAK,KAENd,KAAKA,KAAKe,iBAAiBC,KAAKX,GAChCL,KAAKC,IAAI,SAAUI,GACnBd,EAASW,KAAKF,KAAKL,yBAAyBsB,kBAAkBjB,KAAKJ,uBAAwB,EAAG,QAC9FL,EAASW,KAAKF,KAAKH,uBAAuBM,SAG3Ce,OAAQ,SAAoBnB,GAI3B,IAAI,IAAIoB,EAAQnB,KAAKA,KAAKe,iBAAkBK,EAAI,EAAGA,EAAID,EAAME,OAAQD,IACpE,GAAGD,EAAMC,GAAGpB,KAAKsB,aAAevB,EAK/B,OAJAoB,EAAMI,OAAOH,EAAG,QACbA,EAAIpB,KAAKA,KAAKe,iBAAiBS,IAAI,WACrCxB,KAAKC,IAAI,cAAemB","file":"../../../../../mvc/tests/mobile/demo/MobileDemoContactListController.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\",\r\n\t\"dijit/registry\",\r\n\t\"dojox/mvc/getStateful\",\r\n\t\"dojox/mvc/ListController\",\r\n\t\"dojox/mvc/StoreRefController\"\r\n], function(declare, registry, getStateful, ListController, StoreRefController){\r\n\t// module:\r\n\t//\t\tdojox/mvc/tests/mobile/demo/MobileDemoContactListController\r\n\t// summary:\r\n\t//\t\tThe controller for contact list info for this demo.\r\n\r\n\treturn declare([ListController, StoreRefController], {\r\n\t\t// summaryScrollableViewId: String\r\n\t\t//\t\tThe ID of the scrollable view representing summary (in list).\r\n\t\tsummaryScrollableViewId: \"\",\r\n\r\n\t\t// detailScrollableViewId: String\r\n\t\t//\t\tThe ID of the scrollable view representing detail (in form).\r\n\t\tdetailScrollableViewId: \"\",\r\n\r\n\t\t// initialFocusElementId: String\r\n\t\t//\t\tThe ID of the element that should get the focus when list selection switches, etc.\r\n\t\tinitialFocusElementId: \"\",\r\n\r\n\t\tsetDetailsContext: function(/*String*/ uniqueId){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled to move to the repeatdetails page when an item is selected on the WidgetList Data Binding page. \r\n\t\t\t// uniqueId: String\r\n\t\t\t//\t\tThe ID of the row. \r\n\r\n\t\t\tthis.set(\"cursorId\", uniqueId);\r\n\t\t\tregistry.byId(this.initialFocusElementId).focus();\r\n\t\t},\r\n\r\n\t\taddEmpty: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled to add an empty item when the white plus icon is pressed on the WidgetList Data Binding page. \r\n\r\n\t\t\tvar payload = getStateful({\r\n\t\t\t\tuniqueId: \"\" + Math.random(),\r\n\t\t\t\tFirst: \"\",\r\n\t\t\t\tLast: \"\",\r\n\t\t\t\tLocation: \"CA\",\r\n\t\t\t\tOffice: \"\",\r\n\t\t\t\tEmail: \"\",\r\n\t\t\t\tTel: \"\",\r\n\t\t\t\tFax: \"\"\r\n\t\t\t});\r\n\t\t\tthis[this._refInModelProp].push(payload);\r\n\t\t\tthis.set(\"cursor\", payload);\r\n\t\t\tregistry.byId(this.summaryScrollableViewId).performTransition(this.detailScrollableViewId, 1, \"none\");\r\n\t\t\tregistry.byId(this.initialFocusElementId).focus();\r\n\t\t},\r\n\r\n\t\tremove: function(/*String*/ uniqueId){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled to remove an item when the red circle minus icon is pressed on the WidgetList Data Binding page. \r\n\r\n\t\t\tfor(var model = this[this._refInModelProp], i = 0; i < model.length; i++){\r\n\t\t\t\tif(model[i][this.idProperty] == uniqueId){\r\n\t\t\t\t\tmodel.splice(i, 1);\r\n\t\t\t\t\tif(i < this[this._refInModelProp].get(\"length\")){\r\n\t\t\t\t\t\tthis.set(\"cursorIndex\", i);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n"]}