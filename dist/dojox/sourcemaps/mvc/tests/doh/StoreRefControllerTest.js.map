{"version":3,"sources":["mvc/tests/doh/StoreRefControllerTest.js"],"names":["define","doh","array","config","declare","lang","Deferred","QueryResults","_WidgetBase","at","_TemplatedMixin","_WidgetsInTemplateMixin","_Container","_TextBox","getStateful","StoreRefController","EditStoreRefListController","JsonRest","Memory","Observable","when","WidgetList","template","childTemplate","childBindings","data","identifier","items","Serial","First","Last","Email","ctrl","store","getStore","value","register","is","queryStore","results","newId2","Math","random","newObj2","addStore","newId1","newObj","putStore","remObjId","removeStore","AsyncMemoryStore","s","put","remove","query","prototype","args","arguments","dfd","_self","this","setTimeout","resolve","apply","promise","idProperty","updates","observe","getTestErrback","object","previousIndex","newIndex","push","delegate","length","callback","target","require","toUrl","o","id","name","someProperty"],"mappings":"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","file":"../../../../mvc/tests/doh/StoreRefControllerTest.js","sourcesContent":["define([\r\n\t\"doh\",\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/config\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/Deferred\",\r\n\t\"dojo/store/util/QueryResults\",\r\n\t\"dijit/_WidgetBase\",\r\n\t\"dojox/mvc/at\",\r\n\t\"dijit/_TemplatedMixin\",\r\n\t\"dijit/_WidgetsInTemplateMixin\",\r\n\t\"dijit/_Container\",\r\n\t\"dijit/form/TextBox\",\r\n\t\"dojox/mvc/getStateful\",\r\n    \"dojox/mvc/StoreRefController\",\r\n    \"dojox/mvc/EditStoreRefListController\",\t\r\n    \"dojo/store/JsonRest\",\r\n    \"dojo/store/Memory\",\r\n    \"dojo/store/Observable\",\r\n    \"dojo/when\",\r\n\t\"dojox/mvc/WidgetList\",\r\n\t\"dojo/text!dojox/mvc/tests/test_WidgetList_WidgetListInTemplate.html\",\r\n\t\"dojo/text!dojox/mvc/tests/test_WidgetList_childTemplate.html\",\r\n\t\"dojo/text!dojox/mvc/tests/test_WidgetList_childBindings.json\"\r\n], function(doh, array, config, declare, lang, Deferred, QueryResults, _WidgetBase, at, _TemplatedMixin, _WidgetsInTemplateMixin, _Container,\r\n\t_TextBox, getStateful, StoreRefController, EditStoreRefListController, JsonRest, Memory, Observable, when, WidgetList, template, childTemplate, childBindings){7\r\n    var data = {\r\n        \"identifier\": \"Serial\",\r\n        \"items\": [\r\n            {\r\n                \"Serial\"  : \"A111\",\r\n                \"First\"   : \"Anne\",\r\n                \"Last\"    : \"Ackerman\",\r\n                \"Email\"   : \"a.a@test.com\"\r\n            },\r\n            {\r\n                \"Serial\"  : \"B111\",\r\n                \"First\"   : \"Ben\",\r\n                \"Last\"    : \"Beckham\",\r\n                \"Email\"   : \"b.b@test.com\"\r\n            },\r\n            {\r\n                \"Serial\"  : \"I111\",\r\n                \"First\"   : \"Irene\",\r\n                \"Last\"    : \"Ira\",\r\n                \"Email\"   : \"i.i@test.com\"\r\n            },\r\n            {\r\n                \"Serial\"  : \"J111\",\r\n                \"First\"   : \"John\",\r\n                \"Last\"    : \"Jacklin\",\r\n                \"Email\"   : \"j.j@test.com\"\r\n            }\r\n        ]\r\n    };\r\n\r\n\r\n\tctrl = new EditStoreRefListController({\r\n\t\tstore : new Memory({\r\n\t\t\tdata : data\r\n\t\t})\r\n\t});\r\n\twhen(ctrl.getStore(\"A111\"), function(value) {\r\n\t\tdoh.register(\"dojox.mvc.tests.doh.StoreRefControllerTest\", [\r\n\t\t\tfunction getStore(){\r\n\t\t\t\tdoh.is(value.Serial, \"A111\", \"Serial should be set\");\r\n\t\t\t\tdoh.is(value.First, \"Anne\", \"First should be set\");\r\n\t\t\t\tdoh.is(value.Last, \"Ackerman\", \"Last should be set\");\r\n\t\t\t\tdoh.is(value.Email, \"a.a@test.com\", \"Email should be set\");\r\n\t\t\t},\r\n\t\t\tfunction queryStore(){\r\n\t\t\t\twhen(ctrl.queryStore(), function(results) {\r\n\t\t\t\t\tdoh.is(results[0].Serial, \"A111\", \"Serial should be set\");\r\n\t\t\t\t\tdoh.is(results[0].First, \"Anne\", \"First should be set\");\r\n\t\t\t\t\tdoh.is(results[0].Last, \"Ackerman\", \"Last should be set\");\r\n\t\t\t\t\tdoh.is(results[0].Email, \"a.a@test.com\", \"Email should be set\");\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tfunction addStore(){\r\n\t\t\t\tvar newId2 = \"newObj222-\" + Math.random();\r\n\t\t\t\tvar newObj2 = {\r\n\t\t\t\t\t\"Serial\" : newId2,\r\n\t\t\t\t\t\"First\" : \"newObj2\",\r\n\t\t\t\t\t\"Last\" : \"newObj2 Last\",\r\n\t\t\t\t\t\"Email\" : \"new.obj2@test.com\"\r\n\t\t\t\t};\r\n\t\t\t\twhen(ctrl.addStore(newObj2), function(results) {\r\n\t\t\t\t\tdoh.is(results, newId2, \"id should be returned\");\r\n\t\t\t\t\twhen(ctrl.getStore(newId2), function(value) {\r\n\t\t\t\t\t\tdoh.is(value.Serial, newId2, \"Serial should be set\");\r\n\t\t\t\t\t\tdoh.is(value.First, \"newObj2\", \"First should be set\");\r\n\t\t\t\t\t\tdoh.is(value.Last, \"newObj2 Last\", \"Last should be set\");\r\n\t\t\t\t\t\tdoh.is(value.Email, \"new.obj2@test.com\", \"Email should be set\");\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tfunction putStore(){\r\n\t\t\t\tvar newId1 = \"newObj111-\" + Math.random();\r\n\t\t\t\tvar newObj = {\r\n\t\t\t\t\t\"Serial\" : newId1,\r\n\t\t\t\t\t\"First\" : \"newObj\",\r\n\t\t\t\t\t\"Last\" : \"newObj Last\",\r\n\t\t\t\t\t\"Email\" : \"new.obj@test.com\"\r\n\t\t\t\t};\r\n\t\t\t\twhen(ctrl.putStore(newObj), function(results) {\r\n\t\t\t\t\tdoh.is(results, newId1, \"id should be returned\");\r\n\t\t\t\t\twhen(ctrl.getStore(results), function(value) {\r\n\t\t\t\t\t\tdoh.is(value.Serial, newId1, \"Serial should be set\");\r\n\t\t\t\t\t\tdoh.is(value.First, \"newObj\", \"First should be set\");\r\n\t\t\t\t\t\tdoh.is(value.Last, \"newObj Last\", \"Last should be set\");\r\n\t\t\t\t\t\tdoh.is(value.Email, \"new.obj@test.com\", \"Email should be set\");\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tfunction removeStore(){\r\n\t\t\t\twhen(ctrl.queryStore(), function(results) {\r\n\t\t\t\t\tvar remObjId = results[1].Serial;\r\n\t\t\t\t\twhen(ctrl.removeStore(remObjId), function(results) {\r\n\t\t\t\t\t\tdoh.is(results, true, \"should return true from removeStore\");\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tfunction observableAsyncStore(){\r\n\t\t\t\tvar AsyncMemoryStore = declare(Memory, {});\r\n\t\t\t\tfor(var s in {put: 1, remove: 1, query: 1}){\r\n\t\t\t\t\t(function(s){\r\n\t\t\t\t\t\tAsyncMemoryStore.prototype[s] = function(){\r\n\t\t\t\t\t\t\tvar args = arguments,\r\n\t\t\t\t\t\t\t dfd = new Deferred(),\r\n\t\t\t\t\t\t\t _self = this;\r\n\t\t\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\t\t\tdfd.resolve(Memory.prototype[s].apply(_self, args));\r\n\t\t\t\t\t\t\t}, 500);\r\n\t\t\t\t\t\t\treturn QueryResults(dfd.promise);\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})(s);\r\n\t\t\t\t}\r\n\t\t\t\tvar ctrl = new EditStoreRefListController({store: Observable(new AsyncMemoryStore({idProperty: \"Serial\", data: data}))}),\r\n\t\t\t\t updates = [],\r\n\t\t\t\t dfd = new doh.Deferred();\r\n\t\t\t\tctrl.queryStore({Last: \"Ackerman\"}).observe(dfd.getTestErrback(function(object, previousIndex, newIndex){\r\n\t\t\t\t\tupdates.push(lang.delegate(object, {\r\n\t\t\t\t\t\tpreviousIndex: previousIndex,\r\n\t\t\t\t\t\tnewIndex: newIndex\r\n\t\t\t\t\t}));\r\n\t\t\t\t\tif(updates.length == 2){\r\n\t\t\t\t\t\tdoh.is({\r\n\t\t\t\t\t\t\tSerial: \"D111\",\r\n\t\t\t\t\t\t\tFirst: \"David\",\r\n\t\t\t\t\t\t\tLast: \"Ackerman\",\r\n\t\t\t\t\t\t\tEmail: \"d.a@test.com\",\r\n\t\t\t\t\t\t\tpreviousIndex: -1,\r\n\t\t\t\t\t\t\tnewIndex: 1\r\n\t\t\t\t\t\t}, updates[0], \"The observable callback should catch the addition\");\r\n\t\t\t\t\t\tdoh.is({\r\n\t\t\t\t\t\t\tSerial: \"A111\",\r\n\t\t\t\t\t\t\tFirst: \"Anne\",\r\n\t\t\t\t\t\t\tLast: \"Ackerman\",\r\n\t\t\t\t\t\t\tEmail: \"a.a@test.com\",\r\n\t\t\t\t\t\t\tpreviousIndex: 0,\r\n\t\t\t\t\t\t\tnewIndex: -1\r\n\t\t\t\t\t\t}, updates[1], \"The observable callback should catch the removal\");\r\n\t\t\t\t\t\tdfd.callback(1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}));\r\n\t\t\t\tctrl.addStore({\r\n\t\t\t\t\tSerial: \"D111\",\r\n\t\t\t\t\tFirst: \"David\",\r\n\t\t\t\t\tLast: \"Ackerman\",\r\n\t\t\t\t\tEmail: \"d.a@test.com\"\r\n\t\t\t\t});\r\n\t\t\t\tctrl.removeStore(\"A111\");\r\n\t\t\t\treturn dfd;\r\n\t\t\t},\r\n\t\t\tfunction observeJsonRest(){\r\n\t\t\t\t// Test we can observe results from a store that DOES defer results.\r\n\t\t\t\tvar store = new JsonRest({\r\n\t\t\t\t\ttarget: require.toUrl(\"dojo/tests/store/\"),\r\n\t\t\t\t\tput: function(o){ var dfd = new Deferred(); setTimeout(function(){ dfd.resolve(o.id); }, 500); return dfd.promise; }, // Intead of making REST call, just return the ID asynchronously\r\n\t\t\t\t\tremove: function(){ var dfd = new Deferred(); setTimeout(function(){ dfd.resolve(true); }, 500); return dfd.promise; } // Intead of making REST call, just return true asynchronously\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar ctrl = new StoreRefController({store : new Observable(store)}),\r\n\t\t\t\t dfd = new doh.Deferred(),\r\n\t\t\t\t updates = [];\r\n\r\n\t\t\t\tctrl.queryStore(\"treeTestRoot\").observe(dfd.getTestErrback(function(object, previousIndex, newIndex){\r\n\t\t\t\t\tupdates.push(lang.delegate(object, {\r\n\t\t\t\t\t\tpreviousIndex: previousIndex,\r\n\t\t\t\t\t\tnewIndex: newIndex\r\n\t\t\t\t\t}));\r\n\t\t\t\t\tif(updates.length == 2){\r\n\t\t\t\t\t\tdoh.is({\r\n\t\t\t\t\t\t\tid: \"node6\",\r\n\t\t\t\t\t\t\tname: \"node6\",\r\n\t\t\t\t\t\t\tsomeProperty: \"somePropertyA\",\r\n\t\t\t\t\t\t\tpreviousIndex: -1,\r\n\t\t\t\t\t\t\tnewIndex: 0\r\n\t\t\t\t\t\t}, updates[0], \"The observable callback should catch the addition\");\r\n\t\t\t\t\t\tdoh.is({\r\n\t\t\t\t\t\t\tid: \"node4\",\r\n\t\t\t\t\t\t\tname: \"node4\",\r\n\t\t\t\t\t\t\tsomeProperty: \"somePropertyA\",\r\n\t\t\t\t\t\t\tpreviousIndex: 4,\r\n\t\t\t\t\t\t\tnewIndex: -1\r\n\t\t\t\t\t\t}, updates[1], \"The observable callback should catch the removal\");\r\n\t\t\t\t\t\tdfd.callback(1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}));\r\n\t\t\t\tctrl.addStore({\r\n\t\t\t\t\tid: \"node6\",\r\n\t\t\t\t\tname: \"node6\",\r\n\t\t\t\t\tsomeProperty: \"somePropertyA\"\r\n\t\t\t\t});\r\n\t\t\t\tctrl.removeStore(\"node4\");\r\n\t\t\t\treturn dfd;\r\n\t\t\t}\r\n\t\t]);\r\n\t}); \r\n});\r\n"]}