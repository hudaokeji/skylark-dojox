{"version":3,"sources":["mvc/Generate.js"],"names":["define","array","lang","declare","Container","at","_counter","_defaultWidgetMapping","String","_defaultClassMapping","Label","Heading","Row","_defaultIdNameMapping","children","_relTargetProp","startup","this","inherited","arguments","_setChildrenAttr","value","_set","binding","set","_started","_builtOnce","_buildContained","_destroyBody","srcNodeRef","innerHTML","_generateBody","_createBody","hideHeading","body","isStatefulModel","isFunction","toPlainObject","generateElement","prop","isArray","push","_generateRepeat","toString","call","watch","_generateGroup","_generateTextBox","forEach","s","hasOwnProperty","join","repeatHeading","headingClass","classMapping","id","model","groupHeading","html","referToValue","idname","idNameMapping","widClass","widgetMapping","labelClass","stringClass"],"mappings":"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","file":"../../mvc/Generate.js","sourcesContent":["define([\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/declare\",\r\n\t\"./_Container\",\r\n\t\"./at\",\r\n\t\"./Group\",\r\n\t\"dijit/form/TextBox\"\r\n], function(array, lang, declare, Container, at){\r\n\r\n\treturn declare(\"dojox.mvc.Generate\", [Container], {\r\n\t\t// summary:\r\n\t\t//\t\tA container that generates a view based on the data model its bound to.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tA generate introspects its data binding and creates a view contained in\r\n\t\t//\t\tit that allows displaying the bound data. Child dijits or custom view\r\n\t\t//\t\tcomponents inside it inherit their parent data binding context from it.\r\n\t\r\n\t\t// _counter: [private] Integer\r\n\t\t//\t\tA count maintained internally to always generate predictable widget\r\n\t\t//\t\tIDs in the view generated by this container.\r\n\t\t_counter : 0,\r\n\t\r\n\t\t// defaultWidgetMapping: Object\r\n\t\t//\t\tThe mapping of types to a widget class. Set widgetMapping to override this. \r\n\t\t//\t\r\n\t\t_defaultWidgetMapping: {\"String\" : \"dijit/form/TextBox\"},\r\n\t\r\n\t\t// defaultClassMapping: Object\r\n\t\t//\t\tThe mapping of class to use. Set classMapping to override this. \r\n\t\t//\t\r\n\t\t_defaultClassMapping: {\"Label\" : \"generate-label-cell\", \"String\" : \"generate-dijit-cell\", \"Heading\" : \"generate-heading\", \"Row\" : \"row\"},\r\n\t\r\n\t\r\n\t\t// defaultIdNameMapping: Object\r\n\t\t//\t\tThe mapping of id and name to use. Set idNameMapping to override this. A count will be added to the id and name\r\n\t\t//\t\r\n\t\t_defaultIdNameMapping: {\"String\" : \"textbox_t\"},\r\n\r\n\t\t// children: dojo/Stateful\r\n\t\t//\t\tThe array of data model that is used to render child nodes.\r\n\t\tchildren: null,\r\n\r\n\t\t// _relTargetProp: String\r\n\t\t//\t\tThe name of the property that is used by child widgets for relative data binding.\r\n\t\t_relTargetProp : \"children\",\r\n\r\n\t\tstartup: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._setChildrenAttr(this.children);\r\n\t\t},\r\n\r\n\t\t////////////////////// PRIVATE METHODS ////////////////////////\r\n\r\n\t\t_setChildrenAttr: function(/*dojo/Stateful*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for calls to set(\"children\", val).\r\n\t\t\t// description:\r\n\t\t\t//\t\tSets \"ref\" property so that child widgets can refer to, and then rebuilds the children.\r\n\r\n\t\t\tvar children = this.children;\r\n\t\t\tthis._set(\"children\", value);\r\n\t\t\t// this.binding is the resolved ref, so not matching with the new value means change in repeat target.\r\n\t\t\tif(this.binding != value){\r\n\t\t\t\tthis.set(\"ref\", value);\r\n\t\t\t}\r\n\t\t\tif(this._started && (!this._builtOnce || children != value)){\r\n\t\t\t\tthis._builtOnce = true;\r\n\t\t\t\tthis._buildContained(value);\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t_buildContained: function(/*dojo/Stateful*/ children){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDestroy any existing generated view, recreate it from scratch\r\n\t\t\t//\t\tparse the new contents.\r\n\t\t\t// children: dojo/Stateful\r\n\t\t\t//\t\tThe array of child widgets.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(!children){ return; }\r\n\r\n\t\t\tthis._destroyBody();\r\n\t\r\n\t\t\tthis._counter = 0;\r\n\t\t\tthis.srcNodeRef.innerHTML = this._generateBody(children);\r\n\t\r\n\t\t\tthis._createBody();\r\n\t\t},\r\n\t\r\n\t\t_generateBody: function(/*dojo/Stateful*/ children, /*Boolean*/ hideHeading){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGenerate the markup for the view associated with this generate\r\n\t\t\t//\t\tcontainer.\r\n\t\t\t// children: dojo/Stateful\r\n\t\t\t//\t\tThe associated data to generate a view for.\r\n\t\t\t// hideHeading: Boolean\r\n\t\t\t//\t\tWhether the property name should be displayed as a heading.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(children === void 0){ return \"\"; }\r\n\r\n\t\t\tvar body = [];\r\n\t\t\tvar isStatefulModel = lang.isFunction(children.toPlainObject);\r\n\r\n\t\t\tfunction generateElement(value, prop){\r\n\t\t\t\tif(isStatefulModel ? (value && lang.isFunction(value.toPlainObject)) : !lang.isFunction(value)){\r\n\t\t\t\t\tif(lang.isArray(value)){\r\n\t\t\t\t\t\tbody.push(this._generateRepeat(value, prop));\r\n\t\t\t\t\t}else if(isStatefulModel ? value.value : ((value == null || {}.toString.call(value) != \"[object Object]\") && (!(value || {}).set || !(value || {}).watch))){\r\n\t\t\t\t\t\t// TODO: Data types based widgets\r\n\t\t\t\t\t\tbody.push(this._generateTextBox(prop, isStatefulModel));\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tbody.push(this._generateGroup(value, prop, hideHeading));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(lang.isArray(children)){\r\n\t\t\t\tarray.forEach(children, generateElement, this);\r\n\t\t\t}else{\r\n\t\t\t\tfor(var s in children){\r\n\t\t\t\t\tif(children.hasOwnProperty(s)){\r\n\t\t\t\t\t\tgenerateElement.call(this, children[s], s);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn body.join(\"\");\r\n\t\t},\r\n\t\r\n\t\t_generateRepeat: function(/*dojox/mvc/StatefulArray*/ children, /*String*/ repeatHeading){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGenerate a repeating model-bound view.\r\n\t\t\t// children: dojox/mvc/StatefulArray\r\n\t\t\t//\t\tThe bound node (a collection/array node) to generate a\r\n\t\t\t//\t\trepeating UI/view for.\r\n\t\t\t// repeatHeading: String\r\n\t\t\t//\t\tThe heading to be used for this portion.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar headingClass = (this.classMapping && this.classMapping[\"Heading\"]) ? this.classMapping[\"Heading\"] : this._defaultClassMapping[\"Heading\"];\r\n\t\t\treturn '<div data-dojo-type=\"dojox/mvc/Group\" data-dojo-props=\"target: at(\\'rel:\\', \\'' + repeatHeading + '\\')\" + id=\"' + this.id + '_r' + this._counter++ + '\">'\r\n\t\t\t + '<div class=\"' + headingClass + '\\\">' + repeatHeading + '</div>'\r\n\t\t\t + this._generateBody(children, true)\r\n\t\t\t + '</div>';\r\n\t\t},\r\n\t\t\r\n\t\t_generateGroup: function(/*dojo/Stateful*/ model, /*String*/ groupHeading, /*Boolean*/ hideHeading){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGenerate a hierarchical model-bound view.\r\n\t\t\t// model: dojo/Stateful\r\n\t\t\t//\t\tThe bound (intermediate) model to generate a hierarchical view portion for.\r\n\t\t\t// groupHeading: String\r\n\t\t\t//\t\tThe heading to be used for this portion.\r\n\t\t\t// hideHeading: Boolean\r\n\t\t\t//\t\tWhether the heading should be hidden for this portion.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar html = ['<div data-dojo-type=\"dojox/mvc/Group\" data-dojo-props=\"target: at(\\'rel:\\', \\'' + groupHeading + '\\')\" + id=\"' + this.id + '_g' + this._counter++ + '\">'];\r\n\t\t\tif(!hideHeading){\r\n\t\t\t\tvar headingClass = (this.classMapping && this.classMapping[\"Heading\"]) ? this.classMapping[\"Heading\"] : this._defaultClassMapping[\"Heading\"];\r\n\t\t\t\thtml.push('<div class=\"' + headingClass + '\\\">' + groupHeading + '</div>');\r\n\t\t\t}\r\n\t\t\thtml.push(this._generateBody(model) + '</div>');\r\n\t\t\treturn html.join(\"\");\r\n\t\t},\r\n\t\r\n\t\t_generateTextBox: function(/*String*/ prop, /*Boolean*/ referToValue){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tProduce a widget for a simple value.\r\n\t\t\t// prop: String\r\n\t\t\t//\t\tThe data model property name.\r\n\t\t\t// referToValue: Boolean\r\n\t\t\t//\t\tTrue if the property is dojox/mvc/StatefulModel with \"value\" attribute.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\t// TODO: Data type based widget generation / enhanced meta-data\r\n\r\n\t\t\tvar idname = this.idNameMapping ? this.idNameMapping[\"String\"] : this._defaultIdNameMapping[\"String\"];\r\n\t\t\tidname = idname + this._counter++; \r\n\t\t\tvar widClass = this.widgetMapping ? this.widgetMapping[\"String\"] : this._defaultWidgetMapping[\"String\"];\r\n\t\t\tvar labelClass = (this.classMapping && this.classMapping[\"Label\"]) ? this.classMapping[\"Label\"] : this._defaultClassMapping[\"Label\"];\r\n\t\t\tvar stringClass = (this.classMapping && this.classMapping[\"String\"]) ? this.classMapping[\"String\"] : this._defaultClassMapping[\"String\"];\r\n\t\t\tvar rowClass = (this.classMapping && this.classMapping[\"Row\"]) ? this.classMapping[\"Row\"] : this._defaultClassMapping[\"Row\"];\r\n\t\t\tvar bindingSyntax = 'value: at(\\'rel:' + (referToValue && prop || '') + '\\', \\'' + (referToValue ? 'value' : prop) + '\\')'; \r\n\r\n\t\t\treturn '<div class=\"' + rowClass + '\\\">' +\r\n\t\t\t\t\t'<label class=\"' + labelClass + '\\\">' + prop + ':</label>' +\r\n\t\t\t\t\t'<input class=\"' + stringClass + '\\\" data-dojo-type=\"' + widClass + '\\\"' +\r\n\t\t\t\t\t' data-dojo-props=\"name: \\'' + idname + '\\', ' + bindingSyntax + '\" id=\"' + idname + '\\\"></input>' +\r\n\t\t\t\t\t'</div>';\r\n\t\t}\r\n\t});\r\n});\r\n"]}