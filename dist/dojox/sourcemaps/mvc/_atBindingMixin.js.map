{"version":3,"sources":["mvc/_atBindingMixin.js"],"names":["define","array","lang","declare","has","Stateful","resolve","sync","getLogContent","target","targetProp","_setIdAttr","declaredClass","join","logResolveFailure","console","warn","getParent","w","registry","require","e","pw","pn","domNode","parentNode","getEnclosingWidget","relTargetProp","_relTargetProp","isFunction","get","constructor","prototype","bind","source","sourceProp","options","_handles","parent","resolveAndBind","unwatch","relTarget","resolvedSource","resolvedTarget","test","set","watch","log","name","old","current","h","remove","s","mixin","dataBindAttr","_dbpostscript","params","srcNodeRef","refs","this","_refs","prop","atsignature","dbParams","_self","toString","id","canConvertToLoggable","_startAtWatchHandles","_stopAtWatchHandles","bindWith","atWatchHandles","_atWatchHandles","_excludes","bindDirection","converter","equals","equalsCallback","_setAtWatchHandle","value","Error","_started","_setBind","list","eval","_getExcludesAttr","push","_getPropertiesAttr","_attribs","concat","_setterAttrs","forEach","index","indexOf","splice","_atBindingMixin"],"mappings":";;;;;;;AAAAA,QACC,mBACA,kBACA,qBACA,WACA,gBACA,YACA,UACE,SAASC,MAAOC,KAAMC,QAASC,IAAKC,SAAUC,QAASC,MACzD,GAAGH,IAAI,wBAAwB,CAC9B,SAASI,cAAgCC,EAAmBC,GAC3D,OAAQD,EAAOE,aAAeF,EAAOG,cAAgBH,EAASA,EAAOG,cAAeF,GAAYG,KAAK,KAGtG,SAASC,kBAAkBL,EAAQC,GAClCK,QAAQC,KAAKN,EAAa,0BAA6C,iBAAVD,EAAsB,SAAWA,EAAU,IAAM,MAIhH,SAASQ,UAAgCC,GAOxC,IAAIC,EACJ,IACCA,EAAWC,QAAQ,kBACnB,MAAMC,GACN,OAGD,IADA,IAA4CC,EAAxCC,EAAKL,EAAEM,SAAWN,EAAEM,QAAQC,WAC1BF,GAAG,CAER,GADAD,EAAKH,EAASO,mBAAmBH,GAC3B,CACL,IAAII,EAAgBL,EAAGM,gBAAkB,SACzC,IADwD1B,KAAK2B,WAAWP,EAAGQ,KAAOR,EAAGQ,IAAIH,GAAiBL,EAAGK,KACpGA,KAAiBL,EAAGS,YAAYC,UACxC,OAAOV,EAGTC,EAAKD,GAAMA,EAAGE,QAAQC,YAIxB,SAASQ,KAA8BC,EAAmBC,EAAkC1B,EAAmBC,EAAuC0B,GAcrJ,IAAIC,KAAeC,EAASrB,UAAUR,GAASkB,EAAgBW,GAAUA,EAAOV,gBAAkB,SAElG,SAASW,IACRF,EAAc,KAAKA,EAAc,IAAEG,iBAC5BH,EAAc,IAErB,IAAII,EAAYH,IAAWpC,KAAK2B,WAAWS,EAAOR,KAAOQ,EAAOR,IAAIH,GAAiBW,EAAOX,IAC3Fe,EAAiBpC,QAAQ4B,EAAQO,GACjCE,EAAiBrC,QAAQG,EAAQgC,GAE/BrC,IAAI,2BAA6BsC,GAAkB,QAAQE,KAAKV,KAAYI,IAAUxB,kBAAkBoB,EAAQC,GAChH/B,IAAI,2BAA6BuC,GAAkB,QAAQC,KAAKnC,KAAY6B,IAAUxB,kBAAkBL,EAAQC,GAC/GgC,GAAmBC,KAAmB,QAAQC,KAAKV,KAAW,QAAQU,KAAKnC,IAAa6B,KACvFI,EAAeG,KAAQH,EAAeI,OAAwB,KAAdX,EAKpC,MAAdA,GAIFjC,KAAK2B,WAAWc,EAAeE,KAAOF,EAAeE,IAAInC,EAAYgC,GAAmBC,EAAejC,GAAcgC,EAClHtC,IAAI,yBACNW,QAAQgC,IAAI,iCAAmCL,EAAiB,QAAUlC,cAAcmC,EAAgBjC,KAIzG2B,EAAc,IAAI9B,KAAKmC,EAAgBP,EAAYQ,EAAgBjC,EAAY0B,GAd5EhC,IAAI,yBAA0BU,kBAAkBoB,EAAQC,IAkB7DI,KACGD,GAAU,QAAQM,KAAKV,IAAW,QAAQU,KAAKnC,IAAWP,KAAK2B,WAAWS,EAAOO,MAAQ3C,KAAK2B,WAAWS,EAAOQ,UAClHT,EAAc,IAAIC,EAAOQ,MAAMnB,EAAe,SAASqB,EAAMC,EAAKC,GAC9DD,IAAQC,IACP9C,IAAI,yBAA0BW,QAAQgC,IAAI,2CAA6CT,GAC1FC,QAIH,IAAIY,KAOJ,OANAA,EAAEX,QAAUW,EAAEC,OAAS,WACtB,IAAI,IAAIC,KAAKhB,EACZA,EAASgB,IAAMhB,EAASgB,GAAGb,iBACpBH,EAASgB,IAGXF,EAGR,IAAIG,OAMHC,aAAc,oBAEdC,cAAe,SAAqBC,EAA2BC,GAK9D,IAAIC,EAAOC,KAAKC,OAASJ,OAAcE,SACvC,IAAI,IAAIG,KAAQL,EACf,GAAuC,iBAAnCA,EAAOK,QAAaC,YAA8B,CACrD,IAAIZ,EAAIM,EAAOK,UACRL,EAAOK,GACdH,EAAKG,GAAQX,EAIf,IAAIa,EAAW,IAAI3D,SAClB4D,EAAQL,KAIT,IAAI,IAAIE,KAHRE,EAASE,SAAW,WAAY,MAAO,0BAA4BD,EAAMrD,cAAgB,MAAQqD,EAAME,IAAM,SAAW,KACxHH,EAASI,sBAAuB,EAChCR,KAAKS,qBAAqBL,GACVL,OACO,IAAnBK,EAASF,MACVL,EAASA,OAAcK,GAAQE,EAASF,IAG3CF,KAAKU,uBAGND,qBAAsB,SAA2BE,GAMhDX,KAAKQ,sBAAuB,EAE5B,IAAIT,EAAOC,KAAKC,MAChB,GAAGF,EAAK,CACP,IAAIa,EAAiBZ,KAAKa,gBAAkBb,KAAKa,oBAMjD,IAAI,IAAIX,KAHRF,KAAKc,UAAY,KAGDf,EACXA,EAAKG,IAAiB,KAARA,IAClBU,EAAeV,GAAQ7B,KAAK0B,EAAKG,GAAMrD,OAAQkD,EAAKG,GAAMpD,WAAY6D,GAAYX,KAAME,GAAOa,cAAehB,EAAKG,GAAMa,cAAeC,UAAWjB,EAAKG,GAAMc,UAAWC,OAAQlB,EAAKG,GAAMgB,kBAIzJ,iBAAhCnB,EAAK,UAAYI,cACpBS,EAAe,KAAOvC,KAAK0B,EAAK,KAAKlD,OAAQkD,EAAK,KAAKjD,WAAY6D,GAAYX,KAAM,KAAMe,cAAehB,EAAK,KAAKgB,cAAeC,UAAWjB,EAAK,KAAKiB,UAAWC,OAAQlB,EAAK,KAAKmB,oBAKxLR,oBAAqB,WAIpB,IAAI,IAAIjB,KAAKO,KAAKa,gBACjBb,KAAKa,gBAAgBpB,GAAGb,iBACjBoB,KAAKa,gBAAgBpB,IAI9B0B,kBAAmB,SAAoB/B,EAAmBgC,GAMzD,GAAW,OAARhC,EACF,MAAM,IAAIiC,MAAMrB,KAAO,8FAIxB,IAAIY,EAAiBZ,KAAKa,gBAAkBb,KAAKa,oBAC9CD,EAAexB,KACjBwB,EAAexB,GAAMR,iBACdgC,EAAexB,IAIvBY,KAAKZ,GAAQ,KAGbY,KAAKc,UAAY,KAEdd,KAAKsB,SAEPV,EAAexB,GAAQf,KAAK+C,EAAMvE,OAAQuE,EAAMtE,WAAYkD,KAAMZ,GAAO2B,cAAeK,EAAML,cAAeC,UAAWI,EAAMJ,UAAWC,OAAQG,EAAMF,iBAGvJlB,KAAKC,MAAMb,GAAQgC,GAIrBG,SAAU,SAAoBH,OAI7B,IAAII,KAAOC,KAAK,KAAOL,MAAQ,MAC/B,IAAI,IAAIlB,QAAQsB,KAAK,CACpB,IAAIjC,EAAIiC,KAAKtB,MACe,iBAAxBX,OAASY,YACZhD,QAAQC,KAAK8C,KAAO,OAASP,aAAe,kCAE5CK,KAAKmB,kBAAkBjB,KAAMX,KAKhCmC,iBAAkB,WAIjB,GAAG1B,KAAKc,UACP,OAAOd,KAAKc,UAEb,IAAIU,KACJ,IAAI,IAAI/B,KAAKO,KAAKa,gBACT,KAALpB,GAAW+B,EAAKG,KAAKlC,GAEzB,OAAO+B,GAGRI,mBAAoB,WAMnB,GAAG5B,KAAK7B,YAAY0D,SACnB,OAAO7B,KAAK7B,YAAY0D,SAEzB,IAAIL,GAAQ,WAAWM,OAAO9B,KAAK7B,YAAY4D,cAK/C,OAJA1F,MAAM2F,SAAS,KAAM,WAAY,aAAc,MAAO,WAAY,SAASvC,GAC1E,IAAIwC,EAAQ5F,MAAM6F,QAAQV,EAAM/B,GAC7BwC,GAAS,GAAIT,EAAKW,OAAOF,EAAO,KAE7BjC,KAAK7B,YAAY0D,SAAWL,IAIrC9B,MAAMA,MAAMC,cAAgB,GAE5B,IAAIyC,gBAAkB7F,QAAQ,4BAA6B,KAAMmD,OAEjE,OADA0C,gBAAgB1C,MAAQA,MACjB0C","file":"../../mvc/_atBindingMixin.js","sourcesContent":["define([\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/has\",\r\n\t\"dojo/Stateful\",\r\n\t\"./resolve\",\r\n\t\"./sync\"\r\n], function(array, lang, declare, has, Stateful, resolve, sync){\r\n\tif(has(\"mvc-bindings-log-api\")){\r\n\t\tfunction getLogContent(/*dojo/Stateful*/ target, /*String*/ targetProp){\r\n\t\t\treturn [target._setIdAttr || !target.declaredClass ? target : target.declaredClass, targetProp].join(\":\");\r\n\t\t}\r\n\r\n\t\tfunction logResolveFailure(target, targetProp){\r\n\t\t\tconsole.warn(targetProp + \" could not be resolved\" + (typeof target == \"string\" ? (\" with \" + target) : \"\") + \".\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getParent(/*dijit/_WidgetBase*/ w){\r\n\t\t// summary:\r\n\t\t//\t\tReturns parent widget having data binding target for relative data binding.\r\n\t\t// w: dijit/_WidgetBase\r\n\t\t//\t\tThe widget.\r\n\r\n\t\t// Usage of dijit/registry module is optional. Return null if it's not already loaded.\r\n\t\tvar registry;\r\n\t\ttry{\r\n\t\t\tregistry = require(\"dijit/registry\");\r\n\t\t}catch(e){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar pn = w.domNode && w.domNode.parentNode, pw, pb;\r\n\t\twhile(pn){\r\n\t\t\tpw = registry.getEnclosingWidget(pn);\r\n\t\t\tif(pw){\r\n\t\t\t\tvar relTargetProp = pw._relTargetProp || \"target\", pt = lang.isFunction(pw.get) ? pw.get(relTargetProp) : pw[relTargetProp];\r\n\t\t\t\tif(pt || relTargetProp in pw.constructor.prototype){\r\n\t\t\t\t\treturn pw; // dijit/_WidgetBase\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpn = pw && pw.domNode.parentNode;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction bind(/*dojo/Stateful|String*/ source, /*String*/ sourceProp, /*dijit/_WidgetBase*/ target, /*String*/ targetProp, /*dojox/mvc/sync.options*/ options){\r\n\t\t// summary:\r\n\t\t//\t\tResolves the data binding literal, and starts data binding.\r\n\t\t// source: dojo/Stateful|String\r\n\t\t//\t\tSource data binding literal or dojo/Stateful to be synchronized.\r\n\t\t// sourceProp: String\r\n\t\t//\t\tThe property name in source to be synchronized.\r\n\t\t// target: dijit/_WidgetBase\r\n\t\t//\t\tTarget dojo/Stateful to be synchronized.\r\n\t\t// targetProp: String\r\n\t\t//\t\tThe property name in target to be synchronized.\r\n\t\t// options: dojox/mvc/sync.options\r\n\t\t//\t\tData binding options.\r\n\r\n\t\tvar _handles = {}, parent = getParent(target), relTargetProp = parent && parent._relTargetProp || \"target\";\r\n\r\n\t\tfunction resolveAndBind(){\r\n\t\t\t_handles[\"Two\"] && _handles[\"Two\"].unwatch();\r\n\t\t\tdelete _handles[\"Two\"];\r\n\r\n\t\t\tvar relTarget = parent && (lang.isFunction(parent.get) ? parent.get(relTargetProp) : parent[relTargetProp]),\r\n\t\t\t resolvedSource = resolve(source, relTarget),\r\n\t\t\t resolvedTarget = resolve(target, relTarget);\r\n\r\n\t\t\tif(has(\"mvc-bindings-log-api\") && (!resolvedSource || /^rel:/.test(source) && !parent)){ logResolveFailure(source, sourceProp); }\r\n\t\t\tif(has(\"mvc-bindings-log-api\") && (!resolvedTarget || /^rel:/.test(target) && !parent)){ logResolveFailure(target, targetProp); }\r\n\t\t\tif(!resolvedSource || !resolvedTarget || (/^rel:/.test(source) || /^rel:/.test(target)) && !parent){ return; }\r\n\t\t\tif((!resolvedSource.set || !resolvedSource.watch) && sourceProp == \"*\"){\r\n\t\t\t\tif(has(\"mvc-bindings-log-api\")){ logResolveFailure(source, sourceProp); }\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(sourceProp == null){\r\n\t\t\t\t// If source property is not specified, it means this handle is just for resolving data binding target.\r\n\t\t\t\t// (For dojox/mvc/Group and dojox/mvc/Repeat)\r\n\t\t\t\t// Do not perform data binding synchronization in such case.\r\n\t\t\t\tlang.isFunction(resolvedTarget.set) ? resolvedTarget.set(targetProp, resolvedSource) : (resolvedTarget[targetProp] = resolvedSource);\r\n\t\t\t\tif(has(\"mvc-bindings-log-api\")){\r\n\t\t\t\t\tconsole.log(\"dojox/mvc/_atBindingMixin set \" + resolvedSource + \" to: \" + getLogContent(resolvedTarget, targetProp));\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// Start data binding\r\n\t\t\t\t_handles[\"Two\"] = sync(resolvedSource, sourceProp, resolvedTarget, targetProp, options); // dojox/mvc/sync.handle\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tresolveAndBind();\r\n\t\tif(parent && /^rel:/.test(source) || /^rel:/.test(target) && lang.isFunction(parent.set) && lang.isFunction(parent.watch)){\r\n\t\t\t_handles[\"rel\"] = parent.watch(relTargetProp, function(name, old, current){\r\n\t\t\t\tif(old !== current){\r\n\t\t\t\t\tif(has(\"mvc-bindings-log-api\")){ console.log(\"Change in relative data binding target: \" + parent); }\r\n\t\t\t\t\tresolveAndBind();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tvar h = {};\r\n\t\th.unwatch = h.remove = function(){\r\n\t\t\tfor(var s in _handles){\r\n\t\t\t\t_handles[s] && _handles[s].unwatch();\r\n\t\t\t\tdelete _handles[s];\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn h;\r\n\t}\r\n\r\n\tvar mixin = {\r\n\t\t// summary:\r\n\t\t//\t\tThe mixin for dijit/_WidgetBase to support data binding.\r\n\r\n\t\t// dataBindAttr: String\r\n\t\t//\t\tThe attribute name for data binding.\r\n\t\tdataBindAttr: \"data-mvc-bindings\",\r\n\r\n\t\t_dbpostscript: function(/*Object?*/ params, /*DomNode|String*/ srcNodeRef){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSee if any parameters for this widget are dojox/mvc/at handles.\r\n\t\t\t//\t\tIf so, move them under this._refs to prevent widget implementations from referring them.\r\n\r\n\t\t\tvar refs = this._refs = (params || {}).refs || {};\r\n\t\t\tfor(var prop in params){\r\n\t\t\t\tif((params[prop] || {}).atsignature == \"dojox.mvc.at\"){\r\n\t\t\t\t\tvar h = params[prop];\r\n\t\t\t\t\tdelete params[prop];\r\n\t\t\t\t\trefs[prop] = h;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar dbParams = new Stateful(),\r\n\t\t\t _self = this;\r\n\t\t\tdbParams.toString = function(){ return '[Mixin value of widget ' + _self.declaredClass + ', ' + (_self.id || 'NO ID') + ']'; };\r\n\t\t\tdbParams.canConvertToLoggable = true;\r\n\t\t\tthis._startAtWatchHandles(dbParams);\r\n\t\t\tfor(var prop in refs){\r\n\t\t\t\tif(dbParams[prop] !== void 0){\r\n\t\t\t\t\t(params = params || {})[prop] = dbParams[prop];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._stopAtWatchHandles();\r\n\t\t},\r\n\r\n\t\t_startAtWatchHandles: function(/*dojo/Stateful*/ bindWith){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEstablish data bindings based on dojox/mvc/at handles.\r\n\t\t\t// bindWith: dojo/Stateful\r\n\t\t\t//\t\tThe dojo/Stateful to bind properties with.\r\n\r\n\t\t\tthis.canConvertToLoggable = true;\r\n\r\n\t\t\tvar refs = this._refs;\r\n\t\t\tif(refs){\r\n\t\t\t\tvar atWatchHandles = this._atWatchHandles = this._atWatchHandles || {};\r\n\r\n\t\t\t\t// Clear the cache of properties that data binding is established with\r\n\t\t\t\tthis._excludes = null;\r\n\r\n\t\t\t\t// First, establish non-wildcard data bindings\r\n\t\t\t\tfor(var prop in refs){\r\n\t\t\t\t\tif(!refs[prop] || prop == \"*\"){ continue; }\r\n\t\t\t\t\tatWatchHandles[prop] = bind(refs[prop].target, refs[prop].targetProp, bindWith || this, prop, {bindDirection: refs[prop].bindDirection, converter: refs[prop].converter, equals: refs[prop].equalsCallback});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Then establish wildcard data bindings\r\n\t\t\t\tif((refs[\"*\"] || {}).atsignature == \"dojox.mvc.at\"){\r\n\t\t\t\t\tatWatchHandles[\"*\"] = bind(refs[\"*\"].target, refs[\"*\"].targetProp, bindWith || this, \"*\", {bindDirection: refs[\"*\"].bindDirection, converter: refs[\"*\"].converter, equals: refs[\"*\"].equalsCallback});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_stopAtWatchHandles: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStops data binding synchronization handles as widget is destroyed.\r\n\r\n\t\t\tfor(var s in this._atWatchHandles){\r\n\t\t\t\tthis._atWatchHandles[s].unwatch();\r\n\t\t\t\tdelete this._atWatchHandles[s];\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setAtWatchHandle: function(/*String*/ name, /*Anything*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled if the value is a dojox/mvc/at handle.\r\n\t\t\t//\t\tIf this widget has started, start data binding with the new dojox/mvc/at handle.\r\n\t\t\t//\t\tOtherwise, queue it up to this._refs so that _dbstartup() can pick it up.\r\n\r\n\t\t\tif(name == \"ref\"){\r\n\t\t\t\tthrow new Error(this + \": 1.7 ref syntax used in conjunction with 1.8 dojox/mvc/at syntax, which is not supported.\");\r\n\t\t\t}\r\n\r\n\t\t\t// Claen up older data binding\r\n\t\t\tvar atWatchHandles = this._atWatchHandles = this._atWatchHandles || {};\r\n\t\t\tif(atWatchHandles[name]){\r\n\t\t\t\tatWatchHandles[name].unwatch();\r\n\t\t\t\tdelete atWatchHandles[name];\r\n\t\t\t}\r\n\r\n\t\t\t// Claar the value\r\n\t\t\tthis[name] = null;\r\n\r\n\t\t\t// Clear the cache of properties that data binding is established with\r\n\t\t\tthis._excludes = null;\r\n\r\n\t\t\tif(this._started){\r\n\t\t\t\t// If this widget has been started already, establish data binding immediately.\r\n\t\t\t\tatWatchHandles[name] = bind(value.target, value.targetProp, this, name, {bindDirection: value.bindDirection, converter: value.converter, equals: value.equalsCallback});\r\n\t\t\t}else{\r\n\t\t\t\t// Otherwise, queue it up to this._refs so that _dbstartup() can pick it up.\r\n\t\t\t\tthis._refs[name] = value;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setBind: function(/*Object*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets data binding described in data-mvc-bindings.\r\n\r\n\t\t\tvar list = eval(\"({\" + value + \"})\");\r\n\t\t\tfor(var prop in list){\r\n\t\t\t\tvar h = list[prop];\r\n\t\t\t\tif((h || {}).atsignature != \"dojox.mvc.at\"){\r\n\t\t\t\t\tconsole.warn(prop + \" in \" + dataBindAttr + \" is not a data binding handle.\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis._setAtWatchHandle(prop, h);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_getExcludesAttr: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns list of all properties that data binding is established with.\r\n\r\n\t\t\tif(this._excludes){ \r\n\t\t\t\treturn this._excludes;  // String[] \r\n\t\t\t}\r\n\t\t\tvar list = [];\r\n\t\t\tfor(var s in this._atWatchHandles){\r\n\t\t\t\tif(s != \"*\"){ list.push(s); }\r\n\t\t\t}\r\n\t\t\treturn list; // String[]\r\n\t\t},\r\n\r\n\t\t_getPropertiesAttr: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns list of all properties in this widget, except \"id\".\r\n\t\t\t// returns: String[]\r\n\t\t\t//\t\t The list of all properties in this widget, except \"id\"..\r\n\r\n\t\t\tif(this.constructor._attribs){\r\n\t\t\t\treturn this.constructor._attribs; // String[]\r\n\t\t\t}\r\n\t\t\tvar list = [\"onClick\"].concat(this.constructor._setterAttrs);\r\n\t\t\tarray.forEach([\"id\", \"excludes\", \"properties\", \"ref\", \"binding\"], function(s){\r\n\t\t\t\tvar index = array.indexOf(list, s);\r\n\t\t\t\tif(index >= 0){ list.splice(index, 1); }\r\n\t\t\t});\r\n\t\t\treturn this.constructor._attribs = list; // String[]\r\n\t\t}\r\n\t};\r\n\r\n\tmixin[mixin.dataBindAttr] = \"\"; // Let parser treat the attribute as string\r\n\r\n\tvar _atBindingMixin = declare(\"dojox/mvc/_atBindingMixin\", null, mixin);\r\n\t_atBindingMixin.mixin = mixin; // Keep the plain object version\r\n\treturn _atBindingMixin;\r\n});\r\n"]}