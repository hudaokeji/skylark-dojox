{"version":3,"sources":["mvc/Repeat.js"],"names":["define","declare","lang","has","win","dom","domconstruct","array","query","when","registry","_Container","index","useParent","removeRepeatNode","children","_relTargetProp","startup","this","isFunction","getParent","select","onCheckStateChanged","inherited","arguments","_setChildrenAttr","postscript","params","srcNodeRef","byId","prop","_attachTemplateNodes","innerHTML","e","firstChild","removeChild","value","_set","binding","set","_started","_builtOnce","_buildContained","_destroyBody","_updateAddRemoveWatch","insert","get","push","_exprRepl","repeatNode","containerNode","domNode","test","tagName","div","doc","createElement","join","tbody","getElementsByTagName","appendChild","tr","_self","_createBody","repeatnode","savedParentId","parentNode","id","repeatParent","t3","findWidgets","j","length","declaredClass","cnt","selForList","i","place","destroy","_addRemoveWatch","unwatch","pThis","watchElements","idx","removals","adds"],"mappings":"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","file":"../../mvc/Repeat.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/sniff\",\r\n\t\"dojo/_base/window\",\r\n\t\"dojo/dom\",\r\n\t\"dojo/dom-construct\",\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/query\",\r\n\t\"dojo/when\",\r\n\t\"dijit/registry\",\r\n\t\"./_Container\"\r\n], function(declare, lang, has, win, dom, domconstruct, array, query, when, registry, _Container){\r\n\r\n\treturn declare(\"dojox.mvc.Repeat\", _Container, {\r\n\t\t// summary:\r\n\t\t//\t\tA model-bound container which binds to a collection within a data model\r\n\t\t//\t\tand produces a repeating user-interface from a template for each\r\n\t\t//\t\titeration within the collection.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tA repeat is bound to an intermediate dojo/Stateful node corresponding\r\n\t\t//\t\tto an array in the data model. Child dijits or custom view components\r\n\t\t//\t\tinside it inherit their parent data binding context from it.\r\n\r\n\t\t// index: Integer\r\n\t\t//\t\tAn index used to track the current iteration when the repeating UI is\r\n\t\t//\t\tproduced. This may be used to parameterize the content in the repeat\r\n\t\t//\t\ttemplate for the current iteration.\r\n\t\t//\r\n\t\t//\t\tFor example, consider a collection of search or query results where\r\n\t\t//\t\teach item contains a \"Name\" property used to prime the \"Results\" data\r\n\t\t//\t\tmodel. Then, the following CRUD-style UI displays all the names in\r\n\t\t//\t\tthe search results in text boxes where they may be updated or such.\r\n\t\t//\r\n\t\t//\t\t|\t<div dojoType=\"dojox/mvc/Repeat\" ref=\"Results\">\r\n\t\t//\t\t|\t\t<div class=\"row\" dojoType=\"dojox/mvc/Group\" ref=\"${this.index}\">\r\n\t\t//\t\t|\t\t\t<label for=\"nameInput${this.index}\">Name:</label>\r\n\t\t//\t\t|\t\t\t<input dojoType=\"dijit/form/TextBox\" id=\"nameInput${this.index}\" ref=\"'Name'\"></input>\r\n\t\t//\t\t|\t\t</div>\r\n\t\t//\t\t|\t</div>\r\n\t\tindex : 0,\r\n\r\n\t\t// useParent: String\r\n\t\t//\t\tid of the DOM node to use as the parent for the repeating items, similar to useParentId processed a little differently \r\n\t\tuseParent : \"\",\r\n\t\t\r\n\t\t// removeRepeatNode: boolean\r\n\t\t//\t\tWhen true the dom node for the Repeat and Groups within the Repeat\r\n\t\t//\t\twill be removed, their children will be placed into the parent node \r\n\t\t//\t\tof the Repeat node.  This should be set to true when working with \r\n\t\t//\t\ta Repeat inside of a dojox.mobile list.\t\t\r\n\t\tremoveRepeatNode : false,\r\n\r\n\t\t// children: dojox/mvc/StatefulArray\r\n\t\t//\t\tThe array of data model that is used to render child nodes.\r\n\t\tchildren: null,\r\n\r\n\t\t// _relTargetProp: String\r\n\t\t//\t\tThe name of the property that is used by child widgets for relative data binding.\r\n\t\t_relTargetProp : \"children\",\r\n\r\n\t\tstartup: function(){\r\n\t\t\t// This code needed for ticket 14423 is using removeRepeatNode to work with mobile.lists\r\n\t\t\t// this.select and this.onCheckStateChanged are called by ListItem so they need to be set\r\n\t\t\t// but it seems like a bit of a hack.\r\n\t\t\tif(this.removeRepeatNode){\t\t\t\t\r\n\t\t\t\tvar parent = null;\r\n\t\t\t\tif(lang.isFunction(this.getParent)){\r\n\t\t\t\t\tif(this.getParent()){\r\n\t\t\t\t\t\tthis.select = this.getParent().select;\r\n\t\t\t\t\t\tthis.onCheckStateChanged = this.getParent().onCheckStateChanged;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._setChildrenAttr(this.children);\r\n\t\t},\r\n\r\n\t\t// summary:\r\n\t\t//\t\tOverride and save template from body.\r\n\t\tpostscript: function(params, srcNodeRef){\r\n\t\t\t//this.srcNodeRef = dom.byId(srcNodeRef);\r\n\t\t\tif(this.useParent && dom.byId(this.useParent)){\r\n\t\t\t\tthis.srcNodeRef = dom.byId(this.useParent);\t\t\t\t\r\n\t\t\t} else{\r\n\t\t\t\tthis.srcNodeRef = dom.byId(srcNodeRef);\r\n\t\t\t}\r\n\t\t\tif(this.srcNodeRef){\r\n\t\t\t\tvar prop = this._attachTemplateNodes ? \"inlineTemplateString\" : \"templateString\";\r\n\t\t\t\tif(this[prop] == \"\"){ // only overwrite templateString if it has not been set\r\n\t\t\t\t\tthis[prop] = this.srcNodeRef.innerHTML;\r\n\t\t\t\t}\r\n\t\t\t\ttry{\r\n\t\t\t\t\tthis.srcNodeRef.innerHTML = \"\";\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\twhile(this.srcNodeRef.firstChild){ this.srcNodeRef.removeChild(this.srcNodeRef.firstChild); }\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t////////////////////// PRIVATE METHODS ////////////////////////\r\n\r\n\t\t_setChildrenAttr: function(/*dojo/Stateful*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for calls to set(\"children\", val).\r\n\t\t\t// description:\r\n\t\t\t//\t\tSets \"ref\" property so that child widgets can refer to, and then rebuilds the children.\r\n\r\n\t\t\tvar children = this.children;\r\n\t\t\tthis._set(\"children\", value);\r\n\t\t\t// this.binding is the resolved ref, so not matching with the new value means change in repeat target.\r\n\t\t\tif(this.binding != value){\r\n\t\t\t\tthis.set(\"ref\", value);\r\n\t\t\t}\r\n\t\t\tif(this._started && (!this._builtOnce || children != value)){\r\n\t\t\t\tthis._builtOnce = true;\r\n\t\t\t\tthis._buildContained(value);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_buildContained: function(/*dojox/mvc/StatefulArray*/ children){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDestroy any existing contained view, recreate the repeating UI\r\n\t\t\t//\t\tmarkup and parse the new contents.\r\n\t\t\t// children: dojox/mvc/StatefulArray\r\n\t\t\t//\t\tThe array of child widgets.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(!children){ return; }\r\n\r\n\t\t\t// TODO: Potential optimization: only create new widgets for insert, only destroy for delete.\r\n\t\t\tif(this.useParent && dom.byId(this.useParent)){\r\n\t\t\t\tthis.srcNodeRef = dom.byId(this.useParent);\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tthis._destroyBody();\r\n\t\t\tthis._updateAddRemoveWatch(children);\r\n\r\n\t\t\tvar insert = [], prop = this._attachTemplateNodes ? \"inlineTemplateString\" : \"templateString\";\r\n\t\t\tfor(this.index = 0; lang.isFunction(children.get) ? children.get(this.index) : children[this.index]; this.index++){\r\n\t\t\t\tinsert.push(this._exprRepl(this[prop]));\r\n\t\t\t}\r\n\r\n\t\t\tvar repeatNode = this.containerNode || this.srcNodeRef || this.domNode;\r\n\t\t\tif(has(\"ie\") && /^(table|tbody)$/i.test(repeatNode.tagName)){\r\n\t\t\t\tvar div = win.doc.createElement(\"div\");\r\n\t\t\t\tdiv.innerHTML = \"<table><tbody>\" + insert.join(\"\") + \"</tbody></table>\";\r\n\t\t\t\tfor(var tbody = div.getElementsByTagName(\"tbody\")[0]; tbody.firstChild;){\r\n\t\t\t\t\trepeatNode.appendChild(tbody.firstChild);\r\n\t\t\t\t}\r\n\t\t\t}else if(has(\"ie\") && /^td$/i.test(repeatNode.tagName)){\r\n\t\t\t\tvar div = win.doc.createElement(\"div\");\r\n\t\t\t\tdiv.innerHTML = \"<table><tbody><tr>\" + insert.join(\"\") + \"</tr></tbody></table>\";\r\n\t\t\t\tfor(var tr = div.getElementsByTagName(\"tr\")[0]; tr.firstChild;){\r\n\t\t\t\t\trepeatNode.appendChild(tr.firstChild);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\trepeatNode.innerHTML = insert.join(\"\");\r\n\t\t\t}\r\n\r\n\t\t\t// srcNodeRef is used in _createBody, so in the programmatic create case where repeatNode was set  \r\n\t\t\t// from this.domNode we need to set srcNodeRef from repeatNode\r\n\t\t\tthis.srcNodeRef = repeatNode;\r\n\r\n\t\t\tvar _self = this;\r\n\r\n\t\t\twhen(this._createBody(), function(){\r\n\t\t\t\tif(!_self.removeRepeatNode){ return; }\r\n\t\t\t\t\r\n\t\t\t\tvar repeatnode = _self.domNode;\r\n\t\t\t\tif(!_self.savedParentId && _self.domNode.parentNode && _self.domNode.parentNode.id){\r\n\t\t\t\t\t_self.savedParentId = _self.domNode.parentNode.id;\r\n\t\t\t\t}\r\n\t\t\t\tvar repeatParent = dom.byId(_self.savedParentId);\t\t\t\r\n\t\t\t\tif(repeatnode && repeatnode.children){\r\n\t\t\t\t\tvar t3 = registry.findWidgets(repeatnode);\r\n\t\t\t\t\tvar parentcnt = t3.length;\r\n\t\t\t\t\tfor(var j = parentcnt;j > 0;j--){\r\n\t\t\t\t\t\tif(t3[j-1].declaredClass == \"dojox.mvc.Group\"){\r\n\t\t\t\t\t\t\tvar cnt = repeatnode.children[j-1].children.length;\r\n\t\t\t\t\t\t\tvar selForList = registry.byId(repeatParent.id).select;\r\n\t\t\t\t\t\t\tfor(var i = cnt;i > 0;i--){\r\n\t\t\t\t\t\t\t\tregistry.byId(repeatnode.children[j-1].id).select = selForList;\r\n\t\t\t\t\t\t\t\tdomconstruct.place(repeatnode.children[j-1].removeChild(repeatnode.children[j-1].children[i-1]), repeatParent, \"first\");\r\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tdomconstruct.place(repeatnode.removeChild(repeatnode.children[j-1]), repeatParent, \"first\");\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdomconstruct.destroy(repeatnode);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_updateAddRemoveWatch: function(/*dojo/Stateful*/ children){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUpdates the watch handle when binding changes.\r\n\t\t\t// children: dojo/Stateful\r\n\t\t\t//\t\tThe array of child widgets.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(this._addRemoveWatch){\r\n\t\t\t\tthis._addRemoveWatch.unwatch();\r\n\t\t\t}\r\n\t\t\tvar pThis = this;\r\n\t\t\tthis._addRemoveWatch = lang.isFunction(children.watchElements) && children.watchElements(function(idx, removals, adds){\r\n\t\t\t\tif(!removals || !adds || removals.length || adds.length){\r\n\t\t\t\t\tpThis._buildContained(pThis.children);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n});\r\n"]}