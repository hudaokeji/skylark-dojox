{"version":3,"sources":["mvc/WidgetList.js"],"names":["define","require","array","lang","declare","_Container","_WidgetBase","Templated","childTypeAttr","childMixinsAttr","childParamsAttr","childBindingsAttr","undef","evalParams","params","eval","unwatchElements","w","h","_handles","pop","unwatch","flatten","a","flattened","forEach","item","push","apply","loadModules","items","callback","this","childClz","childType","typesForItems","isFunction","childMixins","map","type","call","mixins","concat","isArray","split","filter","getObject","types","clzList","length","WidgetList","childParams","childBindings","children","partialRebuild","_relTargetProp","postMixInProperties","inherited","arguments","startup","_setChildrenAttr","value","_set","_started","_builtOnce","_buildChildren","_self","watch","name","old","current","isNaN","getChildren","set","cw","removeChild","destroy","seq","_buildChildrenSeq","initial","idx","removals","adds","changes","watchElements","change","hitch","loadedModule","_beingDestroyed","list","slice","clz","shift","unshift","i","l","child","ownerDocument","parent","indexAtStartup","prototype","templateString","bindings","delegate","addChild"],"mappings":"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","file":"../../mvc/WidgetList.js","sourcesContent":["define([\r\n\t\"require\",\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dijit/_Container\",\r\n\t\"dijit/_WidgetBase\",\r\n\t\"./Templated\"\r\n], function(require, array, lang, declare, _Container, _WidgetBase, Templated){\r\n\tvar childTypeAttr = \"data-mvc-child-type\",\r\n\t childMixinsAttr = \"data-mvc-child-mixins\",\r\n\t childParamsAttr = \"data-mvc-child-props\",\r\n\t childBindingsAttr = \"data-mvc-child-bindings\",\r\n\t undef;\r\n\r\n\tfunction evalParams(params){\r\n\t\treturn eval(\"({\" + params + \"})\");\r\n\t}\r\n\r\n\tfunction unwatchElements(/*dojox/mvc/WidgetList*/ w){\r\n\t\tfor(var h = null; h = (w._handles || []).pop();){\r\n\t\t\th.unwatch();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction flatten(/*String[][]*/ a){\r\n\t\tvar flattened = [];\r\n\t\tarray.forEach(a, function(item){\r\n\t\t\t[].push.apply(flattened, item);\r\n\t\t});\r\n\t\treturn flattened;\r\n\t}\r\n\r\n\tfunction loadModules(/*dojo/Stateful[]*/ items, /*Function*/ callback){\r\n\t\t// summary:\r\n\t\t//\t\tLoad modules associated with an array of data.\r\n\t\t// items: dojo/Stateful[]\r\n\t\t//\t\tThe array of data.\r\n\t\t// callback: Function\r\n\t\t//\t\tThen callback called when the modules have been loaded.\r\n\r\n\t\tif(this.childClz){\r\n\t\t\tcallback(this.childClz);\r\n\t\t}else if(this.childType){\r\n\t\t\tvar typesForItems = !lang.isFunction(this.childType) && !lang.isFunction(this.childMixins) ? [[this.childType].concat(this.childMixins && this.childMixins.split(\",\") || [])] :\r\n\t\t\t array.map(items, function(item){\r\n\t\t\t\tvar type = lang.isFunction(this.childType) ? this.childType.call(item, this) : this.childType,\r\n\t\t\t\t mixins = lang.isFunction(this.childMixins) ? this.childMixins.call(item, this) : this.childMixins;\r\n\t\t\t\treturn type ? [type].concat(lang.isArray(mixins) ? mixins : mixins ? mixins.split(\",\") : []) : [\"dojox/mvc/Templated\"];\r\n\t\t\t}, this);\r\n\t\t\trequire(array.filter(array.map(flatten(typesForItems), function(type){ return lang.getObject(type) ? undef : type; }), function(type){ return type !== undef; }), function(){\r\n\t\t\t\tcallback.apply(this, array.map(typesForItems, function(types){\r\n\t\t\t\t\tvar clzList = array.map(types, function(type){ return lang.getObject(type) || require(type); });\r\n\t\t\t\t\treturn clzList.length > 1 ? declare(clzList, {}) : clzList[0];\r\n\t\t\t\t}));\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tcallback(Templated);\r\n\t\t}\r\n\t}\r\n\r\n\tvar WidgetList = declare(\"dojox.mvc.WidgetList\", [_WidgetBase, _Container], {\r\n\t\t// summary:\r\n\t\t//\t\tA widget that creates child widgets repeatedly based on the children attribute (the repeated data) and childType/childMixins/childParams attributes (determines how to create each child widget).\r\n\t\t// example:\r\n\t\t//\t\tCreate multiple instances of dijit/TextBox based on the data in array.\r\n\t\t//\t\tThe text box refers to First property in the array item.\r\n\t\t// |\t\t<div data-dojo-type=\"dojox/mvc/WidgetList\"\r\n\t\t// |\t\t data-dojo-props=\"children: array\"\r\n\t\t// |\t\t data-mvc-child-type=\"dijit/form/TextBox\"\r\n\t\t// |\t\t data-mvc-child-props=\"value: at(this.target, 'First')\"></div>\r\n\t\t// example:\r\n\t\t//\t\tCreate multiple instances of widgets-in-template based on the HTML written in `<script type=\"dojox/mvc/InlineTemplate\">`.\r\n\t\t//\t\tThe label refers to Serial property in the array item, and the text box refers to First property in the array item.\r\n\t\t// |\t\t<div data-dojo-type=\"dojox/mvc/WidgetList\"\r\n\t\t// |\t\t data-dojo-mixins=\"dojox/mvc/_InlineTemplateMixin\"\r\n\t\t// |\t\t data-dojo-props=\"children: array\">\r\n\t\t// |\t\t\t<script type=\"dojox/mvc/InlineTemplate\">\r\n\t\t// |\t\t\t\t<div>\r\n\t\t// |\t\t\t\t\t<span data-dojo-type=\"dijit/_WidgetBase\"\r\n\t\t// |\t\t\t\t\t data-dojo-props=\"_setValueAttr: {node: 'domNode', type: 'innerText'}, value: at('rel:', 'Serial')\"></span>: \r\n\t\t// |\t\t\t\t\t<span data-dojo-type=\"dijit/form/TextBox\"\r\n\t\t// |\t\t\t\t\t data-dojo-props=\"value: at('rel:', 'First')\"></span>\r\n\t\t// |\t\t\t\t</div>\r\n\t\t// |\t\t\t</script>\r\n\t\t// |\t\t</div>\r\n\t\t// example:\r\n\t\t//\t\tProgrammatically create multiple instances of widgets-in-template based on the HTML stored in childTemplate.\r\n\t\t//\t\t(childTemplate may come from dojo/text)\r\n\t\t//\t\tAlso programmatically establish data binding at child widget's startup phase.\r\n\t\t//\t\tThe label refers to Serial property in the array item, and the text box refers to First property in the array item.\r\n\t\t// |\t\tvar childTemplate = '<div>'\r\n\t\t// |\t\t + '<span data-dojo-type=\"dijit/_WidgetBase\"'\r\n\t\t// |\t\t + ' data-dojo-attach-point=\"labelNode\"'\r\n\t\t// |\t\t + ' data-dojo-props=\"_setValueAttr: {node: \\'domNode\\', type: \\'innerText\\'}\"></span>'\r\n\t\t// |\t\t + '<span data-dojo-type=\"dijit/form/TextBox\"'\r\n\t\t// |\t\t + ' data-dojo-attach-point=\"inputNode\"></span>'\r\n\t\t// |\t\t + '</div>';\r\n\t\t// |\t\t(new WidgetList({\r\n\t\t// |\t\t\tchildren: array,\r\n\t\t// |\t\t\tchildParams: {\r\n\t\t// |\t\t\t\tstartup: function(){\r\n\t\t// |\t\t\t\t\tthis.labelNode.set(\"value\", at(\"rel:\", \"Serial\"));\r\n\t\t// |\t\t\t\t\tthis.inputNode.set(\"value\", at(\"rel:\", \"First\"));\r\n\t\t// |\t\t\t\t\tthis.inherited(\"startup\", arguments);\r\n\t\t// |\t\t\t\t}\r\n\t\t// |\t\t\t},\r\n\t\t// |\t\t\ttemplateString: childTemplate\r\n\t\t// |\t\t}, dom.byId(\"programmaticRepeat\"))).startup();\r\n\t\t// example:\r\n\t\t//\t\tUsing the same childTemplate above, establish data binding for child widgets based on the declaration in childBindings.\r\n\t\t//\t\t(childBindings may come from dojo/text, by eval()'ing the text)\r\n\t\t// |\t\tvar childBindings = {\r\n\t\t// |\t\t\tlabelNode: {value: at(\"rel:\", \"Serial\")},\r\n\t\t// |\t\t\tinputNode: {value: at(\"rel:\", \"First\")}\r\n\t\t// |\t\t};\r\n\t\t// |\t\t(new WidgetList({\r\n\t\t// |\t\t\tchildren: array,\r\n\t\t// |\t\t\ttemplateString: childTemplate,\r\n\t\t// |\t\t\tchildBindings: childBindings\r\n\t\t// |\t\t}, dom.byId(\"programmaticRepeatWithSeparateBindingDeclaration\"))).startup();\r\n\r\n\t\t// childClz: Function\r\n\t\t//\t\tThe class of the child widget. Takes precedence over childType/childMixins.\r\n\t\tchildClz: null,\r\n\r\n\t\t// childType: String|Function\r\n\t\t//\t\tThe module ID of child widget, or a function that takes child data as the argument and returns the module ID of child widget. childClz takes precedence over this/childMixins.\r\n\t\t//\t\tCan be specified via data-mvc-child-type attribute of widget declaration.\r\n\t\tchildType: \"\",\r\n\r\n\t\t// childMixins: String|String[]|Function\r\n\t\t//\t\tThe list of module IDs (separated by comma), or a function that takes child data as the argument and returns it, of the classes that will be mixed into child widget. childClz takes precedence over childType/this.\r\n\t\t//\t\tCan be specified via data-mvc-child-mixins attribute of widget declaration.\r\n\t\tchildMixins: \"\",\r\n\r\n\t\t// childParams: Object|Function\r\n\t\t//\t\tThe mixin properties for child widget.\r\n\t\t//\t\tCan be specified via data-mvc-child-props attribute of widget declaration.\r\n\t\t//\t\t\"this\" in data-mvc-child-props will have the following properties:\r\n\t\t//\r\n\t\t//\t\t- parent - This widget's instance.\r\n\t\t//\t\t- target - The data item in children.\r\n\t\tchildParams: null,\r\n\r\n\t\t// childBindings: Object|Function\r\n\t\t//\t\tData bindings for child widget.\r\n\t\tchildBindings: null,\r\n\r\n\t\t// children: dojox/mvc/StatefulArray\r\n\t\t//\t\tThe array of data model that is used to render child nodes.\r\n\t\tchildren: null,\r\n\r\n\t\t/*=====\r\n\t\t// templateString: String\r\n\t\t//\t\tThe template string for each child items. templateString in child widgets take precedence over this.\r\n\t\ttemplateString: \"\",\r\n\t\t=====*/\r\n\r\n\t\t// partialRebuild: Boolean\r\n\t\t//\t\tIf true, only rebuild repeat items for changed elements. Otherwise, rebuild everything if there is a change in children.\r\n\t\tpartialRebuild: false,\r\n\r\n\t\t// _relTargetProp: String\r\n\t\t//\t\tThe name of the property that is used by child widgets for relative data binding.\r\n\t\t_relTargetProp : \"children\",\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(this[childTypeAttr]){\r\n\t\t\t\tthis.childType = this[childTypeAttr];\r\n\t\t\t}\r\n\t\t\tif(this[childMixinsAttr]){\r\n\t\t\t\tthis.childMixins = this[childMixinsAttr];\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._setChildrenAttr(this.children);\r\n\t\t},\r\n\r\n\t\t_setChildrenAttr: function(/*dojo/Stateful*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for calls to set(\"children\", val).\r\n\r\n\t\t\tvar children = this.children;\r\n\t\t\tthis._set(\"children\", value);\r\n\t\t\tif(this._started && (!this._builtOnce || children != value)){\r\n\t\t\t\tthis._builtOnce = true;\r\n\t\t\t\tthis._buildChildren(value);\r\n\t\t\t\tif(lang.isArray(value)){\r\n\t\t\t\t\tvar _self = this;\r\n\t\t\t\t\tvalue.watch !== {}.watch && (this._handles = this._handles || []).push(value.watch(function(name, old, current){\r\n\t\t\t\t\t\tif(!isNaN(name)){\r\n\t\t\t\t\t\t\tvar w = _self.getChildren()[name - 0];\r\n\t\t\t\t\t\t\tw && w.set(w._relTargetProp || \"target\", current);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_buildChildren: function(/*dojox/mvc/StatefulArray*/ children){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate child widgets upon children and inserts them into the container node.\r\n\r\n\t\t\tunwatchElements(this);\r\n\t\t\tfor(var cw = this.getChildren(), w = null; w = cw.pop();){ this.removeChild(w); w.destroy(); }\r\n\t\t\tif(!lang.isArray(children)){ return; }\r\n\r\n\t\t\tvar _self = this,\r\n\t\t\t seq = this._buildChildrenSeq = (this._buildChildrenSeq || 0) + 1,\r\n\t\t\t initial = {idx: 0, removals: [], adds: [].concat(children)},\r\n\t\t\t changes = [initial];\r\n\r\n\t\t\tfunction loadedModule(/*Object*/ change){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tThe callback function called when modules associated with an array splice have been loaded.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tLooks through the queued array splices and process queue entries whose modules have been loaded, by removing/adding child widgets upon the array splice.\r\n\r\n\t\t\t\tif(this._beingDestroyed || this._buildChildrenSeq > seq){ return; } // If this _WidgetList is being destroyed, or newer _buildChildren call comes during lazy loading, bail\r\n\r\n\t\t\t\t// Associate an object associated with an array splice with the module loaded\r\n\t\t\t\tvar list = [].slice.call(arguments, 1);\r\n\t\t\t\tchange.clz = lang.isFunction(this.childType) || lang.isFunction(this.childMixins) ? list : list[0];\r\n\r\n\t\t\t\t// Looks through the queued array splices\r\n\t\t\t\tfor(var item = null; item = changes.shift();){\r\n\t\t\t\t\t// The modules for the array splice have not been loaded, bail\r\n\t\t\t\t\tif(!item.clz){\r\n\t\t\t\t\t\tchanges.unshift(item);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Remove child widgets upon the array removals\r\n\t\t\t\t\tfor(var i = 0, l = (item.removals || []).length; i < l; ++i){\r\n\t\t\t\t\t\tthis.removeChild(item.idx);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Create/add child widgets upon the array adds\r\n\t\t\t\t\tarray.forEach(array.map(item.adds, function(child, idx){\r\n\t\t\t\t\t\tvar params = {\r\n\t\t\t\t\t\t\townerDocument: this.ownerDocument,\r\n\t\t\t\t\t\t\tparent: this,\r\n\t\t\t\t\t\t\tindexAtStartup: item.idx + idx // Won't be updated even if there are removals/adds of repeat items after startup\r\n\t\t\t\t\t\t}, childClz = lang.isArray(item.clz) ? item.clz[idx] : item.clz;\r\n\t\t\t\t\t\tparams[(lang.isFunction(this.childParams) && this.childParams.call(params, this) || this.childParams || this[childParamsAttr] && evalParams.call(params, this[childParamsAttr]) || {})._relTargetProp || childClz.prototype._relTargetProp || \"target\"] = child;\r\n\r\n\t\t\t\t\t\tvar childParams = this.childParams || this[childParamsAttr] && evalParams.call(params, this[childParamsAttr]),\r\n\t\t\t\t\t\t childBindings = this.childBindings || this[childBindingsAttr] && evalParams.call(params, this[childBindingsAttr]);\r\n\t\t\t\t\t\tif(this.templateString && !params.templateString && !childClz.prototype.templateString){ params.templateString = this.templateString; }\r\n\t\t\t\t\t\tif(childBindings && !params.bindings && !childClz.prototype.bindings){ params.bindings = childBindings; }\r\n\t\t\t\t\t\treturn new childClz(lang.delegate(lang.isFunction(childParams) ? childParams.call(params, this) : childParams, params));\r\n\t\t\t\t\t}, this), function(child, idx){\r\n\t\t\t\t\t\tthis.addChild(child, item.idx + idx);\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlang.isFunction(children.watchElements) && (this._handles = this._handles || []).push(children.watchElements(function(idx, removals, adds){\r\n\t\t\t\tif(!removals || !adds || !_self.partialRebuild){\r\n\t\t\t\t\t// If the entire array is changed, or this WidgetList should rebuild the whole child widgets with every change in array, rebuild the whole\r\n\t\t\t\t\t_self._buildChildren(children);\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// Otherwise queue the array splice and load modules associated with the additions\r\n\t\t\t\t\tvar change = {idx: idx, removals: removals, adds: adds};\r\n\t\t\t\t\tchanges.push(change);\r\n\t\t\t\t\tloadModules.call(_self, adds, lang.hitch(_self, loadedModule, change));\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\r\n\t\t\t// Load modules associated with the initial data\r\n\t\t\tloadModules.call(this, children, lang.hitch(this, loadedModule, initial));\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tunwatchElements(this);\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n\r\n\tWidgetList.prototype[childTypeAttr] = WidgetList.prototype[childMixinsAttr] = WidgetList.prototype[childParamsAttr] = WidgetList.prototype[childBindingsAttr] = \"\"; // Let parser treat these attributes as string\r\n\treturn WidgetList;\r\n});\r\n"]}