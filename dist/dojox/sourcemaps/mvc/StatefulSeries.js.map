{"version":3,"sources":["mvc/StatefulSeries.js"],"names":["define","darray","declare","lang","at","constructor","items","_self","this","pushDataChanges","series","chart","updateSeries","name","delayedRender","_handles","data","map","item","idx","atsignature","target","targetProp","isString","Error","bindDirection","from","console","warn","isFunction","set","watch","converter","formatFunc","format","hitch","source","push","old","current","get","destroy","h","pop","unwatch","setSeriesObject"],"mappings":";;;;;;;AAAAA,QACC,mBACA,qBACA,kBACA,gBACE,SAASC,EAAQC,EAASC,EAAMC,GAClC,OAAOF,EAAQ,2BAA4B,MA6B1CG,YAAa,SAAwBC,GACpC,IAAIC,EAAQC,KACZ,SAASC,IACLF,EAAMG,SACRH,EAAMG,OAAOC,MAAMC,aAAaL,EAAMG,OAAOG,KAAMN,GACnDA,EAAMG,OAAOC,MAAMG,iBAGrBN,KAAKO,YACLP,KAAKQ,KAAOf,EAAOgB,IAAIX,EAAO,SAASY,EAAMC,GAC5C,GAA+B,iBAA3BD,OAAYE,YAA8B,CAC7C,IAAIC,EAASH,EAAKG,OAAQC,EAAaJ,EAAKI,WAC5C,GAAGnB,EAAKoB,SAASF,GAChB,MAAM,IAAIG,MAAM,4EAKjB,IAHGN,EAAKO,eAAmBP,EAAKO,cAAgBrB,EAAGsB,MAClDC,QAAQC,KAAK,6EAEXN,GAAcnB,EAAK0B,WAAWR,EAAOS,MAAQ3B,EAAK0B,WAAWR,EAAOU,OAAO,CAC7E,IAAIC,EAAYd,EAAKc,UAAWC,GAAcD,OAAiBE,QAAU/B,EAAKgC,OAAOd,OAAQA,EAAQe,OAAQ5B,MAAOwB,EAAUE,QAC9H1B,KAAKO,SAASsB,KAAKhB,EAAOU,MAAMT,EAAY,SAAST,EAAMyB,EAAKC,GAC/DhC,EAAMS,KAAKG,GAAOc,EAAaA,EAAWM,GAAWA,EACrD9B,OAGF,OAAQa,EAAsBnB,EAAK0B,WAAWR,EAAOmB,KAAOnB,EAAOmB,IAAIlB,GAAcD,EAAOC,GAAvED,EAErB,OAAOH,GAENV,MACHC,KAGDgC,QAAS,WACR,IAAI,IAAIC,EAAI,KAAMA,EAAIlC,KAAKO,SAAS4B,OACnCD,EAAEE,WAIJC,gBAAiB,SAASnC,GACzBF,KAAKE,OAASA","file":"../../mvc/StatefulSeries.js","sourcesContent":["define([\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojox/mvc/at\"\r\n], function(darray, declare, lang, at){\r\n\treturn declare(\"dojox.mvc.StatefulSeries\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tChart data plugin (\"series\") that watches for properties specified in dojox/mvc/at handles in the given data.\r\n\t\t//\t\tAt initialization, and when the properties are updated, creates the data from data given and updates the chart.\r\n\t\t// example:\r\n\t\t//\t\tTwo seconds later, the chart changes from 25%/25%/50% to 10%/10%/80%, as the data model changes:\r\n\t\t// |\t\t<html>\r\n\t\t// |\t\t\t<head>\r\n\t\t// |\t\t\t\t<script type=\"text/javascript\" src=\"/path/to/dojo/dojo.js\"></script>\r\n\t\t// |\t\t\t\t<script>\r\n\t\t// |\t\t\t\t\trequire([\r\n\t\t// |\t\t\t\t\t\t\"dojo/Stateful\", \"dojox/mvc/at\", \"dojox/mvc/StatefulSeries\",\r\n\t\t// |\t\t\t\t\t\t\"dojox/charting/Chart\", \"dojox/charting/themes/PlotKit/blue\", \"dojox/charting/plot2d/Pie\",\r\n\t\t// |\t\t\t\t\t\t\"dojo/domReady!\"\r\n\t\t// |\t\t\t\t\t], function(Stateful, at, StatefulSeries, Chart, blue){\r\n\t\t// |\t\t\t\t\t\tvar model = new Stateful({First: 25, Second: 25, Third: 50});\r\n\t\t// |\t\t\t\t\t\tnew Chart(\"chart\")\r\n\t\t// |\t\t\t\t\t\t .setTheme(blue)\r\n\t\t// |\t\t\t\t\t\t .addPlot(\"default\", {type: \"Pie\"})\r\n\t\t// |\t\t\t\t\t\t .addSeries(\"default\", new StatefulSeries([at(model, \"First\"), at(model, \"Second\"), at(model, \"Third\")])).render();\r\n\t\t// |\t\t\t\t\t\tsetTimeout(function(){ model.set(\"First\", 10); model.set(\"Second\", 10); model.set(\"Third\", 80); }, 2000);\r\n\t\t// |\t\t\t\t\t});\r\n\t\t// |\t\t\t\t</script>\r\n\t\t// |\t\t\t</head>\r\n\t\t// |\t\t\t<body>\r\n\t\t// |\t\t\t\t<div id=\"chart\"></div>\r\n\t\t// |\t\t\t</body>\r\n\t\t// |\t\t</html>\r\n\r\n\t\tconstructor: function(/*Anything[]*/ items){\r\n\t\t\tvar _self = this;\r\n\t\t\tfunction pushDataChanges(){\r\n\t\t\t\tif(_self.series){\r\n\t\t\t\t\t_self.series.chart.updateSeries(_self.series.name, _self);\r\n\t\t\t\t\t_self.series.chart.delayedRender();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._handles = [];\r\n\t\t\tthis.data = darray.map(items, function(item, idx){\r\n\t\t\t\tif((item || {}).atsignature == \"dojox.mvc.at\"){\r\n\t\t\t\t\tvar target = item.target, targetProp = item.targetProp;\r\n\t\t\t\t\tif(lang.isString(target)){\r\n\t\t\t\t\t\tthrow new Error(\"Literal-based dojox/mvc/at is not supported in dojox/mvc/StatefulSeries.\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(item.bindDirection && !(item.bindDirection & at.from)){\r\n\t\t\t\t\t\tconsole.warn(\"Data binding bindDirection option is ignored in dojox/mvc/StatefulSeries.\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(targetProp && lang.isFunction(target.set) && lang.isFunction(target.watch)){\r\n\t\t\t\t\t\tvar converter = item.converter, formatFunc = (converter || {}).format && lang.hitch({target: target, source: this}, converter.format);\r\n\t\t\t\t\t\tthis._handles.push(target.watch(targetProp, function(name, old, current){\r\n\t\t\t\t\t\t\t_self.data[idx] = formatFunc ? formatFunc(current) : current;\r\n\t\t\t\t\t\t\tpushDataChanges();\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn !targetProp ? target : lang.isFunction(target.get) ? target.get(targetProp) : target[targetProp];\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn item;\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t\tpushDataChanges();\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tfor(var h = null; h = this._handles.pop();){\r\n\t\t\t\th.unwatch();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetSeriesObject: function(series){\r\n\t\t\tthis.series = series;\r\n\t\t}\r\n\t});\r\n});\r\n"]}