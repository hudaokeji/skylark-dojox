{"version":3,"sources":["mvc/at.js"],"names":["define","kernel","lang","sync","experimental","at","target","targetProp","atsignature","bindDirection","both","direction","this","transform","converter","equals","equalsCallback","from","to","setObject"],"mappings":";;;;;;;AAAAA,QACC,oBACA,kBACA,SACA,yBACE,SAASC,EAAQC,EAAMC,GAEzBF,EAAOG,aAAa,aAEpB,IAAIC,EAAK,SAAkCC,EAAmBC,GAoD7D,OACCC,YAAa,eACbF,OAAQA,EACRC,WAAYA,EACZE,cAAeN,EAAKO,KACpBC,UAAW,SAAoBF,GAE9B,OADAG,KAAKH,cAAgBA,EACdG,MAERC,UAAW,SAAsCC,GAEhD,OADAF,KAAKE,UAAYA,EACVF,MAERG,OAAQ,SAAsBA,GAE7B,OADAH,KAAKI,eAAiBD,EACfH,QAwDV,OALAP,EAAGY,KAAOd,EAAKc,KACfZ,EAAGa,GAAKf,EAAKe,GACbb,EAAGK,KAAOP,EAAKO,KAGRR,EAAKiB,UAAU,eAAgBd","file":"../../mvc/at.js","sourcesContent":["define([\r\n\t\"dojo/_base/kernel\",\r\n\t\"dojo/_base/lang\",\r\n\t\"./sync\",\r\n\t\"./_atBindingExtension\"\r\n], function(kernel, lang, sync){\r\n\r\n\tkernel.experimental(\"dojox.mvc\");\r\n\r\n\tvar at = function(/*dojo/Stateful|String*/ target, /*String*/ targetProp){\r\n\t\t// summary:\r\n\t\t//\t\tReturns a pointer to data binding target (a dojo/Stateful property), called at handle, which is used for start synchronization with data binding source (another dojo/Stateful property).\r\n\t\t// description:\r\n\t\t//\t\tTypically used in data-dojo-props so that a widget can synchronize its attribute with another dojo/Stateful, like shown in the example.\r\n\t\t// target: dojo/Stateful|String\r\n\t\t//\t\tdojo/Stateful to be synchronized.\r\n\t\t// targetProp: String\r\n\t\t//\t\tThe property name in target to be synchronized.\r\n\t\t// returns:\r\n\t\t//\t\tA pointer to data binding target (a dojo/Stateful property), called at handle, which is used for start synchronization with data binding source (another dojo/Stateful property).\r\n\t\t// example:\r\n\t\t//\t\tTwo seconds later, the text box changes from \"Foo\" to \"Bar\" as the \"value\" property in model changes.\r\n\t\t// |\t\t<html>\r\n\t\t// |\t\t\t<head>\r\n\t\t// |\t\t\t\t<script src=\"/path/to/dojo-toolkit/dojo/dojo.js\" type=\"text/javascript\" data-dojo-config=\"parseOnLoad: 0\"></script>\r\n\t\t// |\t\t\t\t<script type=\"text/javascript\">\r\n\t\t// |\t\t\t\t\trequire([\r\n\t\t// |\t\t\t\t\t\t\"dojo/parser\", \"dojo/Stateful\", \"dijit/form/TextBox\", \"dojo/domReady!\"\r\n\t\t// |\t\t\t\t\t], function(parser, Stateful){\r\n\t\t// |\t\t\t\t\t\tmodel = new Stateful({value: \"Foo\"});\r\n\t\t// |\t\t\t\t\t\tsetTimeout(function(){ model.set(\"value\", \"Bar\"); }, 2000);\r\n\t\t// |\t\t\t\t\t\tparser.parse();\r\n\t\t// |\t\t\t\t\t});\r\n\t\t// |\t\t\t\t</script>\r\n\t\t// |\t\t\t</head>\r\n\t\t// |\t\t\t<body>\r\n\t\t// |\t\t\t\t<script type=\"dojo/require\">at: \"dojox/mvc/at\"</script>\r\n\t\t// |\t\t\t\t<input type=\"text\" data-dojo-type=\"dijit/form/TextBox\" data-dojo-props=\"value: at(model, 'value')\">\r\n\t\t// |\t\t\t</body>\r\n\t\t// |\t\t</html>\r\n\t\t// example:\r\n\t\t//\t\tEdit in text box is reflected to the text next to it.\r\n\t\t// |\t\t<html>\r\n\t\t// |\t\t\t<head>\r\n\t\t// |\t\t\t\t<script src=\"/path/to/dojo-toolkit/dojo/dojo.js\" type=\"text/javascript\" data-dojo-config=\"parseOnLoad: 0\"></script>\r\n\t\t// |\t\t\t\t<script type=\"text/javascript\">\r\n\t\t// |\t\t\t\t\trequire([\r\n\t\t// |\t\t\t\t\t\t\"dojo/parser\", \"dojo/Stateful\", \"dojo/domReady!\"\r\n\t\t// |\t\t\t\t\t], function(parser, Stateful){\r\n\t\t// |\t\t\t\t\t\tmodel = new Stateful({value: \"Foo\"});\r\n\t\t// |\t\t\t\t\t\tparser.parse();\r\n\t\t// |\t\t\t\t\t});\r\n\t\t// |\t\t\t\t</script>\r\n\t\t// |\t\t\t</head>\r\n\t\t// |\t\t\t<body>\r\n\t\t// |\t\t\t\t<script type=\"dojo/require\">at: \"dojox/mvc/at\"</script>\r\n\t\t// |\t\t\t\t<input type=\"text\" data-dojo-type=\"dijit/form/TextBox\" data-dojo-props=\"value: at(model, 'value')\">\r\n\t\t// |\t\t\t\t<span data-dojo-type=\"dijit/_WidgetBase\" data-dojo-props=\"_setValueAttr: {node: 'domNode', type: 'innerText'}, value: at(model, 'value')\"></span>\r\n\t\t// |\t\t\t</body>\r\n\t\t// |\t\t</html>\r\n\r\n\t\treturn { // dojox/mvc/at.handle\r\n\t\t\tatsignature: \"dojox.mvc.at\",\r\n\t\t\ttarget: target,\r\n\t\t\ttargetProp: targetProp,\r\n\t\t\tbindDirection: sync.both,\r\n\t\t\tdirection: function(/*Number*/ bindDirection){\r\n\t\t\t\tthis.bindDirection = bindDirection;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\ttransform: function(/*dojox/mvc/sync.converter*/ converter){\r\n\t\t\t\tthis.converter = converter;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\tequals: function(/*Function*/ equals){\r\n\t\t\t\tthis.equalsCallback = equals;\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t/*=====\r\n\tat.handle = {\r\n\t\t// summary:\r\n\t\t//\t\tA handle of data binding target (a dojo/Stateful property), which is used for start synchronization with data binding source (another dojo/Stateful property).\r\n\r\n\t\t// target: dojo/Stateful|String\r\n\t\t//\t\tThe data binding literal or dojo/Stateful to be synchronized.\r\n\t\ttarget: new dojo/Stateful(),\r\n\r\n\t\t// targetProp: String\r\n\t\t//\t\tThe property name in target to be synchronized.\r\n\t\ttargetProp: \"\",\r\n\r\n\t\t// bindDirection: Number\r\n\t\t//\t\tThe data binding bindDirection, choose from: dojox/mvc/sync.from, dojox/mvc/sync.to or dojox/mvc/sync.both.\r\n\t\tbindDirection: dojox/mvc/sync.both,\r\n\r\n\t\t// converter: dojox/mvc/sync.converter\r\n\t\t//\t\tClass/object containing the converter functions used when the data goes between data binding target (e.g. data model or controller) to data binding origin (e.g. widget).\r\n\t\tconverter: null,\r\n\r\n\t\tdirection: function(bindDirection){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets data binding bindDirection.\r\n\t\t\t// bindDirection: Number\r\n\t\t\t//\t\tThe data binding bindDirection, choose from: dojox/mvc/sync.from, dojox/mvc/sync.to or dojox/mvc/sync.both.\r\n\t\t},\r\n\r\n\t\ttransform: function(converter){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAttach a data converter.\r\n\t\t\t// converter: dojox/mvc/sync.converter\r\n\t\t\t//\t\tClass/object containing the converter functions used when the data goes between data binding target (e.g. data model or controller) to data binding origin (e.g. widget).\r\n\t\t},\r\n\r\n\t\tequals: function(equals){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets a function to check if a value has really been changed when source/target dojo/Stateful changes.\r\n\t\t\t// equals: Function\r\n\t\t\t//\t\tThe function to check for the change.\r\n\t\t\t//\t\tShould take two arguments, and should return true when those two are considered equal.\r\n\t\t}\r\n\t};\r\n\t=====*/\r\n\r\n\t// Data binding bindDirections\r\n\tat.from = sync.from;\r\n\tat.to = sync.to;\r\n\tat.both = sync.both;\r\n\r\n\t// lang.setObject() thing is for back-compat, remove it in 2.0\r\n\treturn lang.setObject(\"dojox.mvc.at\", at);\r\n});\r\n"]}