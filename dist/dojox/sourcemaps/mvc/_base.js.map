{"version":3,"sources":["mvc/_base.js"],"names":["define","kernel","lang","getStateful","StatefulModel","experimental","mvc","getObject","newStatefulModel","args","data","getStatefulOptions","store","isFunction","query","model","result","then"],"mappings":";;;;;;;AAAAA,QACC,oBACA,kBACA,gBACA,kBACA,SACA,sBACA,cACE,SAASC,EAAQC,EAAMC,EAAaC,GAMtCH,EAAOI,aAAa,aAEpB,IAAIC,EAAMJ,EAAKK,UAAU,aAAa,GAiDtC,OA3CAD,EAAIE,iBAAmB,SAAmBC,GAwBzC,GAAGA,EAAKC,KACP,OAAOP,EAAYM,EAAKC,KAAMN,EAAcO,oBACvC,GAAGF,EAAKG,OAASV,EAAKW,WAAWJ,EAAKG,MAAME,OAAO,CACxD,IAAIC,EACAC,EAASP,EAAKG,MAAME,MAAML,EAAKK,OACnC,OAAGE,EAAOC,KACDD,EAAOC,KAAK,SAASP,GAG5B,OAFAK,EAAQZ,EAAYO,EAAMN,EAAcO,qBAClCC,MAAQH,EAAKG,MACZG,MAGRA,EAAQZ,EAAYa,EAAQZ,EAAcO,qBACpCC,MAAQH,EAAKG,MACZG,KAKHT","file":"../../mvc/_base.js","sourcesContent":["define([\r\n\t\"dojo/_base/kernel\",\r\n\t\"dojo/_base/lang\",\r\n\t\"./getStateful\",\r\n\t\"./StatefulModel\",\r\n\t\"./Bind\",\r\n\t\"./_DataBindingMixin\",\r\n\t\"./_patches\"\r\n], function(kernel, lang, getStateful, StatefulModel){\r\n\t// module:\r\n\t//\t\tdojox/mvc/_base\r\n\t// summary:\r\n\t//\t\tPulls in essential MVC dependencies such as basic support for\r\n\t//\t\tdata binds, a data model and data binding mixin for dijits.\r\n\tkernel.experimental(\"dojox.mvc\");\r\n\r\n\tvar mvc = lang.getObject(\"dojox.mvc\", true);\r\n\t/*=====\r\n\t\tmvc = dojox.mvc;\r\n\t=====*/\r\n\r\n\t// Factory method for dojox.mvc.StatefulModel instances\r\n\tmvc.newStatefulModel = function(/*Object*/args){\r\n\t\t// summary:\r\n\t\t//\t\tFactory method that instantiates a new data model that view\r\n\t\t//\t\tcomponents may bind to.\r\n\t\t// args:\r\n\t\t//\t\tThe mixin properties.\r\n\t\t// description:\r\n\t\t//\t\tFactory method that returns a client-side data model, which is a\r\n\t\t//\t\ttree of dojo/Stateful objects matching the initial data structure\r\n\t\t//\t\tpassed as input:\r\n\t\t//\r\n\t\t//\t\t- The mixin property \"data\" is used to provide a plain JavaScript\r\n\t\t//\t\t  object directly representing the data structure.\r\n\t\t//\t\t- The mixin property \"store\", along with an optional mixin property\r\n\t\t//\t\t  \"query\", is used to provide a data store to query to obtain the\r\n\t\t//\t\t  initial data.\r\n\t\t//\r\n\t\t//\t\tThis function returns an immediate dojox.mvc.StatefulModel instance or\r\n\t\t//\t\ta Promise for such an instance as follows:\r\n\t\t//\r\n\t\t//\t\t- if args.data: returns immediately\r\n\t\t//\t\t- if args.store: if store returns immediately, this function returns immediately;\r\n\t\t//\t\t\tif store returns a Promise, this function returns a model Promise\r\n\r\n\t\tif(args.data){\r\n\t\t\treturn getStateful(args.data, StatefulModel.getStatefulOptions);\r\n\t\t}else if(args.store && lang.isFunction(args.store.query)){\r\n\t\t\tvar model;\r\n\t\t\tvar result = args.store.query(args.query);\r\n\t\t\tif(result.then){\r\n\t\t\t\treturn (result.then(function(data){\r\n\t\t\t\t\tmodel = getStateful(data, StatefulModel.getStatefulOptions);\r\n\t\t\t\t\tmodel.store = args.store;\r\n\t\t\t\t\treturn model;\r\n\t\t\t\t}));\r\n\t\t\t}else{\r\n\t\t\t\tmodel = getStateful(result, StatefulModel.getStatefulOptions);\r\n\t\t\t\tmodel.store = args.store;\r\n\t\t\t\treturn model;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn mvc;\r\n});\r\n"]}