{"version":3,"sources":["json/tests/schema.js"],"names":["dojo","provide","require","simpleObj","name","age","$schema","type","required","maximum","biggerObj","born","gender","tuple","address","street","city","state","invalidBiggerObj","biggerSchema","readonly","properties","length","optional","items","format","minimum","enum","options","label","value","schemaForSchemas","description","$ref","unconstrained","default","additionalProperties","specificity","identity","pattern","maxLength","minLength","maxItems","minItems","transient","maxDecimal","hidden","extends","id","dojox","json","ref","resolveJson","doh","register","runTest","t","schema","validate","valid","f","checkPropertyChange","disallow","foo","brand"],"mappings":"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","file":"../../../json/tests/schema.js","sourcesContent":["dojo.provide(\"dojox.json.tests.schema\");\r\ndojo.require(\"dojox.json.schema\");\r\ndojo.require(\"dojox.json.ref\");\r\n\r\nvar simpleObj = {\r\n  \"name\" : \"John Doe\",\r\n  \"age\" : 30,\r\n  \"$schema\":{\r\n\t  \"type\" : {\r\n\t    \"name\": {\"type\":\"string\",\r\n\t       \"required\":true},\r\n\t    \"age\" : {\"type\":\"number\",\r\n\t      \"maximum\":125}\r\n\t  }\r\n  }\r\n};\r\nvar biggerObj = {\r\n  \"name\" : \"John Doe\",\r\n  \"born\" : \"1979-03-23T06:26:07Z\",\r\n  \"gender\" : \"male\",\r\n  tuple:[1,\"a\",false],\r\n  \"address\" : {\"street\":\"123 S Main St\",\r\n    \"city\":\"Springfield\",\r\n    \"state\":\"CA\"}\r\n  \r\n};\r\nvar invalidBiggerObj = {\r\n  \"name\" : \"John Doe\",\r\n  \"born\" : false,\r\n  \"gender\" : \"mal\",\r\n  \"address\" : {\"street\":\"123 S Main St\",\r\n    \"city\":\"Springfield\",\r\n    \"state\":\"CA\"}\r\n  \r\n};\r\nvar biggerSchema = {\r\n  \"readonly\":true,\r\n  \"type\":\"object\",\r\n  \"properties\":{\r\n    \"name\": {\"type\":\"string\",\r\n\t   length:5,\r\n       \"optional\":false},\r\n    \"tuple\":{items:[{\"type\":\"integer\"},\r\n    {\"type\":\"string\"},\r\n    {\"type\":\"boolean\"}]},\r\n    \"born\" : {\"type\":[\"number\",\"string\"], //allow for a numeric year, or a full date\r\n      \"format\":\"date\", //format when a string value is used\r\n      \"minimum\":1900, //min/max for when a number value is used\r\n      \"maximum\":2010\r\n    },\r\n    \"gender\" : {\"type\":\"string\",\r\n    \t\"enum\":[\"male\",\"female\"],\r\n    \t\"options\":[{\"label\":\"Male\",value:\"male\"},{\"label\":\"Female\",value:\"female\"}]},\r\n\t    \"address\" : {\"type\":\"object\",\r\n\t    \t\"properties\":\r\n\t        {\"street\":{\"type\":\"string\"},\r\n\t         \"city\":{\"type\":\"string\"},\r\n\t         \"state\":{\"type\":\"string\"}}\r\n\t    }\r\n  }\r\n};\r\nvar schemaForSchemas ={\"description\":\"This is the JSON Schema for JSON Schemas.\",\r\n \"type\":[\"object\",\"array\"],\r\n \"items\":{\r\n     \"type\":\"object\",\r\n     \"properties\":{\"$ref\":\"$.properties\"},\r\n     \"description\":\"When the schema is an array, it indicates that it is enforcing tuple typing. Each item in the instance array must correspond to the item in the schema array\"},\r\n \"properties\":{\r\n     \"type\":{\r\n     \t\"type\":[\"string\",\"array\"],\r\n     \t\"items\":{\"$ref\":\"$.properties.type\"},\r\n\t\"description\":\"This is a type definition value. This can be a simple type, or a union type\",\r\n\t\"options\":[{\"value\":\"string\"},{\"value\":\"object\"},{\"value\":\"array\"},{\"value\":\"boolean\"},{\"value\":\"number\"},{\"value\":\"integer\"},{\"value\":\"null\"},{\"value\":\"any\"}],\r\n\t\"unconstrained\":true,\r\n\t\"optional\":true,\r\n\t\"default\":\"any\"},\r\n     \"optional\":{\r\n     \t\"type\":\"boolean\",\r\n     \t\"description\":\"This indicates that the instance property in the instance object is not required.\",\r\n\t\"optional\":true,\r\n\t\"default\":false},\r\n     \"properties\":{\r\n     \t\"type\":\"object\",\r\n     \t\"additionalProperties\":{\"$ref\":\"$\"},\r\n     \t\"description\":\"This is a definition for the properties of an object value\",\r\n     \t\"optional\":true,\r\n     \t\"default\":{}\r\n     },\r\n     \"items\":{\r\n     \t\"type\":\"object\",\r\n     \t\"properties\":{\"$ref\":\"$.properties\"},\r\n     \t\"description\":\"When the value is an array, this indicates the schema to use to validate each item in an array\",\r\n\t\"optional\":true,\r\n\t\"default\":{}},\r\n     \"additionalProperties\":{\r\n     \t\"type\":[\"boolean\",\"object\"],\r\n     \t\"properties\":{\"$ref\":\"$.properties\"},\r\n     \t\"description\":\"This provides a default property definition for all properties that are not explicitly defined in an object type definition.\",\r\n\t\"optional\":true,\r\n\t\"default\":{}},\r\n     \"specificity\":{\r\n        \"type\":\"number\",\r\n        \"description\":\"This indicates an order of specificity of properties. If an instance defines another property with a higher specificity than this one, than this instance property is required.\",\r\n\t\"optional\":true,\r\n        \"default\":false},\r\n     \"identity\":{\r\n     \t\"type\":\"boolean\",\r\n     \t\"description\":\"This indicates that the instance property should have unique values. No other property with the same name in the instance object tree should have the same value.\",\r\n\t\"optional\":true,\r\n\t\"default\":false},\r\n     \"minimum\":{\r\n     \t\"type\":\"number\",\r\n\t\"optional\":true,\r\n     \t\"description\":\"This indicates the minimum value for the instance property when the type of the instance value is a number, or it indicates the minimum number of values in an array when an array is the instance value.\"},\r\n     \"maximum\":{\r\n     \t\"type\":\"number\",\r\n\t\"optional\":true,\r\n     \t\"description\":\"This indicates the maximum value for the instance property when the type of the instance value is a number, or it indicates the maximum number of values in an array when an array is the instance value.\"},\r\n     \"pattern\":{\r\n     \t\"type\":\"string\",\r\n     \t\"format\":\"regex\",\r\n     \t\"description\":\"When the instance value is a string, this provides a regular expression that a instance string value should match in order to be valid.\",\r\n\t\"optional\":true,\r\n\t\"default\":\".*\"},\r\n     \"maxLength\" :{\r\n     \t\"type\":\"number\",\r\n\t\"optional\":true,\r\n     \t\"description\":\"When the instance value is a string, this indicates maximum length of the string.\"},\r\n     \"minLength\" :{\r\n     \t\"type\":\"number\",\r\n\t\"optional\":true,\r\n     \t\"description\":\"When the instance value is a string, this indicates minimum length of the string.\"},\r\n     \"maxItems\" :{\r\n     \t\"type\":\"number\",\r\n\t\"optional\":true,\r\n     \t\"description\":\"When the instance value is an array, this indicates maximum number of items.\"},\r\n     \"minItems\" :{\r\n     \t\"type\":\"number\",\r\n\t\"optional\":true,\r\n     \t\"description\":\"When the instance value is an array, this indicates minimum number of items.\"},\r\n     \"enum\" : {\r\n     \t\"type\":\"array\",\r\n\t\"optional\":true,\r\n     \t\"description\":\"This provides an enumeration of possible values that are valid for the instance property.\"},\r\n     \"options\" : {\r\n     \t\"type\":\"array\",\r\n     \t\"items\":{\r\n     \t   \"properties\":{\r\n     \t   \t\"label\":{\r\n     \t   \t    \"type\":\"string\",\r\n     \t   \t    \"description\":\"This is the label for this option\",\r\n     \t   \t    \"optional\":true\r\n     \t   \t    },\r\n     \t   \t\"value\":{\r\n     \t   \t    \"description\":\"This is the value for this option\"\r\n     \t   \t}\r\n     \t   },\r\n     \t   \"description\":\"This is an option for list of possible values\"\r\n     \t},\r\n\t\"optional\":true,\r\n     \t\"description\":\"This provides a list of suggested options for the instance property.\"},\r\n     \"readonly\":{\r\n     \t\"type\":\"boolean\",\r\n     \t\"description\":\"This indicates that the instance property should not be changed (this is only for interaction, it has no effect for standalone validation).\",\r\n\t\"optional\":true,\r\n\t\"default\":false},\r\n     \"description\":{\r\n     \t\"type\":\"string\",\r\n\t\"optional\":true,\r\n     \t\"description\":\"This provides a description of the purpose the instance property. The value can be a string or it can be an object with properties corresponding to various different instance languages (with an optional default property indicating the default description).\"},\r\n     \"format\":{\r\n     \t\"type\":\"string\",\r\n\t\"optional\":true,\r\n     \t\"description\":\"This indicates what format the data is among some predefined formats which may include:\\n\\ndate - a string following the ISO format \\naddress \\nschema - a schema definition object \\nperson \\npage \\nhtml - a string representing HTML\"},\r\n     \"default\":{\r\n     \t\"type\":\"any\",\r\n\t\"optional\":true,\r\n     \t\"description\":\"This indicates the default for the instance property.\"},\r\n     \"transient\":{\r\n     \t\"type\":\"boolean\",\r\n\t\"optional\":true,\r\n     \t\"description\":\"This indicates that the property will be used for transient/volatile values that should not be persisted.\",\r\n\t\"default\":false},\r\n     \"maxDecimal\":{\r\n     \t\"type\":\"integer\",\r\n\t\"optional\":true,\r\n     \t\"description\":\"This indicates the maximum number of decimal places in a floating point number.\"},\r\n     \"hidden\":{\r\n     \t\"type\":\"boolean\",\r\n\t\"optional\":true,\r\n     \t\"description\":\"This indicates whether the property should be hidden in user interfaces.\"},\r\n     \"extends\":{\r\n     \t\"type\":\"object\",\r\n     \t\"properties\":{\"$ref\":\"$.properties\"},\r\n     \t\"description\":\"This indicates the schema extends the given schema. All instances of this schema must be valid to by the extended schema also.\",\r\n\t\"optional\":true,\r\n\t\"default\":{}},\r\n     \"id\":{\r\n     \t\"type\":[\"string\",\"number\"],\r\n\t\"optional\":true,\r\n\t\"format\":\"url\",\r\n     \t\"identity\":true}\r\n   }\r\n};\r\n \r\n \r\nschemaForSchemas = dojox.json.ref.resolveJson(schemaForSchemas);\r\ndoh.register(\"dojox.validate.tests.jsonSchema\",\r\n\t[{\r\n\t\tname:\"isValidForSchema\",\r\n\t\trunTest: function(t){\r\n\t\t\tdoh.t(dojox.json.schema.validate(simpleObj).valid); //a simple self-validating test\r\n\t\t\tdoh.t(dojox.json.schema.validate(biggerObj,biggerSchema).valid); //a bigger instance and schema\r\n\t\t\tdoh.f(dojox.json.schema.validate(invalidBiggerObj,biggerSchema).valid); //should have two errors\r\n\t\t\tdoh.t(dojox.json.schema.validate(schemaForSchemas,schemaForSchemas).valid); //test the schema for schemas against it's self. Narcissitic testing\r\n\t\t\tdoh.t(dojox.json.schema.validate(biggerSchema,schemaForSchemas).valid); //Test the big schema against the schema for schemas\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tname:\"isValidPropertyChange\",\r\n\t\trunTest: function(t){\r\n\t\t\tdoh.f(dojox.json.schema.checkPropertyChange(biggerObj,biggerSchema).valid); //this should fail because of the\r\n\t\t\tdoh.t(dojox.json.schema.checkPropertyChange(schemaForSchemas,schemaForSchemas).valid); //schema should be valid\r\n\t\t}\r\n\t},\r\n\tfunction disallow(t){\r\n\t\tvar schema={\r\n\t\t\tdisallow: [{maxLength:4}]\r\n\t\t}\r\n\t\tdoh.t(dojox.json.schema.validate(\"hello\", schema).valid);\r\n\t\tdoh.f(dojox.json.schema.validate(\"hi\", schema).valid);\r\n\t},\r\n\tfunction maxDecimal(t){\r\n\t\tvar schema={\r\n\t\t\tmaxDecimal: 4\r\n\t\t}\r\n\t\tdoh.t(dojox.json.schema.validate(4.44, schema).valid);\r\n\t\tdoh.f(dojox.json.schema.validate(4.444444, schema).valid);\r\n\t\t\r\n\t},\r\n\tfunction tuple(t){\r\n\t\tvar schema={\r\n\t\t\titems: [{type:\"string\"},{type:\"number\"}]\r\n\t\t};\r\n\t\tdoh.t(dojox.json.schema.validate([\"hi\",33], schema).valid);\r\n\t\tdoh.f(dojox.json.schema.validate([22,22], schema).valid);\r\n\t\t\r\n\t},\r\n\tfunction union(t){\r\n\t\tvar schema={\r\n\t\t\ttype: [\"string\", \"number\"]\r\n\t\t};\r\n\t\tdoh.t(dojox.json.schema.validate(22, schema).valid);\r\n\t\tdoh.t(dojox.json.schema.validate(\"hi\", schema).valid);\r\n\t\tdoh.f(dojox.json.schema.validate(null, schema).valid);\r\n\t\tdoh.f(dojox.json.schema.validate({foo:\"bar\"}, schema).valid);\r\n\t},\r\n\tfunction aLittleComplex(t){\r\n\t\tvar schema = {type:[\r\n\t\t\t{type:\"object\", properties:{name:{type:\"string\"}, id:{type:\"integer\"}}, additionalProperties:false},\r\n\t\t\t{type:\"object\", properties:{brand:{type:\"string\"}, id:{type:\"integer\"}}, additionalProperties:false}]\r\n\t\t};\r\n\t\tdoh.t(dojox.json.schema.validate({name:\"Bill\", id:3}, schema).valid);\r\n\t\tdoh.t(dojox.json.schema.validate({brand:\"Dojo\", id:3}, schema).valid);\r\n\t\tdoh.f(dojox.json.schema.validate({foo:\"bar\"}, schema).valid);\r\n\t\tdoh.f(dojox.json.schema.validate({foo:\"bar\", brand:\"Dojo\", id:3}, schema).valid);\r\n\t\tdoh.f(dojox.json.schema.validate(\"a string\", schema).valid);\r\n\t},\r\n\tfunction invalidSchema(t){\r\n\t\tvar schema = {\r\n\t\t\tproperties: { foo:\"string\"}\r\n\t\t};\r\n\t\tdoh.f(dojox.json.schema.validate({foo:\"bar\"}, schema).valid);\r\n\t}\r\n]);\r\n\r\n"]}