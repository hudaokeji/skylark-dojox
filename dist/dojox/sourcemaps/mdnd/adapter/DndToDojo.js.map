{"version":3,"sources":["mdnd/adapter/DndToDojo.js"],"names":["define","dojo","declare","connect","array","domClass","domStyle","geom","topic","win","dtd","_dojoList","_currentDojoArea","_dojoxManager","_dragStartHandler","_dropHandler","_moveHandler","_moveUpHandler","_draggedNode","constructor","this","dojox","mdnd","areaManager","subscribe","node","sourceArea","sourceDropIndex","doc","targetArea","indexChild","publish","type","accept","disconnect","_getIndexDojoArea","area","i","l","length","_initCoordinates","position","coords","x","y","x1","w","y1","h","register","dojoTarget","object","push","_lazyManager","LazyManager","unregisterByNode","index","splice","unregisterByType","tempList","forEach","item","unregister","refresh","dojoList","refreshByType","_getHoverDojoArea","_oldDojoArea","dojoArea","coordinates","onMouseMove","e","pageX","pageY","onDragExit","onDragEnter","isAccepted","draggedNode","target","_dragItem","handlers","pop","events","body","removeChild","_cover","_cover2","adapter","_dndFromDojo","unsubscribeDnd","set","top","left","startDrag","handle","manager","canDropFlag","_dropIndicator","style","display","cancelHandler","moveableItem","appendChild","objectArea","_areaList","_sourceIndexArea","dropIndex","_sourceDropIndex","items","onDrop","unsubscribe","dropHandler","subscribeDnd","params","ownerDocument","offsetDrag","t","cancelDrag","onMove","parentNode","nodeType","remove","width","_deleteMoveableItem","_resetAfterDrop","_dndToDojo","dndToDojo","DndToDojo"],"mappings":";;;;;;;AAAAA,QAAQ,oBACP,qBACA,qBACA,mBACA,iBACA,iBACA,oBACA,aACA,oBACA,wBACA,0BACC,SAASC,EAAMC,EAASC,EAASC,EAAOC,EAAUC,EAAUC,EAAMC,EAAOC,GAC1E,IAAIC,EAAMR,EACT,+BACA,MAOAS,UAAW,KAIXC,iBAAkB,KAIlBC,cAAe,KAIfC,kBAAmB,KAInBC,aAAc,KAIdC,aAAc,KAIdC,eAAgB,KAIhBC,aAAc,KAEdC,YAAa,WACZC,KAAKT,aACLS,KAAKR,iBAAmB,KACxBQ,KAAKP,cAAgBQ,MAAMC,KAAKC,cAChCH,KAAKN,kBAAoBX,EAAQqB,UAAU,yBAA0BJ,KAAM,SAASK,EAAMC,EAAYC,GACrGP,KAAKF,aAAeO,EACpBL,KAAKJ,aAAeb,EAAQA,QAAQF,EAAK2B,IAAK,cAAeR,KAAM,iBAEpEA,KAAKL,aAAeZ,EAAQqB,UAAU,mBAAoBJ,KAAM,SAASK,EAAMI,EAAYC,GACvFV,KAAKR,kBACPT,EAAQ4B,QAAQ,wCAAyCX,KAAKR,iBAAiBa,KAAML,KAAKR,iBAAiBoB,KAAMZ,KAAKF,aAAcE,KAAKa,SAE1Ib,KAAKF,aAAe,KACpBE,KAAKR,iBAAmB,KACxBT,EAAQ+B,WAAWd,KAAKJ,iBAI1BmB,kBAAmB,SAAiBC,GAWnC,GAAGA,EACF,IAAI,IAAIC,EAAI,EAAGC,EAAIlB,KAAKT,UAAU4B,OAAQF,EAAIC,EAAGD,IAChD,GAAGjB,KAAKT,UAAU0B,GAAGZ,OAASW,EAC7B,OAAOC,EAIV,OAAQ,GAGTG,iBAAkB,SAAoBJ,GAWrC,GAAGA,EAAK,CACP,IAAIK,EAAWlC,EAAKkC,SAASL,GAAM,GAClCM,KAKD,OAJAA,EAAOC,EAAIF,EAASE,EACpBD,EAAOE,EAAIH,EAASG,EACpBF,EAAOG,GAAKJ,EAASE,EAAIF,EAASK,EAClCJ,EAAOK,GAAKN,EAASG,EAAIH,EAASO,EAC3BN,EAER,OAAO,MAGRO,SAAU,SAAoBb,EAAiBJ,EAAkBkB,GAgBhE,IAAoC,GAAjC9B,KAAKe,kBAAkBC,GAAY,CACrC,IAAIM,EAAStB,KAAKoB,iBAAiBJ,GAClCe,GACC1B,KAAQW,EACRJ,KAAQA,EACR/B,KAAQ,IAAwB,EAChCyC,OAAUA,GAEZtB,KAAKT,UAAUyC,KAAKD,GAEjBD,IAAe9B,KAAKiC,eACtBjC,KAAKiC,aAAe,IAAIhC,MAAMC,KAAKgC,eAKtCC,iBAAkB,SAAoBnB,GAOrC,IAAIoB,EAAQpC,KAAKe,kBAAkBC,IAEtB,GAAVoB,GACFpC,KAAKT,UAAU8C,OAAOD,EAAO,IAI/BE,iBAAkB,SAAmB1B,GAOpC,GAAGA,EAAK,CACP,IAAI2B,KACJvD,EAAMwD,QAAQxC,KAAKT,UAAW,SAASkD,EAAMxB,GACzCwB,EAAK7B,MAAQA,GACf2B,EAASP,KAAKS,KAGhBzC,KAAKT,UAAYgD,IAInBG,WAAY,WAKX1C,KAAKT,cAGNoD,QAAS,WAKR,IAAIC,EAAW5C,KAAKT,UACpBS,KAAK0C,aACL1D,EAAMwD,QAAQI,EAAU,SAAS/D,GAChCA,EAAKyC,OAAStB,KAAKoB,iBAAiBvC,EAAKwB,OACvCL,MACHA,KAAKT,UAAYqD,GAGlBC,cAAe,SAAoBjC,GAOlC,IAAIgC,EAAW5C,KAAKT,UACpBS,KAAK0C,aACL1D,EAAMwD,QAAQI,EAAU,SAAS/D,GAC7BA,EAAK+B,MAAQA,IACf/B,EAAKyC,OAAStB,KAAKoB,iBAAiBvC,EAAKwB,QAExCL,MACHA,KAAKT,UAAYqD,GAGlBE,kBAAmB,SAAmBxB,GASrCtB,KAAK+C,aAAe/C,KAAKR,iBACzBQ,KAAKR,iBAAmB,KAIxB,IAHA,IAAI+B,EAAID,EAAOC,EACXC,EAAIF,EAAOE,EACXL,EAASnB,KAAKT,UAAU4B,OACpBF,EAAI,EAAGA,EAAIE,EAAQF,IAAI,CAC9B,IAAI+B,EAAWhD,KAAKT,UAAU0B,GAC1BgC,EAAcD,EAAS1B,OAC3B,GAAG2B,EAAY1B,GAAKA,GAAKA,GAAK0B,EAAYxB,IAAMwB,EAAYzB,GAAKA,GAAKA,GAAKyB,EAAYtB,GAAG,CACzF3B,KAAKR,iBAAmBwD,EACxB,SAKHE,YAAa,SAAqBC,GAUjC,IAAI7B,GACHC,EAAK4B,EAAEC,MACP5B,EAAK2B,EAAEE,OAERrD,KAAK8C,kBAAkBxB,GACpBtB,KAAKR,kBAAoBQ,KAAK+C,eACJ,MAAzB/C,KAAKR,iBACPQ,KAAKsD,WAAWH,GAEY,MAArBnD,KAAK+C,aACZ/C,KAAKuD,YAAYJ,IAGjBnD,KAAKsD,WAAWH,GAChBnD,KAAKuD,YAAYJ,MAKpBK,WAAY,SAAoBC,EAAwBC,GAMvD,OAAO,GAIRH,YAAa,SAAqBJ,GAUjC,GAAGnD,KAAKR,iBAAiBX,KAAK,CAE7BE,EAAQ+B,WAAWd,KAAKP,cAAckE,UAAUC,SAASC,OACzD9E,EAAQ+B,WAAWd,KAAKP,cAAckE,UAAUC,SAASC,OAGzD9E,EAAQ+B,WAAWd,KAAKP,cAAckE,UAAUlB,KAAKqB,OAAOD,OAC5DxE,EAAI0E,OAAOC,YAAYhE,KAAKP,cAAcwE,QAC1C5E,EAAI0E,OAAOC,YAAYhE,KAAKP,cAAcyE,SAC1C,IAAI7D,EAAOL,KAAKP,cAAckE,UAAUlB,KAAKpC,KAG1CJ,MAAMC,KAAKiE,QAAQC,cACrBnE,MAAMC,KAAKiE,QAAQC,aAAaC,iBAEjCnF,EAASoF,IAAIjE,GACZgB,SAAY,WACZkD,IAAO,IACPC,KAAQ,MAGTxE,KAAKiC,aAAawC,UAAUtB,EAAG9C,GAC/B,IAAIqE,EAAS3F,EAAQA,QAAQiB,KAAKiC,aAAa0C,QAAS,aAAc3E,KAAM,WAC3EjB,EAAQ+B,WAAW4D,GAChB1E,KAAKiC,aAAa0C,QAAQC,cAE5B5E,KAAKP,cAAcoF,eAAexE,KAAKyE,MAAMC,QAAU,UAIzD/E,KAAKgF,cAAgBjG,EAAQqB,UAAU,cAAeJ,KAAM,WAC3D,IAAIiF,EAAejF,KAAKP,cAAckE,UAAUlB,KAGhDwC,EAAanB,QACZ/E,EAAQA,QAAQkG,EAAaP,OAAQ,cAAeO,EAAc,gBAGnE5F,EAAI0E,OAAOmB,YAAYlF,KAAKP,cAAcwE,QAC1C5E,EAAI0E,OAAOmB,YAAYlF,KAAKP,cAAcyE,SAC1ClE,KAAKP,cAAcwE,OAAOiB,YAAYD,EAAa5E,MAEnD,IAAI8E,EAAanF,KAAKP,cAAc2F,UAAUpF,KAAKP,cAAc4F,kBAC7DC,EAAYtF,KAAKP,cAAc8F,iBAEhCD,GAAaH,EAAWK,MAAMrE,SACd,GAAdmE,GACMH,EAAWK,MAAMxF,KAAKP,cAAc8F,kBAAkB9C,KAAKpC,KAEX,QAAxDL,KAAKP,cAAcoF,eAAexE,KAAKyE,MAAMC,SAC/C/E,KAAKP,cAAcoF,eAAexE,KAAKyE,MAAMC,QAE9C/E,KAAKP,cAAckE,UAAUC,SAAS5B,KAAKjD,EAAQA,QAAQiB,KAAKP,cAAckE,UAAUlB,KAAM,SAAUzC,KAAKP,cAAe,WAC5HO,KAAKP,cAAckE,UAAUC,SAAS5B,KAAKjD,EAAQA,QAAQiB,KAAKP,cAAckE,UAAUlB,KAAM,YAAazC,KAAKP,cAAe,WAC/HO,KAAKF,aAAagF,MAAMC,QAAU,GAClC/E,KAAKP,cAAcgG,OAAOzF,KAAKF,cAC/Bf,EAAQ2G,YAAY1F,KAAKgF,eACzBjG,EAAQ2G,YAAY1F,KAAK2F,aACtB1F,MAAMC,KAAKiE,QAAQC,cACrBnE,MAAMC,KAAKiE,QAAQC,aAAawB,iBAGlC5F,KAAK2F,YAAc5G,EAAQqB,UAAU,mBAAoBJ,KAAM,SAAS6F,GACvE9G,EAAQ2G,YAAY1F,KAAKgF,eACzBjG,EAAQ2G,YAAY1F,KAAK2F,aACzB3F,KAAKyF,gBAINzF,KAAKa,OAASb,KAAKwD,WAAWxD,KAAKP,cAAckE,UAAUlB,KAAKpC,KAAML,KAAKR,kBACxEQ,KAAKa,SAEP9B,EAAQ+B,WAAWd,KAAKP,cAAckE,UAAUC,SAASC,OACzD9E,EAAQ+B,WAAWd,KAAKP,cAAckE,UAAUC,SAASC,OAEzD7D,KAAKP,cAAcoF,eAAexE,KAAKyE,MAAMC,QAAU,OACnD/E,KAAKH,iBACRG,KAAKH,eAAiBd,EAAQA,QAAQF,EAAK2B,IAAK,YAAaR,KAAM,YAKtEjB,EAAQ4B,QAAQ,sCAAsCX,KAAKR,iBAAiBa,KAAML,KAAKR,iBAAiBoB,KAAMZ,KAAKF,aAAcE,KAAKa,UAGvIyC,WAAY,SAAqBH,GAQhC,GAAGnD,KAAK+C,aAAalE,KAAK,CAEzBE,EAAQ2G,YAAY1F,KAAKgF,eACzBjG,EAAQ2G,YAAY1F,KAAK2F,aAEzB,IAAIV,EAAejF,KAAKP,cAAckE,UAAUlB,KAEhDzC,KAAKP,cAAckE,UAAUlB,KAAKqB,OAAO9B,KAAKjD,EAAQA,QACrDkG,EAAa5E,KAAKyF,cAClB,cACAb,EACA,WAGD5F,EAAI0E,OAAOmB,YAAYlF,KAAKP,cAAcwE,QAC1C5E,EAAI0E,OAAOmB,YAAYlF,KAAKP,cAAcyE,SAC1ClE,KAAKP,cAAcwE,OAAOiB,YAAYD,EAAa5E,MAEnD,IAAIyE,EAAQG,EAAa5E,KAAKyE,MAC9BA,EAAMzD,SAAW,WACjByD,EAAMN,KAAQS,EAAac,WAAW7E,EAAIiC,EAAEC,MAAO,KACnD0B,EAAMP,IAAOU,EAAac,WAAWC,EAAI7C,EAAEC,MAAO,KAClD0B,EAAMC,QAAU,GAEhB/E,KAAKiC,aAAagE,aAEfhG,MAAMC,KAAKiE,QAAQC,cACrBnE,MAAMC,KAAKiE,QAAQC,aAAawB,eAE0B,QAAxD5F,KAAKP,cAAcoF,eAAexE,KAAKyE,MAAMC,UAC/C/E,KAAKP,cAAcoF,eAAexE,KAAKyE,MAAMC,QAAU,IAGxD/E,KAAKP,cAAckE,UAAUC,SAAS5B,KAAKjD,EAAQA,QAAQiB,KAAKP,cAAckE,UAAUlB,KAAM,SAAUzC,KAAKP,cAAe,WAC5HO,KAAKP,cAAckE,UAAUC,SAAS5B,KAAKjD,EAAQA,QAAQiB,KAAKP,cAAckE,UAAUlB,KAAM,YAAazC,KAAKP,cAAe,WAC/HO,KAAKP,cAAckE,UAAUlB,KAAKyD,OAAO/C,QAGtCnD,KAAKa,SAEJb,KAAKH,iBACPd,EAAQ+B,WAAWd,KAAKH,gBACxBG,KAAKH,eAAiB,MAGoC,QAAxDG,KAAKP,cAAcoF,eAAexE,KAAKyE,MAAMC,UAC/C/E,KAAKP,cAAcoF,eAAexE,KAAKyE,MAAMC,QAAU,IAGxD/E,KAAKP,cAAckE,UAAUC,SAAS5B,KAAKjD,EAAQA,QAAQiB,KAAKP,cAAckE,UAAUlB,KAAM,SAAUzC,KAAKP,cAAe,WAC5HO,KAAKP,cAAckE,UAAUC,SAAS5B,KAAKjD,EAAQA,QAAQiB,KAAKP,cAAckE,UAAUlB,KAAM,YAAazC,KAAKP,cAAe,WAC/HO,KAAKP,cAAckE,UAAUlB,KAAKyD,OAAO/C,IAI3CpE,EAAQ4B,QAAQ,qCAAqCX,KAAK+C,aAAa1C,KAAML,KAAK+C,aAAanC,KAAMZ,KAAKF,aAAcE,KAAKa,UAG9H4E,OAAQ,SAAqBtC,GAOzBnD,KAAKR,iBAAiBX,MAErBoB,MAAMC,KAAKiE,QAAQC,cACrBnE,MAAMC,KAAKiE,QAAQC,aAAawB,eAGyB,QAAxD5F,KAAKP,cAAcoF,eAAexE,KAAKyE,MAAMC,UAC/C/E,KAAKP,cAAcoF,eAAexE,KAAKyE,MAAMC,QAAU,IAGrD/E,KAAKP,cAAcwE,OAAOkC,YAA+D,GAAjDnG,KAAKP,cAAcwE,OAAOkC,WAAWC,WAC/E/G,EAAI0E,OAAOC,YAAYhE,KAAKP,cAAcwE,QAC1C5E,EAAI0E,OAAOC,YAAYhE,KAAKP,cAAcyE,UAGxClE,KAAKF,aAAaqG,YAAcnG,KAAKP,cAAcwE,QACrDjE,KAAKP,cAAcwE,OAAOD,YAAYhE,KAAKF,cAE5Cf,EAAQ+B,WAAWd,KAAKJ,cACxBb,EAAQ+B,WAAWd,KAAKH,gBACxBG,KAAKJ,aAAeI,KAAKH,eAAiB,KAC1Cd,EAAQ4B,QAAQ,sCAAuCX,KAAKF,aAAcE,KAAKR,iBAAiBa,KAAML,KAAKR,iBAAiBoB,OAC5H3B,EAASoH,OAAOrG,KAAKF,aAAc,YACnC,IAAIgF,EAAQ9E,KAAKF,aAAagF,MAC9BA,EAAMzD,SAAW,WACjByD,EAAMN,KAAO,IACbM,EAAMP,IAAM,IACZO,EAAMwB,MAAQ,OACdtH,EAAMwD,QAAQxC,KAAKP,cAAckE,UAAUC,SAAU7E,EAAQ+B,YAC7Dd,KAAKP,cAAc8G,oBAAoBvG,KAAKP,cAAckE,WAC1D3D,KAAKF,aAAe,KACpBE,KAAKR,iBAAmB,KAExBQ,KAAKP,cAAc+G,qBAarB,OATAvG,MAAMC,KAAKiE,QAAQsC,WAAa,KAChCxG,MAAMC,KAAKiE,QAAQuC,UAAY,WAM9B,OAHIzG,MAAMC,KAAKiE,QAAQsC,aACtBxG,MAAMC,KAAKiE,QAAQsC,WAAa,IAAIxG,MAAMC,KAAKiE,QAAQwC,WAEjD1G,MAAMC,KAAKiE,QAAQsC,YAEpBnH","file":"../../../mdnd/adapter/DndToDojo.js","sourcesContent":["define([\"dojo/_base/kernel\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/connect\",\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/dom-class\",\r\n\t\"dojo/dom-style\",\r\n\t\"dojo/dom-geometry\",\r\n\t\"dojo/topic\", // topic.publish()\r\n\t\"dojo/_base/window\",\r\n\t\"dojox/mdnd/PureSource\",\r\n\t\"dojox/mdnd/LazyManager\"\r\n],function(dojo, declare, connect, array, domClass, domStyle, geom, topic, win){\r\n\tvar dtd = declare(\r\n\t\t\"dojox.mdnd.adapter.DndToDojo\",\r\n\t\tnull,\r\n\t{\r\n\t\t// summary:\r\n\t\t//\t\tAllow communication between an item of dojox D&D area to a target dojo.\r\n\t\r\n\t\t// _dojoList: Array\r\n\t\t//\t\tArray containing object references the dojo Target list\r\n\t\t_dojoList: null,\r\n\t\r\n\t\t// _currentDojoArea: DOMNode\r\n\t\t//\t\tRepresenting the current dojo area\r\n\t\t_currentDojoArea: null,\r\n\t\r\n\t\t// _dojoxManager: dojox.mdnd.AreaManager\r\n\t\t//\t\tThe reference to the dojox AreaManager\r\n\t\t_dojoxManager: null,\r\n\t\r\n\t\t// _dragStartHandler: Object\r\n\t\t//\t\tHandle to keep start subscribe\r\n\t\t_dragStartHandler: null,\r\n\t\r\n\t\t// _dropHandler: Object\r\n\t\t//\t\tHandle to keep drop subscribe\r\n\t\t_dropHandler: null,\r\n\t\r\n\t\t// _moveHandler: Object\r\n\t\t//\t\tHandle to keep move subscribe\r\n\t\t_moveHandler: null,\r\n\t\r\n\t\t// _moveUpHandler: Object\r\n\t\t//\t\tHandle to kee move up subscribe\r\n\t\t_moveUpHandler: null,\r\n\t\r\n\t\t// _draggedNode: DOMNode\r\n\t\t//\t\tThe current dragged node\r\n\t\t_draggedNode: null,\r\n\t\r\n\t\tconstructor: function(){\r\n\t\t\tthis._dojoList = [];\r\n\t\t\tthis._currentDojoArea = null;\r\n\t\t\tthis._dojoxManager = dojox.mdnd.areaManager();\r\n\t\t\tthis._dragStartHandler = connect.subscribe(\"/dojox/mdnd/drag/start\", this, function(node, sourceArea, sourceDropIndex){\r\n\t\t\t\tthis._draggedNode = node;\r\n\t\t\t\tthis._moveHandler = connect.connect(dojo.doc, \"onmousemove\", this, \"onMouseMove\");\r\n\t\t\t});\r\n\t\t\tthis._dropHandler = connect.subscribe(\"/dojox/mdnd/drop\", this, function(node, targetArea, indexChild){\r\n\t\t\t\tif(this._currentDojoArea){\r\n\t\t\t\t\tconnect.publish(\"/dojox/mdnd/adapter/dndToDojo/cancel\", [this._currentDojoArea.node, this._currentDojoArea.type, this._draggedNode, this.accept]);\r\n\t\t\t\t}\r\n\t\t\t\tthis._draggedNode = null;\r\n\t\t\t\tthis._currentDojoArea = null;\r\n\t\t\t\tconnect.disconnect(this._moveHandler);\r\n\t\t\t});\r\n\t\t},\r\n\t\r\n\t\t_getIndexDojoArea: function(/*node*/area){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCheck if a dojo area is registered.\r\n\t\t\t// area: DOMNode\r\n\t\t\t//\t\tA node corresponding to the target dojo.\r\n\t\t\t// returns:\r\n\t\t\t//\t\tThe index of area if it's registered else -1.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\r\n\t\t\t//console.log('dojox.mdnd.adapter.DndToDojo ::: _getIndexDojoArea');\r\n\t\t\tif(area){\r\n\t\t\t\tfor(var i = 0, l = this._dojoList.length; i < l; i++){\r\n\t\t\t\t\tif(this._dojoList[i].node === area){\r\n\t\t\t\t\t\treturn i;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn -1;\r\n\t\t},\r\n\t\r\n\t\t_initCoordinates: function(/*DOMNode*/area){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInitialize the coordinates of the target dojo.\r\n\t\t\t// area:\r\n\t\t\t//\t\tA registered DOM node.\r\n\t\t\t// returns:\r\n\t\t\t//\t\tAn object which contains coordinates : *{x:0,y:,x1:0,y1:0}*\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\r\n\t\t\t//console.log('dojox.mdnd.adapter.DndToDojo ::: _initCoordinates');\r\n\t\t\tif(area){\r\n\t\t\t\tvar position = geom.position(area, true),\r\n\t\t\t\t\tcoords = {};\r\n\t\t\t\tcoords.x = position.x;\r\n\t\t\t\tcoords.y = position.y;\r\n\t\t\t\tcoords.x1 = position.x + position.w;\r\n\t\t\t\tcoords.y1 = position.y + position.h;\r\n\t\t\t\treturn coords;\t// \tObject\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\r\n\t\tregister: function(/*DOMNode*/area, /*String*/ type, /*Boolean*/ dojoTarget){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRegister a target dojo.\r\n\t\t\t//\t\tThe target is represented by an object containing :\r\n\t\t\t//\r\n\t\t\t//\t\t- the dojo area node\r\n\t\t\t//\t\t- the type reference to identify a group node\r\n\t\t\t//\t\t- the coords of the area to enable refresh position\r\n\t\t\t// area:\r\n\t\t\t//\t\tThe DOM node which has to be registered.\r\n\t\t\t// type:\r\n\t\t\t//\t\tA String to identify the node.\r\n\t\t\t// dojoTarget:\r\n\t\t\t//\t\tTrue if the dojo D&D have to be enable when mouse is hover the registered target dojo.\r\n\t\r\n\t\t\t//console.log(\"dojox.mdnd.adapter.DndToDojo ::: registerDojoArea\", area, type, dojoTarget);\r\n\t\t\tif(this._getIndexDojoArea(area) == -1){\r\n\t\t\t\tvar coords = this._initCoordinates(area),\r\n\t\t\t\t\tobject = {\r\n\t\t\t\t\t\t'node': area,\r\n\t\t\t\t\t\t'type': type,\r\n\t\t\t\t\t\t'dojo': (dojoTarget)?dojoTarget:false,\r\n\t\t\t\t\t\t'coords': coords\r\n\t\t\t\t\t};\r\n\t\t\t\tthis._dojoList.push(object);\r\n\t\t\t\t// initialization of the _fakeSource to allow Dnd switching\r\n\t\t\t\tif(dojoTarget && !this._lazyManager){\r\n\t\t\t\t\tthis._lazyManager = new dojox.mdnd.LazyManager();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\tunregisterByNode: function(/*DOMNode*/area){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUnregister a target dojo.\r\n\t\t\t// area:\r\n\t\t\t//\t\tThe DOM node of target dojo.\r\n\t\r\n\t\t\t//console.log(\"dojox.mdnd.adapter.DndToDojo ::: unregisterByNode\", area);\r\n\t\t\tvar index = this._getIndexDojoArea(area);\r\n\t\t\t// if area is registered\r\n\t\t\tif(index != -1){\r\n\t\t\t\tthis._dojoList.splice(index, 1);\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\tunregisterByType: function(/*String*/type){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUnregister several targets dojo having the same type passing in parameter.\r\n\t\t\t// type:\r\n\t\t\t//\t\tA String to identify dojo targets.\r\n\t\r\n\t\t\t//console.log(\"dojox.mdnd.adapter.DndToDojo ::: unregisterByType\", type);\r\n\t\t\tif(type){\r\n\t\t\t\tvar tempList = [];\r\n\t\t\t\tarray.forEach(this._dojoList, function(item, i){\r\n\t\t\t\t\tif(item.type != type){\r\n\t\t\t\t\t\ttempList.push(item);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tthis._dojoList = tempList;\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\tunregister: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUnregister all targets dojo.\r\n\t\r\n\t\t\t//console.log(\"dojox.mdnd.adapter.DndToDojo ::: unregister\");\r\n\t\t\tthis._dojoList = [];\r\n\t\t},\r\n\t\r\n\t\trefresh: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRefresh the coordinates of all registered dojo target.\r\n\t\r\n\t\t\t//console.log(\"dojox.mdnd.adapter.DndToDojo ::: refresh\");\r\n\t\t\tvar dojoList = this._dojoList;\r\n\t\t\tthis.unregister();\r\n\t\t\tarray.forEach(dojoList, function(dojo){\r\n\t\t\t\tdojo.coords = this._initCoordinates(dojo.node);\r\n\t\t\t}, this);\r\n\t\t\tthis._dojoList = dojoList;\r\n\t\t},\r\n\t\r\n\t\trefreshByType: function(/*String*/ type){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRefresh the coordinates of registered dojo target with a specific type.\r\n\t\t\t// type:\r\n\t\t\t//\t\tA String to identify dojo targets.\r\n\t\r\n\t\t\t//console.log(\"dojox.mdnd.adapter.DndToDojo ::: refresh\");\r\n\t\t\tvar dojoList = this._dojoList;\r\n\t\t\tthis.unregister();\r\n\t\t\tarray.forEach(dojoList, function(dojo){\r\n\t\t\t\tif(dojo.type == type){\r\n\t\t\t\t\tdojo.coords = this._initCoordinates(dojo.node);\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t\tthis._dojoList = dojoList;\r\n\t\t},\r\n\t\r\n\t\t_getHoverDojoArea: function(/*Object*/coords){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCheck if the coordinates of the mouse is in a dojo target.\r\n\t\t\t// coords:\r\n\t\t\t//\t\tCoordinates of the mouse.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\r\n\t\t\t//console.log(\"dojox.mdnd.adapter.DndToDojo ::: _getHoverDojoArea\");\r\n\t\t\tthis._oldDojoArea = this._currentDojoArea;\r\n\t\t\tthis._currentDojoArea = null;\r\n\t\t\tvar x = coords.x;\r\n\t\t\tvar y = coords.y;\r\n\t\t\tvar length = this._dojoList.length;\r\n\t\t\tfor(var i = 0; i < length; i++){\r\n\t\t\t\tvar dojoArea = this._dojoList[i];\r\n\t\t\t\tvar coordinates = dojoArea.coords;\r\n\t\t\t\tif(coordinates.x <= x && x <= coordinates.x1 && coordinates.y <= y && y <= coordinates.y1){\r\n\t\t\t\t\tthis._currentDojoArea = dojoArea;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\tonMouseMove: function(/*DOMEvent*/e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCall when the mouse moving after an onStartDrag of AreaManger.\r\n\t\t\t//\t\tCheck if the coordinates of the mouse is in a dojo target.\r\n\t\t\t// e:\r\n\t\t\t//\t\tEvent object.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\r\n\t\t\t//console.log(\"dojox.mdnd.adapter.DndToDojo ::: onMouseMove\");\r\n\t\t\tvar coords = {\r\n\t\t\t\t'x': e.pageX,\r\n\t\t\t\t'y': e.pageY\r\n\t\t\t};\r\n\t\t\tthis._getHoverDojoArea(coords);\r\n\t\t\tif(this._currentDojoArea != this._oldDojoArea){\r\n\t\t\t\tif(this._currentDojoArea == null){\r\n\t\t\t\t\tthis.onDragExit(e);\r\n\t\t\t\t}\r\n\t\t\t\telse if(this._oldDojoArea == null){\r\n\t\t\t\t\tthis.onDragEnter(e);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tthis.onDragExit(e);\r\n\t\t\t\t\tthis.onDragEnter(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\tisAccepted: function(/*DOMNode*/draggedNode, /*Object*/ target){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn true if the dragged node is accepted.\r\n\t\t\t//\t\tThis method has to be overwritten according to registered target.\r\n\t\r\n\t\t\t//console.log(\"dojox.mdnd.adapter.DndToDojo ::: isAccepted\");\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\r\n\t\r\n\t\tonDragEnter: function(/*DOMEvent*/e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCall when the mouse enters in a registered dojo target.\r\n\t\t\t// e:\r\n\t\t\t//\t\tThe current Javascript Event.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\r\n\t\t\t//console.log(\"dojox.mdnd.adapter.DndToDojo ::: onDragEnter\");\r\n\t\t\t// specific for drag and drop switch\r\n\t\t\tif(this._currentDojoArea.dojo){\r\n\t\t\t\t// disconnect\r\n\t\t\t\tconnect.disconnect(this._dojoxManager._dragItem.handlers.pop());\r\n\t\t\t\tconnect.disconnect(this._dojoxManager._dragItem.handlers.pop());\r\n\t\t\t\t//disconnect onmousemove of moveable item\r\n\t\t\t\t//console.info(\"before\",this._dojoxManager._dragItem.item.events.pop());\r\n\t\t\t\tconnect.disconnect(this._dojoxManager._dragItem.item.events.pop());\r\n\t\t\t\twin.body().removeChild(this._dojoxManager._cover);\r\n\t\t\t\twin.body().removeChild(this._dojoxManager._cover2);\r\n\t\t\t\tvar node = this._dojoxManager._dragItem.item.node;\r\n\t\t\t\t// hide dragNode :\r\n\t\t\t\t// disconnect the dojoDndAdapter if it's initialize\r\n\t\t\t\tif(dojox.mdnd.adapter._dndFromDojo){\r\n\t\t\t\t\tdojox.mdnd.adapter._dndFromDojo.unsubscribeDnd();\r\n\t\t\t\t}\r\n\t\t\t\tdomStyle.set(node, {\r\n\t\t\t\t\t'position': \"relative\",\r\n\t\t\t\t\t'top': '0',\r\n\t\t\t\t\t'left': '0'\r\n\t\t\t\t});\r\n\t\t\t\t// launch the drag and drop Dojo.\r\n\t\t\t\tthis._lazyManager.startDrag(e, node);\r\n\t\t\t\tvar handle = connect.connect(this._lazyManager.manager, \"overSource\", this, function(){\r\n\t\t\t\t\tconnect.disconnect(handle);\r\n\t\t\t\t\tif(this._lazyManager.manager.canDropFlag){\r\n\t\t\t\t\t\t// remove dropIndicator\r\n\t\t\t\t\t\tthis._dojoxManager._dropIndicator.node.style.display = \"none\";\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\tthis.cancelHandler = connect.subscribe(\"/dnd/cancel\", this, function(){\r\n\t\t\t\t\tvar moveableItem = this._dojoxManager._dragItem.item;\r\n\t\t\t\t\t// connect onmousemove of moveable item\r\n\t\t\t\t\t// need to reconnect the onmousedown of movable class.\r\n\t\t\t\t\tmoveableItem.events = [\r\n\t\t\t\t\t\tconnect.connect(moveableItem.handle, \"onmousedown\", moveableItem, \"onMouseDown\")\r\n\t\t\t\t\t];\r\n\t\t\t\t\t// replace the cover and the dragNode in the cover.\r\n\t\t\t\t\twin.body().appendChild(this._dojoxManager._cover);\r\n\t\t\t\t\twin.body().appendChild(this._dojoxManager._cover2);\r\n\t\t\t\t\tthis._dojoxManager._cover.appendChild(moveableItem.node);\r\n\t\r\n\t\t\t\t\tvar objectArea = this._dojoxManager._areaList[this._dojoxManager._sourceIndexArea];\r\n\t\t\t\t\tvar dropIndex = this._dojoxManager._sourceDropIndex;\r\n\t\t\t\t\tvar nodeRef = null;\r\n\t\t\t\t\tif(dropIndex != objectArea.items.length\r\n\t\t\t\t\t\t\t&& dropIndex != -1){\r\n\t\t\t\t\t\tnodeRef = objectArea.items[this._dojoxManager._sourceDropIndex].item.node;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(this._dojoxManager._dropIndicator.node.style.display == \"none\"){\r\n\t\t\t\t\t\tthis._dojoxManager._dropIndicator.node.style.display == \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._dojoxManager._dragItem.handlers.push(connect.connect(this._dojoxManager._dragItem.item, \"onDrag\", this._dojoxManager, \"onDrag\"));\r\n\t\t\t\t\tthis._dojoxManager._dragItem.handlers.push(connect.connect(this._dojoxManager._dragItem.item, \"onDragEnd\", this._dojoxManager, \"onDrop\"));\r\n\t\t\t\t\tthis._draggedNode.style.display = \"\";\r\n\t\t\t\t\tthis._dojoxManager.onDrop(this._draggedNode);\r\n\t\t\t\t\tconnect.unsubscribe(this.cancelHandler);\r\n\t\t\t\t\tconnect.unsubscribe(this.dropHandler);\r\n\t\t\t\t\tif(dojox.mdnd.adapter._dndFromDojo){\r\n\t\t\t\t\t\tdojox.mdnd.adapter._dndFromDojo.subscribeDnd();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tthis.dropHandler = connect.subscribe(\"/dnd/drop/before\", this, function(params){\r\n\t\t\t\t\tconnect.unsubscribe(this.cancelHandler);\r\n\t\t\t\t\tconnect.unsubscribe(this.dropHandler);\r\n\t\t\t\t\tthis.onDrop();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tthis.accept = this.isAccepted(this._dojoxManager._dragItem.item.node, this._currentDojoArea);\r\n\t\t\t\tif(this.accept){\r\n\t\t\t\t\t// disconnect\r\n\t\t\t\t\tconnect.disconnect(this._dojoxManager._dragItem.handlers.pop());\r\n\t\t\t\t\tconnect.disconnect(this._dojoxManager._dragItem.handlers.pop());\r\n\t\t\t\t\t// remove dropIndicator\r\n\t\t\t\t\tthis._dojoxManager._dropIndicator.node.style.display = \"none\";\r\n\t\t\t\t\tif(!this._moveUpHandler){\r\n\t\t\t\t\t\tthis._moveUpHandler = connect.connect(dojo.doc, \"onmouseup\", this, \"onDrop\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// publish a topic\r\n\t\t\tconnect.publish(\"/dojox/mdnd/adapter/dndToDojo/over\",[this._currentDojoArea.node, this._currentDojoArea.type, this._draggedNode, this.accept]);\r\n\t\t},\r\n\t\r\n\t\tonDragExit: function(/*DOMEvent*/e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCall when the mouse exit of a registered dojo target.\r\n\t\t\t// e:\r\n\t\t\t//\t\tcurrent javscript event\r\n\t\r\n\t\t\t//console.log(\"dojox.mdnd.adapter.DndToDojo ::: onDragExit\",e, this._dojoxManager._dragItem.item);\r\n\t\t\t// set the old height of dropIndicator.\r\n\t\t\tif(this._oldDojoArea.dojo){\r\n\t\t\t\t// unsubscribe the topic /dnd/cancel and /dnd/drop/before\r\n\t\t\t\tconnect.unsubscribe(this.cancelHandler);\r\n\t\t\t\tconnect.unsubscribe(this.dropHandler);\r\n\t\t\t\t// launch Drag and Drop\r\n\t\t\t\tvar moveableItem = this._dojoxManager._dragItem.item;\r\n\t\t\t\t// connect onmousemove of moveable item\r\n\t\t\t\tthis._dojoxManager._dragItem.item.events.push(connect.connect(\r\n\t\t\t\t\tmoveableItem.node.ownerDocument,\r\n\t\t\t\t\t\"onmousemove\",\r\n\t\t\t\t\tmoveableItem,\r\n\t\t\t\t\t\"onMove\"\r\n\t\t\t\t));\r\n\t\t\t\t// replace the cover and the dragNode in the cover.\r\n\t\t\t\twin.body().appendChild(this._dojoxManager._cover);\r\n\t\t\t\twin.body().appendChild(this._dojoxManager._cover2);\r\n\t\t\t\tthis._dojoxManager._cover.appendChild(moveableItem.node);\r\n\t\t\t\t// fix style :\r\n\t\t\t\tvar style = moveableItem.node.style;\r\n\t\t\t\tstyle.position = \"absolute\";\r\n\t\t\t\tstyle.left = (moveableItem.offsetDrag.l + e.pageX)+\"px\";\r\n\t\t\t\tstyle.top = (moveableItem.offsetDrag.t + e.pageX)+\"px\";\r\n\t\t\t\tstyle.display = \"\";\r\n\t\t\t\t// stop dojoDrag\r\n\t\t\t\tthis._lazyManager.cancelDrag();\r\n\t\t\t\t// reconnect the dndFromDojo\r\n\t\t\t\tif(dojox.mdnd.adapter._dndFromDojo){\r\n\t\t\t\t\tdojox.mdnd.adapter._dndFromDojo.subscribeDnd();\r\n\t\t\t\t}\r\n\t\t\t\tif(this._dojoxManager._dropIndicator.node.style.display == \"none\"){\r\n\t\t\t\t\tthis._dojoxManager._dropIndicator.node.style.display = \"\";\r\n\t\t\t\t}\r\n\t\t\t\t// reconnect the areaManager.\r\n\t\t\t\tthis._dojoxManager._dragItem.handlers.push(connect.connect(this._dojoxManager._dragItem.item, \"onDrag\", this._dojoxManager, \"onDrag\"));\r\n\t\t\t\tthis._dojoxManager._dragItem.handlers.push(connect.connect(this._dojoxManager._dragItem.item, \"onDragEnd\", this._dojoxManager, \"onDrop\"));\r\n\t\t\t\tthis._dojoxManager._dragItem.item.onMove(e);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(this.accept){\r\n\t\t\t\t\t// disconnect the mouseUp event.\r\n\t\t\t\t\tif(this._moveUpHandler){\r\n\t\t\t\t\t\tconnect.disconnect(this._moveUpHandler);\r\n\t\t\t\t\t\tthis._moveUpHandler = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// redisplay dropIndicator\r\n\t\t\t\t\tif(this._dojoxManager._dropIndicator.node.style.display == \"none\"){\r\n\t\t\t\t\t\tthis._dojoxManager._dropIndicator.node.style.display = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// reconnect the areaManager.\r\n\t\t\t\t\tthis._dojoxManager._dragItem.handlers.push(connect.connect(this._dojoxManager._dragItem.item, \"onDrag\", this._dojoxManager, \"onDrag\"));\r\n\t\t\t\t\tthis._dojoxManager._dragItem.handlers.push(connect.connect(this._dojoxManager._dragItem.item, \"onDragEnd\", this._dojoxManager, \"onDrop\"));\r\n\t\t\t\t\tthis._dojoxManager._dragItem.item.onMove(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// publish a topic\r\n\t\t\tconnect.publish(\"/dojox/mdnd/adapter/dndToDojo/out\",[this._oldDojoArea.node, this._oldDojoArea.type, this._draggedNode, this.accept]);\r\n\t\t},\r\n\t\r\n\t\tonDrop: function(/*DOMEvent*/e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when an onmouseup event is loaded on a registered target dojo.\r\n\t\t\t// e:\r\n\t\t\t//\t\tEvent object.\r\n\t\r\n\t\t\t//console.log(\"dojox.mdnd.adapter.DndToDojo ::: onDrop\", this._currentDojoArea);\r\n\t\t\tif(this._currentDojoArea.dojo){\r\n\t\t\t\t// reconnect the dojoDndAdapter\r\n\t\t\t\tif(dojox.mdnd.adapter._dndFromDojo){\r\n\t\t\t\t\tdojox.mdnd.adapter._dndFromDojo.subscribeDnd();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(this._dojoxManager._dropIndicator.node.style.display == \"none\"){\r\n\t\t\t\tthis._dojoxManager._dropIndicator.node.style.display = \"\";\r\n\t\t\t}\r\n\t\t\t// remove the cover\r\n\t\t\tif(this._dojoxManager._cover.parentNode && this._dojoxManager._cover.parentNode.nodeType == 1){\r\n\t\t\t\twin.body().removeChild(this._dojoxManager._cover);\r\n\t\t\t\twin.body().removeChild(this._dojoxManager._cover2);\r\n\t\t\t}\r\n\t\t\t// remove draggedNode of target :\r\n\t\t\tif(this._draggedNode.parentNode == this._dojoxManager._cover){\r\n\t\t\t\tthis._dojoxManager._cover.removeChild(this._draggedNode);\r\n\t\t\t}\r\n\t\t\tconnect.disconnect(this._moveHandler);\r\n\t\t\tconnect.disconnect(this._moveUpHandler);\r\n\t\t\tthis._moveHandler = this._moveUpHandler = null;\r\n\t\t\tconnect.publish(\"/dojox/mdnd/adapter/dndToDojo/drop\", [this._draggedNode, this._currentDojoArea.node, this._currentDojoArea.type]);\r\n\t\t\tdomClass.remove(this._draggedNode, \"dragNode\");\r\n\t\t\tvar style = this._draggedNode.style;\r\n\t\t\tstyle.position = \"relative\";\r\n\t\t\tstyle.left = \"0\";\r\n\t\t\tstyle.top = \"0\";\r\n\t\t\tstyle.width = \"auto\";\r\n\t\t\tarray.forEach(this._dojoxManager._dragItem.handlers, connect.disconnect);\r\n\t\t\tthis._dojoxManager._deleteMoveableItem(this._dojoxManager._dragItem);\r\n\t\t\tthis._draggedNode = null;\r\n\t\t\tthis._currentDojoArea = null;\r\n\t\t\t// reset of area manager.\r\n\t\t\tthis._dojoxManager._resetAfterDrop();\r\n\t\t}\r\n\t});\r\n\t\r\n\tdojox.mdnd.adapter._dndToDojo = null;\r\n\tdojox.mdnd.adapter.dndToDojo = function(){\r\n\t\t// summary:\r\n\t\t//\t\treturns the current areaManager, creates one if it is not created yet\r\n\t\tif(!dojox.mdnd.adapter._dndToDojo){\r\n\t\t\tdojox.mdnd.adapter._dndToDojo = new dojox.mdnd.adapter.DndToDojo();\r\n\t\t}\r\n\t\treturn dojox.mdnd.adapter._dndToDojo;\t// Object\r\n\t};\r\n\treturn dtd;\r\n});\r\n"]}