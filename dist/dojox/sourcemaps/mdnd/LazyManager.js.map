{"version":3,"sources":["mdnd/LazyManager.js"],"names":["define","dojo","declare","lang","domClass","domConstruct","domAttr","dnd","Manager","PureSource","constructor","this","_registry","_fakeSource","create","copyOnly","startup","addOnUnload","hitch","manager","getItem","draggedNode","type","getAttribute","data","innerHTML","split","startDrag","e","target","m","object","id","set","getUniqueId","add","setItem","onMouseMove","cancelDrag","onMouseUp","destroy"],"mappings":";;;;;;;AAAAA,QACC,oBACA,qBACA,kBACA,iBACA,qBACA,gBACA,kBACA,mBACA,eACA,qBACC,SAASC,EAAMC,EAASC,EAAMC,EAAUC,EAAcC,EAASC,EAAKC,EAASC,GAC9E,OAAOP,EACN,yBACA,MAKAQ,YAAa,WAEZC,KAAKC,aAELD,KAAKE,YAAc,IAAIJ,EAAWJ,EAAaS,OAAO,QACrDC,UAAY,IAEbJ,KAAKE,YAAYG,UACjBf,EAAKgB,YAAYd,EAAKe,MAAMP,KAAM,YAClCA,KAAKQ,QAAUX,EAAQW,WAGxBC,QAAS,SAAoBC,GAE5B,IAAIC,EAAOD,EAAYE,aAAa,WACpC,OACCC,KAASH,EAAYE,aAAa,YAAcF,EAAYI,UAC5DH,KAASA,EAAOA,EAAKI,MAAM,YAAc,UAI3CC,UAAW,SAAkBC,EAAeP,GAM3C,GADAA,EAAcA,GAAeO,EAAEC,OAChB,CACd,IAAIC,EAAInB,KAAKQ,QACZY,EAASpB,KAAKS,QAAQC,GACF,IAAlBA,EAAYW,IACb1B,EAAQ2B,IAAIZ,EAAa,KAAMd,EAAI2B,eAErC9B,EAAS+B,IAAId,EAAa,eAC1BV,KAAKE,YAAYuB,QAAQf,EAAYW,GAAID,GACzCD,EAAEH,UAAUhB,KAAKE,aAAcQ,IAAc,GAC7CS,EAAEO,YAAYT,KAIhBU,WAAY,WAKX,IAAIR,EAAInB,KAAKQ,QACbW,EAAED,OAAS,KACXC,EAAES,aAIHC,QAAS,WAER7B,KAAKE,YAAY2B","file":"../../mdnd/LazyManager.js","sourcesContent":["define([\r\n\t\"dojo/_base/kernel\",\t\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/lang\",\t// dojo.hitch\r\n\t\"dojo/dom-class\",\r\n\t\"dojo/dom-construct\",\r\n\t\"dojo/dom-attr\",\r\n\t\"dojo/dnd/common\",\r\n\t\"dojo/dnd/Manager\",\r\n\t\"./PureSource\",\r\n\t\"dojo/_base/unload\"  // dojo.addOnUnload\r\n],function(dojo, declare, lang, domClass, domConstruct, domAttr, dnd, Manager, PureSource){\r\n\treturn declare(\r\n\t\t\"dojox.mdnd.LazyManager\",\r\n\t\tnull,\r\n\t{\r\n\t\t// summary:\r\n\t\t//\t\tThis class allows to launch a drag and drop dojo on the fly.\r\n\t\t\r\n\t\tconstructor: function(){\r\n\t\t\t//console.log(\"dojox.mdnd.LazyManager ::: constructor\");\r\n\t\t\tthis._registry = {};\r\n\t\t\t// initialization of the _fakeSource to enabled DragAndDrop :\r\n\t\t\tthis._fakeSource = new PureSource(domConstruct.create(\"div\"), {\r\n\t\t\t\t'copyOnly': false\r\n\t\t\t});\r\n\t\t\tthis._fakeSource.startup();\r\n\t\t\tdojo.addOnUnload(lang.hitch(this, \"destroy\"));\r\n\t\t\tthis.manager = Manager.manager();\r\n\t\t},\r\n\t\t\r\n\t\tgetItem: function(/*DOMNode*/draggedNode){\r\n\t\t\t//console.log(\"dojox.mdnd.LazyManager ::: getItem\");\r\n\t\t\tvar type = draggedNode.getAttribute(\"dndType\");\r\n\t\t\treturn {\r\n\t\t\t\t'data' : draggedNode.getAttribute(\"dndData\") || draggedNode.innerHTML,\r\n\t\t\t\t'type' : type ? type.split(/\\s*,\\s*/) : [\"text\"]\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tstartDrag: function(/*Event*/e, /*DOMNode?*/draggedNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tlaunch a dojo drag and drop on the fly.\r\n\t\r\n\t\t\t//console.log(\"dojox.mdnd.LazyManager ::: startDrag\");\r\n\t\t\tdraggedNode = draggedNode || e.target;\r\n\t\t\tif(draggedNode){\r\n\t\t\t\tvar m = this.manager,\r\n\t\t\t\t\tobject = this.getItem(draggedNode);\r\n\t\t\t\tif(draggedNode.id == \"\"){\r\n\t\t\t\t  domAttr.set(draggedNode, \"id\", dnd.getUniqueId());\r\n\t\t\t\t}\r\n\t\t\t\tdomClass.add(draggedNode, \"dojoDndItem\");\r\n\t\t\t\tthis._fakeSource.setItem(draggedNode.id, object);\r\n\t\t\t\tm.startDrag(this._fakeSource, [draggedNode], false);\r\n\t\t\t\tm.onMouseMove(e);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tcancelDrag: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcancel a drag and drop dojo on the fly.\r\n\t\r\n\t\t\t//console.log(\"dojox.mdnd.LazyManager ::: cancelDrag\");\r\n\t\t\tvar m = this.manager;\r\n\t\t\tm.target = null;\r\n\t\t\tm.onMouseUp();\r\n\t\t},\r\n\t\t\r\n\t\t\r\n\t\tdestroy: function(){\r\n\t\t\t//console.log(\"dojox.mdnd.LazyManager ::: destroy\");\r\n\t\t\tthis._fakeSource.destroy();\r\n\t\t}\r\n\t});\r\n});\r\n"]}