{"version":3,"sources":["mdnd/Moveable.js"],"names":["define","dojo","declare","array","connect","event","sniff","dom","geom","domStyle","handle","skip","dragDistance","constructor","params","node","this","byId","d","ownerDocument","events","dojox","mdnd","autoScroll","isFormElement","e","t","target","nodeType","parentNode","indexOf","tagName","toLowerCase","onMouseDown","_isDragging","which","button","setAutoScrollNode","setAutoScrollMaxPage","push","_selectStart","body","stop","_firstX","clientX","_firstY","clientY","onFirstMove","disconnect","pop","set","getContentBox","w","initOffsetDrag","offsetDrag","l","pageX","pageY","style","position","x","y","coords","size","h","onDragStart","onMove","Date","date","checkAutoScroll","s","left","top","onDrag","onMouseUp","stopAutoScroll","onDragEnd","focus","mousePosition","destroy","forEach"],"mappings":"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","file":"../../mdnd/Moveable.js","sourcesContent":["define([\r\n\t\"dojo/_base/kernel\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/connect\",\r\n\t\"dojo/_base/event\",\r\n\t\"dojo/_base/sniff\",\r\n\t\"dojo/dom\",\r\n\t\"dojo/dom-geometry\",\r\n\t\"dojo/dom-style\",\r\n\t\"dojo/_base/window\"\r\n],function(dojo, declare, array, connect, event, sniff, dom, geom, domStyle){\r\n\treturn declare(\r\n\t\t\"dojox.mdnd.Moveable\",\r\n\t\tnull,\r\n\t{\r\n\t\t// summary:\r\n\t\t//\t\tAllow end-users to track a DOM node into the web page\r\n\t\r\n\t\t// handle: DOMNode\r\n\t\t//\t\tThe node on which the user clicks to drag the main node.\r\n\t\thandle: null,\r\n\t\t\r\n\t\t// skip: Boolean\r\n\t\t//\t\tA flag to control a drag action if a form element has been focused.\r\n\t\t//\t\tIf true, the drag action is not executed.\r\n\t\tskip: true,\r\n\t\r\n\t\t// dragDistance: Integer\r\n\t\t//\t\tThe user clicks on the handle, but the drag action will really begin\r\n\t\t//\t\tif he tracks the main node to more than 3 pixels.\r\n\t\tdragDistance: 3,\r\n\t\t\r\n\t\tconstructor: function(/*Object*/params, /*DOMNode*/node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConfigure parameters and listen to mousedown events from handle\r\n\t\t\t//\t\tnode.\r\n\t\t\t// params:\r\n\t\t\t//\t\tHash of parameters\r\n\t\t\t// node:\r\n\t\t\t//\t\tThe draggable node\r\n\t\r\n\t\t\t//console.log(\"dojox.mdnd.Moveable ::: constructor\");\r\n\t\t\tthis.node = dom.byId(node);\r\n\t\t\t\r\n\t\t\tthis.d = this.node.ownerDocument;\r\n\t\t\t\r\n\t\t\tif(!params){ params = {}; }\r\n\t\t\tthis.handle = params.handle ? dom.byId(params.handle) : null;\r\n\t\t\tif(!this.handle){ this.handle = this.node; }\r\n\t\t\tthis.skip = params.skip;\r\n\t\t\tthis.events = [\r\n\t\t\t\tconnect.connect(this.handle, \"onmousedown\", this, \"onMouseDown\")\r\n\t\t\t];\r\n\t\t\tif(dojox.mdnd.autoScroll){\r\n\t\t\t\tthis.autoScroll = dojox.mdnd.autoScroll;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t},\r\n\t\t\r\n\t\tisFormElement: function(/*DOMEvent*/ e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tidentify the type of target node associated with a DOM event.\r\n\t\t\t// e:\r\n\t\t\t//\t\ta DOM event\r\n\t\t\t// returns:\r\n\t\t\t//\t\tif true, the target is one of those specific nodes.\r\n\t\r\n\t\t\t//console.log(\"dojox.mdnd.Moveable ::: isFormElement\");\r\n\t\t\tvar t = e.target;\r\n\t\t\tif(t.nodeType == 3 /*TEXT_NODE*/){\r\n\t\t\t\tt = t.parentNode;\r\n\t\t\t}\r\n\t\t\treturn \" a button textarea input select option \".indexOf(\" \" + t.tagName.toLowerCase() + \" \") >= 0;\t// Boolean\r\n\t\t},\r\n\t\t\r\n\t\tonMouseDown: function(/*DOMEvent*/e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOccurs when the user clicks on the handle node.\r\n\t\t\t//\t\tSkip the drag action if a specific node is targeted.\r\n\t\t\t//\t\tListens to mouseup and mousemove events on to the HTML document.\r\n\t\t\t// e:\r\n\t\t\t//\t\ta DOM event\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\r\n\t\t\t//console.log(\"dojox.mdnd.Moveable ::: onMouseDown\");\r\n\t\t\tif(this._isDragging){ return;}\r\n\t\t\tvar isLeftButton = (e.which || e.button) == 1;\r\n\t\t\tif(!isLeftButton){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(this.skip && this.isFormElement(e)){ return; }\r\n\t\t\tif(this.autoScroll){\r\n\t\t\t\tthis.autoScroll.setAutoScrollNode(this.node);\r\n\t\t\t\tthis.autoScroll.setAutoScrollMaxPage();\r\n\t\t\t}\r\n\t\t\tthis.events.push(connect.connect(this.d, \"onmouseup\", this, \"onMouseUp\"));\r\n\t\t\tthis.events.push(connect.connect(this.d, \"onmousemove\", this, \"onFirstMove\"));\r\n\t\t\tthis._selectStart = connect.connect(dojo.body(), \"onselectstart\", event.stop);\r\n\t\t\tthis._firstX = e.clientX;\r\n\t\t\tthis._firstY = e.clientY;\r\n\t\t\tevent.stop(e);\r\n\t\t},\r\n\t\t\r\n\t\tonFirstMove: function(/*DOMEvent*/e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOccurs when the user moves the mouse after clicking on the\r\n\t\t\t//\t\thandle.\r\n\t\t\t//\t\tDeterminate when the drag action will have to begin (see\r\n\t\t\t//\t\tdragDistance).\r\n\t\t\t// e:\r\n\t\t\t//\t\tA DOM event\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\r\n\t\t\t//console.log(\"dojox.mdnd.Moveable ::: onFirstMove\");\r\n\t\t\tevent.stop(e);\r\n\t\t\tvar d = (this._firstX - e.clientX) * (this._firstX - e.clientX)\r\n\t\t\t\t\t+ (this._firstY - e.clientY) * (this._firstY - e.clientY);\r\n\t\t\tif(d > this.dragDistance * this.dragDistance){\r\n\t\t\t\tthis._isDragging = true;\r\n\t\t\t\tconnect.disconnect(this.events.pop());\r\n\t\t\t\tdomStyle.set(this.node, \"width\", geom.getContentBox(this.node).w + \"px\");\r\n\t\t\t\tthis.initOffsetDrag(e);\r\n\t\t\t\tthis.events.push(connect.connect(this.d, \"onmousemove\", this, \"onMove\"));\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tinitOffsetDrag: function(/*DOMEvent*/e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInitialize the gap between main node coordinates and the clicked point.\r\n\t\t\t//\t\tCall the onDragStart method.\r\n\t\t\t// e:\r\n\t\t\t//\t\tA DOM event\r\n\t\r\n\t\t\t//console.log(\"dojox.mdnd.Moveable ::: initOffsetDrag\");\r\n\t\t\tthis.offsetDrag = { 'l': e.pageX, 't': e.pageY };\r\n\t\t\tvar s = this.node.style;\r\n\t\t\tvar position = geom.position(this.node, true);\r\n\t\t\t/*if(s.position == \"relative\" || s.position == \"\"){\r\n\t\t\t\ts.position = \"absolute\"; // enforcing the absolute mode\r\n\t\t\t}*/\r\n\t\t\tthis.offsetDrag.l = position.x - this.offsetDrag.l;\r\n\t\t\tthis.offsetDrag.t = position.y - this.offsetDrag.t;\r\n\t\t\tvar coords = {\r\n\t\t\t\t'x': position.x,\r\n\t\t\t\t'y': position.y\r\n\t\t\t};\r\n\t\t\tthis.size = {\r\n\t\t\t\t'w': position.w,\r\n\t\t\t\t'h': position.h\r\n\t\t\t};\r\n\t\t\t// method to catch\r\n\t\t\tthis.onDragStart(this.node, coords, this.size);\r\n\t\t},\r\n\t\t\r\n\t\tonMove: function(/*DOMEvent*/e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOccurs when the user moves the mouse.\r\n\t\t\t//\t\tCalls the onDrag method.\r\n\t\t\t// e:\r\n\t\t\t//\t\ta DOM event\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\r\n\t\t\t//console.log(\"dojox.mdnd.Moveable ::: onMove\");\r\n\t\t\tevent.stop(e);\r\n\t\t\t// hack to avoid too many calls to onMove in IE8 causing sometimes slowness\r\n\t\t\tif(sniff(\"ie\") == 8 && new Date() - this.date < 20){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(this.autoScroll){\r\n\t\t\t\tthis.autoScroll.checkAutoScroll(e);\r\n\t\t\t}\r\n\t\t\tvar coords = {\r\n\t\t\t\t'x': this.offsetDrag.l + e.pageX,\r\n\t\t\t\t'y': this.offsetDrag.t + e.pageY\r\n\t\t\t};\r\n\t\t\tvar s = this.node.style;\r\n\t\t\ts.left = coords.x + \"px\";\r\n\t\t\ts.top = coords.y + \"px\";\r\n\t\t\t\r\n\t\t\t// method to catch\r\n\t\t\tthis.onDrag(this.node, coords, this.size, {'x':e.pageX, 'y':e.pageY});\r\n\t\t\tif(sniff(\"ie\") == 8){\r\n\t\t\t\tthis.date = new Date();\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tonMouseUp: function(/*DOMEvent*/e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOccurs when the user releases the mouse\r\n\t\t\t//\t\tCalls the onDragEnd method.\r\n\t\t\t// e:\r\n\t\t\t//\t\ta DOM event\r\n\t\r\n\t\t\tif (this._isDragging){\r\n\t\t\t\tevent.stop(e);\r\n\t\t\t\tthis._isDragging = false;\r\n\t\t\t\tif(this.autoScroll){\r\n\t\t\t\t\tthis.autoScroll.stopAutoScroll();\r\n\t\t\t\t}\r\n\t\t\t\tdelete this.onMove;\r\n\t\t\t\tthis.onDragEnd(this.node);\r\n\t\t\t\tthis.node.focus();\r\n\t\t\t}\r\n\t\t\tconnect.disconnect(this.events.pop());\r\n\t\t\tconnect.disconnect(this.events.pop());\r\n\t\t},\r\n\t\t\r\n\t\tonDragStart: function(/*DOMNode*/node, /*Object*/coords, /*Object*/size){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStub function.\r\n\t\t\t//\t\tNotes : border box model\r\n\t\t\t// node:\r\n\t\t\t//\t\ta DOM node\r\n\t\t\t// coords:\r\n\t\t\t//\t\tabsolute position of the main node\r\n\t\t\t// size:\r\n\t\t\t//\t\tan object encapsulating width an height values\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\r\n\t\t},\r\n\t\t\r\n\t\tonDragEnd: function(/*DOMNode*/node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStub function\r\n\t\t\t//\t\tNotes : Coordinates don't contain margins\r\n\t\t\t// node:\r\n\t\t\t//\t\ta DOM node\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\r\n\t\t},\r\n\t\t\r\n\t\tonDrag: function(/*DOMNode*/node, /*Object*/coords, /*Object*/size, /*Object*/mousePosition){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStub function.\r\n\t\t\t//\t\tNotes : border box model for size value, margin box model for coordinates\r\n\t\t\t// node:\r\n\t\t\t//\t\ta DOM node\r\n\t\t\t// coords:\r\n\t\t\t//\t\tposition of the main node (equals to css left/top properties)\r\n\t\t\t// size:\r\n\t\t\t//\t\tan object encapsulating width and height values\r\n\t\t\t// mousePosition:\r\n\t\t\t//\t\tcoordiantes of mouse\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdestroy: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDelecte associated events\r\n\t\r\n\t\t\t// console.log(\"dojox.mdnd.Moveable ::: destroy\");\r\n\t\t\tarray.forEach(this.events, connect.disconnect);\r\n\t\t\tthis.events = this.node = null;\r\n\t\t}\r\n\t});\r\n});\r\n"]}