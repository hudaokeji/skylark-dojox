{"version":3,"sources":["mdnd/PureSource.js"],"names":["define","dojo","declare","lang","connect","array","domClass","dnd","Selector","Manager","horizontal","copyOnly","skipForm","withHandles","isSource","targetState","generateText","constructor","node","params","mixin","this","accept","isDragging","mouseDown","sourceState","add","topics","subscribe","onDndCancel","mouseButton","copyState","keyPressed","destroy","dojox","mdnd","PureSource","superclass","call","forEach","unsubscribe","targetAnchor","markupFactory","_skipStartup","onMouseMove","e","m","manager","nodes","getSelectedNodes","length","startDrag","isCopyKey","onMouseDown","_legalMouseDown","isFormElement","button","onMouseUp","onOverEvent","overSource","onOutEvent","outSource","_markDndStatus","copy","_changeState","target","contains","parentNode"],"mappings":";;;;;;;AAAAA,QAAQ,oBACP,qBACA,kBACA,qBACA,mBACA,iBACA,kBACA,oBACA,oBACC,SAASC,EAAMC,EAASC,EAAMC,EAASC,EAAOC,EAAUC,EAAKC,EAAUC,GACxE,OAAOP,EACN,wBACAM,GAOAE,YAAY,EACZC,UAAU,EACVC,UAAU,EACVC,aAAa,EACbC,UAAU,EACVC,YAAa,WACbC,cAAc,EAEdC,YAAa,SAA2BC,EAAgCC,GAUvEhB,EAAKiB,MAAMC,KAAMlB,EAAKiB,SAAUD,IACrBE,KAAKC,OAGhBD,KAAKE,YAAa,EAClBF,KAAKG,WAAY,EAGjBH,KAAKI,YAAc,GACnBnB,EAASoB,IAAIL,KAAKH,KAAM,iBACrBG,KAAKX,YACPJ,EAASoB,IAAIL,KAAKH,KAAM,qBAGzBG,KAAKM,QACJvB,EAAQwB,UAAU,cAAeP,KAAM,eACvCjB,EAAQwB,UAAU,YAAaP,KAAM,iBAIvCQ,YAAa,WAQZR,KAAKE,YAAa,EAClBF,KAAKG,WAAY,SACVH,KAAKS,aAGbC,UAAW,SAAoBC,GAU9B,OAAOX,KAAKV,UAAYqB,GAGzBC,QAAS,WAKRC,MAAMC,KAAKC,WAAWC,WAAWJ,QAAQK,KAAKjB,MAC9ChB,EAAMkC,QAAQlB,KAAKM,OAAQvB,EAAQoC,aACnCnB,KAAKoB,aAAe,MAGrBC,cAAe,SAAmBvB,EAAmBD,GAYpD,OADAC,EAAOwB,cAAe,EACf,IAAIT,MAAMC,KAAKC,WAAWlB,EAAMC,IAGxCyB,YAAa,SAAkBC,GAO9B,IAAGxB,KAAKE,WAAR,CAGAW,MAAMC,KAAKC,WAAWC,WAAWO,YAAYN,KAAKjB,KAAMwB,GACxD,IAAIC,EAAIrC,EAAQsC,UAChB,GAAG1B,KAAKG,YAAcH,KAAKE,YAAcF,KAAKP,SAAS,CACtD,IAAIkC,EAAQ3B,KAAK4B,mBACdD,EAAME,SACRJ,EAAEK,UAAU9B,KAAM2B,EAAO3B,KAAKU,UAAU3B,EAAQgD,UAAUP,KAC1DxB,KAAKE,YAAa,MAMrB8B,YAAa,SAAkBR,IAS3BxB,KAAKiC,gBAAgBT,IAAQxB,KAAKT,UAAaL,EAAIgD,cAAcV,KACnExB,KAAKG,WAAY,EACjBH,KAAKS,YAAce,EAAEW,OACrBtB,MAAMC,KAAKC,WAAWC,WAAWgB,YAAYf,KAAKjB,KAAMwB,KAI1DY,UAAW,SAAkBZ,GASzBxB,KAAKG,YACPH,KAAKG,WAAY,EACjBU,MAAMC,KAAKC,WAAWC,WAAWoB,UAAUnB,KAAKjB,KAAMwB,KAIxDa,YAAa,WAOZxB,MAAMC,KAAKC,WAAWC,WAAWqB,YAAYpB,KAAKjB,MAClDZ,EAAQsC,UAAUY,WAAWtC,OAG9BuC,WAAY,WAOX1B,MAAMC,KAAKC,WAAWC,WAAWuB,WAAWtB,KAAKjB,MACjDZ,EAAQsC,UAAUc,UAAUxC,OAG7ByC,eAAgB,SAAoBC,GASnC1C,KAAK2C,aAAa,SAAUD,EAAO,SAAW,UAG/CT,gBAAiB,SAAkBT,GAWlC,IAAIxB,KAAKR,YAAc,OAAO,EAC9B,IAAI,IAAIK,EAAO2B,EAAEoB,OAAQ/C,IAASZ,EAAS4D,SAAShD,EAAM,eAAgBA,EAAOA,EAAKiD,WACrF,GAAG7D,EAAS4D,SAAShD,EAAM,iBAAmB,OAAO,EAEtD,OAAO","file":"../../mdnd/PureSource.js","sourcesContent":["define([\"dojo/_base/kernel\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/connect\",\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/dom-class\",\r\n\t\"dojo/dnd/common\",\r\n\t\"dojo/dnd/Selector\",\r\n\t\"dojo/dnd/Manager\"\r\n],function(dojo, declare, lang, connect, array, domClass, dnd, Selector, Manager){\r\n\treturn declare(\r\n\t\t\"dojox.mdnd.PureSource\",\r\n\t\tSelector,\r\n\t{\r\n\t\t// summary:\r\n\t\t//\t\tA Source Object, which can be used only as a DnD source.\r\n\t\t//\t\tA Source can contained several dnd items.\r\n\t\t//\t\tA dnd item is not a source.\r\n\t\t\r\n\t\thorizontal: false,\r\n\t\tcopyOnly: true,\r\n\t\tskipForm: false,\r\n\t\twithHandles: false,\r\n\t\tisSource: true,\r\n\t\ttargetState: \"Disabled\",\r\n\t\tgenerateText: true,\r\n\t\t\r\n\t\tconstructor: function(/*DOMNode|String*/node, /*dojo.dnd.__SourceArgs?*/params){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInitialize a new PureSource.\r\n\t\t\t// node:\r\n\t\t\t//\t\tNode or node's id to build the source on.\r\n\t\t\t// params:\r\n\t\t\t//\t\tAny property of this class may be configured via the params\r\n\t\t\t//\t\tobject which is mixed-in to the 'dojo.dnd.Source' instance.\r\n\t\r\n\t\t\t//console.log('dojox.mdnd.PureSource ::: constructor');\r\n\t\t\tlang.mixin(this, lang.mixin({}, params));\r\n\t\t\tvar type = this.accept;\r\n\t\t\t\r\n\t\t\t// class-specific variables\r\n\t\t\tthis.isDragging = false;\r\n\t\t\tthis.mouseDown = false;\r\n\t\r\n\t\t\t// states\r\n\t\t\tthis.sourceState = \"\";\r\n\t\t\tdomClass.add(this.node, \"dojoDndSource\");\r\n\t\t\tif(this.horizontal){\r\n\t\t\t\tdomClass.add(this.node, \"dojoDndHorizontal\");\r\n\t\t\t}\r\n\t\t\t// set up events\r\n\t\t\tthis.topics = [\r\n\t\t\t\tconnect.subscribe(\"/dnd/cancel\", this, \"onDndCancel\"),\r\n\t\t\t\tconnect.subscribe(\"/dnd/drop\", this, \"onDndCancel\")\r\n\t\t\t];\r\n\t\t},\r\n\t\t\r\n\t\tonDndCancel: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTopic event processor for /dnd/cancel, called to cancel the Dnd\r\n\t\t\t//\t\toperation.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\r\n\t\t\t//console.log('dojox.mdnd.PureSource ::: onDndCancel');\r\n\t\t\tthis.isDragging = false;\r\n\t\t\tthis.mouseDown = false;\r\n\t\t\tdelete this.mouseButton;\r\n\t\t},\r\n\t\t\r\n\t\tcopyState: function(/*Boolean*/keyPressed){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns true, if we need to copy items, false to move.\r\n\t\t\t//\t\tIt is separated to be overwritten dynamically, if needed.\r\n\t\t\t// keyPressed:\r\n\t\t\t//\t\tThe \"copy\" was pressed.\r\n\t\t\t// returns:\r\n\t\t\t//\t\tTrue, if we need to copy items, false to move.\r\n\t\r\n\t\t\t//console.log('dojox.mdnd.PureSource ::: copyState');\r\n\t\t\treturn this.copyOnly || keyPressed;\t// Boolean\r\n\t\t},\r\n\t\t\r\n\t\tdestroy: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPrepares the object to be garbage-collected.\r\n\t\r\n\t\t\t//console.log('dojox.mdnd.PureSource ::: destroy');\r\n\t\t\tdojox.mdnd.PureSource.superclass.destroy.call(this);\r\n\t\t\tarray.forEach(this.topics, connect.unsubscribe);\r\n\t\t\tthis.targetAnchor = null;\r\n\t\t},\r\n\t\r\n\t\tmarkupFactory: function(/*Object*/params, /*DomNode*/node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMarkup methods.\r\n\t\t\t// params:\r\n\t\t\t//\t\t???\r\n\t\t\t// node:\r\n\t\t\t//\t\t???\r\n\t\t\t// returns:\r\n\t\t\t//\t\tNew dojox.mdnd.PureSource instance.\r\n\t\r\n\t\t\t//console.log('dojox.mdnd.PureSource ::: markupFactory');\r\n\t\t\tparams._skipStartup = true;\r\n\t\t\treturn new dojox.mdnd.PureSource(node, params);\r\n\t\t},\r\n\t\r\n\t\tonMouseMove: function(/*Event*/e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEvent processor for onmousemove.\r\n\t\t\t// e:\r\n\t\t\t//\t\tMouse event.\r\n\t\r\n\t\t\t//console.log('dojox.mdnd.PureSource ::: onMouseMove');\r\n\t\t\tif(this.isDragging){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tdojox.mdnd.PureSource.superclass.onMouseMove.call(this, e);\r\n\t\t\tvar m = Manager.manager();\r\n\t\t\tif(this.mouseDown && !this.isDragging && this.isSource){\r\n\t\t\t\tvar nodes = this.getSelectedNodes();\r\n\t\t\t\tif(nodes.length){\r\n\t\t\t\t\tm.startDrag(this, nodes, this.copyState(connect.isCopyKey(e)));\r\n\t\t\t\t\tthis.isDragging = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t},\r\n\t\t\r\n\t\tonMouseDown: function(/*Event*/e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEvent processor for onmousedown.\r\n\t\t\t// e:\r\n\t\t\t//\t\tMouse event.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\r\n\t\t\t//console.log('dojox.mdnd.PureSource ::: onMouseDown');\r\n\t\t\tif(this._legalMouseDown(e) && (!this.skipForm || !dnd.isFormElement(e))){\r\n\t\t\t\tthis.mouseDown = true;\r\n\t\t\t\tthis.mouseButton = e.button;\r\n\t\t\t\tdojox.mdnd.PureSource.superclass.onMouseDown.call(this, e);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tonMouseUp: function(/*Event*/e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEvent processor for onmouseup.\r\n\t\t\t// e:\r\n\t\t\t//\t\tMouse event\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\r\n\t\t\t//console.log('.dnd.PureSource ::: onMouseUp');\r\n\t\t\tif(this.mouseDown){\r\n\t\t\t\tthis.mouseDown = false;\r\n\t\t\t\tdojox.mdnd.PureSource.superclass.onMouseUp.call(this, e);\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\tonOverEvent: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled once, when mouse is over our container.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\r\n\t\t\t//console.log('dojox.mdnd.PureSource ::: onOverEvent');\r\n\t\t\tdojox.mdnd.PureSource.superclass.onOverEvent.call(this);\r\n\t\t\tManager.manager().overSource(this);\r\n\t\t},\r\n\t\t\r\n\t\tonOutEvent: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled once, when mouse is out our container.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\r\n\t\t\t//console.log('dojox.mdnd.PureSource ::: onOutEvent');\r\n\t\t\tdojox.mdnd.PureSource.superclass.onOutEvent.call(this);\r\n\t\t\tManager.manager().outSource(this);\r\n\t\t},\r\n\t\t\r\n\t\t_markDndStatus: function(/*Boolean*/copy){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tChanges source's state based on \"copy\" status.\r\n\t\t\t// copy:\r\n\t\t\t//\t\tCopy status.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\r\n\t\t\t//console.log('dojox.mdnd.PureSource ::: _markDndStatus');\r\n\t\t\tthis._changeState(\"Source\", copy ? \"Copied\" : \"Moved\");\r\n\t\t},\r\n\t\r\n\t\t_legalMouseDown: function(/*Event*/e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tChecks if user clicked on \"approved\" items.\r\n\t\t\t// e:\r\n\t\t\t//\t\tMouse event.\r\n\t\t\t// returns:\r\n\t\t\t//\t\tTrue if user clicked on \"approved\" items.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\r\n\t\t\t//console.log('dojox.mdnd.PureSource ::: _legalMouseDown');\r\n\t\t\tif(!this.withHandles){ return true; }\r\n\t\t\tfor(var node = e.target; node && !domClass.contains(node, \"dojoDndItem\"); node = node.parentNode){\r\n\t\t\t\tif(domClass.contains(node, \"dojoDndHandle\")){ return true; }\r\n\t\t\t}\r\n\t\t\treturn false;\t// Boolean\r\n\t\t}\r\n\t});\r\n});"]}