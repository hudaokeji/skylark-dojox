{"version":3,"sources":["wire/ml/util.js"],"names":["dojo","provide","require","dojox","wire","ml","_getValue","source","args","property","undefined","length","substring","Wire","getValue","i","indexOf","object","dijit","byId","getObject","_setValue","target","value","this","setValue","declare","constructor","element","isString","_getDocument","createElement","getPropertyValue","charAt","attribute","getAttribute","text","firstChild","nodeValue","elements","childNodes","child","nodeType","nodeName","push","XmlElement","setPropertyValue","setAttribute","removeAttribute","removeChild","createTextNode","appendChild","nextChild","nextSibling","isArray","e","insertBefore","toString","s","toObject","obj","o","name","p","attributes","attr","ownerDocument","xml","parser","parse"],"mappings":"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","file":"../../../wire/ml/util.js","sourcesContent":["dojo.provide(\"dojox.wire.ml.util\");\r\n\r\ndojo.require(\"dojox.xml.parser\");\r\ndojo.require(\"dojox.wire.Wire\");\r\n\r\ndojox.wire.ml._getValue = function(/*String*/source, /*Array*/args){\r\n\t// summary:\r\n\t//\t\tReturn a value\r\n\t// description:\r\n\t//\t\tThis method obtains an object by an ID of a widget or an DOM\r\n\t//\t\telement.\r\n\t//\t\tIf 'source' specifies a dotted notation to its property, a Wire is\r\n\t//\t\tused to get the object property.\r\n\t//\t\tIf 'source' starts with \"arguments\", 'args' is used as a root\r\n\t//\t\tobject for the Wire.\r\n\t// source:\r\n\t//\t\tA string to specify an object and its property\r\n\t// args:\r\n\t//\t\tAn optional arguments array\r\n\t// returns:\r\n\t//\t\tA value\r\n\tif(!source){\r\n\t\treturn undefined; //undefined\r\n\t}\r\n\tvar property = undefined;\r\n\tif(args && source.length >= 9 && source.substring(0, 9) == \"arguments\"){\r\n\t\tproperty = source.substring(9);\r\n\t\treturn new dojox.wire.Wire({property: property}).getValue(args);\r\n\t}\r\n\tvar i = source.indexOf('.');\r\n\tif(i >= 0){\r\n\t\tproperty = source.substring(i + 1);\r\n\t\tsource = source.substring(0, i);\r\n\t}\r\n\tvar object = (dijit.byId(source) || dojo.byId(source) || dojo.getObject(source));\r\n\tif(!object){\r\n\t\treturn undefined; //undefined\r\n\t}\r\n\tif(!property){\r\n\t\treturn object; //Object\r\n\t}else{\r\n\t\treturn new dojox.wire.Wire({object: object, property: property}).getValue(); //anything\r\n\t}\r\n};\r\n\r\ndojox.wire.ml._setValue = function(/*String*/target, /*anything*/value){\r\n\t// summary:\r\n\t//\t\tStore a value\r\n\t// description:\r\n\t//\t\tThis method stores a value by an ID of a widget or an DOM\r\n\t//\t\telement with a dotted notation to its property, using a Wire.\r\n\t// target:\r\n\t//\t\tA string to specify an object and its property\r\n\t// value:\r\n\t//\t\tA value\r\n\tif(!target){\r\n\t\treturn; //undefined\r\n\t}\r\n\tvar i = target.indexOf('.');\r\n\tif(i < 0){\r\n\t\treturn; //undefined\r\n\t}\r\n\tvar object = this._getValue(target.substring(0, i));\r\n\tif(!object){\r\n\t\treturn; //undefined\r\n\t}\r\n\tvar property = target.substring(i + 1);\r\n\tvar wire = new dojox.wire.Wire({object: object, property: property}).setValue(value);\r\n};\r\n\r\ndojo.declare(\"dojox.wire.ml.XmlElement\", null, {\r\n\t// summary:\r\n\t//\t\tAn object wrapping an XML element\r\n\t// description:\r\n\t//\t\tThis class represents an XML element.\r\n\r\n\tconstructor: function(/*Element||String*/element){\r\n\t\t// summary:\r\n\t\t//\t\tInitialize with an XML element or a tag name\r\n\t\t// element:\r\n\t\t//\t\tAn XML element or a tag name\r\n\t\tif(dojo.isString(element)){\r\n\t\t\telement = this._getDocument().createElement(element);\r\n\t\t}\r\n\t\tthis.element = element;\r\n\t},\r\n\tgetPropertyValue: function(/*String*/property){\r\n\t\t// summary:\r\n\t\t//\t\tReturn a property value\r\n\t\t// description:\r\n\t\t//\t\tIf 'property' starts with '@', the attribute value is returned.\r\n\t\t//\t\tIf 'property' specifies \"text()\", the value of the first child\r\n\t\t//\t\ttext is returned.\r\n\t\t//\t\tOtherwise, child elements of the tag name specified with\r\n\t\t//\t\t'property' are returned.\r\n\t\t// property:\r\n\t\t//\t\tA property name\r\n\t\t// returns:\r\n\t\t//\t\tA property value\r\n\t\tvar value = undefined;\r\n\t\tif(!this.element){\r\n\t\t\treturn value; //undefined\r\n\t\t}\r\n\t\tif(!property){\r\n\t\t\treturn value; //undefined\r\n\t\t}\r\n\r\n\t\tif(property.charAt(0) == '@'){\r\n\t\t\tvar attribute = property.substring(1);\r\n\t\t\tvalue = this.element.getAttribute(attribute);\r\n\t\t}else if(property == \"text()\"){\r\n\t\t\tvar text = this.element.firstChild;\r\n\t\t\tif(text){\r\n\t\t\t\tvalue = text.nodeValue;\r\n\t\t\t}\r\n\t\t}else{ // child elements\r\n\t\t\tvar elements = [];\r\n\t\t\tfor(var i = 0; i < this.element.childNodes.length; i++){\r\n\t\t\t\tvar child = this.element.childNodes[i];\r\n\t\t\t\tif(child.nodeType === 1 /* ELEMENT_NODE */ && child.nodeName == property){\r\n\t\t\t\t\telements.push(new dojox.wire.ml.XmlElement(child));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(elements.length > 0){\r\n\t\t\t\tif(elements.length === 1){\r\n\t\t\t\t\tvalue = elements[0];\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvalue = elements;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value; //String||Array||XmlElement\r\n\t},\r\n\r\n\tsetPropertyValue: function(/*String*/property, /*String||Array||XmlElement*/value){\r\n\t\t// summary:\r\n\t\t//\t\tStore a property value\r\n\t\t// description:\r\n\t\t//\t\tIf 'property' starts with '@', 'value' is set to the attribute.\r\n\t\t//\t\tIf 'property' specifies \"text()\", 'value' is set as the first\r\n\t\t//\t\tchild text.\r\n\t\t//\t\tIf 'value' is a string, a child element of the tag name\r\n\t\t//\t\tspecified with 'property' is created and 'value' is set as\r\n\t\t//\t\tthe first child text of the child element.\r\n\t\t//\t\tOtherwise, 'value' is set to as child elements.\r\n\t\t// property:\r\n\t\t//\t\tA property name\r\n\t\t// value:\r\n\t\t//\t\tA property value\r\n\t\tvar i;\r\n\t\tvar text;\r\n\t\tif(!this.element){\r\n\t\t\treturn; //undefined\r\n\t\t}\r\n\t\tif(!property){\r\n\t\t\treturn; //undefined\r\n\t\t}\r\n\r\n\t\tif(property.charAt(0) == '@'){\r\n\t\t\tvar attribute = property.substring(1);\r\n\t\t\tif(value){\r\n\t\t\t\tthis.element.setAttribute(attribute, value);\r\n\t\t\t}else{\r\n\t\t\t\tthis.element.removeAttribute(attribute);\r\n\t\t\t}\r\n\t\t}else if(property == \"text()\"){\r\n\t\t\twhile(this.element.firstChild){\r\n\t\t\t\tthis.element.removeChild(this.element.firstChild);\r\n\t\t\t}\r\n\t\t\tif(value){\r\n\t\t\t\ttext = this._getDocument().createTextNode(value);\r\n\t\t\t\tthis.element.appendChild(text);\r\n\t\t\t}\r\n\t\t}else{ // child elements\r\n\t\t\tvar nextChild = null;\r\n\t\t\tvar child;\r\n\t\t\tfor(i = this.element.childNodes.length - 1; i >= 0; i--){\r\n\t\t\t\tchild = this.element.childNodes[i];\r\n\t\t\t\tif(child.nodeType === 1 /* ELEMENT_NODE */ && child.nodeName == property){\r\n\t\t\t\t\tif(!nextChild){\r\n\t\t\t\t\t\tnextChild = child.nextSibling;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.element.removeChild(child);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(value){\r\n\t\t\t\tif(dojo.isArray(value)){\r\n\t\t\t\t\tfor(i in value){\r\n\t\t\t\t\t\tvar e = value[i];\r\n\t\t\t\t\t\tif(e.element){\r\n\t\t\t\t\t\t\tthis.element.insertBefore(e.element, nextChild);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else if(value instanceof dojox.wire.ml.XmlElement){\r\n\t\t\t\t\tif(value.element){\r\n\t\t\t\t\t\tthis.element.insertBefore(value.element, nextChild);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{ // assume string\r\n\t\t\t\t\tchild = this._getDocument().createElement(property);\r\n\t\t\t\t\ttext = this._getDocument().createTextNode(value);\r\n\t\t\t\t\tchild.appendChild(text);\r\n\t\t\t\t\tthis.element.insertBefore(child, nextChild);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\ttoString: function(){\r\n\t\t// summary:\r\n\t\t//\t\tReturn a value of the first text child of the element\r\n\t\t// description:\r\n\t\t//\t\tA value of the first text child of the element is returned.\r\n\t\t// returns:\r\n\t\t//\t\tA value of the first text child of the element\r\n\t\tvar s = \"\";\r\n\t\tif(this.element){\r\n\t\t\tvar text = this.element.firstChild;\r\n\t\t\tif(text){\r\n\t\t\t\ts = text.nodeValue;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn s; //String\r\n\t},\r\n\r\n\ttoObject: function(){\r\n\t\t// summary:\r\n\t\t//\t\tReturn an object representation of the element\r\n\t\t// description:\r\n\t\t//\t\tAn object with properties for child elements, attributes and\r\n\t\t//\t\ttext is returned.\r\n\t\t// returns:\r\n\t\t//\t\tAn object representation of the element\r\n\t\tif(!this.element){\r\n\t\t\treturn null; //null\r\n\t\t}\r\n\t\tvar text = \"\";\r\n\t\tvar obj = {};\r\n\t\tvar elements = 0;\r\n\t\tvar i;\r\n\t\tfor(i = 0; i < this.element.childNodes.length; i++){\r\n\t\t\tvar child = this.element.childNodes[i];\r\n\t\t\tif(child.nodeType === 1 /* ELEMENT_NODE */){\r\n\t\t\t\telements++;\r\n\t\t\t\tvar o = new dojox.wire.ml.XmlElement(child).toObject();\r\n\t\t\t\tvar name = child.nodeName;\r\n\t\t\t\tvar p = obj[name];\r\n\t\t\t\tif(!p){\r\n\t\t\t\t\tobj[name] = o;\r\n\t\t\t\t}else if(dojo.isArray(p)){\r\n\t\t\t\t\tp.push(o);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tobj[name] = [p, o]; // make them array\r\n\t\t\t\t}\r\n\t\t\t}else if(child.nodeType === 3 /* TEXT_NODE */ ||\r\n\t\t\t\t\t child.nodeType === 4 /* CDATA_SECTION_NODE */){\r\n\t\t\t\ttext += child.nodeValue;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar attributes = 0;\r\n\t\tif(this.element.nodeType === 1 /* ELEMENT_NODE */){\r\n\t\t\tattributes = this.element.attributes.length;\r\n\t\t\tfor(i = 0; i < attributes; i++){\r\n\t\t\t\tvar attr = this.element.attributes[i];\r\n\t\t\t\tobj[\"@\" + attr.nodeName] = attr.nodeValue;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(elements === 0){\r\n\t\t\tif(attributes === 0){\r\n\t\t\t\t// text only\r\n\t\t\t\treturn text; //String\r\n\t\t\t}\r\n\t\t\t// text with attributes\r\n\t\t\tobj[\"text()\"] = text;\r\n\t\t}\r\n\t\t// else ignore text\r\n\t\treturn obj; //Object\r\n\t},\r\n\r\n\t_getDocument: function(){\r\n\t\t// summary:\r\n\t\t//\t\tReturn a DOM document\r\n\t\t// description:\r\n\t\t//\t\tIf 'element' is specified, a DOM document of the element is\r\n\t\t//\t\treturned.\r\n\t\t//\t\tOtherwise, a DOM document is created.\r\n\t\t// returns:\r\n\t\t//\t\tA DOM document\r\n\t\tif(this.element){\r\n\t\t\treturn (this.element.nodeType == 9 /* DOCUMENT_NODE */ ?\r\n\t\t\t\tthis.element : this.element.ownerDocument); //Document\r\n\t\t}else{\r\n\t\t\treturn dojox.xml.parser.parse(); //Document\r\n\t\t}\r\n\t}\r\n});\r\n"]}