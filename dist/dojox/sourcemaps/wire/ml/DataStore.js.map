{"version":3,"sources":["wire/ml/DataStore.js"],"names":["dojo","provide","require","declare","dijit","_Widget","storeClass","postCreate","this","store","_createStore","dojox","wire","_getClass","args","attributes","domNode","i","length","a","item","specified","nodeName","nodeValue","getFeatures","fetch","request","save","newItem","deleteItem","revert"],"mappings":";;;;;;;AAAAA,KAAKC,QAAQ,2BAEbD,KAAKE,QAAQ,iBACbF,KAAKE,QAAQ,oBAEbF,KAAKG,QAAQ,0BAA2BC,MAAMC,SAO7CC,WAAY,GAEZC,WAAY,WAKXC,KAAKC,MAAQD,KAAKE,gBAGnBA,aAAc,WAQb,IAAIF,KAAKF,WACR,OAAO,KAER,IAAIA,EAAaK,MAAMC,KAAKC,UAAUL,KAAKF,YAC3C,IAAIA,EACH,OAAO,KAIR,IAFA,IAAIQ,KACAC,EAAaP,KAAKQ,QAAQD,WACtBE,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,IAAI,CACzC,IAAIE,EAAIJ,EAAWK,KAAKH,GACrBE,EAAEE,YAAcb,KAAKW,EAAEG,YACzBR,EAAKK,EAAEG,UAAYH,EAAEI,WAGvB,OAAO,IAAIjB,EAAWQ,IAGvBU,YAAa,WAOZ,OAAOhB,KAAKC,MAAMe,eAGnBC,MAAO,SAAmBC,GASzB,OAAOlB,KAAKC,MAAMgB,MAAMC,IAGzBC,KAAM,SAAmBb,GAOxBN,KAAKC,MAAMkB,KAAKb,IAGjBc,QAAS,SAAmBd,GAS3B,OAAON,KAAKC,MAAMmB,QAAQd,IAG3Be,WAAY,SAAmBT,GAO9B,OAAOZ,KAAKC,MAAMoB,WAAWT,IAG9BU,OAAQ,WAOP,OAAOtB,KAAKC,MAAMqB","file":"../../../wire/ml/DataStore.js","sourcesContent":["dojo.provide(\"dojox.wire.ml.DataStore\");\r\n\r\ndojo.require(\"dijit._Widget\");\r\ndojo.require(\"dojox.wire._base\");\r\n\r\ndojo.declare(\"dojox.wire.ml.DataStore\", dijit._Widget, {\r\n\t// summary:\r\n\t//\t\tA widget for a data store\r\n\t// description:\r\n\t//\t\tThis widget represents a data store of 'storeClass' attribute.\r\n\t// storeClass:\r\n\t//\t\tA class name of a data store\r\n\tstoreClass: \"\",\r\n\r\n\tpostCreate: function(){\r\n\t\t// summary:\r\n\t\t//\t\tCall _createStore()\r\n\t\t// description:\r\n\t\t//\t\tSee _createStore().\r\n\t\tthis.store = this._createStore();\r\n\t},\r\n\r\n\t_createStore: function(){\r\n\t\t// summary:\r\n\t\t//\t\tCreate a data store\r\n\t\t// description:\r\n\t\t//\t\tA data store of 'storeClass' is created with arguments\r\n\t\t//\t\tspecified with attributes.\r\n\t\t// returns:\r\n\t\t//\t\tA data store\r\n\t\tif(!this.storeClass){\r\n\t\t\treturn null; //null\r\n\t\t}\r\n\t\tvar storeClass = dojox.wire._getClass(this.storeClass);\r\n\t\tif(!storeClass){\r\n\t\t\treturn null; //null\r\n\t\t}\r\n\t\tvar args = {};\r\n\t\tvar attributes = this.domNode.attributes;\r\n\t\tfor(var i = 0; i < attributes.length; i++){\r\n\t\t\tvar a = attributes.item(i);\r\n\t\t\tif(a.specified && !this[a.nodeName]){\r\n\t\t\t\targs[a.nodeName] = a.nodeValue;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new storeClass(args); //Object\r\n\t},\r\n\r\n\tgetFeatures: function(){\r\n\t\t// summary:\r\n\t\t//\t\tCall getFeatures() method of a data store\r\n\t\t// description:\r\n\t\t//\t\tSee dojo/data/api/Read.getFeatures().\r\n\t\t// returns:\r\n\t\t//\t\tA features object\r\n\t\treturn this.store.getFeatures(); //Object\r\n\t},\r\n\r\n\tfetch: function(/*Object*/request){\r\n\t\t// summary:\r\n\t\t//\t\tCall fetch() method of a data store\r\n\t\t// description:\r\n\t\t//\t\tSee dojo/data/api/Read.fetch().\r\n\t\t// request:\r\n\t\t//\t\tA request object\r\n\t\t// returns:\r\n\t\t//\t\tA request object\r\n\t\treturn this.store.fetch(request); //Object\r\n\t},\r\n\r\n\tsave: function(/*Object*/args){\r\n\t\t// summary:\r\n\t\t//\t\tCall save() method of a data store\r\n\t\t// description:\r\n\t\t//\t\tSee dojo/data/api/Write.save().\r\n\t\t// args:\r\n\t\t//\t\tA save arguments object\r\n\t\tthis.store.save(args);\r\n\t},\r\n\r\n\tnewItem: function(/*Object*/args){\r\n\t\t// summary:\r\n\t\t//\t\tCall newItem() method of a data store\r\n\t\t// description:\r\n\t\t//\t\tSee dojo/data/api/Write.newItem().\r\n\t\t// args:\r\n\t\t//\t\tA new item arguments object\r\n\t\t// returns:\r\n\t\t//\t\tA new item\r\n\t\treturn this.store.newItem(args); //Object\r\n\t},\r\n\r\n\tdeleteItem: function(/*Object*/item){\r\n\t\t// summary:\r\n\t\t//\t\tCall deleteItem() method of a data store\r\n\t\t// description:\r\n\t\t//\t\tSee dojo/data/api/Write.deleteItem().\r\n\t\t// returns:\r\n\t\t//\t\tA boolean\r\n\t\treturn this.store.deleteItem(item); //Boolean\r\n\t},\r\n\r\n\trevert: function(){\r\n\t\t// summary:\r\n\t\t//\t\tCall revert() method of a data store\r\n\t\t// description:\r\n\t\t//\t\tSee dojo/data/api/Write.revert().\r\n\t\t// returns:\r\n\t\t//\t\tA boolean\r\n\t\treturn this.store.revert(); //Boolean\r\n\t}\r\n});\r\n"]}