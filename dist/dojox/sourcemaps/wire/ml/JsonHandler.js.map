{"version":3,"sources":["wire/ml/JsonHandler.js"],"names":["dojo","provide","require","declare","dojox","wire","ml","RestHandler","contentType","handleAs","headers","Accept","_getContent","method","parameters","content","p","undefined","isString","toJson"],"mappings":";;;;;;;AAAAA,KAAKC,QAAQ,6BAEbD,KAAKE,QAAQ,6BACbF,KAAKE,QAAQ,oBACbF,KAAKE,QAAQ,sBAGbF,KAAKG,QAAQ,4BAA6BC,MAAMC,KAAKC,GAAGC,aAKvDC,YAAa,YACbC,SAAU,OACVC,SAAUC,OAAU,UAEpBC,YAAa,SAAmBC,EAAiBC,GAYhD,IAAIC,EAAU,KACd,GAAa,QAAVF,GAA8B,OAAVA,EAAgB,CACtC,IAAIG,EAAKF,EAAaA,EAAW,QAAKG,EACnCD,IAEDD,EADEf,KAAKkB,SAASF,GACNA,EAEAhB,KAAKmB,OAAOH,IAIzB,OAAOD","file":"../../../wire/ml/JsonHandler.js","sourcesContent":["dojo.provide(\"dojox.wire.ml.JsonHandler\");\r\n\r\ndojo.require(\"dojox.wire.ml.RestHandler\");\r\ndojo.require(\"dojox.wire._base\");\r\ndojo.require(\"dojox.wire.ml.util\");\r\n\r\n\r\ndojo.declare(\"dojox.wire.ml.JsonHandler\", dojox.wire.ml.RestHandler, {\r\n\t// summary:\r\n\t//\t\tA REST service handler for JSON\r\n\t// description:\r\n\t//\t\tThis class provides JSON handling for a REST service.\r\n\tcontentType: \"text/json\",\r\n\thandleAs: \"json\",\r\n\theaders: {\"Accept\": \"*/json\"},\r\n\r\n\t_getContent: function(/*String*/method, /*Array*/parameters){\r\n\t\t// summary:\r\n\t\t//\t\tGenerate a request content\r\n\t\t// description:\r\n\t\t//\t\tIf 'method' is \"POST\" or \"PUT\", the first parameter in\r\n\t\t//\t\t'parameter' is used to generate a JSON content.\r\n\t\t// method:\r\n\t\t//\t\tA method name\r\n\t\t// parameters:\r\n\t\t//\t\tAn array of parameters\r\n\t\t// returns:\r\n\t\t//\t\tA request content\r\n\t\tvar content = null;\r\n\t\tif(method == \"POST\" || method == \"PUT\"){\r\n\t\t\tvar p = (parameters ? parameters[0] : undefined);\r\n\t\t\tif(p){\r\n\t\t\t\tif(dojo.isString(p)){\r\n\t\t\t\t\tcontent = p;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcontent = dojo.toJson(p);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn content; //String\r\n\t}\r\n});\r\n"]}