{"version":3,"sources":["wire/ml/Action.js"],"names":["dojo","provide","require","declare","dijit","_Widget","_Container","trigger","triggerEvent","triggerTopic","postCreate","this","_connect","scope","dojox","wire","ml","_getValue","_triggerHandle","connect","toLowerCase","self","addOnLoad","_run","apply","arguments","subscribe","_disconnect","unsubscribe","disconnect","run","children","getChildren","i","child","ActionFilter","filter","Action","uninitialize","required","requiredValue","type","message","error","value","reqValue","lType","parseInt","_setValue","alert"],"mappings":";;;;;;;AAAAA,KAAKC,QAAQ,wBAEbD,KAAKE,QAAQ,iBACbF,KAAKE,QAAQ,oBACbF,KAAKE,QAAQ,mBACbF,KAAKE,QAAQ,sBAEbF,KAAKG,QAAQ,wBAAyBC,MAAMC,QAASD,MAAME,aAoB1DC,QAAS,GACTC,aAAc,GACdC,aAAc,GAEdC,WAAY,WAKXC,KAAKC,YAGNA,SAAU,WAQT,GAAGD,KAAKH,aACP,GAAGG,KAAKJ,QAAQ,CACf,IAAIM,EAAQC,MAAMC,KAAKC,GAAGC,UAAUN,KAAKJ,SACtCM,IACEA,EAAMF,KAAKH,gBAEdK,EAAMF,KAAKH,cAAgB,cAE5BG,KAAKO,eAAiBlB,KAAKmB,QAAQN,EAAOF,KAAKH,aAAcG,KAAM,YAEhE,CAEJ,GAAY,UADAA,KAAKH,aAAaY,cACT,CACpB,IAAIC,EAAOV,KACXX,KAAKsB,UAAU,WACdD,EAAKE,KAAKC,MAAMH,EAAMI,mBAIjBd,KAAKF,eACbE,KAAKO,eAAiBlB,KAAK0B,UAAUf,KAAKF,aAAcE,KAAM,SAIhEgB,YAAa,WAQThB,KAAKO,iBACJP,KAAKF,aACPT,KAAK4B,YAAYjB,KAAKF,aAAcE,KAAKO,gBAEzClB,KAAK6B,WAAWlB,KAAKO,kBAKxBY,IAAK,WAQJ,IAAIC,EAAWpB,KAAKqB,cACpB,IAAI,IAAIC,KAAKF,EAAS,CACrB,IAAIG,EAAQH,EAASE,GACrB,GAAGC,aAAiBpB,MAAMC,KAAKC,GAAGmB,eAC7BD,EAAME,OAAOZ,MAAMU,EAAOT,WAC7B,OAIHd,KAAKY,KAAKC,MAAMb,KAAMc,YAGvBF,KAAM,WAML,IAAIQ,EAAWpB,KAAKqB,cACpB,IAAI,IAAIC,KAAKF,EAAS,CACrB,IAAIG,EAAQH,EAASE,GAClBC,aAAiBpB,MAAMC,KAAKC,GAAGqB,QACjCH,EAAMJ,IAAIN,MAAMU,EAAOT,aAK1Ba,aAAc,WAIb,OADA3B,KAAKgB,eACE,KAIT3B,KAAKG,QAAQ,6BAA8BC,MAAMC,SAsBhDkC,SAAU,GACVC,cAAe,GACfC,KAAM,GACNC,QAAS,GACTC,MAAO,GAGPP,OAAQ,WAoBP,GAAqB,KAAlBzB,KAAK4B,SACP,OAAO,EAEP,IAAIK,EAAQ9B,MAAMC,KAAKC,GAAGC,UAAUN,KAAK4B,SAAUd,WACnD,GAA0B,KAAvBd,KAAK6B,eAEP,GAAGI,EACF,OAAO,MAEJ,CAEJ,IAAIC,EAAWlC,KAAK6B,cACpB,GAAiB,KAAd7B,KAAK8B,KAAY,CACnB,IAAIK,EAAQnC,KAAK8B,KAAKrB,cACT,YAAV0B,EAEDD,EAD6B,UAA3BA,EAASzB,cAKM,WAAV0B,IACRD,EAAWE,SAASF,EAAU,KAGhC,GAAGD,IAAUC,EACZ,OAAO,EAYV,OAPGlC,KAAK+B,UACJ/B,KAAKgC,MACP7B,MAAMC,KAAKC,GAAGgC,UAAUrC,KAAKgC,MAAOhC,KAAK+B,SAEzCO,MAAMtC,KAAK+B,WAGN","file":"../../../wire/ml/Action.js","sourcesContent":["dojo.provide(\"dojox.wire.ml.Action\");\r\n\r\ndojo.require(\"dijit._Widget\");\r\ndojo.require(\"dijit._Container\");\r\ndojo.require(\"dojox.wire.Wire\");\r\ndojo.require(\"dojox.wire.ml.util\");\r\n\r\ndojo.declare(\"dojox.wire.ml.Action\", [dijit._Widget, dijit._Container], {\r\n\t// summary:\r\n\t//\t\tA base widget to \"run\" a task on an event or a topic\r\n\t// description:\r\n\t//\t\tThis widget represents a controller task to be run when an event\r\n\t//\t\t(a function) or a topic is issued.\r\n\t//\t\tSub-classes must implement _run() method to implement their tasks.\r\n\t//\t\t'trigger' specifies an event scope, an ID of a widget or an DOM\r\n\t//\t\telement, or its property with the optional dotted notation.\r\n\t//\t\tIf this widget has child ActionFilter widgets, their filter()\r\n\t//\t\tmethods are called with the arguments to the event or the topic.\r\n\t//\t\tIf one of filter() methods returns false, run() won't be invoked.\r\n\t//\t\tThis widget also can serve as a composite task to run child\r\n\t//\t\tActions on an event or a topic specified to this widget.\r\n\t// trigger:\r\n\t//\t\tAn event scope\r\n\t// triggerEvent:\r\n\t//\t\tAn event (function) name\r\n\t// triggerTopic:\r\n\t//\t\tA topic name\r\n\ttrigger: \"\",\r\n\ttriggerEvent: \"\",\r\n\ttriggerTopic: \"\",\r\n\r\n\tpostCreate: function(){\r\n\t\t// summary:\r\n\t\t//\t\tCall _connect()\r\n\t\t// description:\r\n\t\t//\t\tSee _connect().\r\n\t\tthis._connect();\r\n\t},\r\n\r\n\t_connect: function(){\r\n\t\t// summary:\r\n\t\t//\t\tConnect run() method to an event or a topic\r\n\t\t// description:\r\n\t\t//\t\tIf 'triggerEvent' and 'trigger' are specified, connect() is\r\n\t\t//\t\tused to set up run() to be called on the event.\r\n\t\t//\t\tIf 'triggerTopic' is specified, subscribe() is used to set up\r\n\t\t//\t\trun() to be called on the topic.\r\n\t\tif(this.triggerEvent){\r\n\t\t\tif(this.trigger){\r\n\t\t\t\tvar scope = dojox.wire.ml._getValue(this.trigger);\r\n\t\t\t\tif(scope){\r\n\t\t\t\t\tif(!scope[this.triggerEvent]){\r\n\t\t\t\t\t\t// set a dummy function for an anonymous object\r\n\t\t\t\t\t\tscope[this.triggerEvent] = function(){};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._triggerHandle = dojo.connect(scope, this.triggerEvent, this, \"run\");\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tvar event = this.triggerEvent.toLowerCase();\r\n\t\t\t\tif(event == \"onload\"){\r\n\t\t\t\t\tvar self = this;\r\n\t\t\t\t\tdojo.addOnLoad(function(){\r\n\t\t\t\t\t\tself._run.apply(self, arguments);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else if(this.triggerTopic){\r\n\t\t\tthis._triggerHandle = dojo.subscribe(this.triggerTopic, this, \"run\");\r\n\t\t}\r\n\t},\r\n\r\n\t_disconnect: function(){\r\n\t\t// summary:\r\n\t\t//\t\tDisconnect run() method from an event or a topic\r\n\t\t// description:\r\n\t\t//\t\tIf 'triggerEvent' and 'trigger' are specified, disconnect() is\r\n\t\t//\t\tused to set up run() not to be called on the event.\r\n\t\t//\t\tIf 'triggerTopic' is specified, unsubscribe() is used to set up\r\n\t\t//\t\trun() not to be called on the topic.\r\n\t\tif(this._triggerHandle){\r\n\t\t\tif(this.triggerTopic){\r\n\t\t\t\tdojo.unsubscribe(this.triggerTopic, this._triggerHandle);\r\n\t\t\t}else{\r\n\t\t\t\tdojo.disconnect(this._triggerHandle);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\trun: function(){\r\n\t\t// summary:\r\n\t\t//\t\tRun a task\r\n\t\t// description:\r\n\t\t//\t\tThis method calls filter() method of child ActionFilter\r\n\t\t//\t\twidgets.\r\n\t\t//\t\tIf one of them returns false, this method returns.\r\n\t\t//\t\tOtherwise, _run() method is called.\r\n\t\tvar children = this.getChildren();\r\n\t\tfor(var i in children){\r\n\t\t\tvar child = children[i];\r\n\t\t\tif(child instanceof dojox.wire.ml.ActionFilter){\r\n\t\t\t\tif(!child.filter.apply(child, arguments)){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._run.apply(this, arguments);\r\n\t},\r\n\r\n\t_run: function(){\r\n\t\t// summary:\r\n\t\t//\t\tCall run() methods of child Action widgets\r\n\t\t// description:\r\n\t\t//\t\tIf this widget has child Action widgets, their run() methods\r\n\t\t//\t\tare called.\r\n\t\tvar children = this.getChildren();\r\n\t\tfor(var i in children){\r\n\t\t\tvar child = children[i];\r\n\t\t\tif(child instanceof dojox.wire.ml.Action){\r\n\t\t\t\tchild.run.apply(child, arguments);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tuninitialize: function(){\r\n\t\t// summary:\r\n\t\t//\t\tOver-ride of base widget unitialize function to do some connection cleanup.\r\n\t\tthis._disconnect();\r\n\t\treturn true;\r\n\t}\r\n});\r\n\r\ndojo.declare(\"dojox.wire.ml.ActionFilter\", dijit._Widget, {\r\n\t// summary:\r\n\t//\t\tA widget to define a filter for the parent Action to run\r\n\t// description:\r\n\t//\t\tThis base class checks a required property specified with\r\n\t//\t\t'required' attribute.\r\n\t//\t\tIf 'message' is specified, the message is set to a property\r\n\t//\t\tspecified with 'error'.\r\n\t//\t\tSubclasses may implement their own filter() method.\r\n\t// required:\r\n\t//\t\tA property required\r\n\t// requiredValue:\r\n\t//\t\tOptional.  A specific value the property is required to have.  If this isn't provided\r\n\t//\t\tthan any non-false/non-null value of the required propery will cause this filter\r\n\t//\t\tto pass.\r\n\t// type:\r\n\t//\t\tOptional.  A specific type to compare the values as (if requiredValue is set)\r\n\t//\t\tValid values for type are boolean, int, string.  Default is string.\r\n\t// message:\r\n\t//\t\tAn error message to emit if the filter doesn't execute due to property mismatch.\r\n\t// error:\r\n\t//\t\tA property to store an error due to property mismatch.\r\n\trequired: \"\",\r\n\trequiredValue: \"\",\r\n\ttype: \"\",\r\n\tmessage: \"\",\r\n\terror: \"\",\r\n\r\n\r\n\tfilter: function(){\r\n\t\t// summary:\r\n\t\t//\t\tCheck if a required property is specified.  Also, if provided, check to see\r\n\t\t//\t\tif the required property contains a specific value.\r\n\t\t// description:\r\n\t\t//\t\tIf a value is undefined for a property, specified with\r\n\t\t//\t\t'required', this method returns false.\r\n\t\t//\t\tIf the value for a property is defined, but there isn't a requiredValue for it\r\n\t\t//\t\tthen any non-false value will cause the method to return true.\r\n\t\t//\t\tif requiredValue is set, then filter compares that value with the value from\r\n\t\t//\t\tthe required property and returns true if and only if they match.\r\n\t\t//\t\tThe type option just allows for a way to convert the required property values\r\n\t\t//\t\tinto a proper form for comparison (boolean, number, etc).\r\n\t\t//\t\tIf 'message' is specified, it is set to a proeprty specified\r\n\t\t//\t\twith 'error' or shown with alert().\r\n\t\t//\t\tIf 'required' starts with \"arguments\", a property of\r\n\t\t//\t\tthe method arguments are checked.\r\n\t\t// returns:\r\n\t\t//\t\tTrue if a required property is specified (and if requiredValue is specified,\r\n\t\t//\t\tthat they match), otherwise false\r\n\t\tif(this.required === \"\"){\r\n\t\t\treturn true; //Boolean\r\n\t\t}else{\r\n\t\t\tvar value = dojox.wire.ml._getValue(this.required, arguments);\r\n\t\t\tif(this.requiredValue === \"\"){\r\n\t\t\t\t//Just see if there's a value, nothing to compare it to.\r\n\t\t\t\tif(value){\r\n\t\t\t\t\treturn true; //Boolean\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t//See if we need to type convert.\r\n\t\t\t\tvar reqValue = this.requiredValue;\r\n\t\t\t\tif(this.type !== \"\"){\r\n\t\t\t\t\tvar lType = this.type.toLowerCase();\r\n\t\t\t\t\tif(lType === \"boolean\"){\r\n\t\t\t\t\t\tif(reqValue.toLowerCase() === \"false\"){\r\n\t\t\t\t\t\t\treqValue = false;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\treqValue = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else if(lType === \"number\"){\r\n\t\t\t\t\t\treqValue = parseInt(reqValue, 10);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(value === reqValue){\r\n\t\t\t\t\treturn true; //boolean\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(this.message){\r\n\t\t\tif(this.error){\r\n\t\t\t\tdojox.wire.ml._setValue(this.error, this.message);\r\n\t\t\t}else{\r\n\t\t\t\talert(this.message);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false; //Boolean\r\n\t}\r\n});\r\n"]}