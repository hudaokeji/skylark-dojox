{"version":3,"sources":["wire/TextAdapter.js"],"names":["dojo","provide","require","declare","dojox","wire","CompositeWire","_wireClass","constructor","args","this","_initializeChildren","segments","delimiter","_getValue","object","text","i","segment","getValue","_addSegment","_setValue","value","Error"],"mappings":";;;;;;;AAAAA,KAAKC,QAAQ,0BAEbD,KAAKE,QAAQ,4BAEbF,KAAKG,QAAQ,yBAA0BC,MAAMC,KAAKC,eASjDC,WAAY,yBAEZC,YAAa,SAAoBC,GAYhCC,KAAKC,oBAAoBD,KAAKE,UAC1BF,KAAKG,YACRH,KAAKG,UAAY,KAInBC,UAAW,SAA0BC,GAWpC,IAAIA,IAAWL,KAAKE,SACnB,OAAOG,EAGR,IAAIC,EAAO,GACX,IAAI,IAAIC,KAAKP,KAAKE,SAAS,CAC1B,IAAIM,EAAUR,KAAKE,SAASK,GAAGE,SAASJ,GACxCC,EAAON,KAAKU,YAAYJ,EAAME,GAE/B,OAAOF,GAGRK,UAAW,SAA0BN,EAAkBO,GAGtD,MAAM,IAAIC,MAAM,oBAAsBb,KAAKH,WAAa,eAGzDa,YAAa,SAAmBJ,EAAgBE,GAY/C,OAAIA,EAEMF,EAGFA,EAAON,KAAKG,UAAYK,EAFxBA,EAFAF","file":"../../wire/TextAdapter.js","sourcesContent":["dojo.provide(\"dojox.wire.TextAdapter\");\r\n\r\ndojo.require(\"dojox.wire.CompositeWire\");\r\n\r\ndojo.declare(\"dojox.wire.TextAdapter\", dojox.wire.CompositeWire, {\r\n\t// summary:\r\n\t//\t\tA composite Wire for a concatenated text\r\n\t// description:\r\n\t//\t\tThis class has multiple child Wires for text segment values.\r\n\t//\t\tWires in 'segments' property are used to get text segments and\r\n\t//\t\tvalues are concatenated with an optional delimiter string specified\r\n\t//\t\tto 'delimiter' property.\r\n\t\r\n\t_wireClass: \"dojox.wire.TextAdapter\",\r\n\t\r\n\tconstructor: function(/*Object*/ args){\r\n\t\t// summary:\r\n\t\t//\t\tInitialize properties\r\n\t\t// description:\r\n\t\t//\t\tIf array elements specified in 'segments' are not Wires, Wires\r\n\t\t//\t\tare created from them as arguments, with 'parent' property set\r\n\t\t//\t\tto this Wire instance.\r\n\t\t// args:\r\n\t\t//\t\tArguments to initialize properties:\r\n\t\t//\r\n\t\t//\t\t- segments: An array containing child Wires for text segment values\r\n\t\t//\t\t- delimiter: A delimiter string\r\n\t\tthis._initializeChildren(this.segments);\r\n\t\tif(!this.delimiter){\r\n\t\t\tthis.delimiter = \"\";\r\n\t\t}\r\n\t},\r\n\r\n\t_getValue: function(/*Object||Array*/object){\r\n\t\t// summary:\r\n\t\t//\t\tReturn a concatenated text\r\n\t\t// description:\r\n\t\t//\t\tThis method calls getValue() method of the child Wires wuth\r\n\t\t//\t\t'object' argument and concatenate the values with 'delimiter'\r\n\t\t//\t\tproperty to return.\r\n\t\t// arg:\r\n\t\t//\t\tA root object\r\n\t\t// returns:\r\n\t\t//\t\tA concatinated text\r\n\t\tif(!object || !this.segments){\r\n\t\t\treturn object; //Object||Array\r\n\t\t}\r\n\r\n\t\tvar text = \"\";\r\n\t\tfor(var i in this.segments){\r\n\t\t\tvar segment = this.segments[i].getValue(object);\r\n\t\t\ttext = this._addSegment(text, segment);\r\n\t\t}\r\n\t\treturn text; //String\r\n\t},\r\n\r\n\t_setValue: function(/*Object||Array*/object, /*String*/value){\r\n\t\t// summary:\r\n\t\t//\t\tNot supported\r\n\t\tthrow new Error(\"Unsupported API: \" + this._wireClass + \"._setValue\");\r\n\t},\r\n\r\n\t_addSegment: function(/*String*/text, /*String*/segment){\r\n\t\t// summary:\r\n\t\t//\t\tReturn a concatenated text\r\n\t\t// description:\r\n\t\t//\t\tThis method add a text segment specified to 'segment' argument\r\n\t\t//\t\tto a base text specified to 'text', with 'delimiter' property.\r\n\t\t// text:\r\n\t\t//\t\tA base text\r\n\t\t// segment:\r\n\t\t//\t\tA text segment to add\r\n\t\t// returns:\r\n\t\t//\t\tA concatinated text\r\n\t\tif(!segment){\r\n\t\t\treturn text; //String\r\n\t\t}else if(!text){\r\n\t\t\treturn segment; //String\r\n\t\t}else{\r\n\t\t\treturn text + this.delimiter + segment; //String\r\n\t\t}\r\n\t}\r\n});\r\n"]}