{"version":3,"sources":["wire/TableAdapter.js"],"names":["dojo","provide","require","declare","dojox","wire","CompositeWire","_wireClass","constructor","args","this","_initializeChildren","columns","_getValue","object","array","isArray","rows","i","row","_getRow","push","_setValue","value","Error","c","getValue"],"mappings":";;;;;;;AAAAA,KAAKC,QAAQ,2BAEbD,KAAKE,QAAQ,4BAEbF,KAAKG,QAAQ,0BAA2BC,MAAMC,KAAKC,eAclDC,WAAY,0BAEZC,YAAa,SAAoBC,GAWhCC,KAAKC,oBAAoBD,KAAKE,UAG/BC,UAAW,SAAkBC,GAY5B,IAAIA,IAAWJ,KAAKE,QACnB,OAAOE,EAGR,IAAIC,EAAQD,EACRd,KAAKgB,QAAQD,KAChBA,GAASA,IAGV,IAAIE,KACJ,IAAI,IAAIC,KAAKH,EAAM,CAClB,IAAII,EAAMT,KAAKU,QAAQL,EAAMG,IAC7BD,EAAKI,KAAKF,GAEX,OAAOF,GAGRK,UAAW,SAAkBR,EAAiBS,GAG7C,MAAM,IAAIC,MAAM,oBAAsBd,KAAKH,WAAa,eAGzDa,QAAS,SAA0BN,GAQlC,IAAIK,EAAOnB,KAAKgB,QAAQN,KAAKE,eAC7B,IAAI,IAAIa,KAAKf,KAAKE,QACjBO,EAAIM,GAAKf,KAAKE,QAAQa,GAAGC,SAASZ,GAEnC,OAAOK","file":"../../wire/TableAdapter.js","sourcesContent":["dojo.provide(\"dojox.wire.TableAdapter\");\r\n\r\ndojo.require(\"dojox.wire.CompositeWire\");\r\n\r\ndojo.declare(\"dojox.wire.TableAdapter\", dojox.wire.CompositeWire, {\r\n\t// summary:\r\n\t//\t\tA composite Wire for table rows\r\n\t// description:\r\n\t//\t\tThis class has multiple child Wires for object properties or array\r\n\t//\t\telements of a table row.\r\n\t//\t\tThe root object for this class must be an array.\r\n\t//\t\tWhen an object with Wires is specified to 'columns' property, they\r\n\t//\t\tare used to get a row object with property values.\r\n\t//\t\tWhen an array of Wires is specified to 'columns' property, they\r\n\t//\t\tare used to get a row array with element values.\r\n\t//\t\tThe row values are returned in an array.\r\n\t//\t\tThis class only supports getValue(), but not setValue().\r\n\t\r\n\t_wireClass: \"dojox.wire.TableAdapter\",\r\n\t\r\n\tconstructor: function(/*Object*/ args){\r\n\t\t// summary:\r\n\t\t//\t\tInitialize properties\r\n\t\t// description:\r\n\t\t//\t\tIf object properties or array elements specified in 'columns'\r\n\t\t//\t\tproperty are not Wires, Wires are created from them as\r\n\t\t//\t\targuments, with 'parent' property set to this Wire instance.\r\n\t\t// args:\r\n\t\t//\t\tArguments to initialize properties:\r\n\t\t//\r\n\t\t//\t\t- columns: An object or array containing child Wires for column values\r\n\t\tthis._initializeChildren(this.columns);\r\n\t},\r\n\r\n\t_getValue: function(/*Array*/object){\r\n\t\t// summary:\r\n\t\t//\t\tReturn an array of table row value (object or array)\r\n\t\t// description:\r\n\t\t//\t\tThis method iterates over an array specified to 'object'\r\n\t\t//\t\targument and calls getValue() method of the child Wires with\r\n\t\t//\t\teach element of the array to get a row object or array.\r\n\t\t//\t\tFinally, an array with the row objects or arrays are retuned.\r\n\t\t// object:\r\n\t\t//\t\tA root array\r\n\t\t// returns:\r\n\t\t//\t\tAn array of table row value\r\n\t\tif(!object || !this.columns){\r\n\t\t\treturn object; //Array\r\n\t\t}\r\n\r\n\t\tvar array = object;\r\n\t\tif(!dojo.isArray(array)){\r\n\t\t\tarray = [array];\r\n\t\t}\r\n\r\n\t\tvar rows = [];\r\n\t\tfor(var i in array){\r\n\t\t\tvar row = this._getRow(array[i]);\r\n\t\t\trows.push(row);\r\n\t\t}\r\n\t\treturn rows; //Array\r\n\t},\r\n\r\n\t_setValue: function(/*Array*/object, /*Array*/value){\r\n\t\t// summary:\r\n\t\t//\t\tNot supported\r\n\t\tthrow new Error(\"Unsupported API: \" + this._wireClass + \"._setValue\");\r\n\t},\r\n\r\n\t_getRow: function(/*Object||Array*/object){\r\n\t\t// summary:\r\n\t\t//\t\tReturn an array or object for a table row\r\n\t\t// description:\r\n\t\t//\t\tThis method calls getValue() method of the child Wires to\r\n\t\t//\t\tcreate a row object or array.\r\n\t\t// returns:\r\n\t\t//\t\tAn array or object for a table row\r\n\t\tvar row = (dojo.isArray(this.columns) ? [] : {}); // array or object\r\n\t\tfor(var c in this.columns){\r\n\t\t\trow[c] = this.columns[c].getValue(object);\r\n\t\t}\r\n\t\treturn row; //Array||Object\r\n\t}\r\n});\r\n"]}