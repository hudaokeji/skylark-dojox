{"version":3,"sources":["grid/bidi/_BidiMixin.js"],"names":["define","dojox","lang","_Builder","_BidiSupport","_Grid","BaseCell","cellsDijit","extend","setCellNodeTextDirection","inColIndex","inRowIndex","textDir","this","getCell","getNode","style","direction","getCellNodeTextDirection","_setTextDirAttr","render","_ContentBuilder","_getTextDirStyle","inCell","item","grid","getItem","name","get","value","defaultValue","prototype","_checkContextual","_HeaderBuilder","inValue","getCellName","Cell","LRE","RLE","PDF","KEY_HANDLER","_getTextDirMarkup","inDatum","textDirMarkup","formatEditing","needFormatNode","_enforceTextDirWithUcc","text","Select","_getValueCallOrig","cells","getValue","ret","replace","o","v","h","isLeftToRight","i","undefined","options","values","push","join","ComboBox","getWidgetPropsCallOrig","getWidgetProps","_Widget"],"mappings":"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","file":"../../../grid/bidi/_BidiMixin.js","sourcesContent":["define([\"../../main\", \"dojo/_base/lang\", \"../_Builder\", \"dijit/_BidiSupport\",\r\n\"../_Grid\", \"../cells/_base\", \"../cells/dijit\"],\r\n\tfunction(dojox, lang, _Builder, _BidiSupport, _Grid, BaseCell, cellsDijit){\r\n\t\t// module:\r\n\t\t//\t\tdojox/grid/bidi/BidiMixin\r\n\t\t\r\n\t\t/*=====\r\n\t\treturn {\r\n\t\t\t// summary:\r\n\t\t\t//\t\tModule that deals with BIDI for Grid\r\n\t\t\t// description:\r\n\t\t\t//\t\tThere's a special need for displaying BIDI text in rtl direction in ltr GUI, or sometimes needed auto support.\r\n\t\t\t//\t\t\"textDir\" attribute should be set on Grid so that this class can be activated and responsible for text direction\r\n\t\t\t//\t\tAllowed values:\r\n\t\t\t//\t\t1. \"ltr\"\r\n\t\t\t//\t\t2. \"rtl\"\r\n\t\t\t//\t\t3. \"auto\" - contextual the direction of a text defined by first strong letter.\r\n\t\t\t//\t\tBy default the same as the page direction.\r\n\t\r\n\t\t\t//\t\tArabic, Hebrew, Urdu, and Farsi (Persian) are written from right to left,\r\n\t\t\t//\t\twhile numbers and segments of Latin (or Cyrillic or Greek) text are embedded in\r\n\t\t\t//\t\tthis text from left to right. The dual directionality aspects of such\r\n\t\t\t//\t\tbidirectional (bidi) text are posing challenges to the way this text is processed and presented in computer applications.\r\n\t\t\t//\t\tThe Unicode Bidirectional Algorithm, which is commonly used for preparation of Bidi text for display,\r\n\t\t\t//\t\tis not capable to reliably identify the natural base text direction for a given text.\r\n\t\t\t//\t\tOnly a human reader can unfailingly recognize the natural base text direction for a given text.\r\n\t\t\t//\t\tSupport for enforcing the base text direction is provided out of the box by most platforms / technologies,\r\n\t\t\t//\t\tbut very often the default settings do not guarantee proper display of English and Arabic/Hebrew text in the\r\n\t\t\t//\t\tsame application. See for reference:http://w3-03.ibm.com/globalization/page/publish/4353\r\n\t\t};\r\n\t\t=====*/\r\n\r\n\t\tlang.extend(_Grid, {\r\n\t\t\t/*this.textDir = textDir*/\r\n\t\t\tsetCellNodeTextDirection: function(inColIndex, inRowIndex, textDir){\r\n\t\t\t\tthis.getCell(inColIndex).getNode(inRowIndex).style.direction = textDir || \"\";\r\n\t\t\t},\r\n\t\t\tgetCellNodeTextDirection: function(inColIndex, inRowIndex){\r\n\t\t\t\treturn this.getCell(inColIndex).getNode(inRowIndex).style.direction;\r\n\t\t\t},\r\n\t\t\t_setTextDirAttr: function(textDir){\r\n\t\t\t\tthis.textDir = textDir;\r\n\t\t\t\tthis.render();\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tlang.extend(_Builder._ContentBuilder, {\r\n\t\t\t_getTextDirStyle: function(textDir, inCell, inRowIndex){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\t Returns input text direction related attributes.\r\n\t\t\t\t// textDir:\r\n\t\t\t\t//\t\tCell text direction\r\n\t\t\t\t// inCell:\r\n\t\t\t\t//\t\tCell under processing\r\n\t\t\t\t// inRowIndex:\r\n\t\t\t\t//\t\tRow index\r\n\t\t\t\tvar item = this.grid.getItem(inRowIndex), ret = \"\";\r\n\t\t\t\tif(textDir === \"auto\"){\r\n\t\t\t\t\tvar name = inCell.get ? inCell.get(inRowIndex, item) : (inCell.value || inCell.defaultValue);\r\n\t\t\t\t\tif(name){\r\n\t\t\t\t\t\ttextDir = _BidiSupport.prototype._checkContextual(name);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tret = \" direction:\" + textDir + \";\";\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlang.extend(_Builder._HeaderBuilder, {\r\n\t\t\t_getTextDirStyle: function(textDir, inCell, inValue){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\t Returns input text direction related attributes.\r\n\t\t\t\t// textDir:\r\n\t\t\t\t//\t\tCell text direction\r\n\t\t\t\t// inCell:\r\n\t\t\t\t//\t\tCell under processing\r\n\t\t\t\t// inValue:\r\n\t\t\t\t//\t\tHeader cell content\r\n\t\t\t\tif(textDir === \"auto\"){\r\n\t\t\t\t\tvar name = inValue || inCell.name || inCell.grid.getCellName(inCell);\r\n\t\t\t\t\tif(name){\r\n\t\t\t\t\t\ttextDir = _BidiSupport.prototype._checkContextual(name);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn (' direction:' + textDir + '; ');\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlang.extend(BaseCell.Cell, {\r\n\t\t\t// text direction UCC constants\r\n\t\t\tLRE: '\\u202A',\r\n\t\t\tRLE: '\\u202B',\r\n\t\t\tPDF: '\\u202C',\r\n\t\t\tKEY_HANDLER: \"onkeyup=' javascript:(function(){\" +\r\n\t\t\t\t\t\t\t\"var target; if (event.target) target = event.target; else if (event.srcElement) target = event.srcElement; if(!target) return;\"  +\t\t\t\r\n\t\t\t\t\t\t\t\"var regExMatch = /[A-Za-z\\u05d0-\\u065f\\u066a-\\u06ef\\u06fa-\\u07ff\\ufb1d-\\ufdff\\ufe70-\\ufefc]/.exec(target.value);\" +\r\n\t\t\t\t\t\t\t\"target.dir = regExMatch ? ( regExMatch[0] <= \\\"z\\\" ? \\\"ltr\\\" : \\\"rtl\\\" ) : target.dir ? target.dir : \\\"ltr\\\"; })();'\",\r\n\t\t\t_getTextDirMarkup: function(inDatum){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tReturns input text direction related attributes.\r\n\t\t\t\t// textDir:\r\n\t\t\t\t//\t\tThe control text direction\r\n\t\t\t\t// inDatum:\r\n\t\t\t\t//\t\tControl text value.\r\n\t\t\t\tvar textDirMarkup = \"\", textDir = this.textDir || this.grid.textDir;\r\n\t\t\t\tif(textDir){\r\n\t\t\t\t\tif(textDir === \"auto\"){\r\n\t\t\t\t\t\ttextDirMarkup = this.KEY_HANDLER;\r\n\t\t\t\t\t\ttextDir = _BidiSupport.prototype._checkContextual(inDatum);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttextDirMarkup += \" dir='\" + textDir + \"'; \";\r\n\t\t\t\t}\r\n\t\t\t\treturn textDirMarkup;\r\n\t\t\t},\r\n\t\t\tformatEditing: function(inDatum, inRowIndex){\r\n\t\t\t\tthis.needFormatNode(inDatum, inRowIndex);\r\n\t\t\t\treturn '<input class=\"dojoxGridInput\" ' + this._getTextDirMarkup(inDatum) + ' type=\"text\" value=\"' + inDatum + '\">';\r\n\t\t\t},\r\n\t\t\t_enforceTextDirWithUcc: function(textDir, text){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tWraps by UCC (Unicode control characters) option's text according to textDir\r\n\t\t\t\t// textDir:\r\n\t\t\t\t//\t\tThe control text direction\r\n\t\t\t\t// text:\r\n\t\t\t\t//\t\tThe text to be wrapped.\r\n\t\t\t\ttextDir = (textDir === \"auto\") ? _BidiSupport.prototype._checkContextual(text) : textDir;\r\n\t\t\t\treturn (textDir === \"rtl\" ? this.RLE : this.LRE) + text + this.PDF;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlang.extend(BaseCell.Select, {\r\n\t\t\t_getValueCallOrig: dojox.grid.cells.Select.prototype.getValue,\r\n\t\t\tgetValue: function(inRowIndex){\r\n\t\t\t\tvar ret = this._getValueCallOrig(inRowIndex);\r\n\t\t\t\tif(ret && (this.textDir || this.grid.textDir)){\r\n\t\t\t\t\tret = ret.replace(/\\u202A|\\u202B|\\u202C/g, \"\");\r\n\t\t\t\t}\r\n\t\t\t\treturn ret;\r\n\t\t\t},\r\n\t\t\tformatEditing: function(inDatum, inRowIndex){\r\n\t\t\t\tthis.needFormatNode(inDatum, inRowIndex);\r\n\t\t\t\tvar h = [ '<select dir = \\\"' + (this.grid.isLeftToRight() ? 'ltr' : 'rtl') + '\\\" class=\"dojoxGridSelect\">' ];\r\n\t\t\t\tfor(var i = 0, o, v; ((o = this.options[i]) !== undefined) && ((v = this.values[i]) !== undefined); i++){\r\n\t\t\t\t\tv = v.replace ? v.replace(/&/g, '&amp;').replace(/</g, '&lt;') : v;\r\n\t\t\t\t\to = o.replace ? o.replace(/&/g, '&amp;').replace(/</g, '&lt;') : o;\r\n\t\t\t\t\tif(this.textDir || this.grid.textDir){\r\n\t\t\t\t\t\to = this._enforceTextDirWithUcc(this.textDir || this.grid.textDir, o);\r\n\t\t\t\t\t}\r\n\t\t\t\t\th.push(\"<option\", (inDatum == v ? ' selected' : ''), ' value = \"' + v + '\"', \">\", o, \"</option>\");\r\n\t\t\t\t}\r\n\t\t\t\th.push('</select>');\r\n\t\t\t\treturn h.join('');\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlang.extend(cellsDijit.ComboBox, {\r\n\t\t\tgetWidgetPropsCallOrig: dojox.grid.cells.ComboBox.prototype.getWidgetProps,\r\n\t\t\tgetWidgetProps: function(inDatum){\r\n\t\t\t\tvar ret = this.getWidgetPropsCallOrig(inDatum);\r\n\t\t\t\tif(this.textDir || this.grid.textDir){\r\n\t\t\t\t\tret.textDir = this.textDir || this.grid.textDir;\r\n\t\t\t\t}\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlang.extend(cellsDijit._Widget, {\r\n\t\t\tgetWidgetPropsCallOrig: dojox.grid.cells._Widget.prototype.getWidgetProps,\r\n\t\t\tgetWidgetProps: function(inDatum){\r\n\t\t\t\tvar ret = this.getWidgetPropsCallOrig(inDatum);\r\n\t\t\t\tif(this.textDir || this.grid.textDir){\r\n\t\t\t\t\tret.textDir = this.textDir || this.grid.textDir;\r\n\t\t\t\t}\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t});\r\n});\r\n"]}