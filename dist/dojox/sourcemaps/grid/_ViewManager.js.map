{"version":3,"sources":["grid/_ViewManager.js"],"names":["define","declare","has","domClass","constructor","inGrid","this","grid","defaultWidth","views","resize","onEach","render","addView","inView","idx","length","push","destroyViews","v","i","destroy","getContentNodes","nodes","contentNode","forEach","inCallback","inMethod","inArgs","apply","normalizeHeaderNodeHeight","rowNodes","headerContentNode","firstChild","normalizeRowNodeHeights","inRowNodes","h","currHeights","rowHeight","n","contains","offsetHeight","Math","max","style","height","resetHeaderNodeHeight","renormalizeRow","inRowIndex","getRowNode","getViewWidth","inIndex","getWidth","measureHeader","headerNode","measureContent","domNode","findClient","inAutoWidth","c","elasticView","viewWidth","floor","arrange","l","w","vw","len","self","setPosition","ds","hs","isLeftToRight","left","right","getScrollbarWidth","width","parseInt","top","setSize","getColumnsWidth","offsetWidth","r","j","renderRow","inNodes","skipRenorm","rowNode","appendChild","rowRemoved","updateRow","updateRowStyles","setScrollTop","inTop","scrollboxNode","scrollLeft","getFirstScrollingView","hasHScrollbar","hasVScrollbar"],"mappings":";;;;;;;AAAAA,QACC,qBACA,mBACA,kBACE,SAASC,EAASC,EAAKC,GAE1B,OAAOF,EAAQ,0BAA2B,MAMzCG,YAAa,SAASC,GACrBC,KAAKC,KAAOF,GAGbG,aAAc,IAEdC,SAGAC,OAAQ,WACPJ,KAAKK,OAAO,WAGbC,OAAQ,WACPN,KAAKK,OAAO,WAIbE,QAAS,SAASC,GACjBA,EAAOC,IAAMT,KAAKG,MAAMO,OACxBV,KAAKG,MAAMQ,KAAKH,IAGjBI,aAAc,WACb,IAAI,IAASC,EAALC,EAAE,EAAMD,EAAEb,KAAKG,MAAMW,GAAIA,IAChCD,EAAEE,UAEHf,KAAKG,UAGNa,gBAAiB,WAEhB,IADA,IACaH,EADTI,KACIH,EAAE,EAAMD,EAAEb,KAAKG,MAAMW,GAAIA,IAChCG,EAAMN,KAAKE,EAAEK,aAEd,OAAOD,GAGRE,QAAS,SAASC,GACjB,IAAI,IAASP,EAALC,EAAE,EAAMD,EAAEb,KAAKG,MAAMW,GAAIA,IAChCM,EAAWP,EAAGC,IAIhBT,OAAQ,SAASgB,EAAUC,GAC1BA,EAASA,MACT,IAAI,IAAST,EAALC,EAAE,EAAMD,EAAEb,KAAKG,MAAMW,GAAIA,IAC7BO,KAAYR,GACdA,EAAEQ,GAAUE,MAAMV,EAAGS,IAMxBE,0BAA2B,WAE1B,IADA,IACaX,EADTY,KACIX,EAAE,EAAOD,EAAEb,KAAKG,MAAMW,GAAKA,IAC/BD,EAAEa,kBAAkBC,YACtBF,EAASd,KAAKE,EAAEa,mBAGlB1B,KAAK4B,wBAAwBH,IAG9BG,wBAAyB,SAASC,GACjC,IAAIC,EAAI,EACJC,KACJ,GAAG/B,KAAKC,KAAK+B,UACZF,EAAI9B,KAAKC,KAAK+B,cACV,CACJ,GAAGH,EAAWnB,QAAU,EAEvB,OAED,IAAI,IAASuB,EAALnB,EAAE,EAAOmB,EAAEJ,EAAWf,GAAKA,IAK9BjB,EAASqC,SAASD,EAAG,gCACxBF,EAAYjB,GAAKmB,EAAEN,WAAWQ,aAC9BL,EAAKM,KAAKC,IAAIP,EAAGC,EAAYjB,KAG/BgB,EAAKA,GAAK,EAAIA,EAAI,GAIdlC,EAAI,YAAcA,EAAI,MAAQ,IAAOkC,GAAGA,IAE7C,IAAIhB,EAAE,EAAImB,EAAEJ,EAAWf,GAAKA,IACxBiB,EAAYjB,IAAMgB,IACpBG,EAAEN,WAAWW,MAAMC,OAAST,EAAI,OAKnCU,sBAAuB,WACtB,IAAI,IAAS3B,EAAGoB,EAARnB,EAAE,EAAUD,EAAEb,KAAKG,MAAMW,GAAKA,KACrCmB,EAAIpB,EAAEa,kBAAkBC,cAEvBM,EAAEK,MAAMC,OAAS,KAKpBE,eAAgB,SAASC,GAExB,IADA,IACa7B,EAAGoB,EADZR,KACIX,EAAE,GAAUD,EAAEb,KAAKG,MAAMW,MAAMmB,EAAEpB,EAAE8B,WAAWD,IAAc5B,IACnEmB,EAAEN,WAAWW,MAAMC,OAAS,GAC5Bd,EAASd,KAAKsB,GAEfjC,KAAK4B,wBAAwBH,IAG9BmB,aAAc,SAASC,GACtB,OAAO7C,KAAKG,MAAM0C,GAASC,YAAc9C,KAAKE,cAK/C6C,cAAe,WAEd/C,KAAKwC,wBACLxC,KAAKmB,QAAQ,SAASX,GACrBA,EAAOkB,kBAAkBY,MAAMC,OAAS,KAEzC,IAAIT,EAAI,EAKR,OAHA9B,KAAKmB,QAAQ,SAASX,GACrBsB,EAAIM,KAAKC,IAAI7B,EAAOwC,WAAWb,aAAcL,KAEvCA,GAGRmB,eAAgB,WACf,IAAInB,EAAI,EAIR,OAHA9B,KAAKmB,QAAQ,SAASX,GACrBsB,EAAIM,KAAKC,IAAI7B,EAAO0C,QAAQf,aAAcL,KAEpCA,GAGRqB,WAAY,SAASC,GAEpB,IAAIC,EAAIrD,KAAKC,KAAKqD,cAAgB,EAElC,GAAGD,EAAI,EACN,IAAI,IAASxC,EAALC,EAAE,EAAOD,EAAEb,KAAKG,MAAMW,GAAKA,IAClC,GAAGD,EAAE0C,UAAU,CACd,IAAIzC,EAAE,EAAID,EAAEb,KAAKG,MAAMW,GAAKA,IAC3B,IAAID,EAAE0C,UAAU,CACfF,EAAIvC,EACJ,MAGF,MAQH,OAHGuC,EAAI,IACNA,EAAIjB,KAAKoB,MAAMxD,KAAKG,MAAMO,OAAS,IAE7B2C,GAGRI,QAAS,SAASC,EAAGC,GACpB,IAAI7C,EAAGD,EAAG+C,EAAIC,EAAM7D,KAAKG,MAAMO,OAAQoD,EAAO9D,KAE1CqD,EAAKM,GAAK,EAAIE,EAAM7D,KAAKmD,aAEzBY,EAAc,SAASlD,EAAG6C,GAC7B,IAAIM,EAAKnD,EAAEqC,QAAQZ,MACf2B,EAAKpD,EAAEmC,WAAWV,MAElBwB,EAAK7D,KAAKiE,iBAYbF,EAAGG,KAAOT,EAAI,KACdO,EAAGE,KAAOT,EAAI,OAZdM,EAAGI,MAAQV,EAAI,KAEZ9D,EAAI,MAAQ,EACdqE,EAAGG,MAAQV,EAAI7C,EAAEwD,oBAAsB,KAEvCJ,EAAGG,MAAQV,EAAI,KAEZ9D,EAAI,WAAyB,QAAZqE,EAAGK,QACvBL,EAAGK,MAAQC,SAASN,EAAGK,MAAO,IAAMzD,EAAEwD,oBAAsB,OAM9DL,EAAGQ,IAAM,MACTP,EAAGO,IAAM,GAKV,IAAI1D,EAAE,GAAID,EAAEb,KAAKG,MAAMW,KAAMA,EAAEuC,EAAIvC,IAElC8C,EAAK5D,KAAK4C,aAAa9B,GAEvBD,EAAE4D,QAAQb,EAAI,GACdG,EAAYlD,EAAG6C,GAOfA,GALCE,EADE/C,EAAEa,mBAAqBb,EAAEa,kBAAkBC,WACxCd,EAAE6D,kBAAkB7D,EAAEwD,oBAEtBxD,EAAEqC,QAAQyB,YAMjB7D,IAIA,IAFA,IAAI8D,EAAIjB,EAEAkB,EAAEhB,EAAI,GAAIhD,EAAEb,KAAKG,MAAM0E,KAAM/D,GAAG+D,EAAIA,IAE3CjB,EAAK5D,KAAK4C,aAAaiC,GAEvBhE,EAAE4D,QAAQb,EAAI,GAMdG,EAAYlD,EAFZ+D,GAFAhB,EAAK/C,EAAEqC,QAAQyB,aAchB,OARGtB,EAAEQ,IACJhD,EAAIb,KAAKG,MAAMkD,GAEfO,EAAKxB,KAAKC,IAAI,EAAGuC,EAAElB,GAEnB7C,EAAE4D,QAAQb,EAAK,KAAM,GACrBG,EAAYlD,EAAG6C,IAETA,GAIRoB,UAAW,SAASpC,EAAYqC,EAASC,GAExC,IADA,IACanE,EAAGoB,EAAGgD,EADfxD,KACIX,EAAE,GAAmBD,EAAEb,KAAKG,MAAMW,MAAMmB,EAAE8C,EAAQjE,IAAKA,IAC9DmE,EAAUpE,EAAEiE,UAAUpC,GACtBT,EAAEiD,YAAYD,GACdxD,EAASd,KAAKsE,GAEXD,GACHhF,KAAK4B,wBAAwBH,IAI/B0D,WAAY,SAASzC,GACpB1C,KAAKK,OAAO,cAAgBqC,KAI7B0C,UAAW,SAAS1C,EAAYsC,GAC/B,IAAI,IAASnE,EAALC,EAAE,EAAMD,EAAEb,KAAKG,MAAMW,GAAIA,IAChCD,EAAEuE,UAAU1C,GAETsC,GACHhF,KAAKyC,eAAeC,IAItB2C,gBAAiB,SAAS3C,GACzB1C,KAAKK,OAAO,mBAAqBqC,KAIlC4C,aAAc,SAASC,GAEtB,IADA,IACa1E,EADT2D,EAAMe,EACFzE,EAAE,EAAMD,EAAEb,KAAKG,MAAMW,GAAIA,IAChC0D,EAAM3D,EAAEyE,aAAaC,GAGlB3F,EAAI,OAASiB,EAAEmC,YAAcnC,EAAE2E,gBACjC3E,EAAEmC,WAAWyC,WAAa5E,EAAE2E,cAAcC,YAG5C,OAAOjB,GAIRkB,sBAAuB,WAGtB,IAAI,IAAS7E,EAALC,EAAE,EAAOD,EAAEb,KAAKG,MAAMW,GAAKA,IAClC,GAAGD,EAAE8E,iBAAmB9E,EAAE+E,gBACzB,OAAO/E,EAGT,OAAO","file":"../../grid/_ViewManager.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/sniff\",\r\n\t\"dojo/dom-class\"\r\n], function(declare, has, domClass){\r\n\r\nreturn declare('dojox.grid._ViewManager', null, {\r\n\t// summary:\r\n\t//\t\tA collection of grid views. Owned by grid and used internally for managing grid views.\r\n\t// description:\r\n\t//\t\tGrid creates views automatically based on grid's layout structure.\r\n\t//\t\tUsers should typically not need to access individual views or the views collection directly.\r\n\tconstructor: function(inGrid){\r\n\t\tthis.grid = inGrid;\r\n\t},\r\n\r\n\tdefaultWidth: 200,\r\n\r\n\tviews: [],\r\n\r\n\t// operations\r\n\tresize: function(){\r\n\t\tthis.onEach(\"resize\");\r\n\t},\r\n\r\n\trender: function(){\r\n\t\tthis.onEach(\"render\");\r\n\t},\r\n\r\n\t// views\r\n\taddView: function(inView){\r\n\t\tinView.idx = this.views.length;\r\n\t\tthis.views.push(inView);\r\n\t},\r\n\r\n\tdestroyViews: function(){\r\n\t\tfor(var i=0, v; v=this.views[i]; i++){\r\n\t\t\tv.destroy();\r\n\t\t}\r\n\t\tthis.views = [];\r\n\t},\r\n\r\n\tgetContentNodes: function(){\r\n\t\tvar nodes = [];\r\n\t\tfor(var i=0, v; v=this.views[i]; i++){\r\n\t\t\tnodes.push(v.contentNode);\r\n\t\t}\r\n\t\treturn nodes;\r\n\t},\r\n\r\n\tforEach: function(inCallback){\r\n\t\tfor(var i=0, v; v=this.views[i]; i++){\r\n\t\t\tinCallback(v, i);\r\n\t\t}\r\n\t},\r\n\r\n\tonEach: function(inMethod, inArgs){\r\n\t\tinArgs = inArgs || [];\r\n\t\tfor(var i=0, v; v=this.views[i]; i++){\r\n\t\t\tif(inMethod in v){\r\n\t\t\t\tv[inMethod].apply(v, inArgs);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t// layout\r\n\tnormalizeHeaderNodeHeight: function(){\r\n\t\tvar rowNodes = [];\r\n\t\tfor(var i=0, v; (v=this.views[i]); i++){\r\n\t\t\tif(v.headerContentNode.firstChild){\r\n\t\t\t\trowNodes.push(v.headerContentNode);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.normalizeRowNodeHeights(rowNodes);\r\n\t},\r\n\r\n\tnormalizeRowNodeHeights: function(inRowNodes){\r\n\t\tvar h = 0;\r\n\t\tvar currHeights = [];\r\n\t\tif(this.grid.rowHeight){\r\n\t\t\th = this.grid.rowHeight;\r\n\t\t}else{\r\n\t\t\tif(inRowNodes.length <= 1){\r\n\t\t\t\t// no need to normalize if we are the only one...\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tfor(var i=0, n; (n=inRowNodes[i]); i++){\r\n\t\t\t\t// We only care about the height - so don't use marginBox.  This\r\n\t\t\t\t// depends on the container not having any margin (which it shouldn't)\r\n\t\t\t\t// Also - we only look up the height if the cell doesn't have the\r\n\t\t\t\t// dojoxGridNonNormalizedCell class (like for row selectors)\r\n\t\t\t\tif(!domClass.contains(n, \"dojoxGridNonNormalizedCell\")){\r\n\t\t\t\t\tcurrHeights[i] = n.firstChild.offsetHeight;\r\n\t\t\t\t\th =  Math.max(h, currHeights[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\th = (h >= 0 ? h : 0);\r\n\t\r\n\t\t\t//Work around odd FF3 rendering bug: #8864.\r\n\t\t\t//A one px increase fixes FireFox 3's rounding bug for fractional font sizes.\r\n\t\t\tif((has('mozilla') || has('ie') > 8 ) && h){h++;}\r\n\t\t}\r\n\t\tfor(i=0; (n=inRowNodes[i]); i++){\r\n\t\t\tif(currHeights[i] != h){\r\n\t\t\t\tn.firstChild.style.height = h + \"px\";\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\tresetHeaderNodeHeight: function(){\r\n\t\tfor(var i=0, v, n; (v=this.views[i]); i++){\r\n\t\t\tn = v.headerContentNode.firstChild;\r\n\t\t\tif(n){\r\n\t\t\t\tn.style.height = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\trenormalizeRow: function(inRowIndex){\r\n\t\tvar rowNodes = [];\r\n\t\tfor(var i=0, v, n; (v=this.views[i])&&(n=v.getRowNode(inRowIndex)); i++){\r\n\t\t\tn.firstChild.style.height = '';\r\n\t\t\trowNodes.push(n);\r\n\t\t}\r\n\t\tthis.normalizeRowNodeHeights(rowNodes);\r\n\t},\r\n\r\n\tgetViewWidth: function(inIndex){\r\n\t\treturn this.views[inIndex].getWidth() || this.defaultWidth;\r\n\t},\r\n\r\n\t// must be called after view widths are properly set or height can be miscalculated\r\n\t// if there are flex columns\r\n\tmeasureHeader: function(){\r\n\t\t// need to reset view header heights so they are properly measured.\r\n\t\tthis.resetHeaderNodeHeight();\r\n\t\tthis.forEach(function(inView){\r\n\t\t\tinView.headerContentNode.style.height = '';\r\n\t\t});\r\n\t\tvar h = 0;\r\n\t\t// calculate maximum view header height\r\n\t\tthis.forEach(function(inView){\r\n\t\t\th = Math.max(inView.headerNode.offsetHeight, h);\r\n\t\t});\r\n\t\treturn h;\r\n\t},\r\n\r\n\tmeasureContent: function(){\r\n\t\tvar h = 0;\r\n\t\tthis.forEach(function(inView){\r\n\t\t\th = Math.max(inView.domNode.offsetHeight, h);\r\n\t\t});\r\n\t\treturn h;\r\n\t},\r\n\r\n\tfindClient: function(inAutoWidth){\r\n\t\t// try to use user defined client\r\n\t\tvar c = this.grid.elasticView || -1;\r\n\t\t// attempt to find implicit client\r\n\t\tif(c < 0){\r\n\t\t\tfor(var i=1, v; (v=this.views[i]); i++){\r\n\t\t\t\tif(v.viewWidth){\r\n\t\t\t\t\tfor(i=1; (v=this.views[i]); i++){\r\n\t\t\t\t\t\tif(!v.viewWidth){\r\n\t\t\t\t\t\t\tc = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// client is in the middle by default\r\n\t\tif(c < 0){\r\n\t\t\tc = Math.floor(this.views.length / 2);\r\n\t\t}\r\n\t\treturn c;\r\n\t},\r\n\r\n\tarrange: function(l, w){\r\n\t\tvar i, v, vw, len = this.views.length, self = this;\r\n\t\t// find the client\r\n\t\tvar c = (w <= 0 ? len : this.findClient());\r\n\t\t// layout views\r\n\t\tvar setPosition = function(v, l){\r\n\t\t\tvar ds = v.domNode.style;\r\n\t\t\tvar hs = v.headerNode.style;\r\n\r\n\t\t\tif(!self.grid.isLeftToRight()){\r\n\t\t\t\tds.right = l + 'px';\r\n\t\t\t\t// fixed rtl, the scrollbar is on the right side in FF < 4\r\n\t\t\t\tif(has('ff') < 4){\r\n\t\t\t\t\ths.right = l + v.getScrollbarWidth() + 'px';\r\n\t\t\t\t}else{\r\n\t\t\t\t\ths.right = l + 'px';\r\n\t\t\t\t}\r\n\t\t\t\tif(!has('webkit') && hs.width != 'auto'){\r\n\t\t\t\t\ths.width = parseInt(hs.width, 10) - v.getScrollbarWidth() + 'px';\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tds.left = l + 'px';\r\n\t\t\t\ths.left = l + 'px';\r\n\t\t\t}\r\n\t\t\tds.top = 0 + 'px';\r\n\t\t\ths.top = 0;\r\n\t\t};\r\n\t\t// for views left of the client\r\n\t\t//BiDi TODO: The left and right should not appear in BIDI environment. Should be replaced with\r\n\t\t//leading and tailing concept.\r\n\t\tfor(i=0; (v=this.views[i])&&(i<c); i++){\r\n\t\t\t// get width\r\n\t\t\tvw = this.getViewWidth(i);\r\n\t\t\t// process boxes\r\n\t\t\tv.setSize(vw, 0);\r\n\t\t\tsetPosition(v, l);\r\n\t\t\tif(v.headerContentNode && v.headerContentNode.firstChild){\r\n\t\t\t\tvw = v.getColumnsWidth()+v.getScrollbarWidth();\r\n\t\t\t}else{\r\n\t\t\t\tvw = v.domNode.offsetWidth;\r\n\t\t\t}\r\n\t\t\t// update position\r\n\t\t\tl += vw;\r\n\t\t}\r\n\t\t// next view (is the client, i++ == c)\r\n\t\ti++;\r\n\t\t// start from the right edge\r\n\t\tvar r = w;\r\n\t\t// for views right of the client (iterated from the right)\r\n\t\tfor(var j=len-1; (v=this.views[j])&&(i<=j); j--){\r\n\t\t\t// get width\r\n\t\t\tvw = this.getViewWidth(j);\r\n\t\t\t// set size\r\n\t\t\tv.setSize(vw, 0);\r\n\t\t\t// measure in pixels\r\n\t\t\tvw = v.domNode.offsetWidth;\r\n\t\t\t// update position\r\n\t\t\tr -= vw;\r\n\t\t\t// set position\r\n\t\t\tsetPosition(v, r);\r\n\t\t}\r\n\t\tif(c<len){\r\n\t\t\tv = this.views[c];\r\n\t\t\t// position the client box between left and right boxes\r\n\t\t\tvw = Math.max(1, r-l);\r\n\t\t\t// set size\r\n\t\t\tv.setSize(vw + 'px', 0);\r\n\t\t\tsetPosition(v, l);\r\n\t\t}\r\n\t\treturn l;\r\n\t},\r\n\r\n\t// rendering\r\n\trenderRow: function(inRowIndex, inNodes, skipRenorm){\r\n\t\tvar rowNodes = [];\r\n\t\tfor(var i=0, v, n, rowNode; (v=this.views[i])&&(n=inNodes[i]); i++){\r\n\t\t\trowNode = v.renderRow(inRowIndex);\r\n\t\t\tn.appendChild(rowNode);\r\n\t\t\trowNodes.push(rowNode);\r\n\t\t}\r\n\t\tif(!skipRenorm){\r\n\t\t\tthis.normalizeRowNodeHeights(rowNodes);\r\n\t\t}\r\n\t},\r\n\t\r\n\trowRemoved: function(inRowIndex){\r\n\t\tthis.onEach(\"rowRemoved\", [ inRowIndex ]);\r\n\t},\r\n\t\r\n\t// updating\r\n\tupdateRow: function(inRowIndex, skipRenorm){\r\n\t\tfor(var i=0, v; v=this.views[i]; i++){\r\n\t\t\tv.updateRow(inRowIndex);\r\n\t\t}\r\n\t\tif(!skipRenorm){\r\n\t\t\tthis.renormalizeRow(inRowIndex);\r\n\t\t}\r\n\t},\r\n\t\r\n\tupdateRowStyles: function(inRowIndex){\r\n\t\tthis.onEach(\"updateRowStyles\", [ inRowIndex ]);\r\n\t},\r\n\t\r\n\t// scrolling\r\n\tsetScrollTop: function(inTop){\r\n\t\tvar top = inTop;\r\n\t\tfor(var i=0, v; v=this.views[i]; i++){\r\n\t\t\ttop = v.setScrollTop(inTop);\r\n\t\t\t// Work around IE not firing scroll events that cause header offset\r\n\t\t\t// issues to occur.\r\n\t\t\tif(has('ie') && v.headerNode && v.scrollboxNode){\r\n\t\t\t\tv.headerNode.scrollLeft = v.scrollboxNode.scrollLeft;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn top;\r\n\t\t//this.onEach(\"setScrollTop\", [ inTop ]);\r\n\t},\r\n\t\r\n\tgetFirstScrollingView: function(){\r\n\t\t// summary:\r\n\t\t//\t\tReturns the first grid view with a scroll bar\r\n\t\tfor(var i=0, v; (v=this.views[i]); i++){\r\n\t\t\tif(v.hasHScrollbar() || v.hasVScrollbar()){\r\n\t\t\t\treturn v;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n});\r\n});"]}