{"version":3,"sources":["grid/cells/tree.js"],"names":["define","dojo","dojox","lang","grid","cells","TreeCell","formatAggregate","inItem","level","inRowIndexes","g","this","d","edit","info","aggregator","getForCell","parentCell","aggregate","value","defaultValue","ret","_defaultFormat","dir","textDir","_enforceTextDirWithUcc","formatIndexes","i","get","editable","alwaysEditing","rowIndex","cell","formatEditing","getOpenState","itemId","store","itm","isItem","getIdentity","openStates","getDefaultOpenState","formatAtLevel","summaryRow","toggleClass","cellClasses","isArray","result","push","isCollapsable","id","_scopeName","index","focus","join","focusClass"],"mappings":";;;;;;;AAAAA,QACC,oBACA,aACA,kBACA,YACE,SAASC,EAAMC,EAAOC,GA4EzB,OA1EAD,EAAME,KAAKC,MAAMC,UAChBC,gBAAiB,SAASC,EAAQC,EAAOC,GACxC,IAAOC,EAAEC,KAAKR,KACbS,GADqBF,EAAEG,KAAKC,KAC1BJ,EAAEK,WAAaL,EAAEK,WAAWC,WAAWL,KAAMH,EAAOD,EAAQC,IAAUG,KAAKH,MAAQ,MAAQG,KAAKM,WAAWC,WAAcP,KAAKQ,OAASR,KAAKS,cAC3IC,EAAMV,KAAKW,eAAeV,GAAIA,EAAGJ,EAAQG,KAAKH,MAAOC,EAAcE,OACnEY,EAAMZ,KAAKa,SAAWb,KAAKR,KAAKqB,QAIpC,OAHGD,GAAOZ,KAAKc,yBACXJ,EAAMV,KAAKc,uBAAuBF,EAAKF,IAEpCA,GAERK,cAAe,SAASjB,EAAcF,GACrC,IAAoBoB,EAAXhB,KAAKR,KAAUU,KAAKC,KAC5BF,EAAED,KAAKiB,IAAMjB,KAAKiB,IAAInB,EAAa,GAAIF,EAAQE,GAAiBE,KAAKQ,OAASR,KAAKS,aACpF,GAAGT,KAAKkB,WAAalB,KAAKmB,eAAkBH,EAAEI,UAAUtB,EAAa,IAAMkB,EAAEK,MAAMrB,MAClF,OAAOA,KAAKsB,cAAcrB,EAAGH,EAAa,GAAIA,GAE9C,IAAIY,EAAMV,KAAKW,eAAeV,GAAIA,EAAGH,EAAa,GAAIA,EAAcE,OAChEY,EAAMZ,KAAKa,SAAWb,KAAKR,KAAKqB,QAIpC,OAHGD,GAAOZ,KAAKc,yBACXJ,EAAMV,KAAKc,uBAAuBF,EAAKF,IAEpCA,GAGTa,aAAc,SAASC,GACtB,IAAIhC,EAAOQ,KAAKR,KAAMiC,EAAQjC,EAAKiC,MAAOC,EAAM,KAShD,OARGD,EAAME,OAAOH,KACfE,EAAMF,EACNA,EAASC,EAAMG,YAAYJ,IAExBxB,KAAK6B,aAAa7B,KAAK6B,eACP,iBAAVL,GAAwBA,KAAUxB,KAAK6B,aAChD7B,KAAK6B,WAAWL,GAAUhC,EAAKsC,oBAAoB9B,KAAM0B,IAEnD1B,KAAK6B,WAAWL,IAExBO,cAAe,SAASjC,EAAcF,EAAQC,EAAOmC,EAAYC,EAAaC,GACzE3C,EAAK4C,QAAQrC,KAChBA,GAAgBA,IAEjB,IAAIsC,EAAS,GACb,GAAGvC,EAAQG,KAAKH,OAAUA,IAAUG,KAAKH,OAASmC,EACjDE,EAAYG,KAAK,uBACdxC,IAAUG,KAAKH,OACjBqC,EAAYG,KAAK,sBAElBD,EAAS,qBACJ,GAAGvC,EAAQG,KAAKH,MACrBqC,EAAYG,KAAK,wBACjBD,EAAS,sCAAwCpC,KAAKL,gBAAgBC,EAAQC,EAAOC,GAAgB,cACjG,CACJ,IAAIY,EAAM,GACV,GAAGV,KAAKsC,cAAc,CACrB,IAAIb,EAAQzB,KAAKR,KAAKiC,MAAOc,EAAK,GAC/Bd,EAAME,OAAO/B,KACf2C,EAAKd,EAAMG,YAAYhC,IAExBsC,EAAYG,KAAK,wBACjB3B,EAAM,SAAWrB,EAAKmD,WAAa,qCAAuC3C,EAAQ,4CAC5DoC,EAAc,aAAeM,EAAK,cAAgBvC,KAAKyC,MAAQ,YAEtFL,EAAS1B,EAAMV,KAAKe,cAAcjB,EAAcF,GAQjD,OALGI,KAAKR,KAAKkD,MAAMrB,MAAQrB,KAAKyC,OAASzC,KAAKR,KAAKkD,MAAMrB,KAAKoB,OAC7D3C,EAAa6C,KAAK,MAAQ3C,KAAKR,KAAKkD,MAAMtB,UAC1Cc,EAAYG,KAAKrC,KAAKR,KAAKkD,MAAME,YAG3BR,IAIF9C,EAAME,KAAKC,MAAMC","file":"../../../grid/cells/tree.js","sourcesContent":["define([\r\n\t\"dojo/_base/kernel\",\r\n\t\"../../main\",\r\n\t\"dojo/_base/lang\",\r\n\t\"../cells\"\r\n], function(dojo, dojox, lang){\r\n\r\ndojox.grid.cells.TreeCell = {\r\n\tformatAggregate: function(inItem, level, inRowIndexes){\r\n\t\tvar f, g=this.grid, i=g.edit.info,\r\n\t\t\td=g.aggregator ? g.aggregator.getForCell(this, level, inItem, level === this.level ? \"cnt\" : this.parentCell.aggregate) : (this.value || this.defaultValue);\r\n\t\tvar ret = this._defaultFormat(d, [d, level - this.level, inRowIndexes, this]);\r\n\t\tvar dir = this.textDir || this.grid.textDir;\r\n\t\tif(dir && this._enforceTextDirWithUcc){\r\n\t\t    ret = this._enforceTextDirWithUcc(dir, ret);\r\n\t\t}\r\n\t\treturn ret;\r\n\t},\r\n\tformatIndexes: function(inRowIndexes, inItem){\r\n\t\tvar f, g=this.grid, i=g.edit.info,\r\n\t\t\td=this.get ? this.get(inRowIndexes[0], inItem, inRowIndexes) : (this.value || this.defaultValue);\r\n\t\tif(this.editable && (this.alwaysEditing || (i.rowIndex==inRowIndexes[0] && i.cell==this))){\r\n\t\t\treturn this.formatEditing(d, inRowIndexes[0], inRowIndexes);\r\n\t\t}else{\r\n\t\t\tvar ret = this._defaultFormat(d, [d, inRowIndexes[0], inRowIndexes, this]);\r\n\t\t\tvar dir = this.textDir || this.grid.textDir;\r\n\t\t\tif(dir && this._enforceTextDirWithUcc){\r\n\t\t\t    ret = this._enforceTextDirWithUcc(dir, ret);\r\n\t\t\t}\r\n\t\t\treturn ret;\r\n\t\t}\r\n\t},\r\n\tgetOpenState: function(itemId){\r\n\t\tvar grid = this.grid, store = grid.store, itm = null;\r\n\t\tif(store.isItem(itemId)){\r\n\t\t\titm = itemId;\r\n\t\t\titemId = store.getIdentity(itemId);\r\n\t\t}\r\n\t\tif(!this.openStates){ this.openStates = {}; }\r\n\t\tif(typeof itemId != \"string\" || !(itemId in this.openStates)){\r\n\t\t\tthis.openStates[itemId] = grid.getDefaultOpenState(this, itm);\r\n\t\t}\r\n\t\treturn this.openStates[itemId];\r\n\t},\r\n\tformatAtLevel: function(inRowIndexes, inItem, level, summaryRow, toggleClass, cellClasses){\r\n\t\tif(!lang.isArray(inRowIndexes)){\r\n\t\t\tinRowIndexes = [inRowIndexes];\r\n\t\t}\r\n\t\tvar result = \"\";\r\n\t\tif(level > this.level || (level === this.level && summaryRow)){\r\n\t\t\tcellClasses.push(\"dojoxGridSpacerCell\");\r\n\t\t\tif(level === this.level){\r\n\t\t\t\tcellClasses.push(\"dojoxGridTotalCell\");\r\n\t\t\t}\r\n\t\t\tresult = '<span></span>';\r\n\t\t}else if(level < this.level){\r\n\t\t\tcellClasses.push(\"dojoxGridSummaryCell\");\r\n\t\t\tresult = '<span class=\"dojoxGridSummarySpan\">' + this.formatAggregate(inItem, level, inRowIndexes) + '</span>';\r\n\t\t}else{\r\n\t\t\tvar ret = \"\";\r\n\t\t\tif(this.isCollapsable){\r\n\t\t\t\tvar store = this.grid.store, id = \"\";\r\n\t\t\t\tif(store.isItem(inItem)){\r\n\t\t\t\t\tid = store.getIdentity(inItem);\r\n\t\t\t\t}\r\n\t\t\t\tcellClasses.push(\"dojoxGridExpandoCell\");\r\n\t\t\t\tret = '<span ' + dojo._scopeName + 'Type=\"dojox.grid._Expando\" level=\"' + level + '\" class=\"dojoxGridExpando\"' +\r\n\t\t\t\t\t\t'\" toggleClass=\"' + toggleClass + '\" itemId=\"' + id + '\" cellIdx=\"' + this.index + '\"></span>';\r\n\t\t\t}\r\n\t\t\tresult = ret + this.formatIndexes(inRowIndexes, inItem);\r\n\t\t}\r\n\r\n\t\tif(this.grid.focus.cell && this.index == this.grid.focus.cell.index &&\r\n\t\t\tinRowIndexes.join('/') == this.grid.focus.rowIndex){\r\n\t\t\tcellClasses.push(this.grid.focus.focusClass);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n};\r\n\r\nreturn dojox.grid.cells.TreeCell;\r\n\r\n});"]}