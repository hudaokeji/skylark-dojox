{"version":3,"sources":["grid/cells/dijit.js"],"names":["define","dojo","dojox","declare","array","lang","json","connect","has","dom","domAttr","domConstruct","domStyle","domGeometry","ItemFileReadStore","DateTextBox","TimeTextBox","ComboBox","CheckBox","TextBox","NumberSpinner","NumberTextBox","CurrencyTextBox","HorizontalSlider","_TextBoxMixin","Editor","util","BaseCell","exports","_Widget","widgetClass","constructor","inCell","this","widget","deprecated","getObject","formatEditing","inDatum","inRowIndex","needFormatNode","getValue","get","_unescapeHTML","value","replace","grid","escapeHTMLInData","setValue","inValue","set","onLoadDeferred","self","addCallback","inherited","arguments","getWidgetProps","mixin","dir","widgetProps","constraints","constraint","required","createWidget","inNode","attachWidget","appendChild","domNode","formatNode","apply","sizeWidget","views","renormalizeRow","scroller","rowHeightChanged","focus","p","getNode","marginBox","w","setTimeout","hitch","fire","focusNode","tagName","selectInputText","_finish","removeNode","setSelectable","markupFactory","node","cell","trim","fromJson","items","forEach","options","o","push","name","store","data","identifier","e","split","Date","checked","attributeMap","height","widgetHeight","then","content","open","widgetToolbar","place","toolbar","editingArea","populateEditor","placeCursorAtEnd","h","substr","parseInt"],"mappings":"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","file":"../../../grid/cells/dijit.js","sourcesContent":["define([\r\n\t\"dojo/_base/kernel\",\r\n\t\"../../main\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/json\",\r\n\t\"dojo/_base/connect\",\r\n\t\"dojo/_base/sniff\",\r\n\t\"dojo/dom\",\r\n\t\"dojo/dom-attr\",\r\n\t\"dojo/dom-construct\",\r\n\t\"dojo/dom-style\",\r\n\t\"dojo/dom-geometry\",\r\n\t\"dojo/data/ItemFileReadStore\",\r\n\t\"dijit/form/DateTextBox\",\r\n\t\"dijit/form/TimeTextBox\",\r\n\t\"dijit/form/ComboBox\",\r\n\t\"dijit/form/CheckBox\",\r\n\t\"dijit/form/TextBox\",\r\n\t\"dijit/form/NumberSpinner\",\r\n\t\"dijit/form/NumberTextBox\",\r\n\t\"dijit/form/CurrencyTextBox\",\r\n\t\"dijit/form/HorizontalSlider\",\r\n\t\"dijit/form/_TextBoxMixin\",\r\n\t\"dijit/Editor\",\r\n\t\"../util\",\r\n\t\"./_base\"\r\n], function(dojo, dojox, declare, array, lang, json, connect, has, dom, domAttr, domConstruct, domStyle,\r\n\tdomGeometry, ItemFileReadStore, DateTextBox, TimeTextBox, ComboBox, CheckBox, TextBox,\r\n\tNumberSpinner, NumberTextBox, CurrencyTextBox, HorizontalSlider, _TextBoxMixin, Editor, util, BaseCell){\r\n\t\t\r\n// TODO: shouldn't it be the test file's job to require these modules,\r\n// if it is using them?  Most of these modules aren't referenced by this file.\r\n\r\n\tvar exports = {};\r\n\r\n\tvar _Widget = exports._Widget = declare(\"dojox.grid.cells._Widget\", BaseCell, {\r\n\t\twidgetClass: TextBox,\r\n\t\tconstructor: function(inCell){\r\n\t\t\tthis.widget = null;\r\n\t\t\tif(typeof this.widgetClass == \"string\"){\r\n\t\t\t\tdojo.deprecated(\"Passing a string to widgetClass is deprecated\", \"pass the widget class object instead\", \"2.0\");\r\n\t\t\t\tthis.widgetClass = lang.getObject(this.widgetClass);\r\n\t\t\t}\r\n\t\t},\r\n\t\tformatEditing: function(inDatum, inRowIndex){\r\n\t\t\tthis.needFormatNode(inDatum, inRowIndex);\r\n\t\t\treturn \"<div></div>\";\r\n\t\t},\r\n\t\tgetValue: function(inRowIndex){\r\n\t\t\treturn this.widget.get('value');\r\n\t\t},\r\n\t\t_unescapeHTML: function(value){\r\n\t\t\treturn (value && value.replace && this.grid.escapeHTMLInData) ? \r\n\t\t\t\t\tvalue.replace(/&lt;/g, '<').replace(/&amp;/g, '&') : value;\r\n\t\t},\r\n\t\tsetValue: function(inRowIndex, inValue){\r\n\t\t\tif(this.widget&&this.widget.set){\r\n\t\t\t\tinValue = this._unescapeHTML(inValue);\r\n\t\t\t\t//Look for lazy-loading editor and handle it via its deferred.\r\n\t\t\t\tif(this.widget.onLoadDeferred){\r\n\t\t\t\t\tvar self = this;\r\n\t\t\t\t\tthis.widget.onLoadDeferred.addCallback(function(){\r\n\t\t\t\t\t\tself.widget.set(\"value\",inValue===null?\"\":inValue);\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.widget.set(\"value\", inValue);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetWidgetProps: function(inDatum){\r\n\t\t\treturn lang.mixin(\r\n\t\t\t\t{\r\n\t\t\t\t\tdir: this.dir,\r\n\t\t\t\t\tlang: this.lang\r\n\t\t\t\t},\r\n\t\t\t\tthis.widgetProps||{},\r\n\t\t\t\t{\r\n\t\t\t\t\tconstraints: lang.mixin({}, this.constraint) || {}, //TODO: really just for ValidationTextBoxes\r\n\t\t\t\t\trequired: (this.constraint || {}).required,\r\n\t\t\t\t\tvalue: this._unescapeHTML(inDatum)\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\t\tcreateWidget: function(inNode, inDatum, inRowIndex){\r\n\t\t\treturn new this.widgetClass(this.getWidgetProps(inDatum), inNode);\r\n\t\t},\r\n\t\tattachWidget: function(inNode, inDatum, inRowIndex){\r\n\t\t\tinNode.appendChild(this.widget.domNode);\r\n\t\t\tthis.setValue(inRowIndex, inDatum);\r\n\t\t},\r\n\t\tformatNode: function(inNode, inDatum, inRowIndex){\r\n\t\t\tif(!this.widgetClass){\r\n\t\t\t\treturn inDatum;\r\n\t\t\t}\r\n\t\t\tif(!this.widget){\r\n\t\t\t\tthis.widget = this.createWidget.apply(this, arguments);\r\n\t\t\t}else{\r\n\t\t\t\tthis.attachWidget.apply(this, arguments);\r\n\t\t\t}\r\n\t\t\tthis.sizeWidget.apply(this, arguments);\r\n\t\t\tthis.grid.views.renormalizeRow(inRowIndex);\r\n\t\t\tthis.grid.scroller.rowHeightChanged(inRowIndex, true/*fix #11101*/);\r\n\t\t\tthis.focus();\r\n\t\t\treturn undefined;\r\n\t\t},\r\n\t\tsizeWidget: function(inNode, inDatum, inRowIndex){\r\n\t\t\tvar p = this.getNode(inRowIndex);\r\n\t\t\tdojo.marginBox(this.widget.domNode, {w: domStyle.get(p, 'width')});\r\n\t\t},\r\n\t\tfocus: function(inRowIndex, inNode){\r\n\t\t\tif(this.widget){\r\n\t\t\t\tsetTimeout(lang.hitch(this.widget, function(){\r\n\t\t\t\t\tutil.fire(this, \"focus\");\r\n\t\t\t\t\tif(this.focusNode && this.focusNode.tagName === \"INPUT\"){\r\n\t\t\t\t\t\t_TextBoxMixin.selectInputText(this.focusNode);\r\n\t\t\t\t\t}\r\n\t\t\t\t}), 0);\r\n\t\t\t}\r\n\t\t},\r\n\t\t_finish: function(inRowIndex){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tutil.removeNode(this.widget.domNode);\r\n\t\t\tif(has('ie')){\r\n\t\t\t\tdom.setSelectable(this.widget.domNode, true);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\t_Widget.markupFactory = function(node, cell){\r\n\t\tBaseCell.markupFactory(node, cell);\r\n\t\tvar widgetProps = lang.trim(domAttr.get(node, \"widgetProps\")||\"\");\r\n\t\tvar constraint = lang.trim(domAttr.get(node, \"constraint\")||\"\");\r\n\t\tvar widgetClass = lang.trim(domAttr.get(node, \"widgetClass\")||\"\");\r\n\t\tif(widgetProps){\r\n\t\t\tcell.widgetProps = json.fromJson(widgetProps);\r\n\t\t}\r\n\t\tif(constraint){\r\n\t\t\tcell.constraint = json.fromJson(constraint);\r\n\t\t}\r\n\t\tif(widgetClass){\r\n\t\t\tcell.widgetClass = lang.getObject(widgetClass);\r\n\t\t}\r\n\t};\r\n\r\n\tvar ComboBox = exports.ComboBox = declare(\"dojox.grid.cells.ComboBox\", _Widget, {\r\n\t\twidgetClass: ComboBox,\r\n\t\tgetWidgetProps: function(inDatum){\r\n\t\t\tvar items=[];\r\n\t\t\tarray.forEach(this.options, function(o){\r\n\t\t\t\titems.push({name: o, value: o});\r\n\t\t\t});\r\n\t\t\tvar store = new ItemFileReadStore({data: {identifier:\"name\", items: items}});\r\n\t\t\treturn lang.mixin({}, this.widgetProps||{}, {\r\n\t\t\t\tvalue: inDatum,\r\n\t\t\t\tstore: store\r\n\t\t\t});\r\n\t\t},\r\n\t\tgetValue: function(){\r\n\t\t\tvar e = this.widget;\r\n\t\t\t// make sure to apply the displayed value\r\n\t\t\te.set('displayedValue', e.get('displayedValue'));\r\n\t\t\treturn e.get('value');\r\n\t\t}\r\n\t});\r\n\tComboBox.markupFactory = function(node, cell){\r\n\t\t_Widget.markupFactory(node, cell);\r\n\t\tvar options = lang.trim(domAttr.get(node, \"options\")||\"\");\r\n\t\tif(options){\r\n\t\t\tvar o = options.split(',');\r\n\t\t\tif(o[0] != options){\r\n\t\t\t\tcell.options = o;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar DateTextBox = exports.DateTextBox = declare(\"dojox.grid.cells.DateTextBox\", _Widget, {\r\n\t\twidgetClass: DateTextBox,\r\n\t\tsetValue: function(inRowIndex, inValue){\r\n\t\t\tif(this.widget){\r\n\t\t\t\tthis.widget.set('value', new Date(inValue));\r\n\t\t\t}else{\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetWidgetProps: function(inDatum){\r\n\t\t\treturn lang.mixin(this.inherited(arguments), {\r\n\t\t\t\tvalue: new Date(inDatum)\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\tDateTextBox.markupFactory = function(node, cell){\r\n\t\t_Widget.markupFactory(node, cell);\r\n\t};\r\n\r\n\tvar CheckBox = exports.CheckBox = declare(\"dojox.grid.cells.CheckBox\", _Widget, {\r\n\t\twidgetClass: CheckBox,\r\n\t\tgetValue: function(){\r\n\t\t\treturn this.widget.checked;\r\n\t\t},\r\n\t\tsetValue: function(inRowIndex, inValue){\r\n\t\t\tif(this.widget&&this.widget.attributeMap.checked){\r\n\t\t\t\tthis.widget.set(\"checked\", inValue);\r\n\t\t\t}else{\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t}\r\n\t\t},\r\n\t\tsizeWidget: function(inNode, inDatum, inRowIndex){\r\n\t\t\treturn;\r\n\t\t}\r\n\t});\r\n\tCheckBox.markupFactory = function(node, cell){\r\n\t\t_Widget.markupFactory(node, cell);\r\n\t};\r\n\r\n\tvar Editor = exports.Editor = declare(\"dojox.grid.cells.Editor\", _Widget, {\r\n\t\twidgetClass: Editor,\r\n\t\tgetWidgetProps: function(inDatum){\r\n\t\t\treturn lang.mixin({}, this.widgetProps||{}, {\r\n\t\t\t\theight: this.widgetHeight || \"100px\"\r\n\t\t\t});\r\n\t\t},\r\n\t\tcreateWidget: function(inNode, inDatum, inRowIndex){\r\n\t\t\t// widget needs its value set after creation\r\n\t\t\tvar widget = new this.widgetClass(this.getWidgetProps(inDatum), inNode);\r\n\t\t\t// use onLoadDeferred because onLoad may have already fired\r\n\t\t\twidget.onLoadDeferred.then(lang.hitch(this, 'populateEditor'));\r\n\t\t\treturn widget;\r\n\t\t},\r\n\t\tformatNode: function(inNode, inDatum, inRowIndex){\r\n\t\t\tthis.content = inDatum;\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(has('mozilla')){\r\n\t\t\t\t// FIXME: seem to need to reopen the editor and display the toolbar\r\n\t\t\t\tvar e = this.widget;\r\n\t\t\t\te.open();\r\n\t\t\t\tif(this.widgetToolbar){\r\n\t\t\t\t\tdomConstruct.place(e.toolbar.domNode, e.editingArea, \"before\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tpopulateEditor: function(){\r\n\t\t\tthis.widget.set('value', this.content);\r\n\t\t\tthis.widget.placeCursorAtEnd();\r\n\t\t}\r\n\t});\r\n\tEditor.markupFactory = function(node, cell){\r\n\t\t_Widget.markupFactory(node, cell);\r\n\t\tvar h = lang.trim(domAttr.get(node, \"widgetHeight\")||\"\");\r\n\t\tif(h){\r\n\t\t\tif((h != \"auto\")&&(h.substr(-2) != \"em\")){\r\n\t\t\t\th = parseInt(h, 10)+\"px\";\r\n\t\t\t}\r\n\t\t\tcell.widgetHeight = h;\r\n\t\t}\r\n\t};\r\n\r\n\treturn exports;\r\n\r\n});\r\n"]}