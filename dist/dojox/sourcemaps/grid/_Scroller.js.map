{"version":3,"sources":["grid/_Scroller.js"],"names":["define","dijitRegistry","declare","lang","util","html","divkids","inNode","inTag","n","inNodeOrId","node","result","i","childNodes","byId","tagName","toLowerCase","push","nodeKids","constructor","inContentNodes","this","setContentNodes","pageHeights","pageNodes","stack","rowCount","defaultRowHeight","keepRows","contentNode","scrollboxNode","defaultPageHeight","keepPages","pageCount","windowHeight","firstVisibleRow","lastVisibleRow","averageRowHeight","page","pageTop","init","inRowCount","inKeepRows","inRowsPerPage","arguments","length","rowsPerPage","grid","rowHeight","_getPageCount","setKeepInfo","invalidate","scrollTop","scroll","onscroll","hitch","Math","ceil","destroy","invalidateNodes","contentNodes","max","inNodes","colCount","getDefaultNodes","_invalidating","height","calcLastPageHeight","resize","updateRowCount","oldPageCount","getPageHeight","pageExists","inPageIndex","Boolean","getDefaultPageNode","measurePage","innerHTML","offsetHeight","undefined","positionPage","inPos","style","top","repositionPages","nodes","last","y","getPageNodePosition","p","installPage","appendChild","preparePage","inReuseNode","popPage","new_p","createPageNode","invalidatePageNode","pageIndex","renderPage","j","renderRow","removePage","removeRow","destroyPage","pacify","inShouldPacify","pacifying","pacifyTicks","setPacifying","inPacifying","startPacify","startPacifyTicks","Date","getTime","doPacify","endPacify","clientHeight","setStyleHeightPx","needPage","ah","get","min","rowsOnPage","pageHeight","lastPage","lastPageHeight","updateContentHeight","inDh","updatePageHeight","fromBuild","fromAsynRendering","oh","h","ns","viewsNode","parseInt","sizeChange","rowHeightChanged","inRowIndex","floor","document","createElement","attr","position","isLeftToRight","ph","pushPage","shift","findPage","inTop","buildPage","_autoHeight","b","getScrollBottom","getFirstVisibleRow","getLastVisibleRow","processNodeEvent","e","t","target","parentNode","topRowIndex","rowIndex","indexInParent","rowTarget","processEvent","inPageNode","positionPageNode","offsetTop","dojo","forEach","toArray","w","domNode","isDescendant","getPageRow","inPage","getLastPageRow","inPageTop","inScrollTop","row","rows","l","inBottom","inScrollBottom","findTopRow","offset","findScrollTop","inRow","rowPage","r","dummy"],"mappings":"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","file":"../../grid/_Scroller.js","sourcesContent":["define([\r\n\t\"dijit/registry\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/lang\",\r\n\t\"./util\",\r\n\t\"dojo/_base/html\"\r\n], function(dijitRegistry, declare, lang, util, html){\r\n\r\n\tvar indexInParent = function(inNode){\r\n\t\tvar i=0, n, p=inNode.parentNode;\r\n\t\twhile((n = p.childNodes[i++])){\r\n\t\t\tif(n == inNode){\r\n\t\t\t\treturn i - 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t};\r\n\t\r\n\tvar cleanNode = function(inNode){\r\n\t\tif(!inNode){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tdojo.forEach(dijitRegistry.toArray(), function(w){\r\n\t\t\tif(w.domNode && html.isDescendant(w.domNode, inNode, true)){\r\n\t\t\t\tw.destroy();\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tvar getTagName = function(inNodeOrId){\r\n\t\tvar node = html.byId(inNodeOrId);\r\n\t\treturn (node && node.tagName ? node.tagName.toLowerCase() : '');\r\n\t};\r\n\t\r\n\tvar nodeKids = function(inNode, inTag){\r\n\t\tvar result = [];\r\n\t\tvar i=0, n;\r\n\t\twhile((n = inNode.childNodes[i])){\r\n\t\t\ti++;\r\n\t\t\tif(getTagName(n) == inTag){\r\n\t\t\t\tresult.push(n);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\t\r\n\tvar divkids = function(inNode){\r\n\t\treturn nodeKids(inNode, 'div');\r\n\t};\r\n\r\n\treturn declare(\"dojox.grid._Scroller\", null, {\r\n\t\tconstructor: function(inContentNodes){\r\n\t\t\tthis.setContentNodes(inContentNodes);\r\n\t\t\tthis.pageHeights = [];\r\n\t\t\tthis.pageNodes = [];\r\n\t\t\tthis.stack = [];\r\n\t\t},\r\n\t\t// specified\r\n\t\trowCount: 0, // total number of rows to manage\r\n\t\tdefaultRowHeight: 32, // default height of a row\r\n\t\tkeepRows: 100, // maximum number of rows that should exist at one time\r\n\t\tcontentNode: null, // node to contain pages\r\n\t\tscrollboxNode: null, // node that controls scrolling\r\n\t\t// calculated\r\n\t\tdefaultPageHeight: 0, // default height of a page\r\n\t\tkeepPages: 10, // maximum number of pages that should exists at one time\r\n\t\tpageCount: 0,\r\n\t\twindowHeight: 0,\r\n\t\tfirstVisibleRow: 0,\r\n\t\tlastVisibleRow: 0,\r\n\t\taverageRowHeight: 0, // the average height of a row\r\n\t\t// private\r\n\t\tpage: 0,\r\n\t\tpageTop: 0,\r\n\t\t// init\r\n\t\tinit: function(inRowCount, inKeepRows, inRowsPerPage){\r\n\t\t\tswitch(arguments.length){\r\n\t\t\t\tcase 3: this.rowsPerPage = inRowsPerPage;\r\n\t\t\t\tcase 2: this.keepRows = inKeepRows;\r\n\t\t\t\tcase 1: this.rowCount = inRowCount;\r\n\t\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t\tthis.defaultPageHeight = (this.grid.rowHeight > 0 ? this.grid.rowHeight : this.defaultRowHeight) * this.rowsPerPage;\r\n\t\t\tthis.pageCount = this._getPageCount(this.rowCount, this.rowsPerPage);\r\n\t\t\tthis.setKeepInfo(this.keepRows);\r\n\t\t\tthis.invalidate();\r\n\t\t\tif(this.scrollboxNode){\r\n\t\t\t\tthis.scrollboxNode.scrollTop = 0;\r\n\t\t\t\tthis.scroll(0);\r\n\t\t\t\tthis.scrollboxNode.onscroll = lang.hitch(this, 'onscroll');\r\n\t\t\t}\r\n\t\t},\r\n\t\t_getPageCount: function(rowCount, rowsPerPage){\r\n\t\t\treturn rowCount ? (Math.ceil(rowCount / rowsPerPage) || 1) : 0;\r\n\t\t},\r\n\t\tdestroy: function(){\r\n\t\t\tthis.invalidateNodes();\r\n\t\t\tdelete this.contentNodes;\r\n\t\t\tdelete this.contentNode;\r\n\t\t\tdelete this.scrollboxNode;\r\n\t\t},\r\n\t\tsetKeepInfo: function(inKeepRows){\r\n\t\t\tthis.keepRows = inKeepRows;\r\n\t\t\tthis.keepPages = !this.keepRows ? this.keepPages : Math.max(Math.ceil(this.keepRows / this.rowsPerPage), 2);\r\n\t\t},\r\n\t\t// nodes\r\n\t\tsetContentNodes: function(inNodes){\r\n\t\t\tthis.contentNodes = inNodes;\r\n\t\t\tthis.colCount = (this.contentNodes ? this.contentNodes.length : 0);\r\n\t\t\tthis.pageNodes = [];\r\n\t\t\tfor(var i=0; i<this.colCount; i++){\r\n\t\t\t\tthis.pageNodes[i] = [];\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetDefaultNodes: function(){\r\n\t\t\treturn this.pageNodes[0] || [];\r\n\t\t},\r\n\t\t// updating\r\n\t\tinvalidate: function(){\r\n\t\t\tthis._invalidating = true;\r\n\t\t\tthis.invalidateNodes();\r\n\t\t\tthis.pageHeights = [];\r\n\t\t\tthis.height = (this.pageCount ? (this.pageCount - 1)* this.defaultPageHeight + this.calcLastPageHeight() : 0);\r\n\t\t\tthis.resize();\r\n\t\t\tthis._invalidating = false;\r\n\t\t},\r\n\t\tupdateRowCount: function(inRowCount){\r\n\t\t\tthis.invalidateNodes();\r\n\t\t\tthis.rowCount = inRowCount;\r\n\t\t\t// update page count, adjust document height\r\n\t\t\tvar oldPageCount = this.pageCount;\r\n\t\t\tif(oldPageCount === 0){\r\n\t\t\t\t//We want to have at least 1px in height to keep scroller.  Otherwise with an\r\n\t\t\t\t//empty grid you can't scroll to see the header.\r\n\t\t\t\tthis.height = 1;\r\n\t\t\t}\r\n\t\t\tthis.pageCount = this._getPageCount(this.rowCount, this.rowsPerPage);\r\n\t\t\tif(this.pageCount < oldPageCount){\r\n\t\t\t\tfor(var i=oldPageCount-1; i>=this.pageCount; i--){\r\n\t\t\t\t\tthis.height -= this.getPageHeight(i);\r\n\t\t\t\t\tdelete this.pageHeights[i];\r\n\t\t\t\t}\r\n\t\t\t}else if(this.pageCount > oldPageCount){\r\n\t\t\t\tthis.height += this.defaultPageHeight * (this.pageCount - oldPageCount - 1) + this.calcLastPageHeight();\r\n\t\t\t}\r\n\t\t\tthis.resize();\r\n\t\t},\r\n\t\t// implementation for page manager\r\n\t\tpageExists: function(inPageIndex){\r\n\t\t\treturn Boolean(this.getDefaultPageNode(inPageIndex));\r\n\t\t},\r\n\t\tmeasurePage: function(inPageIndex){\r\n\t\t\tif(this.grid.rowHeight){\r\n\t\t\t\treturn ((inPageIndex + 1) * this.rowsPerPage > this.rowCount ?\r\n\t\t\t\t\tthis.rowCount - inPageIndex * this.rowsPerPage :\r\n\t\t\t\t\tthis.rowsPerPage) * this.grid.rowHeight;\r\n\t\t\t\t\t \r\n\t\t\t}\r\n\t\t\tvar n = this.getDefaultPageNode(inPageIndex);\r\n\t\t\treturn (n && n.innerHTML) ? n.offsetHeight : undefined;\r\n\t\t},\r\n\t\tpositionPage: function(inPageIndex, inPos){\r\n\t\t\tfor(var i=0; i<this.colCount; i++){\r\n\t\t\t\tthis.pageNodes[i][inPageIndex].style.top = inPos + 'px';\r\n\t\t\t}\r\n\t\t},\r\n\t\trepositionPages: function(inPageIndex){\r\n\t\t\tvar nodes = this.getDefaultNodes();\r\n\t\t\tvar last = 0;\r\n\r\n\t\t\tfor(var i=0; i<this.stack.length; i++){\r\n\t\t\t\tlast = Math.max(this.stack[i], last);\r\n\t\t\t}\r\n\t\t\t//\r\n\t\t\tvar n = nodes[inPageIndex];\r\n\t\t\tvar y = (n ? this.getPageNodePosition(n) + this.getPageHeight(inPageIndex) : 0);\r\n\t\t\tfor(var p=inPageIndex+1; p<=last; p++){\r\n\t\t\t\tn = nodes[p];\r\n\t\t\t\tif(n){\r\n\t\t\t\t\tif(this.getPageNodePosition(n) == y){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.positionPage(p, y);\r\n\t\t\t\t}\r\n\t\t\t\ty += this.getPageHeight(p);\r\n\t\t\t}\r\n\t\t},\r\n\t\tinstallPage: function(inPageIndex){\r\n\t\t\tfor(var i=0; i<this.colCount; i++){\r\n\t\t\t\tthis.contentNodes[i].appendChild(this.pageNodes[i][inPageIndex]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tpreparePage: function(inPageIndex, inReuseNode){\r\n\t\t\tvar p = (inReuseNode ? this.popPage() : null);\r\n\t\t\tfor(var i=0; i<this.colCount; i++){\r\n\t\t\t\tvar nodes = this.pageNodes[i];\r\n\t\t\t\tvar new_p = (p === null ? this.createPageNode() : this.invalidatePageNode(p, nodes));\r\n\t\t\t\tnew_p.pageIndex = inPageIndex;\r\n\t\t\t\tnodes[inPageIndex] = new_p;\r\n\t\t\t}\r\n\t\t},\r\n\t\t// rendering implementation\r\n\t\trenderPage: function(inPageIndex){\r\n\t\t\tvar nodes = [];\r\n\t\t\tvar i, j;\r\n\t\t\tfor(i=0; i<this.colCount; i++){\r\n\t\t\t\tnodes[i] = this.pageNodes[i][inPageIndex];\r\n\t\t\t}\r\n\t\t\tfor(i=0, j=inPageIndex*this.rowsPerPage; (i<this.rowsPerPage)&&(j<this.rowCount); i++, j++){\r\n\t\t\t\tthis.renderRow(j, nodes);\r\n\t\t\t}\r\n\t\t},\r\n\t\tremovePage: function(inPageIndex){\r\n\t\t\tfor(var i=0, j=inPageIndex*this.rowsPerPage; i<this.rowsPerPage; i++, j++){\r\n\t\t\t\tthis.removeRow(j);\r\n\t\t\t}\r\n\t\t},\r\n\t\tdestroyPage: function(inPageIndex){\r\n\t\t\tfor(var i=0; i<this.colCount; i++){\r\n\t\t\t\tvar n = this.invalidatePageNode(inPageIndex, this.pageNodes[i]);\r\n\t\t\t\tif(n){\r\n\t\t\t\t\thtml.destroy(n);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tpacify: function(inShouldPacify){\r\n\t\t},\r\n\t\t// pacification\r\n\t\tpacifying: false,\r\n\t\tpacifyTicks: 200,\r\n\t\tsetPacifying: function(inPacifying){\r\n\t\t\tif(this.pacifying != inPacifying){\r\n\t\t\t\tthis.pacifying = inPacifying;\r\n\t\t\t\tthis.pacify(this.pacifying);\r\n\t\t\t}\r\n\t\t},\r\n\t\tstartPacify: function(){\r\n\t\t\tthis.startPacifyTicks = new Date().getTime();\r\n\t\t},\r\n\t\tdoPacify: function(){\r\n\t\t\tvar result = (new Date().getTime() - this.startPacifyTicks) > this.pacifyTicks;\r\n\t\t\tthis.setPacifying(true);\r\n\t\t\tthis.startPacify();\r\n\t\t\treturn result;\r\n\t\t},\r\n\t\tendPacify: function(){\r\n\t\t\tthis.setPacifying(false);\r\n\t\t},\r\n\t\t// default sizing implementation\r\n\t\tresize: function(){\r\n\t\t\tif(this.scrollboxNode){\r\n\t\t\t\tthis.windowHeight = this.scrollboxNode.clientHeight;\r\n\t\t\t}\r\n\t\t\tfor(var i=0; i<this.colCount; i++){\r\n\t\t\t\t//We want to have 1px in height min to keep scroller.  Otherwise can't scroll\r\n\t\t\t\t//and see header in empty grid.\r\n\t\t\t\tutil.setStyleHeightPx(this.contentNodes[i], Math.max(1,this.height));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Calculate the average row height and update the defaults (row and page).\r\n\t\t\tvar needPage = (!this._invalidating);\r\n\t\t\tif(!needPage){\r\n\t\t\t\tvar ah = this.grid.get(\"autoHeight\");\r\n\t\t\t\tif(typeof ah == \"number\" && ah <= Math.min(this.rowsPerPage, this.rowCount)){\r\n\t\t\t\t\tneedPage = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(needPage){\r\n\t\t\t\tthis.needPage(this.page, this.pageTop);\r\n\t\t\t}\r\n\t\t\tvar rowsOnPage = (this.page < this.pageCount - 1) ? this.rowsPerPage : ((this.rowCount % this.rowsPerPage) || this.rowsPerPage);\r\n\t\t\tvar pageHeight = this.getPageHeight(this.page);\r\n\t\t\tthis.averageRowHeight = (pageHeight > 0 && rowsOnPage > 0) ? (pageHeight / rowsOnPage) : 0;\r\n\t\t},\r\n\t\tcalcLastPageHeight: function(){\r\n\t\t\tif(!this.pageCount){\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tvar lastPage = this.pageCount - 1;\r\n\t\t\tvar lastPageHeight = ((this.rowCount % this.rowsPerPage)||(this.rowsPerPage)) * this.defaultRowHeight;\r\n\t\t\tthis.pageHeights[lastPage] = lastPageHeight;\r\n\t\t\treturn lastPageHeight;\r\n\t\t},\r\n\t\tupdateContentHeight: function(inDh){\r\n\t\t\tthis.height += inDh;\r\n\t\t\tthis.resize();\r\n\t\t},\r\n\t\tupdatePageHeight: function(inPageIndex, fromBuild, fromAsynRendering){\r\n\t\t\tif(this.pageExists(inPageIndex)){\r\n\t\t\t\tvar oh = this.getPageHeight(inPageIndex);\r\n\t\t\t\tvar h = (this.measurePage(inPageIndex));\r\n\t\t\t\tif(h === undefined){\r\n\t\t\t\t\th = oh;\r\n\t\t\t\t}\r\n\t\t\t\tthis.pageHeights[inPageIndex] = h;\r\n\t\t\t\tif(oh != h){\r\n\t\t\t\t\tthis.updateContentHeight(h - oh);\r\n\t\t\t\t\tvar ah = this.grid.get(\"autoHeight\");\r\n\t\t\t\t\tif((typeof ah == \"number\" && ah > this.rowCount)||(ah === true && !fromBuild)){\r\n\t\t\t\t\t\tif(!fromAsynRendering){\r\n\t\t\t\t\t\t\tthis.grid.sizeChange();\r\n\t\t\t\t\t\t}else{//fix #11101 by using fromAsynRendering to avoid deadlock\r\n\t\t\t\t\t\t\tvar ns = this.grid.viewsNode.style;\r\n\t\t\t\t\t\t\tns.height = parseInt(ns.height) + h - oh + 'px';\r\n\t\t\t\t\t\t\tthis.repositionPages(inPageIndex);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.repositionPages(inPageIndex);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn h;\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\trowHeightChanged: function(inRowIndex, fromAsynRendering){\r\n\t\t\tthis.updatePageHeight(Math.floor(inRowIndex / this.rowsPerPage), false, fromAsynRendering);\r\n\t\t},\r\n\t\t// scroller core\r\n\t\tinvalidateNodes: function(){\r\n\t\t\twhile(this.stack.length){\r\n\t\t\t\tthis.destroyPage(this.popPage());\r\n\t\t\t}\r\n\t\t},\r\n\t\tcreatePageNode: function(){\r\n\t\t\tvar p = document.createElement('div');\r\n\t\t\thtml.attr(p,\"role\",\"presentation\");\r\n\t\t\tp.style.position = 'absolute';\r\n\t\t\t//p.style.width = '100%';\r\n\t\t\tp.style[this.grid.isLeftToRight() ? \"left\" : \"right\"] = '0';\r\n\t\t\treturn p;\r\n\t\t},\r\n\t\tgetPageHeight: function(inPageIndex){\r\n\t\t\tvar ph = this.pageHeights[inPageIndex];\r\n\t\t\treturn (ph !== undefined ? ph : this.defaultPageHeight);\r\n\t\t},\r\n\t\t// FIXME: this is not a stack, it's a FIFO list\r\n\t\tpushPage: function(inPageIndex){\r\n\t\t\treturn this.stack.push(inPageIndex);\r\n\t\t},\r\n\t\tpopPage: function(){\r\n\t\t\treturn this.stack.shift();\r\n\t\t},\r\n\t\tfindPage: function(inTop){\r\n\t\t\tvar i = 0, h = 0;\r\n\t\t\tfor(var ph = 0; i<this.pageCount; i++, h += ph){\r\n\t\t\t\tph = this.getPageHeight(i);\r\n\t\t\t\tif(h + ph >= inTop){\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.page = i;\r\n\t\t\tthis.pageTop = h;\r\n\t\t},\r\n\t\tbuildPage: function(inPageIndex, inReuseNode, inPos){\r\n\t\t\tthis.preparePage(inPageIndex, inReuseNode);\r\n\t\t\tthis.positionPage(inPageIndex, inPos);\r\n\t\t\t// order of operations is key below\r\n\t\t\tthis.installPage(inPageIndex);\r\n\t\t\tthis.renderPage(inPageIndex);\r\n\t\t\t// order of operations is key above\r\n\t\t\tthis.pushPage(inPageIndex);\r\n\t\t},\r\n\t\tneedPage: function(inPageIndex, inPos){\r\n\t\t\tvar h = this.getPageHeight(inPageIndex), oh = h;\r\n\t\t\tif(!this.pageExists(inPageIndex)){\r\n\t\t\t\tthis.buildPage(inPageIndex, (!this.grid._autoHeight/*fix #10543*/ && this.keepPages&&(this.stack.length >= this.keepPages)), inPos);\r\n\t\t\t\th = this.updatePageHeight(inPageIndex, true);\r\n\t\t\t}else{\r\n\t\t\t\tthis.positionPage(inPageIndex, inPos);\r\n\t\t\t}\r\n\t\t\treturn h;\r\n\t\t},\r\n\t\tonscroll: function(){\r\n\t\t\tthis.scroll(this.scrollboxNode.scrollTop);\r\n\t\t},\r\n\t\tscroll: function(inTop){\r\n\t\t\tthis.grid.scrollTop = inTop;\r\n\t\t\tif(this.colCount){\r\n\t\t\t\tthis.startPacify();\r\n\t\t\t\tthis.findPage(inTop);\r\n\t\t\t\tvar h = this.height;\r\n\t\t\t\tvar b = this.getScrollBottom(inTop);\r\n\t\t\t\tfor(var p=this.page, y=this.pageTop; (p<this.pageCount)&&((b<0)||(y<b)); p++){\r\n\t\t\t\t\ty += this.needPage(p, y);\r\n\t\t\t\t}\r\n\t\t\t\tthis.firstVisibleRow = this.getFirstVisibleRow(this.page, this.pageTop, inTop);\r\n\t\t\t\tthis.lastVisibleRow = this.getLastVisibleRow(p - 1, y, b);\r\n\t\t\t\t// indicates some page size has been updated\r\n\t\t\t\tif(h != this.height){\r\n\t\t\t\t\tthis.repositionPages(p-1);\r\n\t\t\t\t}\r\n\t\t\t\tthis.endPacify();\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetScrollBottom: function(inTop){\r\n\t\t\treturn (this.windowHeight >= 0 ? inTop + this.windowHeight : -1);\r\n\t\t},\r\n\t\t// events\r\n\t\tprocessNodeEvent: function(e, inNode){\r\n\t\t\tvar t = e.target;\r\n\t\t\twhile(t && (t != inNode) && t.parentNode && (t.parentNode.parentNode != inNode)){\r\n\t\t\t\tt = t.parentNode;\r\n\t\t\t}\r\n\t\t\tif(!t || !t.parentNode || (t.parentNode.parentNode != inNode)){\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar page = t.parentNode;\r\n\t\t\te.topRowIndex = page.pageIndex * this.rowsPerPage;\r\n\t\t\te.rowIndex = e.topRowIndex + indexInParent(t);\r\n\t\t\te.rowTarget = t;\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\tprocessEvent: function(e){\r\n\t\t\treturn this.processNodeEvent(e, this.contentNode);\r\n\t\t},\r\n\t\t// virtual rendering interface\r\n\t\trenderRow: function(inRowIndex, inPageNode){\r\n\t\t},\r\n\t\tremoveRow: function(inRowIndex){\r\n\t\t},\r\n\t\t// page node operations\r\n\t\tgetDefaultPageNode: function(inPageIndex){\r\n\t\t\treturn this.getDefaultNodes()[inPageIndex];\r\n\t\t},\r\n\t\tpositionPageNode: function(inNode, inPos){\r\n\t\t},\r\n\t\tgetPageNodePosition: function(inNode){\r\n\t\t\treturn inNode.offsetTop;\r\n\t\t},\r\n\t\tinvalidatePageNode: function(inPageIndex, inNodes){\r\n\t\t\tvar p = inNodes[inPageIndex];\r\n\t\t\tif(p){\r\n\t\t\t\tdelete inNodes[inPageIndex];\r\n\t\t\t\tthis.removePage(inPageIndex, p);\r\n\t\t\t\tcleanNode(p);\r\n\t\t\t\tp.innerHTML = '';\r\n\t\t\t}\r\n\t\t\treturn p;\r\n\t\t},\r\n\t\t// scroll control\r\n\t\tgetPageRow: function(inPage){\r\n\t\t\treturn inPage * this.rowsPerPage;\r\n\t\t},\r\n\t\tgetLastPageRow: function(inPage){\r\n\t\t\treturn Math.min(this.rowCount, this.getPageRow(inPage + 1)) - 1;\r\n\t\t},\r\n\t\tgetFirstVisibleRow: function(inPage, inPageTop, inScrollTop){\r\n\t\t\tif(!this.pageExists(inPage)){\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tvar row = this.getPageRow(inPage);\r\n\t\t\tvar nodes = this.getDefaultNodes();\r\n\t\t\tvar rows = divkids(nodes[inPage]);\r\n\t\t\tfor(var i=0,l=rows.length; i<l && inPageTop<inScrollTop; i++, row++){\r\n\t\t\t\tinPageTop += rows[i].offsetHeight;\r\n\t\t\t}\r\n\t\t\treturn (row ? row - 1 : row);\r\n\t\t},\r\n\t\tgetLastVisibleRow: function(inPage, inBottom, inScrollBottom){\r\n\t\t\tif(!this.pageExists(inPage)){\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tvar nodes = this.getDefaultNodes();\r\n\t\t\tvar row = this.getLastPageRow(inPage);\r\n\t\t\tvar rows = divkids(nodes[inPage]);\r\n\t\t\tfor(var i=rows.length-1; i>=0 && inBottom>inScrollBottom; i--, row--){\r\n\t\t\t\tinBottom -= rows[i].offsetHeight;\r\n\t\t\t}\r\n\t\t\treturn row + 1;\r\n\t\t},\r\n\t\tfindTopRow: function(inScrollTop){\r\n\t\t\tvar nodes = this.getDefaultNodes();\r\n\t\t\tvar rows = divkids(nodes[this.page]);\r\n\t\t\tfor(var i=0,l=rows.length,t=this.pageTop,h; i<l; i++){\r\n\t\t\t\th = rows[i].offsetHeight;\r\n\t\t\t\tt += h;\r\n\t\t\t\tif(t >= inScrollTop){\r\n\t\t\t\t\tthis.offset = h - (t - inScrollTop);\r\n\t\t\t\t\treturn i + this.page * this.rowsPerPage;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn -1;\r\n\t\t},\r\n\t\tfindScrollTop: function(inRow){\r\n\t\t\tvar rowPage = Math.floor(inRow / this.rowsPerPage);\r\n\t\t\tvar t = 0;\r\n\t\t\tvar i, l;\r\n\t\t\tfor(i=0; i<rowPage; i++){\r\n\t\t\t\tt += this.getPageHeight(i);\r\n\t\t\t}\r\n\t\t\tthis.pageTop = t;\r\n\t\t\tthis.page = rowPage;//fix #10543\r\n\t\t\tthis.needPage(rowPage, this.pageTop);\r\n\r\n\t\t\tvar nodes = this.getDefaultNodes();\r\n\t\t\tvar rows = divkids(nodes[rowPage]);\r\n\t\t\tvar r = inRow - this.rowsPerPage * rowPage;\r\n\t\t\tfor(i=0,l=rows.length; i<l && i<r; i++){\r\n\t\t\t\tt += rows[i].offsetHeight;\r\n\t\t\t}\r\n\t\t\treturn t;\r\n\t\t},\r\n\t\tdummy: 0\r\n\t});\r\n});\r\n"]}