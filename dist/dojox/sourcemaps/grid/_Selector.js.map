{"version":3,"sources":["grid/_Selector.js"],"names":["define","dojox","declare","lang","query","domClass","Selection","_View","_Builder","util","_InputSelectorHeaderBuilder","grid","extend","view","_HeaderBuilder","call","this","prototype","generateHtml","w","contentWidth","selectedCount","selection","getSelectedCount","rowCount","doclick","e","_selectionChanging","deselectAll","selectRange","onSelectionChanged","_SelectorContentBuilder","_ContentBuilder","inDataIndex","inRowIndex","getCellContent","findTarget","apply","arguments","domouseover","onMouseOverRow","domouseout","isIntraRowEvent","onMouseOutRow","idx","rowIndex","selected","isSelected","mode","deselect","select","addToSelection","_InputSelectorContentBuilder","v","type","inputType","_Selector","selectionMode","defaultWidth","noscroll","padBorderWidth","_contentBuilderClass","postCreate","inherited","connect","buildRendering","scrollboxNode","style","overflow","getWidth","viewWidth","resize","adaptHeight","setStructure","s","adaptWidth","contentNode","offsetWidth","doStyleRowNode","inRowNode","n","rows","isOver","push","className","join","onSelected","inIndex","updateRow","onDeselected","_headerBuilderClass","funnelEvents","headerNode","content","header","isLeftToRight","headerNodeContainer","width","visibility","renderHeader","_updateVisibility","inputDiv","g","allItemsSelected","toggle"],"mappings":"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","file":"../../grid/_Selector.js","sourcesContent":["define([\r\n\t\"../main\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/query\",\r\n\t\"dojo/dom-class\",\r\n\t\"./Selection\",\r\n\t\"./_View\",\r\n\t\"./_Builder\",\r\n\t\"./util\"\r\n], function(dojox, declare, lang, query, domClass, Selection, _View, _Builder, util){\r\n\t\r\n\tvar _InputSelectorHeaderBuilder = dojox.grid._InputSelectorHeaderBuilder = lang.extend(function(view){\r\n\t\t_Builder._HeaderBuilder.call(this, view);\r\n\t},_Builder._HeaderBuilder.prototype,{\r\n\t\tgenerateHtml: function(){\r\n\t\t\tvar w = this.view.contentWidth || 0;\r\n\t\t\tvar selectedCount = this.view.grid.selection.getSelectedCount();\r\n\t\t\tvar checked = (selectedCount && selectedCount == this.view.grid.rowCount) ? ' dijitCheckBoxChecked dijitChecked' : '';\r\n\t\t\treturn '<table style=\"width:' + w + 'px;\" ' +\r\n\t\t\t\t'border=\"0\" cellspacing=\"0\" cellpadding=\"0\" ' +\r\n\t\t\t\t'role=\"presentation\"><tr><th style=\"text-align: center;\">' +\r\n\t\t\t\t'<div class=\"dojoxGridCheckSelector dijitReset dijitInline dijitCheckBox' + checked + '\"></div></th></tr></table>';\r\n\t\t},\r\n\t\tdoclick: function(e){\r\n\t\t\tvar selectedCount = this.view.grid.selection.getSelectedCount();\r\n\r\n\t\t\tthis.view._selectionChanging = true;\r\n\t\t\tif(selectedCount==this.view.grid.rowCount){\r\n\t\t\t\tthis.view.grid.selection.deselectAll();\r\n\t\t\t}else{\r\n\t\t\t\tthis.view.grid.selection.selectRange(0, this.view.grid.rowCount-1);\r\n\t\t\t}\r\n\t\t\tthis.view._selectionChanging = false;\r\n\t\t\tthis.view.onSelectionChanged();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t});\r\n\r\n\tvar _SelectorContentBuilder = dojox.grid._SelectorContentBuilder = lang.extend(function(view){\r\n\t\t_Builder._ContentBuilder.call(this, view);\r\n\t},_Builder._ContentBuilder.prototype,{\r\n\t\tgenerateHtml: function(inDataIndex, inRowIndex){\r\n\t\t\tvar w = this.view.contentWidth || 0;\r\n\t\t\treturn '<table class=\"dojoxGridRowbarTable\" style=\"width:' + w + 'px;\" border=\"0\" ' +\r\n\t\t\t\t'cellspacing=\"0\" cellpadding=\"0\" role=\"presentation\"><tr>' +\r\n\t\t\t\t'<td  style=\"text-align: center;\" class=\"dojoxGridRowbarInner\">' + this.getCellContent(inRowIndex) + '</td></tr></table>';\r\n\t\t},\r\n\t\tgetCellContent: function(inRowIndex){\r\n\t\t\treturn '&nbsp;';\r\n\t\t},\r\n\t\tfindTarget: function(){\r\n\t\t\tvar t = _Builder._ContentBuilder.prototype.findTarget.apply(this, arguments);\r\n\t\t\treturn t;\r\n\t\t},\r\n\t\tdomouseover: function(e){\r\n\t\t\tthis.view.grid.onMouseOverRow(e);\r\n\t\t},\r\n\t\tdomouseout: function(e){\r\n\t\t\tif(!this.isIntraRowEvent(e)){\r\n\t\t\t\tthis.view.grid.onMouseOutRow(e);\r\n\t\t\t}\r\n\t\t},\r\n\t\tdoclick: function(e){\r\n\t\t\tvar idx = e.rowIndex;\r\n\t\t\tvar selected = this.view.grid.selection.isSelected(idx);\r\n\t\t\tvar mode = this.view.grid.selection.mode;\r\n\r\n\t\t\tif(!selected){\r\n\t\t\t\tif(mode == 'single'){\r\n\t\t\t\t\tthis.view.grid.selection.select(idx);\r\n\t\t\t\t}else if(mode != 'none'){\r\n\t\t\t\t\tthis.view.grid.selection.addToSelection(idx);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.view.grid.selection.deselect(idx);\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t});\r\n\r\n\tvar _InputSelectorContentBuilder = dojox.grid._InputSelectorContentBuilder = lang.extend(function(view){\r\n\t\t_SelectorContentBuilder.call(this, view);\r\n\t},_SelectorContentBuilder.prototype,{\r\n\t\tgetCellContent: function(rowIndex){\r\n\t\t\tvar v = this.view;\r\n\t\t\tvar type = v.inputType == \"checkbox\" ? \"CheckBox\" : \"Radio\";\r\n\t\t\tvar checked = !!v.grid.selection.isSelected(rowIndex) ? ' dijit' + type + 'Checked dijitChecked' : '';\r\n\t\t\treturn '<div class=\"dojoxGridCheckSelector dijitReset dijitInline dijit' + type + checked + '\"></div>';\r\n\t\t}\r\n\t});\r\n\r\n\tvar _Selector = declare(\"dojox.grid._Selector\", _View, {\r\n\t\tinputType: '',\r\n\t\tselectionMode: '',\r\n\r\n\t\t// summary:\r\n\t\t//\tCustom grid view. If used in a grid structure, provides a small selectable region for grid rows.\r\n\t\tdefaultWidth: \"2em\",\r\n\t\tnoscroll: true,\r\n\t\tpadBorderWidth: 2,\r\n\r\n\t\t_contentBuilderClass: _SelectorContentBuilder,\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tif(this.selectionMode){\r\n\t\t\t\tthis.grid.selection.mode = this.selectionMode;\r\n\t\t\t}\r\n\t\t\tthis.connect(this.grid.selection, 'onSelected', 'onSelected');\r\n\t\t\tthis.connect(this.grid.selection, 'onDeselected', 'onDeselected');\r\n\t\t},\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.scrollboxNode.style.overflow = \"hidden\";\r\n\t\t},\r\n\t\tgetWidth: function(){\r\n\t\t\treturn this.viewWidth || this.defaultWidth;\r\n\t\t},\r\n\t\tresize: function(){\r\n\t\t\tthis.adaptHeight();\r\n\t\t},\r\n\t\tsetStructure: function(s){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(s.defaultWidth){\r\n\t\t\t\tthis.defaultWidth = s.defaultWidth;\r\n\t\t\t}\r\n\t\t},\r\n\t\tadaptWidth: function(){\r\n\t\t\t// Only calculate this here - rather than every call to buildRowContent\r\n\t\t\tif(!(\"contentWidth\" in this) && this.contentNode){\r\n\t\t\t\tthis.contentWidth = this.contentNode.offsetWidth - this.padBorderWidth;\r\n\t\t\t}\r\n\t\t},\r\n\t\t// styling\r\n\t\tdoStyleRowNode: function(inRowIndex, inRowNode){\r\n\t\t\tvar n = [ \"dojoxGridRowbar dojoxGridNonNormalizedCell\" ];\r\n\t\t\tif(this.grid.rows.isOver(inRowIndex)){\r\n\t\t\t\tn.push(\"dojoxGridRowbarOver\");\r\n\t\t\t}\r\n\t\t\tif(this.grid.selection.isSelected(inRowIndex)){\r\n\t\t\t\tn.push(\"dojoxGridRowbarSelected\");\r\n\t\t\t}\r\n\t\t\tinRowNode.className = n.join(\" \");\r\n\t\t},\r\n\t\t// event handlers\r\n\t\tonSelected: function(inIndex){\r\n\t\t\tthis.grid.updateRow(inIndex);\r\n\t\t},\r\n\t\tonDeselected: function(inIndex){\r\n\t\t\tthis.grid.updateRow(inIndex);\r\n\t\t}\r\n\t});\r\n\tif(!_View.prototype._headerBuilderClass &&\r\n\t\t!_View.prototype._contentBuilderClass){\r\n\t\t_Selector.prototype.postCreate = function(){\r\n\t\t\tthis.connect(this.scrollboxNode,\"onscroll\",\"doscroll\");\r\n\t\t\tutil.funnelEvents(this.contentNode, this, \"doContentEvent\", [ 'mouseover', 'mouseout', 'click', 'dblclick', 'contextmenu', 'mousedown' ]);\r\n\t\t\tutil.funnelEvents(this.headerNode, this, \"doHeaderEvent\", [ 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'click', 'contextmenu' ]);\r\n\t\t\tif(this._contentBuilderClass){\r\n\t\t\t\tthis.content = new this._contentBuilderClass(this);\r\n\t\t\t}else{\r\n\t\t\t\tthis.content = new _Builder._ContentBuilder(this);\r\n\t\t\t}\r\n\t\t\tif(this._headerBuilderClass){\r\n\t\t\t\tthis.header = new this._headerBuilderClass(this);\r\n\t\t\t}else{\r\n\t\t\t\tthis.header = new _Builder._HeaderBuilder(this);\r\n\t\t\t}\r\n\t\t\t//BiDi: in RTL case, style width='9000em' causes scrolling problem in head node\r\n\t\t\tif(!this.grid.isLeftToRight()){\r\n\t\t\t\tthis.headerNodeContainer.style.width = \"\";\r\n\t\t\t}\r\n\t\t\tthis.connect(this.grid.selection, 'onSelected', 'onSelected');\r\n\t\t\tthis.connect(this.grid.selection, 'onDeselected', 'onDeselected');\r\n\t\t};\r\n\t}\r\n\r\n\tdeclare(\"dojox.grid._RadioSelector\", _Selector, {\r\n\t\tinputType: 'radio',\r\n\t\tselectionMode: 'single',\r\n\r\n\t\t_contentBuilderClass: _InputSelectorContentBuilder,\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.headerNode.style.visibility = \"hidden\";\r\n\t\t},\r\n\t\t\r\n\t\trenderHeader: function(){}\r\n\t});\r\n\r\n\tdeclare(\"dojox.grid._CheckBoxSelector\", _Selector, {\r\n\t\tinputType: 'checkbox',\r\n\t\t_headerBuilderClass: _InputSelectorHeaderBuilder,\r\n\t\t_contentBuilderClass: _InputSelectorContentBuilder,\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.connect(this.grid, 'onSelectionChanged', 'onSelectionChanged');\r\n\t\t\tthis.connect(this.grid, 'updateRowCount', '_updateVisibility');\r\n\t\t},\r\n\t\trenderHeader: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._updateVisibility(this.grid.rowCount);\r\n\t\t},\r\n\t\t_updateVisibility: function(rowCount){\r\n\t\t\tthis.headerNode.style.visibility = rowCount ? \"\" : \"hidden\";\r\n\t\t},\r\n\t\tonSelectionChanged: function(){\r\n\t\t\tif(this._selectionChanging){ return; }\r\n\t\t\tvar inputDiv = query('.dojoxGridCheckSelector', this.headerNode)[0];\r\n\t\t\tvar g = this.grid;\r\n\t\t\tvar s = (g.rowCount && g.rowCount == g.selection.getSelectedCount());\r\n\t\t\tg.allItemsSelected = s||false;\r\n\t\t\tdomClass.toggle(inputDiv, \"dijitChecked\", g.allItemsSelected);\r\n\t\t\tdomClass.toggle(inputDiv, \"dijitCheckBoxChecked\", g.allItemsSelected);\r\n\t\t}\r\n\t});\r\n\t\r\n\treturn _Selector;\r\n\r\n});"]}