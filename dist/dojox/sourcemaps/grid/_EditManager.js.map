{"version":3,"sources":["grid/_EditManager.js"],"names":["define","lang","array","declare","connect","has","util","constructor","inGrid","this","grid","connections","document","body","hitch","push","info","destroy","forEach","disconnect","cellFocus","inCell","inRowIndex","singleClickEdit","isEditRow","setEditCell","apply","isEditing","editable","alwaysEditing","_focusEditor","rowClick","e","rowIndex","styleRow","inRow","index","customClasses","dispatchEvent","c","cell","ed","dispatch","undefined","isEditCell","inCellIndex","canEdit","start","fire","focusEditor","_boomerangWindow","_shouldCatchBoomerang","_catchBoomerang","Date","getTime","_boomerangFocus","focus","focusGrid","_doCatchBoomerang","inEditing","_isValidInput","beginUpdate","editorApply","applyRowEdit","updateRow","doStartEdit","endUpdate","_editorDo","inMethod","editorCancel","applyCellEdit","inValue","doApplyCellEdit","field","doApplyEdit","cancel","save","inView","view","restore","w","widget","isValid","focused","_onPreRender","value","getValue"],"mappings":"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","file":"../../grid/_EditManager.js","sourcesContent":["define([\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/connect\",\r\n\t\"dojo/_base/sniff\",\r\n\t\"./util\"\r\n], function(lang, array, declare, connect, has, util){\r\n\r\nreturn declare(\"dojox.grid._EditManager\", null, {\r\n\t// summary:\r\n\t//\t\tControls grid cell editing process. Owned by grid and used internally for editing.\r\n\tconstructor: function(inGrid){\r\n\t\t// inGrid: dojox.Grid\r\n\t\t//\t\tThe dojox.Grid this editor should be attached to\r\n\t\tthis.grid = inGrid;\r\n\t\tthis.connections = !has('ie') ? [] : [connect.connect(document.body, \"onfocus\", lang.hitch(this, \"_boomerangFocus\"))];\r\n\t\tthis.connections.push(connect.connect(this.grid, 'onBlur', this, 'apply'));\r\n\t\tthis.connections.push(connect.connect(this.grid, 'prerender', this, '_onPreRender'));\r\n\t},\r\n\t\r\n\tinfo: {},\r\n\r\n\tdestroy: function(){\r\n\t\tarray.forEach(this.connections, connect.disconnect);\r\n\t},\r\n\r\n\tcellFocus: function(inCell, inRowIndex){\r\n\t\t// summary:\r\n\t\t//\t\tInvoke editing when cell is focused\r\n\t\t// inCell: cell object\r\n\t\t//\t\tGrid cell object\r\n\t\t// inRowIndex: Integer\r\n\t\t//\t\tGrid row index\r\n\t\tif(this.grid.singleClickEdit || this.isEditRow(inRowIndex)){\r\n\t\t\t// if same row or quick editing, edit\r\n\t\t\tthis.setEditCell(inCell, inRowIndex);\r\n\t\t}else{\r\n\t\t\t// otherwise, apply any pending row edits\r\n\t\t\tthis.apply();\r\n\t\t}\r\n\t\t// if dynamic or static editing...\r\n\t\tif(this.isEditing() || (inCell && inCell.editable && inCell.alwaysEditing)){\r\n\t\t\t// let the editor focus itself as needed\r\n\t\t\tthis._focusEditor(inCell, inRowIndex);\r\n\t\t}\r\n\t},\r\n\r\n\trowClick: function(e){\r\n\t\tif(this.isEditing() && !this.isEditRow(e.rowIndex)){\r\n\t\t\tthis.apply();\r\n\t\t}\r\n\t},\r\n\r\n\tstyleRow: function(inRow){\r\n\t\tif(inRow.index == this.info.rowIndex){\r\n\t\t\tinRow.customClasses += ' dojoxGridRowEditing';\r\n\t\t}\r\n\t},\r\n\r\n\tdispatchEvent: function(e){\r\n\t\tvar c = e.cell, ed = (c && c[\"editable\"]) ? c : 0;\r\n\t\treturn ed && ed.dispatchEvent(e.dispatch, e);\r\n\t},\r\n\r\n\t// Editing\r\n\tisEditing: function(){\r\n\t\t// summary:\r\n\t\t//\t\tIndicates editing state of the grid.\r\n\t\t// returns: Boolean\r\n\t\t//\t \tTrue if grid is actively editing\r\n\t\treturn this.info.rowIndex !== undefined;\r\n\t},\r\n\r\n\tisEditCell: function(inRowIndex, inCellIndex){\r\n\t\t// summary:\r\n\t\t//\t\tIndicates if the given cell is being edited.\r\n\t\t// inRowIndex: Integer\r\n\t\t//\t\tGrid row index\r\n\t\t// inCellIndex: Integer\r\n\t\t//\t\tGrid cell index\r\n\t\t// returns: Boolean\r\n\t\t//\t \tTrue if given cell is being edited\r\n\t\treturn (this.info.rowIndex === inRowIndex) && (this.info.cell.index == inCellIndex);\r\n\t},\r\n\r\n\tisEditRow: function(inRowIndex){\r\n\t\t// summary:\r\n\t\t//\t\tIndicates if the given row is being edited.\r\n\t\t// inRowIndex: Integer\r\n\t\t//\t\tGrid row index\r\n\t\t// returns: Boolean\r\n\t\t//\t \tTrue if given row is being edited\r\n\t\treturn this.info.rowIndex === inRowIndex;\r\n\t},\r\n\r\n\tsetEditCell: function(inCell, inRowIndex){\r\n\t\t// summary:\r\n\t\t//\t\tSet the given cell to be edited\r\n\t\t// inRowIndex: Integer\r\n\t\t//\t\tGrid row index\r\n\t\t// inCell: Object\r\n\t\t//\t\tGrid cell object\r\n\t\tif(!this.isEditCell(inRowIndex, inCell.index) && this.grid.canEdit && this.grid.canEdit(inCell, inRowIndex)){\r\n\t\t\tthis.start(inCell, inRowIndex, this.isEditRow(inRowIndex) || inCell.editable);\r\n\t\t}\r\n\t},\r\n\r\n\t_focusEditor: function(inCell, inRowIndex){\r\n\t\tutil.fire(inCell, \"focus\", [inRowIndex]);\r\n\t},\r\n\r\n\tfocusEditor: function(){\r\n\t\tif(this.isEditing()){\r\n\t\t\tthis._focusEditor(this.info.cell, this.info.rowIndex);\r\n\t\t}\r\n\t},\r\n\r\n\t// implement fix for focus boomerang effect on IE\r\n\t_boomerangWindow: 500,\r\n\t_shouldCatchBoomerang: function(){\r\n\t\treturn this._catchBoomerang > new Date().getTime();\r\n\t},\r\n\t_boomerangFocus: function(){\r\n\t\t//console.log(\"_boomerangFocus\");\r\n\t\tif(this._shouldCatchBoomerang()){\r\n\t\t\t// make sure we don't utterly lose focus\r\n\t\t\tthis.grid.focus.focusGrid();\r\n\t\t\t// let the editor focus itself as needed\r\n\t\t\tthis.focusEditor();\r\n\t\t\t// only catch once\r\n\t\t\tthis._catchBoomerang = 0;\r\n\t\t}\r\n\t},\r\n\t_doCatchBoomerang: function(){\r\n\t\t// give ourselves a few ms to boomerang IE focus effects\r\n\t\tif(has('ie')){this._catchBoomerang = new Date().getTime() + this._boomerangWindow;}\r\n\t},\r\n\t// end boomerang fix API\r\n\r\n\tstart: function(inCell, inRowIndex, inEditing){\r\n\t\tif(!this._isValidInput()){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.grid.beginUpdate();\r\n\t\tthis.editorApply();\r\n\t\tif(this.isEditing() && !this.isEditRow(inRowIndex)){\r\n\t\t\tthis.applyRowEdit();\r\n\t\t\tthis.grid.updateRow(inRowIndex);\r\n\t\t}\r\n\t\tif(inEditing){\r\n\t\t\tthis.info = { cell: inCell, rowIndex: inRowIndex };\r\n\t\t\tthis.grid.doStartEdit(inCell, inRowIndex);\r\n\t\t\tthis.grid.updateRow(inRowIndex);\r\n\t\t}else{\r\n\t\t\tthis.info = {};\r\n\t\t}\r\n\t\tthis.grid.endUpdate();\r\n\t\t// make sure we don't utterly lose focus\r\n\t\tthis.grid.focus.focusGrid();\r\n\t\t// let the editor focus itself as needed\r\n\t\tthis._focusEditor(inCell, inRowIndex);\r\n\t\t// give ourselves a few ms to boomerang IE focus effects\r\n\t\tthis._doCatchBoomerang();\r\n\t},\r\n\r\n\t_editorDo: function(inMethod){\r\n\t\tvar c = this.info.cell;\r\n\t\t//c && c.editor && c.editor[inMethod](c, this.info.rowIndex);\r\n\t\tif(c && c.editable){\r\n\t\t\tc[inMethod](this.info.rowIndex);\r\n\t\t}\r\n\t},\r\n\r\n\teditorApply: function(){\r\n\t\tthis._editorDo(\"apply\");\r\n\t},\r\n\r\n\teditorCancel: function(){\r\n\t\tthis._editorDo(\"cancel\");\r\n\t},\r\n\r\n\tapplyCellEdit: function(inValue, inCell, inRowIndex){\r\n\t\tif(this.grid.canEdit(inCell, inRowIndex)){\r\n\t\t\tthis.grid.doApplyCellEdit(inValue, inRowIndex, inCell.field);\r\n\t\t}\r\n\t},\r\n\r\n\tapplyRowEdit: function(){\r\n\t\tthis.grid.doApplyEdit(this.info.rowIndex, this.info.cell.field);\r\n\t},\r\n\r\n\tapply: function(){\r\n\t\t// summary:\r\n\t\t//\t\tApply a grid edit\r\n\t\tif(this.isEditing() && this._isValidInput()){\r\n\t\t\tthis.grid.beginUpdate();\r\n\t\t\tthis.editorApply();\r\n\t\t\tthis.applyRowEdit();\r\n\t\t\tthis.info = {};\r\n\t\t\tthis.grid.endUpdate();\r\n\t\t\tthis.grid.focus.focusGrid();\r\n\t\t\tthis._doCatchBoomerang();\r\n\t\t}\r\n\t},\r\n\r\n\tcancel: function(){\r\n\t\t// summary:\r\n\t\t//\t\tCancel a grid edit\r\n\t\tif(this.isEditing()){\r\n\t\t\tthis.grid.beginUpdate();\r\n\t\t\tthis.editorCancel();\r\n\t\t\tthis.info = {};\r\n\t\t\tthis.grid.endUpdate();\r\n\t\t\tthis.grid.focus.focusGrid();\r\n\t\t\tthis._doCatchBoomerang();\r\n\t\t}\r\n\t},\r\n\r\n\tsave: function(inRowIndex, inView){\r\n\t\t// summary:\r\n\t\t//\t\tSave the grid editing state\r\n\t\t// inRowIndex: Integer\r\n\t\t//\t\tGrid row index\r\n\t\t// inView: Object\r\n\t\t//\t\tGrid view\r\n\t\tvar c = this.info.cell;\r\n\t\tif(this.isEditRow(inRowIndex) && (!inView || c.view==inView) && c.editable){\r\n\t\t\tc.save(c, this.info.rowIndex);\r\n\t\t}\r\n\t},\r\n\r\n\trestore: function(inView, inRowIndex){\r\n\t\t// summary:\r\n\t\t//\t\tRestores the grid editing state\r\n\t\t// inRowIndex: Integer\r\n\t\t//\t\tGrid row index\r\n\t\t// inView: Object\r\n\t\t//\t\tGrid view\r\n\t\tvar c = this.info.cell;\r\n\t\tif(this.isEditRow(inRowIndex) && c.view == inView && c.editable){\r\n\t\t\tc.restore(this.info.rowIndex);\r\n\t\t}\r\n\t},\r\n\t\r\n\t_isValidInput: function(){\r\n\t\tvar w = (this.info.cell || {}).widget;\t\t\r\n\t\tif(!w || !w.isValid){\r\n\t\t\t//no validation needed\r\n\t\t\treturn true;\r\n\t\t}\t\t\r\n\t\tw.focused = true;\r\n\t\treturn w.isValid(true);\r\n\t},\r\n\t\r\n\t_onPreRender: function(){\r\n\t\tif(this.isEditing()){\r\n\t\t\t//cache the current editing value before render\r\n\t\t\tthis.info.value = this.info.cell.getValue();\r\n\t\t}\r\n\t}\r\n});\r\n});"]}