{"version":3,"sources":["grid/TreeSelection.js"],"names":["define","dojox","declare","array","lang","domAttr","query","DataSelection","setMode","mode","this","selected","sorted_sel","sorted_ltos","sorted_stol","prototype","call","addToSelection","inItemOrIndex","idx","grid","getItemIndex","selectedIndex","onCanSelect","rowNodes","domNode","length","set","_beginUpdate","_insertSortedSelection","onSelected","_endUpdate","deselect","onCanDeselect","_removeSortedSelection","onDeselected","getSelected","result","i","push","getItem","getSelectedCount","c","_bsearch","v","m","o","h","l","cmp","_comparePaths","a","b","index","String","s","sl","ss","lpath","split","map","item","parseInt","splice","unshift","getFirstSelected","fpath","getNextSelected","inPrev","prevPath","_range","inFrom","inTo","func","isString","layout","cells","store","TreePath","compare","tmp","inFromStr","_str","inToStr","p","next"],"mappings":"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","file":"../../grid/TreeSelection.js","sourcesContent":["define([\r\n\t\"../main\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/dom-attr\",\r\n\t\"dojo/query\",\r\n\t\"./DataSelection\"\r\n], function(dojox, declare, array, lang, domAttr, query, DataSelection){\r\n\r\nreturn declare(\"dojox.grid.TreeSelection\", DataSelection, {\r\n\tsetMode: function(mode){\r\n\t\tthis.selected = {};\r\n\t\tthis.sorted_sel = [];\r\n\t\tthis.sorted_ltos = {};\r\n\t\tthis.sorted_stol = {};\r\n\t\tDataSelection.prototype.setMode.call(this, mode);\r\n\t},\r\n\taddToSelection: function(inItemOrIndex){\r\n\t\tif(this.mode == 'none'){ return; }\r\n\t\tvar idx = null;\r\n\t\tif(typeof inItemOrIndex == \"number\" || typeof inItemOrIndex == \"string\"){\r\n\t\t\tidx = inItemOrIndex;\r\n\t\t}else{\r\n\t\t\tidx = this.grid.getItemIndex(inItemOrIndex);\r\n\t\t}\r\n\t\tif(this.selected[idx]){\r\n\t\t\tthis.selectedIndex = idx;\r\n\t\t}else{\r\n\t\t\tif(this.onCanSelect(idx) !== false){\r\n\t\t\t\tthis.selectedIndex = idx;\r\n\t\t\t\tvar rowNodes = query(\"tr[dojoxTreeGridPath='\" + idx + \"']\", this.grid.domNode);\r\n\t\t\t\tif(rowNodes.length){\r\n\t\t\t\t\tdomAttr.set(rowNodes[0], \"aria-selected\", \"true\");\r\n\t\t\t\t}\r\n\t\t\t\tthis._beginUpdate();\r\n\t\t\t\tthis.selected[idx] = true;\r\n\t\t\t\tthis._insertSortedSelection(idx);\r\n\t\t\t\t//this.grid.onSelected(idx);\r\n\t\t\t\tthis.onSelected(idx);\r\n\t\t\t\t//this.onSetSelected(idx, true);\r\n\t\t\t\tthis._endUpdate();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tdeselect: function(inItemOrIndex){\r\n\t\tif(this.mode == 'none'){ return; }\r\n\t\tvar idx = null;\r\n\t\tif(typeof inItemOrIndex == \"number\" || typeof inItemOrIndex == \"string\"){\r\n\t\t\tidx = inItemOrIndex;\r\n\t\t}else{\r\n\t\t\tidx = this.grid.getItemIndex(inItemOrIndex);\r\n\t\t}\r\n\t\tif(this.selectedIndex == idx){\r\n\t\t\tthis.selectedIndex = -1;\r\n\t\t}\r\n\t\tif(this.selected[idx]){\r\n\t\t\tif(this.onCanDeselect(idx) === false){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar rowNodes = query(\"tr[dojoxTreeGridPath='\" + idx + \"']\", this.grid.domNode);\r\n\t\t\tif(rowNodes.length){\r\n\t\t\t\tdomAttr.set(rowNodes[0], \"aria-selected\", \"false\");\r\n\t\t\t}\r\n\t\t\tthis._beginUpdate();\r\n\t\t\tdelete this.selected[idx];\r\n\t\t\tthis._removeSortedSelection(idx);\r\n\t\t\t//this.grid.onDeselected(idx);\r\n\t\t\tthis.onDeselected(idx);\r\n\t\t\t//this.onSetSelected(idx, false);\r\n\t\t\tthis._endUpdate();\r\n\t\t}\r\n\t},\r\n\tgetSelected: function(){\r\n\t\tvar result = [];\r\n\t\tfor(var i in this.selected){\r\n\t\t\tif(this.selected[i]){\r\n\t\t\t\tresult.push(this.grid.getItem(i));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tgetSelectedCount: function(){\r\n\t\tvar c = 0;\r\n\t\tfor(var i in this.selected){\r\n\t\t\tif(this.selected[i]){\r\n\t\t\t\tc++;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn c;\r\n\t},\r\n\t_bsearch: function(v){\r\n\t\tvar o = this.sorted_sel;\r\n\t\tvar h = o.length - 1, l = 0, m;\r\n\t\twhile(l<=h){\r\n\t\t\tvar cmp = this._comparePaths(o[m = (l + h) >> 1], v);\r\n\t\t\tif(cmp < 0){ l = m + 1; continue; }\r\n\t\t\tif(cmp > 0){ h = m - 1; continue; }\r\n\t\t\treturn m;\r\n\t\t}\r\n\t\treturn cmp < 0 ? m - cmp : m;\r\n\t},\r\n\t_comparePaths: function(a, b){\r\n\t\tfor(var i=0, l=(a.length < b.length ? a.length : b.length); i<l; i++){\r\n\t\t\tif(a[i]<b[i]){ return -1; }\r\n\t\t\tif(a[i]>b[i]){ return 1; }\r\n\t\t}\r\n\t\tif(a.length<b.length){ return -1; }\r\n\t\tif(a.length>b.length){ return 1; }\r\n\t\treturn 0;\r\n\t},\r\n\t_insertSortedSelection: function(index){\r\n\t\tindex = String(index);\r\n\t\tvar s = this.sorted_sel;\r\n\t\tvar sl = this.sorted_ltos;\r\n\t\tvar ss = this.sorted_stol;\r\n\r\n\t\tvar lpath = index.split('/');\r\n\t\tlpath = array.map(lpath, function(item){ return parseInt(item, 10); });\r\n\t\tsl[lpath] = index;\r\n\t\tss[index] = lpath;\r\n\r\n\t\tif(s.length === 0){\r\n\t\t\ts.push(lpath);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(s.length==1){\r\n\t\t\tvar cmp = this._comparePaths(s[0], lpath);\r\n\t\t\tif(cmp==1){ s.unshift(lpath); }\r\n\t\t\telse{ s.push(lpath); }\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar idx = this._bsearch(lpath);\r\n\t\tthis.sorted_sel.splice(idx, 0, lpath);\r\n\t},\r\n\t_removeSortedSelection: function(index){\r\n\t\tindex = String(index);\r\n\t\tvar s = this.sorted_sel;\r\n\t\tvar sl = this.sorted_ltos;\r\n\t\tvar ss = this.sorted_stol;\r\n\r\n\t\tif(s.length === 0){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar lpath = ss[index];\r\n\t\tif(!lpath){ return; }\r\n\r\n\t\tvar idx = this._bsearch(lpath);\r\n\t\tif(idx > -1){\r\n\t\t\tdelete sl[lpath];\r\n\t\t\tdelete ss[index];\r\n\t\t\ts.splice(idx, 1);\r\n\t\t}\r\n\t},\r\n\tgetFirstSelected: function(){\r\n\t\tif(!this.sorted_sel.length||this.mode == 'none'){ return -1; }\r\n\t\tvar fpath = this.sorted_sel[0];\r\n\t\tif(!fpath){\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tfpath = this.sorted_ltos[fpath];\r\n\t\tif(!fpath){\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\treturn fpath;\r\n\t},\r\n\tgetNextSelected: function(inPrev){\r\n\t\tif(!this.sorted_sel.length||this.mode == 'none'){ return -1; }\r\n\t\tinPrev = String(inPrev);\r\n\t\tvar prevPath = this.sorted_stol[inPrev];\r\n\t\tif(!prevPath){ return -1; }\r\n\r\n\t\tvar idx = this._bsearch(prevPath);\r\n\t\tvar lpath = this.sorted_sel[idx+1];\r\n\t\tif(!lpath){\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\treturn this.sorted_ltos[lpath];\r\n\t},\r\n\t_range: function(inFrom, inTo, func){\r\n\t\tif(!lang.isString(inFrom) && inFrom < 0){\r\n\t\t\tinFrom = inTo;\r\n\t\t}\r\n\t\tvar cells = this.grid.layout.cells,\r\n\t\t\tstore = this.grid.store,\r\n\t\t\tgrid = this.grid;\r\n\t\tinFrom = new dojox.grid.TreePath(String(inFrom), grid);\r\n\t\tinTo = new dojox.grid.TreePath(String(inTo), grid);\r\n\r\n\t\tif(inFrom.compare(inTo) > 0){\r\n\t\t\tvar tmp = inFrom;\r\n\t\t\tinFrom = inTo;\r\n\t\t\tinTo = tmp;\r\n\t\t}\r\n\r\n\t\tvar inFromStr = inFrom._str, inToStr = inTo._str;\r\n\r\n\t\t// select/deselect the first\r\n\t\tfunc(inFromStr);\r\n\r\n\t\tvar p = inFrom;\r\n\t\twhile((p = p.next())){\r\n\t\t\tif(p._str == inToStr){\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tfunc(p._str);\r\n\t\t}\r\n\r\n\t\t// select/deselect the last\r\n\t\tfunc(inToStr);\r\n\t}\r\n});\r\n});"]}