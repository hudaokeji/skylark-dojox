{"version":3,"sources":["grid/enhanced/_PluginManager.js"],"names":["define","dojo","lang","declare","array","connect","_Events","_FocusManager","util","_PluginManager","_options","_plugins","_connects","constructor","inGrid","this","grid","_store","store","_parseProps","plugins","hitch","forEach","startup","preInit","focus","destroy","_init","postInit","views","_initView","push","length","edit","styleRow","inRow","func","args","p","apply","loading","options","registry","_normalize","dnd","columnReordering","mixin","Error","isObject","dependencies","isArray","dependency","pre","pluginExisted","loadPlugin","name","option","plugin","getPlugin","cls","getPluginClazz","view","funnelEvents","contentNode","headerNode","toLowerCase","i","len","clazz","isFunction","errorMsg","getObject","e","isFixedCell","cell","isRowSelector","fixedPos","disconnect","unwrap","registerPlugin","props","prototype","class","console","warn"],"mappings":"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","file":"../../../grid/enhanced/_PluginManager.js","sourcesContent":["define([\r\n\t\"dojo/_base/kernel\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/connect\",\r\n\t\"./_Events\",\r\n\t\"./_FocusManager\",\r\n\t\"../util\"\r\n], function(dojo, lang, declare, array, connect, _Events, _FocusManager, util){\r\n\r\nvar _PluginManager = declare(\"dojox.grid.enhanced._PluginManager\", null, {\r\n\t// summary:\r\n\t//\t\tSingleton plugin manager\r\n\t// description:\r\n\t//\t\tPlugin manager is responsible for:\r\n\t//\r\n\t//\t\t1. Loading required plugins\r\n\t//\t\t2. Handling collaboration and dependencies among plugins\r\n\t//\r\n\t//\t\tSome plugin dependencies:\r\n\t//\r\n\t//\t\t- \"columnReordering\" attribute won't work when either DnD or Indirect Selections plugin is on.\r\n\t\t\r\n\t// _options: Object\r\n\t//\t\tNormalized plugin options\r\n\t_options: null,\r\n\r\n\t// _plugins: Array\r\n\t//\t\tPlugin list\r\n\t_plugins: null,\r\n\r\n\t// _connects: Array\r\n\t//\t\tConnection list\r\n\t_connects: null,\r\n\r\n\tconstructor: function(inGrid){\r\n\t\tthis.grid = inGrid;\r\n\t\tthis._store = inGrid.store;\r\n\t\tthis._options = {};\r\n\t\tthis._plugins = [];\r\n\t\tthis._connects = [];\r\n\t\tthis._parseProps(this.grid.plugins);\r\n\t\t\r\n\t\tinGrid.connect(inGrid, \"_setStore\", lang.hitch(this, function(store){\r\n\t\t\tif(this._store !== store){\r\n\t\t\t\tthis.forEach('onSetStore', [store, this._store]);\r\n\t\t\t\tthis._store = store;\r\n\t\t\t}\r\n\t\t}));\r\n\t},\r\n\tstartup: function(){\r\n\t\tthis.forEach('onStartUp');\r\n\t},\r\n\tpreInit: function(){\r\n\t\t// summary:\r\n\t\t//\t\tLoad appropriate plugins before DataGrid.postCreate().\r\n\t\t//\t\tSee EnhancedGrid.postCreate()\r\n\t\tthis.grid.focus.destroy();\r\n\t\tthis.grid.focus = new _FocusManager(this.grid);\r\n\t\tnew _Events(this.grid);//overwrite some default events of DataGrid\r\n\t\tthis._init(true);\r\n\t\tthis.forEach('onPreInit');\r\n\t},\r\n\tpostInit: function(){\r\n\t\t// summary:\r\n\t\t//\t\tLoad plugins after DataGrid.postCreate() - the default phase when plugins are created\r\n\t\t//\t\tSee EnhancedGrid.postCreate()\r\n\t\tthis._init(false);\r\n\t\t\r\n\t\tarray.forEach(this.grid.views.views, this._initView, this);\r\n\t\tthis._connects.push(connect.connect(this.grid.views, 'addView', lang.hitch(this, this._initView)));\r\n\t\t\t\r\n\t\tif(this._plugins.length > 0){\r\n\t\t\tvar edit = this.grid.edit;\r\n\t\t\tif(edit){ edit.styleRow = function(inRow){}; }\r\n\t\t}\r\n\t\tthis.forEach('onPostInit');\r\n\t},\r\n\tforEach: function(func, args){\r\n\t\tarray.forEach(this._plugins, function(p){\r\n\t\t\tif(!p || !p[func]){ return; }\r\n\t\t\tp[func].apply(p, args ? args : []);\r\n\t\t});\r\n\t},\r\n\t_parseProps: function(plugins){\r\n\t\t// summary:\r\n\t\t//\t\tParse plugins properties\r\n\t\t// plugins: Object\r\n\t\t//\t\tPlugin properties defined by user\r\n\t\tif(!plugins){ return; }\r\n\t\t\r\n\t\tvar p, loading = {}, options = this._options, grid = this.grid;\r\n\t\tvar registry = _PluginManager.registry;//global plugin registry\r\n\t\tfor(p in plugins){\r\n\t\t\tif(plugins[p]){//filter out boolean false e.g. {p:false}\r\n\t\t\t\tthis._normalize(p, plugins, registry, loading);\r\n\t\t\t}\r\n\t\t}\r\n\t\t//\"columnReordering\" attribute won't work when DnD plugin is turned on.\r\n\t\tif(options.dnd){\r\n\t\t\toptions.columnReordering = false;\r\n\t\t}\r\n\t\t\r\n\t\t//mixin all plugin properties into Grid\r\n\t\tlang.mixin(grid, options);\r\n\t},\r\n\t_normalize: function(p, plugins, registry, loading){\r\n\t\t// summary:\r\n\t\t//\t\tNormalize plugin properties especially the dependency chain\r\n\t\t// p: String\r\n\t\t//\t\tPlugin name\r\n\t\t// plugins: Object\r\n\t\t//\t\tPlugin properties set by user\r\n\t\t// registry: Object\r\n\t\t//\t\tThe global plugin registry\r\n\t\t// loading: Object\r\n\t\t//\t\tMap for checking process state\r\n\t\tif(!registry[p]){ throw new Error('Plugin ' + p + ' is required.');}\r\n\t\t\r\n\t\tif(loading[p]){ throw new Error('Recursive cycle dependency is not supported.'); }\r\n\t\t\r\n\t\tvar options = this._options;\r\n\t\tif(options[p]){ return options[p]; }\r\n\t\t\r\n\t\tloading[p] = true;\r\n\t\t//TBD - more strict conditions?\r\n\t\toptions[p] = lang.mixin({}, registry[p], lang.isObject(plugins[p]) ? plugins[p] : {});\r\n\t\t\r\n\t\tvar dependencies = options[p]['dependency'];\r\n\t\tif(dependencies){\r\n\t\t\tif(!lang.isArray(dependencies)){\r\n\t\t\t\tdependencies = options[p]['dependency'] = [dependencies];\r\n\t\t\t}\r\n\t\t\tarray.forEach(dependencies, function(dependency){\r\n\t\t\t\tif(!this._normalize(dependency, plugins, registry, loading)){\r\n\t\t\t\t\tthrow new Error('Plugin ' + dependency + ' is required.');\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t}\r\n\t\tdelete loading[p];\r\n\t\treturn options[p];\r\n\t},\r\n\t_init: function(pre){\r\n\t\t// summary:\r\n\t\t//\t\tFind appropriate plugins and load them\r\n\t\t// pre: Boolean\r\n\t\t//\t\tTrue - preInit | False - postInit(by default)\r\n\t\tvar p, preInit, options = this._options;\r\n\t\tfor(p in options){\r\n\t\t\tpreInit = options[p]['preInit'];\r\n\t\t\tif((pre ? preInit : !preInit) && options[p]['class'] && !this.pluginExisted(p)){\r\n\t\t\t\tthis.loadPlugin(p);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tloadPlugin: function(name){\r\n\t\t// summary:\r\n\t\t//\t\tLoad required plugin(\"name\")\r\n\t\t// name: String\r\n\t\t//\t\tPlugin name\r\n\t\t// returns: Object\r\n\t\t//\t\tThe newly loaded plugin\r\n\t\tvar option = this._options[name];\r\n\t\tif(!option){ return null; } //return if no plugin option\r\n\t\t\r\n\t\tvar plugin = this.getPlugin(name);\r\n\t\tif(plugin){ return plugin; } //return if plugin(\"name\") already existed\r\n\t\t\r\n\t\tvar dependencies = option['dependency'];\r\n\t\tarray.forEach(dependencies, function(dependency){\r\n\t\t\tif(!this.loadPlugin(dependency)){\r\n\t\t\t\tthrow new Error('Plugin ' + dependency + ' is required.');\r\n\t\t\t}\r\n\t\t}, this);\r\n\t\tvar cls = option['class'];\r\n\t\tdelete option['class'];//remove it for safety\r\n\t\tplugin = new this.getPluginClazz(cls)(this.grid, option);\r\n\t\tthis._plugins.push(plugin);\r\n\t\treturn plugin;\r\n\t},\r\n\t_initView: function(view){\r\n\t\t// summary:\r\n\t\t//\t\tOverwrite several default behavior for each views(including _RowSelector view)\r\n\t\tif(!view){ return; }\r\n\t\t//add more events handler - _View\r\n\t\tutil.funnelEvents(view.contentNode, view, \"doContentEvent\", ['mouseup', 'mousemove']);\r\n\t\tutil.funnelEvents(view.headerNode, view, \"doHeaderEvent\", ['mouseup']);\r\n\t},\r\n\tpluginExisted: function(name){\r\n\t\t// summary:\r\n\t\t//\t\tCheck if plugin(\"name\") existed\r\n\t\t// name: String\r\n\t\t//\t\tPlugin name\r\n\t\t// returns: Boolean\r\n\t\t//\t\tTrue - existed | False - not existed\r\n\t\treturn !!this.getPlugin(name);\r\n\t},\r\n\tgetPlugin: function(name){\r\n\t\t// summary:\r\n\t\t//\t\tGet plugin(\"name\")\r\n\t\t// name: String\r\n\t\t//\t\tPlugin name\r\n\t\t// returns: Object\r\n\t\t//\t\tPlugin instance\r\n\t\tvar plugins = this._plugins;\r\n\t\tname = name.toLowerCase();\r\n\t\tfor(var i = 0, len = plugins.length; i < len; i++){\r\n\t\t\tif(name == plugins[i]['name'].toLowerCase()){\r\n\t\t\t\treturn plugins[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\tgetPluginClazz: function(clazz){\r\n\t\t// summary:\r\n\t\t//\t\tLoad target plugin which must be already required (require(..))\r\n\t\t// clazz: Class|String\r\n\t\t//\t\tPlugin class\r\n\t\tif(lang.isFunction(clazz)){\r\n\t\t\treturn clazz;//return if it's already a clazz\r\n\t\t}\r\n\t\tvar errorMsg = 'Please make sure Plugin \"' + clazz + '\" is existed.';\r\n\t\ttry{\r\n\t\t\tvar cls = lang.getObject(clazz);\r\n\t\t\tif(!cls){ throw new Error(errorMsg); }\r\n\t\t\treturn cls;\r\n\t\t}catch(e){\r\n\t\t\tthrow new Error(errorMsg);\r\n\t\t}\r\n\t},\r\n\tisFixedCell: function(cell){\r\n\t\t// summary:\r\n\t\t//\t\tSee if target cell(column) is fixed or not.\r\n\t\t// cell: Object\r\n\t\t//\t\tTarget cell(column)\r\n\t\t// returns: Boolean\r\n\t\t//\t\tTrue - fixed| False - not fixed\r\n\r\n\t\t//target cell can use Boolean attributes named \"isRowSelector\" or \"fixedPos\" to mark it's a fixed cell(column)\r\n\t\treturn cell && (cell.isRowSelector || cell.fixedPos);\r\n\t},\r\n\tdestroy: function(){\r\n\t\t// summary:\r\n\t\t//\t\tDestroy all resources\r\n\t\tarray.forEach(this._connects, connect.disconnect);\r\n\t\tthis.forEach('destroy');\r\n\t\tif(this.grid.unwrap){\r\n\t\t\tthis.grid.unwrap();\r\n\t\t}\r\n\t\tdelete this._connects;\r\n\t\tdelete this._plugins;\r\n\t\tdelete this._options;\r\n\t}\r\n});\r\n\r\n_PluginManager.registerPlugin = function(clazz, props){\r\n\t\t// summary:\r\n\t\t//\t\tRegister plugins - TODO, a better way rather than global registry?\r\n\t\t// clazz: String\r\n\t\t//\t\tFull class name, e.g. \"dojox.grid.enhanced.plugins.DnD\"\r\n\t\t// props: Object?\r\n\t\t//\t\tPlugin properties e.g. {\"dependency\": [\"nestedSorting\"], ...}\r\n\tif(!clazz){\r\n\t\tconsole.warn(\"Failed to register plugin, class missed!\");\r\n\t\treturn;\r\n\t}\r\n\tvar cls = _PluginManager;\r\n\tcls.registry = cls.registry || {};\r\n\tcls.registry[clazz.prototype.name]/*plugin name*/ = lang.mixin({\"class\": clazz}, (props ? props : {}));\r\n};\r\n\r\nreturn _PluginManager;\r\n\r\n});\r\n"]}