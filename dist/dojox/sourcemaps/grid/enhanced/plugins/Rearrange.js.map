{"version":3,"sources":["grid/enhanced/plugins/Rearrange.js"],"names":["define","dojo","lang","declare","array","connect","EnhancedGrid","_Plugin","_RowMapLayer","Rearrange","name","constructor","grid","args","this","setArgs","rowMapLayer","dojox","enhanced","plugins","wrap","mixin","setIdentifierForNewItem","v","destroy","inherited","arguments","unwrap","onSetStore","store","layer","clearMapping","_hasIdentity","points","g","s","cells","layout","getFeatures","some","point","getIdentityAttributes","_by_idx","r","item","c","field","moveColumns","colsToMove","targetPos","colIndex","i","delta","before","tmp","mapping","sort","a","b","length","leftCount","rightCount","maxCol","Math","max","minCol","min","j","_notRefreshSelection","moveColumn","view","idx","publish","id","moveRows","rowsToMove","postRowsToMove","k","arr","rowMap","lastPos","preRowsToMove","len","push","slice","forEach","tmpMapping","clone","setMapping","forEachLayer","invalidate","selection","selected","_noInternalMapping","_refresh","setTimeout","moveCells","cellsToMove","target","row","col","tr","tc","sources","targets","hidden","get","concat","console","warn","setValue","save","onComplete","from","to","copyCells","changeCells","sourceGrid","srcg","srccells","clearCells","cellsToClear","insertRows","rowCnt","rowCount","obj","newRows","emptyTarget","_this","thisItem","attrs","srcs","filter","map","cell","getAttributes","rowsToFetch","rowIndex","srcItem","attr","getValue","newItem","e","log","isObject","rowData","removeRows","rowsToRemove","deleteItem","_getPageInfo","topRow","bottomRow","matched","scroller","topPage","page","bottomPage","firstVisibleRow","lastVisibleRow","rowsPerPage","renderedPages","pageNodes","invalidPages","pageIndex","registerPlugin"],"mappings":"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","file":"../../../../grid/enhanced/plugins/Rearrange.js","sourcesContent":["define([\r\n\t\"dojo/_base/kernel\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/connect\",\r\n\t\"../../EnhancedGrid\",\r\n\t\"../_Plugin\",\r\n\t\"./_RowMapLayer\"\r\n], function(dojo, lang, declare, array, connect, EnhancedGrid, _Plugin, _RowMapLayer){\r\n\r\nvar Rearrange = declare(\"dojox.grid.enhanced.plugins.Rearrange\", _Plugin, {\r\n\t// summary:\r\n\t//\t\tProvides a set of method to re-arrange the structure of grid.\r\n\t\r\n\t// name: String\r\n\t//\t\tplugin name\r\n\tname: \"rearrange\",\r\n\t\r\n\tconstructor: function(grid, args){\r\n\t\tthis.grid = grid;\r\n\t\tthis.setArgs(args);\r\n\t\tvar rowMapLayer = new _RowMapLayer(grid);\r\n\t\tdojox.grid.enhanced.plugins.wrap(grid, \"_storeLayerFetch\", rowMapLayer);\r\n\t},\r\n\tsetArgs: function(args){\r\n\t\tthis.args = lang.mixin(this.args || {}, args || {});\r\n\t\tthis.args.setIdentifierForNewItem = this.args.setIdentifierForNewItem || function(v){return v;};\r\n\t},\r\n\tdestroy: function(){\r\n\t\tthis.inherited(arguments);\r\n\t\tthis.grid.unwrap(\"rowmap\");\r\n\t},\r\n\tonSetStore: function(store){\r\n\t\tthis.grid.layer(\"rowmap\").clearMapping();\r\n\t},\r\n\t_hasIdentity: function(points){\r\n\t\tvar g = this.grid, s = g.store, cells = g.layout.cells;\r\n\t\tif(s.getFeatures()[\"dojo.data.api.Identity\"]){\r\n\t\t\tif(array.some(points, function(point){\r\n\t\t\t\treturn s.getIdentityAttributes(g._by_idx[point.r].item) == cells[point.c].field;\r\n\t\t\t})){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tmoveColumns: function(colsToMove, targetPos){\r\n\t\t// summary:\r\n\t\t//\t\tMove a set of columns to a given position.\r\n\t\t// tags:\r\n\t\t//\t\tpublic\r\n\t\t// colsToMove: Integer[]\r\n\t\t//\t\tArray of column indexes.\r\n\t\t// targetPos: Integer\r\n\t\t//\t\tThe target position\r\n\t\tvar g = this.grid,\r\n\t\t\tlayout = g.layout,\r\n\t\t\tcells = layout.cells,\r\n\t\t\tcolIndex, i, delta = 0,\r\n\t\t\tbefore = true, tmp = {}, mapping = {};\r\n\t\tcolsToMove.sort(function(a, b){\r\n\t\t\treturn a - b;\r\n\t\t});\r\n\t\tfor(i = 0; i < colsToMove.length; ++i){\r\n\t\t\ttmp[colsToMove[i]] = i;\r\n\t\t\tif(colsToMove[i] < targetPos){\r\n\t\t\t\t++delta;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar leftCount = 0, rightCount = 0;\r\n\t\tvar maxCol = Math.max(colsToMove[colsToMove.length - 1], targetPos);\r\n\t\tif(maxCol == cells.length){\r\n\t\t\t--maxCol;\r\n\t\t}\r\n\t\tvar minCol = Math.min(colsToMove[0], targetPos);\r\n\t\tfor(i = minCol; i <= maxCol; ++i){\r\n\t\t\tvar j = tmp[i];\r\n\t\t\tif(j >= 0){\r\n\t\t\t\tmapping[i] = targetPos - delta + j;\r\n\t\t\t}else if(i < targetPos){\r\n\t\t\t\tmapping[i] = minCol + leftCount;\r\n\t\t\t\t++leftCount;\r\n\t\t\t}else if(i >= targetPos){\r\n\t\t\t\tmapping[i] = targetPos + colsToMove.length - delta + rightCount;\r\n\t\t\t\t++rightCount;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//console.log(\"mapping:\", mapping, \", colsToMove:\", colsToMove,\", target:\", targetPos);\r\n\t\tdelta = 0;\r\n\t\tif(targetPos == cells.length){\r\n\t\t\t--targetPos;\r\n\t\t\tbefore = false;\r\n\t\t}\r\n\t\tg._notRefreshSelection = true;\r\n\t\tfor(i = 0; i < colsToMove.length; ++i){\r\n\t\t\tcolIndex = colsToMove[i];\r\n\t\t\tif(colIndex < targetPos){\r\n\t\t\t\tcolIndex -= delta;\r\n\t\t\t}\r\n\t\t\t++delta;\r\n\t\t\tif(colIndex != targetPos){\r\n\t\t\t\tlayout.moveColumn(cells[colIndex].view.idx, cells[targetPos].view.idx, colIndex, targetPos, before);\r\n\t\t\t\tcells = layout.cells;\r\n\t\t\t}\r\n\t\t\tif(targetPos <= colIndex){\r\n\t\t\t\t++targetPos;\r\n\t\t\t}\r\n\t\t}\r\n\t\tdelete g._notRefreshSelection;\r\n\t\tconnect.publish(\"dojox/grid/rearrange/move/\" + g.id, [\"col\", mapping, colsToMove]);\r\n\t},\r\n\tmoveRows: function(rowsToMove, targetPos){\r\n\t\t// summary:\r\n\t\t//\t\tMove a set of rows to a given position\r\n\t\t// tags:\r\n\t\t//\t\tpublic\r\n\t\t// rowsToMove: Integer[]\r\n\t\t//\t\tArray of row indexes.\r\n\t\t// targetPos: Integer\r\n\t\t//\t\tThe target position\r\n\t\tvar g = this.grid,\r\n\t\t\tmapping = {},\r\n\t\t\tpreRowsToMove = [],\r\n\t\t\tpostRowsToMove = [],\r\n\t\t\tlen = rowsToMove.length,\r\n\t\t\ti, r, k, arr, rowMap, lastPos;\r\n\t\t\t\r\n\t\tfor(i = 0; i < len; ++i){\r\n\t\t\tr = rowsToMove[i];\r\n\t\t\tif(r >= targetPos){\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tpreRowsToMove.push(r);\r\n\t\t}\r\n\t\tpostRowsToMove = rowsToMove.slice(i);\r\n\t\t\r\n\t\tarr = preRowsToMove;\r\n\t\tlen = arr.length;\r\n\t\tif(len){\r\n\t\t\trowMap = {};\r\n\t\t\tarray.forEach(arr, function(r){\r\n\t\t\t\trowMap[r] = true;\r\n\t\t\t});\r\n\t\t\tmapping[arr[0]] = targetPos - len;\r\n\t\t\tfor(k = 0, i = arr[k] + 1, lastPos = i - 1; i < targetPos; ++i){\r\n\t\t\t\tif(!rowMap[i]){\r\n\t\t\t\t\tmapping[i] = lastPos;\r\n\t\t\t\t\t++lastPos;\r\n\t\t\t\t}else{\r\n\t\t\t\t\t++k;\r\n\t\t\t\t\tmapping[i] = targetPos - len + k;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tarr = postRowsToMove;\r\n\t\tlen = arr.length;\r\n\t\tif(len){\r\n\t\t\trowMap = {};\r\n\t\t\tarray.forEach(arr, function(r){\r\n\t\t\t\trowMap[r] = true;\r\n\t\t\t});\r\n\t\t\tmapping[arr[len - 1]] = targetPos + len - 1;\r\n\t\t\tfor(k = len - 1, i = arr[k] - 1, lastPos = i + 1; i >= targetPos; --i){\r\n\t\t\t\tif(!rowMap[i]){\r\n\t\t\t\t\tmapping[i] = lastPos;\r\n\t\t\t\t\t--lastPos;\r\n\t\t\t\t}else{\r\n\t\t\t\t\t--k;\r\n\t\t\t\t\tmapping[i] = targetPos + k;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar tmpMapping = lang.clone(mapping);\r\n\t\tg.layer(\"rowmap\").setMapping(mapping);\r\n\t\tg.forEachLayer(function(layer){\r\n\t\t\tif(layer.name() != \"rowmap\"){\r\n\t\t\t\tlayer.invalidate();\r\n\t\t\t\treturn true;\r\n\t\t\t}else{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}, false);\r\n\t\tg.selection.selected = [];\r\n\t\tg._noInternalMapping = true;\r\n\t\tg._refresh();\r\n\t\tsetTimeout(function(){\r\n\t\t\tconnect.publish(\"dojox/grid/rearrange/move/\" + g.id, [\"row\", tmpMapping, rowsToMove]);\r\n\t\t\tg._noInternalMapping = false;\r\n\t\t}, 0);\r\n\t},\r\n\tmoveCells: function(cellsToMove, target){\r\n\t\tvar g = this.grid,\r\n\t\t\ts = g.store;\r\n\t\tif(s.getFeatures()[\"dojo.data.api.Write\"]){\r\n\t\t\tif(cellsToMove.min.row == target.min.row && cellsToMove.min.col == target.min.col){\r\n\t\t\t\t//Same position, no need to move\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar cells = g.layout.cells,\r\n\t\t\t\tcnt = cellsToMove.max.row - cellsToMove.min.row + 1,\r\n\t\t\t\tr, c, tr, tc,\r\n\t\t\t\tsources = [], targets = [];\r\n\t\t\tfor(r = cellsToMove.min.row, tr = target.min.row; r <= cellsToMove.max.row; ++r, ++tr){\r\n\t\t\t\tfor(c = cellsToMove.min.col, tc = target.min.col; c <= cellsToMove.max.col; ++c, ++tc){\r\n\t\t\t\t\twhile(cells[c] && cells[c].hidden){\r\n\t\t\t\t\t\t++c;\r\n\t\t\t\t\t}\r\n\t\t\t\t\twhile(cells[tc] && cells[tc].hidden){\r\n\t\t\t\t\t\t++tc;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsources.push({\r\n\t\t\t\t\t\t\"r\": r,\r\n\t\t\t\t\t\t\"c\": c\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttargets.push({\r\n\t\t\t\t\t\t\"r\": tr,\r\n\t\t\t\t\t\t\"c\": tc,\r\n\t\t\t\t\t\t\"v\": cells[c].get(r, g._by_idx[r].item)\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(this._hasIdentity(sources.concat(targets))){\r\n\t\t\t\tconsole.warn(\"Can not write to identity!\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tarray.forEach(sources, function(point){\r\n\t\t\t\ts.setValue(g._by_idx[point.r].item, cells[point.c].field, \"\");\r\n\t\t\t});\r\n\t\t\tarray.forEach(targets, function(point){\r\n\t\t\t\ts.setValue(g._by_idx[point.r].item, cells[point.c].field, point.v);\r\n\t\t\t});\r\n\t\t\ts.save({\r\n\t\t\t\tonComplete: function(){\r\n\t\t\t\t\tconnect.publish(\"dojox/grid/rearrange/move/\" + g.id, [\"cell\", {\r\n\t\t\t\t\t\t\"from\": cellsToMove,\r\n\t\t\t\t\t\t\"to\": target\r\n\t\t\t\t\t}]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\tcopyCells: function(cellsToMove, target){\r\n\t\tvar g = this.grid,\r\n\t\t\ts = g.store;\r\n\t\tif(s.getFeatures()[\"dojo.data.api.Write\"]){\r\n\t\t\tif(cellsToMove.min.row == target.min.row && cellsToMove.min.col == target.min.col){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar cells = g.layout.cells,\r\n\t\t\t\tcnt = cellsToMove.max.row - cellsToMove.min.row + 1,\r\n\t\t\t\tr, c, tr, tc,\r\n\t\t\t\ttargets = [];\r\n\t\t\tfor(r = cellsToMove.min.row, tr = target.min.row; r <= cellsToMove.max.row; ++r, ++tr){\r\n\t\t\t\tfor(c = cellsToMove.min.col, tc = target.min.col; c <= cellsToMove.max.col; ++c, ++tc){\r\n\t\t\t\t\twhile(cells[c] && cells[c].hidden){\r\n\t\t\t\t\t\t++c;\r\n\t\t\t\t\t}\r\n\t\t\t\t\twhile(cells[tc] && cells[tc].hidden){\r\n\t\t\t\t\t\t++tc;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttargets.push({\r\n\t\t\t\t\t\t\"r\": tr,\r\n\t\t\t\t\t\t\"c\": tc,\r\n\t\t\t\t\t\t\"v\": cells[c].get(r, g._by_idx[r].item)\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(this._hasIdentity(targets)){\r\n\t\t\t\tconsole.warn(\"Can not write to identity!\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tarray.forEach(targets, function(point){\r\n\t\t\t\ts.setValue(g._by_idx[point.r].item, cells[point.c].field, point.v);\r\n\t\t\t});\r\n\t\t\ts.save({\r\n\t\t\t\tonComplete: function(){\r\n\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\tconnect.publish(\"dojox/grid/rearrange/copy/\" + g.id, [\"cell\", {\r\n\t\t\t\t\t\t\t\"from\": cellsToMove,\r\n\t\t\t\t\t\t\t\"to\": target\r\n\t\t\t\t\t\t}]);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\tchangeCells: function(sourceGrid, cellsToMove, target){\r\n\t\tvar g = this.grid,\r\n\t\t\ts = g.store;\r\n\t\tif(s.getFeatures()[\"dojo.data.api.Write\"]){\r\n\t\t\tvar srcg = sourceGrid,\r\n\t\t\t\tcells = g.layout.cells,\r\n\t\t\t\tsrccells = srcg.layout.cells,\r\n\t\t\t\tcnt = cellsToMove.max.row - cellsToMove.min.row + 1,\r\n\t\t\t\tr, c, tr, tc, targets = [];\r\n\t\t\tfor(r = cellsToMove.min.row, tr = target.min.row; r <= cellsToMove.max.row; ++r, ++tr){\r\n\t\t\t\tfor(c = cellsToMove.min.col, tc = target.min.col; c <= cellsToMove.max.col; ++c, ++tc){\r\n\t\t\t\t\twhile(srccells[c] && srccells[c].hidden){\r\n\t\t\t\t\t\t++c;\r\n\t\t\t\t\t}\r\n\t\t\t\t\twhile(cells[tc] && cells[tc].hidden){\r\n\t\t\t\t\t\t++tc;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttargets.push({\r\n\t\t\t\t\t\t\"r\": tr,\r\n\t\t\t\t\t\t\"c\": tc,\r\n\t\t\t\t\t\t\"v\": srccells[c].get(r, srcg._by_idx[r].item)\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(this._hasIdentity(targets)){\r\n\t\t\t\tconsole.warn(\"Can not write to identity!\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tarray.forEach(targets, function(point){\r\n\t\t\t\ts.setValue(g._by_idx[point.r].item, cells[point.c].field, point.v);\r\n\t\t\t});\r\n\t\t\ts.save({\r\n\t\t\t\tonComplete: function(){\r\n\t\t\t\t\tconnect.publish(\"dojox/grid/rearrange/change/\" + g.id, [\"cell\", target]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\tclearCells: function(cellsToClear){\r\n\t\tvar g = this.grid,\r\n\t\t\ts = g.store;\r\n\t\tif(s.getFeatures()[\"dojo.data.api.Write\"]){\r\n\t\t\tvar cells = g.layout.cells,\r\n\t\t\t\tcnt = cellsToClear.max.row - cellsToClear.min.row + 1,\r\n\t\t\t\tr, c, targets = [];\r\n\t\t\tfor(r = cellsToClear.min.row; r <= cellsToClear.max.row; ++r){\r\n\t\t\t\tfor(c = cellsToClear.min.col; c <= cellsToClear.max.col; ++c){\r\n\t\t\t\t\twhile(cells[c] && cells[c].hidden){\r\n\t\t\t\t\t\t++c;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttargets.push({\r\n\t\t\t\t\t\t\"r\": r,\r\n\t\t\t\t\t\t\"c\": c\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(this._hasIdentity(targets)){\r\n\t\t\t\tconsole.warn(\"Can not write to identity!\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tarray.forEach(targets, function(point){\r\n\t\t\t\ts.setValue(g._by_idx[point.r].item, cells[point.c].field, \"\");\r\n\t\t\t});\r\n\t\t\ts.save({\r\n\t\t\t\tonComplete: function(){\r\n\t\t\t\t\tconnect.publish(\"dojox/grid/rearrange/change/\" + g.id, [\"cell\", cellsToClear]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\tinsertRows: function(sourceGrid, rowsToMove, targetPos){\r\n\t\ttry{\r\n\t\t\tvar g = this.grid,\r\n\t\t\t\ts = g.store,\r\n\t\t\t\trowCnt = g.rowCount,\r\n\t\t\t\tmapping = {},\r\n\t\t\t\tobj = {idx: 0},\r\n\t\t\t\tnewRows = [],\r\n\t\t\t\ti,\r\n\t\t\t\temptyTarget = targetPos < 0,\r\n\t\t\t\t_this = this,\r\n\t\t\t\tlen = rowsToMove.length;\r\n\t\t\tif(emptyTarget){\r\n\t\t\t\ttargetPos = 0;\r\n\t\t\t}else{\r\n\t\t\t\tfor(i = targetPos; i < g.rowCount; ++i){\r\n\t\t\t\t\tmapping[i] = i + len;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(s.getFeatures()['dojo.data.api.Write']){\r\n\t\t\t\tif(sourceGrid){\r\n\t\t\t\t\tvar srcg = sourceGrid,\r\n\t\t\t\t\t\tsrcs = srcg.store,\r\n\t\t\t\t\t\tthisItem, attrs;\r\n\t\t\t\t\tif(!emptyTarget){\r\n\t\t\t\t\t\tfor(i = 0; !thisItem; ++i){\r\n\t\t\t\t\t\t\tthisItem = g._by_idx[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tattrs = s.getAttributes(thisItem.item);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t//If the target grid is empty, there is no way to retrieve attributes.\r\n\t\t\t\t\t\t//So try to get attrs from grid.layout.cells[], but this might not be right\r\n\t\t\t\t\t\t//since some fields may be missed(e.g ID fields), please use \"setIdentifierForNewItem()\" \r\n\t\t\t\t\t\t//to add those missed fields\r\n\t\t\t\t\t\tattrs = array.filter(array.map(g.layout.cells, function(cell){\r\n\t\t\t\t\t\t\treturn cell.field;\r\n\t\t\t\t\t\t}), function(field){\r\n\t\t\t\t\t\t\treturn field; //non empty\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar rowsToFetch = [];\r\n\t\t\t\t\tarray.forEach(rowsToMove, function(rowIndex, i){\r\n\t\t\t\t\t\tvar item = {};\r\n\t\t\t\t\t\tvar srcItem = srcg._by_idx[rowIndex];\r\n\t\t\t\t\t\tif(srcItem){\r\n\t\t\t\t\t\t\tarray.forEach(attrs, function(attr){\r\n\t\t\t\t\t\t\t\titem[attr] = srcs.getValue(srcItem.item, attr);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\titem = _this.args.setIdentifierForNewItem(item, s, rowCnt + obj.idx) || item;\r\n\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\ts.newItem(item);\r\n\t\t\t\t\t\t\t\tnewRows.push(targetPos + i);\r\n\t\t\t\t\t\t\t\tmapping[rowCnt + obj.idx] = targetPos + i;\r\n\t\t\t\t\t\t\t\t++obj.idx;\r\n\t\t\t\t\t\t\t}catch(e){\r\n\t\t\t\t\t\t\t\tconsole.log(\"insertRows newItem:\",e,item);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\trowsToFetch.push(rowIndex);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}else if(rowsToMove.length && lang.isObject(rowsToMove[0])){\r\n\t\t\t\t\tarray.forEach(rowsToMove, function(rowData, i){\r\n\t\t\t\t\t\tvar item = _this.args.setIdentifierForNewItem(rowData, s, rowCnt + obj.idx) || rowData;\r\n\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\ts.newItem(item);\r\n\t\t\t\t\t\t\tnewRows.push(targetPos + i);\r\n\t\t\t\t\t\t\tmapping[rowCnt + obj.idx] = targetPos + i;\r\n\t\t\t\t\t\t\t++obj.idx;\r\n\t\t\t\t\t\t}catch(e){\r\n\t\t\t\t\t\t\tconsole.log(\"insertRows newItem:\",e,item);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tg.layer(\"rowmap\").setMapping(mapping);\r\n\t\t\t\ts.save({\r\n\t\t\t\t\tonComplete: function(){\r\n\t\t\t\t\t\tg._refresh();\r\n\t\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\t\tconnect.publish(\"dojox/grid/rearrange/insert/\" + g.id, [\"row\", newRows]);\r\n\t\t\t\t\t\t}, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}catch(e){\r\n\t\t\tconsole.log(\"insertRows:\",e);\r\n\t\t}\r\n\t},\r\n\tremoveRows: function(rowsToRemove){\r\n\t\tvar g = this.grid;\r\n\t\tvar s = g.store;\r\n\t\ttry{\r\n\t\t\tarray.forEach(array.map(rowsToRemove, function(rowIndex){\r\n\t\t\t\treturn g._by_idx[rowIndex];\r\n\t\t\t}), function(row){\r\n\t\t\t\tif(row){\r\n\t\t\t\t\ts.deleteItem(row.item);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\ts.save({\r\n\t\t\t\tonComplete: function(){\r\n\t\t\t\t\tconnect.publish(\"dojox/grid/rearrange/remove/\" + g.id, [\"row\", rowsToRemove]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}catch(e){\r\n\t\t\tconsole.log(\"removeRows:\",e);\r\n\t\t}\r\n\t},\r\n\t_getPageInfo: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFind pages that contain visible rows\r\n\t\t// returns: Object\r\n\t\t//\t\t{topPage: xx, bottomPage: xx, invalidPages: [xx,xx,...]}\r\n\t\tvar scroller = this.grid.scroller,\r\n\t\t\ttopPage = scroller.page,\r\n\t\t\tbottomPage = scroller.page,\r\n\t\t\tfirstVisibleRow = scroller.firstVisibleRow,\r\n\t\t\tlastVisibleRow = scroller.lastVisibleRow,\r\n\t\t\trowsPerPage = scroller.rowsPerPage,\r\n\t\t\trenderedPages = scroller.pageNodes[0],\r\n\t\t\ttopRow, bottomRow, matched,\r\n\t\t\tinvalidPages = [];\r\n\t\t\r\n\t\tarray.forEach(renderedPages, function(page, pageIndex){\r\n\t\t\tif(!page){ return; }\r\n\t\t\tmatched = false;\r\n\t\t\ttopRow = pageIndex * rowsPerPage;\r\n\t\t\tbottomRow = (pageIndex + 1) * rowsPerPage - 1;\r\n\t\t\tif(firstVisibleRow >= topRow && firstVisibleRow <= bottomRow){\r\n\t\t\t\ttopPage = pageIndex;\r\n\t\t\t\tmatched = true;\r\n\t\t\t}\r\n\t\t\tif(lastVisibleRow >= topRow && lastVisibleRow <= bottomRow){\r\n\t\t\t\tbottomPage = pageIndex;\r\n\t\t\t\tmatched = true;\r\n\t\t\t}\r\n\t\t\tif(!matched && (topRow > lastVisibleRow || bottomRow < firstVisibleRow)){\r\n\t\t\t\tinvalidPages.push(pageIndex);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn {topPage: topPage, bottomPage: bottomPage, invalidPages: invalidPages};\r\n\t}\r\n});\r\n\r\nEnhancedGrid.registerPlugin(Rearrange/*name:'rearrange'*/);\r\n\r\nreturn Rearrange;\r\n\r\n});"]}