{"version":3,"sources":["grid/enhanced/plugins/Filter.js"],"names":["define","declare","lang","_Plugin","Dialog","layers","FilterBar","FilterDefDialog","FilterStatusTip","ClearFilterConfirm","EnhancedGrid","nls","Filter","name","constructor","grid","args","this","isObject","ruleCount","undefined","ruleCountToConfirmClearFilter","_wrapStore","obj","plugin","clearFilterDialog","refNode","domNode","title","content","filterDefDialog","filterBar","filterStatusTip","onFilterDefined","connect","layer","filter","getFilter","getFilterRelation","destroy","inherited","arguments","unwrap","destroyRecursive","e","console","warn","g","filterLayer","isServerSide","ServerSideFilterLayer","ClientSideFilterLayer","cacheSize","filterCacheSize","fetchAll","fetchAllOnFirstFilter","getter","_clientFilterGetter","wrap","hitch","onSetStore","store","clearFilter","datarow","cell","rowIndex","get","registerPlugin"],"mappings":";;;;;;;AAAAA,QACC,qBACA,kBACA,aACA,WACA,uBACA,qBACA,2BACA,2BACA,8BACA,qBACA,2BACE,SAASC,EAASC,EAAMC,EAASC,EAAQC,EAAQC,EAAWC,EAAiBC,EAAiBC,EAAoBC,EAAcC,GAElI,IAAIC,EAASX,EAAQ,qCAAsCE,GAyE1DU,KAAM,SAENC,YAAa,SAASC,EAAMC,GAG3BC,KAAKF,KAAOA,EACZE,KAAKN,IAAMA,GAGiB,iBAD5BK,EAAOC,KAAKD,KAAOd,EAAKgB,SAASF,GAAQA,MAC1BG,WAAyBH,EAAKG,UAAY,KACxDH,EAAKG,UAAY,QAGRC,KADDH,KAAKI,8BAAgCL,EAAKK,iCAElDJ,KAAKI,8BAAgC,GAItCJ,KAAKK,aAGL,IAAIC,GAAQC,OAAUP,MACtBA,KAAKQ,kBAAoB,IAAIrB,GAC5BsB,QAAST,KAAKF,KAAKY,QACnBC,MAAOX,KAAKN,IAA4B,uBACxCkB,QAAS,IAAIpB,EAAmBc,KAEjCN,KAAKa,gBAAkB,IAAIvB,EAAgBgB,GAC3CN,KAAKc,UAAY,IAAIzB,EAAUiB,GAC/BN,KAAKe,gBAAkB,IAAIxB,EAAgBe,GAG3CR,EAAKkB,gBAAkB,aACvBhB,KAAKiB,QAAQnB,EAAKoB,MAAM,UAAW,kBAAmB,SAASC,GAC9DrB,EAAKkB,gBAAgBlB,EAAKsB,YAAatB,EAAKuB,wBAG9CC,QAAS,WACRtB,KAAKuB,UAAUC,WACf,IACCxB,KAAKF,KAAK2B,OAAO,UACjBzB,KAAKc,UAAUY,mBACf1B,KAAKc,UAAY,KACjBd,KAAKQ,kBAAkBkB,mBACvB1B,KAAKQ,kBAAoB,KACzBR,KAAKe,gBAAgBO,UACrBtB,KAAKe,gBAAkB,KACvBf,KAAKa,gBAAgBS,UACrBtB,KAAKa,gBAAkB,KACvBb,KAAKF,KAAO,KACZE,KAAKD,KAAO,KACZ,MAAM4B,GACNC,QAAQC,KAAK,0BAA0BF,KAGzCtB,WAAY,WACX,IAAIyB,EAAI9B,KAAKF,KACTC,EAAOC,KAAKD,KACZgC,EAAchC,EAAKiC,aAAe,IAAI5C,EAAO6C,sBAAsBlC,GACtE,IAAIX,EAAO8C,uBACVC,UAAWpC,EAAKqC,gBAChBC,SAAUtC,EAAKuC,sBACfC,OAAQvC,KAAKwC,sBAEfpD,EAAOqD,KAAKX,EAAG,mBAAoBC,GAEnC/B,KAAKiB,QAAQa,EAAG,YAAa7C,EAAKyD,MAAMX,EAAa,gBAEtDY,WAAY,SAASC,GACpB5C,KAAKa,gBAAgBgC,aAAY,IAElCL,oBAAqB,SAAyBM,EAAkBC,EAAeC,GAO9E,OAAOD,EAAKE,IAAID,EAAUF,MAM5B,OAFArD,EAAayD,eAAevD,GAErBA","file":"../../../../grid/enhanced/plugins/Filter.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/lang\",\r\n\t\"../_Plugin\",\r\n\t\"./Dialog\",\r\n\t\"./filter/FilterLayer\",\r\n\t\"./filter/FilterBar\",\r\n\t\"./filter/FilterDefDialog\",\r\n\t\"./filter/FilterStatusTip\",\r\n\t\"./filter/ClearFilterConfirm\",\r\n\t\"../../EnhancedGrid\",\r\n\t\"dojo/i18n!../nls/Filter\"\r\n], function(declare, lang, _Plugin, Dialog, layers, FilterBar, FilterDefDialog, FilterStatusTip, ClearFilterConfirm, EnhancedGrid, nls){\r\n\r\n\tvar Filter = declare(\"dojox.grid.enhanced.plugins.Filter\", _Plugin, {\r\n\t\t// summary:\r\n\t\t//\t\tProvide filter functionality for grid.\r\n\t\t//\r\n\t\t//\t\tAcceptable plugin parameters:\r\n\t\t//\r\n\t\t//\t\t1. itemsName: string:\r\n\t\t//\t\t\tthe name shown on the filter bar.\r\n\t\t//\t\t2. statusTipTimeout: number:\r\n\t\t//\t\t\twhen does the status tip show.\r\n\t\t//\t\t3. ruleCount: number:\r\n\t\t//\t\t\tdefault to 3, should not change to more. The Claro theme limits it.\r\n\t\t//\t\t4. disabledConditions: object:\r\n\t\t//\t\t\tIf you don't need all of the conditions provided for a data type,\r\n\t\t//\t\t\tyou can explicitly declare them here:\r\n\t\t//\t\t\te.g.: disabledConditions: {string: [\"contains\", \"is\"], number: [\"equalto\"], ...}\r\n\t\t//\t\t5. isServerSide: boolean:\r\n\t\t//\t\t\tWhether to use server side filtering. Default to false.\r\n\t\t//\t\t6. isStateful: boolean:\r\n\t\t//\t\t\tIf isServerSide is true, set the server side filter to be stateful or not. default to false.\r\n\t\t//\t\t7. url: string:\r\n\t\t//\t\t\tIf using stateful, this is the url to send commands. default to store.url.\r\n\t\t//\t\t8. ruleCountToConfirmClearFilter: Integer | null |Infinity:\r\n\t\t//\t\t\tIf the filter rule count is larger than or equal to this value, then a confirm dialog will show when clearing filter.\r\n\t\t//\t\t\tIf set to less than 1 or null, then always show the confirm dialog.\r\n\t\t//\t\t\tIf set to Infinity, then never show the confirm dialog.\r\n\t\t//\t\t\tDefault value is 2.\r\n\t\t//\r\n\t\t//\t\tAcceptable cell parameters defined in layout:\r\n\t\t//\r\n\t\t//\t\t1. filterable: boolean:\r\n\t\t//\t\t\tThe column is not filterable only when this is set to false explicitly.\r\n\t\t//\t\t2. datatype: string:\r\n\t\t//\t\t\tThe data type of this column. Can be \"string\", \"number\", \"date\", \"time\", \"boolean\".\r\n\t\t//\t\t\tDefault to \"string\".\r\n\t\t//\t\t3. autoComplete: boolean:\r\n\t\t//\t\t\tIf need auto-complete in the ComboBox for String type, set this to true.\r\n\t\t//\t\t4. dataTypeArgs: object:\r\n\t\t//\t\t\tSome arguments helping convert store data to something the filter UI understands.\r\n\t\t//\t\t\tDifferent data type arguments can be provided to different data types.\r\n\t\t//\t\t\tFor date/time, this is a dojo.date.locale.__FormatOptions, so the DataTimeBox can understand the store data.\r\n\t\t//\t\t\tFor boolean, this object contains:\r\n\t\t//\r\n\t\t//\t\t\t- trueLabel: string:\r\n\t\t//\t\t\t\tA label to display in the filter definition dialog for true value. Default to \"True\".\r\n\t\t//\t\t\t- falseLabel: string:\r\n\t\t//\t\t\t\tA label to display in the filter definition dialog for false value. Default to \"False\".\r\n\t\t//\r\n\t\t//\t\t5. disabledConditions: object:\r\n\t\t//\t\t\tIf you don't need all of the conditions provided by the filter UI on this column, you can explicitly say it out here.\r\n\t\t//\t\t\te.g.: disabledConditions: [\"contains\", \"is\"]\r\n\t\t//\t\t\tThis will disable the \"contains\" condition for this column, if this column is of string type.\r\n\t\t//\t\t\tFor full set of conditions, please refer to dojox.grid.enhanced.plugins.filter.FilterDefDialog._setupData.\r\n\t\t// example:\r\n\t\t//\t|\t<div dojoType=\"dojox.grid.EnhancedGrid\" plugins=\"{GridFilter: true}\" ...></div>\r\n\t\t//\t|\tor provide some parameters:\r\n\t\t//\t|\t<div dojoType=\"dojox.grid.EnhancedGrid\" plugins=\"{GridFilter: {itemsName: 'songs'}}\" ...></div>\r\n\t\t//\t|\tCustomize columns for filter:\r\n\t\t//\t|\tvar layout = [\r\n\t\t//\t|\t\t...\r\n\t\t//\t|\t\t//define a column to be un-filterable in layout/structure\r\n\t\t//\t|\t\t{field: \"Genre\", filterable: false, ...}\r\n\t\t//\t|\t\t//define a column of type string and supports autoComplete when you type in filter conditions.\r\n\t\t//\t|\t\t{field: \"Writer\", datatype: \"string\", autoCommplete: true, ...}\r\n\t\t//\t|\t\t//define a column of type date and the data in store has format: \"yyyy/M/d\"\r\n\t\t//\t|\t\t{field: \"Publish Date\", datatype: \"date\", dataTypeArgs: {datePattern: \"yyyy/M/d\"}, ...}\r\n\t\t//\t|\t\t//disable some conditions for a column\r\n\t\t//\t|\t\t{field: \"Track\", disabledConditions: [\"equalto\",\"notequalto\"], ...}\r\n\t\t//\t|\t\t...\r\n\t\t//\t|\t];\r\n\t\t\r\n\t\t// name: String\r\n\t\t//\t\tplugin name\r\n\t\tname: \"filter\",\r\n\t\t\r\n\t\tconstructor: function(grid, args){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSee constructor of dojox.grid.enhanced._Plugin.\r\n\t\t\tthis.grid = grid;\r\n\t\t\tthis.nls = nls;\r\n\t\t\t\r\n\t\t\targs = this.args = lang.isObject(args) ? args : {};\r\n\t\t\tif(typeof args.ruleCount != 'number' || args.ruleCount < 0){\r\n\t\t\t\targs.ruleCount = 3;\r\n\t\t\t}\r\n\t\t\tvar rc = this.ruleCountToConfirmClearFilter = args.ruleCountToConfirmClearFilter;\r\n\t\t\tif(rc === undefined){\r\n\t\t\t\tthis.ruleCountToConfirmClearFilter = 2;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//Install filter layer\r\n\t\t\tthis._wrapStore();\r\n\t\t\t\r\n\t\t\t//Install UI components\r\n\t\t\tvar obj = { \"plugin\": this };\r\n\t\t\tthis.clearFilterDialog = new Dialog({\r\n\t\t\t\trefNode: this.grid.domNode,\r\n\t\t\t\ttitle: this.nls[\"clearFilterDialogTitle\"],\r\n\t\t\t\tcontent: new ClearFilterConfirm(obj)\r\n\t\t\t});\r\n\t\t\tthis.filterDefDialog = new FilterDefDialog(obj);\r\n\t\t\tthis.filterBar = new FilterBar(obj);\r\n\t\t\tthis.filterStatusTip = new FilterStatusTip(obj);\r\n\t\t\t\r\n\t\t\t//Expose the layer event to grid.\r\n\t\t\tgrid.onFilterDefined = function(){};\r\n\t\t\tthis.connect(grid.layer(\"filter\"), \"onFilterDefined\", function(filter){\r\n\t\t\t\tgrid.onFilterDefined(grid.getFilter(), grid.getFilterRelation());\r\n\t\t\t});\r\n\t\t},\r\n\t\tdestroy: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\ttry{\r\n\t\t\t\tthis.grid.unwrap(\"filter\");\r\n\t\t\t\tthis.filterBar.destroyRecursive();\r\n\t\t\t\tthis.filterBar = null;\r\n\t\t\t\tthis.clearFilterDialog.destroyRecursive();\r\n\t\t\t\tthis.clearFilterDialog = null;\r\n\t\t\t\tthis.filterStatusTip.destroy();\r\n\t\t\t\tthis.filterStatusTip = null;\r\n\t\t\t\tthis.filterDefDialog.destroy();\r\n\t\t\t\tthis.filterDefDialog = null;\r\n\t\t\t\tthis.grid = null;\r\n\t\t\t\tthis.args = null;\r\n\t\t\t}catch(e){\r\n\t\t\t\tconsole.warn(\"Filter.destroy() error:\",e);\r\n\t\t\t}\r\n\t\t},\r\n\t\t_wrapStore: function(){\r\n\t\t\tvar g = this.grid;\r\n\t\t\tvar args = this.args;\r\n\t\t\tvar filterLayer = args.isServerSide ? new layers.ServerSideFilterLayer(args) :\r\n\t\t\t\tnew layers.ClientSideFilterLayer({\r\n\t\t\t\t\tcacheSize: args.filterCacheSize,\r\n\t\t\t\t\tfetchAll: args.fetchAllOnFirstFilter,\r\n\t\t\t\t\tgetter: this._clientFilterGetter\r\n\t\t\t\t});\r\n\t\t\tlayers.wrap(g, \"_storeLayerFetch\", filterLayer);\r\n\t\t\t\r\n\t\t\tthis.connect(g, \"_onDelete\", lang.hitch(filterLayer, \"invalidate\"));\r\n\t\t},\r\n\t\tonSetStore: function(store){\r\n\t\t\tthis.filterDefDialog.clearFilter(true);\r\n\t\t},\r\n\t\t_clientFilterGetter: function(/* data item */ datarow,/* cell */cell, /* int */rowIndex){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDefine the grid-specific way to get data from a row.\r\n\t\t\t//\t\tArgument \"cell\" is provided by FilterDefDialog when defining filter expressions.\r\n\t\t\t//\t\tArgument \"rowIndex\" is provided by FilterLayer when checking a row.\r\n\t\t\t//\t\tFilterLayer also provides a forth argument: \"store\", which is grid.store,\r\n\t\t\t//\t\tbut we don't need it here.\r\n\t\t\treturn cell.get(rowIndex, datarow);\r\n\t\t}\r\n\t});\r\n\r\n\tEnhancedGrid.registerPlugin(Filter/*name:'filter'*/);\r\n\r\n\treturn Filter;\r\n\r\n});\r\n"]}