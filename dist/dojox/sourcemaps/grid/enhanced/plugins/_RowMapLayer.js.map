{"version":3,"sources":["grid/enhanced/plugins/_RowMapLayer.js"],"names":["define","array","declare","kernel","lang","layers","hitchIfCan","scope","func","hitch","global","_StoreLayer","tags","constructor","grid","this","_map","_revMap","_oldOnDelete","_onDelete","_this","item","call","_oldSort","sort","clearMapping","apply","arguments","uninitialize","setMapping","mapping","_store","forEachLayer","layer","name","onRowMappingChange","from","to","origin","revmap","parseInt","idx","_getItemIndex","r","i","rowIdxArr","push","a","b","length","_fetch","userRequest","mapCount","start","rows","map","count","_subFetch","_getRowArrays","onComplete","_originFetch","v1","v2","arr","j","_devideToArrays","rowArrays","index","result","oldOnComplete","urstart","items","forEach","concat","originFetch"],"mappings":"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","file":"../../../../grid/enhanced/plugins/_RowMapLayer.js","sourcesContent":["define([\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/kernel\",\r\n\t\"dojo/_base/lang\",\r\n\t\"./_StoreLayer\"\r\n], function(array, declare, kernel, lang, layers){\r\n\r\nvar _devideToArrays = function(a){\r\n\ta.sort(function(v1, v2){\r\n\t\treturn v1 - v2;\r\n\t});\r\n\tvar arr = [[a[0]]];\r\n\tfor(var i = 1, j = 0; i < a.length; ++i){\r\n\t\tif(a[i] == a[i-1] + 1){\r\n\t\t\tarr[j].push(a[i]);\r\n\t\t}else{\r\n\t\t\tarr[++j] = [a[i]];\r\n\t\t}\r\n\t}\r\n\treturn arr;\r\n},\r\nhitchIfCan = function(scope, func){\r\n\treturn func ? lang.hitch(scope || kernel.global, func) : function(){};\r\n};\r\n\r\nreturn declare(\"dojox.grid.enhanced.plugins._RowMapLayer\", layers._StoreLayer, {\r\n\ttags: [\"reorder\"],\r\n\tconstructor: function(grid){\r\n\t\tthis._map = {};\r\n\t\tthis._revMap = {};\r\n\t\tthis.grid = grid;\r\n\t\tthis._oldOnDelete = grid._onDelete;\r\n\t\tvar _this = this;\r\n\t\tgrid._onDelete = function(item){\r\n\t\t\t_this._onDelete(item);\r\n\t\t\t_this._oldOnDelete.call(grid, item);\r\n\t\t};\r\n\t\tthis._oldSort = grid.sort;\r\n\t\tgrid.sort = function(){\r\n\t\t\t_this.clearMapping();\r\n\t\t\t_this._oldSort.apply(grid, arguments);\r\n\t\t};\r\n\t},\r\n\tuninitialize: function(){\r\n\t\tthis.grid._onDelete = this._oldOnDelete;\r\n\t\tthis.grid.sort = this._oldSort;\r\n\t},\r\n\tsetMapping: function(mapping){\r\n\t\t// summary:\r\n\t\t//\t\tRemember the row mapping.\r\n\t\t// mapping: Object\r\n\t\t//\t\tkeys are original rowIndexes, values are new rowIndexes.\r\n\t\tthis._store.forEachLayer(function(layer){\r\n\t\t\tif(layer.name() === \"rowmap\"){\r\n\t\t\t\treturn false;\r\n\t\t\t}else if(layer.onRowMappingChange){\r\n\t\t\t\tlayer.onRowMappingChange(mapping);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}, false);\r\n\t\tvar from, to, origin, revmap = {};\r\n\t\tfor(from in mapping){\r\n\t\t\tfrom = parseInt(from, 10);\r\n\t\t\tto = mapping[from];\r\n\t\t\tif(typeof to == \"number\"){\r\n\t\t\t\tif(from in this._revMap){\r\n\t\t\t\t\torigin = this._revMap[from];\r\n\t\t\t\t\tdelete this._revMap[from];\r\n\t\t\t\t}else{\r\n\t\t\t\t\torigin = from;\r\n\t\t\t\t}\r\n\t\t\t\tif(origin == to){\r\n\t\t\t\t\tdelete this._map[origin];\r\n\t\t\t\t\trevmap[to] = \"eq\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis._map[origin] = to;\r\n\t\t\t\t\trevmap[to] = origin;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(to in revmap){\r\n\t\t\tif(revmap[to] === \"eq\"){\r\n\t\t\t\tdelete this._revMap[parseInt(to, 10)];\r\n\t\t\t}else{\r\n\t\t\t\tthis._revMap[parseInt(to, 10)] = revmap[to];\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tclearMapping: function(){\r\n\t\tthis._map = {};\r\n\t\tthis._revMap = {};\r\n\t},\r\n\t_onDelete: function(item){\r\n\t\tvar idx = this.grid._getItemIndex(item, true);\r\n\t\tif(idx in this._revMap){\r\n\t\t\tvar rowIdxArr = [], r, i, origin = this._revMap[idx];\r\n\t\t\tdelete this._map[origin];\r\n\t\t\tdelete this._revMap[idx];\r\n\t\t\tfor(r in this._revMap){\r\n\t\t\t\tr = parseInt(r, 10);\r\n\t\t\t\tif(this._revMap[r] > origin){\r\n\t\t\t\t\t--this._revMap[r];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor(r in this._revMap){\r\n\t\t\t\tr = parseInt(r, 10);\r\n\t\t\t\tif(r > idx){\r\n\t\t\t\t\trowIdxArr.push(r);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\trowIdxArr.sort(function(a, b){\r\n\t\t\t\treturn b - a;\r\n\t\t\t});\r\n\t\t\tfor(i = rowIdxArr.length - 1; i >= 0; --i){\r\n\t\t\t\tr = rowIdxArr[i];\r\n\t\t\t\tthis._revMap[r - 1] = this._revMap[r];\r\n\t\t\t\tdelete this._revMap[r];\r\n\t\t\t}\r\n\t\t\tthis._map = {};\r\n\t\t\tfor(r in this._revMap){\r\n\t\t\t\tthis._map[this._revMap[r]] = r;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t_fetch: function(userRequest){\r\n\t\tvar mapCount = 0, r;\r\n\t\tvar start = userRequest.start || 0;\r\n\t\tfor(r in this._revMap){\r\n\t\t\tr = parseInt(r, 10);\r\n\t\t\tif(r >= start){\r\n\t\t\t\t++mapCount;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(mapCount > 0){\r\n\t\t\t//Row mapping is in use.\r\n\t\t\tvar rows = [], i, map = {},\r\n\t\t\t\tcount = userRequest.count > 0 ? userRequest.count : -1;\r\n\t\t\tif(count > 0){\r\n\t\t\t\tfor(i = 0; i < count; ++i){\r\n\t\t\t\t\tr = start + i;\r\n\t\t\t\t\tr = r in this._revMap ? this._revMap[r] : r;\r\n\t\t\t\t\tmap[r] = i;\r\n\t\t\t\t\trows.push(r);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t//We don't have a count, must create our own.\r\n\t\t\t\tfor(i = 0;; ++i){\r\n\t\t\t\t\tr = start + i;\r\n\t\t\t\t\tif(r in this._revMap){\r\n\t\t\t\t\t\t--mapCount;\r\n\t\t\t\t\t\tr = this._revMap[r];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmap[r] = i;\r\n\t\t\t\t\trows.push(r);\r\n\t\t\t\t\tif(mapCount <= 0){\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._subFetch(userRequest, this._getRowArrays(rows), 0, [], map, userRequest.onComplete, start, count);\r\n\t\t\treturn userRequest;\r\n\t\t}else{\r\n\t\t\t//No row mapping at all.\r\n\t\t\treturn lang.hitch(this._store, this._originFetch)(userRequest);\r\n\t\t}\r\n\t},\r\n\t_getRowArrays: function(rows){\r\n\t\treturn _devideToArrays(rows);\r\n\t},\r\n\t_subFetch: function(userRequest, rowArrays, index, result, map, oldOnComplete, start, count){\r\n\t\tvar arr = rowArrays[index], _this = this;\r\n\t\tvar urstart = userRequest.start = arr[0];\r\n\t\tuserRequest.count = arr[arr.length - 1] - arr[0] + 1;\r\n\t\tuserRequest.onComplete = function(items){\r\n\t\t\tarray.forEach(items, function(item, i){\r\n\t\t\t\tvar r = urstart + i;\r\n\t\t\t\tif(r in map){\r\n\t\t\t\t\tresult[map[r]] = item;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif(++index == rowArrays.length){\r\n\t\t\t\t//mapped rows are all fetched.\r\n\t\t\t\tif(count > 0){\r\n\t\t\t\t\tuserRequest.start = start;\r\n\t\t\t\t\tuserRequest.count = count;\r\n\t\t\t\t\tuserRequest.onComplete = oldOnComplete;\r\n\t\t\t\t\thitchIfCan(userRequest.scope, oldOnComplete)(result, userRequest);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tuserRequest.start = userRequest.start + items.length;\r\n\t\t\t\t\tdelete userRequest.count;\r\n\t\t\t\t\tuserRequest.onComplete = function(items){\r\n\t\t\t\t\t\tresult = result.concat(items);\r\n\t\t\t\t\t\tuserRequest.start = start;\r\n\t\t\t\t\t\tuserRequest.onComplete = oldOnComplete;\r\n\t\t\t\t\t\thitchIfCan(userRequest.scope, oldOnComplete)(result, userRequest);\r\n\t\t\t\t\t};\r\n\t\t\t\t\t_this.originFetch(userRequest);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t_this._subFetch(userRequest, rowArrays, index, result, map, oldOnComplete, start, count);\r\n\t\t\t}\r\n\t\t};\r\n\t\t_this.originFetch(userRequest);\r\n\t}\r\n});\r\n});\r\n"]}