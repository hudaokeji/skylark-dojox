{"version":3,"sources":["grid/enhanced/plugins/AutoScroll.js"],"names":["define","declare","array","lang","html","win","_Plugin","_RowSelector","EnhancedGrid","AutoScroll","name","autoScrollInterval","autoScrollMargin","constructor","grid","args","this","readyForAutoScroll","_scrolling","isObject","interval","margin","_initEvents","_mixinGrid","g","connect","doc","evt","_manageAutoScroll","_event","gridPos","position","domNode","hh","_getHeaderHeight","ey","clientY","ex","clientX","gy","y","gx","x","gh","h","gw","w","some","views","view","i","viewPos","onStartAutoScroll","onEndAutoScroll","_fireEvent","eventName","apply","toStop","isVertical","isForward","clearInterval","_handler","_autoScroll","setInterval","hitch","target","targetRow","scroller","firstVisibleRow","rowCount","scrollToRow","_scrollColumn","node","scrollboxNode","clientWidth","scrollWidth","limit","edge","headerPos","cells","filter","layout","cell","hidden","length","getHeaderNode","index","scrollLeft","registerPlugin"],"mappings":"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","file":"../../../../grid/enhanced/plugins/AutoScroll.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/html\",\r\n\t\"dojo/_base/window\",\r\n\t\"../_Plugin\",\r\n\t\"../../_RowSelector\",\r\n\t\"../../EnhancedGrid\"\r\n], function(declare, array, lang, html, win, _Plugin, _RowSelector, EnhancedGrid){\r\n\r\nvar AutoScroll = declare(\"dojox.grid.enhanced.plugins.AutoScroll\", _Plugin, {\r\n\t// summary:\r\n\t//\t\tProvides horizontal and vertical auto-scroll for grid.\r\n\t\r\n\t// name: String\r\n\t//\t\tPlugin name\r\n\tname: \"autoScroll\",\r\n\t\r\n\t// autoScrollInterval: Integer\r\n\t//\t\tThe time interval (in miliseconds) between 2 scrolling.\r\n\tautoScrollInterval: 1000,\r\n\t\r\n\t// autoScrollMargin: Integer\r\n\t//\t\tThe width (in pixel) of the margin area where autoscroll can be triggered.\r\n\tautoScrollMargin: 30,\r\n\t\r\n\tconstructor: function(grid, args){\r\n\t\tthis.grid = grid;\r\n\t\tthis.readyForAutoScroll = false;\r\n\t\tthis._scrolling = false;\r\n\t\targs = lang.isObject(args) ? args : {};\r\n\t\tif(\"interval\" in args){\r\n\t\t\tthis.autoScrollInterval = args.interval;\r\n\t\t}\r\n\t\tif(\"margin\" in args){\r\n\t\t\tthis.autoScrollMargin = args.margin;\r\n\t\t}\r\n\t\tthis._initEvents();\r\n\t\tthis._mixinGrid();\r\n\t},\r\n\t_initEvents: function(){\r\n\t\tvar g = this.grid;\r\n\t\tthis.connect(g, \"onCellMouseDown\", function(){\r\n\t\t\tthis.readyForAutoScroll = true;\r\n\t\t});\r\n\t\tthis.connect(g, \"onHeaderCellMouseDown\", function(){\r\n\t\t\tthis.readyForAutoScroll = true;\r\n\t\t});\r\n\t\tthis.connect(g, \"onRowSelectorMouseDown\", function(){\r\n\t\t\tthis.readyForAutoScroll = true;\r\n\t\t});\r\n\t\tthis.connect(win.doc, \"onmouseup\", function(evt){\r\n\t\t\tthis._manageAutoScroll(true);\r\n\t\t\tthis.readyForAutoScroll = false;\r\n\t\t});\r\n\t\tthis.connect(win.doc, \"onmousemove\", function(evt){\r\n\t\t\tif(this.readyForAutoScroll){\r\n\t\t\t\tthis._event = evt;\r\n\t\t\t\tvar gridPos = html.position(g.domNode),\r\n\t\t\t\t\thh = g._getHeaderHeight(),\r\n\t\t\t\t\tmargin = this.autoScrollMargin,\r\n\t\t\t\t\tey = evt.clientY, ex = evt.clientX,\r\n\t\t\t\t\tgy = gridPos.y, gx = gridPos.x,\r\n\t\t\t\t\tgh = gridPos.h, gw = gridPos.w;\r\n\t\t\t\tif(ex >= gx && ex <= gx + gw){\r\n\t\t\t\t\tif(ey >= gy + hh && ey < gy + hh + margin){\r\n\t\t\t\t\t\tthis._manageAutoScroll(false, true, false);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}else if(ey > gy + gh - margin && ey <= gy + gh){\r\n\t\t\t\t\t\tthis._manageAutoScroll(false, true, true);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}else if(ey >= gy && ey <= gy + gh){\r\n\t\t\t\t\t\tvar withinSomeview = array.some(g.views.views, function(view, i){\r\n\t\t\t\t\t\t\tif(view instanceof _RowSelector){\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar viewPos = html.position(view.domNode);\r\n\t\t\t\t\t\t\tif(ex < viewPos.x + margin && ex >= viewPos.x){\r\n\t\t\t\t\t\t\t\tthis._manageAutoScroll(false, false, false, view);\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t}else if(ex > viewPos.x + viewPos.w - margin && ex < viewPos.x + viewPos.w){\r\n\t\t\t\t\t\t\t\tthis._manageAutoScroll(false, false, true, view);\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t\tif(withinSomeview){\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//stop autoscroll.\r\n\t\t\t\tthis._manageAutoScroll(true);\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\t_mixinGrid: function(){\r\n\t\tvar g = this.grid;\r\n\t\tg.onStartAutoScroll = function(/*isVertical, isForward*/){};\r\n\t\tg.onEndAutoScroll = function(/*isVertical, isForward, view, scrollToRowIndex, event*/){};\r\n\t},\r\n\t_fireEvent: function(eventName, args){\r\n\t\tvar g = this.grid;\r\n\t\tswitch(eventName){\r\n\t\t\tcase \"start\":\r\n\t\t\t\tg.onStartAutoScroll.apply(g, args);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"end\":\r\n\t\t\t\tg.onEndAutoScroll.apply(g, args);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t},\r\n\t_manageAutoScroll: function(toStop, isVertical, isForward, view){\r\n\t\tif(toStop){\r\n\t\t\tthis._scrolling = false;\r\n\t\t\tclearInterval(this._handler);\r\n\t\t}else if(!this._scrolling){\r\n\t\t\tthis._scrolling = true;\r\n\t\t\tthis._fireEvent(\"start\", [isVertical, isForward, view]);\r\n\t\t\tthis._autoScroll(isVertical, isForward, view);\r\n\t\t\tthis._handler = setInterval(lang.hitch(this, \"_autoScroll\", isVertical, isForward, view), this.autoScrollInterval);\r\n\t\t}\r\n\t},\r\n\t_autoScroll: function(isVertical, isForward, view){\r\n\t\tvar g = this.grid,\r\n\t\t\ttarget = null;\r\n\t\tif(isVertical){\r\n\t\t\tvar targetRow = g.scroller.firstVisibleRow + (isForward ? 1 : -1);\r\n\t\t\tif(targetRow >= 0 && targetRow < g.rowCount){\r\n\t\t\t\tg.scrollToRow(targetRow);\r\n\t\t\t\ttarget = targetRow;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\ttarget = this._scrollColumn(isForward, view);\r\n\t\t}\r\n\t\tif(target !== null){\r\n\t\t\tthis._fireEvent(\"end\", [isVertical, isForward, view, target, this._event]);\r\n\t\t}\r\n\t},\r\n\t_scrollColumn: function(isForward, view){\r\n\t\tvar node = view.scrollboxNode,\r\n\t\t\ttarget = null;\r\n\t\tif(node.clientWidth < node.scrollWidth){\r\n\t\t\tvar cells = array.filter(this.grid.layout.cells, function(cell){\r\n\t\t\t\treturn !cell.hidden;\r\n\t\t\t});\r\n\t\t\tvar viewPos = html.position(view.domNode);\r\n\t\t\tvar limit, edge, headerPos, i;\r\n\t\t\tif(isForward){\r\n\t\t\t\tlimit = node.clientWidth;\r\n\t\t\t\tfor(i = 0; i < cells.length; ++i){\r\n\t\t\t\t\theaderPos = html.position(cells[i].getHeaderNode());\r\n\t\t\t\t\tedge = headerPos.x - viewPos.x + headerPos.w;\r\n\t\t\t\t\tif(edge > limit){\r\n\t\t\t\t\t\ttarget = cells[i].index;\r\n\t\t\t\t\t\tnode.scrollLeft += edge - limit + 10;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tlimit = 0;\r\n\t\t\t\tfor(i = cells.length - 1; i >= 0; --i){\r\n\t\t\t\t\theaderPos = html.position(cells[i].getHeaderNode());\r\n\t\t\t\t\tedge = headerPos.x - viewPos.x;\r\n\t\t\t\t\tif(edge < limit){\r\n\t\t\t\t\t\ttarget = cells[i].index;\r\n\t\t\t\t\t\tnode.scrollLeft += edge - limit - 10;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t}\r\n});\r\n\r\nEnhancedGrid.registerPlugin(AutoScroll);\r\n\r\nreturn AutoScroll;\r\n});\r\n"]}