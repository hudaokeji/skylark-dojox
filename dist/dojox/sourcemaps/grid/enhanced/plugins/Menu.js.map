{"version":3,"sources":["grid/enhanced/plugins/Menu.js"],"names":["define","declare","array","lang","html","evt","keys","_Plugin","EnhancedGrid","Menu","name","types","constructor","g","this","grid","showMenu","hitch","_setRowMenuAttr","_setCellMenuAttr","_setSelectedRegionMenuAttr","onStartUp","type","option","indexOf","_initMenu","menuType","menu","m","_getMenuWidget","set","_scheduleOpen","setupHeaderMenu","dijit","byId","_setMenuAttr","n","domNode","unBindDomNode","bindDomNode","console","warn","id","e","cellNode","hasClass","rowNode","selectedRegionMenu","onSelectedRegionContextMenu","info","target","coords","keyCode","F10","x","pageX","y","pageY","rowMenu","cellMenu","selection","isSelected","rowIndex","_openMyself","stop","destroy","headerMenu","viewsHeaderNode","inherited","arguments","registerPlugin"],"mappings":";;;;;;;AAAAA,QACC,qBACA,mBACA,kBACA,kBACA,mBACA,YACA,aACA,sBACE,SAASC,EAASC,EAAOC,EAAMC,EAAMC,EAAKC,EAAMC,EAASC,GAE5D,IAAIC,EAAOR,EAAQ,mCAAoCM,GAWtDG,KAAM,QAINC,OAAQ,aAAc,UAAW,WAAY,sBAE7CC,YAAa,WACZ,IAAIC,EAAIC,KAAKC,KACbF,EAAEG,SAAWb,EAAKc,MAAMJ,EAAGC,KAAKE,UAChCH,EAAEK,gBAAkBf,EAAKc,MAAMH,KAAM,mBACrCD,EAAEM,iBAAmBhB,EAAKc,MAAMH,KAAM,oBACtCD,EAAEO,2BAA6BjB,EAAKc,MAAMH,KAAM,+BAEjDO,UAAW,WACV,IAAIC,EAAMC,EAAST,KAAKS,OACxB,IAAID,KAAQC,EACRrB,EAAMsB,QAAQV,KAAKH,MAAOW,IAAS,GAAKC,EAAOD,IACjDR,KAAKW,UAAUH,EAAMC,EAAOD,KAI/BG,UAAW,SAAoBC,EAAgCC,GAC9D,IAAId,EAAIC,KAAKC,KACb,IAAIF,EAAEa,GAAU,CACf,IAAIE,EAAId,KAAKe,eAAeF,GAC5B,IAAIC,EAAG,OACPf,EAAEiB,IAAIJ,EAAUE,GACD,cAAZF,EACFE,EAAEG,cAAgB,aAElBlB,EAAEmB,oBAILH,eAAgB,SAAsCF,GAGrD,OAAQA,aAAgBM,MAAMxB,KAAQkB,EAAOM,MAAMC,KAAKP,IAEzDT,gBAAiB,SAA+BS,GAG/Cb,KAAKqB,aAAaR,EAAM,YAEzBR,iBAAkB,SAA+BQ,GAGhDb,KAAKqB,aAAaR,EAAM,aAEzBP,2BAA4B,SAA+BO,GAG1Db,KAAKqB,aAAaR,EAAM,uBAEzBQ,aAAc,SAA+BR,EAAgBD,GAG5D,IAAIb,EAAIC,KAAKC,KAAMqB,EAAIvB,EAAEwB,QACrBV,GAAUA,aAAgBM,MAAMxB,MAIjCI,EAAEa,IACJb,EAAEa,GAAUY,cAAcF,GAE3BvB,EAAEa,GAAYC,EACdd,EAAEa,GAAUa,YAAYH,IAPvBI,QAAQC,KAAKf,EAAU,YAAab,EAAE6B,GAAI,qBAS5C1B,SAAU,SAAkB2B,GAU3B,IAHwBA,EAAEC,UAAYxC,EAAKyC,SAASF,EAAEC,SAAU,yBAC/DD,EAAEG,UAAY1C,EAAKyC,SAASF,EAAEG,QAAS,yBAA2B1C,EAAKyC,SAASF,EAAEG,QAAS,8BAErEhC,KAAKiC,mBAC3BjC,KAAKkC,4BAA4BL,OADlC,CAKA,IAAIM,GAAQC,OAAQP,EAAEO,OAAQC,OAAQR,EAAES,UAAY9C,EAAK+C,KAAO,UAAWV,GAAKW,EAAGX,EAAEY,MAAOC,EAAGb,EAAEc,OAAU,MAC3G,GAAG3C,KAAK4C,WAAa5C,KAAK6C,UAAY7C,KAAK8C,UAAUC,WAAWlB,EAAEmB,WAAanB,EAAEG,SAAW1C,EAAKyC,SAASF,EAAEG,QAAS,oBAGpH,OAFAhC,KAAK4C,QAAQK,YAAYd,QACzB5C,EAAI2D,KAAKrB,GAIP7B,KAAK6C,UACP7C,KAAK6C,SAASI,YAAYd,GAE3B5C,EAAI2D,KAAKrB,KAEVsB,QAAS,WAIR,IAAIpD,EAAIC,KAAKC,KACVF,EAAEqD,YAAYrD,EAAEqD,WAAW5B,cAAczB,EAAEsD,iBAC3CtD,EAAE6C,SAAS7C,EAAE6C,QAAQpB,cAAczB,EAAEwB,SACrCxB,EAAE8C,UAAU9C,EAAE8C,SAASrB,cAAczB,EAAEwB,SACvCxB,EAAEkC,oBAAoBlC,EAAEkC,mBAAmBkB,UAC9CnD,KAAKsD,UAAUC,cAMjB,OAFA7D,EAAa8D,eAAe7D,GAErBA","file":"../../../../grid/enhanced/plugins/Menu.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/html\",\r\n\t\"dojo/_base/event\",\r\n\t\"dojo/keys\",\r\n\t\"../_Plugin\",\r\n\t\"../../EnhancedGrid\"\r\n], function(declare, array, lang, html, evt, keys, _Plugin, EnhancedGrid){\r\n\r\nvar Menu = declare(\"dojox.grid.enhanced.plugins.Menu\", _Plugin, {\r\n\t// summary:\r\n\t//\t\t Provides context menu support, including header menu, row menu, cell menu and selected region menu\r\n\t// example:\r\n\t// |\t<div dojoType=\"dojox.grid.EnhancedGrid\"\r\n\t// |\t\tplugins=\"{menus:{headerMenu:\"headerMenuId\", rowMenu:\"rowMenuId\", cellMenu:\"cellMenuId\",\r\n\t// |\t\t\t\t\t\t   selectedRegionMenu:\"selectedRegionMenuId\"}}\" ...>\r\n\t// |\t</div>\r\n\t\r\n\t// name: String\r\n\t//\t\tPlugin name\r\n\tname: \"menus\",\r\n\r\n\t// types: [const] String[]\r\n\t//\t\tmenu types\r\n\ttypes: ['headerMenu', 'rowMenu', 'cellMenu', 'selectedRegionMenu'],\r\n\t\r\n\tconstructor: function(){\r\n\t\tvar g = this.grid;\r\n\t\tg.showMenu = lang.hitch(g, this.showMenu);\r\n\t\tg._setRowMenuAttr = lang.hitch(this, '_setRowMenuAttr');\r\n\t\tg._setCellMenuAttr = lang.hitch(this, '_setCellMenuAttr');\r\n\t\tg._setSelectedRegionMenuAttr = lang.hitch(this, '_setSelectedRegionMenuAttr');\r\n\t},\r\n\tonStartUp: function(){\r\n\t\tvar type, option = this.option;\r\n\t\tfor(type in option){\r\n\t\t\tif(array.indexOf(this.types, type) >= 0 && option[type]){\r\n\t\t\t\tthis._initMenu(type, option[type]);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t_initMenu: function(/*String*/ menuType, /*String|dijit/Menu*/ menu){\r\n\t\tvar g = this.grid;\r\n\t\tif(!g[menuType]){//in case already created in _Grid.postCreate()\r\n\t\t\tvar m = this._getMenuWidget(menu);\r\n\t\t\tif(!m){return;}\r\n\t\t\tg.set(menuType, m);\r\n\t\t\tif(menuType != \"headerMenu\"){\r\n\t\t\t\tm._scheduleOpen = function(){return;};\r\n\t\t\t}else{\r\n\t\t\t\tg.setupHeaderMenu();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t_getMenuWidget: function(/*String|Widget(dijit.Menu)*/menu){\r\n\t\t// summary:\r\n\t\t//\t\tFetch the required menu widget(should already been created)\r\n\t\treturn (menu instanceof dijit.Menu) ? menu : dijit.byId(menu);\r\n\t},\r\n\t_setRowMenuAttr: function(/*Widget(dijit.Menu)*/menu){\r\n\t\t// summary:\r\n\t\t//\t\tSet row menu widget\r\n\t\tthis._setMenuAttr(menu, 'rowMenu');\r\n\t},\r\n\t_setCellMenuAttr: function(/*Widget(dijit.Menu)*/menu){\r\n\t\t// summary:\r\n\t\t//\t\tSet cell menu widget\r\n\t\tthis._setMenuAttr(menu, 'cellMenu');\r\n\t},\r\n\t_setSelectedRegionMenuAttr: function(/*Widget(dijit.Menu)*/menu){\r\n\t\t// summary:\r\n\t\t//\t\tSet row menu widget\r\n\t\tthis._setMenuAttr(menu, 'selectedRegionMenu');\r\n\t},\r\n\t_setMenuAttr: function(/*Widget(dijit.Menu)*/menu, /*String*/menuType){\r\n\t\t// summary:\r\n\t\t//\t\tBind menus to Grid.\r\n\t\tvar g = this.grid, n = g.domNode;\r\n\t\tif(!menu || !(menu instanceof dijit.Menu)){\r\n\t\t\tconsole.warn(menuType, \" of Grid \", g.id, \" is not existed!\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(g[menuType]){\r\n\t\t\tg[menuType].unBindDomNode(n);\r\n\t\t}\r\n\t\tg[menuType] = menu;\r\n\t\tg[menuType].bindDomNode(n);\r\n\t},\r\n\tshowMenu: function(/*Event*/e){\r\n\t\t// summary:\r\n\t\t//\t\tShow appropriate context menu\r\n\t\t//\t\tFired from dojox.grid.enhanced._Events.onRowContextMenu, 'this' scope - Grid\r\n\r\n\t\t// TODO: test Shift-F10\r\n\r\n\t\tvar inSelectedRegion = (e.cellNode && html.hasClass(e.cellNode, 'dojoxGridRowSelected') ||\r\n\t\t\te.rowNode && (html.hasClass(e.rowNode, 'dojoxGridRowSelected') || html.hasClass(e.rowNode, 'dojoxGridRowbarSelected')));\r\n\t\t\r\n\t\tif(inSelectedRegion && this.selectedRegionMenu){\r\n\t\t\tthis.onSelectedRegionContextMenu(e);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tvar info = {target: e.target, coords: e.keyCode !== keys.F10 && \"pageX\" in e ? {x: e.pageX, y: e.pageY } : null};\r\n\t\tif(this.rowMenu && (!this.cellMenu || this.selection.isSelected(e.rowIndex) || e.rowNode && html.hasClass(e.rowNode, 'dojoxGridRowbar'))){\r\n\t\t\tthis.rowMenu._openMyself(info);\r\n\t\t\tevt.stop(e);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(this.cellMenu){\r\n\t\t\tthis.cellMenu._openMyself(info);\r\n\t\t}\r\n\t\tevt.stop(e);\r\n\t},\r\n\tdestroy: function(){\r\n\t\t// summary:\r\n\t\t//\t\tDestroy all resources.\r\n\t\t//\t\t_Grid.destroy() will unbind headerMenu\r\n\t\tvar g = this.grid;\r\n\t\tif(g.headerMenu){g.headerMenu.unBindDomNode(g.viewsHeaderNode);}\r\n\t\tif(g.rowMenu){g.rowMenu.unBindDomNode(g.domNode);}\r\n\t\tif(g.cellMenu){g.cellMenu.unBindDomNode(g.domNode);}\r\n\t\tif(g.selectedRegionMenu){g.selectedRegionMenu.destroy();}\r\n\t\tthis.inherited(arguments);\r\n\t}\r\n});\r\n\r\nEnhancedGrid.registerPlugin(Menu/*name:'menus'*/);\r\n\r\nreturn Menu;\r\n\r\n});\r\n"]}