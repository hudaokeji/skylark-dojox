{"version":3,"sources":["embed/Object.js"],"names":["define","dojo","declare","domGeometry","_Widget","Flash","Quicktime","experimental","width","height","src","movie","params","reFlash","reQtMovie","reQtAudio","postCreate","this","box","getMarginBox","domNode","w","h","em","match","hasAttributes","ignore","dojoType","class","style","id","attrs","attributes","i","l","length","name","value","kwArgs","path"],"mappings":";;;;;;;AAAAA,QACC,oBACA,qBACA,oBACA,gBACA,UACA,eACE,SAAUC,EAAMC,EAASC,EAAaC,EAASC,EAAOC,GAGzD,OAFAL,EAAKM,aAAa,sBAEXL,EAAQ,qBAAsBE,GAepCI,MAAO,EAIPC,OAAQ,EAIRC,IAAK,GAKLC,MAAO,KAMPC,OAAQ,KAIRC,QAAS,gBAITC,UAAW,oDAIXC,UAAU,kEAEVC,WAAY,WAGX,IAAIC,KAAKT,QAAUS,KAAKR,OAAO,CAE9B,IAAIS,EAAIf,EAAYgB,aAAaF,KAAKG,SACtCH,KAAKT,MAAMU,EAAIG,EAAGJ,KAAKR,OAAOS,EAAII,EAInC,IAAIC,EAAGlB,EAQP,IALGY,KAAKP,IAAIc,MAAMP,KAAKH,YAAcG,KAAKP,IAAIc,MAAMP,KAAKF,cACxDQ,EAAGjB,IAIAW,KAAKL,SACRK,KAAKL,UACFK,KAAKG,QAAQK,iBAaf,IAXA,IAAIC,GACHC,SAAU,GACVnB,MAAO,GACPC,OAAQ,GACRmB,MAAS,GACTC,MAAO,GACPC,GAAI,GACJpB,IAAK,IAGFqB,EAAMd,KAAKG,QAAQY,WACfC,EAAE,EAAGC,EAAEH,EAAMI,OAAQF,EAAEC,EAAGD,IAC7BP,EAAOK,EAAME,GAAGG,QACnBnB,KAAKL,OAAOmB,EAAME,GAAGG,MAAML,EAAME,GAAGI,OAOxC,IAAIC,GACHC,KAAMtB,KAAKP,IACXF,MAAOS,KAAKT,MACZC,OAAQQ,KAAKR,OACbG,OAAQK,KAAKL,QAIdK,KAAKN,MAAM,IAAI,EAAK2B,EAAQrB,KAAKG","file":"../../embed/Object.js","sourcesContent":["define([\r\n\t\"dojo/_base/kernel\",\r\n\t\"dojo/_base/declare\",\t// dojo.declare\r\n\t\"dojo/dom-geometry\",\r\n\t\"dijit/_Widget\",\r\n\t\"./Flash\",\r\n\t\"./Quicktime\"\r\n], function (dojo, declare, domGeometry, _Widget, Flash, Quicktime) {\r\ndojo.experimental(\"dojox.embed.Object\");\r\n\r\nreturn declare(\"dojox.embed.Object\", _Widget, {\r\n\t// summary:\r\n\t//\t\tA widget you can use to embed either a Flash or Quicktime\r\n\t//\t\tmovie.\r\n\t// example:\r\n\t//\t\tFrom markup:\r\n\t//\t|\t<div dojoType=\"dojox.embed.Object\" src=\"path/to/movie.swf\"></div>\r\n\t// example:\r\n\t//\t\tProgrammatic:\r\n\t//\t|\tvar mov=new dojox.embed.Object({\r\n\t//\t|\t\tsrc: \"path/to/movie.swf\"\r\n\t//\t|\t}, node);\r\n\r\n\t// width: Number?\r\n\t//\t\tThe width of the movie. If not provided, the width of this.domNode is used.\r\n\twidth: 0,\r\n\r\n\t// height: Number?\r\n\t//\t\tThe height of the movie. If not provided, the height of this.domNode is used.\r\n\theight: 0,\r\n\r\n\t// src: String\r\n\t//\t\tThe URL of the movie to embed.\r\n\tsrc: \"\",\r\n\r\n\t// movie: HTMLEmbed\r\n\t//\t\tThe eventual reference to the movie embedded.  If you are looking to script\r\n\t//\t\tcontrol over the movie, you'd access it this way.\r\n\tmovie: null,\r\n\r\n\t// params: Object\r\n\t//\t\tA property bag that is created postCreate.  Any additional attributes you\r\n\t//\t\tdefine on your domNode will be collected and placed into this, which will\r\n\t//\t\tthen be passed to the movie constructor.\r\n\tparams: null,\r\n\r\n\t// reFlash: RegExp\r\n\t//\t\tExpression used on the src property to determine if this is Flash or Quicktime.\r\n\treFlash: /\\.swf|\\.flv/gi,\r\n\r\n\t// reQtMovie: RegExp\r\n\t//\t\tExpression used on the src property to determine if this is Flash or Quicktime.\r\n\treQtMovie: /\\.3gp|\\.avi|\\.m4v|\\.mov|\\.mp4|\\.mpg|\\.mpeg|\\.qt/gi,\r\n\r\n\t// reQtAudio: RegExp\r\n\t//\t\tExpression used on the src property to determine if this is Flash or Quicktime.\r\n\treQtAudio:/\\.aiff|\\.aif|\\.m4a|\\.m4b|\\.m4p|\\.midi|\\.mid|\\.mp3|\\.mpa|\\.wav/gi,\r\n\t\r\n\tpostCreate: function(){\r\n\t\t// summary:\r\n\t\t//\t\tConstructs the movie and places it in the document.\r\n\t\tif(!this.width || !this.height){\r\n\t\t\t//\tget the width and height from the domNode\r\n\t\t\tvar box=domGeometry.getMarginBox(this.domNode);\r\n\t\t\tthis.width=box.w, this.height=box.h;\r\n\t\t}\r\n\r\n\t\t//\tthe default embed constructor.\r\n\t\tvar em=Flash;\r\n\r\n\t\t//\tfigure out what kind of movie this is.\r\n\t\tif(this.src.match(this.reQtMovie) || this.src.match(this.reQtAudio)){\r\n\t\t\tem=Quicktime;\r\n\t\t}\r\n\r\n\t\t//\tloop through any attributes and set up our params object.\r\n\t\tif(!this.params){\r\n\t\t\tthis.params={};\r\n\t\t\tif(this.domNode.hasAttributes()){\r\n\t\t\t\t// ignore list\r\n\t\t\t\tvar ignore = {\r\n\t\t\t\t\tdojoType: \"\",\r\n\t\t\t\t\twidth: \"\",\r\n\t\t\t\t\theight: \"\",\r\n\t\t\t\t\t\"class\": \"\",\r\n\t\t\t\t\tstyle: \"\",\r\n\t\t\t\t\tid: \"\",\r\n\t\t\t\t\tsrc: \"\"\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar attrs=this.domNode.attributes;\r\n\t\t\t\tfor(var i=0, l=attrs.length; i<l; i++){\r\n\t\t\t\t\tif(!ignore[attrs[i].name]){\r\n\t\t\t\t\t\tthis.params[attrs[i].name]=attrs[i].value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//\tset up our arguments.\r\n\t\tvar kwArgs={\r\n\t\t\tpath: this.src,\r\n\t\t\twidth: this.width,\r\n\t\t\theight: this.height,\r\n\t\t\tparams: this.params\r\n\t\t};\r\n\r\n\t\t//\tset up the movie.\r\n\t\tthis.movie=new (em)(kwArgs, this.domNode);\r\n\t}\r\n});\r\n});\r\n"]}