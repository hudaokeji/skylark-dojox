{"version":3,"sources":["calc/_Executor.js"],"names":["define","kernel","declare","lang","number","dijit","WidgetBase","TemplatedMixin","math","calcEnv","calc","experimental","Executor","templateString","require","toUrl","_scopeName","_onLoad","env","f","outerPrompt","window","prompt","dojox","hitch","toFracCall","this","Function","isJavaScriptLanguage","format","pattern","Ans","pi","Math","PI","eps","E","powCall","normalizedFunction","onLoad","name","args","body","apply","arguments","deleteFunction","undefined","eval","text","destroy","inherited","pow","base","exponent","isInt","n","floor","inv","NaN","approx","r","round","_Executor"],"mappings":";;;;;;;AAAAA,QACC,oBACA,qBACA,kBACA,cACA,sBACA,oBACA,wBACA,oBACE,SAASC,EAAQC,EAASC,EAAMC,EAAQC,EAAOC,EAAYC,EAAgBC,GAI7E,IAAIC,EAASC,EAFbT,EAAOU,aAAa,cAIpB,IAEIC,EAAWV,EACd,wBACCI,EAAYC,IAMbM,eAAgB,gBAAkBC,QAAQC,MAAM,mCAC/C,4EAA4EV,EAAMW,WAAW,iDAE9FC,QAAS,SAASC,GAQjB,IAAI,IAAIC,KAJRV,EAAUS,EACVA,EAAIE,YAAcC,OAAOC,OAEzBJ,EAAIK,OAASf,SACAA,EAAOU,EAAIK,MAAMf,KAAKW,GAAKhB,EAAKqB,MAAMhB,EAAMW,GACtD,WAAYT,IACdQ,EAAIO,WAAatB,EAAKqB,MAAMd,EAAM,UAClCgB,KAAKC,SAAS,SAAU,IAAK,yBAG9BT,EAAIU,qBAA8D,OAAvCxB,EAAOyB,OAAO,KAAMC,QAAQ,QACvDZ,EAAIa,IAAM,EACVb,EAAIc,GAAKC,KAAKC,GACdhB,EAAIiB,IAAMF,KAAKG,EAEflB,EAAImB,QAAUlC,EAAKqB,MAAMd,EAAM,OAM/BgB,KAAKY,mBAAmB,OAAQ,IAAK,uBACrCZ,KAAKY,mBAAmB,MAAO,IAAK,sBACpCZ,KAAKY,mBAAmB,MAAO,IAAK,sBACpCZ,KAAKY,mBAAmB,MAAO,IAAK,sBACpCZ,KAAKY,mBAAmB,OAAQ,IAAK,uBACrCZ,KAAKY,mBAAmB,OAAQ,IAAK,uBACrCZ,KAAKY,mBAAmB,OAAQ,IAAK,uBACrCZ,KAAKY,mBAAmB,QAAS,OAAQ,2BACzCZ,KAAKY,mBAAmB,QAAS,IAAK,wBACtCZ,KAAKY,mBAAmB,MAAO,IAAK,wBACpCZ,KAAKY,mBAAmB,OAAQ,IAAK,uBACrCZ,KAAKY,mBAAmB,KAAM,IAAK,sBACnCZ,KAAKY,mBAAmB,MAAO,IAAK,mCACpCZ,KAAKY,mBAAmB,MAAO,OAAQ,uBACvCZ,KAAKY,mBAAmB,eAAgB,OAAQ,yCAChDZ,KAAKY,mBAAmB,IAAK,OAAQ,yCACrCZ,KAAKY,mBAAmB,eAAgB,OAAQ,yCAChDZ,KAAKY,mBAAmB,IAAK,OAAQ,wCAErCZ,KAAKY,mBAAmB,UAAW,kBAAmB,+HACtDZ,KAAKY,mBAAmB,QAAS,SAAU,6BAC3CZ,KAAKY,mBAAmB,QAAS,SAAU,6BAC3CZ,KAAKY,mBAAmB,QAAS,SAAU,8BAC3CZ,KAAKa,UAGNA,OAAQ,aAIRZ,SAAU,SAASa,EAAMC,EAAMC,GAS9B,OAAOvC,EAAKqB,MAAMf,EAASA,EAAQkB,SAASgB,MAAMlC,EAASmC,aAE5DN,mBAAoB,SAASE,EAAMC,EAAMC,GACxC,OAAOvC,EAAKqB,MAAMf,EAASA,EAAQ6B,mBAAmBK,MAAMlC,EAASmC,aAEtEC,eAAgB,SAASL,GACxB/B,EAAQ+B,QAAQM,SACTrC,EAAQ+B,IAEhBO,KAAM,SAASC,GAKd,OAAOvC,EAAQsC,KAAKJ,MAAMlC,EAASmC,YAEpCK,QAAS,WACRvB,KAAKwB,UAAUN,WACfnC,EAAU,QAIZ,OAAOC,GACNyC,IAAK,SAAoBC,EAAiBC,GAKzC,SAASC,EAAMC,GACd,OAAOtB,KAAKuB,MAAMD,IAAMA,EAGzB,GAAGH,GAAQ,GAAKE,EAAMD,GACrB,OAAOpB,KAAKkB,IAAIC,EAAMC,GAEtB,IAAII,EAAM,EAAIJ,EAEd,OAAQC,EAAMG,IAAe,EAANA,GAAaxB,KAAKkB,KAAKC,EAAMC,GAAYK,KAGlEC,OAAQ,SAAoBC,GAG3B,MAAe,iBAALA,EACF3B,KAAK4B,MAzHG,WAyHGD,GAzHH,WA2HTA,GAERE,UAAWlD","file":"../../calc/_Executor.js","sourcesContent":["define([\r\n\t\"dojo/_base/kernel\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/number\",\r\n\t\"dijit/_base/manager\",\r\n\t\"dijit/_WidgetBase\",\r\n\t\"dijit/_TemplatedMixin\",\r\n\t\"dojox/math/_base\"\r\n], function(kernel, declare, lang, number, dijit, WidgetBase, TemplatedMixin, math){\r\n\r\n\tkernel.experimental(\"dojox.calc\");\r\n\r\n\tvar calcEnv, calc; // private\r\n\r\n\tvar magicBigInt = (1 << 30) - 35; // 2^30 - 35 is a prime that ensures approx(n/(2^k)) != n/(2^k) for k >= 1 and n < 2^k\r\n\r\n\tvar Executor = declare(\r\n\t\t\"dojox.calc._Executor\",\r\n\t\t[WidgetBase, TemplatedMixin],\r\n\t{\r\n\t\t// summary:\r\n\t\t//\t\tA graphing, scientific calculator\r\n\t\t//\r\n\t\t\r\n\t\ttemplateString: '<iframe src=\"' + require.toUrl(\"dojox/calc/_ExecutorIframe.html\") +\r\n\t\t\t'\" style=\"display:none;\" onload=\"if(arguments[0] && arguments[0].Function)'+dijit._scopeName+'.byNode(this)._onLoad(arguments[0])\"></iframe>',\r\n\r\n\t\t_onLoad: function(env){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tprepare for communications between the user and the calculator by saving the calculator environment, storing the prompt function locally, and making dojox.math available\r\n\r\n\t\t\tcalcEnv = env;\r\n\t\t\tenv.outerPrompt = window.prompt; // for IE who can't execute the iframe's prompt method without notifying the user first\r\n\t\t\t// let the user call dojo math functions\r\n\t\t\tenv.dojox = {math: {}};\r\n\t\t\tfor(var f in math){ env.dojox.math[f] = lang.hitch(math, f); }\r\n\t\t\tif(\"toFrac\" in calc){\r\n\t\t\t\tenv.toFracCall = lang.hitch(calc, 'toFrac');\r\n\t\t\t\tthis.Function('toFrac', 'x', \"return toFracCall(x)\");\r\n\t\t\t}\r\n\r\n\t\t\tenv.isJavaScriptLanguage = number.format(1.5, {pattern:'#.#'}) == \"1.5\";\r\n\t\t\tenv.Ans = 0;\r\n\t\t\tenv.pi = Math.PI;\r\n\t\t\tenv.eps = Math.E;\r\n\r\n\t\t\tenv.powCall = lang.hitch(calc, 'pow');\r\n\r\n\t\t\t// TODO add Degrees support to trig functions\r\n\r\n\r\n\t\t\t//this.normalizedFunction('toString', 'number, radix', \"return number.toString(radix)\");\r\n\t\t\tthis.normalizedFunction('sqrt', 'x', \"return Math.sqrt(x)\");\r\n\t\t\tthis.normalizedFunction('sin', 'x', \"return Math.sin(x)\");\r\n\t\t\tthis.normalizedFunction('cos', 'x', \"return Math.cos(x)\");\r\n\t\t\tthis.normalizedFunction('tan', 'x', \"return Math.tan(x)\");\r\n\t\t\tthis.normalizedFunction('asin', 'x', \"return Math.asin(x)\");\r\n\t\t\tthis.normalizedFunction('acos', 'x', \"return Math.acos(x)\");\r\n\t\t\tthis.normalizedFunction('atan', 'x', \"return Math.atan(x)\");\r\n\t\t\tthis.normalizedFunction('atan2', 'y, x', \"return Math.atan2(y, x)\");\r\n\t\t\tthis.normalizedFunction('Round', 'x', \"return Math.round(x)\");\r\n\t\t\tthis.normalizedFunction('Int', 'x', \"return Math.floor(x)\");\r\n\t\t\tthis.normalizedFunction('Ceil', 'x', \"return Math.ceil(x)\");\r\n\t\t\tthis.normalizedFunction('ln', 'x', \"return Math.log(x)\");\r\n\t\t\tthis.normalizedFunction('log', 'x', \"return Math.log(x)/Math.log(10)\");\r\n\t\t\tthis.normalizedFunction('pow', 'x, y', \"return powCall(x,y)\");\r\n\t\t\tthis.normalizedFunction('permutations', 'n, r', \"return dojox.math.permutations(n, r);\");\r\n\t\t\tthis.normalizedFunction('P', 'n, r', \"return dojox.math.permutations(n, r);\");\r\n\t\t\tthis.normalizedFunction('combinations', 'n, r', \"return dojox.math.combinations(n, r);\");\r\n\t\t\tthis.normalizedFunction('C', 'n, r', \"return dojox.math.combinations(n, r)\");\r\n\r\n\t\t\tthis.normalizedFunction('toRadix', 'number, baseOut', \"if(!baseOut){ baseOut = 10; } if(typeof number == 'string'){ number = parseFloat(number); }return number.toString(baseOut);\");\r\n\t\t\tthis.normalizedFunction('toBin', 'number', \"return toRadix(number, 2)\");\r\n\t\t\tthis.normalizedFunction('toOct', 'number', \"return toRadix(number, 8)\");\r\n\t\t\tthis.normalizedFunction('toHex', 'number', \"return toRadix(number, 16)\");\r\n\t\t\tthis.onLoad();\r\n\t\t},\r\n\r\n\t\tonLoad: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tthis should be overwritten and become a great place for making user predefined functions\r\n\t\t},\r\n\t\tFunction: function(name, args, body){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreate an anonymous function to run the code the parser generates from the user input.\r\n\t\t\t// name:\r\n\t\t\t//\t\tthis argument is simply a String that represents the name of the function being evaluated. It can be undefined, but in that case the function is a one time use.\r\n\t\t\t// args: String\r\n\t\t\t//\t\tthe function arguments\r\n\t\t\t// body: String\r\n\t\t\t//\t\tthe function body\r\n\t\t\treturn lang.hitch(calcEnv, calcEnv.Function.apply(calcEnv, arguments));\r\n\t\t},\r\n\t\tnormalizedFunction: function(name, args, body){\r\n\t\t\treturn lang.hitch(calcEnv, calcEnv.normalizedFunction.apply(calcEnv, arguments));\r\n\t\t},\r\n\t\tdeleteFunction: function(name){\r\n\t\t\tcalcEnv[name] = undefined;\r\n\t\t\tdelete calcEnv[name];\r\n\t\t},\r\n\t\teval: function(text){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreate an anonymous function to run the code the parser generates from the user input.\r\n\t\t\t// text: String\r\n\t\t\t//\t\tthe user input that needs to be parsed\r\n\t\t\treturn calcEnv.eval.apply(calcEnv, arguments);\r\n\t\t},\r\n\t\tdestroy: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tcalcEnv = null; // assist garbage collection\r\n\t\t}\r\n\t});\r\n\r\n\treturn calc = {\r\n\t\tpow: function(/*Number*/ base, /*Number*/ exponent){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tComputes base ^ exponent\r\n\t\t\t//\t\tWrapper to Math.pow(base, exponent) to handle (-27) ^ (1/3)\r\n\r\n\t\t\tfunction isInt(n){\r\n\t\t\t\treturn Math.floor(n) == n;\r\n\t\t\t}\r\n\r\n\t\t\tif(base >= 0 || isInt(exponent)){\r\n\t\t\t\treturn Math.pow(base, exponent);\r\n\t\t\t}else{ // e.g. (1/3) root of -27 = -3\r\n\t\t\t\tvar inv = 1 / exponent;\r\n\t\t\t\t// e.g. 1 / (1/3) must be an odd integer\r\n\t\t\t\treturn (isInt(inv) && (inv & 1)) ? -Math.pow(-base, exponent) : NaN;\r\n\t\t\t}\r\n\t\t},\r\n\t\tapprox: function(/*Number*/ r){\r\n\t\t\t// summary:\r\n\t\t\t//\tReturn a less exact approximation of r such that approx(r * (1 +- eps)) == approx(r)\r\n\t\t\tif(typeof r == \"number\"){\r\n\t\t\t\treturn Math.round(r * magicBigInt) / magicBigInt;\r\n\t\t\t}\r\n\t\t\treturn r;\r\n\t\t},\r\n\t\t_Executor: Executor\r\n\t};\r\n});\r\n"]}