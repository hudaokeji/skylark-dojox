{"version":3,"sources":["calc/Grapher.js"],"names":["define","declare","lang","win","domConstruct","domClass","domStyle","WidgetBase","WidgetsInTemplateMixin","TemplatedMixin","math","registry","DropDownButton","TooltipDialog","TextBox","CheckBox","ColorPalette","Chart","axis2d","plot2d","Lines","Tufte","colors","template","calc","epsilon","log2","Math","log","defaultParams","graphNumber","fOfX","color","stroke","Grapher","templateString","addXYAxes","chart","addAxis","max","parseInt","this","graphMaxX","get","min","graphMinX","majorLabels","minorLabels","minorTicks","microTicks","htmlLabels","labelFunc","value","maxLabelSize","fixUpper","fixLower","majorTick","length","graphMaxY","graphMinY","vertical","selectAll","i","rowCount","array","checkboxIndex","set","deselectAll","drawOne","onDraw","console","erase","nameNum","name","funcNumberIndex","chartIndex","runs","removeSeries","render","setStatus","onErase","onDelete","k","functionRef","destroy","graphTable","deleteRow","splice","functionMode","expressionIndex","colorIndex","dropDownIndex","tooltipIndex","colorBoxFieldsetIndex","statusIndex","evaluatedExpression","createFunction","tr","insertRow","rowIndex","td","insertCell","d","create","appendChild","checkBox","add","funcMode","doc","createTextNode","expression","b","changedColor","c","dialog","content","colorBoxFieldset","backgroundColor","width","height","display","drop","label","dropDown","containerNode","innerHTML","position","left","top","chartsParent","chartNodeIndex","dojox","charting","setTheme","themes","addPlot","type","shadow","dx","dy","hitch","funcNumber","status","series","dirty","makeDirty","checkDirty1","setTimeout","checkDirty","removeAxis","postCreate","inherited","arguments","createFunc","selectAllButton","deselectAllButton","drawButton","eraseButton","deleteButton","graphWidth","graphHeight","windowOptionsInside","startup","parent","getEnclosingWidget","domNode","parentNode","close","closeButton","mixin","draw","functionToGraph","params","x","y","points","fullGeometry","generatePoints","axes","scaler","bounds","span","lower","upper","addSeries","funcToGraph","minX","maxX","minY","maxY","slopeTrend","slopeTrendTemp","pow2","ceil","p","counter","_name","_value","_graphing","isNaN","push","getSlopePairTrend","slope","inc","pos","a","asymptoteSearch","pop","j","s","points2","x1","y1","slope1","findMinOrMaxY","right","minMaxY","midX","mid","moveTowardsLarger","NaN","pointStart","pointStop","midpoint","pointTemp","rx","nextNumber","rightPoint","abs","unshift","slope2","isInc","isPos","v","p1","p2"],"mappings":"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","file":"../../calc/Grapher.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/window\",\r\n\t\"dojo/dom-construct\",\r\n\t\"dojo/dom-class\",\r\n\t\"dojo/dom-style\",\r\n\t\"dijit/_WidgetBase\",\r\n\t\"dijit/_WidgetsInTemplateMixin\",\r\n\t\"dijit/_TemplatedMixin\",\r\n\t\"dojox/math/_base\",\r\n\t\"dijit/registry\",\r\n\t\"dijit/form/DropDownButton\",\r\n\t\"dijit/TooltipDialog\",\r\n\t\"dijit/form/TextBox\",\r\n\t\"dijit/form/CheckBox\",\r\n\t\"dijit/ColorPalette\",\r\n\t\"dojox/charting/Chart\",\r\n\t\"dojox/charting/axis2d/Default\",\r\n\t\"dojox/charting/plot2d/Default\",\r\n\t\"dojox/charting/plot2d/Lines\",\r\n\t\"dojox/charting/themes/Tufte\",\r\n\t\"dojo/colors\",\r\n\t\"dojo/text!./templates/Grapher.html\",\r\n\t\"dojox/calc/_Executor\",\r\n\t\"dijit/form/Button\", // template\r\n\t\"dijit/form/Select\" // template\r\n], function(declare, lang, win, domConstruct, domClass, domStyle, WidgetBase, WidgetsInTemplateMixin, TemplatedMixin, math, registry, DropDownButton, TooltipDialog, TextBox, CheckBox, ColorPalette, Chart, axis2d, plot2d, Lines, Tufte, colors, template, calc){\r\n\r\n\tvar\r\n\t\tepsilon = 1e-15 / 9,\r\n\t\tbigNumber = 1e200,\r\n\t\tlog2 = Math.log(2),\r\n\t\tdefaultParams = {graphNumber:0, fOfX:true, color:{stroke:\"black\"}};\r\n\r\n\tvar Grapher = declare(\r\n\t\t\"dojox.calc.Grapher\",\r\n\t\t[WidgetBase, TemplatedMixin, WidgetsInTemplateMixin],\r\n\t{\r\n\t\t// summary:\r\n\t\t//\t\tThe dialog layout for making graphs\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\taddXYAxes: function(chart){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tadd or re-add the default x/y axes to the Chart provided\r\n\t\t\t// chart: dojox.charting.Chart\r\n\r\n\t\t\treturn chart.addAxis(\"x\", {\r\n\t\t\t\tmax: parseInt(this.graphMaxX.get(\"value\")),\r\n\t\t\t\tmin: parseInt(this.graphMinX.get(\"value\")),\r\n\t\t\t\tmajorLabels: true,\r\n\t\t\t\tminorLabels: true,\r\n\t\t\t\t//includeZero: true,\r\n\t\t\t\tminorTicks: false,\r\n\t\t\t\tmicroTicks: false,\r\n\t\t\t\t//majorTickStep: 1,\r\n\t\t\t\thtmlLabels: true,\r\n\t\t\t\tlabelFunc: function(value){\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t},\r\n\t\t\t\tmaxLabelSize: 30,\r\n\t\t\t\tfixUpper: \"major\", fixLower: \"major\",\r\n\t\t\t\tmajorTick: { length: 3 }\r\n\t\t\t}).\r\n\t\t\taddAxis(\"y\", {\r\n\t\t\t\tmax: parseInt(this.graphMaxY.get(\"value\")),\r\n\t\t\t\tmin: parseInt(this.graphMinY.get(\"value\")),\r\n\t\t\t\tlabelFunc: function(value){\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t},\r\n\t\t\t\tmaxLabelSize: 50,\r\n\t\t\t\tvertical: true,\r\n\t\t\t\t// htmlLabels: false,\r\n\t\t\t\tmicroTicks: false,\r\n\t\t\t\tminorTicks: true,\r\n\t\t\t\tmajorTick: { stroke: \"black\", length: 3 }\r\n\t\t\t});\r\n\t\t},\r\n\t\tselectAll: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tselect all checkboxes inside the function table\r\n\t\t\tfor(var i = 0; i < this.rowCount; i++){\r\n\t\t\t\tthis.array[i][this.checkboxIndex].set(\"checked\", true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tdeselectAll: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tdeselect all checkboxes inside the function table\r\n\t\t\tfor(var i = 0; i < this.rowCount; i++){\r\n\t\t\t\tthis.array[i][this.checkboxIndex].set(\"checked\", false);\r\n\t\t\t}\r\n\t\t},\r\n\t\tdrawOne: function(i){\r\n\t\t\t// i is a the index to this.array\r\n\t\t\t// override me\r\n\t\t},\r\n\t\tonDraw: function(){\r\n\t\t\tconsole.log(\"Draw was pressed\");\r\n\t\t\t// override me\r\n\t\t},\r\n\t\terase: function(i){\r\n\t\t\t// summary:\r\n\t\t\t//\t\terase the chart inside this.array with the index i\r\n\t\t\t// i: Integer\r\n\t\t\t//\t\tindex to this.array that represents the current row number in the table\r\n\t\t\tvar nameNum = 0;\r\n\t\t\tvar name = \"Series \"+this.array[i][this.funcNumberIndex]+\"_\"+nameNum;\r\n\t\t\twhile(name in this.array[i][this.chartIndex].runs){\r\n\t\t\t\tthis.array[i][this.chartIndex].removeSeries(name);\r\n\t\t\t\tnameNum++;\r\n\t\t\t\tname = \"Series \"+this.array[i][this.funcNumberIndex]+\"_\"+nameNum;\r\n\t\t\t}\r\n\t\t\tthis.array[i][this.chartIndex].render();\r\n\t\t\tthis.setStatus(i, \"Hidden\");\r\n\t\t},\r\n\t\tonErase: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tthe erase button's onClick method\r\n\t\t\t//\t\tit see's if the checkbox is checked and then erases it if it is.\r\n\t\t\tfor(var i = 0; i < this.rowCount; i++){\r\n\t\t\t\tif(this.array[i][this.checkboxIndex].get(\"checked\")){\r\n\t\t\t\t\tthis.erase(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDelete: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThe delete button's onClick method.\r\n\t\t\t//\t\tDelete all of the selected rows.\r\n\t\t\tfor(var i = 0; i < this.rowCount; i++){\r\n\t\t\t\tif(this.array[i][this.checkboxIndex].get(\"checked\")){\r\n\t\t\t\t\tthis.erase(i);\r\n\t\t\t\t\tfor(var k = 0; k < this.functionRef; k++){\r\n\t\t\t\t\t\tif(this.array[i][k] && this.array[i][k][\"destroy\"]){\r\n\t\t\t\t\t\t\tthis.array[i][k].destroy();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.graphTable.deleteRow(i);\r\n\t\t\t\t\tthis.array.splice(i, 1);\r\n\t\t\t\t\tthis.rowCount--;\r\n\t\t\t\t\ti--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t// attributes to name the indices of this.array\r\n\t\tcheckboxIndex:\t\t0,\r\n\t\tfunctionMode:\t\t1,\r\n\t\texpressionIndex:\t2,\r\n\t\tcolorIndex:\t\t3,\r\n\t\tdropDownIndex:\t\t4,\r\n\t\ttooltipIndex:\t\t5,\r\n\t\tcolorBoxFieldsetIndex:\t6,\r\n\t\tstatusIndex:\t\t7,\r\n\t\tchartIndex:\t\t8,\r\n\t\tfuncNumberIndex:\t9,\r\n\t\tevaluatedExpression:\t10,\r\n\t\tfunctionRef:\t\t11,\r\n\r\n\t\tcreateFunction: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreate a new row in the table with all of the dojo objects.\r\n\r\n\t\t\tvar tr = this.graphTable.insertRow(-1);\r\n\t\t\tthis.array[tr.rowIndex] = [];\r\n\t\t\tvar td = tr.insertCell(-1);\r\n\t\t\tvar d = domConstruct.create('div');\r\n\t\t\ttd.appendChild(d);\r\n\t\t\tvar checkBox = new CheckBox({}, d);\r\n\t\t\tthis.array[tr.rowIndex][this.checkboxIndex] = checkBox;\r\n\t\t\tdomClass.add(d, \"dojoxCalcCheckBox\");\r\n\r\n\t\t\ttd = tr.insertCell(-1);\r\n\t\t\tvar funcMode = this.funcMode.get(\"value\");\r\n\t\t\td = win.doc.createTextNode(funcMode);\r\n\t\t\ttd.appendChild(d);\r\n\t\t\tthis.array[tr.rowIndex][this.functionMode] = funcMode;\r\n\t\t\t//domClass.add(d, \"dojoxCalcFunctionMode\");// cannot use text nodes\r\n\r\n\t\t\ttd = tr.insertCell(-1);\r\n\t\t\td = domConstruct.create('div');\r\n\t\t\ttd.appendChild(d);\r\n\t\t\tvar expression = new TextBox({}, d);\r\n\t\t\tthis.array[tr.rowIndex][this.expressionIndex] = expression;\r\n\t\t\tdomClass.add(d, \"dojoxCalcExpressionBox\");\r\n\r\n\t\t\tvar b = domConstruct.create('div');\r\n\t\t\tvar color = new ColorPalette({changedColor:this.changedColor}, b);\r\n\t\t\tdomClass.add(b, \"dojoxCalcColorPalette\");\r\n\r\n\t\t\tthis.array[tr.rowIndex][this.colorIndex] = color;\r\n\r\n\t\t\tvar c = domConstruct.create('div');\r\n\t\t\tvar dialog = new TooltipDialog({content:color}, c);\r\n\t\t\tthis.array[tr.rowIndex][this.tooltipIndex] = dialog;\r\n\t\t\tdomClass.add(c, \"dojoxCalcContainerOfColor\");\r\n\r\n\t\t\ttd = tr.insertCell(-1);\r\n\t\t\td = domConstruct.create('div');\r\n\t\t\ttd.appendChild(d);\r\n\r\n\t\t\tvar colorBoxFieldset = domConstruct.create('fieldset');\r\n\t\t\tdomStyle.set(colorBoxFieldset, { backgroundColor: \"black\", width: \"1em\", height: \"1em\", display: \"inline\" });\r\n\t\t\tthis.array[tr.rowIndex][this.colorBoxFieldsetIndex] = colorBoxFieldset;\r\n\r\n\t\t\tvar drop = new DropDownButton({label:\"Color \", dropDown:dialog}, d);\r\n\t\t\tdrop.containerNode.appendChild(colorBoxFieldset);\r\n\t\t\tthis.array[tr.rowIndex][this.dropDownIndex] = drop;\r\n\t\t\tdomClass.add(d, \"dojoxCalcDropDownForColor\");\r\n\r\n\t\t\t/*td = tr.insertCell(-1);\r\n\t\t\td = domConstruct.create('div');\r\n\t\t\ttd.appendChild(d);\r\n\t\t\tvar status = new TextBox({style:\"width:50px\", value:\"Hidden\", readOnly:true}, d);//hidden, drawn, or error\r\n\t\t\tthis.array[tr.rowIndex][this.statusIndex] = status;\r\n\t\t\tdomClass.add(d, \"dojoxCalcStatusBox\");*/\r\n\r\n\t\t\ttd = tr.insertCell(-1);\r\n\t\t\td = domConstruct.create('fieldset');\r\n\t\t\td.innerHTML = \"Hidden\";\r\n\t\t\tthis.array[tr.rowIndex][this.statusIndex] = d;\r\n\t\t\tdomClass.add(d, \"dojoxCalcStatusBox\");\r\n\t\t\ttd.appendChild(d);\r\n\r\n\t\t\td = domConstruct.create('div');\r\n\t\t\tdomStyle.set(d, { position: \"absolute\", left: \"0px\", top: \"0px\" })\r\n\t\t\tthis.chartsParent.appendChild(d);\r\n\t\t\tthis.array[tr.rowIndex][this.chartNodeIndex] = d;\r\n\t\t\tdomClass.add(d, \"dojoxCalcChart\");\r\n\t\t\tvar chart = new dojox.charting.Chart(d).setTheme(dojox.charting.themes.Tufte).\r\n\t\t\t\taddPlot(\"default\", { type: \"Lines\", shadow:  {dx: 1, dy: 1, width: 2, color: [0, 0, 0, 0.3]} });\r\n\t\t\tthis.addXYAxes(chart);\r\n\t\t\tthis.array[tr.rowIndex][this.chartIndex] = chart;\r\n\t\t\tcolor.set(\"chart\", chart);\r\n\t\t\tcolor.set(\"colorBox\", colorBoxFieldset);\r\n\t\t\tcolor.set(\"onChange\", lang.hitch(color, 'changedColor'));\r\n\r\n\t\t\tthis.array[tr.rowIndex][this.funcNumberIndex] = this.funcNumber++;\r\n\t\t\tthis.rowCount++;\r\n\t\t},\r\n\t\tsetStatus: function(i, status){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tset the status of the row i to be status\r\n\t\t\t// i: Integer\r\n\t\t\t//\t\tindex of this.array as well as a row index\r\n\t\t\t// status: String\r\n\t\t\t//\t\teither Error, Hidden, or Drawn\r\n\t\t\tthis.array[i][this.statusIndex].innerHTML = status; //this.array[i][this.statusIndex].set(\"value\", status);\r\n\t\t},\r\n\t\tchangedColor: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMake the color of the chart the new color.\r\n\t\t\t//\t\tThe context is changed to the colorPalette, and a reference to chart was added to it a an attribute.\r\n\t\t\tvar chart = this.get(\"chart\");\r\n\t\t\tvar colorBoxFieldset = this.get(\"colorBox\");\r\n\t\t\tfor(var i = 0; i < chart.series.length; i++){\r\n\t\t\t\tif(chart.series[i][\"stroke\"]){\r\n\t\t\t\t\tif(chart.series[i].stroke[\"color\"]){\r\n\t\t\t\t\t\tchart.series[i][\"stroke\"].color = this.get(\"value\");\r\n\t\t\t\t\t\tchart.dirty = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tchart.render();\r\n\t\t\tdomStyle.set(colorBoxFieldset, { backgroundColor: this.get(\"value\") });\r\n\t\t},\r\n\t\tmakeDirty: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tif something in the window options is changed, this is called\r\n\t\t\tthis.dirty = true;\r\n\t\t},\r\n\t\tcheckDirty1: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tto stay in sync with onChange, checkDirty is called with a timeout\r\n\t\t\tsetTimeout(lang.hitch(this, 'checkDirty'), 0);\r\n\t\t},\r\n\t\tcheckDirty: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tadjust all charts in this.array according to any changes in window options\r\n\t\t\tif(this.dirty){\r\n\t\t\t\t// change the axes of all charts if it is dirty\r\n\t\t\t\tfor(var i = 0; i < this.rowCount; i++){\r\n\t\t\t\t\tthis.array[i][this.chartIndex].removeAxis(\"x\");\r\n\t\t\t\t\tthis.array[i][this.chartIndex].removeAxis(\"y\");\r\n\t\t\t\t\tthis.addXYAxes(this.array[i][this.chartIndex]);\r\n\t\t\t\t}\r\n\t\t\t\tthis.onDraw();\r\n\t\t\t}\r\n\t\t\tthis.dirty = false;\r\n\t\t},\r\n\t\tpostCreate: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tadd Event handlers, some additional attributes, etc\r\n\t\t\tthis.inherited(arguments);// this is super class postCreate\r\n\t\t\tthis.createFunc.set(\"onClick\", lang.hitch(this, 'createFunction'));\r\n\r\n\t\t\tthis.selectAllButton.set(\"onClick\", lang.hitch(this, 'selectAll'));\r\n\t\t\tthis.deselectAllButton.set(\"onClick\", lang.hitch(this, 'deselectAll'));\r\n\r\n\t\t\tthis.drawButton.set(\"onClick\", lang.hitch(this, 'onDraw'));\r\n\t\t\tthis.eraseButton.set(\"onClick\", lang.hitch(this, 'onErase'));\r\n\t\t\tthis.deleteButton.set(\"onClick\", lang.hitch(this, 'onDelete'));\r\n\r\n\t\t\tthis.dirty = false;\r\n\t\t\tthis.graphWidth.set(\"onChange\", lang.hitch(this, 'makeDirty'));\r\n\t\t\tthis.graphHeight.set(\"onChange\", lang.hitch(this, 'makeDirty'));\r\n\t\t\tthis.graphMaxX.set(\"onChange\", lang.hitch(this, 'makeDirty'));\r\n\t\t\tthis.graphMinX.set(\"onChange\", lang.hitch(this, 'makeDirty'));\r\n\t\t\tthis.graphMaxY.set(\"onChange\", lang.hitch(this, 'makeDirty'));\r\n\t\t\tthis.graphMinY.set(\"onChange\", lang.hitch(this, 'makeDirty'));\r\n\t\t\tthis.windowOptionsInside.set(\"onClose\", lang.hitch(this, 'checkDirty1'));\r\n\r\n\t\t\tthis.funcNumber = 0;\r\n\t\t\tthis.rowCount = 0;\r\n\t\t\tthis.array = [];\r\n\r\n\t\t},\r\n\t\tstartup: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tmake sure the parent has a close button if it needs to be able to close\r\n\t\t\tthis.inherited(arguments);// this is super class startup\r\n\t\t\t// close is only valid if the parent is a widget with a close function\r\n\t\t\tvar parent = registry.getEnclosingWidget(this.domNode.parentNode);\r\n\t\t\tif(parent && typeof parent.close == \"function\"){\r\n\t\t\t\tthis.closeButton.set(\"onClick\", lang.hitch(parent, 'close'));\r\n\t\t\t}else{\r\n\t\t\t\tdomStyle.set(this.closeButton.domNode, { display: \"none\" }); // hide the button\r\n\t\t\t}\r\n\t\t\t// add one row at the start\r\n\t\t\tthis.createFunction();\r\n\r\n\t\t\t// make the graph bounds appear initially\r\n\t\t\tthis.array[0][this.checkboxIndex].set(\"checked\", true);\r\n\t\t\tthis.onDraw();\r\n\t\t\tthis.erase(0);\r\n\t\t\tthis.array[0][this.expressionIndex].value = \"\";\r\n\t\t}\r\n\t});\r\n\r\n\treturn lang.mixin(calc, {\r\n\t\tdraw: function(/*Chart*/ chart, /*Function*/ functionToGraph, params){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tgraph a chart with the given function.\r\n\t\t\t// chart: dojox.charting.Chart\r\n\t\t\t// functionToGraph: Function\r\n\t\t\t//\t\tFunction with one numeric parameter (x or y typically)\r\n\t\t\t// params: Object\r\n\t\t\t//\t\tcan contain the number of the graph in the chart it is (an integer), a boolean saying if the functionToGraph is a function of x (otherwise y)\r\n\t\t\t//\t\tand the color, which is an object with a stroke with a color's name eg: color:{stroke:\"black\"}\r\n\r\n\t\t\tparams = lang.mixin({}, defaultParams, params);\r\n\t\t\tchart.fullGeometry();\r\n\t\t\tvar x;\r\n\t\t\tvar y;\r\n\t\t\tvar points;\r\n\t\t\tif(params.fOfX==true){\r\n\t\t\t\tx = 'x';\r\n\t\t\t\ty = 'y';\r\n\t\t\t\tpoints = calc.generatePoints(functionToGraph, x, y, chart.axes.x.scaler.bounds.span, chart.axes.x.scaler.bounds.lower, chart.axes.x.scaler.bounds.upper, chart.axes.y.scaler.bounds.lower, chart.axes.y.scaler.bounds.upper);\r\n\t\t\t}else{\r\n\t\t\t\tx = 'y';\r\n\t\t\t\ty = 'x';\r\n\t\t\t\tpoints = calc.generatePoints(functionToGraph, x, y, chart.axes.y.scaler.bounds.span, chart.axes.y.scaler.bounds.lower, chart.axes.y.scaler.bounds.upper, chart.axes.x.scaler.bounds.lower, chart.axes.x.scaler.bounds.upper);\r\n\t\t\t}\r\n\r\n\t\t\tvar i = 0;\r\n\r\n\t\t\tif(points.length > 0){\r\n\t\t\t\tfor(; i < points.length; i++){\r\n\t\t\t\t\tif(points[i].length>0){\r\n\t\t\t\t\t\tchart.addSeries(\"Series \"+params.graphNumber+\"_\"+i, points[i], params.color);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// you only need to remove the excess i's\r\n\t\t\tvar name = \"Series \"+params.graphNumber+\"_\"+i;\r\n\t\t\twhile(name in chart.runs){\r\n\t\t\t\tchart.removeSeries(name);\r\n\t\t\t\ti++;\r\n\t\t\t\tname = \"Series \"+params.graphNumber+\"_\"+i;\r\n\t\t\t}\r\n\t\t\tchart.render();\r\n\t\t\treturn points;\r\n\t\t},\r\n\r\n\t\tgeneratePoints: function(/*Function*/ funcToGraph, /*String*/ x, /*String*/ y, /*Number*/ width, /*Number*/ minX, /*Number*/ maxX, /*Number*/ minY, /*Number*/ maxY){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreate the points with information about the graph.\r\n\t\t\t// funcToGraph: Function\r\n\t\t\t//\t\tA function with one numeric parameter (x or y typically)\r\n\t\t\t// x: String\r\n\t\t\t//\t\tx and y are Strings which always have the values of \"x\" or \"y\".  If y=\"x\" and x=\"y\" then it is creating points for the function as though it was a function of y\r\n\t\t\t// y: String\r\n\t\t\t//\t\tx and y are Strings which always have the values of \"x\" or \"y\".  If y=\"x\" and x=\"y\" then it is creating points for the function as though it was a function of y\r\n\t\t\t// minX:\r\n\t\t\t//\t\tminX, maxX, minY, and maxY are all bounds of the chart.  If x=\"y\" then maxY should be the maximum bound of x rather than y\r\n\t\t\t// maxX:\r\n\t\t\t//\t\tminX, maxX, minY, and maxY are all bounds of the chart.  If x=\"y\" then maxY should be the maximum bound of x rather than y\r\n\t\t\t// minY:\r\n\t\t\t//\t\tminX, maxX, minY, and maxY are all bounds of the chart.  If x=\"y\" then maxY should be the maximum bound of x rather than y\r\n\t\t\t// maxY:\r\n\t\t\t//\t\tminX, maxX, minY, and maxY are all bounds of the chart.  If x=\"y\" then maxY should be the maximum bound of x rather than y\r\n\t\t\t// width:\r\n\t\t\t//\t\tpixel width of the chart\r\n\t\t\t// output:\r\n\t\t\t//\t\tan array of arrays of points\r\n\t\t\tvar pow2 = (1 << Math.ceil(Math.log(width) / log2));\r\n\t\t\tvar\r\n\t\t\t\tdx = (maxX - minX) / pow2, // divide by 2^n instead of width to avoid loss of precision\r\n\t\t\t\tpoints = [], // [{x:value, y:value2},...]\r\n\t\t\t\tseries = 0,\r\n\t\t\t\tslopeTrend,\r\n\t\t\t\tslopeTrendTemp;\r\n\r\n\t\t\tpoints[series] = [];\r\n\r\n\t\t\tvar i = minX, k, p;\r\n\t\t\tfor(var counter = 0; counter <= pow2; i += dx, counter++){\r\n\t\t\t\tp = {};\r\n\t\t\t\tp[x] = i;\r\n\t\t\t\tp[y] = funcToGraph({_name:x, _value:i, _graphing:true});//funcToGraph(i);\r\n\t\t\t\tif(p[x] == null || p[y] == null){\r\n\t\t\t\t\treturn {};// someone pushed cancel in the val code\r\n\t\t\t\t}\r\n\t\t\t\tif(isNaN(p[y]) || isNaN(p[x])){\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tpoints[series].push(p);\r\n\r\n\t\t\t\tif(points[series].length == 3){\r\n\t\t\t\t\tslopeTrend = getSlopePairTrend(slope(points[series][points[series].length - 3], points[series][points[series].length-2]), slope(points[series][points[series].length-2], points[series][points[series].length-1]));\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif(points[series].length < 4){\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tslopeTrendTemp = getSlopePairTrend(slope(points[series][points[series].length - 3], points[series][points[series].length-2]), slope(points[series][points[series].length-2], points[series][points[series].length-1]));\r\n\t\t\t\tif(slopeTrend.inc != slopeTrendTemp.inc || slopeTrend.pos != slopeTrendTemp.pos){\r\n\t\t\t\t\t// var a = asymptoteSearch(funcToGraph, points[series][points[series].length - 2], points[series][points[series].length-1]);\r\n\t\t\t\t\tvar a = asymptoteSearch(funcToGraph, points[series][points[series].length - 3], points[series][points[series].length-1]);\r\n\t\t\t\t\tp = points[series].pop();\r\n\t\t\t\t\t// this pop was added after changing the var a line above\r\n\t\t\t\t\tpoints[series].pop();\r\n\t\t\t\t\tfor(var j = 0; j < a[0].length; j++){\r\n\t\t\t\t\t\tpoints[series].push(a[0][j]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor(k = 1; k < a.length; k++){\r\n\t\t\t\t\t\tpoints[++series] = a.pop();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpoints[series].push(p);\r\n\t\t\t\t\tslopeTrend = slopeTrendTemp;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile(points.length > 1){\r\n\t\t\t\tfor(k = 0; k < points[1].length; k++){\r\n\t\t\t\t\tif(points[0][points[0].length - 1][x] == points[1][k][x]){\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpoints[0].push(points[1][k]);\r\n\t\t\t\t}\r\n\t\t\t\tpoints.splice(1, 1);\r\n\t\t\t}\r\n\t\t\tpoints = points[0];\r\n\r\n\t\t\t// make new series when it goes off the graph\r\n\t\t\tvar s = 0;\r\n\t\t\tvar points2 = [ [] ];\r\n\t\t\tfor(k = 0; k < points.length; k++){\r\n\t\t\t\tvar x1, y1, b, slope1;\r\n\t\t\t\tif(isNaN(points[k][y]) || isNaN(points[k][x])){\r\n\t\t\t\t\twhile(isNaN(points[k][y]) || isNaN(points[k][x])){\r\n\t\t\t\t\t\tpoints.splice(k, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpoints2[++s] = [];\r\n\t\t\t\t\tk--;\r\n\t\t\t\t}else if(points[k][y] > maxY || points[k][y] < minY){\r\n\t\t\t\t\t// make the last point's y equal maxY and find a matching x\r\n\t\t\t\t\tif(k > 0 && points[k - 1].y!=minY && points[k - 1].y!=maxY){\r\n\t\t\t\t\t\tslope1 = slope(points[k - 1], points[k]);\r\n\t\t\t\t\t\tif(slope1 > bigNumber){\r\n\t\t\t\t\t\t\tslope1 = bigNumber;\r\n\t\t\t\t\t\t}else if(slope1 < -bigNumber){\r\n\t\t\t\t\t\t\tslope1 = -bigNumber;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(points[k][y] > maxY){\r\n\t\t\t\t\t\t\ty1 = maxY;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\ty1 = minY;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tb = points[k][y] - slope1 * points[k][x];\r\n\t\t\t\t\t\tx1 = (y1 - b) / slope1;\r\n\r\n\t\t\t\t\t\tp = {};\r\n\t\t\t\t\t\tp[x] = x1;\r\n\t\t\t\t\t\tp[y] = funcToGraph(x1);//y1;//\r\n\r\n\t\t\t\t\t\tif(p[y]!=y1){\r\n\t\t\t\t\t\t\tp = findMinOrMaxY(funcToGraph, points[k - 1], points[k], y1);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tpoints2[s].push(p);\r\n\t\t\t\t\t\t// setup the next series\r\n\t\t\t\t\t\tpoints2[++s] = []\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar startK = k;\r\n\t\t\t\t\twhile(k < points.length && (points[k][y] > maxY || points[k][y] < minY)){\r\n\t\t\t\t\t\tk++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(k >= points.length){\r\n\t\t\t\t\t\tif(points2[s].length == 0){\r\n\t\t\t\t\t\t\tpoints2.splice(s, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// connect the end graph\r\n\t\t\t\t\tif(k > 0 && points[k].y != minY && points[k].y != maxY){\r\n\t\t\t\t\t\tslope1 = slope(points[k - 1], points[k]);\r\n\t\t\t\t\t\tif(slope1 > bigNumber){\r\n\t\t\t\t\t\t\tslope1 = bigNumber;\r\n\t\t\t\t\t\t}else if(slope1 < -bigNumber){\r\n\t\t\t\t\t\t\tslope1 = -bigNumber;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(points[k - 1][y] > maxY){\r\n\t\t\t\t\t\t\ty1 = maxY;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\ty1 = minY;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tb = points[k][y] - slope1 * points[k][x];\r\n\t\t\t\t\t\tx1 = (y1 - b) / slope1;\r\n\r\n\t\t\t\t\t\tp = {};\r\n\t\t\t\t\t\tp[x] = x1;\r\n\t\t\t\t\t\tp[y] = funcToGraph(x1);//y1;//\r\n\t\t\t\t\t\tif(p[y]!=y1){\r\n\t\t\t\t\t\t\tp = findMinOrMaxY(funcToGraph, points[k - 1], points[k], y1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpoints2[s].push(p);\r\n\t\t\t\t\t\tpoints2[s].push(points[k]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tpoints2[s].push(points[k]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn points2;\r\n\r\n\t\t\tfunction findMinOrMaxY(funcToGraph, left, right, minMaxY){\r\n\r\n\t\t\t\twhile(left<=right){\r\n\t\t\t\t\tvar midX = (left[x]+right[x])/2;\r\n\t\t\t\t\tvar mid = {};\r\n\t\t\t\t\tmid[x] = midX;\r\n\t\t\t\t\tmid[y] = funcToGraph(mid[x]);\r\n\r\n\t\t\t\t\tif(minMaxY==mid[y]||mid[x]==right[x]||mid[x]==left[x]){\r\n\t\t\t\t\t\treturn mid;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar moveTowardsLarger = true;\r\n\t\t\t\t\tif(minMaxY<mid[y]){\r\n\t\t\t\t\t\tmoveTowardsLarger = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(mid[y]<right[y]){\r\n\t\t\t\t\t\tif(moveTowardsLarger){\r\n\t\t\t\t\t\t\tleft = mid;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tright = mid;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else if(mid[y]<left[y]){\r\n\t\t\t\t\t\tif(!moveTowardsLarger){\r\n\t\t\t\t\t\t\tleft = mid;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tright = mid;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn NaN;\r\n\t\t\t}\r\n\r\n\t\t\tfunction asymptoteSearch(funcToGraph, pointStart, pointStop){\r\n\t\t\t\tvar\r\n\t\t\t\t\tpointTemp = [ [], [] ],\r\n\t\t\t\t\tleft = pointStart,\r\n\t\t\t\t\tright = pointStop,\r\n\t\t\t\t\tmidpoint;\r\n\r\n\r\n\t\t\t\twhile(left[x] <= right[x]){\r\n\t\t\t\t\tvar midX = (left[x] + right[x]) / 2;\r\n\r\n\t\t\t\t\tmidpoint = {};\r\n\t\t\t\t\tmidpoint[x] = midX;\r\n\t\t\t\t\tmidpoint[y] = funcToGraph(midX);\r\n\r\n\t\t\t\t\tvar rx = nextNumber(midpoint[x]);\r\n\t\t\t\t\tvar rightPoint = {};\r\n\t\t\t\t\trightPoint[x] = rx;\r\n\t\t\t\t\trightPoint[y] = funcToGraph(rx);\r\n\r\n\t\t\t\t\tif(Math.abs(rightPoint[y]) >= Math.abs(midpoint[y])){\r\n\t\t\t\t\t\tpointTemp[0].push(midpoint);\r\n\t\t\t\t\t\tleft = rightPoint;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tpointTemp[1].unshift(midpoint);\r\n\t\t\t\t\t\tif(right[x] == midpoint[x]){\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tright = midpoint;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\treturn pointTemp;\r\n\t\t\t}\r\n\r\n\t\t\tfunction getSlopePairTrend(slope1, slope2){\r\n\t\t\t\tvar\r\n\t\t\t\t\tisInc = false,\r\n\t\t\t\t\tisPos = false;\r\n\r\n\t\t\t\tif(slope1 < slope2){\r\n\t\t\t\t\tisInc = true;\r\n\t\t\t\t}\r\n\t\t\t\tif(slope2 > 0){\r\n\t\t\t\t\tisPos = true;\r\n\t\t\t\t}\r\n\t\t\t\treturn { inc: isInc, pos: isPos };\r\n\t\t\t}\r\n\r\n\t\t\tfunction nextNumber(v){\r\n\t\t\t\tvar delta;\r\n\t\t\t\tif(v > -1 && v < 1){\r\n\t\t\t\t\tif(v < 0){ // special handling as we approach 0\r\n\t\t\t\t\t\tif(v >= -epsilon){\r\n\t\t\t\t\t\t\tdelta = -v; // always stop at 0\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tdelta = v / Math.ceil(v / epsilon); // divide distance to 0 into equal tiny chunks\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tdelta = epsilon;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdelta = Math.abs(v) * epsilon;\r\n\t\t\t\t}\r\n\t\t\t\treturn v + delta;\r\n\t\t\t}\r\n\r\n\t\t\tfunction slope(p1, p2){\r\n\t\t\t\treturn (p2[y] - p1[y]) / (p2[x] - p1[x]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tGrapher: Grapher\r\n\t});\r\n});\r\n"]}