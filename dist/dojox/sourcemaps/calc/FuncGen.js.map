{"version":3,"sources":["calc/FuncGen.js"],"names":["define","declare","lang","domStyle","WidgetBase","WidgetsInTemplateMixin","TemplatedMixin","math","registry","template","calc","FuncGen","templateString","onSelect","this","reset","onClear","confirm","clear","saveFunction","name","args","body","onSaved","textarea","set","combo","get","functions","onReset","status","deleteThing","item","writeStore","isItem","deleteItem","save","deleteFunction","onDelete","readyStatus","readStore","startup","inherited","arguments","parent","getEnclosingWidget","domNode","parentNode","close","closeButton","hitch","display","mixin"],"mappings":";;;;;;;AAAAA,QACC,qBACA,kBACA,iBACA,oBACA,gCACA,wBACA,mBACA,iBACA,qCACA,uBACA,sBACA,4BACA,oBACA,sBACE,SAASC,EAASC,EAAMC,EAAUC,EAAYC,EAAwBC,EAAgBC,EAAMC,EAAUC,EAAUC,GAElH,IAAIC,EAAUV,EACb,sBACCG,EAAYE,EAAgBD,IAK7BO,eAAgBH,EAEhBI,SAAU,WAGTC,KAAKC,SAENC,QAAS,WAIKC,QAAQ,4DAEpBH,KAAKI,SAGPC,aAAc,SAASC,EAAMC,EAAMC,KAGnCC,QAAS,aAITL,MAAO,WAGNJ,KAAKU,SAASC,IAAI,QAAS,IAC3BX,KAAKO,KAAKI,IAAI,QAAS,IACvBX,KAAKY,MAAMD,IAAI,QAAS,KAEzBV,MAAO,WAGHD,KAAKY,MAAMC,IAAI,WAAYb,KAAKc,YAClCd,KAAKU,SAASC,IAAI,QAASX,KAAKc,UAAUd,KAAKY,MAAMC,IAAI,UAAUL,MACnER,KAAKO,KAAKI,IAAI,QAASX,KAAKc,UAAUd,KAAKY,MAAMC,IAAI,UAAUN,QAGjEQ,QAAS,WAKLf,KAAKY,MAAMC,IAAI,WAAYb,KAAKc,YACrBX,QAAQ,yCAEpBH,KAAKC,QACLD,KAAKgB,OAAOL,IAAI,QAAS,0DAI5BM,YAAa,SAASC,GAGlBlB,KAAKmB,WAAWC,OAAOF,KAGzBlB,KAAKmB,WAAWE,WAAWH,GAC3BlB,KAAKmB,WAAWG,SAKlBC,eAAgB,SAASjB,KAGzBkB,SAAU,WAMT,IAAIlB,EACJ,IAAIA,EAAON,KAAKY,MAAMC,IAAI,YAAab,KAAKc,WAE3C,GADaX,QAAQ,wCACX,CACT,IAAIe,EAAOlB,KAAKY,MAAMM,KAItBlB,KAAKmB,WAAWE,WAAWH,GAC3BlB,KAAKmB,WAAWG,OAEhBtB,KAAKuB,eAAejB,UACbN,KAAKc,UAAUR,GACtBN,KAAKI,cAGNJ,KAAKgB,OAAOL,IAAI,QAAS,gDAG3Bc,YAAa,WAGZzB,KAAKgB,OAAOL,IAAI,QAAS,UAE1BQ,WAAW,KACXO,UAAU,KACVZ,UAAU,KASVa,QAAS,WAIR3B,KAAKY,MAAMD,IAAI,QAASX,KAAKmB,YAE7BnB,KAAK4B,UAAUC,WAEf,IAAIC,EAASpC,EAASqC,mBAAmB/B,KAAKgC,QAAQC,YACnDH,GAAiC,mBAAhBA,EAAOI,MAC1BlC,KAAKmC,YAAYxB,IAAI,UAAWvB,EAAKgD,MAAMN,EAAQ,UAEnDzC,EAASsB,IAAIX,KAAKmC,YAAYH,SAAWK,QAAS,YAKrD,OAAOjD,EAAKkD,MAAM1C,GAAQC,QAASA","file":"../../calc/FuncGen.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/dom-style\",\r\n\t\"dijit/_WidgetBase\",\r\n\t\"dijit/_WidgetsInTemplateMixin\",\r\n\t\"dijit/_TemplatedMixin\",\r\n\t\"dojox/math/_base\",\r\n\t\"dijit/registry\",\r\n\t\"dojo/text!./templates/FuncGen.html\",\r\n\t\"dojox/calc/_Executor\",\r\n\t\"dijit/form/ComboBox\", // template\r\n\t\"dijit/form/SimpleTextarea\", // template\r\n\t\"dijit/form/Button\", // template\r\n\t\"dijit/form/TextBox\" // template\r\n], function(declare, lang, domStyle, WidgetBase, WidgetsInTemplateMixin, TemplatedMixin, math, registry, template, calc){\r\n\r\n\tvar FuncGen = declare(\r\n\t\t\"dojox.calc.FuncGen\",\r\n\t\t[WidgetBase, TemplatedMixin, WidgetsInTemplateMixin],\r\n\t{\r\n\t\t// summary:\r\n\t\t//\t\tThe dialog layout for making functions\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\tonSelect: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tif they select something in the name combobox, then change the body and arguments to correspond to the function they selected\r\n\t\t\tthis.reset();\r\n\t\t},\r\n\t\tonClear: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThe clear button in the template calls this.\r\n\t\t\t//\t\tClear the name, arguments, and body if the user says yes.\r\n\t\t\tvar answer = confirm(\"Do you want to clear the name, argument, and body text?\");\r\n\t\t\tif(answer){\r\n\t\t\t\tthis.clear();\r\n\t\t\t}\r\n\t\t},\r\n\t\tsaveFunction: function(name, args, body){\r\n\t\t\t// override me\r\n\t\t},\r\n\t\tonSaved: function(){\r\n\t\t\t// this on save needs to be overriden if you want Executor parsing support\r\n\t\t\t//console.log(\"Save was pressed\");\r\n\t\t},\r\n\t\tclear: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tclear the name, arguments, and body\r\n\t\t\tthis.textarea.set(\"value\", \"\");\r\n\t\t\tthis.args.set(\"value\", \"\");\r\n\t\t\tthis.combo.set(\"value\", \"\");\r\n\t\t},\r\n\t\treset: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tset the arguments and body to match a function selected if it exists in the function list\r\n\t\t\tif(this.combo.get(\"value\") in this.functions){\r\n\t\t\t\tthis.textarea.set(\"value\", this.functions[this.combo.get(\"value\")].body);\r\n\t\t\t\tthis.args.set(\"value\", this.functions[this.combo.get(\"value\")].args);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonReset: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\t(Reset button on click event) reset the arguments and body to their previously saved state if the user says yes\r\n\r\n\t\t\t//console.log(\"Reset was pressed\");\r\n\t\t\tif(this.combo.get(\"value\") in this.functions){\r\n\t\t\t\tvar answer = confirm(\"Do you want to reset this function?\");\r\n\t\t\t\tif(answer){\r\n\t\t\t\t\tthis.reset();\r\n\t\t\t\t\tthis.status.set(\"value\", \"The function has been reset to its last save point.\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tdeleteThing: function(item){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tdelete an item in the writestore\r\n\t\t\tif(this.writeStore.isItem(item)){\r\n\t\t\t\t// delete it\r\n\t\t\t\t//console.log(\"Found item \"+item);\r\n\t\t\t\tthis.writeStore.deleteItem(item);\r\n\t\t\t\tthis.writeStore.save();\r\n\t\t\t}else{\r\n\t\t\t\t//console.log(\"Unable to locate the item\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tdeleteFunction: function(name){\r\n\t\t\t// override me\r\n\t\t},\r\n\t\tonDelete: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\t(Delete button on click event) delete a function if the user clicks yes\r\n\r\n\t\t\t//console.log(\"Delete was pressed\");\r\n\r\n\t\t\tvar name;\r\n\t\t\tif((name = this.combo.get(\"value\")) in this.functions){\r\n\t\t\t\tvar answer = confirm(\"Do you want to delete this function?\");\r\n\t\t\t\tif(answer){\r\n\t\t\t\t\tvar item = this.combo.item;\r\n\r\n\t\t\t\t\t//this.writeStore.fetchItemByIdentity({identity:name, onItem: this.deleteThing, onError:null});\r\n\r\n\t\t\t\t\tthis.writeStore.deleteItem(item);\r\n\t\t\t\t\tthis.writeStore.save();\r\n\r\n\t\t\t\t\tthis.deleteFunction(name);\r\n\t\t\t\t\tdelete this.functions[name];\r\n\t\t\t\t\tthis.clear();\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.status.set(\"value\", \"Function cannot be deleted, it isn't saved.\");\r\n\t\t\t}\r\n\t\t},\r\n\t\treadyStatus: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tset the status in the template to ready\r\n\t\t\tthis.status.set(\"value\", \"Ready\");\r\n\t\t},\r\n\t\twriteStore:null, //the user can save functions to the writestore\r\n\t\treadStore:null, // users cannot edit the read store contents, but they can use them\r\n\t\tfunctions:null, // use the names to get to the function\r\n\r\n\t\t/*postCreate: function(){\r\n\t\t\tthis.functions = []; // use the names to get to the function\r\n\t\t\tthis.writeStore = new dojo.data.ItemFileWriteStore({data: {identifier: 'name', items:[]}});\r\n\r\n\t\t\tthis.combo.set(\"store\", this.writeStore);\r\n\t\t},*/\r\n\r\n\t\tstartup: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tmake sure the parent has a close button if it needs to be able to close\r\n\t\t\t//\t\tlink the write store too\r\n\t\t\tthis.combo.set(\"store\", this.writeStore);\r\n\r\n\t\t\tthis.inherited(arguments);// this is super class startup\r\n\t\t\t// close is only valid if the parent is a widget with a close function\r\n\t\t\tvar parent = registry.getEnclosingWidget(this.domNode.parentNode);\r\n\t\t\tif(parent && typeof parent.close == \"function\"){\r\n\t\t\t\tthis.closeButton.set(\"onClick\", lang.hitch(parent, 'close'));\r\n\t\t\t}else{\r\n\t\t\t\tdomStyle.set(this.closeButton.domNode, { display: \"none\" }); // hide the button\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn lang.mixin(calc, { FuncGen: FuncGen });\r\n});\r\n"]}