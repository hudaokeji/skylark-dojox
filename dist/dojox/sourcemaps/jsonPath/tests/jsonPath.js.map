{"version":3,"sources":["jsonPath/tests/jsonPath.js"],"names":["dojo","provide","require","dojox","jsonPath","tests","error","t","d","errData","errback","testData","store","book","category","author","title","price","isbn","bicycle","color","symbols","@.$;","doh","register","name","runTest","result","toJson","query","this","assertEqual","resultType","success","path","value","evalType"],"mappings":"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","file":"../../../jsonPath/tests/jsonPath.js","sourcesContent":["dojo.provide(\"dojox.jsonPath.tests.jsonPath\");\r\ndojo.require(\"dojox.jsonPath\");\r\n\r\n\r\ndojox.jsonPath.tests.error = function(t, d, errData){\r\n\t// summary:\r\n\t//\t\tThe error callback function to be used for all of the tests.\r\n\td.errback(errData);\r\n};\r\n\r\ndojox.jsonPath.tests.testData= {\r\n\tstore: {\r\n\t\t\"book\": [\r\n\t\t\t{\r\n\t\t\t\t\"category\":\"reference\",\r\n\t\t\t\t\"author\":\"Nigel Rees\",\r\n\t\t\t\t\"title\":\"Sayings of the Century\",\r\n\t\t\t\t\"price\":8.95\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"category\":\"fiction\",\r\n\t\t\t\t\"author\":\"Evelyn Waugh\",\r\n\t\t\t\t\"title\":\"Sword of Honour\",\r\n\t\t\t\t\"price\":12.99\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"category\":\"fiction\",\r\n\t\t\t\t\"author\":\"Herman Melville\",\r\n\t\t\t\t\"title\":\"Moby Dick\",\r\n\t\t\t\t\"isbn\":\"0-553-21311-3\",\r\n\t\t\t\t\"price\":8.99\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"category\":\"fiction\",\r\n\t\t\t\t\"author\":\"J. R. R. Tolkien\",\r\n\t\t\t\t\"title\":\"The Lord of the Rings\",\r\n\t\t\t\t\"isbn\":\"0-395-19395-8\",\r\n\t\t\t\t\"price\":22.99\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"bicycle\": {\r\n\t\t\t\t\"color\":\"red\",\r\n\t\t\t\t\"price\":19.95\r\n\t\t}\r\n\t},\r\n\t\"symbols\":{\"@.$;\":5}\r\n}\r\n\r\ndoh.register(\"dojox.jsonPath.tests.jsonPath\",\r\n\t[\r\n\t\t{\r\n\t\t\tname: \"$.store.book[*].author\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\tvar result = dojo.toJson(dojox.jsonPath.query(dojox.jsonPath.tests.testData, this.name));\r\n\t\t\t\tvar success =  '[\"Nigel Rees\",\"Evelyn Waugh\",\"Herman Melville\",\"J. R. R. Tolkien\"]';\r\n\t\t\t\tdoh.assertEqual(success,result);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"$..author\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\tvar result = dojo.toJson(dojox.jsonPath.query(dojox.jsonPath.tests.testData, this.name));\r\n\t\t\t\tvar success =  '[\"Nigel Rees\",\"Evelyn Waugh\",\"Herman Melville\",\"J. R. R. Tolkien\"]';\r\n\t\t\t\tdoh.assertEqual(success,result);\r\n\t\t\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"$.store.*\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\tvar result = dojo.toJson(dojox.jsonPath.query(dojox.jsonPath.tests.testData, this.name));\r\n\t\t\t\tvar success = '[[{\"category\":\"reference\",\"author\":\"Nigel Rees\",\"title\":\"Sayings of the Century\",\"price\":8.95},{\"category\":\"fiction\",\"author\":\"Evelyn Waugh\",\"title\":\"Sword of Honour\",\"price\":12.99},{\"category\":\"fiction\",\"author\":\"Herman Melville\",\"title\":\"Moby Dick\",\"isbn\":\"0-553-21311-3\",\"price\":8.99},{\"category\":\"fiction\",\"author\":\"J. R. R. Tolkien\",\"title\":\"The Lord of the Rings\",\"isbn\":\"0-395-19395-8\",\"price\":22.99}],{\"color\":\"red\",\"price\":19.95}]';\r\n\t\t\t\tdoh.assertEqual(success,result);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"$.store..price\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\tvar result = dojo.toJson(dojox.jsonPath.query(dojox.jsonPath.tests.testData, this.name));\r\n\t\t\t\tvar success = '[8.95,12.99,8.99,22.99,19.95]';\r\n\t\t\t\tdoh.assertEqual(success,result);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"$..book[(@.length-1)]\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\tvar result = dojo.toJson(dojox.jsonPath.query(dojox.jsonPath.tests.testData, this.name));\r\n\t\t\t\tvar success =  '[{\"category\":\"fiction\",\"author\":\"J. R. R. Tolkien\",\"title\":\"The Lord of the Rings\",\"isbn\":\"0-395-19395-8\",\"price\":22.99}]';\r\n\t\t\t\tdoh.assertEqual(success,result);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"$..book[-1:]\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\tvar result = dojo.toJson(dojox.jsonPath.query(dojox.jsonPath.tests.testData, this.name));\r\n\t\t\t\tvar success =  '[{\"category\":\"fiction\",\"author\":\"J. R. R. Tolkien\",\"title\":\"The Lord of the Rings\",\"isbn\":\"0-395-19395-8\",\"price\":22.99}]';\r\n\t\t\t\tdoh.assertEqual(success,result);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"$..book[0,1]\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\tvar result = dojo.toJson(dojox.jsonPath.query(dojox.jsonPath.tests.testData, this.name));\r\n\t\t\t\tvar success =  '[{\"category\":\"reference\",\"author\":\"Nigel Rees\",\"title\":\"Sayings of the Century\",\"price\":8.95},{\"category\":\"fiction\",\"author\":\"Evelyn Waugh\",\"title\":\"Sword of Honour\",\"price\":12.99}]';\r\n\t\t\t\tdoh.assertEqual(success,result);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"$..book[:2]\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\tvar result = dojo.toJson(dojox.jsonPath.query(dojox.jsonPath.tests.testData, this.name));\r\n\t\t\t\tvar success =  '[{\"category\":\"reference\",\"author\":\"Nigel Rees\",\"title\":\"Sayings of the Century\",\"price\":8.95},{\"category\":\"fiction\",\"author\":\"Evelyn Waugh\",\"title\":\"Sword of Honour\",\"price\":12.99}]';\r\n\t\t\t\tdoh.assertEqual(success,result);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"$..book[?(@.isbn)]\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\tvar result = dojo.toJson(dojox.jsonPath.query(dojox.jsonPath.tests.testData, this.name));\r\n\t\t\t\tvar success =  '[{\"category\":\"fiction\",\"author\":\"Herman Melville\",\"title\":\"Moby Dick\",\"isbn\":\"0-553-21311-3\",\"price\":8.99},{\"category\":\"fiction\",\"author\":\"J. R. R. Tolkien\",\"title\":\"The Lord of the Rings\",\"isbn\":\"0-395-19395-8\",\"price\":22.99}]';\r\n\t\t\t\tdoh.assertEqual(success,result);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"$..book[?(@.price<10)]\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\tvar result = dojo.toJson(dojox.jsonPath.query(dojox.jsonPath.tests.testData, this.name));\r\n\t\t\t\tvar success =  '[{\"category\":\"reference\",\"author\":\"Nigel Rees\",\"title\":\"Sayings of the Century\",\"price\":8.95},{\"category\":\"fiction\",\"author\":\"Herman Melville\",\"title\":\"Moby Dick\",\"isbn\":\"0-553-21311-3\",\"price\":8.99}]';\r\n\t\t\t\tdoh.assertEqual(success,result);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"$.symbols[*]\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\tvar result = dojo.toJson(dojox.jsonPath.query(dojox.jsonPath.tests.testData, this.name));\r\n\t\t\t\tvar success =  '[5]';\r\n\t\t\t\tdoh.assertEqual(success,result);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"$.symbols['@.$;']\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\tvar result = dojo.toJson(dojox.jsonPath.query(dojox.jsonPath.tests.testData, this.name));\r\n\t\t\t\tvar success =  '[5]';\r\n\t\t\t\tdoh.assertEqual(success,result);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"$.symbols[(@[('@.$;')]?'@.$;':'@.$;')]\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\tvar result = dojo.toJson(dojox.jsonPath.query(dojox.jsonPath.tests.testData, this.name));\r\n\t\t\t\tvar success =  '[5]';\r\n\t\t\t\tdoh.assertEqual(success,result);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"resultType: 'BOTH' test\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\tvar result = dojo.toJson(dojox.jsonPath.query(dojox.jsonPath.tests.testData, \"$..book[*]\",{resultType:\"BOTH\"}));\r\n\t\t\t\tvar success =  dojo.toJson([{\"path\": \"$['store']['book'][0]\", \"value\": {\"category\": \"reference\", \"author\": \"Nigel Rees\", \"title\": \"Sayings of the Century\", \"price\": 8.95}}, {\"path\": \"$['store']['book'][1]\", \"value\": {\"category\": \"fiction\", \"author\": \"Evelyn Waugh\", \"title\": \"Sword of Honour\", \"price\": 12.99}}, {\"path\": \"$['store']['book'][2]\", \"value\": {\"category\": \"fiction\", \"author\": \"Herman Melville\", \"title\": \"Moby Dick\", \"isbn\": \"0-553-21311-3\", \"price\": 8.99}}, {\"path\": \"$['store']['book'][3]\", \"value\": {\"category\": \"fiction\", \"author\": \"J. R. R. Tolkien\", \"title\": \"The Lord of the Rings\", \"isbn\": \"0-395-19395-8\", \"price\": 22.99}}]);\r\n\t\t\t\tdoh.assertEqual(success,result);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"evalType: 'RESULT' test $.store.book[?(@.price<15)][1:3]\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\tvar result = dojo.toJson(dojox.jsonPath.query(dojox.jsonPath.tests.testData, \"$.store.book[?(@.price<15)][1:3]\",{evalType:\"RESULT\"}));\r\n\t\t\t\tvar success = '[{\"category\":\"fiction\",\"author\":\"Evelyn Waugh\",\"title\":\"Sword of Honour\",\"price\":12.99},{\"category\":\"fiction\",\"author\":\"Herman Melville\",\"title\":\"Moby Dick\",\"isbn\":\"0-553-21311-3\",\"price\":8.99}]';\r\n\t\t\t\tdoh.assertEqual(success,result);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"evalType: 'RESULT' test $.store.book[1].category\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\tvar result = dojo.toJson(dojox.jsonPath.query(dojox.jsonPath.tests.testData, \"$.store.book[1].category\",{evalType:\"RESULT\"}));\r\n\t\t\t\tvar success = '\"fiction\"';\r\n\t\t\t\tdoh.assertEqual(success,result);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"evalType: 'RESULT' test $.store.bicycle\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\tvar result = dojo.toJson(dojox.jsonPath.query(dojox.jsonPath.tests.testData, \"$.store.bicycle\",{evalType:\"RESULT\"}));\r\n\t\t\t\tvar success = '{\"color\":\"red\",\"price\":19.95}';\r\n\t\t\t\tdoh.assertEqual(success,result);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"evalType: 'RESULT' test $.store.book[*]\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\tvar result = dojo.toJson(dojox.jsonPath.query(dojox.jsonPath.tests.testData, \"$.store.book[*]\",{evalType:\"RESULT\"}));\r\n\t\t\t\tvar success = '[\"reference\",\"Nigel Rees\",\"Sayings of the Century\",8.95,\"fiction\",\"Evelyn Waugh\",\"Sword of Honour\",12.99,\"fiction\",\"Herman Melville\",\"Moby Dick\",\"0-553-21311-3\",8.99,\"fiction\",\"J. R. R. Tolkien\",\"The Lord of the Rings\",\"0-395-19395-8\",22.99]';\r\n\t\t\t\tdoh.assertEqual(success,result);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"evalType: 'RESULT' test $.store.book.category\",\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\tvar result = dojo.toJson(dojox.jsonPath.query(dojox.jsonPath.tests.testData, \"$.store.book.category\",{evalType:\"RESULT\"}));\r\n\t\t\t\tvar success = '[\"reference\",\"fiction\",\"fiction\",\"fiction\"]';\r\n\t\t\t\tdoh.assertEqual(success,result);\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n);\r\n\r\n"]}