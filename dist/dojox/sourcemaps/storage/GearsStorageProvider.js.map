{"version":3,"sources":["storage/GearsStorageProvider.js"],"names":["dojo","provide","require","gears","available","declare","dojox","storage","Provider","constructor","TABLE_NAME","initialized","_available","_storageReady","initialize","config","this","manager","loaded","isAvailable","put","key","value","resultsHandler","namespace","_initStorage","isValidKey","Error","DEFAULT_NAMESPACE","isString","toJson","sql","e","console","debug","FAILED","toString","SUCCESS","get","results","length","test","substring","fromJson","getNamespaces","rs","i","push","getKeys","clear","remove","putMultiple","keys","values","isValidKeyArray","Array","_statusHandler","open","db","execute","_stmt","close","getMultiple","result","removeMultiple","isPermanent","getMaximumSize","SIZE_NO_LIMIT","hasSettingsUI","showSettingsUI","declaredClass","hideSettingsUI","google","factory","hasPermission","getPermission","register","GearsStorageProvider"],"mappings":"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","file":"../../storage/GearsStorageProvider.js","sourcesContent":["dojo.provide(\"dojox.storage.GearsStorageProvider\");\r\ndojo.require(\"dojo.gears\");\r\ndojo.require(\"dojox.storage.Provider\");\r\ndojo.require(\"dojox.storage.manager\");\r\ndojo.require(\"dojox.sql\");\r\n\r\nif(dojo.gears.available){\r\n\t\r\n\t(function(){\r\n\t\t// make sure we don't define the gears provider if we're not gears\r\n\t\t// enabled\r\n\t\t\r\n\t\tdojo.declare(\"dojox.storage.GearsStorageProvider\", dojox.storage.Provider, {\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStorage provider that uses the features of Google Gears\r\n\t\t\t//\t\tto store data (it is saved into the local SQL database\r\n\t\t\t//\t\tprovided by Gears, using dojox.sql)\r\n\t\t\t// description:\r\n\t\t\t//\t\tYou can disable this storage provider with the following djConfig variable:\r\n\t\t\t// |\t\tvar djConfig = { disableGearsStorage: true };\r\n\t\t\t//\r\n\t\t\t//\t\tAuthors of this storage provider-\r\n\t\t\t//\t\tBrad Neuberg, bkn3@columbia.edu\r\n\t\t\tconstructor: function(){\r\n\t\t\t},\r\n\t\t\t// instance methods and properties\r\n\t\t\tTABLE_NAME: \"__DOJO_STORAGE\",\r\n\t\t\tinitialized: false,\r\n\t\t\t\r\n\t\t\t_available: null,\r\n\t\t\t_storageReady: false,\r\n\t\t\t\r\n\t\t\tinitialize: function(){\r\n\t\t\t\t//console.debug(\"dojox.storage.GearsStorageProvider.initialize\");\r\n\t\t\t\tif(dojo.config[\"disableGearsStorage\"] == true){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// partition our storage data so that multiple apps\r\n\t\t\t\t// on the same host won't collide\r\n\t\t\t\tthis.TABLE_NAME = \"__DOJO_STORAGE\";\r\n\t\t\t\t\r\n\t\t\t\t// we delay creating our internal tables until an operation is\r\n\t\t\t\t// actually called, to avoid having a Gears permission dialog\r\n\t\t\t\t// on page load (bug #7538)\r\n\t\t\t\t\r\n\t\t\t\t// indicate that this storage provider is now loaded\r\n\t\t\t\tthis.initialized = true;\r\n\t\t\t\tdojox.storage.manager.loaded();\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tisAvailable: function(){\r\n\t\t\t\t// is Google Gears available and defined?\r\n\t\t\t\treturn this._available = dojo.gears.available;\r\n\t\t\t},\r\n\r\n\t\t\tput: function(key, value, resultsHandler, namespace){\r\n\t\t\t\tthis._initStorage();\r\n\t\t\t\t\r\n\t\t\t\tif(!this.isValidKey(key)){\r\n\t\t\t\t\tthrow new Error(\"Invalid key given: \" + key);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tnamespace = namespace||this.DEFAULT_NAMESPACE;\r\n\t\t\t\tif(!this.isValidKey(namespace)){\r\n\t\t\t\t\tthrow new Error(\"Invalid namespace given: \" + key);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// serialize the value;\r\n\t\t\t\t// handle strings differently so they have better performance\r\n\t\t\t\tif(dojo.isString(value)){\r\n\t\t\t\t\tvalue = \"string:\" + value;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvalue = dojo.toJson(value);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// try to store the value\r\n\t\t\t\ttry{\r\n\t\t\t\t\tdojox.sql(\"DELETE FROM \" + this.TABLE_NAME\r\n\t\t\t\t\t\t\t\t+ \" WHERE namespace = ? AND key = ?\",\r\n\t\t\t\t\t\t\t\tnamespace, key);\r\n\t\t\t\t\tdojox.sql(\"INSERT INTO \" + this.TABLE_NAME\r\n\t\t\t\t\t\t\t\t+ \" VALUES (?, ?, ?)\",\r\n\t\t\t\t\t\t\t\tnamespace, key, value);\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\t// indicate we failed\r\n\t\t\t\t\tconsole.debug(\"dojox.storage.GearsStorageProvider.put:\", e);\r\n\t\t\t\t\tresultsHandler(this.FAILED, key, e.toString(), namespace);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(resultsHandler){\r\n\t\t\t\t\tresultsHandler(dojox.storage.SUCCESS, key, null, namespace);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tget: function(key, namespace){\r\n\t\t\t\tthis._initStorage();\r\n\t\t\t\t\r\n\t\t\t\tif(!this.isValidKey(key)){\r\n\t\t\t\t\tthrow new Error(\"Invalid key given: \" + key);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tnamespace = namespace||this.DEFAULT_NAMESPACE;\r\n\t\t\t\tif(!this.isValidKey(namespace)){\r\n\t\t\t\t\tthrow new Error(\"Invalid namespace given: \" + key);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// try to find this key in the database\r\n\t\t\t\tvar results = dojox.sql(\"SELECT * FROM \" + this.TABLE_NAME\r\n\t\t\t\t\t\t\t\t\t\t\t+ \" WHERE namespace = ? AND \"\r\n\t\t\t\t\t\t\t\t\t\t\t+ \" key = ?\",\r\n\t\t\t\t\t\t\t\t\t\t\tnamespace, key);\r\n\t\t\t\tif(!results.length){\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tresults = results[0].value;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// destringify the content back into a\r\n\t\t\t\t// real JavaScript object;\r\n\t\t\t\t// handle strings differently so they have better performance\r\n\t\t\t\tif(dojo.isString(results) && (/^string:/.test(results))){\r\n\t\t\t\t\tresults = results.substring(\"string:\".length);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tresults = dojo.fromJson(results);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn results;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tgetNamespaces: function(){\r\n\t\t\t\tthis._initStorage();\r\n\t\t\t\t\r\n\t\t\t\tvar results = [ dojox.storage.DEFAULT_NAMESPACE ];\r\n\t\t\t\t\r\n\t\t\t\tvar rs = dojox.sql(\"SELECT namespace FROM \" + this.TABLE_NAME\r\n\t\t\t\t\t\t\t\t\t+ \" DESC GROUP BY namespace\");\r\n\t\t\t\tfor(var i = 0; i < rs.length; i++){\r\n\t\t\t\t\tif(rs[i].namespace != dojox.storage.DEFAULT_NAMESPACE){\r\n\t\t\t\t\t\tresults.push(rs[i].namespace);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn results;\r\n\t\t\t},\r\n\r\n\t\t\tgetKeys: function(namespace){\r\n\t\t\t\tthis._initStorage();\r\n\t\t\t\t\r\n\t\t\t\tnamespace = namespace||this.DEFAULT_NAMESPACE;\r\n\t\t\t\tif(!this.isValidKey(namespace)){\r\n\t\t\t\t\tthrow new Error(\"Invalid namespace given: \" + namespace);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar rs = dojox.sql(\"SELECT key FROM \" + this.TABLE_NAME\r\n\t\t\t\t\t\t\t\t\t+ \" WHERE namespace = ?\",\r\n\t\t\t\t\t\t\t\t\tnamespace);\r\n\t\t\t\t\r\n\t\t\t\tvar results = [];\r\n\t\t\t\tfor(var i = 0; i < rs.length; i++){\r\n\t\t\t\t\tresults.push(rs[i].key);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn results;\r\n\t\t\t},\r\n\r\n\t\t\tclear: function(namespace){\r\n\t\t\t\tthis._initStorage();\r\n\t\t\t\t\r\n\t\t\t\tnamespace = namespace||this.DEFAULT_NAMESPACE;\r\n\t\t\t\tif(!this.isValidKey(namespace)){\r\n\t\t\t\t\tthrow new Error(\"Invalid namespace given: \" + namespace);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tdojox.sql(\"DELETE FROM \" + this.TABLE_NAME\r\n\t\t\t\t\t\t\t+ \" WHERE namespace = ?\",\r\n\t\t\t\t\t\t\tnamespace);\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tremove: function(key, namespace){\r\n\t\t\t\tthis._initStorage();\r\n\t\t\t\t\r\n\t\t\t\tif(!this.isValidKey(key)){\r\n\t\t\t\t\tthrow new Error(\"Invalid key given: \" + key);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tnamespace = namespace||this.DEFAULT_NAMESPACE;\r\n\t\t\t\tif(!this.isValidKey(namespace)){\r\n\t\t\t\t\tthrow new Error(\"Invalid namespace given: \" + key);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tdojox.sql(\"DELETE FROM \" + this.TABLE_NAME\r\n\t\t\t\t\t\t\t+ \" WHERE namespace = ? AND\"\r\n\t\t\t\t\t\t\t+ \" key = ?\",\r\n\t\t\t\t\t\t\tnamespace,\r\n\t\t\t\t\t\t\tkey);\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tputMultiple: function(keys, values, resultsHandler, namespace) {\r\n\t\t\t\tthis._initStorage();\r\n\t\t\t\t\r\n \t\t\t\tif(!this.isValidKeyArray(keys)\r\n\t\t\t\t\t\t|| ! values instanceof Array\r\n\t\t\t\t\t\t|| keys.length != values.length){\r\n\t\t\t\t\tthrow new Error(\"Invalid arguments: keys = [\"\r\n\t\t\t\t\t\t\t\t\t+ keys + \"], values = [\" + values + \"]\");\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(namespace == null || typeof namespace == \"undefined\"){\r\n\t\t\t\t\tnamespace = dojox.storage.DEFAULT_NAMESPACE;\r\n\t\t\t\t}\r\n\t\t\t\tif(!this.isValidKey(namespace)){\r\n\t\t\t\t\tthrow new Error(\"Invalid namespace given: \" + namespace);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis._statusHandler = resultsHandler;\r\n\r\n\t\t\t\t// try to store the value\r\n\t\t\t\ttry{\r\n\t\t\t\t\tdojox.sql.open();\r\n\t\t\t\t\tdojox.sql.db.execute(\"BEGIN TRANSACTION\");\r\n\t\t\t\t\tvar _stmt = \"REPLACE INTO \" + this.TABLE_NAME + \" VALUES (?, ?, ?)\";\r\n\t\t\t\t\tfor(var i=0;i<keys.length;i++) {\r\n\t\t\t\t\t\t// serialize the value;\r\n\t\t\t\t\t\t// handle strings differently so they have better performance\r\n\t\t\t\t\t\tvar value = values[i];\r\n\t\t\t\t\t\tif(dojo.isString(value)){\r\n\t\t\t\t\t\t\tvalue = \"string:\" + value;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tvalue = dojo.toJson(value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\t\tdojox.sql.db.execute( _stmt,\r\n\t\t\t\t\t\t\t[namespace, keys[i], value]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdojox.sql.db.execute(\"COMMIT TRANSACTION\");\r\n\t\t\t\t\tdojox.sql.close();\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\t// indicate we failed\r\n\t\t\t\t\tconsole.debug(\"dojox.storage.GearsStorageProvider.putMultiple:\", e);\r\n\t\t\t\t\tif(resultsHandler){\r\n\t\t\t\t\t\tresultsHandler(this.FAILED, keys, e.toString(), namespace);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(resultsHandler){\r\n\t\t\t\t\tresultsHandler(dojox.storage.SUCCESS, keys, null, namespace);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tgetMultiple: function(keys, namespace){\r\n\t\t\t\t//\tTODO: Maybe use SELECT IN instead\r\n\t\t\t\tthis._initStorage();\r\n\r\n\t\t\t\tif(!this.isValidKeyArray(keys)){\r\n\t\t\t\t\tthrow new (\"Invalid key array given: \" + keys);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(namespace == null || typeof namespace == \"undefined\"){\r\n\t\t\t\t\tnamespace = dojox.storage.DEFAULT_NAMESPACE;\r\n\t\t\t\t}\r\n\t\t\t\tif(!this.isValidKey(namespace)){\r\n\t\t\t\t\tthrow new Error(\"Invalid namespace given: \" + namespace);\r\n\t\t\t\t}\r\n\t\t\r\n\t\t\t\tvar _stmt = \"SELECT * FROM \" + this.TABLE_NAME\r\n\t\t\t\t\t+ \" WHERE namespace = ? AND \"\t+ \" key = ?\";\r\n\t\t\t\t\r\n\t\t\t\tvar results = [];\r\n\t\t\t\tfor(var i=0;i<keys.length;i++){\r\n\t\t\t\t\tvar result = dojox.sql( _stmt, namespace, keys[i]);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tif( ! result.length){\r\n\t\t\t\t\t\tresults[i] = null;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tresult = result[0].value;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// destringify the content back into a\r\n\t\t\t\t\t\t// real JavaScript object;\r\n\t\t\t\t\t\t// handle strings differently so they have better performance\r\n\t\t\t\t\t\tif(dojo.isString(result) && (/^string:/.test(result))){\r\n\t\t\t\t\t\t\tresults[i] = result.substring(\"string:\".length);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tresults[i] = dojo.fromJson(result);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn results;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tremoveMultiple: function(keys, namespace){\r\n\t\t\t\tthis._initStorage();\r\n\t\t\t\t\r\n\t\t\t\tif(!this.isValidKeyArray(keys)){\r\n\t\t\t\t\tthrow new Error(\"Invalid arguments: keys = [\" + keys + \"]\");\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(namespace == null || typeof namespace == \"undefined\"){\r\n\t\t\t\t\tnamespace = dojox.storage.DEFAULT_NAMESPACE;\r\n\t\t\t\t}\r\n\t\t\t\tif(!this.isValidKey(namespace)){\r\n\t\t\t\t\tthrow new Error(\"Invalid namespace given: \" + namespace);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tdojox.sql.open();\r\n\t\t\t\tdojox.sql.db.execute(\"BEGIN TRANSACTION\");\r\n\t\t\t\tvar _stmt = \"DELETE FROM \" + this.TABLE_NAME\r\n\t\t\t\t\t\t\t\t\t\t+ \" WHERE namespace = ? AND key = ?\";\r\n\r\n\t\t\t\tfor(var i=0;i<keys.length;i++){\r\n\t\t\t\t\tdojox.sql.db.execute( _stmt,\r\n\t\t\t\t\t\t[namespace, keys[i]]);\r\n\t\t\t\t}\r\n\t\t\t\tdojox.sql.db.execute(\"COMMIT TRANSACTION\");\r\n\t\t\t\tdojox.sql.close();\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tisPermanent: function(){ return true; },\r\n\r\n\t\t\tgetMaximumSize: function(){ return this.SIZE_NO_LIMIT; },\r\n\r\n\t\t\thasSettingsUI: function(){ return false; },\r\n\t\t\t\r\n\t\t\tshowSettingsUI: function(){\r\n\t\t\t\tthrow new Error(this.declaredClass\r\n\t\t\t\t\t\t\t\t\t+ \" does not support a storage settings user-interface\");\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\thideSettingsUI: function(){\r\n\t\t\t\tthrow new Error(this.declaredClass\r\n\t\t\t\t\t\t\t\t\t+ \" does not support a storage settings user-interface\");\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t_initStorage: function(){\r\n\t\t\t\t// we delay creating the tables until an operation is actually\r\n\t\t\t\t// called so that we don't give a Gears dialog right on page\r\n\t\t\t\t// load (bug #7538)\r\n\t\t\t\tif (this._storageReady) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!google.gears.factory.hasPermission) {\r\n\t\t\t\t\tvar siteName = null;\r\n\t\t\t\t\tvar icon = null;\r\n\t\t\t\t\tvar msg = 'This site would like to use Google Gears to enable '\r\n\t\t\t\t\t\t\t\t\t\t+ 'enhanced functionality.';\r\n\t\t\t\t\tvar allowed = google.gears.factory.getPermission(siteName, icon, msg);\r\n\t\t\t\t\tif (!allowed) {\r\n\t\t\t\t\t\tthrow new Error('You must give permission to use Gears in order to '\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ 'store data');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// create the table that holds our data\r\n\t\t\t\ttry{\r\n\t\t\t\t\tdojox.sql(\"CREATE TABLE IF NOT EXISTS \" + this.TABLE_NAME + \"( \"\r\n\t\t\t\t\t\t\t\t+ \" namespace TEXT, \"\r\n\t\t\t\t\t\t\t\t+ \" key TEXT, \"\r\n\t\t\t\t\t\t\t\t+ \" value TEXT \"\r\n\t\t\t\t\t\t\t\t+ \")\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\tdojox.sql(\"CREATE UNIQUE INDEX IF NOT EXISTS namespace_key_index\"\r\n\t\t\t\t\t\t\t\t+ \" ON \" + this.TABLE_NAME\r\n\t\t\t\t\t\t\t\t+ \" (namespace, key)\");\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\tconsole.debug(\"dojox.storage.GearsStorageProvider._createTables:\", e);\r\n\t\t\t\t\tthrow new Error('Unable to create storage tables for Gears in '\r\n\t\t\t\t\t                + 'Dojo Storage');\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis._storageReady = true;\r\n\t\t  }\r\n\t\t});\r\n\r\n\t\t// register the existence of our storage providers\r\n\t\tdojox.storage.manager.register(\"dojox.storage.GearsStorageProvider\",\r\n\t\t\t\t\t\t\t\t\t\tnew dojox.storage.GearsStorageProvider());\r\n\t})();\r\n}\r\n"]}