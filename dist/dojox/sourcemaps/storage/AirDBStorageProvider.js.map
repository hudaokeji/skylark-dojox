{"version":3,"sources":["storage/AirDBStorageProvider.js"],"names":["dojo","provide","require","isAIR","air","File","window","runtime","flash","filesystem","SQLConnection","data","SQLStatement","declare","dojox","storage","Provider","DATABASE_FILE","TABLE_NAME","initialized","_db","initialize","this","open","applicationStorageDirectory","resolvePath","_sql","e","console","debug","manager","loaded","query","params","stmt","sqlConnection","text","param","parameters","execute","getResult","_beginTransaction","begin","_commitTransaction","commit","isAvailable","put","key","value","resultsHandler","namespace","isValidKey","Error","DEFAULT_NAMESPACE",":namespace",":key",":value","FAILED","toString","SUCCESS","get","results","length","getNamespaces","rs","i","push","getKeys","clear","remove","putMultiple","keys","values","isValidKeyArray","Array","_statusHandler","getMultiple","result","removeMultiple","isPermanent","getMaximumSize","SIZE_NO_LIMIT","hasSettingsUI","showSettingsUI","declaredClass","hideSettingsUI","register","AirDBStorageProvider"],"mappings":"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","file":"../../storage/AirDBStorageProvider.js","sourcesContent":["dojo.provide(\"dojox.storage.AirDBStorageProvider\");\r\ndojo.require(\"dojox.storage.manager\");\r\ndojo.require(\"dojox.storage.Provider\");\r\n\r\nif (dojo.isAIR) {\r\n\t(function(){\r\n\r\n\t\tif (!air) {\r\n\t\t\tvar air = {};\r\n\t\t}\r\n\t\tair.File = window.runtime.flash.filesystem.File;\r\n\t\tair.SQLConnection = window.runtime.flash.data.SQLConnection;\r\n\t\tair.SQLStatement = window.runtime.flash.data.SQLStatement;\r\n\r\n\t\t// summary:\r\n\t\t//\t\tStorage provider that uses features in the Adobe AIR runtime to achieve\r\n\t\t//\t\tpermanent storage\r\n\t\tdojo.declare(\"dojox.storage.AirDBStorageProvider\", [ dojox.storage.Provider ], {\r\n\t\t\tDATABASE_FILE: \"dojo.db\",\r\n\t\t\tTABLE_NAME: \"__DOJO_STORAGE\",\r\n\t\t\tinitialized: false,\r\n\t\t\t\r\n\t\t\t_db: null,\r\n\t\t\t\r\n\t\t\tinitialize: function(){\r\n\t\t\t\tthis.initialized = false;\r\n\r\n\t\t\t\t// need to initialize our storage database\r\n\t\t\t\ttry{\r\n\t\t\t\t\tthis._db = new air.SQLConnection();\r\n\t\t\t\t\tthis._db.open(air.File.applicationStorageDirectory.resolvePath(this.DATABASE_FILE));\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis._sql(\"CREATE TABLE IF NOT EXISTS \" + this.TABLE_NAME + \"(namespace TEXT, key TEXT, value TEXT)\");\r\n\t\t\t\t\tthis._sql(\"CREATE UNIQUE INDEX IF NOT EXISTS namespace_key_index ON \" + this.TABLE_NAME + \" (namespace, key)\");\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.initialized = true;\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\tconsole.debug(\"dojox.storage.AirDBStorageProvider.initialize:\", e);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// indicate that this storage provider is now loaded\r\n\t\t\t\tdojox.storage.manager.loaded();\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t_sql: function(query, params){\r\n\t\t\t\tvar stmt = new air.SQLStatement();\r\n\t\t\t\tstmt.sqlConnection = this._db;\r\n\t\t\t\tstmt.text = query;\r\n\t\t\t\tif (params){\r\n\t\t\t\t\tfor (var param in params){\r\n\t\t\t\t\t\tstmt.parameters[param] = params[param];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tstmt.execute();\r\n\t\t\t\treturn stmt.getResult();\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t_beginTransaction: function(){\r\n\t\t\t\tthis._db.begin();\r\n\t\t\t},\r\n\t\r\n\t\t\t_commitTransaction: function(){\r\n\t\t\t\tthis._db.commit();\r\n\t\t\t},\r\n\t\r\n\t\t\tisAvailable: function(){\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tput: function(key, value, resultsHandler, namespace){\r\n\t\t\t\tif(this.isValidKey(key) == false){\r\n\t\t\t\t\tthrow new Error(\"Invalid key given: \" + key);\r\n\t\t\t\t}\r\n\t\t\t\tnamespace = namespace||this.DEFAULT_NAMESPACE;\r\n\t\t\t\tif(this.isValidKey(namespace) == false){\r\n\t\t\t\t\tthrow new Error(\"Invalid namespace given: \" + namespace);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// try to store the value\r\n\t\t\t\ttry{\r\n\t\t\t\t\tthis._sql(\"DELETE FROM \" + this.TABLE_NAME + \" WHERE namespace = :namespace AND key = :key\",\r\n\t\t\t\t\t\t{ \":namespace\":namespace, \":key\":key });\r\n\t\t\t\t\tthis._sql(\"INSERT INTO \" + this.TABLE_NAME + \" VALUES (:namespace, :key, :value)\",\r\n\t\t\t\t\t\t{ \":namespace\":namespace, \":key\":key, \":value\":value });\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\t// indicate we failed\r\n\t\t\t\t\tconsole.debug(\"dojox.storage.AirDBStorageProvider.put:\", e);\r\n\t\t\t\t\tresultsHandler(this.FAILED, key, e.toString());\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(resultsHandler){\r\n\t\t\t\t\tresultsHandler(this.SUCCESS, key, null, namespace);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tget: function(key, namespace){\r\n\t\t\t\tif(this.isValidKey(key) == false){\r\n\t\t\t\t\tthrow new Error(\"Invalid key given: \" + key);\r\n\t\t\t\t}\r\n\t\t\t\tnamespace = namespace||this.DEFAULT_NAMESPACE;\r\n\t\t\t\t\r\n\t\t\t\tvar results = this._sql(\"SELECT * FROM \" + this.TABLE_NAME + \" WHERE namespace = :namespace AND key = :key\",\r\n\t\t\t\t\t{ \":namespace\":namespace, \":key\":key });\r\n\t\t\t\t\r\n\t\t\t\tif(results.data && results.data.length){\r\n\t\t\t\t\treturn results.data[0].value;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn null;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tgetNamespaces: function(){\r\n\t\t\t\tvar results = [ this.DEFAULT_NAMESPACE ];\r\n\t\t\t\tvar rs = this._sql(\"SELECT namespace FROM \" + this.TABLE_NAME + \" DESC GROUP BY namespace\");\r\n\t\t\t\tif (rs.data){\r\n\t\t\t\t\tfor(var i = 0; i < rs.data.length; i++){\r\n\t\t\t\t\t\tif(rs.data[i].namespace != this.DEFAULT_NAMESPACE){\r\n\t\t\t\t\t\t\tresults.push(rs.data[i].namespace);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn results;\r\n\t\t\t},\r\n\r\n\t\t\tgetKeys: function(namespace){\r\n\t\t\t\tnamespace = namespace||this.DEFAULT_NAMESPACE;\r\n\t\t\t\tif(this.isValidKey(namespace) == false){\r\n\t\t\t\t\tthrow new Error(\"Invalid namespace given: \" + namespace);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar results = [];\r\n\t\t\t\tvar rs = this._sql(\"SELECT key FROM \" + this.TABLE_NAME + \" WHERE namespace = :namespace\", { \":namespace\":namespace });\r\n\t\t\t\tif (rs.data){\r\n\t\t\t\t\tfor(var i = 0; i < rs.data.length; i++){\r\n\t\t\t\t\t\tresults.push(rs.data[i].key);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn results;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tclear: function(namespace){\r\n\t\t\t\tif(this.isValidKey(namespace) == false){\r\n\t\t\t\t\tthrow new Error(\"Invalid namespace given: \" + namespace);\r\n\t\t\t\t}\r\n\t\t\t\tthis._sql(\"DELETE FROM \" + this.TABLE_NAME + \" WHERE namespace = :namespace\", { \":namespace\":namespace });\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tremove: function(key, namespace){\r\n\t\t\t\tnamespace = namespace||this.DEFAULT_NAMESPACE;\r\n\t\t\t\tthis._sql(\"DELETE FROM \" + this.TABLE_NAME + \" WHERE namespace = :namespace AND key = :key\",\r\n\t\t\t\t\t{ \":namespace\":namespace, \":key\":key });\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tputMultiple: function(keys, values, resultsHandler, namespace) {\r\n \t\t\t\tif(this.isValidKeyArray(keys) === false\r\n\t\t\t\t\t\t|| ! values instanceof Array\r\n\t\t\t\t\t\t|| keys.length != values.length){\r\n\t\t\t\t\tthrow new Error(\"Invalid arguments: keys = [\" + keys + \"], values = [\" + values + \"]\");\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(namespace == null || typeof namespace == \"undefined\"){\r\n\t\t\t\t\tnamespace = this.DEFAULT_NAMESPACE;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif(this.isValidKey(namespace) == false){\r\n\t\t\t\t\tthrow new Error(\"Invalid namespace given: \" + namespace);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis._statusHandler = resultsHandler;\r\n\r\n\t\t\t\t// try to store the value\r\n\t\t\t\ttry{\r\n\t\t\t\t\tthis._beginTransaction();\r\n\t\t\t\t\tfor(var i=0;i<keys.length;i++) {\r\n\t\t\t\t\t\tthis._sql(\"DELETE FROM \" + this.TABLE_NAME + \" WHERE namespace = :namespace AND key = :key\",\r\n\t\t\t\t\t\t\t{ \":namespace\":namespace, \":key\":keys[i] });\r\n\t\t\t\t\t\tthis._sql(\"INSERT INTO \" + this.TABLE_NAME + \" VALUES (:namespace, :key, :value)\",\r\n\t\t\t\t\t\t \t{ \":namespace\":namespace, \":key\":keys[i], \":value\":values[i] });\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._commitTransaction();\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\t// indicate we failed\r\n\t\t\t\t\tconsole.debug(\"dojox.storage.AirDBStorageProvider.putMultiple:\", e);\r\n\t\t\t\t\tif(resultsHandler){\r\n\t\t\t\t\t\tresultsHandler(this.FAILED, keys, e.toString(), namespace);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(resultsHandler){\r\n\t\t\t\t\tresultsHandler(this.SUCCESS, keys, null);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tgetMultiple: function(keys, namespace){\r\n\t\t\t\tif(this.isValidKeyArray(keys) === false){\r\n\t\t\t\t\tthrow new Error(\"Invalid key array given: \" + keys);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(namespace == null || typeof namespace == \"undefined\"){\r\n\t\t\t\t\tnamespace = this.DEFAULT_NAMESPACE;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(this.isValidKey(namespace) == false){\r\n\t\t\t\t\tthrow new Error(\"Invalid namespace given: \" + namespace);\r\n\t\t\t\t}\r\n\t\t\r\n\t\t\t\tvar results = [];\r\n\t\t\t\tfor(var i=0;i<keys.length;i++){\r\n\t\t\t\t\tvar result = this._sql(\"SELECT * FROM \" + this.TABLE_NAME + \" WHERE namespace = :namespace AND key = :key\",\r\n\t\t\t\t\t\t{ \":namespace\":namespace, \":key\":keys[i] });\r\n\t\t\t\t\tresults[i] = result.data && result.data.length ? result.data[0].value : null;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn results;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tremoveMultiple: function(keys, namespace){\r\n\t\t\t\tnamespace = namespace||this.DEFAULT_NAMESPACE;\r\n\t\t\t\t\r\n\t\t\t\tthis._beginTransaction();\r\n\t\t\t\tfor(var i=0;i<keys.length;i++){\r\n\t\t\t\t\tthis._sql(\"DELETE FROM \" + this.TABLE_NAME + \" WHERE namespace = namespace = :namespace AND key = :key\",\r\n\t\t\t\t\t\t{ \":namespace\":namespace, \":key\":keys[i] });\r\n\t\t\t\t}\r\n\t\t\t\tthis._commitTransaction();\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tisPermanent: function(){ return true; },\r\n\r\n\t\t\tgetMaximumSize: function(){ return this.SIZE_NO_LIMIT; },\r\n\r\n\t\t\thasSettingsUI: function(){ return false; },\r\n\t\t\t\r\n\t\t\tshowSettingsUI: function(){\r\n\t\t\t\tthrow new Error(this.declaredClass + \" does not support a storage settings user-interface\");\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\thideSettingsUI: function(){\r\n\t\t\t\tthrow new Error(this.declaredClass + \" does not support a storage settings user-interface\");\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tdojox.storage.manager.register(\"dojox.storage.AirDBStorageProvider\", new dojox.storage.AirDBStorageProvider());\r\n\t\tdojox.storage.manager.initialize();\r\n\t})();\r\n}"]}