{"version":3,"sources":["geo/charting/_base.js"],"names":["define","lang","arr","dojox","html","domGeom","matrix","Tooltip","NodeList","NodeListTraverse","dgc","getObject","showTooltip","innerHTML","gfxObject","positions","arroundNode","_normalizeArround","show","hideTooltip","hide","bbox","_getRealBBox","realMatrix","_getRealMatrix","xx","xy","yx","yy","dx","dy","point","multiplyPoint","x","y","gfxDomContainer","_getGfxContainer","position","w","width","h","height","surface","rawNode","parents","bboxObject","getBoundingBox","shapes","children","clone","forEach","item","nextBBox","Math","min","endX","max","endY"],"mappings":";;;;;;;AAAAA,QACC,kBACA,mBACA,aACA,kBACA,oBACA,mBACA,gBACA,sBACA,0BACE,SAASC,EAAMC,EAAKC,EAAOC,EAAMC,EAASC,EAAQC,EAASC,EAAUC,GACvE,IAAIC,EAAMT,EAAKU,UAAU,gBAAgB,EAAMR,GA+D/C,OA7DAO,EAAIE,YAAc,SAAmBC,EAAqCC,EAAyBC,GASlG,IAAIC,EAAcN,EAAIO,kBAAkBH,GACxC,OAAOP,EAAQW,KAAKL,EAAWG,EAAaD,IAG7CL,EAAIS,YAAc,SAAmCL,GAKpD,OAAOP,EAAQa,KAAKN,IAGrBJ,EAAIO,kBAAoB,SAASH,GAChC,IAAIO,EAAOX,EAAIY,aAAaR,GAGxBS,EAAaT,EAAUU,mBAAqBC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,GACxEC,EAAQzB,EAAO0B,cAAcT,EAAYF,EAAKY,EAAGZ,EAAKa,GACtDC,EAAkBzB,EAAI0B,iBAAiBtB,GAK3C,OAJAA,EAAUmB,EAAI5B,EAAQgC,SAASF,GAAgB,GAAMF,EAAIF,EAAME,EAC/DnB,EAAUoB,EAAI7B,EAAQgC,SAASF,GAAgB,GAAMD,EAAIH,EAAMG,EAC/DpB,EAAUwB,EAAIjB,EAAKkB,MAAQhB,EAAWE,GACtCX,EAAU0B,EAAInB,EAAKoB,OAASlB,EAAWK,GAChCd,GAGRJ,EAAI0B,iBAAmB,SAAStB,GAC/B,OAAGA,EAAU4B,QACL,IAAKlC,EAASM,EAAU4B,QAAQC,SAAUC,QAAQ,OAAO,GAEzD,IAAKpC,EAASM,EAAU6B,SAAUC,QAAQ,OAAO,IAI1DlC,EAAIY,aAAe,SAASR,GAC3B,IAAI+B,EAAa/B,EAAUgC,iBAC3B,IAAID,EAAW,CACd,IAAIE,EAASjC,EAAUkC,SACvBH,EAAa5C,EAAKgD,MAAMvC,EAAIY,aAAayB,EAAO,KAChD7C,EAAIgD,QAAQH,EAAQ,SAASI,GAC5B,IAAIC,EAAW1C,EAAIY,aAAa6B,GAChCN,EAAWZ,EAAIoB,KAAKC,IAAIT,EAAWZ,EAAGmB,EAASnB,GAC/CY,EAAWX,EAAImB,KAAKC,IAAIT,EAAWX,EAAGkB,EAASlB,GAC/CW,EAAWU,KAAOF,KAAKG,IAAIX,EAAWZ,EAAIY,EAAWN,MAAOa,EAASnB,EAAImB,EAASb,OAClFM,EAAWY,KAAOJ,KAAKG,IAAIX,EAAWX,EAAIW,EAAWJ,OAAQW,EAASlB,EAAIkB,EAASX,UAEpFI,EAAWN,MAAQM,EAAWU,KAAOV,EAAWZ,EAChDY,EAAWJ,OAASI,EAAWY,KAAOZ,EAAWX,EAElD,OAAOW,GAGDnC","file":"../../../geo/charting/_base.js","sourcesContent":["define([\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/array\",\r\n\t\"../../main\",\r\n\t\"dojo/_base/html\",\r\n\t\"dojo/dom-geometry\",\r\n\t\"dojox/gfx/matrix\",\r\n\t\"dijit/Tooltip\",\r\n\t\"dojo/_base/NodeList\",\r\n\t\"dojo/NodeList-traverse\"\r\n], function(lang, arr, dojox, html, domGeom, matrix, Tooltip, NodeList, NodeListTraverse){\r\n\tvar dgc = lang.getObject(\"geo.charting\", true, dojox); \r\n\r\n\tdgc.showTooltip = function(/*String*/innerHTML, /*dojox/gfx/shape.Shape*/ gfxObject, /*String[]?*/ positions){\r\n\t\t// summary:\r\n\t\t//\t\tShow a Tooltip displaying the given HTML message around the given gfx shape.\r\n\t\t// innerHTML: String\r\n\t\t//\t\tThe message to display as a HTML string.\r\n\t\t// gfxObject: dojox/gfx/shape.Shape\r\n\t\t//\t\tThe gfx shape around which the tooltip will be placed.\r\n\t\t// position: String[]?\r\n\t\t//\t\tThe tooltip position.\r\n\t\tvar arroundNode = dgc._normalizeArround(gfxObject);\r\n\t\treturn Tooltip.show(innerHTML, arroundNode, positions);\r\n\t};\r\n\r\n\tdgc.hideTooltip = function( /*dojox/gfx/shape.Shape*/gfxObject){\r\n\t\t// summary:\r\n\t\t//\t\tHides the tooltip displayed around the given shape.\r\n\t\t// gfxObject: dojox.gfx.shape.Shape\r\n\t\t//\t\tA gfx shape.\r\n\t\treturn Tooltip.hide(gfxObject);\r\n\t};\r\n\r\n\tdgc._normalizeArround = function(gfxObject){\r\n\t\tvar bbox = dgc._getRealBBox(gfxObject);\r\n\t\t//var bbox = gfxObject.getBoundingBox();\r\n\t\t//get the real screen coords for gfx object\r\n\t\tvar realMatrix = gfxObject._getRealMatrix() || {xx:1,xy:0,yx:0,yy:1,dx:0,dy:0};\r\n\t\tvar point = matrix.multiplyPoint(realMatrix, bbox.x, bbox.y);\r\n\t\tvar gfxDomContainer = dgc._getGfxContainer(gfxObject);\r\n\t\tgfxObject.x = domGeom.position(gfxDomContainer,true).x + point.x,\r\n\t\tgfxObject.y = domGeom.position(gfxDomContainer,true).y + point.y,\r\n\t\tgfxObject.w = bbox.width * realMatrix.xx,\r\n\t\tgfxObject.h = bbox.height * realMatrix.yy\r\n\t\treturn gfxObject;\r\n\t};\r\n\r\n\tdgc._getGfxContainer = function(gfxObject){\r\n\t\tif(gfxObject.surface){\r\n\t\t\treturn (new NodeList(gfxObject.surface.rawNode)).parents(\"div\")[0];\r\n\t\t}else{\r\n\t\t\treturn (new NodeList(gfxObject.rawNode)).parents(\"div\")[0];\r\n\t\t}\r\n\t};\r\n\r\n\tdgc._getRealBBox = function(gfxObject){\r\n\t\tvar bboxObject = gfxObject.getBoundingBox();\r\n\t\tif(!bboxObject){//the gfx object is group\r\n\t\t\tvar shapes = gfxObject.children;\r\n\t\t\tbboxObject = lang.clone(dgc._getRealBBox(shapes[0]));\r\n\t\t\tarr.forEach(shapes, function(item){\r\n\t\t\t\tvar nextBBox = dgc._getRealBBox(item);\r\n\t\t\t\tbboxObject.x = Math.min(bboxObject.x, nextBBox.x);\r\n\t\t\t\tbboxObject.y = Math.min(bboxObject.y, nextBBox.y);\r\n\t\t\t\tbboxObject.endX = Math.max(bboxObject.x + bboxObject.width, nextBBox.x + nextBBox.width);\r\n\t\t\t\tbboxObject.endY = Math.max(bboxObject.y + bboxObject.height, nextBBox.y + nextBBox.height);\r\n\t\t\t});\r\n\t\t\tbboxObject.width = bboxObject.endX - bboxObject.x;\r\n\t\t\tbboxObject.height = bboxObject.endY - bboxObject.y;\r\n\t\t}\r\n\t\treturn bboxObject;\r\n\t};\r\n\t\r\n\treturn dgc;\r\n});\r\n"]}