{"version":3,"sources":["geo/charting/TouchInteractionSupport.js"],"names":["define","lang","declare","event","connect","win","_map","_centerTouchLocation","_touchMoveListener","_touchEndListener","_touchEndTapListener","_touchStartListener","_initialFingerSpacing","_initialScale","_tapCount","_tapThreshold","_lastTap","_doubleTapPerformed","_oneFingerTouch","_tapCancel","constructor","map","this","x","y","surface","_touchStartHandler","disconnect","_getTouchBarycenter","touchEvent","touches","firstTouch","secondTouch","length","containerBounds","_getContainerBounds","pageX","pageY","_getFingerSpacing","spacing","dx","dy","Math","sqrt","_isDoubleTap","isDoubleTap","setTimeout","hitch","_doubleTapHandler","feature","_getFeatureFromTouchEvent","fitToMapArea","_bbox","offX","offY","mapPoint","screenCoordsToMapCoords","setMapCenterAndScale","getMapScale","gfxTarget","getParent","mapObj","features","id","stop","middlePoint","global","_touchMoveHandler","_touchEndTapHandler","_touchEndHandler","changedTouches","_singleTapHandler","_onclickHandler","name","select","onFeatureClick","mapOffsetX","mapOffsetY","scaleFactor","setMapScale","currentMapCenter","getMapCenter","setMapCenter"],"mappings":"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","file":"../../../geo/charting/TouchInteractionSupport.js","sourcesContent":["define([\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/event\",\r\n\t\"dojo/_base/connect\",\r\n\t\"dojo/_base/window\"\r\n], function(lang,declare,event,connect,win){\r\n\r\n\treturn declare(\"dojox.geo.charting.TouchInteractionSupport\",null, {\r\n\t\t// summary:\r\n\t\t//\t\tA class to handle touch interactions on a dojox/geo/charting/Map component.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\r\n\t\t_map: null,\r\n\t\t_centerTouchLocation: null,\r\n\t\t_touchMoveListener: null,\r\n\t\t_touchEndListener: null,\r\n\t\t_touchEndTapListener: null,\r\n\t\t_touchStartListener: null,\r\n\t\t_initialFingerSpacing: null,\r\n\t\t_initialScale: null,\r\n\t\t_tapCount: null,\r\n\t\t_tapThreshold: null,\r\n\t\t_lastTap: null,\r\n\t\t_doubleTapPerformed:false,\r\n\t\t_oneFingerTouch:false,\r\n\t\t_tapCancel:false,\r\n\r\n\t\tconstructor: function(map){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConstructs a new _TouchInteractionSupport instance\r\n\t\t\t// map: dojox.geo.charting.Map\r\n\t\t\t//\t\tthe Map widget this class provides touch navigation for.\r\n\t\t\tthis._map = map;\r\n\t\t\tthis._centerTouchLocation = {x: 0,y: 0};\r\n\r\n\t\t\tthis._tapCount = 0;\r\n\t\t\tthis._lastTap = {x: 0,y: 0};\r\n\t\t\tthis._tapThreshold = 100; // square distance in pixels\r\n\t\t},\r\n\r\n\t\tconnect: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tinstall touch listeners\r\n\t\t\tthis._touchStartListener = this._map.surface.connect(\"touchstart\", this, this._touchStartHandler);\r\n\t\t},\r\n\r\n\t\tdisconnect: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tdisconnects any installed listeners. Must be called only when disposing of this instance\r\n\t\t\tif(this._touchStartListener){\r\n\t\t\t\tconnect.disconnect(this._touchStartListener);\r\n\t\t\t\tthis._touchStartListener = null;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_getTouchBarycenter: function(touchEvent){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns the midpoint of the two first fingers (or the first finger location if only one)\r\n\t\t\t// touchEvent: TouchEvent\r\n\t\t\t//\t\ta touch event\r\n\t\t\t// returns:\r\n\t\t\t//\t\tthe midpoint\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar touches = touchEvent.touches;\r\n\t\t\tvar firstTouch = touches[0];\r\n\t\t\tvar secondTouch = null;\r\n\t\t\tif(touches.length > 1){\r\n\t\t\t\tsecondTouch = touches[1];\r\n\t\t\t}else{\r\n\t\t\t\tsecondTouch = touches[0];\r\n\t\t\t}\r\n\t\t\tvar containerBounds = this._map._getContainerBounds();\r\n\t\t\tvar middleX = (firstTouch.pageX + secondTouch.pageX) / 2.0 - containerBounds.x;\r\n\t\t\tvar middleY = (firstTouch.pageY + secondTouch.pageY) / 2.0 - containerBounds.y;\r\n\t\t\treturn {x: middleX,y: middleY}; // dojox/gfx/Point\r\n\t\t},\r\n\r\n\t\t_getFingerSpacing: function(touchEvent){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcomputes the distance between the first two fingers\r\n\t\t\t// touchEvent: a touch event\r\n\t\t\t// returns:\r\n\t\t\t//\t\ta distance. -1 if less than 2 fingers\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar touches = touchEvent.touches;\r\n\t\t\tvar spacing = -1;\r\n\t\t\tif(touches.length >= 2){\r\n\t\t\t\tvar dx = (touches[1].pageX - touches[0].pageX);\r\n\t\t\t\tvar dy = (touches[1].pageY - touches[0].pageY);\r\n\t\t\t\tspacing = Math.sqrt(dx*dx + dy*dy);\r\n\t\t\t}\r\n\t\t\treturn spacing;\r\n\t\t},\r\n\r\n\t\t_isDoubleTap: function(touchEvent){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tchecks whether the specified touchStart event is a double tap\r\n\t\t\t//\t\t(i.e. follows closely a previous touchStart at approximately the same location)\r\n\t\t\t// touchEvent: TouchEvent\r\n\t\t\t//\t\ta touch event\r\n\t\t\t// returns:\r\n\t\t\t//\t\ttrue if this event is considered a double tap\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar isDoubleTap = false;\r\n\t\t\tvar touches = touchEvent.touches;\r\n\t\t\tif((this._tapCount > 0) && touches.length == 1){\r\n\t\t\t\t// test distance from last tap\r\n\t\t\t\tvar dx = (touches[0].pageX - this._lastTap.x);\r\n\t\t\t\tvar dy = (touches[0].pageY - this._lastTap.y);\r\n\t\t\t\tvar distance = dx*dx + dy*dy;\r\n\t\t\t\tif(distance < this._tapThreshold){\r\n\t\t\t\t\tisDoubleTap = true;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis._tapCount = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._tapCount++;\r\n\t\t\tthis._lastTap.x = touches[0].pageX;\r\n\t\t\tthis._lastTap.y = touches[0].pageY;\r\n\t\t\tsetTimeout(lang.hitch(this,function(){\r\n\t\t\t\tthis._tapCount = 0;}),300);\r\n\t\t\treturn isDoubleTap;\r\n\t\t},\r\n\r\n\t\t_doubleTapHandler: function(touchEvent){\r\n\t\t\t// summary:\r\n\t\t\t//\t\taction performed on the map when a double tap was triggered\r\n\t\t\t// touchEvent: TouchEvent\r\n\t\t\t//\t\ta touch event\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar feature = this._getFeatureFromTouchEvent(touchEvent);\r\n\t\t\tif(feature){\r\n\t\t\t\tthis._map.fitToMapArea(feature._bbox, 15, true);\r\n\t\t\t}else{\r\n\t\t\t\t// perform a basic 2x zoom on touch\r\n\t\t\t\tvar touches = touchEvent.touches;\r\n\t\t\t\tvar containerBounds = this._map._getContainerBounds();\r\n\t\t\t\tvar offX = touches[0].pageX - containerBounds.x;\r\n\t\t\t\tvar offY = touches[0].pageY - containerBounds.y;\r\n\t\t\t\t// clicked map point before zooming\r\n\t\t\t\tvar mapPoint = this._map.screenCoordsToMapCoords(offX,offY);\r\n\t\t\t\t// zoom increment power\r\n\t\t\t\tthis._map.setMapCenterAndScale(mapPoint.x, mapPoint.y,this._map.getMapScale()*2,true);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_getFeatureFromTouchEvent: function(touchEvent){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tutility function to return the feature located at this touch event location\r\n\t\t\t// touchEvent: TouchEvent\r\n\t\t\t//\t\ta touch event\r\n\t\t\t// returns:\r\n\t\t\t//\t\tthe feature found if any, null otherwise.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar feature = null;\r\n\t\t\tif(touchEvent.gfxTarget && touchEvent.gfxTarget.getParent){\r\n\t\t\t\tfeature = this._map.mapObj.features[touchEvent.gfxTarget.getParent().id];\r\n\t\t\t}\r\n\t\t\treturn feature;\t// dojox/geo/charting/Feature\r\n\t\t},\r\n\r\n\t\t_touchStartHandler: function(touchEvent){\r\n\t\t\t// summary:\r\n\t\t\t//\t\taction performed on the map when a touch start was triggered\r\n\t\t\t// touchEvent: TouchEvent\r\n\t\t\t//\t\ta touch event\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tevent.stop(touchEvent);\r\n\t\t\tthis._oneFingerTouch = (touchEvent.touches.length == 1);\r\n\t\t\tthis._tapCancel = !this._oneFingerTouch;\r\n\t\t\t// test double tap\r\n\t\t\tthis._doubleTapPerformed = false;\r\n\t\t\tif(this._isDoubleTap(touchEvent)){\r\n\t\t\t\t//console.log(\"double tap recognized\");\r\n\t\t\t\tthis._doubleTapHandler(touchEvent);\r\n\t\t\t\tthis._doubleTapPerformed = true;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// compute map midpoint between fingers\r\n\t\t\tvar middlePoint = this._getTouchBarycenter(touchEvent);\r\n\t\t\tvar mapPoint = this._map.screenCoordsToMapCoords(middlePoint.x,middlePoint.y);\r\n\t\t\tthis._centerTouchLocation.x = mapPoint.x;\r\n\t\t\tthis._centerTouchLocation.y = mapPoint.y;\r\n\t\t\t// store initial finger spacing to compute zoom later\r\n\t\t\tthis._initialFingerSpacing = this._getFingerSpacing(touchEvent);\r\n\t\t\t// store initial map scale\r\n\t\t\tthis._initialScale = this._map.getMapScale();\r\n\t\t\t// install touch move and up listeners (if not done by other fingers before)\r\n\t\t\tif(!this._touchMoveListener){\r\n\t\t\t\tthis._touchMoveListener = connect.connect(win.global,\"touchmove\",this,this._touchMoveHandler);\r\n\t\t\t}\r\n\t\t\tif(!this._touchEndTapListener){\r\n\t\t\t\tthis._touchEndTapListener = this._map.surface.connect(\"touchend\", this, this._touchEndTapHandler);\r\n\t\t\t}\r\n\t\t\tif(!this._touchEndListener){\r\n\t\t\t\tthis._touchEndListener = connect.connect(win.global,\"touchend\",this, this._touchEndHandler);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_touchEndTapHandler: function(touchEvent){\r\n\t\t\t// summary:\r\n\t\t\t//\t\taction performed on the map when a tap was triggered\r\n\t\t\t// touchEvent: TouchEvent\r\n\t\t\t//\t\ta touch event\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar touches = touchEvent.touches;\r\n\t\t\tif(touches.length == 0){\r\n\r\n\t\t\t\t// test potential tap ?\r\n\t\t\t\tif(this._oneFingerTouch && !this._tapCancel){\r\n\t\t\t\t\tthis._oneFingerTouch = false;\r\n\t\t\t\t\tsetTimeout(lang.hitch(this,function(){\r\n\t\t\t\t\t\t// wait to check if double tap\r\n\t\t\t\t\t\t// perform test for single tap\r\n\t\t\t\t\t\t//console.log(\"double tap was performed ? \" + this._doubleTapPerformed);\r\n\t\t\t\t\t\tif(!this._doubleTapPerformed){\r\n\t\t\t\t\t\t\t// test distance from last tap\r\n\t\t\t\t\t\t\tvar dx = (touchEvent.changedTouches[0].pageX - this._lastTap.x);\r\n\t\t\t\t\t\t\tvar dy = (touchEvent.changedTouches[0].pageY - this._lastTap.y);\r\n\t\t\t\t\t\t\tvar distance = dx*dx + dy*dy;\r\n\t\t\t\t\t\t\tif(distance < this._tapThreshold){\r\n\t\t\t\t\t\t\t\t// single tap ok\r\n\t\t\t\t\t\t\t\tthis._singleTapHandler(touchEvent);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}), 350);\r\n\t\t\t\t}\r\n\t\t\t\tthis._tapCancel = false;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_touchEndHandler: function(touchEvent){\r\n\t\t\t// summary:\r\n\t\t\t//\t\taction performed on the map when a touch end was triggered\r\n\t\t\t// touchEvent: TouchEvent\r\n\t\t\t//\t\ta touch event\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tevent.stop(touchEvent);\r\n\t\t\tvar touches = touchEvent.touches;\r\n\t\t\tif(touches.length == 0){\r\n\t\t\t\t// disconnect listeners only when all fingers are up\r\n\t\t\t\tif(this._touchMoveListener){\r\n\t\t\t\t\tconnect.disconnect(this._touchMoveListener);\r\n\t\t\t\t\tthis._touchMoveListener = null;\r\n\t\t\t\t}\r\n\t\t\t\tif(this._touchEndListener){\r\n\t\t\t\t\tconnect.disconnect(this._touchEndListener);\r\n\t\t\t\t\tthis._touchEndListener = null;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// recompute touch center\r\n\t\t\t\tvar middlePoint = this._getTouchBarycenter(touchEvent);\r\n\t\t\t\tvar mapPoint = this._map.screenCoordsToMapCoords(middlePoint.x,middlePoint.y);\r\n\t\t\t\tthis._centerTouchLocation.x = mapPoint.x;\r\n\t\t\t\tthis._centerTouchLocation.y = mapPoint.y;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_singleTapHandler: function(touchEvent){\r\n\t\t\t// summary:\r\n\t\t\t//\t\taction performed on the map when a single tap was triggered\r\n\t\t\t// touchEvent: TouchEvent\r\n\t\t\t//\t\ta touch event\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar feature = this._getFeatureFromTouchEvent(touchEvent);\r\n\t\t\tif(feature){\r\n\t\t\t\t// call feature handler\r\n\t\t\t\tfeature._onclickHandler(touchEvent);\r\n\t\t\t}else{\r\n\t\t\t\t// unselect all\r\n\t\t\t\tfor(var name in this._map.mapObj.features){\r\n\t\t\t\t\tthis._map.mapObj.features[name].select(false);\r\n\t\t\t\t}\r\n\t\t\t\tthis._map.onFeatureClick(null);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_touchMoveHandler: function(touchEvent){\r\n\t\t\t// summary:\r\n\t\t\t//\t\taction performed on the map when a touch move was triggered\r\n\t\t\t// touchEvent: TouchEvent\r\n\t\t\t//\t\ta touch event\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t// prevent browser interaction\r\n\t\t\tevent.stop(touchEvent);\r\n\r\n\t\t\t// cancel tap if moved too far from first touch location\r\n\t\t\tif(!this._tapCancel){\r\n\t\t\t\tvar dx = (touchEvent.touches[0].pageX - this._lastTap.x),\r\n\t\t\t\t\tdy = (touchEvent.touches[0].pageY - this._lastTap.y);\r\n\t\t\t\tvar distance = dx*dx + dy*dy;\r\n\t\t\t\tif(distance > this._tapThreshold){\r\n\t\t\t\t\tthis._tapCancel = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar middlePoint = this._getTouchBarycenter(touchEvent);\r\n\t\t\t// compute map offset\r\n\t\t\tvar mapPoint = this._map.screenCoordsToMapCoords(middlePoint.x,middlePoint.y),\r\n\t\t\t\tmapOffsetX = mapPoint.x - this._centerTouchLocation.x,\r\n\t\t\t\tmapOffsetY = mapPoint.y - this._centerTouchLocation.y;\r\n\t\t\t// compute scale factor\r\n\t\t\tvar scaleFactor = 1;\r\n\t\t\tvar touches = touchEvent.touches;\r\n\t\t\tif(touches.length >= 2){\r\n\t\t\t\tvar fingerSpacing = this._getFingerSpacing(touchEvent);\r\n\t\t\t\tscaleFactor = fingerSpacing / this._initialFingerSpacing;\r\n\t\t\t\t// scale map\r\n\t\t\t\tthis._map.setMapScale(this._initialScale*scaleFactor);\r\n\t\t\t}\r\n\t\t\t// adjust map center on barycentre\r\n\t\t\tvar currentMapCenter = this._map.getMapCenter();\r\n\t\t\tthis._map.setMapCenter(currentMapCenter.x - mapOffsetX, currentMapCenter.y - mapOffsetY);\r\n\t\t}\r\n\t});\r\n});\r\n"]}