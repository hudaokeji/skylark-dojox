{"version":3,"sources":["geo/openlayers/GfxLayer.js"],"names":["define","declare","connect","style","gfx","matrix","Feature","Layer","_viewport","constructor","name","options","vp","s","createSurface","this","olLayer","div","_surface","viewport","createGroup","setViewport","getDataExtent","getViewport","g","removeShape","add","onMapResize","_surfaceSize","setMap","map","inherited","arguments","getDimensions","getSurface","getSize","setDimensions","w","h","moveTo","event","get","layerContainerDiv","left","parseInt","top","zoomChanged","d","set","_features","setTransform","translate","added"],"mappings":";;;;;;;AAAAA,QACC,qBACA,qBACA,iBACA,YACA,mBACA,YACA,WACE,SAASC,EAASC,EAASC,EAAOC,EAAKC,EAAQC,EAASC,GAE1D,OAAON,EAAQ,gCAAiCM,GAS/CC,UAAW,KAEXC,YAAa,SAASC,EAAMC,GAG3B,IAEIC,EAFAC,EAAIT,EAAIU,cAAcC,KAAKC,QAAQC,IAAK,IAAK,KACjDF,KAAKG,SAAWL,EAGfD,EADED,GAAWA,EAAQQ,SAChBR,EAAQQ,SAERN,EAAEO,cAERL,KAAKM,YAAYT,GACjBV,EAAQA,QAAQa,KAAKC,QAAS,cAAeD,KAAM,eACnDA,KAAKC,QAAQM,cAAgBP,KAAKO,eAGnCC,YAAa,WAKZ,OAAOR,KAAKP,WAGba,YAAa,SAASG,GAMlBT,KAAKP,WACPO,KAAKP,UAAUiB,cAEhBV,KAAKP,UAAYgB,EACjBT,KAAKG,SAASQ,IAAIF,IAGnBG,YAAa,WAKZZ,KAAKa,gBAGNC,OAAQ,SAASC,GAKhBf,KAAKgB,UAAUC,WACfjB,KAAKa,gBAGNN,cAAe,WAMd,OADUP,KAAKG,SAASe,iBAIzBC,WAAY,WAKX,OAAOnB,KAAKG,UAGbU,aAAc,WAKb,IAAIf,EAAIE,KAAKC,QAAQc,IAAIK,UACzBpB,KAAKG,SAASkB,cAAcvB,EAAEwB,EAAGxB,EAAEyB,IAGpCC,OAAQ,SAASC,GAKhB,IAAI3B,EAAIV,EAAMsC,IAAI1B,KAAKC,QAAQc,IAAIY,mBAC/BC,EAAOC,SAAS/B,EAAE8B,MAClBE,EAAMD,SAAS/B,EAAEgC,KAErB,GAAGL,EAAMM,aAAeH,GAAQE,EAAI,CACnC,IAAIE,EAAIhC,KAAKC,QAAQC,IAOrB,GALAd,EAAM6C,IAAID,GACTJ,MAAOA,EAAO,KACdE,KAAMA,EAAM,OAGQ,MAAlB9B,KAAKkC,UACP,OAEQlC,KAAKQ,cAEX2B,aAAa7C,EAAO8C,UAAUR,EAAME,IAEvC9B,KAAKgB,UAAUC,aAKjBoB,MAAO,WAGNrC,KAAKgB,UAAUC,WACfjB,KAAKa","file":"../../../geo/openlayers/GfxLayer.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/connect\",\r\n\t\"dojo/dom-style\",\r\n\t\"dojox/gfx\",\r\n\t\"dojox/gfx/matrix\",\r\n\t\"./Feature\",\r\n\t\"./Layer\"\r\n], function(declare, connect, style, gfx, matrix, Feature, Layer){\r\n\r\n\treturn declare(\"dojox.geo.openlayers.GfxLayer\", Layer, {\r\n\t\t// summary:\r\n\t\t//\t\tA layer dedicated to render dojox.geo.openlayers.GeometryFeature\r\n\t\t// description:\r\n\t\t//\t\tA layer class for rendering geometries as dojox.gfx.Shape objects.\r\n\t\t//\t\tThis layer class accepts Features which encapsulates graphic objects to be added to the map.\r\n\t\t//\t\tAll objects should be added to this group.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\t_viewport: null,\r\n\r\n\t\tconstructor: function(name, options){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConstructs a new GFX layer.\r\n\t\t\tvar s = gfx.createSurface(this.olLayer.div, 100, 100);\r\n\t\t\tthis._surface = s;\r\n\t\t\tvar vp;\r\n\t\t\tif(options && options.viewport){\r\n\t\t\t\tvp = options.viewport;\r\n\t\t\t}else{\r\n\t\t\t\tvp = s.createGroup();\r\n\t\t\t}\r\n\t\t\tthis.setViewport(vp);\r\n\t\t\tconnect.connect(this.olLayer, \"onMapResize\", this, \"onMapResize\");\r\n\t\t\tthis.olLayer.getDataExtent = this.getDataExtent;\r\n\t\t},\r\n\r\n\t\tgetViewport: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGets the viewport\r\n\t\t\t// tags:\r\n\t\t\t//\t\tinternal\r\n\t\t\treturn this._viewport;\r\n\t\t},\r\n\r\n\t\tsetViewport: function(g){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets the viewport\r\n\t\t\t// g: dojox.gfx.Group\r\n\t\t\t// tags:\r\n\t\t\t//\t\tinternal\r\n\t\t\tif(this._viewport){\r\n\t\t\t\tthis._viewport.removeShape();\r\n\t\t\t}\r\n\t\t\tthis._viewport = g;\r\n\t\t\tthis._surface.add(g);\r\n\t\t},\r\n\r\n\t\tonMapResize: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when map is resized.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tthis._surfaceSize();\r\n\t\t},\r\n\r\n\t\tsetMap: function(map){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets the map for this layer.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._surfaceSize();\r\n\t\t},\r\n\r\n\t\tgetDataExtent: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet data extent\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar ret = this._surface.getDimensions();\r\n\t\t\treturn ret;\r\n\t\t},\r\n\r\n\t\tgetSurface: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet the underlying dojox.gfx.Surface\r\n\t\t\t// returns:\r\n\t\t\t//\t\tThe dojox.gfx.Surface this layer uses to draw its GFX rendering.\r\n\t\t\treturn this._surface; // dojox.gfx.Surface\r\n\t\t},\r\n\r\n\t\t_surfaceSize: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRecomputes the surface size when being resized.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar s = this.olLayer.map.getSize();\r\n\t\t\tthis._surface.setDimensions(s.w, s.h);\r\n\t\t},\r\n\r\n\t\tmoveTo: function(event){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when this layer is moved or zoomed.\r\n\t\t\t// event:\r\n\t\t\t//\t\tThe event\r\n\t\t\tvar s = style.get(this.olLayer.map.layerContainerDiv);\r\n\t\t\tvar left = parseInt(s.left);\r\n\t\t\tvar top = parseInt(s.top);\r\n\r\n\t\t\tif(event.zoomChanged || left || top){\r\n\t\t\t\tvar d = this.olLayer.div;\r\n\r\n\t\t\t\tstyle.set(d, {\r\n\t\t\t\t\tleft: -left + \"px\",\r\n\t\t\t\t\ttop: -top + \"px\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(this._features == null){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tvar vp = this.getViewport();\r\n\r\n\t\t\t\tvp.setTransform(matrix.translate(left, top));\r\n\r\n\t\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tadded: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when added to a map.\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._surfaceSize();\r\n\t\t}\r\n\r\n\t});\r\n});\r\n"]}