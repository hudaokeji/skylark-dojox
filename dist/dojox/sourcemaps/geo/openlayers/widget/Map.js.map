{"version":3,"sources":["geo/openlayers/widget/Map.js"],"names":["define","lang","declare","array","domgeo","query","Widget","openlayers","Map","Layer","GfxLayer","baseLayerType","BaseLayerType","OSM","initialLocation","touchHandler","map","startup","this","inherited","arguments","initialFit","buildRendering","div","domNode","_makeLayers","n","layers","forEach","l","type","getAttribute","name","cls","p","getObject","layer","addLayer","resize","b","h","box","olm","getOLMap","length","mixin","setMarginBox","w","updateSize"],"mappings":";;;;;;;AAAAA,QACC,kBACA,qBACA,mBACA,oBACA,aACA,gBACA,WACA,SACA,WACA,eACE,SAASC,EAAMC,EAASC,EAAOC,EAAQC,EAAOC,EAAQC,EAAYC,EAAKC,EAAOC,GAEhF,OAAOR,EAAQ,kCAAmCI,GA4BjDK,cAAeJ,EAAWK,cAAcC,IAkBxCC,gBAAiB,KAMjBC,cAAc,EAIdC,IAAM,KAENC,QAAS,WAGRC,KAAKC,UAAUC,WACfF,KAAKF,IAAIK,YACRP,gBAAiBI,KAAKJ,mBAIxBQ,eAAgB,WAKfJ,KAAKC,UAAUC,WACf,IAAIG,EAAML,KAAKM,QACXR,EAAM,IAAIR,EAAIe,GACjBZ,cAAeO,KAAKP,cACpBI,aAAcG,KAAKH,eAEpBG,KAAKF,IAAMA,EAEXE,KAAKO,eAGNA,YAAa,WAKZ,IAAIC,EAAIR,KAAKM,QACTG,EAAwBtB,EAAM,WAAYqB,GAC9CvB,EAAMyB,QAAQD,EAAQ,SAASE,GAC9B,IAAIC,EAAOD,EAAEE,aAAa,QACtBC,EAAOH,EAAEE,aAAa,QACtBE,EAAM,wBAA0BH,EAChCI,EAAIjC,EAAKkC,UAAUF,GACvB,GAAGC,EAAE,CACJ,IAAIE,EAAQ,IAAIF,EAAEF,MACfI,GACFlB,KAAKF,IAAIqB,SAASD,KAGlBlB,OAGJoB,OAAS,SAASC,EAAEC,GAanB,IAEIC,EAFAC,EAAMxB,KAAKF,IAAI2B,WAGnB,OAAOvB,UAAUwB,QAChB,KAAK,EAEL,MACA,KAAK,EAEJH,EAAMxC,EAAK4C,SAAUN,GACrBnC,EAAO0C,aAAaJ,EAAInB,IAAKkB,GAC9B,MACA,KAAK,EAEJA,GACCM,EAAG3B,UAAU,GACboB,EAAGpB,UAAU,IAEdhB,EAAO0C,aAAaJ,EAAInB,IAAKkB,GAG/BC,EAAIM","file":"../../../../geo/openlayers/widget/Map.js","sourcesContent":["define([\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/dom-geometry\",\r\n\t\"dojo/query\",\r\n\t\"dijit/_Widget\",\r\n\t\"../_base\",\r\n\t\"../Map\",\r\n\t\"../Layer\",\r\n\t\"../GfxLayer\"\r\n], function(lang, declare, array, domgeo, query, Widget, openlayers, Map, Layer, GfxLayer){\r\n\r\n\treturn declare(\"dojox.geo.openlayers.widget.Map\", Widget, {\r\n\t\t// summary:\r\n\t\t//\t\tA widget version of the `dojox.geo.openlayers.Map` component.\r\n\t\t// description:\r\n\t\t//\t\tThe `dojox.geo.openlayers.widget.Map` widget is the widget \r\n\t\t//\t\tversion of the `dojox.geo.openlayers.Map` component. \r\n\t\t//\t\tWith this widget, user can specify some attributes in the markup such as\r\n\t\t//\t\t\r\n\t\t//\t\t- `baseLayerType`: The type of the base layer. Permitted values are\r\n\t\t//\t\t- `initialLocation`: The initial location as for the dojox.geo.openlayers.Map.fitTo method\r\n\t\t//\t\t- `touchHandler`: Tells if we attach touch handler or not.\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t| <div id=\"map\" dojoType=\"dojox.geo.openlayers.widget.Map\" baseLayerType=\"Google\" initialLocation=\"{\r\n\t\t//\t|   position: [7.154126, 43.651748],\r\n\t\t//\t|   extent: 0.2 }\"\r\n\t\t//\t| style=\"background-color: #b5d0d0; width: 100%; height: 100%;\">\r\n\t\t//\r\n\r\n\t\t// baseLayerType: String\r\n\t\t//\t\tBase layer type as defined in `dojox.geo.openlayer.BaseLayerType`. Can be one of:\r\n\t\t//\r\n\t\t//\t\t- `OSM`\r\n\t\t//\t\t- `WMS`\r\n\t\t//\t\t- `Google`\r\n\t\t//\t\t- `VirtualEarth`\r\n\t\t//\t\t- `Yahoo`\r\n\t\t//\t\t- `ArcGIS`\r\n\t\tbaseLayerType: openlayers.BaseLayerType.OSM,\r\n\r\n\t\t// initialLocation: String\r\n\t\t//\t\tThe part of the map shown at startup time. It is the string description of the location shown at\r\n\t\t//\t\tstartup time. Format is the same as for the `dojox.geo.openlayers.widget.Map.fitTo`\r\n\t\t//\t\tmethod.\r\n\t\t//\t|\t{\r\n\t\t//\t|\t\tbounds: [ulx, uly, lrx, lry]\r\n\t\t//\t|\t}\r\n\t\t//\t\tThe map is fit on the specified bounds expressed as decimal degrees latitude and longitude.\r\n\t\t//\t\tThe bounds are defined with their upper left and lower right corners coordinates.\r\n\t\t//\r\n\t\t//\t|\t{\r\n\t\t//\t|\t\tposition: [longitude, latitude],\r\n\t\t//\t|\t\textent: degrees\r\n\t\t//\t|\t}\r\n\t\t//\t\tThe map is fit on the specified position showing the extent `<extent>` around\r\n\t\t//\t\tthe specified center position.\r\n\t\tinitialLocation: null,\r\n\r\n\t\t// touchHandler: Boolean\r\n\t\t//\t\tTells if the touch handler should be attached to the map or not.\r\n\t\t//\t\tTouch handler handles touch events so that the widget can be used\r\n\t\t//\t\ton mobile applications.\r\n\t\ttouchHandler: false,\r\n\r\n\t\t// map: [readonly] Map\r\n\t\t//\t\tThe underlying `dojox/geo/openlayers/Map` object.\r\n\t\tmap : null,\r\n\r\n\t\tstartup: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tProcessing after the DOM fragment is added to the document\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.map.initialFit({\r\n\t\t\t\tinitialLocation: this.initialLocation\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConstruct the UI for this widget, creates the real dojox.geo.openlayers.Map object.\t\t\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tvar div = this.domNode;\r\n\t\t\tvar map = new Map(div, {\r\n\t\t\t\tbaseLayerType: this.baseLayerType,\r\n\t\t\t\ttouchHandler: this.touchHandler\r\n\t\t\t});\r\n\t\t\tthis.map = map;\r\n\r\n\t\t\tthis._makeLayers();\r\n\t\t},\r\n\r\n\t\t_makeLayers: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates layers defined as markup.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar n = this.domNode;\r\n\t\t\tvar layers = /* ?? query. */query(\"> .layer\", n);\r\n\t\t\tarray.forEach(layers, function(l){\r\n\t\t\t\tvar type = l.getAttribute(\"type\");\r\n\t\t\t\tvar name = l.getAttribute(\"name\");\r\n\t\t\t\tvar cls = \"dojox.geo.openlayers.\" + type;\r\n\t\t\t\tvar p = lang.getObject(cls);\r\n\t\t\t\tif(p){\r\n\t\t\t\t\tvar layer = new p(name, {});\r\n\t\t\t\t\tif(layer){\r\n\t\t\t\t\t\tthis.map.addLayer(layer);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\tresize : function(b,h){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tResize the widget.\r\n\t\t\t// description:\r\n\t\t\t//\t\tResize the domNode and the widget to the dimensions of a box of the following form:\r\n\t\t\t//\t\t`{ l: 50, t: 200, w: 300: h: 150 }`\r\n\t\t\t// b: Object|Number?\r\n\t\t\t//\t\tIf passed, denotes the new size of the widget.\r\n\t\t\t//\t\tCan be either nothing (widget adapts to the div),\r\n\t\t\t//\t\tan Object describing a box, or a Number representing the width.\r\n\t\t\t// h: Number?\r\n\t\t\t//\t\tThe new height. Requires that a width has been specified in the first parameter.\r\n\r\n\t\t\tvar olm = this.map.getOLMap();\r\n\r\n\t\t\tvar box;\r\n\t\t\tswitch(arguments.length){\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\t// case 0, do not resize the div, just the surface\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\t// argument, override node box\r\n\t\t\t\t\tbox = lang.mixin({}, b);\r\n\t\t\t\t\tdomgeo.setMarginBox(olm.div, box);\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\t// two argument, width, height\r\n\t\t\t\t\tbox = {\r\n\t\t\t\t\t\tw: arguments[0],\r\n\t\t\t\t\t\th: arguments[1]\r\n\t\t\t\t\t};\r\n\t\t\t\t\tdomgeo.setMarginBox(olm.div, box);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tolm.updateSize();\r\n\t\t}\r\n\t});\r\n});\r\n"]}