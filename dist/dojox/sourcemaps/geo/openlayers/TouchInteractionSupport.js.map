{"version":3,"sources":["geo/openlayers/TouchInteractionSupport.js"],"names":["define","declare","connect","html","lang","event","win","_map","_centerTouchLocation","_touchMoveListener","_touchEndListener","_initialFingerSpacing","_initialScale","_tapCount","_tapThreshold","_lastTap","constructor","map","this","OpenLayers","LonLat","div","_touchStartHandler","_touchMoveHandler","_touchEndHandler","x","y","_getTouchBarycenter","touchEvent","touches","firstTouch","secondTouch","length","marginBox","pageX","l","pageY","t","_getFingerSpacing","spacing","dx","dy","Math","sqrt","_isDoubleTap","isDoubleTap","setTimeout","hitch","_doubleTapHandler","offX","offY","mapPoint","getLonLatFromPixel","Pixel","setCenter","lon","lat","getZoom","stop","middlePoint","getScale","global","disconnect","mapOffsetLon","mapOffsetLat","scaleFactor","zoomToScale","currentMapCenter","getCenter"],"mappings":"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","file":"../../../geo/openlayers/TouchInteractionSupport.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/connect\",\r\n\t\"dojo/_base/html\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/event\",\r\n\t\"dojo/_base/window\"\r\n], function(declare, connect, html, lang, event, win){\r\n\r\n\treturn declare(\"dojox.geo.openlayers.TouchInteractionSupport\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tclass to handle touch interactions on a OpenLayers.Map widget\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\r\n\t\t_map: null,\r\n\t\t_centerTouchLocation: null,\r\n\t\t_touchMoveListener: null,\r\n\t\t_touchEndListener: null,\r\n\t\t_initialFingerSpacing: null,\r\n\t\t_initialScale: null,\r\n\t\t_tapCount: null,\r\n\t\t_tapThreshold: null,\r\n\t\t_lastTap: null,\r\n\r\n\t\tconstructor: function(map){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConstructs a new TouchInteractionSupport instance\r\n\t\t\t// map: OpenLayers.Map\r\n\t\t\t//\t\tthe Map widget this class provides touch navigation for.\r\n\t\t\tthis._map = map;\r\n\t\t\tthis._centerTouchLocation = new OpenLayers.LonLat(0, 0);\r\n\r\n\t\t\tvar div = this._map.div;\r\n\r\n\t\t\t// install touch listeners\r\n\t\t\tconnect.connect(div, \"touchstart\", this, this._touchStartHandler);\r\n\t\t\tconnect.connect(div, \"touchmove\", this, this._touchMoveHandler);\r\n\t\t\tconnect.connect(div, \"touchend\", this, this._touchEndHandler);\r\n\r\n\t\t\tthis._tapCount = 0;\r\n\t\t\tthis._lastTap = {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t};\r\n\t\t\tthis._tapThreshold = 100; // square distance in pixels\r\n\r\n\t\t},\r\n\r\n\t\t_getTouchBarycenter: function(touchEvent){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns the midpoint of the two first fingers (or the first finger location if only one)\r\n\t\t\t// touchEvent: TouchEvent\r\n\t\t\t//\t\ta touch event\r\n\t\t\t// returns:\r\n\t\t\t//\t\tthe midpoint as an {x,y} object.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar touches = touchEvent.touches;\r\n\t\t\tvar firstTouch = touches[0];\r\n\t\t\tvar secondTouch = null;\r\n\t\t\tif(touches.length > 1){\r\n\t\t\t\tsecondTouch = touches[1];\r\n\t\t\t}else{\r\n\t\t\t\tsecondTouch = touches[0];\r\n\t\t\t}\r\n\r\n\t\t\tvar marginBox = html.marginBox(this._map.div);\r\n\r\n\t\t\tvar middleX = (firstTouch.pageX + secondTouch.pageX) / 2.0 - marginBox.l;\r\n\t\t\tvar middleY = (firstTouch.pageY + secondTouch.pageY) / 2.0 - marginBox.t;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx: middleX,\r\n\t\t\t\ty: middleY\r\n\t\t\t}; // Object\r\n\r\n\t\t},\r\n\r\n\t\t_getFingerSpacing: function(touchEvent){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcomputes the distance between the first two fingers\r\n\t\t\t// touchEvent: Event\r\n\t\t\t//\t\ta touch event\r\n\t\t\t// returns: float\r\n\t\t\t//\t\ta distance. -1 if less that 2 fingers\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar touches = touchEvent.touches;\r\n\t\t\tvar spacing = -1;\r\n\t\t\tif(touches.length >= 2){\r\n\t\t\t\tvar dx = (touches[1].pageX - touches[0].pageX);\r\n\t\t\t\tvar dy = (touches[1].pageY - touches[0].pageY);\r\n\t\t\t\tspacing = Math.sqrt(dx * dx + dy * dy);\r\n\t\t\t}\r\n\t\t\treturn spacing;\r\n\t\t},\r\n\r\n\t\t_isDoubleTap: function(touchEvent){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tchecks whether the specified touchStart event is a double tap \r\n\t\t\t//\t\t(i.e. follows closely a previous touchStart at approximately the same location)\r\n\t\t\t// touchEvent: TouchEvent\r\n\t\t\t//\t\ta touch event\r\n\t\t\t// returns: boolean\r\n\t\t\t//\t\ttrue if this event is considered a double tap\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar isDoubleTap = false;\r\n\t\t\tvar touches = touchEvent.touches;\r\n\t\t\tif((this._tapCount > 0) && touches.length == 1){\r\n\t\t\t\t// test distance from last tap\r\n\t\t\t\tvar dx = (touches[0].pageX - this._lastTap.x);\r\n\t\t\t\tvar dy = (touches[0].pageY - this._lastTap.y);\r\n\t\t\t\tvar distance = dx * dx + dy * dy;\r\n\t\t\t\tif(distance < this._tapThreshold){\r\n\t\t\t\t\tisDoubleTap = true;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis._tapCount = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._tapCount++;\r\n\t\t\tthis._lastTap.x = touches[0].pageX;\r\n\t\t\tthis._lastTap.y = touches[0].pageY;\r\n\t\t\tsetTimeout(lang.hitch(this, function(){\r\n\t\t\t\tthis._tapCount = 0;\r\n\t\t\t}), 300);\r\n\r\n\t\t\treturn isDoubleTap;\r\n\t\t},\r\n\r\n\t\t_doubleTapHandler: function(touchEvent){\r\n\t\t\t// summary:\r\n\t\t\t//\t\taction performed on the map when a double tap was triggered \r\n\t\t\t// touchEvent: TouchEvent\r\n\t\t\t//\t\ta touch event\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t// perform a basic 2x zoom on touch\r\n\t\t\tvar touches = touchEvent.touches;\r\n\t\t\tvar marginBox = html.marginBox(this._map.div);\r\n\t\t\tvar offX = touches[0].pageX - marginBox.l;\r\n\t\t\tvar offY = touches[0].pageY - marginBox.t;\r\n\t\t\t// clicked map point before zooming\r\n\t\t\tvar mapPoint = this._map.getLonLatFromPixel(new OpenLayers.Pixel(offX, offY));\r\n\t\t\t// zoom increment power\r\n\t\t\tthis._map.setCenter(new OpenLayers.LonLat(mapPoint.lon, mapPoint.lat), this._map.getZoom() + 1);\r\n\t\t},\r\n\r\n\t\t_touchStartHandler: function(touchEvent){\r\n\t\t\t// summary:\r\n\t\t\t//\t\taction performed on the map when a touch start was triggered \r\n\t\t\t// touchEvent: Event\r\n\t\t\t//\t\ta touch event\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tevent.stop(touchEvent);\r\n\r\n\t\t\t// test double tap\r\n\t\t\tif(this._isDoubleTap(touchEvent)){\r\n\t\t\t\tthis._doubleTapHandler(touchEvent);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// compute map midpoint between fingers\t\t\r\n\t\t\tvar middlePoint = this._getTouchBarycenter(touchEvent);\r\n\r\n\t\t\tthis._centerTouchLocation = this._map.getLonLatFromPixel(new OpenLayers.Pixel(middlePoint.x, middlePoint.y));\r\n\r\n\t\t\t// store initial finger spacing to compute zoom later\r\n\t\t\tthis._initialFingerSpacing = this._getFingerSpacing(touchEvent);\r\n\r\n\t\t\t// store initial map scale\r\n\t\t\tthis._initialScale = this._map.getScale();\r\n\r\n\t\t\t// install touch move and up listeners (if not done by other fingers before)\r\n\t\t\tif(!this._touchMoveListener){\r\n\t\t\t\tthis._touchMoveListener = connect.connect(win.global, \"touchmove\", this, this._touchMoveHandler);\r\n\t\t\t}\r\n\t\t\tif(!this._touchEndListener){\r\n\t\t\t\tthis._touchEndListener = connect.connect(win.global, \"touchend\", this, this._touchEndHandler);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_touchEndHandler: function(touchEvent){\r\n\t\t\t// summary:\r\n\t\t\t//\t\taction performed on the map when a touch end was triggered \r\n\t\t\t// touchEvent: Event\r\n\t\t\t//\t\ta touch event\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tevent.stop(touchEvent);\r\n\r\n\t\t\tvar touches = touchEvent.touches;\r\n\r\n\t\t\tif(touches.length == 0){\r\n\t\t\t\t// disconnect listeners only when all fingers are up\r\n\t\t\t\tif(this._touchMoveListener){\r\n\t\t\t\t\tconnect.disconnect(this._touchMoveListener);\r\n\t\t\t\t\tthis._touchMoveListener = null;\r\n\t\t\t\t}\r\n\t\t\t\tif(this._touchEndListener){\r\n\t\t\t\t\tconnect.disconnect(this._touchEndListener);\r\n\t\t\t\t\tthis._touchEndListener = null;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// recompute touch center\r\n\t\t\t\tvar middlePoint = this._getTouchBarycenter(touchEvent);\r\n\r\n\t\t\t\tthis._centerTouchLocation = this._map.getLonLatFromPixel(new OpenLayers.Pixel(middlePoint.x, middlePoint.y));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_touchMoveHandler: function(touchEvent){\r\n\t\t\t// summary:\r\n\t\t\t//\t\taction performed on the map when a touch move was triggered \r\n\t\t\t// touchEvent: Event\r\n\t\t\t//\t\ta touch event\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t// prevent browser interaction\r\n\t\t\tevent.stop(touchEvent);\r\n\r\n\t\t\tvar middlePoint = this._getTouchBarycenter(touchEvent);\r\n\r\n\t\t\t// compute map offset\r\n\t\t\tvar mapPoint = this._map.getLonLatFromPixel(new OpenLayers.Pixel(middlePoint.x, middlePoint.y));\r\n\t\t\tvar mapOffsetLon = mapPoint.lon - this._centerTouchLocation.lon;\r\n\t\t\tvar mapOffsetLat = mapPoint.lat - this._centerTouchLocation.lat;\r\n\r\n\t\t\t// compute scale factor\r\n\t\t\tvar scaleFactor = 1;\r\n\t\t\tvar touches = touchEvent.touches;\r\n\t\t\tif(touches.length >= 2){\r\n\t\t\t\tvar fingerSpacing = this._getFingerSpacing(touchEvent);\r\n\t\t\t\tscaleFactor = fingerSpacing / this._initialFingerSpacing;\r\n\t\t\t\t// weird openlayer bug: setting several times the same scale value lead to visual zoom...\r\n\t\t\t\tthis._map.zoomToScale(this._initialScale / scaleFactor);\r\n\t\t\t}\r\n\r\n\t\t\t// adjust map center on barycenter\r\n\t\t\tvar currentMapCenter = this._map.getCenter();\r\n\t\t\tthis._map.setCenter(new OpenLayers.LonLat(currentMapCenter.lon - mapOffsetLon, currentMapCenter.lat\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t- mapOffsetLat));\r\n\r\n\t\t}\r\n\t});\r\n});\r\n"]}