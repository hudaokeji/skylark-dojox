{"version":3,"sources":["geo/openlayers/JsonImport.js"],"names":["define","declare","xhr","lang","array","LineString","Collection","GeometryFeature","constructor","params","this","_params","loadData","p","get","url","handleAs","sync","load","hitch","_gotData","error","_loadError","items","nf","nextFeature","isFunction","extent","layerExtent","ulx","uly","lrx","lry","extentLL","layerExtentLL","x1","y1","x2","ulxLL","ulyLL","lrxLL","lryLL","features","f","s","gf","isArray","a","Array","forEach","item","ls","_makeGeometry","push","g","call","_makeFeature","complete","i","length","x","y","px","py","apply","parameters"],"mappings":";;;;;;;AAAAA,QACC,qBACA,iBACA,kBACA,mBACA,eACA,eACA,qBACE,SAASC,EAASC,EAAKC,EAAMC,EAAOC,EAAYC,EAAYC,GAe9D,OAAON,EAAQ,kCAAmC,MAQjDO,YAAc,SAASC,GAKtBC,KAAKC,QAAUF,GAGhBG,SAAU,WAGT,IAAIC,EAAIH,KAAKC,QACbT,EAAIY,KACHC,IAAKF,EAAEE,IACPC,SAAU,OACVC,MAAM,EACNC,KAAMf,EAAKgB,MAAMT,KAAMA,KAAKU,UAC5BC,MAAOlB,EAAKgB,MAAMT,KAAMA,KAAKY,eAI/BF,SAAU,SAAqBG,GAK9B,IAAIC,EAAKd,KAAKC,QAAQc,YACtB,GAAItB,EAAKuB,WAAWF,GAApB,CAIA,IAAIG,EAASJ,EAAMK,YACfC,EAAMF,EAAO,GACbG,EAAMH,EAAO,GACbI,EAAMF,EAAMF,EAAO,GACnBK,EAAMF,EAAMH,EAAO,GAEnBM,EAAWV,EAAMW,cACjBC,EAAKF,EAAS,GACdG,EAAKH,EAAS,GACdI,EAAKF,EAAKF,EAAS,GAGnBK,EAAQH,EACRI,EAHKH,EAAKH,EAAS,GAInBO,EAAQH,EACRI,EAAQL,EAERM,EAAWnB,EAAMmB,SAErB,IAAK,IAAIC,KAAKD,EAAS,CACtB,IACIE,EADIF,EAASC,GACA,MACbE,EAAK,KACT,GAAG1C,EAAK2C,QAAQF,EAAE,IAAI,CAErB,IAAIG,EAAI,IAAIC,MACZ5C,EAAM6C,QAAQL,EAAG,SAASM,GACzB,IAAIC,EAAKzC,KAAK0C,cAAcF,EAAMrB,EAAKC,EAAKC,EAAKC,EAAKM,EAAOC,EAAOC,EAAOC,GAC3EM,EAAEM,KAAKF,IACLzC,MACH,IAAI4C,EAAI,IAAIhD,EAAWyC,GACvBF,EAAK,IAAItC,EAAgB+C,GACzB9B,EAAG+B,KAAK7C,KAAMmC,QAGdA,EAAKnC,KAAK8C,aAAaZ,EAAGf,EAAKC,EAAKC,EAAKC,EAAKM,EAAOC,EAAOC,EAAOC,GACnEjB,EAAG+B,KAAK7C,KAAMmC,GAGhB,IAAIY,EAAW/C,KAAKC,QAAQ8C,SACzBtD,EAAKuB,WAAW+B,IAClBA,EAASF,KAAK7C,KAAM+C,KAItBL,cAAe,SAAoBR,EAAcf,EAAgBC,EAAgBC,EACjFC,EAAgBM,EAAkBC,EAAkBC,EAAkBC,GAOrE,IAFA,IAAIM,KAEKW,EAAI,EAAGA,EAAId,EAAEe,OAAS,EAAGD,GAAK,EAAE,CACxC,IAAIE,EAAIhB,EAAEc,GACNG,EAAIjB,EAAEc,EAAI,GAGVI,GADCF,EAAI/B,IAAQE,EAAMF,IACTW,EAAQF,GAASA,EAG3ByB,GADCF,EAAI/B,IAAQE,EAAMF,IACTW,EAAQF,GAASA,EAE/BQ,EAAEM,MACDO,EAAGE,EACHD,EAAGE,IAKL,OADS,IAAI1D,EAAW0C,IAIzBS,aAAc,SAAoBZ,EAAcf,EAAgBC,EAAgBC,EAChFC,EAAgBM,EAAkBC,EAAkBC,EAAkBC,GAKrE,IAAIU,EAAKzC,KAAK0C,cAAcR,EAAGf,EAAKC,EAAKC,EAAKC,EAAKM,EAAOC,EAAOC,EAAOC,GAExE,OADS,IAAIlC,EAAgB4C,IAI9B7B,WAAY,WAKX,IAAIqB,EAAIjC,KAAKC,QAAQU,MAClBlB,EAAKuB,WAAWiB,IAClBA,EAAEqB,MAAMtD,KAAMuD","file":"../../../geo/openlayers/JsonImport.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/xhr\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/array\",\r\n\t\"./LineString\",\r\n\t\"./Collection\",\r\n\t\"./GeometryFeature\"\r\n], function(declare, xhr, lang, array, LineString, Collection, GeometryFeature){\r\n\r\n\t/*=====\r\n\tdojox.geo.openlayers.__JsonImportArgs = {\r\n\t\t// summary:\r\n\t\t//\t\tThe keyword arguments that can be passed in a JsonImport constructor.\r\n\t\t// url: String\r\n\t\t//\t\tThe url pointing to the JSON file to load.\r\n\t\t// nextFeature: function\r\n\t\t//\t\tThe function called each time a feature is read. The function is called with a GeometryFeature as argument.\r\n\t\t// error: function\r\n\t\t//\t\tError callback called if something fails.\r\n\t};\r\n\t=====*/\r\n\r\n\treturn declare(\"dojox.geo.openlayers.JsonImport\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tClass to load JSON formated ShapeFile as output of the JSon Custom Map Converter.\r\n\t\t// description:\r\n\t\t//\t\tThis class loads JSON formated ShapeFile produced by the JSon Custom Map Converter.\r\n\t\t//\t\tWhen loading the JSON file, it calls a iterator function each time a feature is read.\r\n\t\t//\t\tThis iterator function is provided as parameter to the constructor.\r\n\t\t//\r\n\t\tconstructor : function(params){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConstruct a new JSON importer.\r\n\t\t\t// params: dojox.geo.openlayers.__JsonImportArgs\r\n\t\t\t//\t\tThe parameters to initialize this JsonImport instance.\r\n\t\t\tthis._params = params;\r\n\t\t},\r\n\r\n\t\tloadData: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTriggers the loading.\r\n\t\t\tvar p = this._params;\r\n\t\t\txhr.get({\r\n\t\t\t\turl: p.url,\r\n\t\t\t\thandleAs: \"json\",\r\n\t\t\t\tsync: true,\r\n\t\t\t\tload: lang.hitch(this, this._gotData),\r\n\t\t\t\terror: lang.hitch(this, this._loadError)\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_gotData: function(/* Object */items){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when loading is complete.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar nf = this._params.nextFeature;\r\n\t\t\tif(!lang.isFunction(nf)){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar extent = items.layerExtent;\r\n\t\t\tvar ulx = extent[0];\r\n\t\t\tvar uly = extent[1];\r\n\t\t\tvar lrx = ulx + extent[2];\r\n\t\t\tvar lry = uly + extent[3];\r\n\r\n\t\t\tvar extentLL = items.layerExtentLL;\r\n\t\t\tvar x1 = extentLL[0];\r\n\t\t\tvar y1 = extentLL[1];\r\n\t\t\tvar x2 = x1 + extentLL[2];\r\n\t\t\tvar y2 = y1 + extentLL[3];\r\n\r\n\t\t\tvar ulxLL = x1;\r\n\t\t\tvar ulyLL = y2;\r\n\t\t\tvar lrxLL = x2;\r\n\t\t\tvar lryLL = y1;\r\n\r\n\t\t\tvar features = items.features;\r\n\r\n\t\t\tfor( var f in features){\r\n\t\t\t\tvar o = features[f];\r\n\t\t\t\tvar s = o[\"shape\"];\r\n\t\t\t\tvar gf = null;\r\n\t\t\t\tif(lang.isArray(s[0])){\r\n\r\n\t\t\t\t\tvar a = new Array();\r\n\t\t\t\t\tarray.forEach(s, function(item){\r\n\t\t\t\t\t\tvar ls = this._makeGeometry(item, ulx, uly, lrx, lry, ulxLL, ulyLL, lrxLL, lryLL);\r\n\t\t\t\t\t\ta.push(ls);\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t\tvar g = new Collection(a);\r\n\t\t\t\t\tgf = new GeometryFeature(g);\r\n\t\t\t\t\tnf.call(this, gf);\r\n\r\n\t\t\t\t}else{\r\n\t\t\t\t\tgf = this._makeFeature(s, ulx, uly, lrx, lry, ulxLL, ulyLL, lrxLL, lryLL);\r\n\t\t\t\t\tnf.call(this, gf);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar complete = this._params.complete;\r\n\t\t\tif(lang.isFunction(complete)){\r\n\t\t\t\tcomplete.call(this, complete);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_makeGeometry: function(/* Array */s, /* Float */ulx, /* Float */uly, /* Float */lrx, /* Float */\r\n\t\tlry, /* Float */ulxLL, /* Float */ulyLL, /* Float */lrxLL, /* Float */lryLL){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMake a geometry with the specified points.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar a = [];\r\n\t\t\tvar k = 0.0;\r\n\t\t\tfor( var i = 0; i < s.length - 1; i += 2){\r\n\t\t\t\tvar x = s[i];\r\n\t\t\t\tvar y = s[i + 1];\r\n\r\n\t\t\t\tk = (x - ulx) / (lrx - ulx);\r\n\t\t\t\tvar px = k * (lrxLL - ulxLL) + ulxLL;\r\n\r\n\t\t\t\tk = (y - uly) / (lry - uly);\r\n\t\t\t\tvar py = k * (lryLL - ulyLL) + ulyLL;\r\n\r\n\t\t\t\ta.push({\r\n\t\t\t\t\tx: px,\r\n\t\t\t\t\ty: py\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\t\t\tvar ls = new LineString(a);\r\n\t\t\treturn ls; // LineString\r\n\t\t},\r\n\r\n\t\t_makeFeature: function(/* Array */s, /* Float */ulx, /* Float */uly, /* Float */lrx, /* Float */\r\n\t\tlry, /* Float */ulxLL, /* Float */ulyLL, /* Float */lrxLL, /* Float */lryLL){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMake a GeometryFeature with the specified points.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar ls = this._makeGeometry(s, ulx, uly, lrx, lry, ulxLL, ulyLL, lrxLL, lryLL);\r\n\t\t\tvar gf = new GeometryFeature(ls);\r\n\t\t\treturn gf;\r\n\t\t},\r\n\r\n\t\t_loadError: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when an error occurs. Calls the error function is provided in the parameters.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar f = this._params.error;\r\n\t\t\tif(lang.isFunction(f)){\r\n\t\t\t\tf.apply(this, parameters);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n"]}