{"version":3,"sources":["gesture/swipe.js"],"names":["define","kernel","declare","Base","dojox","experimental","clz","defaultEvent","subEvents","press","data","e","touches","length","context","x","y","t","screenX","screenY","Date","getTime","this","lock","currentTarget","move","_recognize","release","unLock","cancel","type","info","_getSwipeInfo","fire","target","dx","dy","startData","time","gesture","swipe","Swipe"],"mappings":";;;;;;;AAAAA,QACC,oBACA,qBACA,SACA,WACE,SAASC,EAAQC,EAASC,EAAMC,GA4CnCH,EAAOI,aAAa,uBAIpB,IAAIC,EAAMJ,EAA8CC,GAIvDI,aAAc,QAKdC,WAAY,OAEZC,MAAO,SAAmBC,EAAeC,GAGrCA,EAAEC,SAAWD,EAAEC,QAAQC,QAAU,SAE5BH,EAAKI,SAGTJ,EAAKI,UACRJ,EAAKI,SAAWC,EAAG,EAAGC,EAAG,EAAGC,EAAG,IAEhCP,EAAKI,QAAQC,EAAIJ,EAAEO,QACnBR,EAAKI,QAAQE,EAAIL,EAAEQ,QACnBT,EAAKI,QAAQG,GAAI,IAAIG,MAAOC,UAC5BC,KAAKC,KAAKZ,EAAEa,iBAEbC,KAAM,SAAmBf,EAAeC,GAGvCW,KAAKI,WAAWhB,EAAMC,EAAG,UAE1BgB,QAAS,SAAmBjB,EAAeC,GAG1CW,KAAKI,WAAWhB,EAAMC,EAAG,oBAClBD,EAAKI,QACZQ,KAAKM,UAENC,OAAQ,SAASnB,EAAMC,UAGfD,EAAKI,QACZQ,KAAKM,UAENF,WAAY,SAAmBhB,EAAeC,EAAamB,GAG1D,GAAIpB,EAAKI,QAAT,CAGA,IAAIiB,EAAOT,KAAKU,cAActB,EAAMC,GAChCoB,IAIJA,EAAKD,KAAOA,EACZR,KAAKW,KAAKtB,EAAEuB,OAAQH,MAErBC,cAAe,SAAmBtB,EAAeC,GAGhD,IAAIwB,EAAIC,EAAIL,KAAWM,EAAY3B,EAAKI,QAOxC,OALAiB,EAAKO,MAAO,IAAIlB,MAAOC,UAAYgB,EAAUpB,EAE7CkB,EAAKxB,EAAEO,QAAUmB,EAAUtB,EAC3BqB,EAAKzB,EAAEQ,QAAUkB,EAAUrB,EAEjB,IAAPmB,GAAmB,IAAPC,EAEP,MAERL,EAAKI,GAAKA,EACVJ,EAAKK,GAAKA,EACHL,MAST,OAJA3B,EAAMmC,QAAQC,MAAQ,IAAIlC,EAE1BF,EAAMmC,QAAQC,MAAMC,MAAQnC,EAErBF,EAAMmC,QAAQC","file":"../../gesture/swipe.js","sourcesContent":["define([\r\n\t\"dojo/_base/kernel\",\r\n\t\"dojo/_base/declare\",\r\n\t\"./Base\",\r\n\t\"../main\"\r\n], function(kernel, declare, Base, dojox){\r\n// module:\r\n//\t\tdojox/gesture/swipe\r\n\r\n/*=====\r\n\tdojox.gesture.swipe = {\r\n\t\t// summary:\r\n\t\t//\t\tThis module provides swipe gestures including:\r\n\t\t//\r\n\t\t//\t\t####dojox.gesture.swipe\r\n\t\t//\r\n\t\t//\t\tA series of 'swipe' will be fired during touchmove, this will mostly\r\n\t\t//\t\tbe used to keep sliding the Dom target based on the swiped distance(dx, dy).\r\n\t\t//\r\n\t\t//\t\t####dojox.gesture.swipe.end\r\n\t\t//\t\r\n\t\t//\t\tFired when a swipe is ended so that an bounce animation may be applied\r\n\t\t//\t\tto the dom target sliding to the final position.\r\n\t\t//\r\n\t\t//\t\tFollowing information will be included in the fired swipe events:\r\n\t\t//\r\n\t\t//\t\t1. type: 'swipe'|'swipe.end'\r\n\t\t//\t\t2. time: an integer indicating the delta time(in milliseconds)\r\n\t\t//\t\t3. dx: delta distance on X axis, dx less than 0 - moving left, dx larger than 0 - moving right\r\n\t\t//\t\t4. dy: delta distance on Y axis, dy less than 0 - moving up, dY larger than 0 - moving down\r\n\t\t//\r\n\t\t//\t\tNote - dx and dy can also be used together for a hybrid swipe(both vertically and horizontally)\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tA. Used with dojo.connect()\r\n\t\t//\t\t|\tdojo.connect(node, dojox.gesture.swipe, function(e){});\r\n\t\t//\t\t|\tdojo.connect(node, dojox.gesture.swipe.end, function(e){});\r\n\t\t//\r\n\t\t//\t\tB. Used with dojo.on\r\n\t\t//\t\t|\tdefine(['dojo/on', 'dojox/gesture/swipe'], function(on, swipe){\r\n\t\t//\t\t|\t\ton(node, swipe, function(e){});\r\n\t\t//\t\t|\t\ton(node, swipe.end, function(e){});\r\n\t\t//\r\n\t\t//\t\tC. Used with dojox.gesture.swipe.* directly\r\n\t\t//\t\t|\tdojox.gesture.swipe(node, function(e){});\r\n\t\t//\t\t|\tdojox.gesture.swipe.end(node, function(e){});\r\n\t};\r\n=====*/\r\n\r\nkernel.experimental(\"dojox.gesture.swipe\");\r\n\r\n// Declare an internal anonymous class which will only be exported\r\n// by module return value e.g. dojox.gesture.swipe.Swipe\r\nvar clz = declare(/*===== \"dojox.gesture.swipe\", =====*/Base, {\r\n\r\n\t// defaultEvent: [readonly] String\r\n\t//\t\tDefault event - 'swipe'\r\n\tdefaultEvent: \"swipe\",\r\n\r\n\t// subEvents: [readonly] Array\r\n\t//\t\tList of sub events, used by \r\n\t//\t\tbeing combined with defaultEvent as 'swipe.end'\r\n\tsubEvents: [\"end\"],\r\n\r\n\tpress: function(/*Object*/data, /*Event*/e){\r\n\t\t// summary:\r\n\t\t//\t\tOverwritten, set initial swipe info\r\n\t\tif(e.touches && e.touches.length >= 2){\r\n\t\t\t//currently only support single-touch swipe\r\n\t\t\tdelete data.context;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(!data.context){\r\n\t\t\tdata.context = {x: 0, y: 0, t: 0};\r\n\t\t}\r\n\t\tdata.context.x = e.screenX;\r\n\t\tdata.context.y = e.screenY;\r\n\t\tdata.context.t = new Date().getTime();\r\n\t\tthis.lock(e.currentTarget);\r\n\t},\r\n\tmove: function(/*Object*/data, /*Event*/e){\r\n\t\t// summary:\r\n\t\t//\t\tOverwritten, fire matched 'swipe' during touchmove\r\n\t\tthis._recognize(data, e, \"swipe\");\r\n\t},\r\n\trelease: function(/*Object*/data, /*Event*/e){\r\n\t\t// summary:\r\n\t\t//\t\tOverwritten, fire matched 'swipe.end' when touchend\r\n\t\tthis._recognize(data, e, \"swipe.end\");\t\t\r\n\t\tdelete data.context;\r\n\t\tthis.unLock();\r\n\t},\r\n\tcancel: function(data, e){\r\n\t\t// summary:\r\n\t\t//\t\tOverwritten\r\n\t\tdelete data.context;\r\n\t\tthis.unLock();\r\n\t},\r\n\t_recognize: function(/*Object*/data, /*Event*/e, /*String*/type){\r\n\t\t// summary:\r\n\t\t//\t\tRecognize and fire appropriate gesture events\r\n\t\tif(!data.context){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar info = this._getSwipeInfo(data, e);\r\n\t\tif(!info){\r\n\t\t\t// no swipe happened\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tinfo.type = type;\r\n\t\tthis.fire(e.target, info);\r\n\t},\r\n\t_getSwipeInfo: function(/*Object*/data, /*Event*/e){\r\n\t\t// summary:\r\n\t\t//\t\tCalculate swipe information - time, dx and dy\r\n\t\tvar dx, dy, info = {}, startData = data.context;\r\n\t\t\r\n\t\tinfo.time = new Date().getTime() - startData.t;\r\n\t\t\r\n\t\tdx = e.screenX - startData.x;\r\n\t\tdy = e.screenY - startData.y;\r\n\t\t\r\n\t\tif(dx === 0 && dy === 0){\r\n\t\t\t// no swipes happened\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tinfo.dx = dx;\r\n\t\tinfo.dy = dy;\r\n\t\treturn info;\r\n\t}\r\n});\r\n\r\n// the default swipe instance for handy use\r\ndojox.gesture.swipe = new clz();\r\n// Class for creating a new Swipe instance\r\ndojox.gesture.swipe.Swipe = clz;\r\n\r\nreturn dojox.gesture.swipe;\r\n\r\n});"]}