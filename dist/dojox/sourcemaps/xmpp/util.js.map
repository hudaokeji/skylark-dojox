{"version":3,"sources":["xmpp/util.js"],"names":["dojo","provide","require","dojox","xmpp","util","xmlEncode","str","replace","encodeJid","jid","buffer","string","Builder","i","length","ch","charAt","rep","append","toString","decodeJid","match","createElement","tag","attributes","terminal","elem","attr","stripHtml","arguments","decodeHtmlEntities","ta","doc","innerHTML","value","htmlToPlain","Base64","encode","input","encoding","base64","s","b","push","charCodeAt","s2b","decode","forEach","c","String","fromCharCode","join"],"mappings":"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","file":"../../xmpp/util.js","sourcesContent":["dojo.provide(\"dojox.xmpp.util\");\r\ndojo.require(\"dojox.string.Builder\");\r\ndojo.require(\"dojox.encoding.base64\");\r\n\r\ndojox.xmpp.util.xmlEncode = function(str) {\r\n\tif(str) {\r\n\t\tstr = str.replace(\"&\", \"&amp;\").replace(\">\", \"&gt;\").replace(\"<\", \"&lt;\").replace(\"'\", \"&apos;\").replace('\"', \"&quot;\");\r\n\t}\r\n\treturn str;\r\n};\r\n\r\ndojox.xmpp.util.encodeJid = function(jid) {\r\n\tvar buffer = new dojox.string.Builder();\r\n\tfor(var i =0; i < jid.length; i++) {\r\n\t\tvar ch = jid.charAt(i);\r\n\t\tvar rep = ch;\r\n\t\tswitch(ch){\r\n\t\t\tcase ' ' :\r\n\t\t\t\trep = \"\\\\20\";\r\n\t\t\tbreak;\r\n\t\t\tcase '\"' :\r\n\t\t\t\trep = \"\\\\22\";\r\n\t\t\tbreak;\r\n\t\t\tcase '#' :\r\n\t\t\t\trep = \"\\\\23\";\r\n\t\t\tbreak;\r\n\t\t\tcase '&' :\r\n\t\t\t\trep = \"\\\\26\";\r\n\t\t\tbreak;\r\n\t\t\tcase \"'\" :\r\n\t\t\t\trep = \"\\\\27\";\r\n\t\t\tbreak;\r\n\t\t\tcase '/' :\r\n\t\t\t\trep = \"\\\\2f\";\r\n\t\t\tbreak;\r\n\t\t\tcase ':' :\r\n\t\t\t\trep = \"\\\\3a\";\r\n\t\t\tbreak;\r\n\t\t\tcase '<' :\r\n\t\t\t\trep = \"\\\\3c\";\r\n\t\t\tbreak;\r\n\t\t\tcase '>' :\r\n\t\t\t\trep = \"\\\\3e\";\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tbuffer.append(rep);\r\n\t}\r\n\treturn buffer.toString();\r\n};\r\n\r\ndojox.xmpp.util.decodeJid = function(jid) {\r\n\t\r\n\tjid = jid.replace(/\\\\([23][02367acef])/g, function(match) {\r\n\t\t\tswitch(match){\r\n\t\t\t\tcase \"\\\\20\" :\r\n\t\t\t\t\treturn  ' ';\r\n\t\t\t\tcase \"\\\\22\"  :\r\n\t\t\t\t\treturn '\"';\r\n\t\t\t\tcase \"\\\\23\" :\r\n\t\t\t\t\treturn '#' ;\r\n\t\t\t\tcase \"\\\\26\" :\r\n\t\t\t\t\treturn  '&';\r\n\t\t\t\tcase \"\\\\27\" :\r\n\t\t\t\t\treturn   \"'\";\r\n\t\t\t\tcase \"\\\\2f\" :\r\n\t\t\t\t\treturn  '/';\r\n\t\t\t\tcase \"\\\\3a\" :\r\n\t\t\t\t\treturn ':' ;\r\n\t\t\t\tcase \"\\\\3c\" :\r\n\t\t\t\t\treturn  '<';\r\n\t\t\t\tcase \"\\\\3e\" :\r\n\t\t\t\t\treturn  '>';\r\n\t\t\t}\r\n\t\t\treturn \"ARG\";\r\n\t});\r\n\t\r\n\treturn jid;\r\n};\r\n\r\n\r\ndojox.xmpp.util.createElement = function(tag, attributes, terminal){\r\n\tvar elem = new dojox.string.Builder(\"<\");\r\n\telem.append(tag + \" \");\r\n\r\n\tfor (var attr in attributes){\r\n\t\telem.append(attr + '=\"');\r\n\t\telem.append(attributes[attr]);\r\n\t\telem.append('\" ');\r\n\t}\r\n\t\r\n\tif (terminal){\r\n\t\telem.append(\"/>\");\r\n\t}else{\r\n\t\telem.append(\">\");\r\n\t}\r\n\r\n\treturn elem.toString();\r\n};\r\n\r\ndojox.xmpp.util.stripHtml = function(str){\r\n\t// summary:\r\n\t//\t\tStrips all HTML, including attributes and brackets\r\n\t//\t\t| <div onmouse=\"doBadThing()\">Click <b>Me</b></div>\r\n\t//\t\t| becomes: Click Me\r\n\tvar re=/<[^>]*?>/gi;\r\n\tfor (var i=0; i<arguments.length; i++) {}\r\n\treturn str.replace(re, \"\");\r\n};\r\n\r\ndojox.xmpp.util.decodeHtmlEntities = function(str){\r\n\t// summary:\r\n\t//\t\tdecodes HTML entities to js characters so the string can be\r\n\t//\t\tfed to a textarea.value\r\n\tvar ta = dojo.doc.createElement(\"textarea\");\r\n\tta.innerHTML = str.replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\");\r\n\treturn ta.value;\r\n};\r\n\r\ndojox.xmpp.util.htmlToPlain = function(str){\r\n\tstr = dojox.xmpp.util.decodeHtmlEntities(str);\r\n\tstr = str.replace(/<br\\s*[i\\/]{0,1}>/gi,\"\\n\");\r\n\tstr = dojox.xmpp.util.stripHtml(str);\r\n\treturn str;\r\n};\r\n\r\ndojox.xmpp.util.Base64 = {};\r\n\r\ndojox.xmpp.util.Base64.encode = function(input){\r\n\tvar s2b = function(s){\r\n\t\tvar b = [];\r\n\t\tfor(var i = 0; i < s.length; ++i){\r\n\t\t\tb.push(s.charCodeAt(i));\r\n\t\t}\r\n\t\treturn b;\r\n\t};\r\n\treturn dojox.encoding.base64.encode(s2b(input));\r\n};\r\n\r\n\r\ndojox.xmpp.util.Base64.decode = function(input){\r\n\tvar b2s = function(b){\r\n\t\tvar s = [];\r\n\t\tdojo.forEach(b, function(c){ s.push(String.fromCharCode(c)); });\r\n\t\treturn s.join(\"\");\r\n\t};\r\n\treturn b2s(dojox.encoding.base64.decode(input));\r\n};\r\n"]}