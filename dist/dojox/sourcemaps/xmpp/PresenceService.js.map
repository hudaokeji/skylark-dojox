{"version":3,"sources":["xmpp/PresenceService.js"],"names":["dojo","provide","dojox","xmpp","presence","UPDATE","SUBSCRIPTION_REQUEST","SUBSCRIPTION_SUBSTATUS_NONE","SUBSCRIPTION_NONE","SUBSCRIPTION_FROM","SUBSCRIPTION_TO","SUBSCRIPTION_BOTH","SUBSCRIPTION_REQUEST_PENDING","STATUS_ONLINE","STATUS_AWAY","STATUS_CHAT","STATUS_DND","STATUS_EXTENDED_AWAY","STATUS_OFFLINE","STATUS_INVISIBLE","declare","constructor","xmppService","this","session","isInvisible","avatarHash","restrictedContactjids","publish","_setPresence","sendAvatarHash","p","xmlns","to","show","type","_setInvisible","_setVisible","req","string","Builder","util","createElement","append","status","priority","dispatchPacket","toString","toggleBlockContact","jid","_createRestrictedJid","blocked","_updateRestricted","toggleContactInvisiblity","invisible","props","id","getNextIqId","from","resource","name","count","item","value","encodeJid","action","order","req2","_manageSubscriptions","contact","indexOf","domain","subscribe","approveSubscription","unsubscribe","declineSubscription","cancelSubscription"],"mappings":"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","file":"../../xmpp/PresenceService.js","sourcesContent":["dojo.provide(\"dojox.xmpp.PresenceService\");\r\n\r\ndojox.xmpp.presence = {\r\n\tUPDATE: 201,\r\n\tSUBSCRIPTION_REQUEST: 202,\r\n//\tSUBSCRIPTION_REQUEST_PENDING: 203,\r\n\t/* used when 'ask' attribute is absent on a roster item */\r\n\tSUBSCRIPTION_SUBSTATUS_NONE: 204,\r\n\r\n\tSUBSCRIPTION_NONE: 'none',\r\n\tSUBSCRIPTION_FROM: 'from',\r\n\tSUBSCRIPTION_TO: 'to',\r\n\tSUBSCRIPTION_BOTH: 'both',\r\n\tSUBSCRIPTION_REQUEST_PENDING: 'pending',\r\n\r\n\tSTATUS_ONLINE: 'online',\r\n\tSTATUS_AWAY: 'away',\r\n\tSTATUS_CHAT: 'chat',\r\n\tSTATUS_DND: 'dnd',\r\n\tSTATUS_EXTENDED_AWAY: 'xa',\r\n\tSTATUS_OFFLINE: 'offline',\r\n\t\r\n\tSTATUS_INVISIBLE: 'invisible'\r\n};\r\n\r\ndojo.declare(\"dojox.xmpp.PresenceService\", null, {\r\n\tconstructor: function(xmppService){\r\n\t\tthis.session= xmppService;\r\n\t\tthis.isInvisible = false;\r\n\t\tthis.avatarHash = null;\r\n\t\tthis.presence = null;\r\n\t\tthis.restrictedContactjids = {};\r\n\t},\r\n\r\n\tpublish: function(presence){\r\n\t\t////console.log(\"Presence::publish() \", presence);\r\n\t\tthis.presence  = presence;\r\n\t\tthis._setPresence();\r\n\t},\r\n\t\r\n\t/**\r\n\t<presence from='juliet@capulet.com/balcony'>\r\n\t  <x xmlns='vcard-temp:x:update'>\r\n\t    <photo>sha1-hash-of-image</photo>\r\n\t  </x>\r\n\t</presence>\r\n\t\r\n\t\r\n\t<presence>\r\n\t  <x xmlns='vcard-temp:x:update'>\r\n\t    <photo/>\r\n\t  </x>\r\n\t</presence>\r\n\t\r\n\t*/\r\n\t\r\n\tsendAvatarHash: function(avatarHash) {\r\n\t\t\tthis.avatarHash = avatarHash;\r\n\t\t\tthis._setPresence();\r\n\t},\r\n\t\r\n\t\r\n\t_setPresence: function() {\r\n\t\t\tvar presence = \tthis.presence;\r\n\t\t\tvar p = {xmlns: 'jabber:client'};\r\n\r\n\t\t\tif (presence && presence.to){\r\n\t\t\t\tp.to = presence.to;\r\n\t\t\t}\r\n\r\n\t\t\tif (presence.show && presence.show==dojox.xmpp.presence.STATUS_OFFLINE){\r\n\t\t\t\tp.type = 'unavailable';\r\n\t\t\t}\r\n\r\n\t\t\tif (presence.show && presence.show==dojox.xmpp.presence.STATUS_INVISIBLE) {\r\n\t\t\t\tthis._setInvisible();\r\n\t\t\t\tthis.isInvisible = true;\r\n\t\t\t\treturn;\r\n\t\t\t};\r\n\r\n\t\t\tif(this.isInvisible) {\r\n\t\t\t\t//console.log(\"was invisible, making visible\");\r\n\t\t\t\tthis._setVisible();\r\n\t\t\t}\r\n\r\n\t\t\tvar req = new dojox.string.Builder(dojox.xmpp.util.createElement(\"presence\",p, false));\r\n\r\n\t\t\tif (presence.show && presence.show!=dojox.xmpp.presence.STATUS_OFFLINE  ) {\r\n\t\t\t\treq.append(dojox.xmpp.util.createElement(\"show\",{},false));\r\n\t\t\t\treq.append(presence.show);\r\n\t\t\t\treq.append(\"</show>\");\r\n\t\t\t}\r\n\r\n\t\t\tif(presence.status) {\r\n\t\t\t\treq.append(dojox.xmpp.util.createElement(\"status\",{},false));\r\n\t\t\t\treq.append(presence.status);\r\n\t\t\t\treq.append(\"</status>\");\r\n\t\t\t}\r\n\r\n\t\t\tif(this.avatarHash) {\r\n\t\t\t\treq.append(dojox.xmpp.util.createElement(\"x\",{xmlns: 'vcard-temp:x:update'},false));\r\n\t\t\t\t\treq.append(dojox.xmpp.util.createElement(\"photo\",{},false));\r\n\t\t\t\t\treq.append(this.avatarHash);\r\n\t\t\t\t\treq.append(\"</photo>\");\r\n\t\t\t\treq.append(\"</x>\");\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (presence.priority && presence.show!=dojox.xmpp.presence.STATUS_OFFLINE){\r\n\t\t\t\tif(presence.priority > 127 || presence.priority < -128){\r\n\t\t\t\t\tpresence.priority = 5;\r\n\t\t\t\t}\r\n\t\t\t\treq.append(dojox.xmpp.util.createElement(\"priority\",{},false));\r\n\t\t\t\treq.append(presence.priority);\r\n\t\t\t\treq.append(\"</priority>\");\r\n\t\t\t}\r\n\r\n\t\t\treq.append(\"</presence>\");\r\n\t\t\tthis.session.dispatchPacket(req.toString());\r\n\t},\r\n\t\r\n\t/*\r\n\t\r\n\t<iq from='bilbo@tolkien.lit/shire' type='set' id='inv1'>\r\n\t  <query xmlns='jabber:iq:privacy'>\r\n\t    <list name='invisible'>\r\n\t      <item action='deny' order='1'>\r\n\t        <presence-out/>\r\n\t      </item>\r\n\t    </list>\r\n\t  </query>\r\n\t</iq>\r\n\t\r\n\t<iq from='bilbo@tolkien.lit/shire' type='set' id='active1'>\r\n\t  <query xmlns='jabber:iq:privacy'>\r\n\t    <active name='invisible'/>\r\n\t  </query>\r\n\t</iq>\r\n\t\r\n\tMake visible:\r\n\t<iq from='bilbo@tolkien.lit/shire' type='set' id='active6'>\r\n\t  <query xmlns='jabber:iq:privacy'>\r\n\t    <active/>\r\n\t  </query>\r\n\t</iq>\r\n\t\r\n\t*/\r\n\t\r\n\ttoggleBlockContact: function(jid) {\r\n\t\tif(!this.restrictedContactjids[jid]) {\r\n\t\t\tthis.restrictedContactjids[jid] = this._createRestrictedJid();\r\n\t\t}\r\n\t\t\r\n\t\tthis.restrictedContactjids[jid].blocked = !this.restrictedContactjids[jid].blocked;\r\n\t\t//console.log(\"setting outbound block for \", jid, this.restrictedContactjids[jid]);\r\n\t\tthis._updateRestricted();\r\n\t\treturn this.restrictedContactjids;\r\n\t},\r\n\t\r\n\t\r\n\ttoggleContactInvisiblity: function(jid) {\r\n\t\tif(!this.restrictedContactjids[jid]) {\r\n\t\t\tthis.restrictedContactjids[jid] = this._createRestrictedJid();\r\n\t\t}\r\n\t\t\r\n\t\tthis.restrictedContactjids[jid].invisible = !this.restrictedContactjids[jid].invisible;\r\n\t\t//console.log(\"setting outbound presence for \", jid, this.restrictedContactjids[jid]);\r\n\t\tthis._updateRestricted();\r\n\t\treturn this.restrictedContactjids;\r\n\t},\r\n\t\r\n\t_createRestrictedJid: function() {\r\n\t\treturn {invisible: false, blocked:false};\r\n\t},\r\n\t\r\n\t_updateRestricted: function() {\r\n\t\t\r\n\t\tvar props={\r\n\t\t\tid: this.session.getNextIqId(),\r\n\t\t\tfrom: this.session.jid + \"/\" + this.session.resource,\r\n\t\t\ttype: \"set\"\r\n\t\t};\r\n\t\t\r\n\t\tvar req = new dojox.string.Builder(dojox.xmpp.util.createElement(\"iq\",props,false));\r\n\t\treq.append(dojox.xmpp.util.createElement(\"query\",{xmlns: \"jabber:iq:privacy\"},false));\r\n\t\treq.append(dojox.xmpp.util.createElement(\"list\",{name: \"iwcRestrictedContacts\"},false))\r\n\t\tvar count = 1;\r\n\t\tfor(var jid in this.restrictedContactjids) {\r\n\t\t\tvar item = this.restrictedContactjids[jid];\r\n\t\t\t//console.log(\"restricted \", jid, item);\r\n\t\t\tif(item.blocked || item.invisible) {\r\n\t\t\t\treq.append(dojox.xmpp.util.createElement(\"item\",{value:  dojox.xmpp.util.encodeJid(jid), action: \"deny\", order: count++},false));\r\n\t\t\t\tif(item.blocked) {\r\n\t\t\t\t\treq.append(dojox.xmpp.util.createElement(\"message\",{},true));\r\n\t\t\t\t}\r\n\t\t\t\tif(item.invisible) {\r\n\t\t\t\t\treq.append(dojox.xmpp.util.createElement(\"presence-out\",{},true));\r\n\t\t\t\t}\r\n\t\t\t\treq.append(\"</item>\");\r\n\t\t\t} else {\r\n\t\t\t\tdelete this.restrictedContactjids[jid];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t}\r\n\t\t\t\treq.append(\"</list>\");\r\n\t\t\treq.append(\"</query>\");\r\n\t\treq.append(\"</iq>\");\r\n\t\t//console.log(\"Restricted list: \", req.toString());\r\n\t\t\r\n\t\t\tvar req2 = new dojox.string.Builder(dojox.xmpp.util.createElement(\"iq\",props,false));\r\n\t\t\t\treq2.append(dojox.xmpp.util.createElement(\"query\",{xmlns: \"jabber:iq:privacy\"},false));\r\n\t\t\t\t\treq2.append(dojox.xmpp.util.createElement(\"active\",{name:\"iwcRestrictedContacts\"},true));\r\n\t\t\t\treq2.append(\"</query>\");\r\n\t\t\treq2.append(\"</iq>\");\r\n\t\t\r\n\t\t\t\t//console.log(\"Activate list: \", req2.toString());\r\n\t\t\r\n\t\t\r\n\t\tthis.session.dispatchPacket(req.toString());\r\n\t\tthis.session.dispatchPacket(req2.toString());\r\n\t},\r\n\t\r\n\t_setVisible: function() {\r\n\t\t\tvar props={\r\n\t\t\t\tid: this.session.getNextIqId(),\r\n\t\t\t\tfrom: this.session.jid + \"/\" + this.session.resource,\r\n\t\t\t\ttype: \"set\"\r\n\t\t\t};\r\n\t\t\tvar req = new dojox.string.Builder(dojox.xmpp.util.createElement(\"iq\",props,false));\r\n\t\t\t\treq.append(dojox.xmpp.util.createElement(\"query\",{xmlns: \"jabber:iq:privacy\"},false));\r\n\t\t\t\t\treq.append(dojox.xmpp.util.createElement(\"active\",{},true));\r\n\t\t\t\treq.append(\"</query>\");\r\n\t\t\treq.append(\"</iq>\");\r\n\t\t\t//console.log(req.toString());\r\n\t\t\tthis.session.dispatchPacket(req.toString());\r\n\t},\r\n\t\r\n\t_setInvisible: function() {\r\n\t\t//console.log(\"Setting user as invisible\");\r\n\t\tvar props={\r\n\t\t\tid: this.session.getNextIqId(),\r\n\t\t\tfrom: this.session.jid + \"/\" + this.session.resource,\r\n\t\t\ttype: \"set\"\r\n\t\t};\r\n\t\tvar req = new dojox.string.Builder(dojox.xmpp.util.createElement(\"iq\",props,false));\r\n\t\t\treq.append(dojox.xmpp.util.createElement(\"query\",{xmlns: \"jabber:iq:privacy\"},false));\r\n\t\t\t\treq.append(dojox.xmpp.util.createElement(\"list\",{name: \"invisible\"},false))\r\n\t\t\t\t\treq.append(dojox.xmpp.util.createElement(\"item\",{action: \"deny\", order: \"1\"},false))\r\n\t\t\t\t\t\treq.append(dojox.xmpp.util.createElement(\"presence-out\",{},true));\r\n\t\t\t\t\treq.append(\"</item>\");\r\n\t\t\t\treq.append(\"</list>\");\r\n\t\t\treq.append(\"</query>\");\r\n\t\treq.append(\"</iq>\");\r\n\t\t\r\n\t\t\r\n\t\tprops={\r\n\t\t\tid: this.session.getNextIqId(),\r\n\t\t\tfrom: this.session.jid + \"/\" + this.session.resource,\r\n\t\t\ttype: \"set\"\r\n\t\t};\r\n\r\n\t\tvar req2 = new dojox.string.Builder(dojox.xmpp.util.createElement(\"iq\",props,false));\r\n\t\t\treq2.append(dojox.xmpp.util.createElement(\"query\",{xmlns: \"jabber:iq:privacy\"},false));\r\n\t\t\t\treq2.append(dojox.xmpp.util.createElement(\"active\",{name:\"invisible\"},true));\r\n\t\t\treq2.append(\"</query>\");\r\n\t\treq2.append(\"</iq>\");\r\n\t\t//console.log(req.toString());\r\n\t\t//console.log(req2.toString());\r\n\t\tthis.session.dispatchPacket(req.toString());\r\n\t\tthis.session.dispatchPacket(req2.toString());\r\n\t},\r\n\r\n\t_manageSubscriptions: function(contact, type){\r\n\t\tif (!contact){return;}\r\n\t\t\r\n\t\tif (contact.indexOf('@')==-1){\r\n\t\t\tcontact += '@' + this.session.domain;\r\n\t\t}\r\n\r\n\t\tvar req = dojox.xmpp.util.createElement(\"presence\",{to:contact,type:type},true);\r\n\t\tthis.session.dispatchPacket(req);\r\n\r\n\t},\r\n\r\n\tsubscribe: function(contact){\r\n\t\tthis._manageSubscriptions(contact, \"subscribe\");\r\n\t},\r\n\r\n\tapproveSubscription: function(contact){\r\n\t\tthis._manageSubscriptions(contact, \"subscribed\");\r\n\t},\r\n\r\n\tunsubscribe: function(contact){\r\n\t\tthis._manageSubscriptions(contact, \"unsubscribe\");\r\n\t},\r\n\r\n\tdeclineSubscription: function(contact){\r\n\t\tthis._manageSubscriptions(contact, \"unsubscribed\");\r\n\t},\r\n\t\r\n\tcancelSubscription: function(contact){\r\n\t\tthis._manageSubscriptions(contact, \"unsubscribed\");\r\n\t}\r\n\r\n});\r\n"]}