{"version":3,"sources":["xmpp/ChatService.js"],"names":["dojo","provide","dojox","xmpp","chat","CHAT_STATE_NS","ACTIVE_STATE","COMPOSING_STATE","INACTIVE_STATE","PAUSED_STATE","GONE_STATE","declare","state","constructor","this","chatid","Math","round","random","receiveMessage","msg","initial","onNewMessage","setSession","session","setState","invite","contact","uid","Error","req","xmlns","to","from","jid","resource","type","request","string","Builder","util","createElement","append","dispatchPacket","toString","onInvite","sendMessage","body","xhtml","message","html","XHTML_IM_NS","bodyTag","xml:lang","lang","XHTML_BODY_NS","bodyPlainTag","stripHtml","subject","useChatStates","sendChatState","useChatState","firstMessage","_currentState"],"mappings":"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","file":"../../xmpp/ChatService.js","sourcesContent":["dojo.provide(\"dojox.xmpp.ChatService\");\r\n\r\ndojox.xmpp.chat = {\r\n\tCHAT_STATE_NS: 'http://jabber.org/protocol/chatstates',\r\n\r\n\tACTIVE_STATE: 'active',\r\n\tCOMPOSING_STATE: 'composing',\r\n\tINACTIVE_STATE: 'inactive',\r\n\tPAUSED_STATE: 'paused',\r\n\tGONE_STATE: 'gone'\r\n};\r\n\r\ndojo.declare(\"dojox.xmpp.ChatService\", null, {\r\n\tstate: \"\",\r\n\r\n\tconstructor: function(){\r\n\t\tthis.state=\"\";\r\n\t\tthis.chatid = Math.round(Math.random() * 1000000000000000);\r\n\t},\r\n\t\r\n\treceiveMessage: function(msg,initial){\r\n\t\tif (msg&&!initial){\r\n\t\t\tthis.onNewMessage(msg);\r\n\t\t}\r\n\t},\r\n\r\n\tsetSession: function(session){\r\n\t\tthis.session = session;\r\n\t},\r\n\r\n\tsetState: function(state){\r\n\t\tif (this.state != state){\r\n\t\t\tthis.state = state;\r\n\t\t}\r\n\t},\r\n\t\r\n\tinvite: function(contact){\r\n\t\tif (this.uid){return;}\r\n\r\n\r\n\t\tif(!contact || contact==''){\r\n\t\t\tthrow new Error(\"ChatService::invite() contact is NULL\");\r\n\t\t}\r\n\r\n\t\tthis.uid = contact;\r\n\r\n\t\tvar req = {\r\n\t\t\txmlns: \"jabber:client\",\r\n\t\t\tto: this.uid,\r\n\t\t\tfrom: this.session.jid + \"/\" + this.session.resource,\r\n\t\t\ttype: \"chat\"\r\n\t\t}\r\n\t\tvar request = new dojox.string.Builder(dojox.xmpp.util.createElement(\"message\", req, false));\r\n\t\trequest.append(dojox.xmpp.util.createElement(\"thread\",{},false));\r\n\t\trequest.append(this.chatid);\r\n\t\trequest.append(\"</thread>\");\r\n\t\trequest.append(dojox.xmpp.util.createElement(\"active\",{xmlns: dojox.xmpp.chat.CHAT_STATE_NS},true));\r\n\t\trequest.append(\"</message>\");\r\n\t\tthis.session.dispatchPacket(request.toString());\r\n\r\n\t\tthis.onInvite(contact);\r\n\t\tthis.setState(dojox.xmpp.chat.CHAT_STATE_NS);\r\n\t},\r\n\r\n\r\n\tsendMessage: function(msg){\r\n\t\tif (!this.uid){\r\n\t\t\t//console.log(\"ChatService::sendMessage() -  Contact Id is null, need to invite to chat\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ((!msg.body || msg.body==\"\") && !msg.xhtml){return;}\r\n\r\n\t\tvar req = {\r\n\t\t\txmlns: \"jabber:client\",\r\n\t\t\tto: this.uid,\r\n\t\t\tfrom: this.session.jid + \"/\" + this.session.resource,\r\n\t\t\ttype: \"chat\"\r\n\t\t}\r\n\r\n\t\tvar message = new dojox.string.Builder(dojox.xmpp.util.createElement(\"message\",req,false));\r\n\t\tvar html = dojox.xmpp.util.createElement(\"html\", { \"xmlns\":dojox.xmpp.xmpp.XHTML_IM_NS},false)\r\n\r\n\t\tvar bodyTag = dojox.xmpp.util.createElement(\"body\", {\"xml:lang\":this.session.lang, \"xmlns\":dojox.xmpp.xmpp.XHTML_BODY_NS}, false) + msg.body + \"</body>\";\r\n\t\tvar bodyPlainTag = dojox.xmpp.util.createElement(\"body\", {}, false) + dojox.xmpp.util.stripHtml(msg.body) + \"</body>\";\r\n/*\r\n\t\tif (msg.xhtml){\r\n\t\t\tif (msg.xhtml.getAttribute('xmlns') != dojox.xmpp.xmpp.XHTML_IM_NS){\r\n\t\t\t\t//console.log(\"ChatService::sendMessage() - Cannot use this xhtml without the propper xmlns\");\r\n\t\t\t}else{\r\n\t\t\t\t//FIXME do this in some portable way\r\n\t\t\t\t//console.log(\"ChatService::sendMessage() - FIXME Serialize XHTML to string: \", msg.xhtml.toString());\r\n\t\t\t}\r\n\t\t}\r\n*/\r\n\t\tif (message.subject && message.subject != \"\"){\r\n\t\t\tmessage.append(dojox.xmpp.util.createElement(\"subject\",{},false));\r\n\t\t\tmessage.append(message.subject);\r\n\t\t\tmessage.append(\"</subject>\");\r\n\t\t}\r\n\t\tmessage.append(bodyPlainTag);\r\n\t\tmessage.append(html);\r\n\t\tmessage.append(bodyTag);\r\n\t\tmessage.append(\"</html>\");\r\n\t\tmessage.append(dojox.xmpp.util.createElement(\"thread\", {}, false));\r\n\t\tmessage.append(this.chatid);\r\n\t\tmessage.append(\"</thread>\");\r\n\r\n\t\tif (this.useChatStates){\r\n\t\t\tmessage.append(dojox.xmpp.util.createElement(\"active\",{xmlns: dojox.xmpp.chat.CHAT_STATE_NS},true));\r\n\t\t}\r\n\t\tmessage.append(\"</message>\");\r\n\t\r\n\t\tthis.session.dispatchPacket(message.toString());\r\n\t},\r\n\r\n\tsendChatState: function(state){\r\n\t\tif (!this.useChatState || this.firstMessage){return;}\r\n\t\tif (state==this._currentState){return;}\r\n\t\t\r\n\t\tvar req={\r\n\t\t\txmlns: \"jabber:client\",\r\n\t\t\tto: this.uid,\r\n\t\t\tfrom: this.session.jid + \"/\" + this.session.resource,\r\n\t\t\ttype: \"chat\"\r\n\t\t}\r\n\r\n\t\tvar request = new dojox.string.Builder(dojox.xmpp.util.createElement(\"message\",req,false));\r\n\t\trequest.append(dojox.xmpp.util.createElement(state, {xmlns: dojox.xmpp.chat.CHAT_STATE_NS},true));\r\n\t\tthis._currentState = state;\r\n\t\trequest.append(\"<thread>\");\r\n\t\trequest.append(this.chatid);\r\n\t\trequest.append(\"</thread></message>\");\r\n\t\t\r\n\t\tthis.session.dispatchPacket(request.toString());\r\n\t},\r\n\r\n\t//EVENTS\r\n\tonNewMessage: function(msg){},\r\n\tonInvite: function(contact){}\r\n});\r\n"]}