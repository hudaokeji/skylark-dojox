{"version":3,"sources":["xmpp/UserService.js"],"names":["dojo","provide","declare","constructor","xmppService","this","session","getPersonalProfile","req","id","getNextIqId","type","request","dojox","string","Builder","xmpp","util","createElement","append","xmlns","xmlsns","dispatchPacket","toString","addCallback","setPersonalProfile","props","key","name","_onSetPersonalProfile","response","getAttribute","onSetPersonalProfile","err","processXmppError","onSetPersonalProfileFailure","_onGetPersonalProfile","profile","hasChildNodes","queryNode","firstChild","nodeName","sunNode","getAttributes","i","childNodes","length","n","val","onGetPersonalProfile","onGetPersonalProfileFailure"],"mappings":";;;;;;;AAAAA,KAAKC,QAAQ,0BAEbD,KAAKE,QAAQ,yBAA0B,MACtCC,YAAa,SAASC,GACrBC,KAAKC,QAASF,GAGfG,mBAAoB,WACnB,IAAIC,GACHC,GAAIJ,KAAKC,QAAQI,cACjBC,KAAM,OAEHC,EAAU,IAAIC,MAAMC,OAAOC,QAAQF,MAAMG,KAAKC,KAAKC,cAAc,KAAKV,GAAI,IAC9EI,EAAQO,OAAON,MAAMG,KAAKC,KAAKC,cAAc,SAASE,MAAM,sBAAqB,IACjFR,EAAQO,OAAON,MAAMG,KAAKC,KAAKC,cAAc,WAAWG,OAAO,wBAAuB,IACtFT,EAAQO,OAAO,iBAELd,KAAKC,QAAQgB,eAAeV,EAAQW,WAAW,KAAKf,EAAIC,IAC9De,YAAYnB,KAAM,0BAGvBoB,mBAAoB,SAASC,GAC5B,IAAIlB,GACHC,GAAIJ,KAAKC,QAAQI,cACjBC,KAAM,OAGHC,EAAU,IAAIC,MAAMC,OAAOC,QAAQF,MAAMG,KAAKC,KAAKC,cAAc,KAAKV,GAAI,IAI9E,IAAK,IAAImB,KAHTf,EAAQO,OAAON,MAAMG,KAAKC,KAAKC,cAAc,SAASE,MAAM,sBAAqB,IACjFR,EAAQO,OAAON,MAAMG,KAAKC,KAAKC,cAAc,WAAWG,OAAO,wBAAuB,IAEtEK,EACfd,EAAQO,OAAON,MAAMG,KAAKC,KAAKC,cAAc,YAAYU,KAAMD,IAAK,IACpEf,EAAQO,OAAON,MAAMG,KAAKC,KAAKC,cAAc,YAAW,IACxDN,EAAQO,OAAOO,EAAMC,IACrBf,EAAQO,OAAO,oBAGhBP,EAAQO,OAAO,2BAELd,KAAKC,QAAQgB,eAAeV,EAAQW,WAAY,KAAMf,EAAIC,IAChEe,YAAYnB,KAAM,0BAGvBwB,sBAAuB,SAASC,GAC/B,GAAkC,UAA/BA,EAASC,aAAa,QACxB1B,KAAK2B,qBAAqBF,EAASC,aAAa,YAC3C,GAAkC,SAA/BD,EAASC,aAAa,QAAiB,CAC/C,IAAIE,EAAM5B,KAAKC,QAAQ4B,iBAAiBJ,GACxCzB,KAAK8B,4BAA4BF,KAInCD,qBAAsB,SAASvB,KAC/B0B,4BAA6B,SAASF,KAEtCG,sBAAuB,SAASC,GAC/B,GAAkC,UAA9BA,EAAQN,aAAa,QAAkB,CAC1C,IAAIL,KAEJ,GAAIW,EAAQC,gBAAgB,CAC3B,IAAIC,EAAYF,EAAQG,WACxB,GAAyB,SAApBD,EAAUE,UAAsD,qBAAjCF,EAAUR,aAAa,SAA+B,CACzF,IAAIW,EAAUH,EAAUC,WACxB,GAAuB,SAAlBE,EAAQD,UAAqD,uBAAhCC,EAAQC,cAAc,SACvD,IAAK,IAAIC,EAAE,EAAGA,EAAEF,EAAQG,WAAWC,OAAOF,IAAI,CAC7C,IAAIG,EAAIL,EAAQG,WAAWD,GAC3B,GAAiB,YAAdG,EAAEN,SAAuB,CAC3B,IAAIb,EAAOmB,EAAEhB,aAAa,QACtBiB,EAAMD,EAAEP,YAAc,GAC1Bd,EAAME,GAAMoB,IAKhB3C,KAAK4C,qBAAqBvB,SAEtB,GAAkC,SAA9BW,EAAQN,aAAa,QAAiB,CAC/C,IAAIE,EAAM5B,KAAKC,QAAQ4B,iBAAiBG,GACxChC,KAAK6C,4BAA4BjB,GAGlC,OAAOI,GAGRY,qBAAsB,SAASZ,KAI/Ba,4BAA6B,SAASjB","file":"../../xmpp/UserService.js","sourcesContent":["dojo.provide(\"dojox.xmpp.UserService\");\r\n\r\ndojo.declare(\"dojox.xmpp.UserService\", null, {\r\n\tconstructor: function(xmppService){\r\n\t\tthis.session= xmppService;\r\n\t},\r\n\r\n\tgetPersonalProfile: function(){\r\n\t\tvar req={\r\n\t\t\tid: this.session.getNextIqId(),\r\n\t\t\ttype: 'get'\r\n\t\t}\r\n\t\tvar request = new dojox.string.Builder(dojox.xmpp.util.createElement(\"iq\",req,false));\r\n\t\trequest.append(dojox.xmpp.util.createElement(\"query\",{xmlns:\"jabber:iq:private\"},false));\r\n\t\trequest.append(dojox.xmpp.util.createElement(\"sunmsgr\",{xmlsns:'sun:xmpp:properties'},true));\r\n\t\trequest.append(\"</query></iq>\");\r\n\r\n\t\tvar def = this.session.dispatchPacket(request.toString(),\"iq\",req.id);\r\n\t\tdef.addCallback(this, \"_onGetPersonalProfile\");\r\n\t},\r\n\r\n\tsetPersonalProfile: function(props){\r\n\t\tvar req={\r\n\t\t\tid: this.session.getNextIqId(),\r\n\t\t\ttype: 'set'\r\n\t\t}\r\n\t\t\r\n\t\tvar request = new dojox.string.Builder(dojox.xmpp.util.createElement(\"iq\",req,false));\r\n\t\trequest.append(dojox.xmpp.util.createElement(\"query\",{xmlns:\"jabber:iq:private\"},false));\r\n\t\trequest.append(dojox.xmpp.util.createElement(\"sunmsgr\",{xmlsns:'sun:xmpp:properties'},false));\r\n\r\n\t\tfor (var key in props){\r\n\t\t\trequest.append(dojox.xmpp.util.createElement(\"property\",{name: key},false));\r\n\t\t\trequest.append(dojox.xmpp.util.createElement(\"value\",{},false));\r\n\t\t\trequest.append(props[key]);\r\n\t\t\trequest.append(\"</value></props>\");\r\n\t\t}\r\n\t\t\r\n\t\trequest.append(\"</sunmsgr></query></iq>\");\r\n\r\n\t\tvar def = this.session.dispatchPacket(request.toString(), \"iq\", req.id);\r\n\t\tdef.addCallback(this, \"_onSetPersonalProfile\");\r\n\t},\r\n\r\n\t_onSetPersonalProfile: function(response){\r\n\t\tif(response.getAttribute('type')=='result'){\r\n\t\t\tthis.onSetPersonalProfile(response.getAttribute('id'));\r\n\t\t}else if(response.getAttribute('type')=='error'){\r\n\t\t\tvar err = this.session.processXmppError(response);\r\n\t\t\tthis.onSetPersonalProfileFailure(err);\r\n\t\t}\r\n\t},\r\n\r\n\tonSetPersonalProfile: function(id){},\r\n\tonSetPersonalProfileFailure: function(err){},\r\n\r\n\t_onGetPersonalProfile: function(profile){\r\n\t\tif (profile.getAttribute('type')=='result'){\r\n\t\t\tvar props = {};\r\n\r\n\t\t\tif (profile.hasChildNodes()){\r\n\t\t\t\tvar queryNode = profile.firstChild;\r\n\t\t\t\tif ((queryNode.nodeName==\"query\")&&(queryNode.getAttribute('xmlns')=='jabber:iq:private')){\r\n\t\t\t\t\tvar sunNode = queryNode.firstChild;\r\n\t\t\t\t\tif ((sunNode.nodeName=='query')&&(sunNode.getAttributes('xmlns')=='sun:xmpp:properties')){\r\n\t\t\t\t\t\tfor (var i=0; i<sunNode.childNodes.length;i++){\r\n\t\t\t\t\t\t\tvar n = sunNode.childNodes[i];\r\n\t\t\t\t\t\t\tif(n.nodeName == 'property'){\r\n\t\t\t\t\t\t\t\tvar name = n.getAttribute('name');\r\n\t\t\t\t\t\t\t\tvar val = n.firstChild || \"\";\r\n\t\t\t\t\t\t\t\tprops[name]=val;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.onGetPersonalProfile(props);\r\n\t\t\t}\r\n\t\t}else if (profile.getAttribute('type')=='error'){\r\n\t\t\tvar err = this.session.processXmppError(profile);\r\n\t\t\tthis.onGetPersonalProfileFailure(err);\r\n\t\t}\r\n\r\n\t\treturn profile;\r\n\t},\r\n\r\n\tonGetPersonalProfile: function(profile){\r\n\t\t//console.log(\"UserService::onGetPersonalProfile() \", profile);\r\n\t},\r\n\r\n\tonGetPersonalProfileFailure: function(err){\r\n\t\t//console.log(\"UserService::onGetPersonalProfileFailure() \", err);\r\n\t}\r\n});\r\n"]}