{"version":3,"sources":["xmpp/sasl.js"],"names":["dojo","provide","require","dojox","xmpp","sasl","saslNS","declare","mechanism","closeAuthTag","constructor","session","this","startAuth","auth","string","Builder","util","createElement","xmlns","appendToAuth","dispatchPacket","toString","onChallenge","msg","first_challenge","onSecondChallenge","onFirstChallenge","onSuccess","sendRestart","_Base","id","jid","index","indexOf","substring","token","password","Base64","encode","append","dxed","encoding","digests","dxedo","outputTypes","HEX","n","MD5","Hex","ch","realm","nonce","qop","maxbuf","decode","firstChild","nodeValue","replace","t","k","v","A2_append","cnonce","Math","random","digest_uri","domain","username","encodeJid","s","A1","String","A2_rspauth","A2","response_value","ret","response","SASL_NS","rspauth","ch_str","registry","AdapterRegistry","register","SunWebClientAuth","DigestMD5","Plain"],"mappings":"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","file":"../../xmpp/sasl.js","sourcesContent":["dojo.provide(\"dojox.xmpp.sasl\");\r\ndojo.require(\"dojox.xmpp.util\");\r\n\r\ndojo.require(\"dojo.AdapterRegistry\");\r\ndojo.require(\"dojox.encoding.digests.MD5\");\r\n\r\ndojox.xmpp.sasl.saslNS = \"urn:ietf:params:xml:ns:xmpp-sasl\";\r\n\r\ndojo.declare(\"dojox.xmpp.sasl._Base\", null, {\r\n\tmechanism: null,\r\n\tcloseAuthTag: true,\r\n\r\n\tconstructor: function(session){\r\n\t\tthis.session = session;\r\n\r\n\t\tthis.startAuth();\r\n\t},\r\n\tstartAuth: function(){\r\n\t\tvar auth = new dojox.string.Builder(dojox.xmpp.util.createElement(\"auth\", {\r\n\t\t\txmlns: dojox.xmpp.sasl.saslNS,\r\n\t\t\tmechanism: this.mechanism\r\n\t\t}, this.closeAuthTag));\r\n\t\tthis.appendToAuth(auth);\r\n\t\tthis.session.dispatchPacket(auth.toString());\r\n\t},\r\n\tappendToAuth: function(auth){},\r\n\tonChallenge: function(msg){\r\n\t\tif(!this.first_challenge){\r\n\t\t\tthis.first_challenge = true;\r\n\t\t\tthis.onFirstChallenge(msg);\r\n\t\t}else{\r\n\t\t\tthis.onSecondChallenge(msg);\r\n\t\t}\r\n\t},\r\n\tonFirstChallenge: function(){},\r\n\tonSecondChallenge: function(){},\r\n\tonSuccess: function(){\r\n\t\tthis.session.sendRestart();\r\n\t}\r\n});\r\n\r\ndojo.declare(\"dojox.xmpp.sasl.SunWebClientAuth\", dojox.xmpp.sasl._Base, {\r\n\tmechanism: \"SUN-COMMS-CLIENT-PROXY-AUTH\"\r\n});\r\n\r\ndojo.declare(\"dojox.xmpp.sasl.Plain\", dojox.xmpp.sasl._Base, {\r\n\tmechanism: \"PLAIN\",\r\n\tcloseAuthTag: false,\r\n\r\n\tappendToAuth: function(auth){\r\n\t\tvar id = this.session.jid;\r\n\t\tvar index = this.session.jid.indexOf('@');\r\n\t\tif (index != -1){\r\n\t\t\tid = this.session.jid.substring(0, index);\r\n\t\t}\r\n\t\tvar token = this.session.jid + '\\u0000' + id + '\\u0000' + this.session.password;\r\n\t\ttoken = dojox.xmpp.util.Base64.encode(token);\r\n\r\n\t\tauth.append(token);\r\n\t\tauth.append(\"</auth>\");\r\n\r\n\t\tdelete this.session.password;\r\n\t}\r\n});\r\n\r\ndojo.declare(\"dojox.xmpp.sasl.DigestMD5\", dojox.xmpp.sasl._Base, {\r\n\tmechanism: \"DIGEST-MD5\",\r\n\r\n\tonFirstChallenge: function(msg){\r\n\t\tvar dxed = dojox.encoding.digests;\r\n\t\tvar dxedo = dojox.encoding.digests.outputTypes;\r\n\t\tvar HEX = function(n){\r\n\t\t\treturn dxed.MD5(n, dxedo.Hex);\r\n\t\t};\r\n\t\tvar H = function(s){\r\n\t\t\treturn dxed.MD5(s, dxedo.String);\r\n\t\t};\r\n\r\n\t\tvar ch_str = dojox.xmpp.util.Base64.decode(msg.firstChild.nodeValue);\r\n\t\tvar ch = {\r\n\t\t\trealm: \"\",\r\n\t\t\tnonce: \"\",\r\n\t\t\tqop: \"auth\",\r\n\t\t\tmaxbuf: 65536\r\n\t\t};\r\n\t\tch_str.replace(/([a-z]+)=([^,]+)/g, function(t,k,v){\r\n\t\t\tv = v.replace(/^\"(.+)\"$/, \"$1\");\r\n\t\t\tch[k] = v;\r\n\t\t});\r\n\r\n\t\tvar A2_append = '';\r\n\t\tswitch(ch.qop){\r\n\t\t\tcase 'auth-int':\r\n\t\t\tcase 'auth-conf':\r\n\t\t\t\tA2_append = ':00000000000000000000000000000000';\r\n\t\t\tcase 'auth':\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t\tvar cnonce = dxed.MD5(Math.random() * 1234567890, dxedo.Hex);\r\n\t\tvar digest_uri = 'xmpp/' + this.session.domain;\r\n\r\n\t\tvar username = this.session.jid;\r\n\t\tvar index = this.session.jid.indexOf('@');\r\n\t\tif (index != -1){\r\n\t\t\tusername = this.session.jid.substring(0, index);\r\n\t\t}\r\n\t\tusername = dojox.xmpp.util.encodeJid(username);\r\n\r\n\t\tvar A1 = new dojox.string.Builder();\r\n\t\tA1.append(H(username + ':' + ch.realm + ':' + this.session.password),\r\n\t\t\t':', ch.nonce + ':' + cnonce);\r\n\t\tdelete this.session.password;\r\n\t\tvar A2_rspauth = ':' + digest_uri + A2_append;\r\n\t\tvar A2 = 'AUTHENTICATE' + A2_rspauth;\r\n\r\n\t\tvar response_value = new dojox.string.Builder();\r\n\t\tresponse_value.append(HEX(A1.toString()), ':', ch.nonce, ':00000001:', cnonce, ':',\r\n\t\t\tch.qop, ':')\r\n\r\n\t\tvar ret = new dojox.string.Builder();\r\n\t\tret.append('username=\"', username, '\",',\r\n\t\t\t'realm=\"', ch.realm, '\",',\r\n\t\t\t'nonce=', ch.nonce, ',',\r\n\t\t\t'cnonce=\"', cnonce, '\",',\r\n\t\t\t'nc=\"00000001\",qop=\"', ch.qop, '\",digest-uri=\"', digest_uri, '\",',\r\n\t\t\t'response=\"', HEX(response_value.toString() + HEX(A2)), '\",charset=\"utf-8\"');\r\n\r\n\t\tvar response = new dojox.string.Builder(dojox.xmpp.util.createElement(\"response\", {\r\n\t\t\txmlns: dojox.xmpp.xmpp.SASL_NS\r\n\t\t}, false));\r\n\t\tresponse.append(dojox.xmpp.util.Base64.encode(ret.toString()));\r\n\t\tresponse.append('</response>');\r\n\r\n\t\tthis.rspauth = HEX(response_value.toString() + HEX(A2_rspauth));\r\n\r\n\t\tthis.session.dispatchPacket(response.toString());\r\n\t},\r\n\r\n\tonSecondChallenge: function(msg){\r\n\t\tvar ch_str = dojox.xmpp.util.Base64.decode(msg.firstChild.nodeValue);\r\n\r\n\t\tif(this.rspauth == ch_str.substring(8)){\r\n\t\t\tvar response = new dojox.string.Builder(dojox.xmpp.util.createElement(\"response\", {\r\n\t\t\t\txmlns: dojox.xmpp.xmpp.SASL_NS\r\n\t\t\t}, true));\r\n\t\t\tthis.session.dispatchPacket(response.toString());\r\n\t\t}else{\r\n\t\t\t//FIXME\r\n\t\t}\r\n\t}\r\n});\r\n\r\ndojox.xmpp.sasl.registry = new dojo.AdapterRegistry();\r\ndojox.xmpp.sasl.registry.register(\r\n\t'SUN-COMMS-CLIENT-PROXY-AUTH',\r\n\tfunction(mechanism){\r\n\t\treturn mechanism == 'SUN-COMMS-CLIENT-PROXY-AUTH';\r\n\t},\r\n\tfunction(mechanism, session){\r\n\t\treturn new dojox.xmpp.sasl.SunWebClientAuth(session);\r\n\t}\r\n);\r\ndojox.xmpp.sasl.registry.register(\r\n\t'DIGEST-MD5',\r\n\tfunction(mechanism){\r\n\t\treturn mechanism == 'DIGEST-MD5';\r\n\t},\r\n\tfunction(mechanism, session){\r\n\t\treturn new dojox.xmpp.sasl.DigestMD5(session);\r\n\t}\r\n);\r\ndojox.xmpp.sasl.registry.register(\r\n\t'PLAIN',\r\n\tfunction(mechanism){\r\n\t\treturn mechanism == 'PLAIN';\r\n\t},\r\n\tfunction(mechanism, session){\r\n\t\treturn new dojox.xmpp.sasl.Plain(session);\r\n\t}\r\n);\r\n"]}