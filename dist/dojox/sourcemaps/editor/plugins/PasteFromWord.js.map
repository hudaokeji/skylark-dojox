{"version":3,"sources":["editor/plugins/PasteFromWord.js"],"names":["define","dojo","dijit","dojox","_Plugin","PasteFromWord","declare","iconClassPrefix","width","height","_template","join","_filters","regexp","handler","_initButton","this","slice","strings","i18n","getLocalization","mixin","button","form","Button","label","showLabel","iconClass","tabIndex","onClick","hitch","_uId","getUniqueId","editor","id","uId","_dialog","Dialog","title","placeAt","body","set","string","substitute","style","byId","connect","updateState","get","setEditor","_openDialog","show","_rte","setTimeout","_editor","RichText","startup","onLoadDeferred","addCallback","animateProperty","node","domNode","properties","opacity","start","end","play","_paste","i","content","html","format","prettyPrint","hide","length","filter","replace","focus","execCommand","_cancel","_clearDialog","destroy","destroyRecursive","inherited","arguments","subscribe","_scopeName","o","plugin","args","name","toLowerCase"],"mappings":"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","file":"../../../editor/plugins/PasteFromWord.js","sourcesContent":["define([\r\n\t\"dojo\",\r\n\t\"dijit\",\r\n\t\"dojox\",\r\n\t\"dijit/_editor/_Plugin\",\r\n\t\"dijit/_base/manager\",\r\n\t\"dijit/_editor/RichText\",\r\n\t\"dijit/form/Button\",\r\n\t\"dijit/Dialog\",\r\n\t\"dojox/html/format\",\r\n\t\"dojo/_base/connect\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/i18n\",\r\n\t\"dojo/string\",\r\n\t\"dojo/i18n!dojox/editor/plugins/nls/PasteFromWord\",\r\n\t\"dojo/i18n!dijit/nls/common\",\r\n\t\"dojo/i18n!dijit/_editor/nls/commands\"\r\n], function(dojo, dijit, dojox, _Plugin) {\r\n\r\nvar PasteFromWord = dojo.declare(\"dojox.editor.plugins.PasteFromWord\", _Plugin, {\r\n\t// summary:\r\n\t//\t\tThis plugin provides PasteFromWord capability to the editor.  When\r\n\t//\t\tclicked, a dialog opens with a spartan RichText instance to paste\r\n\t//\t\tword content into via the keyboard commands.  The contents are\r\n\t//\t\tthen filtered to remove word style classes and other meta-junk\r\n\t//\t\tthat tends to cause issues.\r\n\r\n\t// iconClassPrefix: [const] String\r\n\t//\t\tThe CSS class name for the button node is formed from `iconClassPrefix`\r\n\t//\t\tand `command`\r\n\ticonClassPrefix: \"dijitAdditionalEditorIcon\",\r\n\r\n\t// width: [public] String\r\n\t//\t\tThe width to use for the rich text area in the copy/pate dialog, in px.  Default is 400px.\r\n\twidth: \"400px\",\r\n\r\n\t// height: [public] String\r\n\t//\t\tThe height to use for the rich text area in the copy/pate dialog, in px.  Default is 300px.\r\n\theight: \"300px\",\r\n\r\n\t_template: [\"<div class='dijitPasteFromWordEmbeddedRTE'>\",\r\n\t\t\t\t\"<div style='width: ${width}; padding-top: 5px; padding-bottom: 5px;'>${instructions}</div>\",\r\n\t\t\t\t\"<div id='${uId}_rte' style='width: ${width}; height: ${height}'></div>\",\r\n\t\t\t\t\"<table style='width: ${width}' tabindex='-1'>\",\r\n\t\t\t\t\t\"<tbody>\",\r\n\t\t\t\t\t\t\"<tr>\",\r\n\t\t\t\t\t\t\t\"<td align='center'>\",\r\n\t\t\t\t\t\t\t\t\"<button type='button' dojoType='dijit.form.Button' id='${uId}_paste'>${paste}</button>\",\r\n\t\t\t\t\t\t\t\t\"&nbsp;\",\r\n\t\t\t\t\t\t\t\t\"<button type='button' dojoType='dijit.form.Button' id='${uId}_cancel'>${buttonCancel}</button>\",\r\n\t\t\t\t\t\t\t\"</td>\",\r\n\t\t\t\t\t\t\"</tr>\",\r\n\t\t\t\t\t\"</tbody>\",\r\n\t\t\t\t\"</table>\",\r\n\t\t\t   \"</div>\"].join(\"\"),\r\n\r\n\t// _filters: [protected] Array\r\n\t//\t\tThe filters is an array of regular expressions to try and strip out a lot\r\n\t//\t\tof style data MS Word likes to insert when pasting into a contentEditable.\r\n\t//\t\tPrettymuch all of it is junk and not good html.  The hander is a place to put a function\r\n\t//\t\tfor match handling.  In most cases, it just handles it as empty string.  But the option is\r\n\t//\t\tthere for more complex handling.\r\n\t_filters: [\r\n\t\t// Meta tags, link tags, and prefixed tags\r\n\t\t{regexp: /(<meta\\s*[^>]*\\s*>)|(<\\s*link\\s* href=\"file:[^>]*\\s*>)|(<\\/?\\s*\\w+:[^>]*\\s*>)/gi, handler: \"\"},\r\n\t\t// Style tags\r\n\t\t{regexp: /(?:<style([^>]*)>([\\s\\S]*?)<\\/style>|<link\\s+(?=[^>]*rel=['\"]?stylesheet)([^>]*?href=(['\"])([^>]*?)\\4[^>\\/]*)\\/?>)/gi, handler: \"\"},\r\n\t\t// MS class tags and comment tags.\r\n\t\t{regexp: /(class=\"Mso[^\"]*\")|(<!--(.|\\s){1,}?-->)/gi, handler: \"\"},\r\n\t\t// blank p tags\r\n\t\t{regexp: /(<p[^>]*>\\s*(\\&nbsp;|\\u00A0)*\\s*<\\/p[^>]*>)|(<p[^>]*>\\s*<font[^>]*>\\s*(\\&nbsp;|\\u00A0)*\\s*<\\/\\s*font\\s*>\\s<\\/p[^>]*>)/ig, handler: \"\"},\r\n\t\t// Strip out styles containing mso defs and margins, as likely added in IE and are not good to have as it mangles presentation.\r\n\t\t{regexp: /(style=\"[^\"]*mso-[^;][^\"]*\")|(style=\"margin:\\s*[^;\"]*;\")/gi, handler: \"\"},\r\n\t\t// Scripts (if any)\r\n\t\t{regexp: /(<\\s*script[^>]*>((.|\\s)*?)<\\\\?\\/\\s*script\\s*>)|(<\\s*script\\b([^<>]|\\s)*>?)|(<[^>]*=(\\s|)*[(\"|')]javascript:[^$1][(\\s|.)]*[$1][^>]*>)/ig, handler: \"\"},\r\n\t\t// Word 10 odd o:p tags.\r\n\t\t{regexp: /<(\\/?)o\\:p[^>]*>/gi, handler: \"\"}\r\n\t],\r\n\r\n\t_initButton: function(){\r\n\t\t// summary:\r\n\t\t//\t\tOver-ride for creation of the save button.\r\n\t\tthis._filters = this._filters.slice(0); \r\n\t\t\t\r\n\t\tvar strings = dojo.i18n.getLocalization(\"dojox.editor.plugins\", \"PasteFromWord\");\r\n\t\tdojo.mixin(strings, dojo.i18n.getLocalization(\"dijit\", \"common\"));\r\n\t\tdojo.mixin(strings, dojo.i18n.getLocalization(\"dijit._editor\", \"commands\"));\r\n\t\tthis.button = new dijit.form.Button({\r\n\t\t\tlabel: strings[\"pasteFromWord\"],\r\n\t\t\tshowLabel: false,\r\n\t\t\ticonClass: this.iconClassPrefix + \" \" + this.iconClassPrefix + \"PasteFromWord\",\r\n\t\t\ttabIndex: \"-1\",\r\n\t\t\tonClick: dojo.hitch(this, \"_openDialog\")\r\n\t\t});\r\n\r\n\t\tthis._uId = dijit.getUniqueId(this.editor.id);\r\n\r\n\t\tstrings.uId = this._uId;\r\n\t\tstrings.width = this.width || \"400px\";\r\n\t\tstrings.height = this.height || \"300px\";\r\n\r\n\t\tthis._dialog = new dijit.Dialog({title: strings[\"pasteFromWord\"]}).placeAt(dojo.body());\r\n\t\tthis._dialog.set(\"content\", dojo.string.substitute(this._template, strings));\r\n\r\n\t\t// Make it translucent so we can fade in the window when the RTE is created.\r\n\t\t// the RTE has to be created 'visible, and this is a nice trick to make the creation\r\n\t\t// 'pretty'.\r\n\t\tdojo.style(dojo.byId(this._uId + \"_rte\"), \"opacity\", 0.001);\r\n\r\n\t\t// Link up the action buttons to perform the insert or cleanup.\r\n\t\tthis.connect(dijit.byId(this._uId + \"_paste\"), \"onClick\", \"_paste\");\r\n\t\tthis.connect(dijit.byId(this._uId + \"_cancel\"), \"onClick\", \"_cancel\");\r\n\t\tthis.connect(this._dialog, \"onHide\", \"_clearDialog\");\r\n\t},\r\n\r\n\tupdateState: function(){\r\n\t\t// summary:\r\n\t\t//\t\tOver-ride for button state control for disabled to work.\r\n\t\tthis.button.set(\"disabled\", this.get(\"disabled\"));\r\n\t},\r\n\t\r\n\tsetEditor: function(editor){\r\n\t\t// summary:\r\n\t\t//\t\tOver-ride for the setting of the editor.\r\n\t\t// editor: Object\r\n\t\t//\t\tThe editor to configure for this plugin to use.\r\n\t\tthis.editor = editor;\r\n\t\tthis._initButton();\r\n\t},\r\n\r\n\t_openDialog: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to trigger opening the copy dialog.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tthis._dialog.show();\r\n\t\tif(!this._rte){\r\n\t\t\t// RTE hasn't been created yet, so we need to create it now that the\r\n\t\t\t// dialog is showing up.\r\n\t\t\tsetTimeout(dojo.hitch(this, function() {\r\n\t\t\t\tthis._rte = new dijit._editor.RichText({height: this.height || \"300px\"}, this._uId + \"_rte\");\r\n\t\t\t\tthis._rte.startup();\r\n\t\t\t\tthis._rte.onLoadDeferred.addCallback(dojo.hitch(this, function() {\r\n\t\t\t\t\tdojo.animateProperty({\r\n\t\t\t\t\t\tnode: this._rte.domNode, properties: { opacity: { start: 0.001, end: 1.0 } }\r\n\t\t\t\t\t}).play();\r\n\t\t\t\t}));\r\n\t\t\t}), 100);\r\n\t\t}\r\n\t},\r\n\r\n\t_paste: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to handle setting the contents of the copy from dialog\r\n\t\t//\t\tinto the editor.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\r\n\t\t// Gather the content and try to format it a bit (makes regexp cleanup simpler).\r\n\t\t// It also normalizes tag names and styles, so regexps are the same across browsers.\r\n\t\tvar content = dojox.html.format.prettyPrint(this._rte.get(\"value\"));\r\n\r\n\t\t//Close up the dialog and clear old content.\r\n\t\tthis._dialog.hide();\r\n\t\t\r\n\t\t// Apply all the filters to remove MS specific injected text.\r\n\t\tvar i;\r\n\t\tfor(i = 0; i < this._filters.length; i++){\r\n\t\t\tvar filter  = this._filters[i];\r\n\t\t\tcontent = content.replace(filter.regexp, filter.handler);\r\n\t\t}\r\n\r\n\t\t// Format it again to make sure it is reasonably formatted as\r\n\t\t// the regexp applies will have likely chewed up the formatting.\r\n\t\tcontent = dojox.html.format.prettyPrint(content);\r\n\r\n\t\t// Paste it in.\r\n\t\tthis.editor.focus();\r\n\t\tthis.editor.execCommand(\"inserthtml\", content);\r\n\t},\r\n\r\n\t_cancel: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to handle cancelling setting the contents of the\r\n\t\t//\t\tcopy from dialog into the editor.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tthis._dialog.hide();\r\n\t},\r\n\r\n\t_clearDialog: function(){\r\n\t\t// summary:\r\n\t\t//\t\tsimple function to cleat the contents when hide is calledon dialog\r\n\t\t//\t\tcopy from dialog into the editor.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tthis._rte.set(\"value\", \"\");\r\n\t},\r\n\r\n\tdestroy: function(){\r\n\t\t// sunnary:\r\n\t\t//\t\tCleanup function\r\n\t\t// tags:\r\n\t\t//\t\tpublic\r\n\t\tif(this._rte){\r\n\t\t\tthis._rte.destroy();\r\n\t\t}\r\n\t\tif(this._dialog){\r\n\t\t\tthis._dialog.destroyRecursive();\r\n\t\t}\r\n\t\tdelete this._dialog;\r\n\t\tdelete this._rte;\r\n\t\tthis.inherited(arguments);\r\n\t}\r\n\r\n});\r\n\r\n// Register this plugin.\r\ndojo.subscribe(dijit._scopeName + \".Editor.getPlugin\",null,function(o){\r\n\tif(o.plugin){ return; }\r\n\tvar name = o.args.name.toLowerCase();\r\n\tif(name === \"pastefromword\"){\r\n\t\to.plugin = new PasteFromWord({\r\n\t\t\twidth: (\"width\" in o.args)?o.args.width:\"400px\",\r\n\t\t\theight: (\"height\" in o.args)?o.args.width:\"300px\"\r\n\t\t});\r\n\t}\r\n});\r\n\r\nreturn PasteFromWord;\r\n});\r\n"]}