{"version":3,"sources":["editor/plugins/EntityPalette.js"],"names":["define","dojo","dijit","dojox","_Widget","_TemplatedMixin","_PaletteMixin","experimental","EntityPalette","declare","templateString","baseClass","showPreview","showCode","showEntityName","palette","dyeClass","paletteClass","cellClass","postMixInProperties","entityKey","choices","i18n","getLocalization","numChoices","numRows","Math","floor","sqrt","currChoiceIdx","rows","row","push","length","this","_palette","buildRendering","inherited","arguments","_preparePalette","cells","query","gridNode","forEach","cellNode","connect","_onCellMouseEnter","e","_displayDetails","target","postCreate","style","codeHeader","codeNode","entityHeader","entityNode","previewNode","_setCurrent","node","cell","dye","_getDye","ehtml","getValue","ename","_alias","innerHTML","parseInt","charCodeAt","descNode","replace","LatinEntity","constructor","alias","fillCell"],"mappings":";;;;;;;AAAAA,QACC,OACA,QACA,QACA,gBACA,wBACA,sBACA,qBACA,qBACA,YACA,oDACE,SAASC,EAAMC,EAAOC,EAAOC,EAASC,EAAiBC,GAE1DL,EAAKM,aAAa,sCAElB,IAAIC,EAAgBP,EAAKQ,QAAQ,sCAAuCL,EAASC,EAAiBC,IAUjGI,eAAgB,ixCAmChBC,UAAW,qBAIXC,aAAa,EAIbC,UAAU,EAIVC,gBAAgB,EAIhBC,QAAS,QAETC,SAAU,mCAGVC,aAAc,2BAEdC,UAAW,yBAEXC,oBAAqB,WAGpB,IAEIC,EAFAC,EAAUpB,EAAKqB,KAAKC,gBAAgB,uBAAwB,iBAC5DC,EAAa,EAEjB,IAAIJ,KAAaC,EAASG,IAC1B,IACIC,EADgBC,KAAKC,MAAMD,KAAKE,KAAKJ,IAErCK,EAAgB,EAChBC,KACAC,KACJ,IAAIX,KAAaC,EAChBQ,IACAE,EAAIC,KAAKZ,GACNS,EAAgBJ,GAAY,IAC9BK,EAAKE,KAAKD,GACVA,MAGCA,EAAIE,OAAS,GACfH,EAAKE,KAAKD,GAEXG,KAAKC,SAAWL,GAGjBM,eAAgB,WAGfF,KAAKG,UAAUC,WAEf,IAAIhB,EAAOrB,EAAKqB,KAAKC,gBAAgB,uBAAwB,iBAE7DW,KAAKK,gBACJL,KAAKC,SACLb,GAGD,IAAIkB,EAAQvC,EAAKwC,MAAM,0BAA2BP,KAAKQ,UACvDzC,EAAK0C,QAAQH,EAAO,SAASI,GAC5BV,KAAKW,QAAQD,EAAU,eAAgB,sBACrCV,OAGJY,kBAAmB,SAASC,GAQ3Bb,KAAKc,gBAAgBD,EAAEE,SAGxBC,WAAY,WACXhB,KAAKG,UAAUC,WAGfrC,EAAKkD,MAAMjB,KAAKkB,WAAY,UAAWlB,KAAKrB,SAAS,GAAG,QACxDZ,EAAKkD,MAAMjB,KAAKmB,SAAU,UAAWnB,KAAKrB,SAAS,GAAG,QACtDZ,EAAKkD,MAAMjB,KAAKoB,aAAc,UAAWpB,KAAKpB,eAAe,GAAG,QAChEb,EAAKkD,MAAMjB,KAAKqB,WAAY,UAAWrB,KAAKpB,eAAe,GAAG,QAE1DoB,KAAKtB,aACRX,EAAKkD,MAAMjB,KAAKsB,YAAY,UAAU,SAIxCC,YAAa,SAAqBC,GAQjCxB,KAAKG,UAAUC,WACZJ,KAAKtB,aACPsB,KAAKc,gBAAgBU,IAIvBV,gBAAiB,SAAqBW,GAGrC,IAAIC,EAAM1B,KAAK2B,QAAQF,GACvB,GAAGC,EAAI,CACN,IAAIE,EAAQF,EAAIG,WACZC,EAAQJ,EAAIK,OAChB/B,KAAKsB,YAAYU,UAAUJ,EAC3B5B,KAAKmB,SAASa,UAAU,SAASC,SAASL,EAAMM,WAAW,GAAI,IAAI,IACnElC,KAAKqB,WAAWW,UAAU,QAAQF,EAAM,IACxC,IAAI1C,EAAOrB,EAAKqB,KAAKC,gBAAgB,uBAAwB,iBAC7DW,KAAKmC,SAASH,UAAU5C,EAAK0C,GAAOM,QAAQ,KAAM,aAGlDpC,KAAKsB,YAAYU,UAAU,GAC3BhC,KAAKmB,SAASa,UAAU,GACxBhC,KAAKqB,WAAWW,UAAU,GAC1BhC,KAAKmC,SAASH,UAAU,MAmC3B,OA9BA1D,EAAc+D,YAActE,EAAKQ,QAAQ,mCACxC,MAOE+D,YAAa,SAAoBC,GAOjCvC,KAAK+B,OAASQ,GAGfV,SAAU,WAGT,MAAO,IAAM7B,KAAK+B,OAAS,KAG5BS,SAAU,SAAqBf,GAE9BA,EAAKO,UAAYhC,KAAK6B,cAIlBvD","file":"../../../editor/plugins/EntityPalette.js","sourcesContent":["define([\r\n\t\"dojo\",\r\n\t\"dijit\",\r\n\t\"dojox\",\r\n\t\"dijit/_Widget\",\r\n\t\"dijit/_TemplatedMixin\",\r\n\t\"dijit/_PaletteMixin\",\r\n\t\"dojo/_base/connect\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/i18n\",\r\n\t\"dojo/i18n!dojox/editor/plugins/nls/latinEntities\"\r\n], function(dojo, dijit, dojox, _Widget, _TemplatedMixin, _PaletteMixin) {\r\n\r\ndojo.experimental(\"dojox.editor.plugins.EntityPalette\");\r\n\r\nvar EntityPalette = dojo.declare(\"dojox.editor.plugins.EntityPalette\", [_Widget, _TemplatedMixin, _PaletteMixin], {\r\n\t// summary:\r\n\t//\t\tA keyboard accessible HTML entity-picking widget (for inserting symbol characters)\r\n\t// description:\r\n\t//\t\tGrid showing various entities, so the user can pick a certain entity.\r\n\t//\t\tCan be used standalone, or as a popup.\r\n\r\n\t// templateString: [protected] String\r\n\t//\t\tThe basic template used to render the palette.\r\n\t//\t\tShould generally be over-ridden to define different classes.\r\n\ttemplateString: '<div class=\"dojoxEntityPalette\">\\n' +\r\n\t\t\t\t\t'\t<table>\\n' +\r\n\t\t\t\t\t'\t\t<tbody>\\n' +\r\n\t\t\t\t\t'\t\t\t<tr>\\n' +\r\n\t\t\t\t\t'\t\t\t\t<td>\\n' +\r\n\t\t\t\t\t'\t\t\t\t\t<table class=\"dijitPaletteTable\">\\n' +\r\n\t\t\t\t\t'\t\t\t\t\t\t<tbody dojoAttachPoint=\"gridNode\"></tbody>\\n' +\r\n\t\t\t\t\t'\t\t\t\t   </table>\\n' +\r\n\t\t\t\t\t'\t\t\t\t</td>\\n' +\r\n\t\t\t\t\t'\t\t\t</tr>\\n' +\r\n\t\t\t\t\t'\t\t\t<tr>\\n' +\r\n\t\t\t\t\t'\t\t\t\t<td>\\n'+\r\n\t\t\t\t\t'\t\t\t\t\t<table dojoAttachPoint=\"previewPane\" class=\"dojoxEntityPalettePreviewTable\">\\n' +\r\n\t\t\t\t\t'\t\t\t\t\t\t<tbody>\\n' +\r\n\t\t\t\t\t'\t\t\t\t\t\t\t<tr>\\n' +\r\n\t\t\t\t\t'\t\t\t\t\t\t\t\t<th class=\"dojoxEntityPalettePreviewHeader\">Preview</th>\\n' +\r\n\t\t\t\t\t'\t\t\t\t\t\t\t\t<th class=\"dojoxEntityPalettePreviewHeader\" dojoAttachPoint=\"codeHeader\">Code</th>\\n' +\r\n\t\t\t\t\t'\t\t\t\t\t\t\t\t<th class=\"dojoxEntityPalettePreviewHeader\" dojoAttachPoint=\"entityHeader\">Name</th>\\n' +\r\n\t\t\t\t\t'\t\t\t\t\t\t\t\t<th class=\"dojoxEntityPalettePreviewHeader\">Description</th>\\n' +\r\n\t\t\t\t\t'\t\t\t\t\t\t\t</tr>\\n' +\r\n\t\t\t\t\t'\t\t\t\t\t\t\t<tr>\\n' +\r\n\t\t\t\t\t'\t\t\t\t\t\t\t\t<td class=\"dojoxEntityPalettePreviewDetailEntity\" dojoAttachPoint=\"previewNode\"></td>\\n' +\r\n\t\t\t\t\t'\t\t\t\t\t\t\t\t<td class=\"dojoxEntityPalettePreviewDetail\" dojoAttachPoint=\"codeNode\"></td>\\n' +\r\n\t\t\t\t\t'\t\t\t\t\t\t\t\t<td class=\"dojoxEntityPalettePreviewDetail\" dojoAttachPoint=\"entityNode\"></td>\\n' +\r\n\t\t\t\t\t'\t\t\t\t\t\t\t\t<td class=\"dojoxEntityPalettePreviewDetail\" dojoAttachPoint=\"descNode\"></td>\\n' +\r\n\t\t\t\t\t'\t\t\t\t\t\t\t</tr>\\n' +\r\n\t\t\t\t\t'\t\t\t\t\t\t</tbody>\\n' +\r\n\t\t\t\t\t'\t\t\t\t\t</table>\\n' +\r\n\t\t\t\t\t'\t\t\t\t</td>\\n' +\r\n\t\t\t\t\t'\t\t\t</tr>\\n' +\r\n\t\t\t\t\t'\t\t</tbody>\\n' +\r\n\t\t\t\t\t'\t</table>\\n' +\r\n\t\t\t\t\t'</div>',\r\n\r\n\r\n\tbaseClass: \"dojoxEntityPalette\",\r\n\r\n\t// showPreview: [public] Boolean\r\n\t//\t  Whether the preview pane will be displayed, to show details about the selected entity.\r\n\tshowPreview: true,\r\n\r\n\t// showCode: [public] Boolean\r\n\t//\t\tShow the character code for the entity.\r\n\tshowCode: false,\r\n\r\n\t// showEntityName: [public] Boolean\r\n\t//\t\tShow the entity name for the entity.\r\n\tshowEntityName: false,\r\n\r\n\t// palette: [public] String\r\n\t//\t\tThe symbol pallete to display.  The only current one is 'latin'.\r\n\tpalette: \"latin\",\r\n\r\n\tdyeClass: 'dojox.editor.plugins.LatinEntity',\r\n\r\n\t// domNodeClass [protected] String\r\n\tpaletteClass: 'editorLatinEntityPalette',\r\n\r\n\tcellClass: \"dojoxEntityPaletteCell\",\r\n\r\n\tpostMixInProperties: function(){\r\n\t\t// summary:\r\n\t\t//\t\tConvert hash of entities into two-dimensional rows/columns table (array of arrays)\r\n\t\tvar choices = dojo.i18n.getLocalization(\"dojox.editor.plugins\", \"latinEntities\");\r\n\t\tvar numChoices = 0;\r\n\t\tvar entityKey;\r\n\t\tfor(entityKey in choices){numChoices++;}\r\n\t\tvar choicesPerRow = Math.floor(Math.sqrt(numChoices));\r\n\t\tvar numRows = choicesPerRow;\r\n\t\tvar currChoiceIdx = 0;\r\n\t\tvar rows = [];\r\n\t\tvar row = [];\r\n\t\tfor(entityKey in choices){\r\n\t\t\tcurrChoiceIdx++;\r\n\t\t\trow.push(entityKey);\r\n\t\t\tif(currChoiceIdx % numRows === 0){\r\n\t\t\t\trows.push(row);\r\n\t\t\t\trow = [];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(row.length > 0){\r\n\t\t\trows.push(row);\r\n\t\t}\r\n\t\tthis._palette = rows;\r\n\t},\r\n\r\n\tbuildRendering: function(){\r\n\t\t// summary:\r\n\t\t//\t\tInstantiate the template, which makes a skeleton table which we'll insert the entities\r\n\t\tthis.inherited(arguments);\r\n\r\n\t\tvar i18n = dojo.i18n.getLocalization(\"dojox.editor.plugins\", \"latinEntities\");\r\n\r\n\t\tthis._preparePalette(\r\n\t\t\tthis._palette,\r\n\t\t\ti18n\r\n\t\t);\r\n\r\n\t\tvar cells = dojo.query(\".dojoxEntityPaletteCell\", this.gridNode);\r\n\t\tdojo.forEach(cells, function(cellNode){\r\n\t\t\tthis.connect(cellNode, \"onmouseenter\", \"_onCellMouseEnter\");\r\n\t\t}, this);\r\n\t},\r\n\r\n\t_onCellMouseEnter: function(e){\r\n\t\t// summary:\r\n\t\t//\t\tSimple function to handle updating the display at the bottom of\r\n\t\t//\t\tthe palette.\r\n\t\t// e:\r\n\t\t//\t\tThe event.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tthis._displayDetails(e.target);\r\n\t},\r\n\r\n\tpostCreate: function(){\r\n\t\tthis.inherited(arguments);\r\n\r\n\t\t// Show the code and entity name (if enabled to do so.)\r\n\t\tdojo.style(this.codeHeader, \"display\", this.showCode?\"\":\"none\");\r\n\t\tdojo.style(this.codeNode, \"display\", this.showCode?\"\":\"none\");\r\n\t\tdojo.style(this.entityHeader, \"display\", this.showEntityName?\"\":\"none\");\r\n\t\tdojo.style(this.entityNode, \"display\", this.showEntityName?\"\":\"none\");\r\n\r\n\t\tif(!this.showPreview){\r\n\t\t\tdojo.style(this.previewNode,\"display\",\"none\");\r\n\t\t}\r\n\t},\r\n\r\n\t_setCurrent: function(/*DOMNode*/ node){\r\n\t\t// summary:\r\n\t\t//\t\tCalled when a entity is hovered or focused.\r\n\t\t// description:\r\n\t\t//\t\tRemoves highlight of the old entity, and highlights\r\n\t\t//\t\tthe new entity.\r\n\t\t// tags:\r\n\t\t//\t\tprotected\r\n\t\tthis.inherited(arguments);\r\n\t\tif(this.showPreview){\r\n\t\t\tthis._displayDetails(node);\r\n\t\t}\r\n\t},\r\n\r\n\t_displayDetails: function(/*DOMNode*/ cell){\r\n\t\t// summary:\r\n\t\t//\t  Display the details of the currently focused entity in the preview pane\r\n\t\tvar dye = this._getDye(cell);\r\n\t\tif(dye){\r\n\t\t\tvar ehtml = dye.getValue();\r\n\t\t\tvar ename = dye._alias;\r\n\t\t\tthis.previewNode.innerHTML=ehtml;\r\n\t\t\tthis.codeNode.innerHTML=\"&amp;#\"+parseInt(ehtml.charCodeAt(0), 10)+\";\";\r\n\t\t\tthis.entityNode.innerHTML=\"&amp;\"+ename+\";\";\r\n\t\t\tvar i18n = dojo.i18n.getLocalization(\"dojox.editor.plugins\", \"latinEntities\");\r\n\t\t\tthis.descNode.innerHTML=i18n[ename].replace(\"\\n\", \"<br>\");\r\n\r\n\t\t}else{\r\n\t\t\tthis.previewNode.innerHTML=\"\";\r\n\t\t\tthis.codeNode.innerHTML=\"\";\r\n\t\t\tthis.entityNode.innerHTML=\"\";\r\n\t\t\tthis.descNode.innerHTML=\"\";\r\n\t\t}\r\n\t}\r\n});\r\n\r\nEntityPalette.LatinEntity = dojo.declare(\"dojox.editor.plugins.LatinEntity\",\r\n\tnull,\r\n\t{\r\n\t\t// summary:\r\n\t\t//\t\tRepresents a character.\r\n\t\t//\t\tInitialized using an alias for the character (like cent) rather\r\n\t\t//\t\tthan with the character itself.\r\n\r\n \t\tconstructor: function(/*String*/ alias){\r\n\t\t\t// summary:\r\n\t\t\t//\t Construct JS object representing an entity (associated w/a cell\r\n\t\t\t//\t\tin the palette)\r\n\t\t\t// value: String\r\n\t\t\t//\t\talias name: 'cent', 'pound' ..\r\n\t\t\t\r\n\t\t\tthis._alias = alias;\r\n\t\t},\r\n\r\n\t\tgetValue: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns HTML representing the character, like &amp;\r\n\t\t\treturn \"&\" + this._alias + \";\";\r\n\t\t},\r\n\r\n\t\tfillCell: function(/*DOMNode*/ cell){\r\n\t\t\t// Deal with entities that have keys which are reserved words.\r\n\t\t\tcell.innerHTML = this.getValue();\r\n\t\t}\r\n});\r\n\r\nreturn EntityPalette;\r\n\r\n});\r\n"]}