{"version":3,"sources":["editor/plugins/LocalImage.js"],"names":["define","dojo","dijit","registry","popup","_Plugin","LinkDialog","TooltipDialog","_TextBoxMixin","Button","ValidationTextBox","DropDownButton","connect","declare","has","FileUploader","messages","LocalImage","ImgLinkDialog","uploadable","uploadUrl","baseImageUrl","fileMask","urlRegExp","htmlFieldName","_isLocalFile","_messages","_cssPrefix","_closable","linkDialogTemplate","join","_initButton","_this","this","tag","dropDown","title","command","onOpen","_initialFileUploader","_onOpenDialog","prototype","apply","arguments","setTimeout","selectInputText","_urlInput","textbox","isLoadComplete","onClose","disconnect","blurHandler","onHide","onCancel","hitch","label","getLabel","className","iconClassPrefix","charAt","toUpperCase","substr","props","mixin","showLabel","iconClass","tabIndex","params","closeDropDown","focus","_opened","close","state","button","masks","split","temp","forEach","m","replace","substring","prePopuTextBrowse","id","getUniqueId","editor","_uniqueId","_setContent","string","substitute","startup","urlInput","byId","_textInput","_setButton","pt","isValid","isFocused","get","length","reset","_connectTagEvents","fup","fUpId","_fileUploader","force","uploadOnChange","selectMultipleFiles","showProgress","_resetHTML","validate","data","set","name","urlPrefix","file","_setDialogStatus","setValue","evtObject","console","log","_checkAndFixInput","_isValid","_cancelFileUpload","_checkAndSetValue","upload","value","destroy","inherited","plugin","args"],"mappings":"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","file":"../../../editor/plugins/LocalImage.js","sourcesContent":["define([\r\n\t\"dojo\",//FIXME\r\n\t\"dijit\",//FIXME\r\n\t\"dijit/registry\",\r\n\t\"dijit/_base/popup\",\r\n\t\"dijit/_editor/_Plugin\",\r\n\t\"dijit/_editor/plugins/LinkDialog\",\r\n\t\"dijit/TooltipDialog\",\r\n\t\"dijit/form/_TextBoxMixin\",\r\n\t\"dijit/form/Button\",\r\n\t\"dijit/form/ValidationTextBox\",\r\n\t\"dijit/form/DropDownButton\",\r\n\t\"dojo/_base/connect\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/sniff\",\r\n\t\"dojox/form/FileUploader\", //FIXME: deprecated.  Use Uploader instead\r\n\t\"dojo/i18n!dojox/editor/plugins/nls/LocalImage\"\r\n], function(dojo, dijit, registry, popup, _Plugin, LinkDialog, TooltipDialog,\r\n\t\t\t_TextBoxMixin, Button, ValidationTextBox, DropDownButton,\r\n\t\t\tconnect, declare, has, FileUploader, messages) {\r\n\r\nvar LocalImage = dojo.declare(\"dojox.editor.plugins.LocalImage\", LinkDialog.ImgLinkDialog, {\r\n\t// summary:\r\n\t//\t\tThis plugin provides an enhanced image link dialog that\r\n\t//\t\tnot only insert the online images, but upload the local image files onto\r\n\t//\t\tto server then insert them as well.\r\n\t//\r\n\t//\t\tDependencies:\r\n\t//\t\tThis plugin depends on dojox.form.FileUploader to upload the images on the local driver.\r\n\t//\t\tDo the regression test whenever FileUploader is upgraded.\r\n\t\r\n\t// uploadable: [public] Boolean\r\n\t//\t\tIndicate whether the user can upload a local image file onto the server.\r\n\t//\t\tIf it is set to true, the Browse button will be available.\r\n\tuploadable: false,\r\n\t\r\n\t// uploadUrl: [public] String\r\n\t//\t\tThe url targeted for uploading. Both absolute and relative URLs are OK.\r\n\tuploadUrl: \"\",\r\n\t\r\n\t// baseImageUrl: [public] String\r\n\t//\t\tThe prefix of the image url on the server.\r\n\t//\t\tFor example, an image is uploaded and stored at\r\n\t//\t\t`http://www.myhost.com/images/uploads/test.jpg`.\r\n\t//\t\tWhen the image is uploaded, the server returns \"uploads/test.jpg\" as the\r\n\t//\t\trelative path. So the baseImageUrl should be set to \"http://www.myhost.com/images/\"\r\n\t//\t\tso that the client can retrieve the image from the server.\r\n\t//\t\tIf the image file is located on the same domain as that of the current web page,\r\n\t//\t\tbaseImageUrl can be a relative path. For example:\r\n\t// |\tbaseImageUrl = images/\r\n\t//\t\tand the server returns uploads/test.jpg\r\n\t//\t\tThe complete URL of the image file is images/upload/test.jpg\r\n\tbaseImageUrl: \"\",\r\n\t\r\n\t// fileMask: [public] String\r\n\t//\t\tSpecify the types of images that are allowed to be uploaded.\r\n\t//\t\tNote that the type checking on server is also very important!\r\n\tfileMask: \"*.jpg;*.jpeg;*.gif;*.png;*.bmp\",\r\n\t\r\n\t// urlRegExp: [protected] String\r\n\t//\t\tUsed to validate if the input is a valid image URL.\r\n\turlRegExp: \"\",\r\n\t\r\n\t// htmlFieldName: [private] htmlFieldName\r\n\thtmlFieldName:\"uploadedfile\",\r\n\t\r\n\t// _isLocalFile: [private] Boolean\r\n\t//\t\tIndicate if a local file is to be uploaded to the server\r\n\t//\t\tIf false, the text of _urlInput field is regarded as the\r\n\t//\t\tURL of the online image\r\n\t_isLocalFile: false,\r\n\t\r\n\t// _messages: [private] Array<String>\r\n\t//\t\tContains i18n strings.\r\n\t_messages: \"\",\r\n\t\r\n\t// _cssPrefix: [private] String\r\n\t//\t\tThe prefix of the CSS style\r\n\t_cssPrefix: \"dijitEditorEilDialog\",\r\n\t\r\n\t// _closable: [private] Boolean\r\n\t//\t\tIndicate if the tooltip dialog can be closed. Used to workaround Safari 5 bug\r\n\t//\t\twhere the file dialog doesn't pop up in modal until after the first click.\r\n\t_closable: true,\r\n\t\r\n\t// linkDialogTemplate: [protected] String\r\n\t//\t\tOver-ride for template since this is an enhanced image dialog.\r\n\tlinkDialogTemplate: [\r\n\t\t\"<div style='border-bottom: 1px solid black; padding-bottom: 2pt; margin-bottom: 4pt;'></div>\", // <hr/> breaks the dialog in IE6\r\n\t\t\"<div class='dijitEditorEilDialogDescription'>${prePopuTextUrl}${prePopuTextBrowse}</div>\",\r\n\t\t\"<table role='presentation'><tr><td colspan='2'>\",\r\n\t\t\"<label for='${id}_urlInput' title='${prePopuTextUrl}${prePopuTextBrowse}'>${url}</label>\",\r\n\t\t\"</td></tr><tr><td class='dijitEditorEilDialogField'>\",\r\n\t\t\"<input dojoType='dijit.form.ValidationTextBox' class='dijitEditorEilDialogField'\" +\r\n\t\t\"regExp='${urlRegExp}' title='${prePopuTextUrl}${prePopuTextBrowse}'  selectOnClick='true' required='true' \" +\r\n\t\t\"id='${id}_urlInput' name='urlInput' intermediateChanges='true' invalidMessage='${invalidMessage}' \" +\r\n\t\t\"prePopuText='&lt;${prePopuTextUrl}${prePopuTextBrowse}&gt'>\",\r\n\t\t\"</td><td>\",\r\n\t\t\"<div id='${id}_browse' style='display:${uploadable}'>${browse}</div>\",\r\n\t\t\"</td></tr><tr><td colspan='2'>\",\r\n\t\t\"<label for='${id}_textInput'>${text}</label>\",\r\n\t\t\"</td></tr><tr><td>\",\r\n\t\t\"<input dojoType='dijit.form.TextBox' required='false' id='${id}_textInput' \" +\r\n\t\t\"name='textInput' intermediateChanges='true' selectOnClick='true' class='dijitEditorEilDialogField'>\",\r\n\t\t\"</td><td></td></tr><tr><td>\",\r\n\t\t\"</td><td>\",\r\n\t\t\"</td></tr><tr><td colspan='2'>\",\r\n\t\t\"<button dojoType='dijit.form.Button' id='${id}_setButton'>${set}</button>\",\r\n\t\t\"</td></tr></table>\"\r\n\t].join(\"\"),\r\n\r\n\t_initButton: function(){\r\n\t\t// summary:\r\n\t\t//\t\tOverride _Plugin._initButton() to initialize DropDownButton and TooltipDialog.\r\n\t\t// tags:\r\n\t\t//\t\tprotected\r\n\t    \tvar _this = this;\r\n\t\tthis._messages = messages;\r\n\t\tthis.tag = \"img\";\r\n\t\tvar dropDown = (this.dropDown = new TooltipDialog({\r\n\t\t\ttitle: messages[this.command + \"Title\"],\r\n\t\t\tonOpen: function(){\r\n\t\t\t\t_this._initialFileUploader();\r\n\t\t\t\t_this._onOpenDialog();\r\n\t\t\t\tTooltipDialog.prototype.onOpen.apply(this, arguments);\r\n\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t// Auto-select the text if it is not empty\r\n\t\t\t\t\t_TextBoxMixin.selectInputText(_this._urlInput.textbox);\r\n\t\t\t\t\t_this._urlInput.isLoadComplete = true;\r\n\t\t\t\t}, 0);\r\n\t\t\t},\r\n\t\t\tonClose: function(){\r\n\t\t\t\tdojo.disconnect(_this.blurHandler);\r\n\t\t\t\t_this.blurHandler = null;\r\n\t\t\t\tthis.onHide();\r\n\t\t\t},\r\n\t\t\tonCancel: function(){\r\n\t\t\t\tsetTimeout(dojo.hitch(_this, \"_onCloseDialog\"),0);\r\n\t\t\t}\r\n\t\t}));\r\n\t\t\r\n\t\tvar label = this.getLabel(this.command),\r\n\t\t\tclassName = this.iconClassPrefix + \" \" + this.iconClassPrefix + this.command.charAt(0).toUpperCase() + this.command.substr(1),\r\n\t\t\tprops = dojo.mixin({\r\n\t\t\t\t\tlabel: label,\r\n\t\t\t\t\tshowLabel: false,\r\n\t\t\t\t\ticonClass: className,\r\n\t\t\t\t\tdropDown: this.dropDown,\r\n\t\t\t\t\ttabIndex: \"-1\"\r\n\t\t\t\t}, this.params || {});\r\n\t\t\r\n\t\tif(!has('ie')){\r\n\t\t\t// Workaround for Non-IE problem:\r\n\t\t\t// Safari 5: After the select-file dialog opens, the first time the user clicks anywhere (even on that dialog)\r\n\t\t\t// it's treated like a plain click on the page, and the tooltip dialog closes\r\n\t\t\t// FF & Chrome: the select-file dialog does not block the execution of JS\r\n\t\t\tprops.closeDropDown = function(/*Boolean*/ focus){\r\n\t\t\t\tif(_this._closable){\r\n\t\t\t\t\tif(this._opened){\r\n\t\t\t\t\t\tpopup.close(this.dropDown);\r\n\t\t\t\t\t\tif(focus){ this.focus(); }\r\n\t\t\t\t\t\tthis._opened = false;\r\n\t\t\t\t\t\tthis.state = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tsetTimeout(function(){ _this._closable = true; }, 10);\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\tthis.button = new DropDownButton(props);\r\n\t\t\r\n\t\t// Generate the RegExp of the ValidationTextBox from fileMask\r\n\t\t// *.jpg;*.png => /.*\\.jpg|.*\\.JPG|.*\\.png|.*\\.PNG/\r\n\t\tvar masks = this.fileMask.split(\";\"),\r\n\t\t\ttemp = \"\";\r\n\t\tdojo.forEach(masks, function(m){\r\n\t\t\tm = m.replace(/\\./, \"\\\\.\").replace(/\\*/g, \".*\");\r\n\t\t\ttemp += \"|\" + m + \"|\" + m.toUpperCase();\r\n\t\t});\r\n\t\tmessages.urlRegExp = this.urlRegExp = temp.substring(1);\r\n\t\t\r\n\t\tif(!this.uploadable){\r\n\t\t\tmessages.prePopuTextBrowse = \".\";\r\n\t\t}\r\n\t\t\r\n\t\tmessages.id = registry.getUniqueId(this.editor.id);\r\n\t\tmessages.uploadable = this.uploadable ? \"inline\" : \"none\";\r\n\t\tthis._uniqueId = messages.id;\r\n\t\tthis._setContent(\"<div class='\" + this._cssPrefix + \"Title'>\" + dropDown.title + \"</div>\" +\r\n\t\t\tdojo.string.substitute(this.linkDialogTemplate, messages));\r\n\t\tdropDown.startup();\r\n\t\t\r\n\t\tvar urlInput = (this._urlInput = registry.byId(this._uniqueId + \"_urlInput\"));\r\n\t\tthis._textInput = registry.byId(this._uniqueId + \"_textInput\");\r\n\t\tthis._setButton = registry.byId(this._uniqueId + \"_setButton\");\r\n\t\t\r\n\t\tif(urlInput){\r\n\t\t\tvar pt = ValidationTextBox.prototype;\r\n\t\t\turlInput = dojo.mixin(urlInput, {\r\n\t\t\t\t// Indicate if the widget is ready to validate the input text\r\n\t\t\t\tisLoadComplete: false,\r\n\t\t\t\tisValid: function(isFocused){\r\n\t\t\t\t\tif(this.isLoadComplete){\r\n\t\t\t\t\t\treturn pt.isValid.apply(this, arguments);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\treturn this.get(\"value\").length > 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\treset: function(){\r\n\t\t\t\t\tthis.isLoadComplete = false;\r\n\t\t\t\t\tpt.reset.apply(this, arguments);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.connect(urlInput, \"onKeyDown\", \"_cancelFileUpload\");\r\n\t\t\tthis.connect(urlInput, \"onChange\", \"_checkAndFixInput\");\r\n\t\t}\r\n\t\tif(this._setButton){\r\n\t\t\tthis.connect(this._setButton, \"onClick\", \"_checkAndSetValue\");\r\n\t\t}\r\n\t\tthis._connectTagEvents();\r\n\t},\r\n\t\r\n\t_initialFileUploader: function(){\r\n\t\t// summary:\r\n\t\t//\t\tInitialize the FileUploader and connect up its events\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar fup = null,\r\n\t\t\t_this = this,\r\n\t\t\twidgetId = _this._uniqueId,\r\n\t\t\tfUpId = widgetId + \"_browse\",\r\n\t\t\turlInput = _this._urlInput;\r\n\t\t\r\n\t\tif(_this.uploadable && !_this._fileUploader){\r\n\t\t\tfup = _this._fileUploader = new FileUploader({\r\n\t\t\t\tforce: \"html\", // Noticed that SWF may cause browsers to crash sometimes\r\n\t\t\t\tuploadUrl: _this.uploadUrl,\r\n\t\t\t\thtmlFieldName: _this.htmlFieldName,\r\n\t\t\t\tuploadOnChange: false,\r\n\t\t\t\tselectMultipleFiles: false,\r\n\t\t\t\tshowProgress: true\r\n\t\t\t}, fUpId);\r\n\t\t\t\r\n\t\t\t// TooltipDialog will call reset on all the widgets contained within it.\r\n\t\t\t// Have FileUploader be responsive to this call.\r\n\t\t\tfup.reset = function(){\r\n\t\t\t\t_this._isLocalFile = false;\r\n\t\t\t\tfup._resetHTML();\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t_this.connect(fup, \"onClick\", function(){\r\n\t\t\t\turlInput.validate(false);\r\n\t\t\t\tif(!has('ie')){\r\n\t\t\t\t\t// Firefox, Chrome and Safari have a strange behavior:\r\n\t\t\t\t\t// When the File Upload dialog is open, the browse div (FileUploader) will lose its focus\r\n\t\t\t\t\t// and triggers onBlur event. This event will cause the whole tooltip dialog\r\n\t\t\t\t\t// to be closed when the File Upload dialog is open. The popup dialog should hang up\r\n\t\t\t\t\t// the js execution rather than triggering an event. IE does not have such a problem.\r\n\t\t\t\t\t_this._closable = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t\r\n\t\t\t_this.connect(fup, \"onChange\", function(data){\r\n\t\t\t\t_this._isLocalFile = true;\r\n\t\t\t\turlInput.set(\"value\", data[0].name); //Single selection\r\n\t\t\t\turlInput.focus();\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t_this.connect(fup, \"onComplete\", function(data){\r\n\t\t\t\tvar urlPrefix = _this.baseImageUrl;\r\n\t\t\t\turlPrefix = urlPrefix && urlPrefix.charAt(urlPrefix.length - 1) == \"/\" ? urlPrefix : urlPrefix + \"/\";\r\n\t\t\t\turlInput.set(\"value\", urlPrefix + data[0].file); //Single selection\r\n\t\t\t\t_this._isLocalFile = false;\r\n\t\t\t\t_this._setDialogStatus(true);\r\n\t\t\t\t_this.setValue(_this.dropDown.get(\"value\"));\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t_this.connect(fup, \"onError\", function(evtObject){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tFires on errors\r\n\t\t\t\tconsole.log(\"Error occurred when uploading image file!\");\r\n\t\t\t\t_this._setDialogStatus(true);\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\t\r\n\t_checkAndFixInput: function(){\r\n\t\t// summary:\r\n\t\t//\t\tOver-ride the original method\r\n\t\tthis._setButton.set(\"disabled\", !this._isValid());\r\n\t},\r\n\t\r\n\t_isValid: function(){\r\n\t\t// summary:\r\n\t\t//\t\tInvalid cases: URL is not ended with the suffix listed\r\n\t\treturn this._urlInput.isValid();\r\n\t},\r\n\t\r\n\t_cancelFileUpload: function(){\r\n\t\tthis._fileUploader.reset();\r\n\t\tthis._isLocalFile = false;\r\n\t},\r\n\t\r\n\t_checkAndSetValue: function(){\r\n\t\t// summary:\r\n\t\t//\t\tDetermine if a local file is to be uploaded.\r\n\t\t//\t\tIf a local file is to be uploaded, do not close the dialog\r\n\t\t//\t\tuntil the file uploading is finished. Else, insert the image directly into the editor.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tif(this._fileUploader && this._isLocalFile){\r\n\t\t\tthis._setDialogStatus(false);\r\n\t\t\tthis._fileUploader.upload();\r\n\t\t}else{\r\n\t\t\tthis.setValue(this.dropDown.get(\"value\"));\r\n\t\t}\r\n\t},\r\n\t\r\n\t_setDialogStatus: function(/*Boolean*/ value){\r\n\t\tthis._urlInput.set(\"disabled\", !value);\r\n\t\tthis._textInput.set(\"disabled\", !value);\r\n\t\tthis._setButton.set(\"disabled\", !value);\r\n\t},\r\n\t\r\n\tdestroy: function(){\r\n\t\t// summary:\r\n\t\t//\t\tCleanup of the plugin.\r\n\t\tthis.inherited(arguments);\r\n\t\tif(this._fileUploader){\r\n\t\t\tthis._fileUploader.destroy();\r\n\t\t\tdelete this._fileUploader;\r\n\t\t}\r\n\t}\r\n});\r\n\r\nvar plugin = function(args){\r\n\treturn new LocalImage({\r\n\t\tcommand: \"insertImage\",\r\n\t\tuploadable: (\"uploadable\" in args) ? args.uploadable : false,\r\n\t\tuploadUrl: (\"uploadable\" in args && \"uploadUrl\" in args) ? args.uploadUrl : \"\",\r\n\t\thtmlFieldName: (\"uploadable\" in args && \"htmlFieldName\" in args) ? args.htmlFieldName : \"uploadedfile\",\r\n\t\tbaseImageUrl: (\"uploadable\" in args && \"baseImageUrl\" in args) ? args.baseImageUrl : \"\",\r\n\t\tfileMask: (\"fileMask\" in args) ? args.fileMask : \"*.jpg;*.jpeg;*.gif;*.png;*.bmp\"\r\n\t});\r\n};\r\n\r\n// Register the plugin and some name varients.\r\n_Plugin.registry[\"LocalImage\"] = plugin;\r\n_Plugin.registry[\"localImage\"] = plugin;\r\n_Plugin.registry[\"localimage\"] = plugin;\r\n\r\nreturn LocalImage;\r\n\r\n});\r\n"]}