{"version":3,"sources":["editor/plugins/NormalizeStyle.js"],"names":["define","dojo","dijit","dojox","_Plugin","editorHtml","NormalizeStyle","declare","mode","condenseSpans","setEditor","editor","this","customUndo","contentDomPostFilters","push","hitch","_convertToSemantic","_convertToCss","isIE","contentDomPreFilters","_browserFilter","isWebKit","isMoz","_inserthtmlImpl","_oldInsertHtmlImpl","node","doc","document","self","convertNode","cNode","nodeType","id","sTag","style","tag","tagName","toLowerCase","fw","fontWeight","fs","fontStyle","td","textDecoration","s","fontSize","bc","backgroundColor","c","color","wrapNodes","wrap","pNode","firstChild","appendChild","cssText","place","parentNode","removeChild","createElement","da","split","count","forEach","length","indexOf","substring","parseInt","size","xx-small","x-small","small","medium","large","x-large","xx-large","-webkit-xxx-large","setAttribute","_isInline","Color","toHex","childNodes","nodes","n","_normalizeTags","window","query","tTag","nNode","span","styles","attr","fontFace","1","2","3","4","5","6","7","_condenseSpans","compressSpans","genStyleMap","styleText","m","ss","key","trim","val","i","nKey","ch","charAt","toUpperCase","nextSibling","s1","s2","combinedMap","t","html","div","innerHTML","getChildrenHtml","execCommand","subscribe","_scopeName","o","plugin","args","name"],"mappings":"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","file":"../../../editor/plugins/NormalizeStyle.js","sourcesContent":["define([\r\n\t\"dojo\",\r\n\t\"dijit\",\r\n\t\"dojox\",\r\n\t\"dijit/_editor/_Plugin\",\r\n\t\"dijit/_editor/html\",\r\n\t\"dojo/_base/connect\",\r\n\t\"dojo/_base/declare\"\r\n], function(dojo, dijit, dojox, _Plugin, editorHtml) {\r\n\r\nvar NormalizeStyle = dojo.declare(\"dojox.editor.plugins.NormalizeStyle\", _Plugin,{\r\n\t// summary:\r\n\t//\t\tThis plugin provides NormalizeStyle capability to the editor.  It is\r\n\t//\t\ta headless plugin that tries to normalize how content is styled when\r\n\t//\t\tit comes out of th editor ('b' or css).   It also auto-converts\r\n\t//\t\tincoming content to the proper one expected by the browser as well so\r\n\t//\t\tthat the native styling buttons work.\r\n\r\n\t// mode: [public] String\r\n\t//\t\tA String variable indicating if it should use semantic tags 'b', 'i', etc, or\r\n\t//\t\tCSS styling.  The default is semantic.\r\n\tmode: \"semantic\",\r\n\r\n\t// condenseSpans: [public] Boolean\r\n\t//\t\tA boolean variable indicating if it should try to condense\r\n\t//\t\t'span''span''span' styles  when in css mode\r\n\t//\t\tThe default is true, it will try to combine where it can.\r\n\tcondenseSpans: true,\r\n\r\n\tsetEditor: function(editor){\r\n\t\t// summary:\r\n\t\t//\t\tOver-ride for the setting of the editor.\r\n\t\t// editor: Object\r\n\t\t//\t\tThe editor to configure for this plugin to use.\r\n\t\tthis.editor = editor;\r\n\t\teditor.customUndo = true;\r\n\r\n\t\tif(this.mode === \"semantic\"){\r\n\t\t\tthis.editor.contentDomPostFilters.push(dojo.hitch(this, this._convertToSemantic));\r\n\t\t}else if(this.mode === \"css\"){\r\n\t\t\tthis.editor.contentDomPostFilters.push(dojo.hitch(this, this._convertToCss));\r\n\t\t}\r\n\r\n\t\t// Pre DOM filters are usually based on what browser, as they all use different ways to\r\n\t\t// apply styles with actions and modify them.\r\n\t\tif(dojo.isIE){\r\n\t\t\t// IE still uses semantic tags most of the time, so convert to that.\r\n\t\t\tthis.editor.contentDomPreFilters.push(dojo.hitch(this, this._convertToSemantic));\r\n\t\t\tthis._browserFilter = this._convertToSemantic;\r\n\t\t}else if(dojo.isWebKit){\r\n\t\t\tthis.editor.contentDomPreFilters.push(dojo.hitch(this, this._convertToCss));\r\n\t\t\tthis._browserFilter = this._convertToCss;\r\n\t\t}else if(dojo.isMoz){\r\n\t\t\t//Editor currently forces Moz into semantic mode, so we need to match.  Ideally\r\n\t\t\t//editor could get rid of that and just use CSS mode, which would work cleaner\r\n\t\t\t//That's why this is split out, to make it easy to change later.\r\n\t\t\tthis.editor.contentDomPreFilters.push(dojo.hitch(this, this._convertToSemantic));\r\n\t\t\tthis._browserFilter = this._convertToSemantic;\r\n\t\t}else{\r\n\t\t\tthis.editor.contentDomPreFilters.push(dojo.hitch(this, this._convertToSemantic));\r\n\t\t\tthis._browserFilter = this._convertToSemantic;\r\n\t\t}\r\n\r\n\t\t// Set up the inserthtml impl over-ride.  This catches semi-paste events and\r\n\t\t// tries to normalize them too.\r\n\t\tif(this.editor._inserthtmlImpl){\r\n\t\t\tthis.editor._oldInsertHtmlImpl = this.editor._inserthtmlImpl;\r\n\t\t}\r\n\t\tthis.editor._inserthtmlImpl = dojo.hitch(this, this._inserthtmlImpl);\r\n\t},\r\n\r\n\t_convertToSemantic: function(node){\r\n\t\t// summary:\r\n\t\t//\t\tA function to convert the HTML structure of 'node' into\r\n\t\t//\t\tsemantic tags where possible.\r\n\t\t// node: DOMNode\r\n\t\t//\t\tThe node to process.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tif(node){\r\n\t\t\tvar doc = this.editor.document;\r\n\t\t\tvar self = this;\r\n\t\t\tvar convertNode = function(cNode){\r\n\t\t\t\tif(cNode.nodeType == 1){\r\n\t\t\t\t\tif(cNode.id !== \"dijitEditorBody\"){\r\n\t\t\t\t\t\tvar style = cNode.style;\r\n\t\t\t\t\t\tvar tag = cNode.tagName?cNode.tagName.toLowerCase():\"\";\r\n\t\t\t\t\t\tvar sTag;\r\n\t\t\t\t\t\tif(style && tag != \"table\" && tag != \"ul\" && tag != \"ol\"){\r\n\t\t\t\t\t\t\t// Avoid wrapper blocks that have specific underlying structure, as injecting\r\n\t\t\t\t\t\t\t// spans/etc there is invalid.\r\n\t\t\t\t\t\t\t// Lets check and convert certain node/style types.\r\n\t\t\t\t\t\t\tvar fw = style.fontWeight? style.fontWeight.toLowerCase() : \"\";\r\n\t\t\t\t\t\t\tvar fs = style.fontStyle? style.fontStyle.toLowerCase() : \"\";\r\n\t\t\t\t\t\t\tvar td = style.textDecoration? style.textDecoration.toLowerCase() : \"\";\r\n\t\t\t\t\t\t\tvar s = style.fontSize?style.fontSize.toLowerCase() : \"\";\r\n\t\t\t\t\t\t\tvar bc = style.backgroundColor?style.backgroundColor.toLowerCase() : \"\";\r\n\t\t\t\t\t\t\tvar c = style.color?style.color.toLowerCase() : \"\";\r\n\t\r\n\t\t\t\t\t\t\tvar wrapNodes = function(wrap, pNode){\r\n\t\t\t\t\t\t\t\tif(wrap){\r\n\t\t\t\t\t\t\t\t\twhile(pNode.firstChild){\r\n\t\t\t\t\t\t\t\t\t\twrap.appendChild(pNode.firstChild);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif(tag == \"span\" && !pNode.style.cssText){\r\n\t\t\t\t\t\t\t\t\t\t// A styler tag with nothing extra in it, so lets remove it.\r\n\t\t\t\t\t\t\t\t\t\tdojo.place(wrap, pNode, \"before\");\r\n\t\t\t\t\t\t\t\t\t\tpNode.parentNode.removeChild(pNode);\r\n\t\t\t\t\t\t\t\t\t\tpNode = wrap;\r\n\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\tpNode.appendChild(wrap);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn pNode;\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tswitch(fw){\r\n\t\t\t\t\t\t\t\tcase \"bold\":\r\n\t\t\t\t\t\t\t\tcase \"bolder\":\r\n\t\t\t\t\t\t\t\tcase \"700\":\r\n\t\t\t\t\t\t\t\tcase \"800\":\r\n\t\t\t\t\t\t\t\tcase \"900\":\r\n\t\t\t\t\t\t\t\t\tsTag = doc.createElement(\"b\");\r\n\t\t\t\t\t\t\t\t\tcNode.style.fontWeight = \"\";\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcNode = wrapNodes(sTag, cNode);\r\n\t\t\t\t\t\t\tsTag = null;\r\n\t\t\t\t\t\t\tif(fs == \"italic\"){\r\n\t\t\t\t\t\t\t\tsTag = doc.createElement(\"i\");\r\n\t\t\t\t\t\t\t\tcNode.style.fontStyle = \"\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcNode = wrapNodes(sTag, cNode);\r\n\t\t\t\t\t\t\tsTag = null;\r\n\t\t\t\t\t\t\tif(td){\r\n\t\t\t\t\t\t\t\tvar da = td.split(\" \");\r\n\t\t\t\t\t\t\t\tvar count = 0;\r\n\t\t\t\t\t\t\t\tdojo.forEach(da, function(s){\r\n\t\t\t\t\t\t\t\t\tswitch(s){\r\n\t\t\t\t\t\t\t\t\t\tcase \"underline\":\r\n\t\t\t\t\t\t\t\t\t\t\tsTag = doc.createElement(\"u\");\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase \"line-through\":\r\n\t\t\t\t\t\t\t\t\t\t\tsTag = doc.createElement(\"strike\");\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t\t\t\t\tif(count == da.length){\r\n\t\t\t\t\t\t\t\t\t\t// Last one, clear the decor and see if we can span strip on wrap.\r\n\t\t\t\t\t\t\t\t\t\tcNode.style.textDecoration = \"\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcNode = wrapNodes(sTag, cNode);\r\n\t\t\t\t\t\t\t\t\tsTag = null;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(s){\r\n\t\t\t\t\t\t\t\tvar sizeMap = {\r\n\t\t\t\t\t\t\t\t\t\"xx-small\": 1,\r\n\t\t\t\t\t\t\t\t\t\"x-small\": 2,\r\n\t\t\t\t\t\t\t\t\t\"small\": 3,\r\n\t\t\t\t\t\t\t\t\t\"medium\": 4,\r\n\t\t\t\t\t\t\t\t\t\"large\": 5,\r\n\t\t\t\t\t\t\t\t\t\"x-large\": 6,\r\n\t\t\t\t\t\t\t\t\t\"xx-large\": 7,\r\n\t\t\t\t\t\t\t\t\t\"-webkit-xxx-large\": 7\r\n\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t// Convert point or px size to size\r\n\t\t\t\t\t\t\t\t// to something roughly mappable.\r\n\t\t\t\t\t\t\t\tif(s.indexOf(\"pt\") > 0){\r\n\t\t\t\t\t\t\t\t\ts = s.substring(0,s.indexOf(\"pt\"));\r\n\t\t\t\t\t\t\t\t\ts = parseInt(s);\r\n\t\t\t\t\t\t\t\t\tif(s < 5){\r\n\t\t\t\t\t\t\t\t\t\ts = \"xx-small\";\r\n\t\t\t\t\t\t\t\t\t}else if(s < 10){\r\n\t\t\t\t\t\t\t\t\t\ts = \"x-small\";\r\n\t\t\t\t\t\t\t\t\t}else if(s < 15){\r\n\t\t\t\t\t\t\t\t\t\ts = \"small\";\r\n\t\t\t\t\t\t\t\t\t}else if(s < 20){\r\n\t\t\t\t\t\t\t\t\t\ts = \"medium\";\r\n\t\t\t\t\t\t\t\t\t}else if(s < 25){\r\n\t\t\t\t\t\t\t\t\t\ts = \"large\";\r\n\t\t\t\t\t\t\t\t\t}else if(s < 30){\r\n\t\t\t\t\t\t\t\t\t\ts = \"x-large\";\r\n\t\t\t\t\t\t\t\t\t}else if(s > 30){\r\n\t\t\t\t\t\t\t\t\t\ts = \"xx-large\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}else if(s.indexOf(\"px\") > 0){\r\n\t\t\t\t\t\t\t\t\ts = s.substring(0,s.indexOf(\"px\"));\r\n\t\t\t\t\t\t\t\t\ts = parseInt(s);\r\n\t\t\t\t\t\t\t\t\tif(s < 5){\r\n\t\t\t\t\t\t\t\t\t\ts = \"xx-small\";\r\n\t\t\t\t\t\t\t\t\t}else if(s < 10){\r\n\t\t\t\t\t\t\t\t\t\ts = \"x-small\";\r\n\t\t\t\t\t\t\t\t\t}else if(s < 15){\r\n\t\t\t\t\t\t\t\t\t\ts = \"small\";\r\n\t\t\t\t\t\t\t\t\t}else if(s < 20){\r\n\t\t\t\t\t\t\t\t\t\ts = \"medium\";\r\n\t\t\t\t\t\t\t\t\t}else if(s < 25){\r\n\t\t\t\t\t\t\t\t\t\ts = \"large\";\r\n\t\t\t\t\t\t\t\t\t}else if(s < 30){\r\n\t\t\t\t\t\t\t\t\t\ts = \"x-large\";\r\n\t\t\t\t\t\t\t\t\t}else if(s > 30){\r\n\t\t\t\t\t\t\t\t\t\ts = \"xx-large\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvar size = sizeMap[s];\r\n\t\t\t\t\t\t\t\tif(!size){\r\n\t\t\t\t\t\t\t\t\tsize = 3;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tsTag = doc.createElement(\"font\");\r\n\t\t\t\t\t\t\t\tsTag.setAttribute(\"size\", size);\r\n\t\t\t\t\t\t\t\tcNode.style.fontSize = \"\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcNode = wrapNodes(sTag, cNode);\r\n\t\t\t\t\t\t\tsTag = null;\r\n\t\t\t\t\t\t\tif(bc && tag !== \"font\" && self._isInline(tag)){\r\n\t\t\t\t\t\t\t\t// IE doesn't like non-font background color crud.\r\n\t\t\t\t\t\t\t\t// Also, don't move it in if the background color is set on a block style node,\r\n\t\t\t\t\t\t\t\t// as it won't color properly once put on inline font.\r\n\t\t\t\t\t\t\t\tbc = new dojo.Color(bc).toHex();\r\n\t\t\t\t\t\t\t\tsTag = doc.createElement(\"font\");\r\n\t\t\t\t\t\t\t\tsTag.style.backgroundColor = bc;\r\n\t\t\t\t\t\t\t\tcNode.style.backgroundColor = \"\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(c && tag !== \"font\"){\r\n\t\t\t\t\t\t\t\t// IE doesn't like non-font background color crud.\r\n\t\t\t\t\t\t\t\tc = new dojo.Color(c).toHex();\r\n\t\t\t\t\t\t\t\tsTag = doc.createElement(\"font\");\r\n\t\t\t\t\t\t\t\tsTag.setAttribute(\"color\", c);\r\n\t\t\t\t\t\t\t\tcNode.style.color = \"\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcNode = wrapNodes(sTag, cNode);\r\n\t\t\t\t\t\t\tsTag = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(cNode.childNodes){\r\n\t\t\t\t\t\t// Clone it, since we may alter its position\r\n\t\t\t\t\t\tvar nodes = [];\r\n\t\t\t\t\t\tdojo.forEach(cNode.childNodes, function(n){ nodes.push(n);});\r\n\t\t\t\t\t\tdojo.forEach(nodes, convertNode);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn cNode;\r\n\t\t\t};\r\n\t\t\treturn this._normalizeTags(convertNode(node));\r\n\t\t}\r\n\t\treturn node;\r\n\t},\r\n\t\r\n\t_normalizeTags: function(node){\r\n\t\t// summary:\r\n\t\t//\t\tA function to handle normalizing certain tag types contained under 'node'\r\n\t\t// node:\r\n\t\t//\t\tThe node to search from.\r\n\t\t// tags:\r\n\t\t//\t\tProtected.\r\n\t\tvar w = this.editor.window;\r\n\t\tvar doc = this.editor.document;\r\n\t\tdojo.query(\"em,s,strong\", node).forEach(function(n){\r\n\t\t\tvar tag = n.tagName?n.tagName.toLowerCase():\"\";\r\n\t\t\tvar tTag;\r\n\t\t\tswitch(tag){\r\n\t\t\t\tcase \"s\":\r\n\t\t\t\t\t\ttTag = \"strike\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"em\":\r\n\t\t\t\t\t\ttTag = \"i\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"strong\":\r\n\t\t\t\t\t\ttTag = \"b\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(tTag){\r\n\t\t\t\tvar nNode = doc.createElement(tTag);\r\n\t\t\t\tdojo.place(\"<\"+tTag+\">\", n, \"before\");\r\n\t\t\t\twhile(n.firstChild){\r\n\t\t\t\t\tnNode.appendChild(n.firstChild);\r\n\t\t\t\t}\r\n\t\t\t\tn.parentNode.removeChild(n);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn node;\r\n\t},\r\n\r\n\t_convertToCss: function(node){\r\n\t\t// summary:\r\n\t\t//\t\tA function to convert the HTML structure of 'node' into\r\n\t\t//\t\tcss span styles around text instead of semantic tags.\r\n\t\t//\t\tNote:  It does not do compression of spans together.\r\n\t\t// node: DOMNode\r\n\t\t//\t\tThe node to process\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tif(node){\r\n\t\t\tvar doc = this.editor.document;\r\n\t\t\tvar convertNode = function(cNode) {\r\n\t\t\t\tif(cNode.nodeType == 1){\r\n\t\t\t\t\tif(cNode.id !== \"dijitEditorBody\"){\r\n\t\t\t\t\t\tvar tag = cNode.tagName?cNode.tagName.toLowerCase():\"\";\r\n\t\t\t\t\t\tif(tag){\r\n\t\t\t\t\t\t\tvar span;\r\n\t\t\t\t\t\t\tswitch(tag){\r\n\t\t\t\t\t\t\t\tcase \"b\":\r\n\t\t\t\t\t\t\t\tcase \"strong\": // Mainly IE\r\n\t\t\t\t\t\t\t\t\tspan = doc.createElement(\"span\");\r\n\t\t\t\t\t\t\t\t\tspan.style.fontWeight = \"bold\";\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"i\":\r\n\t\t\t\t\t\t\t\tcase \"em\": // Mainly IE\r\n\t\t\t\t\t\t\t\t\tspan = doc.createElement(\"span\");\r\n\t\t\t\t\t\t\t\t\tspan.style.fontStyle = \"italic\";\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"u\":\r\n\t\t\t\t\t\t\t\t\tspan = doc.createElement(\"span\");\r\n\t\t\t\t\t\t\t\t\tspan.style.textDecoration = \"underline\";\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"strike\":\r\n\t\t\t\t\t\t\t\tcase \"s\": // Mainly WebKit.\r\n\t\t\t\t\t\t\t\t\tspan = doc.createElement(\"span\");\r\n\t\t\t\t\t\t\t\t\tspan.style.textDecoration = \"line-through\";\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"font\": // Try to deal with colors\r\n\t\t\t\t\t\t\t\t\tvar styles = {};\r\n\t\t\t\t\t\t\t\t\tif(dojo.attr(cNode, \"color\")){\r\n\t\t\t\t\t\t\t\t\t\tstyles.color = dojo.attr(cNode, \"color\");\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif(dojo.attr(cNode, \"face\")){\r\n\t\t\t\t\t\t\t\t\t\tstyles.fontFace = dojo.attr(cNode, \"face\");\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif(cNode.style && cNode.style.backgroundColor){\r\n\t\t\t\t\t\t\t\t\t\tstyles.backgroundColor = cNode.style.backgroundColor;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif(cNode.style && cNode.style.color){\r\n\t\t\t\t\t\t\t\t\t\tstyles.color = cNode.style.color;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tvar sizeMap = {\r\n\t\t\t\t\t\t\t\t\t\t1: \"xx-small\",\r\n\t\t\t\t\t\t\t\t\t\t2: \"x-small\",\r\n\t\t\t\t\t\t\t\t\t\t3: \"small\",\r\n\t\t\t\t\t\t\t\t\t\t4: \"medium\",\r\n\t\t\t\t\t\t\t\t\t\t5: \"large\",\r\n\t\t\t\t\t\t\t\t\t\t6: \"x-large\",\r\n\t\t\t\t\t\t\t\t\t\t7: \"xx-large\"\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\tif(dojo.attr(cNode, \"size\")){\r\n\t\t\t\t\t\t\t\t\t\tstyles.fontSize = sizeMap[dojo.attr(cNode, \"size\")];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tspan = doc.createElement(\"span\");\r\n\t\t\t\t\t\t\t\t\tdojo.style(span, styles);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(span){\r\n\t\t\t\t\t\t\t\twhile(cNode.firstChild){\r\n\t\t\t\t\t\t\t\t\tspan.appendChild(cNode.firstChild);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tdojo.place(span, cNode, \"before\");\r\n\t\t\t\t\t\t\t\tcNode.parentNode.removeChild(cNode);\r\n\t\t\t\t\t\t\t\tcNode = span;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(cNode.childNodes){\r\n\t\t\t\t\t\t// Clone it, since we may alter its position\r\n\t\t\t\t\t\tvar nodes = [];\r\n\t\t\t\t\t\tdojo.forEach(cNode.childNodes, function(n){ nodes.push(n);});\r\n\t\t\t\t\t\tdojo.forEach(nodes, convertNode);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn cNode;\r\n\t\t\t};\r\n\t\t\tnode = convertNode(node);\r\n\t\t\tif(this.condenseSpans){\r\n\t\t\t\tthis._condenseSpans(node);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn node;\r\n\t},\r\n\r\n\t_condenseSpans: function(node){\r\n\t\t// summary:\r\n\t\t//\t\tMethod to condense spans if you end up with multi-wrapping from\r\n\t\t//\t\tfrom converting b, i, u, to span nodes.\r\n\t\t// node:\r\n\t\t//\t\tThe node (and its children), to process.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar compressSpans = function(node){\r\n\t\t\t// Okay, span with no class or id and it has styles.\r\n\t\t\t// So, merge the styles, then collapse.  Merge requires determining\r\n\t\t\t// all the common/different styles and anything that overlaps the style,\r\n\t\t\t// but a different value can't be merged.\r\n\t\t\tvar genStyleMap = function(styleText){\r\n\t\t\t\tvar m;\r\n\t\t\t\tif(styleText){\r\n\t\t\t\t\tm = {};\r\n\t\t\t\t\tvar styles = styleText.toLowerCase().split(\";\");\r\n\t\t\t\t\tdojo.forEach(styles, function(s){\r\n\t\t\t\t\t\tif(s){\r\n\t\t\t\t\t\t\tvar ss = s.split(\":\");\r\n\t\t\t\t\t\t\tvar key = ss[0] ? dojo.trim(ss[0]): \"\";\r\n\t\t\t\t\t\t\tvar val = ss[1] ? dojo.trim(ss[1]): \"\";\r\n\t\t\t\t\t\t\tif(key && val){\r\n\t\t\t\t\t\t\t\tvar i;\r\n\t\t\t\t\t\t\t\tvar nKey = \"\";\r\n\t\t\t\t\t\t\t\tfor(i = 0; i < key.length; i++){\r\n\t\t\t\t\t\t\t\t\tvar ch = key.charAt(i);\r\n\t\t\t\t\t\t\t\t\tif(ch == \"-\"){\r\n\t\t\t\t\t\t\t\t\t\ti++;\r\n\t\t\t\t\t\t\t\t\t\tch = key.charAt(i);\r\n\t\t\t\t\t\t\t\t\t\tnKey += ch.toUpperCase();\r\n\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\tnKey += ch;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tm[nKey] = val;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\treturn m;\r\n\t\t\t};\r\n\t\t\tif(node && node.nodeType == 1){\r\n\t\t\t\tvar tag = node.tagName? node.tagName.toLowerCase() : \"\";\r\n\t\t\t\tif(tag === \"span\" && node.childNodes && node.childNodes.length === 1){\r\n\t\t\t\t\t// Okay, a possibly compressible span\r\n\t\t\t\t\tvar c = node.firstChild;\r\n\t\t\t\t\twhile(c && c.nodeType == 1 && c.tagName && c.tagName.toLowerCase() == \"span\"){\r\n\t\t\t\t\t\tif(!dojo.attr(c, \"class\") && !dojo.attr(c, \"id\") && c.style){\r\n\t\t\t\t\t\t\tvar s1 = genStyleMap(node.style.cssText);\r\n\t\t\t\t\t\t\tvar s2 = genStyleMap(c.style.cssText);\r\n\t\t\t\t\t\t\tif(s1 && s2){\r\n\t\t\t\t\t\t\t\t// Maps, so lets see if we can combine them.\r\n\t\t\t\t\t\t\t\tvar combinedMap = {};\r\n\t\t\t\t\t\t\t\tvar i;\r\n\t\t\t\t\t\t\t\tfor(i in s1){\r\n\t\t\t\t\t\t\t\t\tif(!s1[i] || !s2[i] || s1[i] == s2[i]){\r\n\t\t\t\t\t\t\t\t\t\tcombinedMap[i] = s1[i];\r\n\t\t\t\t\t\t\t\t\t\tdelete s2[i];\r\n\t\t\t\t\t\t\t\t\t}else if(s1[i] != s2[i]){\r\n\t\t\t\t\t\t\t\t\t\t// Collision, cannot merge.\r\n\t\t\t\t\t\t\t\t\t\t// IE does not handle combined underline strikethrough text\r\n\t\t\t\t\t\t\t\t\t\t// decorations on a single span.\r\n\t\t\t\t\t\t\t\t\t\tif(i == \"textDecoration\"){\r\n\t\t\t\t\t\t\t\t\t\t\tcombinedMap[i] = s1[i] + \" \" + s2[i];\r\n\t\t\t\t\t\t\t\t\t\t\tdelete s2[i];\r\n\t\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t\tcombinedMap = null;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\tcombinedMap = null;\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(combinedMap){\r\n\t\t\t\t\t\t\t\t\tfor(i in s2){\r\n\t\t\t\t\t\t\t\t\t\tcombinedMap[i] = s2[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tdojo.style(node, combinedMap);\r\n\t\t\t\t\t\t\t\t\twhile(c.firstChild){\r\n\t\t\t\t\t\t\t\t\t\tnode.appendChild(c.firstChild);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tvar t = c.nextSibling;\r\n\t\t\t\t\t\t\t\t\tc.parentNode.removeChild(c);\r\n\t\t\t\t\t\t\t\t\tc = t;\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\tc = c.nextSibling;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tc = c.nextSibling;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tc = c.nextSibling;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(node.childNodes && node.childNodes.length){\r\n\t\t\t\tdojo.forEach(node.childNodes, compressSpans);\r\n\t\t\t}\r\n\t\t};\r\n\t\tcompressSpans(node);\r\n\t},\r\n\t\r\n\t_isInline: function(tag){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to determine if the current tag is an inline\r\n\t\t//\t\telement that does formatting, as we don't want to\r\n\t\t//\t\ttry to combine inlines with divs on styles.\r\n\t\t// tag:\r\n\t\t//\t\tThe tag to examine\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tswitch(tag){\r\n\t\t\tcase \"a\":\r\n\t\t\tcase \"b\":\r\n\t\t\tcase \"strong\":\r\n\t\t\tcase \"s\":\r\n\t\t\tcase \"strike\":\r\n\t\t\tcase \"i\":\r\n\t\t\tcase \"u\":\r\n\t\t\tcase \"em\":\r\n\t\t\tcase \"sup\":\r\n\t\t\tcase \"sub\":\r\n\t\t\tcase \"span\":\r\n\t\t\tcase \"font\":\r\n\t\t\tcase \"big\":\r\n\t\t\tcase \"cite\":\r\n\t\t\tcase \"q\":\r\n\t\t\tcase \"img\":\r\n\t\t\tcase \"small\":\r\n\t\t\t\treturn true;\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t},\r\n\r\n\t_inserthtmlImpl: function(html){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to trap and over-ride the editor inserthtml implementation\r\n\t\t//\t\tto try and filter it to match the editor's internal styling mode.\r\n\t\t//\t\tHelpful for plugins like PasteFromWord, in that it extra-filters\r\n\t\t//\t\tand normalizes the input if it can.\r\n\t\t// html:\r\n\t\t//\t\tThe HTML string to insert.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tif(html){\r\n\t\t\tvar doc = this.editor.document;\r\n\t\t\tvar div = doc.createElement(\"div\");\r\n\t\t\tdiv.innerHTML = html;\r\n\t\t\tdiv = this._browserFilter(div);\r\n\t\t\thtml = editorHtml.getChildrenHtml(div);\r\n\t\t\tdiv.innerHTML = \"\";\r\n\r\n\t\t\t// Call the over-ride, or if not available, just execute it.\r\n\t\t\tif(this.editor._oldInsertHtmlImpl){\r\n\t\t\t\treturn this.editor._oldInsertHtmlImpl(html);\r\n\t\t\t}else{\r\n\t\t\t\treturn this.editor.execCommand(\"inserthtml\", html);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n});\r\n\r\n// Register this plugin.\r\ndojo.subscribe(dijit._scopeName + \".Editor.getPlugin\",null,function(o){\r\n\tif(o.plugin){ return; }\r\n\tvar name = o.args.name.toLowerCase();\r\n\tif(name === \"normalizestyle\"){\r\n\t\to.plugin = new NormalizeStyle({\r\n\t\t\tmode: (\"mode\" in o.args)?o.args.mode:\"semantic\",\r\n\t\t\tcondenseSpans: (\"condenseSpans\" in o.args)?o.args.condenseSpans:true\r\n\t\t});\r\n\t}\r\n});\r\n\r\nreturn NormalizeStyle;\r\n\r\n});\r\n"]}