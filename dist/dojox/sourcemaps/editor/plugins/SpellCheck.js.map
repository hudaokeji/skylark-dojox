{"version":3,"sources":["editor/plugins/SpellCheck.js"],"names":["define","dojo","dijit","script","popup","_Widget","_Templated","_Plugin","experimental","SpellCheckControl","declare","widgetsInTemplate","templateString","constructor","this","ignoreChange","isChanged","isOpen","closable","postMixInProperties","id","getUniqueId","declaredClass","replace","textId","selectId","postCreate","select","suggestionSelect","removeAttr","domNode","addItems","items","_this","o","length","forEach","item","i","create","innerHTML","value","selected","removeItems","empty","deselectAll","containerNode","selectedIndex","connect","unfoundTextBox","skipButton","skipAllButton","toDicButton","replaceButton","replaceAllButton","cancelButton","onSkip","onSkipAll","onAddToDic","onReplace","onReplaceAll","onCancel","onEnter","focus","_cancel","evt","keyCode","keys","ESCAPE","stopEvent","_enter","ENTER","_unfoundTextBoxChange","byId","_setUnfoundWordAttr","set","_getUnfoundWordAttr","get","_setSuggestionListAttr","values","_getSelectedWordAttr","getSelected","_setDisabledAttr","disabled","_setInProgressAttr","show","toggleClass","SpellCheckScriptMultiPart","ACTION_QUERY","ACTION_UPDATE","callbackHandle","maxBufferLength","delimiter","label","_timeout","SEC","serviceEndPoint","_queue","isWorking","exArgs","_counter","send","content","action","dt","mbl","callbackParamName","comms","timeout","l","r","_result","batchSend","plan","plannedSize","len","charAt","push","index","jsonpArgs","url","handle","response","ioArgs","size","Error","isArray","offset","number","_finalizeCollection","shift","mixin","substring","io","result","temp","concat","onLoad","data","setWaitingTime","seconds","SpellCheck","bufferLength","interactive","button","_editor","_cursorSpan","_cursorSelector","_incorrectWordsSpan","_ignoredIncorrectStyle","cursor","borderBottom","backgroundColor","_normalIncorrectStyle","_highlightedIncorrectStyle","_selector","_maxItemNumber","_spanList","_cache","_enabled","_iterator","setEditor","editor","_initButton","_setNetwork","_connectUp","strings","_strings","i18n","getLocalization","dialogPane","_dialog","TooltipDialog","_dialogContent","unfound","skip","skipAll","toDic","suggestions","replaceWith","replaceAll","cancel","form","DropDownButton","showLabel","iconClass","dropDown","closeDropDown","isIE","pos","list","style","_opened","close","state","setAttribute","_service","service","name","cont","contentPostFilters","_spellCheckFilter","publish","_scopeName","parser","console","error","_disabled","_submitContent","_keyPress","cc","charCode","altKey","SPACE","ctrlKey","_loadData","cache","html","d","text","suggestion","correct","_markIncorrectWords","_skip","_openDialog","noUpdate","iter","_skipWord","edited","_populateDialog","_selectWord","setTimeout","isWebKit","_skipAll","_skipWordAll","_add","_addWord","_replace","targetWord","_replaceWord","_replaceAll","word","toLowerCase","_query","words","parseIntoWords","_html2Text","join","isTag","_getBookmark","eValue","ed","cp","execCommand","nv","indexOf","_moveToBookmark","cps","query","document","cursorSpan","_sCall","parent","parentNode","removeChild","delay","_delayHandler","clearTimeout","spanString","nstyle","selector","indices","getIndices","bookmark","bmpos","spanOffset","bmMarked","cArray","split","spanList","end","splice","string","substitute","tmp","_cursorToStart","span","_contextMenu","uninitialize","Menu","targetNodeIds","iframe","bindDomNode","node","cn","tagName","_iframeContentWindow","body","doc","documentElement","binding","attr","_bindings","doConnects","hitch","leftClickToOpen","target","hasClass","maxNumber","slen","destroyDescendants","addChild","MenuItem","onClick","idx","txt","MenuSeparator","_scheduleOpen","x","pageX","y","pageY","shiftKey","F10","connects","onloadHandler","addEventListener","attachEvent","_findText","caseSensitive","backwards","win","window","found","find","selection","txtRg","createTextRange","curPos","createRange","setEndPoint","flags","findText","_SpellCheckControl","_SpellCheckScriptMultiPart","subscribe","plugin","args"],"mappings":"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","file":"../../../editor/plugins/SpellCheck.js","sourcesContent":["define([\r\n\t\"dojo\",\r\n\t\"dijit\",\r\n\t\"dojo/io/script\",\r\n\t\"dijit/popup\",\r\n\t\"dijit/_Widget\",\r\n\t\"dijit/_Templated\",\r\n\t\"dijit/_editor/_Plugin\",\r\n\t\"dijit/form/TextBox\",\r\n\t\"dijit/form/DropDownButton\",\r\n\t\"dijit/TooltipDialog\",\r\n\t\"dijit/form/MultiSelect\",\r\n\t\"dijit/Menu\",\r\n\t\"dojo/i18n!dojox/editor/plugins/nls/SpellCheck\"\r\n], function(dojo, dijit, script, popup, _Widget, _Templated, _Plugin){\r\n\r\ndojo.experimental(\"dojox.editor.plugins.SpellCheck\");\r\n\r\nvar SpellCheckControl = dojo.declare(\"dojox.editor.plugins._spellCheckControl\", [_Widget, _Templated], {\r\n\t// summary:\r\n\t//\t\tThe widget that is used for the UI of the batch spelling check\r\n\r\n\twidgetsInTemplate: true,\r\n\r\n\ttemplateString:\r\n\t\t\"<table role='presentation' class='dijitEditorSpellCheckTable'>\" +\r\n\t\t\t\"<tr><td colspan='3' class='alignBottom'><label for='${textId}' id='${textId}_label'>${unfound}</label>\" +\r\n\t\t\t\t\"<div class='dijitEditorSpellCheckBusyIcon' id='${id}_progressIcon'></div></td></tr>\" +\r\n\t\t\t\"<tr>\" +\r\n\t\t\t\t\"<td class='dijitEditorSpellCheckBox'><input dojoType='dijit.form.TextBox' required='false' intermediateChanges='true' \" +\r\n\t\t\t\t\t\"class='dijitEditorSpellCheckBox' dojoAttachPoint='unfoundTextBox' id='${textId}'/></td>\" +\r\n\t\t\t\t\"<td><button dojoType='dijit.form.Button' class='blockButton' dojoAttachPoint='skipButton'>${skip}</button></td>\" +\r\n\t\t\t\t\"<td><button dojoType='dijit.form.Button' class='blockButton' dojoAttachPoint='skipAllButton'>${skipAll}</button></td>\" +\r\n\t\t\t\"</tr>\" +\r\n\t\t\t\"<tr>\" +\r\n\t\t\t\t\"<td class='alignBottom'><label for='${selectId}'>${suggestions}</td></label>\" +\r\n\t\t\t\t\"<td colspan='2'><button dojoType='dijit.form.Button' class='blockButton' dojoAttachPoint='toDicButton'>${toDic}</button></td>\" +\r\n\t\t\t\"</tr>\" +\r\n\t\t\t\"<tr>\" +\r\n\t\t\t\t\"<td>\" +\r\n\t\t\t\t\t\"<select dojoType='dijit.form.MultiSelect' id='${selectId}' \" +\r\n\t\t\t\t\t\t\"class='dijitEditorSpellCheckBox listHeight' dojoAttachPoint='suggestionSelect'></select>\" +\r\n\t\t\t\t\"</td>\" +\r\n\t\t\t\t\"<td colspan='2'>\" +\r\n\t\t\t\t\t\"<button dojoType='dijit.form.Button' class='blockButton' dojoAttachPoint='replaceButton'>${replace}</button>\" +\r\n\t\t\t\t\t\"<div class='topMargin'><button dojoType='dijit.form.Button' class='blockButton' \" +\r\n\t\t\t\t\t\t\"dojoAttachPoint='replaceAllButton'>${replaceAll}</button><div>\" +\r\n\t\t\t\t\"</td>\" +\r\n\t\t\t\"</tr>\" +\r\n\t\t\t\"<tr>\" +\r\n\t\t\t\t\"<td><div class='topMargin'><button dojoType='dijit.form.Button' dojoAttachPoint='cancelButton'>${cancel}</button></div></td>\" +\r\n\t\t\t\t\"<td></td>\" +\r\n\t\t\t\t\"<td></td>\" +\r\n\t\t\t\"</tr>\" +\r\n\t\t\"</table>\",\r\n\r\n\t/*************************************************************************/\r\n\t/**                      Framework Methods                              **/\r\n\t/*************************************************************************/\r\n\tconstructor: function(){\r\n\t\t// Indicate if the textbox ignores the text change event of the textbox\r\n\t\tthis.ignoreChange = false;\r\n\t\t// Indicate if the text of the textbox is changed or not\r\n\t\tthis.isChanged = false;\r\n\t\t// Indicate if the dialog is open or not\r\n\t\tthis.isOpen = false;\r\n\t\t// Indicate if the dialog can be closed\r\n\t\tthis.closable = true;\r\n\t},\r\n\r\n\tpostMixInProperties: function(){\r\n\t\tthis.id = dijit.getUniqueId(this.declaredClass.replace(/\\./g,\"_\"));\r\n\t\tthis.textId = this.id + \"_textBox\";\r\n\t\tthis.selectId = this.id + \"_select\";\r\n\t},\r\n\r\n\tpostCreate: function(){\r\n\t\tvar select = this.suggestionSelect;\r\n\r\n\t\t// Customize multi-select to single select\r\n\t\tdojo.removeAttr(select.domNode, \"multiple\");\r\n\t\tselect.addItems = function(/*Array*/ items){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdd items to the select widget\r\n\t\t\t// items:\r\n\t\t\t//\t\tAn array of items be added to the select\r\n\t\t\t// tags:\r\n\t\t\t//\t\tpublic\r\n\t\t\tvar _this = this;\r\n\t\t\tvar o = null;\r\n\t\t\tif(items && items.length > 0){\r\n\t\t\t\tdojo.forEach(items, function(item, i){\r\n\t\t\t\t\to = dojo.create(\"option\", {innerHTML: item, value: item}, _this.domNode);\r\n\t\t\t\t\tif(i == 0){\r\n\t\t\t\t\t\to.selected = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t\tselect.removeItems = function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRemove all the items within the select widget\r\n\t\t\t// tags:\r\n\t\t\t//\t\tpublic\r\n\t\t\tdojo.empty(this.domNode);\r\n\t\t};\r\n\r\n\t\tselect.deselectAll = function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDe-select all the selected items\r\n\t\t\t// tags:\r\n\t\t\t//\t\tpublic\r\n\t\t\tthis.containerNode.selectedIndex = -1;\r\n\t\t};\r\n\r\n\t\t// Connect up all the controls with their event handler\r\n\t\tthis.connect(this, \"onKeyPress\", \"_cancel\");\r\n\t\tthis.connect(this.unfoundTextBox, \"onKeyPress\", \"_enter\");\r\n\t\tthis.connect(this.unfoundTextBox, \"onChange\", \"_unfoundTextBoxChange\");\r\n\t\tthis.connect(this.suggestionSelect, \"onKeyPress\", \"_enter\");\r\n\t\tthis.connect(this.skipButton, \"onClick\", \"onSkip\");\r\n\t\tthis.connect(this.skipAllButton, \"onClick\", \"onSkipAll\");\r\n\t\tthis.connect(this.toDicButton, \"onClick\", \"onAddToDic\");\r\n\t\tthis.connect(this.replaceButton, \"onClick\", \"onReplace\");\r\n\t\tthis.connect(this.replaceAllButton, \"onClick\", \"onReplaceAll\");\r\n\t\tthis.connect(this.cancelButton, \"onClick\", \"onCancel\");\r\n\t},\r\n\r\n\t/*************************************************************************/\r\n\t/**                      Public Methods                                 **/\r\n\t/*************************************************************************/\r\n\r\n\tonSkip: function(){\r\n\t\t// Stub for the click event of the skip button.\r\n\t},\r\n\r\n\tonSkipAll: function(){\r\n\t\t// Stub for the click event of the skipAll button.\r\n\t},\r\n\r\n\tonAddToDic: function(){\r\n\t\t// Stub for the click event of the toDic button.\r\n\t},\r\n\r\n\tonReplace: function(){\r\n\t\t// Stub for the click event of the replace button.\r\n\t},\r\n\r\n\tonReplaceAll: function(){\r\n\t\t// Stub for the click event of the replaceAll button.\r\n\t},\r\n\r\n\tonCancel: function(){\r\n\t\t// Stub for the click event of the cancel button.\r\n\t},\r\n\r\n\tonEnter: function(){\r\n\t\t// Stub for the enter event of the unFound textbox.\r\n\t},\r\n\r\n\tfocus: function(){\r\n\t\t// summary:\r\n\t\t//\t\tSet the focus of the control\r\n\t\t// tags:\r\n\t\t//\t\tpublic\r\n\t\tthis.unfoundTextBox.focus();\r\n\t},\r\n\r\n\t/*************************************************************************/\r\n\t/**                      Private Methods                                **/\r\n\t/*************************************************************************/\r\n\r\n\t_cancel: function(/*Event*/ evt){\r\n\t\t// summary:\r\n\t\t//\t\tHandle the cancel event\r\n\t\t// evt:\r\n\t\t//\t\tThe event object\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tif(evt.keyCode == dojo.keys.ESCAPE){\r\n\t\t\tthis.onCancel();\r\n\t\t\tdojo.stopEvent(evt);\r\n\t\t}\r\n\t},\r\n\r\n\t_enter: function(/*Event*/ evt){\r\n\t\t// summary:\r\n\t\t//\t\tHandle the enter event\r\n\t\t// evt:\r\n\t\t//\t\tThe event object\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tif(evt.keyCode == dojo.keys.ENTER){\r\n\t\t\tthis.onEnter();\r\n\t\t\tdojo.stopEvent(evt);\r\n\t\t}\r\n\t},\r\n\r\n\t_unfoundTextBoxChange: function(){\r\n\t\t// summary:\r\n\t\t//\t\tIndicate that the Not Found textbox is changed or not\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar id = this.textId + \"_label\";\r\n\t\tif(!this.ignoreChange){\r\n\t\t\tdojo.byId(id).innerHTML = this[\"replaceWith\"];\r\n\t\t\tthis.isChanged = true;\r\n\t\t\tthis.suggestionSelect.deselectAll();\r\n\t\t}else{\r\n\t\t\tdojo.byId(id).innerHTML = this[\"unfound\"];\r\n\t\t}\r\n\t},\r\n\r\n\t_setUnfoundWordAttr: function(/*String*/ value){\r\n\t\t// summary:\r\n\t\t//\t\tSet the value of the Not Found textbox\r\n\t\t// value:\r\n\t\t//\t\tThe value of the Not Found textbox\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvalue = value || \"\";\r\n\t\tthis.unfoundTextBox.set(\"value\", value);\r\n\t},\r\n\r\n\t_getUnfoundWordAttr: function(){\r\n\t\t// summary:\r\n\t\t//\t\tGet the value of the Not Found textbox\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\treturn this.unfoundTextBox.get(\"value\");\r\n\t},\r\n\r\n\t_setSuggestionListAttr: function(/*Array*/ values){\r\n\t\t// summary:\r\n\t\t//\t\tSet the items of the suggestion list\r\n\t\t// values:\r\n\t\t//\t\tThe list of the suggestion items\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar select = this.suggestionSelect;\r\n\t\tvalues = values || [];\r\n\t\tselect.removeItems();\r\n\t\tselect.addItems(values);\r\n\t},\r\n\r\n\t_getSelectedWordAttr: function(){\r\n\t\t// summary:\r\n\t\t//\t\tGet the suggested word.\r\n\t\t//\t\tIf the select box is selected, the value is the selected item's value,\r\n\t\t//\t\telse the value the the textbox's value\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar selected = this.suggestionSelect.getSelected();\r\n\t\tif(selected && selected.length > 0){\r\n\t\t\treturn selected[0].value;\r\n\t\t}else{\r\n\t\t\treturn this.unfoundTextBox.get(\"value\");\r\n\t\t}\r\n\t},\r\n\r\n\t_setDisabledAttr: function(/*Boolean*/ disabled){\r\n\t\t// summary:\r\n\t\t//\t\tEnable/disable the control\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tthis.skipButton.set(\"disabled\", disabled);\r\n\t\tthis.skipAllButton.set(\"disabled\", disabled);\r\n\t\tthis.toDicButton.set(\"disabled\", disabled);\r\n\t\tthis.replaceButton.set(\"disabled\", disabled);\r\n\t\tthis.replaceAllButton.set(\"disabled\", disabled);\r\n\t},\r\n\r\n\t_setInProgressAttr: function(/*Boolean*/ show){\r\n\t\t// summary:\r\n\t\t//\t\tSet the visibility of the progress icon\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar id = this.id + \"_progressIcon\";\r\n\t\tdojo.toggleClass(id, \"hidden\", !show);\r\n\t}\r\n});\r\n\r\nvar SpellCheckScriptMultiPart = dojo.declare(\"dojox.editor.plugins._SpellCheckScriptMultiPart\", null, {\r\n\t// summary:\r\n\t//\t\tIt is a base network service component. It transfers text to a remote service port\r\n\t//\t\twith cross domain ability enabled. It can split text into specified pieces and send\r\n\t//\t\tthem out one by one so that it can handle the case when the service has a limitation of\r\n\t//\t\tthe capability.\r\n\t//\t\tThe encoding is UTF-8.\r\n\r\n\t// ACTION [public const] String\r\n\t//\t\tActions for the server-side piece to take\r\n\tACTION_QUERY: \"query\",\r\n\tACTION_UPDATE: \"update\",\r\n\r\n\t// callbackHandle [public] String\r\n\t//\t\tThe callback name of JSONP\r\n\tcallbackHandle: \"callback\",\r\n\r\n\t// maxBufferLength [public] Number\r\n\t//\t\tThe max number of characters that send to the service at one time.\r\n\tmaxBufferLength: 100,\r\n\r\n\t// delimiter [public] String\r\n\t//\t\tA token that is used to identify the end of a word (a complete unit). It prevents the service from\r\n\t//\t\tcutting a single word into two parts. For example:\r\n\t// |\t\t\"Dojo toolkit is a ajax framework. It helps the developers buid their web applications.\"\r\n\t//\t\tWithout the delimiter, the sentence might be split into the follow pieces which is absolutely\r\n\t//\t\tnot the result we want.\r\n\t// |\t\t\"Dojo toolkit is a ajax fram\", \"ework It helps the developers bu\", \"id their web applications\"\r\n\t//\t\tHaving \" \" as the delimiter, we get the following correct pieces.\r\n\t// |\t\t\"Dojo toolkit is a ajax framework\", \" It helps the developers buid\", \" their web applications\"\r\n\tdelimiter: \" \",\r\n\r\n\t// label [public] String\r\n\t//\t\tThe leading label of the JSON response. The service will return the result like this:\r\n\t// |\t{response: [\r\n\t// |\t\t{\r\n\t// |\t\t\ttext: \"teest\",\r\n\t// |\t\t\tsuggestion: [\"test\",\"treat\"]\r\n\t// |\t\t}\r\n\t// |\t]}\r\n\tlabel: \"response\",\r\n\r\n\t// _timeout: [private] Number\r\n\t//\t\tSet JSONP timeout period\r\n\t_timeout: 30000,\r\n\tSEC: 1000,\r\n\r\n\tconstructor: function(){\r\n\t\t// The URL of the target service\r\n\t\tthis.serviceEndPoint = \"\";\r\n\t\t// The queue that holds all the xhr request\r\n\t\tthis._queue = [];\r\n\t\t// Indicate if the component is still working. For example, waiting for collecting all\r\n\t\t// the responses from the service\r\n\t\tthis.isWorking = false;\r\n\t\t// The extra command passed to the service\r\n\t\tthis.exArgs = null;\r\n\t\t// The counter that indicate if all the responses are collected to\r\n\t\t// assemble the final result.\r\n\t\tthis._counter = 0;\r\n\t},\r\n\r\n\tsend: function(/*String*/ content, /*String?*/ action){\r\n\t\t// summary:\r\n\t\t//\t\tSend the content to the service port with the specified action\r\n\t\t// content:\r\n\t\t//\t\tThe text to be sent\r\n\t\t// action:\r\n\t\t//\t\tThe action the service should take. Current support actions are\r\n\t\t//\t\tACTION_QUERY and ACTION_UPDATE\r\n\t\t// tags:\r\n\t\t//\t\tpublic\r\n\t\tvar _this = this,\r\n\t\t\tdt = this.delimiter,\r\n\t\t\tmbl = this.maxBufferLength,\r\n\t\t\tlabel = this.label,\r\n\t\t\tserviceEndPoint = this.serviceEndPoint,\r\n\t\t\tcallbackParamName = this.callbackHandle,\r\n\t\t\tcomms = this.exArgs,\r\n\t\t\ttimeout = this._timeout,\r\n\t\t\tl = 0, r = 0;\r\n\r\n\t\t// Temporary list that holds the result returns from the service, which will be\r\n\t\t// assembled into a completed one.\r\n\t\tif(!this._result) {\r\n\t\t\tthis._result = [];\r\n\t\t}\r\n\r\n\t\taction = action || this.ACTION_QUERY;\r\n\r\n\t\tvar batchSend = function(){\r\n\t\t\tvar plan = [];\r\n\t\t\tvar plannedSize = 0;\r\n\t\t\tif(content && content.length > 0){\r\n\t\t\t\t_this.isWorking = true;\r\n\t\t\t\tvar len = content.length;\r\n\t\t\t\tdo{\r\n\t\t\t\t\tl = r + 1;\r\n\t\t\t\t\tif((r += mbl) > len){\r\n\t\t\t\t\t\tr = len;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t// If there is no delimiter (emplty string), leave the right boundary where it is.\r\n\t\t\t\t\t\t// Else extend the right boundary to the first occurrence of the delimiter if\r\n\t\t\t\t\t\t// it doesn't meet the end of the content.\r\n\t\t\t\t\t\twhile(dt && content.charAt(r) != dt && r <= len){\r\n\t\t\t\t\t\t\tr++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Record the information of the text slices\r\n\t\t\t\t\tplan.push({l: l, r: r});\r\n\t\t\t\t\tplannedSize++;\r\n\t\t\t\t}while(r < len);\r\n\r\n\t\t\t\tdojo.forEach(plan, function(item, index){\r\n\t\t\t\t\tvar jsonpArgs = {\r\n\t\t\t\t\t\turl: serviceEndPoint,\r\n\t\t\t\t\t\taction: action,\r\n\t\t\t\t\t\ttimeout: timeout,\r\n\t\t\t\t\t\tcallbackParamName: callbackParamName,\r\n\t\t\t\t\t\thandle: function(response, ioArgs){\r\n\t\t\t\t\t\t\tif(++_this._counter <= this.size && !(response instanceof Error) &&\r\n\t\t\t\t\t\t\t\tresponse[label] && dojo.isArray(response[label])){\r\n\t\t\t\t\t\t\t\t// Collect the results\r\n\t\t\t\t\t\t\t\tvar offset = this.offset;\r\n\t\t\t\t\t\t\t\tdojo.forEach(response[label], function(item){\r\n\t\t\t\t\t\t\t\t\titem.offset += offset;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t// Put the packages in order\r\n\t\t\t\t\t\t\t\t_this._result[this.number]= response[label];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(_this._counter == this.size){\r\n\t\t\t\t\t\t\t\t_this._finalizeCollection(this.action);\r\n\t\t\t\t\t\t\t\t_this.isWorking = false;\r\n\t\t\t\t\t\t\t\tif(_this._queue.length > 0){\r\n\t\t\t\t\t\t\t\t\t// Call the next request waiting in queue\r\n\t\t\t\t\t\t\t\t\t(_this._queue.shift())();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\tjsonpArgs.content = comms ? dojo.mixin(comms, {action: action, content: content.substring(item.l - 1, item.r)}):\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{action: action, content: content.substring(item.l - 1, item.r)};\r\n\t\t\t\t\tjsonpArgs.size = plannedSize;\r\n\t\t\t\t\tjsonpArgs.number = index; // The index of the current package\r\n\t\t\t\t\tjsonpArgs.offset = item.l - 1;\r\n\t\t\t\t\tdojo.io.script.get(jsonpArgs);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif(!_this.isWorking){\r\n\t\t\tbatchSend();\r\n\t\t}else{\r\n\t\t\t_this._queue.push(batchSend);\r\n\t\t}\r\n\t},\r\n\r\n\t_finalizeCollection: function(action){\r\n\t\t// summary:\r\n\t\t//\t\tAssemble the responses into one result.\r\n\t\t// action:\r\n\t\t//\t\tThe action token\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar result = this._result,\r\n\t\t\tlen = result.length;\r\n\t\t// Turn the result into a one-dimensional array\r\n\t\tfor(var i = 0; i < len; i++){\r\n\t\t\tvar temp = result.shift();\r\n\t\t\tresult = result.concat(temp);\r\n\t\t}\r\n\t\tif(action == this.ACTION_QUERY){\r\n\t\t\tthis.onLoad(result);\r\n\t\t}\r\n\t\tthis._counter = 0;\r\n\t\tthis._result = [];\r\n\t},\r\n\r\n\tonLoad: function(/*String*/ data){\r\n\t\t// Stub method for a successful call\r\n\t},\r\n\r\n\tsetWaitingTime: function(/*Number*/ seconds){\r\n\t\tthis._timeout = seconds * this.SEC;\r\n\t}\r\n});\r\n\r\nvar SpellCheck = dojo.declare(\"dojox.editor.plugins.SpellCheck\", [_Plugin], {\r\n\t// summary:\r\n\t//\t\tThis plugin provides a spelling check capability for the editor.\r\n\r\n\t// url: [public] String\r\n\t//\t\tThe url of the spelling check service\r\n\turl: \"\",\r\n\r\n\t// bufferLength: [public] Number\r\n\t//\t\tThe max length of each XHR request. It is used to divide the large\r\n\t//\t\ttext into pieces so that the server-side piece can hold.\r\n\tbufferLength: 100,\r\n\r\n\t// interactive: [public] Boolean\r\n\t//\t\tIndicate if the interactive spelling check is enabled\r\n\tinteractive: false,\r\n\r\n\t// timeout: [public] Number\r\n\t//\t\tThe minutes to waiting for the response. The default value is 30 seconds.\r\n\ttimeout: 30,\r\n\r\n\t// button: [protected] dijit/form/DropDownButton\r\n\t//\t\tThe button displayed on the editor's toolbar\r\n\tbutton: null,\r\n\r\n\t// _editor: [private] dijit/Editor\r\n\t//\t\tThe reference to the editor the plug-in belongs to.\r\n\t_editor: null,\r\n\r\n\t// exArgs: [private] Object\r\n\t//\t\tThe object that holds all the parametes passed into the constructor\r\n\texArgs: null,\r\n\r\n\t// _cursorSpan: [private] String\r\n\t//\t\tThe span that holds the current position of the cursor\r\n\t_cursorSpan:\r\n\t\t\"<span class=\\\"cursorPlaceHolder\\\"></span>\",\r\n\r\n\t// _cursorSelector: [private] String\r\n\t//\t\tThe CSS selector of the cursor span\r\n\t_cursorSelector:\r\n\t\t\"cursorPlaceHolder\",\r\n\r\n\t// _incorrectWordsSpan: [private] String\r\n\t//\t\tThe wrapper that marks the incorrect words\r\n\t_incorrectWordsSpan:\r\n\t\t\"<span class='incorrectWordPlaceHolder'>${text}</span>\",\r\n\r\n\t// _ignoredIncorrectStyle: [private] Object\r\n\t//\t\tThe style of the ignored incorrect words\r\n\t_ignoredIncorrectStyle:\r\n\t\t{\"cursor\": \"inherit\", \"borderBottom\": \"none\", \"backgroundColor\": \"transparent\"},\r\n\r\n\t// _normalIncorrectStyle: [private] Object\r\n\t//\t\tThe style of the marked incorrect words.\r\n\t_normalIncorrectStyle:\r\n\t\t{\"cursor\": \"pointer\", \"borderBottom\": \"1px dotted red\", \"backgroundColor\": \"yellow\"},\r\n\r\n\t// _highlightedIncorrectStyle: [private] Object\r\n\t//\t\tThe style of the highlighted incorrect words\r\n\t_highlightedIncorrectStyle:\r\n\t\t{\"borderBottom\": \"1px dotted red\", \"backgroundColor\": \"#b3b3ff\"},\r\n\r\n\t// _selector: [private] String\r\n\t//\t\tAn empty CSS class that identifies the incorrect words\r\n\t_selector: \"incorrectWordPlaceHolder\",\r\n\r\n\t// _maxItemNumber: [private] Number\r\n\t//\t\tThe max number of the suggestion list items\r\n\t_maxItemNumber: 3,\r\n\r\n\t/*************************************************************************/\r\n\t/**                      Framework Methods                              **/\r\n\t/*************************************************************************/\r\n\r\n\tconstructor: function(){\r\n\t\t// A list that holds all the spans that contains the incorrect words\r\n\t\t// It is used to select/replace the specified word.\r\n\t\tthis._spanList = [];\r\n\t\t// The cache that stores all the words. It looks like the following\r\n\t\t// {\r\n\t\t//\t \"word\": [],\r\n\t\t//\t \"wrd\": [\"word\", \"world\"]\r\n\t\t// }\r\n\t\tthis._cache = {};\r\n\t\t// Indicate if this plugin is enabled or not\r\n\t\tthis._enabled = true;\r\n\t\t// The index of the _spanList\r\n\t\tthis._iterator = 0;\r\n\t},\r\n\r\n\tsetEditor: function(/*dijit.Editor*/ editor){\r\n\t\tthis._editor = editor;\r\n\t\tthis._initButton();\r\n\t\tthis._setNetwork();\r\n\t\tthis._connectUp();\r\n\t},\r\n\r\n\t/*************************************************************************/\r\n\t/**                      Private Methods                                **/\r\n\t/*************************************************************************/\r\n\r\n\t_initButton: function(){\r\n\t\t// summary:\r\n\t\t//\t\tInitialize the button displayed on the editor's toolbar\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar _this = this,\r\n\t\t\tstrings = (this._strings = dojo.i18n.getLocalization(\"dojox.editor.plugins\", \"SpellCheck\")),\r\n\t\t\tdialogPane = (this._dialog = new dijit.TooltipDialog());\r\n\r\n\t\tdialogPane.set(\"content\", (this._dialogContent = new SpellCheckControl({\r\n\t\t\tunfound: strings[\"unfound\"],\r\n\t\t\tskip: strings[\"skip\"],\r\n\t\t\tskipAll: strings[\"skipAll\"],\r\n\t\t\ttoDic: strings[\"toDic\"],\r\n\t\t\tsuggestions: strings[\"suggestions\"],\r\n\t\t\treplaceWith: strings[\"replaceWith\"],\r\n\t\t\treplace: strings[\"replace\"],\r\n\t\t\treplaceAll: strings[\"replaceAll\"],\r\n\t\t\tcancel: strings[\"cancel\"]\r\n\t\t})));\r\n\r\n\t\tthis.button = new dijit.form.DropDownButton({\r\n\t\t\tlabel: strings[\"widgetLabel\"],\r\n\t\t\tshowLabel: false,\r\n\t\t\ticonClass: \"dijitEditorSpellCheckIcon\",\r\n\t\t\tdropDown: dialogPane,\r\n\t\t\tid: dijit.getUniqueId(this.declaredClass.replace(/\\./g,\"_\")) + \"_dialogPane\",\r\n\t\t\tcloseDropDown: function(focus){\r\n\t\t\t\t// Determine if the dialog can be closed\r\n\t\t\t\tif(_this._dialogContent.closable){\r\n\t\t\t\t\t_this._dialogContent.isOpen = false;\r\n\t\t\t\t\tif(dojo.isIE){\r\n\t\t\t\t\t\tvar pos = _this._iterator,\r\n\t\t\t\t\t\t\tlist = _this._spanList;\r\n\t\t\t\t\t\tif(pos < list.length && pos >=0 ){\r\n\t\t\t\t\t\t\tdojo.style(list[pos], _this._normalIncorrectStyle);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(this._opened){\r\n\t\t\t\t\t\tpopup.close(this.dropDown);\r\n\t\t\t\t\t\tif(focus){ this.focus(); }\r\n\t\t\t\t\t\tthis._opened = false;\r\n\t\t\t\t\t\tthis.state = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t_this._dialogContent.isOpen = false;\r\n\r\n\t\tdialogPane.domNode.setAttribute(\"aria-label\", this._strings[\"widgetLabel\"]);\r\n\t},\r\n\r\n\t_setNetwork: function(){\r\n\t\t// summary:\r\n\t\t//\t\tSet up the underlying network service\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar comms = this.exArgs;\r\n\r\n\t\tif(!this._service){\r\n\t\t\tvar service = (this._service = new SpellCheckScriptMultiPart());\r\n\t\t\tservice.serviceEndPoint = this.url;\r\n\t\t\tservice.maxBufferLength = this.bufferLength;\r\n\t\t\tservice.setWaitingTime(this.timeout);\r\n\t\t\t// Pass the other arguments directly to the service\r\n\t\t\tif(comms){\r\n\t\t\t\tdelete comms.name;\r\n\t\t\t\tdelete comms.url;\r\n\t\t\t\tdelete comms.interactive;\r\n\t\t\t\tdelete comms.timeout;\r\n\t\t\t\tservice.exArgs = comms;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_connectUp: function(){\r\n\t\t// summary:\r\n\t\t//\t\tConnect up all the events with their event handlers\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar editor = this._editor,\r\n\t\t\tcont = this._dialogContent;\r\n\r\n\t\tthis.connect(this.button, \"set\", \"_disabled\");\r\n\t\tthis.connect(this._service, \"onLoad\", \"_loadData\");\r\n\t\tthis.connect(this._dialog, \"onOpen\", \"_openDialog\");\r\n\t\tthis.connect(editor, \"onKeyPress\", \"_keyPress\");\r\n\t\tthis.connect(editor, \"onLoad\", \"_submitContent\");\r\n\t\tthis.connect(cont, \"onSkip\", \"_skip\");\r\n\t\tthis.connect(cont, \"onSkipAll\", \"_skipAll\");\r\n\t\tthis.connect(cont, \"onAddToDic\", \"_add\");\r\n\t\tthis.connect(cont, \"onReplace\", \"_replace\");\r\n\t\tthis.connect(cont, \"onReplaceAll\", \"_replaceAll\");\r\n\t\tthis.connect(cont, \"onCancel\", \"_cancel\");\r\n\t\tthis.connect(cont, \"onEnter\", \"_enter\");\r\n\r\n\t\teditor.contentPostFilters.push(this._spellCheckFilter); // Register the filter\r\n\t\tdojo.publish(dijit._scopeName + \".Editor.plugin.SpellCheck.getParser\", [this]); // Get the language parser\r\n\t\tif(!this.parser){\r\n\t\t\tconsole.error(\"Can not get the word parser!\");\r\n\t\t}\r\n\t},\r\n\r\n\t/*************************************************************************/\r\n\t/**                      Event Handlers                                 **/\r\n\t/*************************************************************************/\r\n\r\n\t_disabled: function(name, disabled){\r\n\t\t// summary:\r\n\t\t//\t\tWhen the plugin is disabled (the button is disabled), reset all to their initial status.\r\n\t\t//\t\tIf the interactive mode is on, check the content once it is enabled.\r\n\t\t// name:\r\n\t\t//\t\tCommand name\r\n\t\t// disabled:\r\n\t\t//\t\tCommand argument\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tif(name == \"disabled\"){\r\n\t\t\tif(disabled){\r\n\t\t\t\tthis._iterator = 0;\r\n\t\t\t\tthis._spanList = [];\r\n\t\t\t}else if(this.interactive && !disabled && this._service){\r\n\t\t\t\tthis._submitContent(true);\r\n\t\t\t}\r\n\t\t\tthis._enabled = !disabled;\r\n\t\t}\r\n\t},\r\n\r\n\t_keyPress: function(evt){\r\n\t\t// summary:\r\n\t\t//\t\tThe handler of the onKeyPress event of the editor\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tif(this.interactive){\r\n\t\t\tvar v = 118, V = 86,\r\n\t\t\t\tcc = evt.charCode;\r\n\t\t\tif(!evt.altKey && cc == dojo.keys.SPACE){\r\n\t\t\t\tthis._submitContent();\r\n\t\t\t}else if((evt.ctrlKey && (cc == v || cc == V)) || (!evt.ctrlKey && evt.charCode)){\r\n\t\t\t\tthis._submitContent(true);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_loadData: function(/*Array*/ data){\r\n\t\t// summary:\r\n\t\t//\t\tApply the query result to the content\r\n\t\t// data:\r\n\t\t//\t\tThe result of the query\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar cache = this._cache,\r\n\t\t\thtml = this._editor.get(\"value\"),\r\n\t\t\tcont = this._dialogContent;\r\n\r\n\t\tthis._iterator = 0;\r\n\r\n\t\t// Update the local cache\r\n\t\tdojo.forEach(data, function(d){\r\n\t\t\tcache[d.text] = d.suggestion;\r\n\t\t\tcache[d.text].correct = false;\r\n\t\t});\r\n\r\n\t\tif(this._enabled){\r\n\t\t\t// Mark incorrect words\r\n\t\t\tcont.closable = false;\r\n\t\t\tthis._markIncorrectWords(html, cache);\r\n\t\t\tcont.closable = true;\r\n\r\n\t\t\tif(this._dialogContent.isOpen){\r\n\t\t\t\tthis._iterator = -1;\r\n\t\t\t\tthis._skip();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_openDialog: function(){\r\n\t\t// summary:\r\n\t\t//\t\tThe handler of the onOpen event\r\n\t\tvar cont = this._dialogContent;\r\n\r\n\t\t// Clear dialog content and disable it first\r\n\t\tcont.ignoreChange = true;\r\n\t\tcont.set(\"unfoundWord\", \"\");\r\n\t\tcont.set(\"suggestionList\", null);\r\n\t\tcont.set(\"disabled\", true);\r\n\t\tcont.set(\"inProgress\", true);\r\n\r\n\t\tcont.isOpen = true; // Indicate that the dialog is open\r\n\t\tcont.closable = false;\r\n\r\n\t\tthis._submitContent();\r\n\r\n\t\tcont.closable = true;\r\n\t},\r\n\r\n\t_skip: function(/*Event?*/ evt, /*Boolean?*/ noUpdate){\r\n\t\t// summary:\r\n\t\t//\t\tIgnore this word and move to the next unignored one.\r\n\t\t// evt:\r\n\t\t//\t\tThe event object\r\n\t\t// noUpdate:\r\n\t\t//\t\tIndicate whether to update the status of the span list or not\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar cont = this._dialogContent,\r\n\t\t\tlist = this._spanList || [],\r\n\t\t\tlen = list.length,\r\n\t\t\titer = this._iterator;\r\n\r\n\t\tcont.closable = false;\r\n\t\tcont.isChanged = false;\r\n\t\tcont.ignoreChange = true;\r\n\r\n\t\t// Skip the current word\r\n\t\tif(!noUpdate && iter >= 0 && iter < len){\r\n\t\t\tthis._skipWord(iter);\r\n\t\t}\r\n\r\n\t\t// Move to the next\r\n\t\twhile(++iter < len && list[iter].edited == true){ /* do nothing */}\r\n\t\tif(iter < len){\r\n\t\t\tthis._iterator = iter;\r\n\t\t\tthis._populateDialog(iter);\r\n\t\t\tthis._selectWord(iter);\r\n\t\t}else{\r\n\t\t\t// Reaches the end of the list\r\n\t\t\tthis._iterator = -1;\r\n\t\t\tcont.set(\"unfoundWord\", this._strings[\"msg\"]);\r\n\t\t\tcont.set(\"suggestionList\", null);\r\n\t\t\tcont.set(\"disabled\", true);\r\n\t\t\tcont.set(\"inProgress\", false);\r\n\t\t}\r\n\r\n\t\tsetTimeout(function(){\r\n\t\t\t// When moving the focus out of the iframe in WebKit browsers, we\r\n\t\t\t// need to focus something else first. So the textbox\r\n\t\t\t// can be focused correctly.\r\n\t\t\tif(dojo.isWebKit) { cont.skipButton.focus(); }\r\n\t\t\tcont.focus();\r\n\t\t\tcont.ignoreChange = false;\r\n\t\t\tcont.closable = true;\r\n\t\t}, 0);\r\n\t},\r\n\r\n\t_skipAll: function(){\r\n\t\t// summary:\r\n\t\t//\t\tIgnore all the same words\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tthis._dialogContent.closable = false;\r\n\t\tthis._skipWordAll(this._iterator);\r\n\t\tthis._skip();\r\n\t},\r\n\r\n\t_add: function(){\r\n\t\t// summary:\r\n\t\t//\t\tAdd the unrecognized word into the dictionary\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar cont = this._dialogContent;\r\n\r\n\t\tcont.closable = false;\r\n\t\tcont.isOpen = true;\r\n\t\tthis._addWord(this._iterator, cont.get(\"unfoundWord\"));\r\n\t\tthis._skip();\r\n\t},\r\n\r\n\t_replace: function(){\r\n\t\t// summary:\r\n\t\t//\t\tReplace the incorrect word with the selected one,\r\n\t\t//\t\tor the one the user types in the textbox\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar cont = this._dialogContent,\r\n\t\t\titer = this._iterator,\r\n\t\t\ttargetWord = cont.get(\"selectedWord\");\r\n\r\n\t\tcont.closable = false;\r\n\t\tthis._replaceWord(iter, targetWord);\r\n\t\tthis._skip(null, true);\r\n\t},\r\n\r\n\t_replaceAll: function(){\r\n\t\t// summary:\r\n\t\t//\t\tReplace all the words with the same text\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar cont = this._dialogContent,\r\n\t\t\tlist = this._spanList,\r\n\t\t\tlen = list.length,\r\n\t\t\tword = list[this._iterator].innerHTML.toLowerCase(),\r\n\t\t\ttargetWord = cont.get(\"selectedWord\");\r\n\r\n\t\tcont.closable = false;\r\n\t\tfor(var iter = 0; iter < len; iter++){\r\n\t\t\t// If this word is not ignored and is the same as the source word,\r\n\t\t\t// replace it.\r\n\t\t\tif(list[iter].innerHTML.toLowerCase() == word){\r\n\t\t\t\tthis._replaceWord(iter, targetWord);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._skip(null, true);\r\n\t},\r\n\r\n\t_cancel: function(){\r\n\t\t// summary:\r\n\t\t//\t\tCancel this check action\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tthis._dialogContent.closable = true;\r\n\t\tthis._editor.focus();\r\n\t},\r\n\r\n\t_enter: function(){\r\n\t\t// summary:\r\n\t\t//\t\tHandle the ENTER event\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tif(this._dialogContent.isChanged){\r\n\t\t\tthis._replace();\r\n\t\t}else{\r\n\t\t\tthis._skip();\r\n\t\t}\r\n\t},\r\n\r\n\t/*************************************************************************/\r\n\t/**                              Utils                                  **/\r\n\t/*************************************************************************/\r\n\r\n\t_query: function(/*String*/ html){\r\n\t\t// summary:\r\n\t\t//\t\tSend the query text to the service. The query text is a string of words\r\n\t\t//\t\tseparated by space.\r\n\t\t// html:\r\n\t\t//\t\tThe html value of the editor\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar service = this._service,\r\n\t\t\tcache = this._cache,\r\n\t\t\twords = this.parser.parseIntoWords(this._html2Text(html)) || [];\r\n\t\tvar content = [];\r\n\t\tdojo.forEach(words, function(word){\r\n\t\t\tword = word.toLowerCase();\r\n\t\t\tif(!cache[word]){\r\n\t\t\t\t// New word that need to be send to the server side for check\r\n\t\t\t\tcache[word] = [];\r\n\t\t\t\tcache[word].correct = true;\r\n\t\t\t\tcontent.push(word);\r\n\t\t\t}\r\n\t\t});\r\n\t\tif(content.length > 0){\r\n\t\t\tservice.send(content.join(\" \"));\r\n\t\t}else if(!service.isWorking){\r\n\t\t\tthis._loadData([]);\r\n\t\t}\r\n\t},\r\n\r\n\t_html2Text: function(html){\r\n\t\t// summary:\r\n\t\t//\t\tSubstitute the tag with white charactors so that the server\r\n\t\t//\t\tcan easily process the text. For example:\r\n\t\t// |\t\"<a src=\"sample.html\">Hello, world!</a>\" ==>\r\n\t\t// |\t\"                     Hello, world!    \"\r\n\t\t// html:\r\n\t\t//\t\tThe html code\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar text = [],\r\n\t\t\tisTag = false,\r\n\t\t\tlen = html ? html.length : 0;\r\n\r\n\t\tfor(var i = 0; i < len; i++){\r\n\t\t\tif(html.charAt(i) == \"<\"){ isTag = true; }\r\n\t\t\tif(isTag == true){\r\n\t\t\t\ttext.push(\" \");\r\n\t\t\t}else{\r\n\t\t\t\ttext.push(html.charAt(i));\r\n\t\t\t}\r\n\t\t\tif(html.charAt(i) == \">\"){ isTag = false; }\r\n\r\n\t\t}\r\n\t\treturn text.join(\"\");\r\n\t},\r\n\r\n\t_getBookmark: function(/*String*/ eValue){\r\n\t\t// summary:\r\n\t\t//\t\tGet the cursor position. It is the index of the characters\r\n\t\t//\t\twhere the cursor is.\r\n\t\t// eValue:\r\n\t\t//\t\tThe html value of the editor\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar ed = this._editor,\r\n\t\t\tcp = this._cursorSpan;\r\n\t\ted.execCommand(\"inserthtml\", cp);\r\n\t\tvar nv = ed.get(\"value\"),\r\n\t\t\tindex = nv.indexOf(cp),\r\n\t\t\ti = -1;\r\n\t\twhile(++i < index && eValue.charAt(i) == nv.charAt(i)){ /* do nothing */}\r\n\t\treturn i;\r\n\t},\r\n\r\n\t_moveToBookmark: function(){\r\n\t\t// summary:\r\n\t\t//\t\tMove to the position when the cursor was.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar ed = this._editor,\r\n\t\t\tcps = dojo.query(\".\" + this._cursorSelector, ed.document),\r\n\t\t\tcursorSpan = cps && cps[0];\r\n\t\t// Find the cursor place holder\r\n\t\tif(cursorSpan){\r\n\t\t\ted._sCall(\"selectElement\", [cursorSpan]);\r\n\t\t\ted._sCall(\"collapse\", [true]);\r\n\t\t\tvar parent = cursorSpan.parentNode;\r\n\t\t\tif(parent){ parent.removeChild(cursorSpan); }\r\n\t\t}\r\n\t},\r\n\r\n\t_submitContent: function(/*Boolean?*/ delay){\r\n\t\t// summary:\r\n\t\t//\t\tFunctions to submit the content of the editor\r\n\t\t// delay:\r\n\t\t//\t\tIndicate if the action is taken immediately or not\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tif(delay){\r\n\t\t\tvar _this = this,\r\n\t\t\t\tinterval = 3000;\r\n\t\t\tif(this._delayHandler){\r\n\t\t\t\tclearTimeout(this._delayHandler);\r\n\t\t\t\tthis._delayHandler = null;\r\n\t\t\t}\r\n\t\t\tsetTimeout(function(){ _this._query(_this._editor.get(\"value\")); }, interval);\r\n\t\t}else{\r\n\t\t\tthis._query(this._editor.get(\"value\"));\r\n\t\t}\r\n\t},\r\n\r\n\t_populateDialog: function(index){\r\n\t\t// summary:\r\n\t\t//\t\tPopulate the content of the dailog\r\n\t\t// index:\r\n\t\t//\t\tThe idex of the span list\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar list = this._spanList,\r\n\t\t\tcache = this._cache,\r\n\t\t\tcont = this._dialogContent;\r\n\r\n\t\tcont.set(\"disabled\", false);\r\n\t\tif(index < list.length && list.length > 0){\r\n\t\t\tvar word = list[index].innerHTML;\r\n\t\t\tcont.set(\"unfoundWord\", word);\r\n\t\t\tcont.set(\"suggestionList\", cache[word.toLowerCase()]);\r\n\t\t\tcont.set(\"inProgress\", false);\r\n\t\t}\r\n\t},\r\n\r\n\t_markIncorrectWords: function(/*String*/ html, /*Object*/ cache){\r\n\t\t// summary:\r\n\t\t//\t\tMark the incorrect words and set up menus if available\r\n\t\t// html:\r\n\t\t//\t\tThe html value of the editor\r\n\t\t// cache:\r\n\t\t//\t\tThe local word cache\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar _this = this,\r\n\t\t\tparser = this.parser,\r\n\t\t\teditor = this._editor,\r\n\t\t\tspanString = this._incorrectWordsSpan,\r\n\t\t\tnstyle = this._normalIncorrectStyle,\r\n\t\t\tselector = this._selector,\r\n\t\t\twords = parser.parseIntoWords(this._html2Text(html).toLowerCase()),\r\n\t\t\tindices = parser.getIndices(),\r\n\t\t\tbookmark = this._cursorSpan,\r\n\t\t\tbmpos = this._getBookmark(html),\r\n\t\t\tspanOffset = \"<span class='incorrectWordPlaceHolder'>\".length,\r\n\t\t\tbmMarked = false,\r\n\t\t\tcArray = html.split(\"\"),\r\n\t\t\tspanList = null;\r\n\r\n\t\t// Mark the incorrect words and cursor position\r\n\t\tfor(var i = words.length - 1; i >= 0; i--){\r\n\t\t\tvar word = words[i];\r\n\t\t\tif(cache[word] && !cache[word].correct){\r\n\t\t\t\tvar offset = indices[i],\r\n\t\t\t\t\tlen = words[i].length,\r\n\t\t\t\t\tend = offset + len;\r\n\t\t\t\tif(end <= bmpos && !bmMarked){\r\n\t\t\t\t\tcArray.splice(bmpos, 0, bookmark);\r\n\t\t\t\t\tbmMarked = true;\r\n\t\t\t\t}\r\n\t\t\t\tcArray.splice(offset, len, dojo.string.substitute(spanString, {text: html.substring(offset, end)}));\r\n\t\t\t\tif(offset < bmpos && bmpos < end && !bmMarked){\r\n\t\t\t\t\tvar tmp = cArray[offset].split(\"\");\r\n\t\t\t\t\ttmp.splice(spanOffset + bmpos - offset, 0, bookmark);\r\n\t\t\t\t\tcArray[offset] = tmp.join(\"\");\r\n\t\t\t\t\tbmMarked = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(!bmMarked){\r\n\t\t\tcArray.splice(bmpos, 0, bookmark);\r\n\t\t\tbmMarked = true;\r\n\t\t}\r\n\r\n\t\teditor.set(\"value\", cArray.join(\"\"));\r\n\t\teditor._cursorToStart = false; // HACK! But really necessary here.\r\n\r\n\t\tthis._moveToBookmark();\r\n\r\n\t\t// Get the incorrect words <span>\r\n\t\tspanList = this._spanList = dojo.query(\".\" + this._selector, editor.document);\r\n\t\tspanList.forEach(function(span, i){ span.id = selector + i; });\r\n\r\n\t\t// Set them to the incorrect word style\r\n\t\tif(!this.interactive){ delete nstyle.cursor; }\r\n\t\tspanList.style(nstyle);\r\n\r\n\t\tif(this.interactive){\r\n\t\t\t// Build the context menu\r\n\t\t\tif(_this._contextMenu){\r\n\t\t\t\t_this._contextMenu.uninitialize();\r\n\t\t\t\t_this._contextMenu = null;\r\n\t\t\t}\r\n\t\t\t_this._contextMenu = new dijit.Menu({\r\n\t\t\t\ttargetNodeIds: [editor.iframe],\r\n\r\n\t\t\t\tbindDomNode: function(/*String|DomNode*/ node){\r\n\t\t\t\t\t// summary:\r\n\t\t\t\t\t//\t\tAttach menu to given node\r\n\t\t\t\t\tnode = dojo.byId(node);\r\n\r\n\t\t\t\t\tvar cn;\t// Connect node\r\n\r\n\t\t\t\t\t// Support context menus on iframes.   Rather than binding to the iframe itself we need\r\n\t\t\t\t\t// to bind to the <body> node inside the iframe.\r\n\t\t\t\t\tvar iframe, win;\r\n\t\t\t\t\tif(node.tagName.toLowerCase() == \"iframe\"){\r\n\t\t\t\t\t\tiframe = node;\r\n\t\t\t\t\t\twin = this._iframeContentWindow(iframe);\r\n\t\t\t\t\t\tcn = dojo.body(editor.document)\r\n\t\t\t\t\t}else{\r\n\r\n\t\t\t\t\t\t// To capture these events at the top level, attach to <html>, not <body>.\r\n\t\t\t\t\t\t// Otherwise right-click context menu just doesn't work.\r\n\t\t\t\t\t\tcn = (node == dojo.body() ? dojo.doc.documentElement : node);\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t// \"binding\" is the object to track our connection to the node (ie, the parameter to bindDomNode())\r\n\t\t\t\t\tvar binding = {\r\n\t\t\t\t\t\tnode: node,\r\n\t\t\t\t\t\tiframe: iframe\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// Save info about binding in _bindings[], and make node itself record index(+1) into\r\n\t\t\t\t\t// _bindings[] array.   Prefix w/_dijitMenu to avoid setting an attribute that may\r\n\t\t\t\t\t// start with a number, which fails on FF/safari.\r\n\t\t\t\t\tdojo.attr(node, \"_dijitMenu\" + this.id, this._bindings.push(binding));\r\n\r\n\t\t\t\t\t// Setup the connections to monitor click etc., unless we are connecting to an iframe which hasn't finished\r\n\t\t\t\t\t// loading yet, in which case we need to wait for the onload event first, and then connect\r\n\t\t\t\t\t// On linux Shift-F10 produces the oncontextmenu event, but on Windows it doesn't, so\r\n\t\t\t\t\t// we need to monitor keyboard events in addition to the oncontextmenu event.\r\n\t\t\t\t\tvar doConnects = dojo.hitch(this, function(cn){\r\n\t\t\t\t\t\treturn [\r\n\t\t\t\t\t\t\t// TODO: when leftClickToOpen is true then shouldn't space/enter key trigger the menu,\r\n\t\t\t\t\t\t\t// rather than shift-F10?\r\n\t\t\t\t\t\t\tdojo.connect(cn, this.leftClickToOpen ? \"onclick\" : \"oncontextmenu\", this, function(evt){\r\n\t\t\t\t\t\t\t\tvar target = evt.target,\r\n\t\t\t\t\t\t\t\t\tstrings = _this._strings;\r\n\t\t\t\t\t\t\t\t// Schedule context menu to be opened unless it's already been scheduled from onkeydown handler\r\n\t\t\t\t\t\t\t\tif(dojo.hasClass(target, selector) && !target.edited){ // Click on the incorrect word\r\n\t\t\t\t\t\t\t\t\tdojo.stopEvent(evt);\r\n\r\n\t\t\t\t\t\t\t\t\t// Build the on-demand menu items\r\n\t\t\t\t\t\t\t\t\tvar maxNumber = _this._maxItemNumber,\r\n\t\t\t\t\t\t\t\t\t\tid = target.id,\r\n\t\t\t\t\t\t\t\t\t\tindex = id.substring(selector.length),\r\n\t\t\t\t\t\t\t\t\t\tsuggestions = cache[target.innerHTML.toLowerCase()],\r\n\t\t\t\t\t\t\t\t\t\tslen = suggestions.length;\r\n\r\n\t\t\t\t\t\t\t\t\t// Add the suggested words menu items\r\n\t\t\t\t\t\t\t\t\tthis.destroyDescendants();\r\n\t\t\t\t\t\t\t\t\tif(slen == 0){\r\n\t\t\t\t\t\t\t\t\t\tthis.addChild(new dijit.MenuItem({\r\n\t\t\t\t\t\t\t\t\t\t\tlabel: strings[\"iMsg\"],\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled: true\r\n\t\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\tfor(var i = 0 ; i < maxNumber && i < slen; i++){\r\n\t\t\t\t\t\t\t\t\t\t\tthis.addChild(new dijit.MenuItem({\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: suggestions[i],\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick: (function(){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar idx = index, txt = suggestions[i];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn function(){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_this._replaceWord(idx, txt);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\teditor.focus();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\t\t\t})()\r\n\t\t\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t//Add the other action menu items\r\n\t\t\t\t\t\t\t\t\tthis.addChild(new dijit.MenuSeparator());\r\n\t\t\t\t\t\t\t\t\tthis.addChild(new dijit.MenuItem({\r\n\t\t\t\t\t\t\t\t\t\tlabel: strings[\"iSkip\"],\r\n\t\t\t\t\t\t\t\t\t\tonClick: function(){\r\n\t\t\t\t\t\t\t\t\t\t\t_this._skipWord(index);\r\n\t\t\t\t\t\t\t\t\t\t\teditor.focus();\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t\tthis.addChild(new dijit.MenuItem({\r\n\t\t\t\t\t\t\t\t\t\tlabel: strings[\"iSkipAll\"],\r\n\t\t\t\t\t\t\t\t\t\tonClick: function(){\r\n\t\t\t\t\t\t\t\t\t\t\t_this._skipWordAll(index);\r\n\t\t\t\t\t\t\t\t\t\t\teditor.focus();\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t\tthis.addChild(new dijit.MenuSeparator());\r\n\t\t\t\t\t\t\t\t\tthis.addChild(new dijit.MenuItem({\r\n\t\t\t\t\t\t\t\t\t\tlabel: strings[\"toDic\"],\r\n\t\t\t\t\t\t\t\t\t\tonClick: function(){\r\n\t\t\t\t\t\t\t\t\t\t\t_this._addWord(index);\r\n\t\t\t\t\t\t\t\t\t\t\teditor.focus();\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}));\r\n\r\n\t\t\t\t\t\t\t\t\tthis._scheduleOpen(target, iframe, {x: evt.pageX, y: evt.pageY});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\tdojo.connect(cn, \"onkeydown\", this, function(evt){\r\n\t\t\t\t\t\t\t\tif(evt.shiftKey && evt.keyCode == dojo.keys.F10){\r\n\t\t\t\t\t\t\t\t\tdojo.stopEvent(evt);\r\n\t\t\t\t\t\t\t\t\tthis._scheduleOpen(evt.target, iframe);\t// no coords - open near target node\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t];\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbinding.connects = cn ? doConnects(cn) : [];\r\n\r\n\t\t\t\t\tif(iframe){\r\n\t\t\t\t\t\t// Setup handler to [re]bind to the iframe when the contents are initially loaded,\r\n\t\t\t\t\t\t// and every time the contents change.\r\n\t\t\t\t\t\t// Need to do this b/c we are actually binding to the iframe's <body> node.\r\n\t\t\t\t\t\t// Note: can't use dojo.connect(), see #9609.\r\n\r\n\t\t\t\t\t\tbinding.onloadHandler = dojo.hitch(this, function(){\r\n\t\t\t\t\t\t\t// want to remove old connections, but IE throws exceptions when trying to\r\n\t\t\t\t\t\t\t// access the <body> node because it's already gone, or at least in a state of limbo\r\n\r\n\t\t\t\t\t\t\tvar win = this._iframeContentWindow(iframe),\r\n\t\t\t\t\t\t\t\tcn = dojo.body(editor.document);\r\n\t\t\t\t\t\t\tbinding.connects = doConnects(cn);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif(iframe.addEventListener){\r\n\t\t\t\t\t\t\tiframe.addEventListener(\"load\", binding.onloadHandler, false);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tiframe.attachEvent(\"onload\", binding.onloadHandler);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\t_selectWord: function(index){\r\n\t\t// summary:\r\n\t\t//\t\tSelect the incorrect word. Move to it and highlight it\r\n\t\t// index:\r\n\t\t//\t\tThe index of the span list\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar ed = this._editor,\r\n\t\t\tlist = this._spanList;\r\n\r\n\t\tif(index < list.length && list.length > 0){\r\n\t\t\ted._sCall(\"selectElement\", [list[index]]);\r\n\t\t\ted._sCall(\"collapse\", [true]);\r\n\t\t\tthis._findText(list[index].innerHTML, false, false);\r\n\t\t\tif(dojo.isIE){\r\n\t\t\t\t// Because the selection in the iframe will be lost when the outer window get the\r\n\t\t\t\t// focus, we need to mimic the highlight ourselves.\r\n\t\t\t\tdojo.style(list[index], this._highlightedIncorrectStyle);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_replaceWord: function(index, text){\r\n\t\t// summary:\r\n\t\t//\t\tReplace the word at the given index with the text\r\n\t\t// index:\r\n\t\t//\t\tThe index of the span list\r\n\t\t// text:\r\n\t\t//\t\tThe text to be replaced with\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar list = this._spanList;\r\n\r\n\t\tlist[index].innerHTML = text;\r\n\t\tdojo.style(list[index], this._ignoredIncorrectStyle);\r\n\t\tlist[index].edited = true;\r\n\t},\r\n\r\n\t_skipWord: function(index){\r\n\t\t// summary:\r\n\t\t//\t\tSkip the word at the index\r\n\t\t// index:\r\n\t\t//\t\tThe index of the span list\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar list = this._spanList;\r\n\r\n\t\tdojo.style(list[index], this._ignoredIncorrectStyle);\r\n\t\tthis._cache[list[index].innerHTML.toLowerCase()].correct = true;\r\n\t\tlist[index].edited = true;\r\n\t},\r\n\r\n\t_skipWordAll: function(index, /*String?*/word){\r\n\t\t// summary:\r\n\t\t//\t\tSkip the all the word that have the same text as the word at the index\r\n\t\t//\t\tor the given word\r\n\t\t// index:\r\n\t\t//\t\tThe index of the span list\r\n\t\t// word:\r\n\t\t//\t\tIf this argument is given, skip all the words that have the same text\r\n\t\t//\t\tas the word\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar list = this._spanList,\r\n\t\t\tlen = list.length;\r\n\t\tword = word || list[index].innerHTML.toLowerCase();\r\n\r\n\t\tfor(var i = 0; i < len; i++){\r\n\t\t\tif(!list[i].edited && list[i].innerHTML.toLowerCase() == word){\r\n\t\t\t\tthis._skipWord(i);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_addWord: function(index, /*String?*/word){\r\n\t\t// summary:\r\n\t\t//\t\tAdd the word at the index to the dictionary\r\n\t\t// index:\r\n\t\t//\t\tThe index of the span list\r\n\t\t// word:\r\n\t\t//\t\tIf this argument is given, add the word to the dictionary and\r\n\t\t//\t\tskip all the words like it\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar service = this._service;\r\n\t\tservice.send(word || this._spanList[index].innerHTML.toLowerCase(), service.ACTION_UPDATE);\r\n\t\tthis._skipWordAll(index, word);\r\n\t},\r\n\r\n\t_findText: function(/*String*/ txt, /*Boolean*/ caseSensitive, /*Boolean*/ backwards){\r\n\t\t// summary:\r\n\t\t//\t\tThis function invokes a find with specific options\r\n\t\t// txt: String\r\n\t\t//\t\tThe text to locate in the document.\r\n\t\t// caseSensitive: Boolean\r\n\t\t//\t\tWhether or ot to search case-sensitively.\r\n\t\t// backwards: Boolean\r\n\t\t//\t\tWhether or not to search backwards in the document.\r\n\t\t// tags:\r\n\t\t//\t\tprivate.\r\n\t\t// returns:\r\n\t\t//\t\tBoolean indicating if the content was found or not.\r\n\t\tvar ed = this._editor,\r\n\t\t\twin = ed.window,\r\n\t\t\tfound = false;\r\n\t\tif(txt){\r\n\t\t\tif(win.find){\r\n\t\t\t\tfound = win.find(txt, caseSensitive, backwards, false, false, false, false);\r\n\t\t\t}else{\r\n\t\t\t\tvar doc = ed.document;\r\n\t\t\t\tif(doc.selection){\r\n\t\t\t\t\t/* IE */\r\n\t\t\t\t\t// Focus to restore position/selection,\r\n\t\t\t\t\t// then shift to search from current position.\r\n\t\t\t\t\tthis._editor.focus();\r\n\t\t\t\t\tvar txtRg = doc.body.createTextRange();\r\n\t\t\t\t\tvar curPos = doc.selection?doc.selection.createRange():null;\r\n\t\t\t\t\tif(curPos){\r\n\t\t\t\t\t\tif(backwards){\r\n\t\t\t\t\t\t\ttxtRg.setEndPoint(\"EndToStart\", curPos);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\ttxtRg.setEndPoint(\"StartToEnd\", curPos);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar flags = caseSensitive?4:0;\r\n\t\t\t\t\tif(backwards){\r\n\t\t\t\t\t\tflags = flags | 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//flags = flags |\r\n\t\t\t\t\tfound = txtRg.findText(txt,txtRg.text.length,flags);\r\n\t\t\t\t\tif(found){\r\n\t\t\t\t\t\ttxtRg.select();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn found;\r\n\t},\r\n\r\n\t_spellCheckFilter: function(/*String*/ value){\r\n\t\t// summary:\r\n\t\t//\t\tFilter out the incorrect word style so that the value of the edtior\r\n\t\t//\t\twon't include the spans that wrap around the incorrect words\r\n\t\t// value:\r\n\t\t//\t\tThe html value of the editor\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar regText = /<span class=[\"']incorrectWordPlaceHolder[\"'].*?>(.*?)<\\/span>/g;\r\n\t\treturn value.replace(regText, \"$1\");\r\n\t}\r\n});\r\n\r\n// For monkey patching\r\nSpellCheck._SpellCheckControl = SpellCheckControl;\r\nSpellCheck._SpellCheckScriptMultiPart = SpellCheckScriptMultiPart;\r\n\r\n// Register this plugin.\r\ndojo.subscribe(dijit._scopeName + \".Editor.getPlugin\",null,function(o){\r\n\tif(o.plugin){ return; }\r\n\tvar name = o.args.name.toLowerCase();\r\n\tif(name ===  \"spellcheck\"){\r\n\t\to.plugin = new SpellCheck({\r\n\t\t\turl: (\"url\" in o.args) ? o.args.url : \"\",\r\n\t\t\tinteractive: (\"interactive\" in o.args) ? o.args.interactive : false,\r\n\t\t\tbufferLength: (\"bufferLength\" in o.args) ? o.args.bufferLength: 100,\r\n\t\t\ttimeout: (\"timeout\" in o.args) ? o.args.timeout : 30,\r\n\t\t\texArgs: o.args\r\n\t\t});\r\n\t}\r\n});\r\n\r\nreturn SpellCheck;\r\n\r\n});\r\n"]}