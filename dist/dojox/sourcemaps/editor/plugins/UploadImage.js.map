{"version":3,"sources":["editor/plugins/UploadImage.js"],"names":["define","dojo","dijit","dojox","_Plugin","experimental","UploadImage","declare","tempImageUrl","iconClassPrefix","useDefaultCommand","uploadUrl","button","label","setToolbar","toolbar","this","destroy","createFileInput","addChild","_initButton","command","editor","commands","inherited","arguments","updateState","set","get","node","create","innerHTML","document","body","style","width","height","paddingLeft","paddingRight","form","FileUploader","isDebug","uploadOnChange","selectMultipleFiles","baseClass","hoverClass","activeClass","disabledClass","connect","onComplete","data","ioArgs","widgetRef","file","tmpImgNode","byId","currentImageId","downloadPath","name","src","attr","insertTempImage","Date","getTime","iTxt","execCommand","subscribe","_scopeName","o","plugin","args","url"],"mappings":";;;;;;;AAAAA,QACC,OACA,QACA,QACA,wBACA,qBACA,qBACA,0BACA,yBACE,SAASC,EAAMC,EAAOC,EAAOC,GAE/BH,EAAKI,aAAa,oCAElB,IAAIC,EAAcL,EAAKM,QAAQ,mCAAoCH,GAMlEI,aAAc,GACdC,gBAAiB,aACjBC,mBAAmB,EACnBC,UAAW,GACXC,OAAO,KACPC,MAAM,SAENC,WAAY,SAASC,GACpBC,KAAKJ,OAAOK,UACZD,KAAKE,kBACLH,EAAQI,SAASH,KAAKJ,SAEvBQ,YAAa,WACZJ,KAAKK,QAAU,cACfL,KAAKM,OAAOC,SAASP,KAAKK,SAAW,eACrCL,KAAKQ,UAAU,cAAeC,kBACvBT,KAAKK,SAGbK,YAAa,WAGZV,KAAKJ,OAAOe,IAAI,WAAYX,KAAKY,IAAI,cAGtCV,gBAAiB,WAChB,IAAIW,EAAO5B,EAAK6B,OAAO,QAASC,UAAU,KAAMC,SAASC,MACzDhC,EAAKiC,MAAML,GACVM,MAAM,OACNC,OAAO,OACPC,YAAY,MACZC,aAAa,QAEdtB,KAAKJ,OAAS,IAAIT,EAAMoC,KAAKC,cAC5BC,SAAQ,EAER9B,UAAUK,KAAKL,UACf+B,gBAAe,EACfC,qBAAoB,EACpBC,UAAU,wBACVC,WAAW,yBACXC,YAAY,0BACZC,cAAc,6BACZlB,GACHb,KAAKgC,QAAQhC,KAAKJ,OAAQ,WAAY,mBACtCI,KAAKgC,QAAQhC,KAAKJ,OAAQ,aAAc,eAGzCqC,WAAY,SAASC,EAAKC,EAAOC,GAChCF,EAAOA,EAAK,GAEZ,IACIG,EADAC,EAAarD,EAAKsD,KAAKvC,KAAKwC,eAAgBxC,KAAKM,OAAOU,UAK3DqB,EADErC,KAAKyC,aACAzC,KAAKyC,aAAaP,EAAKQ,KAEvBR,EAAKG,KAGbC,EAAWK,IAAMN,EACjBpD,EAAK2D,KAAKN,EAAW,aAAaD,GAE/BH,EAAKf,QACPmB,EAAWnB,MAAQe,EAAKf,MACxBmB,EAAWlB,OAASc,EAAKd,SAI3ByB,gBAAiB,WAIhB7C,KAAKwC,eAAiB,QAAQ,IAAIM,MAAOC,UACzC,IAAIC,EAAO,YAAYhD,KAAKwC,eAAe,UAAUxC,KAAKR,aAAa,6BACvEQ,KAAKM,OAAO2C,YAAY,aAAcD,MAYxC,OARA/D,EAAKiE,UAAUhE,EAAMiE,WAAa,oBAAoB,KAAK,SAASC,GACnE,IAAGA,EAAEC,OACL,OAAOD,EAAEE,KAAKZ,MACd,IAAK,cACJU,EAAEC,OAAS,IAAI/D,GAAaiE,IAAKH,EAAEE,KAAKC,SAInCjE","file":"../../../editor/plugins/UploadImage.js","sourcesContent":["define([\r\n\t\"dojo\",\r\n\t\"dijit\",\r\n\t\"dojox\",\r\n\t\"dijit/_editor/_Plugin\",\r\n\t\"dojo/_base/connect\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojox/form/FileUploader\",\r\n\t\"dijit/_editor/_Plugin\"\r\n], function(dojo, dijit, dojox, _Plugin) {\r\n\r\n\tdojo.experimental(\"dojox.editor.plugins.UploadImage\");\r\n\r\n\tvar UploadImage = dojo.declare(\"dojox.editor.plugins.UploadImage\", _Plugin, {\r\n\t\t// summary:\r\n\t\t// \t\tAdds an icon to the Editor toolbar that when clicked, opens a system dialog\r\n\t\t//\t\tAlthough the toolbar icon is a tiny \"image\" the uploader could be used for\r\n\t\t//\t\tany file type\r\n\t\t\r\n\t\ttempImageUrl: \"\",\r\n\t\ticonClassPrefix: \"editorIcon\",\r\n\t\tuseDefaultCommand: false,\r\n\t\tuploadUrl: \"\",\r\n\t\tbutton:null,\r\n\t\tlabel:\"Upload\",\r\n\t\t\r\n\t\tsetToolbar: function(toolbar){\r\n\t\t\tthis.button.destroy();\r\n\t\t\tthis.createFileInput();\r\n\t\t\ttoolbar.addChild(this.button);\r\n\t\t},\r\n\t\t_initButton: function(){\r\n\t\t\tthis.command = \"uploadImage\";\r\n\t\t\tthis.editor.commands[this.command] = \"Upload Image\";\r\n\t\t\tthis.inherited(\"_initButton\", arguments);\r\n\t\t\tdelete this.command;\r\n\t\t},\r\n\t\t\r\n\t\tupdateState: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOver-ride for button state control for disabled to work.\r\n\t\t\tthis.button.set(\"disabled\", this.get(\"disabled\"));\r\n\t\t},\r\n\t\t\r\n\t\tcreateFileInput: function(){\r\n\t\t\tvar node = dojo.create('span', {innerHTML:\".\"}, document.body)\r\n\t\t\tdojo.style(node, {\r\n\t\t\t\twidth:\"40px\",\r\n\t\t\t\theight:\"20px\",\r\n\t\t\t\tpaddingLeft:\"8px\",\r\n\t\t\t\tpaddingRight:\"8px\"\r\n\t\t\t});\r\n\t\t\tthis.button = new dojox.form.FileUploader({\r\n\t\t\t\tisDebug:true,\r\n\t\t\t\t//force:\"html\",\r\n\t\t\t\tuploadUrl:this.uploadUrl,\r\n\t\t\t\tuploadOnChange:true,\r\n\t\t\t\tselectMultipleFiles:false,\r\n\t\t\t\tbaseClass:\"dojoxEditorUploadNorm\",\r\n\t\t\t\thoverClass:\"dojoxEditorUploadHover\",\r\n\t\t\t\tactiveClass:\"dojoxEditorUploadActive\",\r\n\t\t\t\tdisabledClass:\"dojoxEditorUploadDisabled\"\r\n\t\t\t}, node);\r\n\t\t\tthis.connect(this.button, \"onChange\", \"insertTempImage\");\r\n\t\t\tthis.connect(this.button, \"onComplete\", \"onComplete\");\r\n\t\t},\r\n\t\t\r\n\t\tonComplete: function(data,ioArgs,widgetRef){\r\n\t\t\tdata = data[0];\r\n\t\t\t// Image is ready to insert\r\n\t\t\tvar tmpImgNode = dojo.byId(this.currentImageId, this.editor.document);\r\n\t\t\tvar file;\r\n\t\t\t// download path is mainly used so we can access a PHP script\r\n\t\t\t// not relative to this file. The server *should* return a qualified path.\r\n\t\t\tif(this.downloadPath){\r\n\t\t\t\tfile = this.downloadPath+data.name\r\n\t\t\t}else{\r\n\t\t\t\tfile = data.file;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttmpImgNode.src = file;\r\n\t\t\tdojo.attr(tmpImgNode,'_djrealurl',file);\r\n\r\n\t\t\tif(data.width){\r\n\t\t\t\ttmpImgNode.width = data.width;\r\n\t\t\t\ttmpImgNode.height = data.height;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tinsertTempImage: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tinserting a \"busy\" image to show something is hapening\r\n\t\t\t//\t\tduring upload and download of the image.\r\n\t\t\tthis.currentImageId = \"img_\"+(new Date().getTime());\r\n\t\t\tvar iTxt = '<img id=\"'+this.currentImageId+'\" src=\"'+this.tempImageUrl+'\" width=\"32\" height=\"32\"/>';\r\n\t\t\tthis.editor.execCommand('inserthtml', iTxt);\r\n\t\t}\r\n\t});\r\n\r\n\tdojo.subscribe(dijit._scopeName + \".Editor.getPlugin\",null,function(o){\r\n\t\tif(o.plugin){ return; }\r\n\t\tswitch(o.args.name){\r\n\t\tcase \"uploadImage\":\r\n\t\t\to.plugin = new UploadImage({url: o.args.url});\r\n\t\t}\r\n\t});\r\n\r\n\treturn UploadImage;\r\n});\r\n"]}