{"version":3,"sources":["timing/_base.js"],"names":["define","dojo","experimental","getObject","dojox","timing","Timer","interval","this","timer","isRunning","onStart","onStop","extend","onTick","setInterval","window","clearInterval","hitch","start","stop"],"mappings":";;;;;;;AAAAA,QAAQ,oBAAqB,mBAAoB,SAASC,GAgEzD,OA/DAA,EAAKC,aAAa,gBAClBD,EAAKE,UAAU,UAAU,EAAMC,OAE/BA,MAAMC,OAAOC,MAAQ,SAAiBC,GAMrCC,KAAKC,MAAQ,KACbD,KAAKE,WAAY,EACjBF,KAAKD,SAAWA,EAEhBC,KAAKG,QAAU,KACfH,KAAKI,OAAS,MAGfX,EAAKY,OAAOT,MAAMC,OAAOC,OACxBQ,OAAQ,aAKRC,YAAa,SAASR,GAKjBC,KAAKE,WACRM,OAAOC,cAAcT,KAAKC,OAE3BD,KAAKD,SAAWA,EACZC,KAAKE,YACRF,KAAKC,MAAQO,OAAOD,YAAYd,EAAKiB,MAAMV,KAAM,UAAWA,KAAKD,YAInEY,MAAO,WAOqB,mBAAhBX,KAAKG,SACfH,KAAKG,UAENH,KAAKE,WAAY,EACjBF,KAAKC,MAAQO,OAAOD,YAAYd,EAAKiB,MAAMV,KAAM,UAAWA,KAAKD,WAGlEa,KAAM,WAKqB,mBAAfZ,KAAKI,QACfJ,KAAKI,SAENJ,KAAKE,WAAY,EACjBM,OAAOC,cAAcT,KAAKC,UAGrBL,MAAMC","file":"../../timing/_base.js","sourcesContent":["define([\"dojo/_base/kernel\", \"dojo/_base/lang\"], function(dojo){\r\n\tdojo.experimental(\"dojox.timing\");\r\n\tdojo.getObject(\"timing\", true, dojox);\r\n\r\n\tdojox.timing.Timer = function(/*int*/ interval){\r\n\t\t// summary:\r\n\t\t//\t\tTimer object executes an \"onTick()\" method repeatedly at a specified interval.\r\n\t\t//\t\trepeatedly at a given interval.\r\n\t\t// interval:\r\n\t\t//\t\tInterval between function calls, in milliseconds.\r\n\t\tthis.timer = null;\r\n\t\tthis.isRunning = false;\r\n\t\tthis.interval = interval;\r\n\r\n\t\tthis.onStart = null;\r\n\t\tthis.onStop = null;\r\n\t};\r\n\r\n\tdojo.extend(dojox.timing.Timer, {\r\n\t\tonTick: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMethod called every time the interval passes.  Override to do something useful.\r\n\t\t},\r\n\t\t\t\r\n\t\tsetInterval: function(interval){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReset the interval of a timer, whether running or not.\r\n\t\t\t// interval:\r\n\t\t\t//\t\tNew interval, in milliseconds.\r\n\t\t\tif (this.isRunning){\r\n\t\t\t\twindow.clearInterval(this.timer);\r\n\t\t\t}\r\n\t\t\tthis.interval = interval;\r\n\t\t\tif (this.isRunning){\r\n\t\t\t\tthis.timer = window.setInterval(dojo.hitch(this, \"onTick\"), this.interval);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tstart: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStart the timer ticking.\r\n\t\t\t// description:\r\n\t\t\t//\t\tCalls the \"onStart()\" handler, if defined.\r\n\t\t\t//\t\tNote that the onTick() function is not called right away,\r\n\t\t\t//\t\tonly after first interval passes.\r\n\t\t\tif (typeof this.onStart == \"function\"){\r\n\t\t\t\tthis.onStart();\r\n\t\t\t}\r\n\t\t\tthis.isRunning = true;\r\n\t\t\tthis.timer = window.setInterval(dojo.hitch(this, \"onTick\"), this.interval);\r\n\t\t},\r\n\t\t\r\n\t\tstop: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStop the timer.\r\n\t\t\t// description:\r\n\t\t\t//\t\tCalls the \"onStop()\" handler, if defined.\r\n\t\t\tif (typeof this.onStop == \"function\"){\r\n\t\t\t\tthis.onStop();\r\n\t\t\t}\r\n\t\t\tthis.isRunning = false;\r\n\t\t\twindow.clearInterval(this.timer);\r\n\t\t}\r\n\t});\r\n\treturn dojox.timing;\r\n});\r\n"]}