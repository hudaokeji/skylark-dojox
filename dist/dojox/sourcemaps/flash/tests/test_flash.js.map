{"version":3,"sources":["flash/tests/test_flash.js"],"names":["dojo","require","flashLoaded","pageLoaded","testXML","testBook","flashReady","console","debug","isReady","run","pageReady","loadResources","d","xhrGet","url","handleAs","addCallback","results","addErrback","error","correct","dojox","flash","comm","setMessage","assert","getMessage","chop","doubleSlash","charAt","putSize","length","toJson","type","color","model","year","features","multipleValues","allPassed","document","createElement","style","backgroundColor","fontSize","appendChild","createTextNode","getElementsByTagName","e","message","testString","i","Math","min","testSlice","from","to","setMessageSlice","actual","slice","msg","failed","Error","addLoadedListener","setSwf","connect"],"mappings":"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","file":"../../../flash/tests/test_flash.js","sourcesContent":["// TODO: FIXME: Refactor this to use D.O.H. instead of its own assertions\r\n\r\ndojo.require(\"dojox.flash\");\r\n\r\nvar flashLoaded = false;\r\nvar pageLoaded = false;\r\nvar testXML = testBook = null;\r\n\r\nfunction flashReady(){\r\n\tconsole.debug(\"flashReady\");\r\n\tif (flashLoaded) {\r\n\t  return; // prevent double loads\r\n\t}\r\n\t\r\n\tflashLoaded = true;\r\n\t\r\n\tif(isReady()){\r\n\t\trun();\r\n\t}\r\n}\r\n\r\nfunction pageReady(){\r\n\tconsole.debug(\"pageReady\");\r\n\tif (pageLoaded) {\r\n\t  return; // prevent double loads\r\n\t}\r\n\t\r\n\tpageLoaded = true;\r\n\t\r\n\tloadResources();\r\n\t\r\n\tif(isReady()){\r\n\t\trun();\r\n\t}\r\n}\r\n\r\nfunction isReady(){\r\n\treturn testXML && testBook && pageLoaded && flashLoaded;\r\n}\r\n\r\nfunction loadResources(){\r\n\tconsole.debug(\"Trying to load resources\");\r\n\t\r\n\tvar d = dojo.xhrGet({\r\n\t\turl: \"../../storage/tests/resources/testXML.xml\",\r\n\t\thandleAs: \"text\"\r\n\t});\r\n\r\n\td.addCallback(function(results){\r\n\t\tconsole.debug(\"testXML loaded\");\r\n\t\ttestXML = results;\r\n\t\tif(isReady()){\r\n\t\t\trun();\r\n\t\t}\r\n\t});\r\n\r\n\td.addErrback(function(error){\r\n\t\tconsole.debug(\"Unable to load testXML.xml: \" + error);\r\n\t});\r\n\t\r\n\td = dojo.xhrGet({\r\n\t\turl: \"../../storage/tests/resources/testBook.txt\",\r\n\t\thandleAs: \"text\"\r\n\t});\r\n\r\n\td.addCallback(function(results){\r\n\t\tconsole.debug(\"testBook loaded\");\r\n\t\ttestBook = results;\r\n\t\tif(isReady()){\r\n\t\t\trun();\r\n\t\t}\r\n\t});\r\n\r\n\td.addErrback(function(error){\r\n\t\tconsole.debug(\"Unable to load testXML.xml: \" + error);\r\n\t});\r\n}\r\n\r\nfunction run(){\r\n\tconsole.debug(\"run\");\r\n\ttry{\r\n\t\tvar correct, actual;\r\n\t\t\r\n\t\tconsole.debug(\"Setting simple message...\");\r\n\t\tcorrect = \"hello world\";\r\n\t\tdojox.flash.comm.setMessage(correct);\r\n\t\tactual = dojox.flash.comm.getMessage();\r\n\t\tassert(correct, actual, \"Setting/getting simple message did not work\");\r\n\t\tchop(correct);\r\n\t\r\n\t\tconsole.debug(\"Setting message with evil characters...\");\r\n\t\t// our correct and actual values get tricky when we have double back\r\n\t\t// slashes; do a trick so that they can be compared easier\r\n\t\tvar doubleSlash = \"\\\\\";\r\n\t\tdoubleSlash = doubleSlash.charAt(0);\r\n\t\tcorrect = \"hello world\\n\\n\\nasdfasdf!@#$@#%^[]{}&amp;<xml>\" + doubleSlash\r\n\t\t\t\t\t\t+ \"<div>$%^&%^&*^&()<><><>,./;\\0\\r\\f\\'][`~=\\\"+-]\\\\0MORE!\\n\\rLESS\";\r\n\t\tvar putSize = dojox.flash.comm.setMessage(correct);\r\n\t\tassert(putSize, correct.length, \"Failed putting. Correct length = \"\r\n\t\t\t\t\t\t+ correct.length + \", Flash length = \" + putSize);\r\n\t\tdojox.flash.comm.setMessage(correct);\r\n\t\tactual = dojox.flash.comm.getMessage();\r\n\t\tassert(correct, actual, \"Setting/getting message with evil characters did not work\");\r\n\t\tchop(correct);\r\n\t\r\n\t\tconsole.debug(\"Setting testXML...\");\r\n\t\tcorrect = testXML;\r\n\t\tdojox.flash.comm.setMessage(correct);\r\n\t\tactual = dojox.flash.comm.getMessage();\r\n\t\tassert(correct, actual, \"Setting/getting testXML did not work\");\r\n\t\tchop(correct);\r\n\t\t\r\n\t\tconsole.debug(\"Setting testBook(~300K)...\");\r\n\t\tcorrect = testBook;\r\n\t\tdojox.flash.comm.setMessage(correct);\r\n\t\tactual = dojox.flash.comm.getMessage();\r\n\t\tassert(correct, actual, \"Setting/getting testBook did not work\");\r\n\t\r\n\t\tconsole.debug(\"Setting testBook 3 times (~900K)...\");\r\n\t\tcorrect = testBook + testBook + testBook;\r\n\t\tdojox.flash.comm.setMessage(correct);\r\n\t\tactual = dojox.flash.comm.getMessage();\r\n\t\tassert(correct, actual, \"Setting/getting testBook X 3 did not work\");\r\n\t\t\r\n\t\tconsole.debug(\"Setting JSON...\");\r\n\t\tvar obj = {type: \"car\", color: \"red\", model: \"Ford\", year: \"2008\",\r\n\t\t\t\t\tfeatures: [\"A/C\", \"automatic\", \"4-wheel drive\"]};\r\n\t\tcorrect = dojo.toJson(obj, true);\r\n\t\tdojox.flash.comm.setMessage(correct);\r\n\t\tactual = dojox.flash.comm.getMessage();\r\n\t\tassert(correct, actual, \"Setting/getting JSON did not work\");\r\n\t\tchop(correct);\r\n\t\t\r\n\t\tconsole.debug(\"Calling method that takes multiple values...\");\r\n\t\tactual = dojox.flash.comm.multipleValues(\"key\", \"value\", \"namespace\");\r\n\t\tassert(\"namespacekeyvalue\", actual, \"Setting/getting multiple values did not work\");\r\n\t\t\r\n\t\tvar allPassed = document.createElement(\"p\");\r\n\t\tallPassed.style.backgroundColor = \"green\";\r\n\t\tallPassed.style.color = \"white\";\r\n\t\tallPassed.style.fontSize = \"24pt\";\r\n\t\tallPassed.appendChild(document.createTextNode(\"All tests passed\"));\r\n\t\tvar body = document.getElementsByTagName(\"body\")[0];\r\n\t\tbody.appendChild(allPassed);\r\n\t}catch(e){\r\n\t\tconsole.debug(e.message || e);\r\n\t}\r\n}\r\n\r\nfunction chop(testString){\r\n\tconsole.debug(\"chopping '\" + testString + \"'\");\r\n\tfor(var i = 0; i < Math.min(testString.length, 100); i++){\r\n\t\t//console.debug(\"index = \" + i);\r\n\t\ttestSlice(testString, 0, i+1);\r\n\t}\r\n}\r\n \r\nfunction testSlice( testString, from, to){\r\n\tvar putSize = dojox.flash.comm.setMessageSlice( testString, from, to);\r\n\tvar actual = dojox.flash.comm.getMessage();\r\n\tvar correct = testString.slice(from, to);\r\n\t\r\n\tvar msg = \"Put a string with \" + testString.length\r\n\t\t\t\t\t+ \" chars, but it got with \" + putSize + \" chars in the Flash layer\";\r\n\tassert(putSize, testString.length, msg);\r\n\t\r\n\tmsg = \"I got '\" + actual + \"' instead of '\" + correct +\"'\";\r\n\tassert(correct, actual, msg);\r\n}\r\n\r\nfunction assert(correct, actual, msg){\r\n\t//alert(\"correct=\"+correct+\",\\n\\nactual=\"+actual);\r\n\tif(correct != actual){\r\n\t  var failed = document.createElement(\"p\");\r\n\t\tfailed.style.backgroundColor = \"red\";\r\n\t\tfailed.style.color = \"white\";\r\n\t\tfailed.style.fontSize = \"24pt\";\r\n\t\tfailed.appendChild(document.createTextNode(\"Test failed: \" + msg));\r\n\t\tvar body = document.getElementsByTagName(\"body\")[0];\r\n\t\tbody.appendChild(failed);\r\n\t\t\r\n\t\tthrow new Error(\"ASSERTION FAILED: \" + msg);\r\n\t}else{\r\n\t\t//console.debug(\"Assertion passed\");\r\n\t}\r\n}\r\n\r\nconsole.debug(\"adding listeners...\");\r\ndojox.flash.addLoadedListener(flashReady);\r\ndojox.flash.setSwf(\"TestFlash.swf\", false);\r\ndojo.connect(dojo, \"loaded\", pageReady);"]}