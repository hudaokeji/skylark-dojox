{"version":3,"sources":["highlight/languages/cpp.js"],"names":["define","dh","dhc","constants","languages","cpp","defaultMode","lexems","UNDERSCORE_IDENT_RE","illegal","contains","keywords","false","int","float","while","private","char","catch","export","virtual","operator","sizeof","dynamic_cast","typedef","const_cast","const","struct","for","static_cast","union","namespace","unsigned","long","throw","volatile","static","protected","bool","template","mutable","if","public","friend","do","return","goto","auto","void","enum","else","break","new","extern","using","true","class","asm","case","typeid","short","reinterpret_cast","default","double","register","explicit","signed","typename","try","this","switch","continue","wchar_t","inline","delete","modes","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","C_NUMBER_MODE","QUOTE_STRING_MODE","BACKSLASH_ESCAPE","className","begin","end"],"mappings":";;;;;;;AAAAA,QAAQ,YAAa,SAASC,GAE7B,IAAIC,EAAMD,EAAGE,UA6Cb,OA5CAF,EAAGG,UAAUC,KAGZC,aACCC,QAASL,EAAIM,qBACbC,QAAS,KACTC,UAAW,UAAW,SAAU,SAAU,gBAC1CC,UACCC,MAAS,EAAGC,IAAO,EAAGC,MAAS,EAAGC,MAAS,EAAGC,QAAW,EACzDC,KAAQ,EAAGC,MAAS,EAAGC,OAAU,EAAGC,QAAW,EAC/CC,SAAY,EAAGC,OAAU,EAAGC,aAAgB,EAAGC,QAAW,EAC1DC,WAAc,EAAGC,MAAS,EAAGC,OAAU,EAAGC,IAAO,EACjDC,YAAe,EAAGC,MAAS,EAAGC,UAAa,EAAGC,SAAY,EAC1DC,KAAQ,EAAGC,MAAS,EAAGC,SAAY,EAAGC,OAAU,EAChDC,UAAa,EAAGC,KAAQ,EAAGC,SAAY,EAAGC,QAAW,EACrDC,GAAM,EAAGC,OAAU,EAAGC,OAAU,EAAGC,GAAM,EAAGC,OAAU,EACtDC,KAAQ,EAAGC,KAAQ,EAAGC,KAAQ,EAAGC,KAAQ,EAAGC,KAAQ,EACpDC,MAAS,EAAGC,IAAO,EAAGC,OAAU,EAAGC,MAAS,EAAGC,KAAQ,EACvDC,MAAS,EAAGC,IAAO,EAAGC,KAAQ,EAAGC,OAAU,EAAGC,MAAS,EACvDC,iBAAoB,EAAGC,QAAW,EAAGC,OAAU,EAC/CC,SAAY,EAAGC,SAAY,EAAGC,OAAU,EAAGC,SAAY,EACvDC,IAAO,EAAGC,KAAQ,EAAGC,OAAU,EAAGC,SAAY,EAAGC,QAAW,EAC5DC,OAAU,EAAGC,OAAU,IAGzBC,OACCzE,EAAI0E,oBACJ1E,EAAI2E,qBACJ3E,EAAI4E,cACJ5E,EAAI6E,kBACJ7E,EAAI8E,kBAEHC,UAAW,SACXC,MAAO,IACPC,IAAK,WACL1E,QAAS,gBAGTwE,UAAW,eACXC,MAAO,IAAKC,IAAK,OAKblF,EAAGG,UAAUC","file":"../../../highlight/languages/cpp.js","sourcesContent":["define([\"../_base\"], function(dh){\r\n\t\r\n\tvar dhc = dh.constants;\r\n\tdh.languages.cpp = {\r\n\t\t// summary:\r\n\t\t//\t\tC++ highlight definitions\r\n\t\tdefaultMode: {\r\n\t\t\tlexems: [dhc.UNDERSCORE_IDENT_RE],\r\n\t\t\tillegal: '</',\r\n\t\t\tcontains: ['comment', 'string', 'number', 'preprocessor'],\r\n\t\t\tkeywords: {\r\n\t\t\t\t'false': 1, 'int': 1, 'float': 1, 'while': 1, 'private': 1,\r\n\t\t\t\t'char': 1, 'catch': 1, 'export': 1, 'virtual': 1,\r\n\t\t\t\t'operator': 2, 'sizeof': 2, 'dynamic_cast': 2, 'typedef': 2,\r\n\t\t\t\t'const_cast': 2, 'const': 1, 'struct': 1, 'for': 1,\r\n\t\t\t\t'static_cast': 2, 'union': 1, 'namespace': 1, 'unsigned': 1,\r\n\t\t\t\t'long': 1, 'throw': 1, 'volatile': 2, 'static': 1,\r\n\t\t\t\t'protected': 1, 'bool': 1, 'template': 1, 'mutable': 1,\r\n\t\t\t\t'if': 1, 'public': 1, 'friend': 2, 'do': 1, 'return': 1,\r\n\t\t\t\t'goto': 1, 'auto': 1, 'void': 2, 'enum': 1, 'else': 1,\r\n\t\t\t\t'break': 1, 'new': 1, 'extern': 1, 'using': 1, 'true': 1,\r\n\t\t\t\t'class': 1, 'asm': 1, 'case': 1, 'typeid': 1, 'short': 1,\r\n\t\t\t\t'reinterpret_cast': 2, 'default': 1, 'double': 1,\r\n\t\t\t\t'register': 1, 'explicit': 1, 'signed': 1, 'typename': 1,\r\n\t\t\t\t'try': 1, 'this': 1, 'switch': 1, 'continue': 1, 'wchar_t': 1,\r\n\t\t\t\t'inline': 1, 'delete': 1\r\n\t\t\t}\r\n\t\t},\r\n\t\tmodes: [\r\n\t\t\tdhc.C_LINE_COMMENT_MODE,\r\n\t\t\tdhc.C_BLOCK_COMMENT_MODE,\r\n\t\t\tdhc.C_NUMBER_MODE,\r\n\t\t\tdhc.QUOTE_STRING_MODE,\r\n\t\t\tdhc.BACKSLASH_ESCAPE,\r\n\t\t\t{\r\n\t\t\t\tclassName: 'string',\r\n\t\t\t\tbegin: '\\'',\r\n\t\t\t\tend: '[^\\\\\\\\]\\'',\r\n\t\t\t\tillegal: '[^\\\\\\\\][^\\']'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tclassName: 'preprocessor',\r\n\t\t\t\tbegin: '#', end: '$'\r\n\t\t\t}\r\n\t\t]\r\n\t};\r\n\t\r\n\treturn dh.languages.cpp;\r\n\r\n});\r\n"]}