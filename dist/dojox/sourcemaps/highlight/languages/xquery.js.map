{"version":3,"sources":["highlight/languages/xquery.js"],"names":["define","dh","XQUERY_COMMENT","className","begin","end","dhc","constants","languages","xquery","case_insensitive","defaultMode","lexems","IDENT_RE","contains","keywords","keyword","ancestor","ancestor-or-self","and","as","ascending","at","attribute","base-uri","boundary-space","by","case","cast","castable","child","collation","comment","construction","copy-namespaces","declare","default","descendant","descendant-or-self","descending","div","document","document-node","element","else","empty","empty-sequence","encoding","eq","every","except","external","following","following-sibling","for","function","ge","greatest","gt","idiv","if","import","in","inherit","instance","intersect","is","item","lax","le","least","let","lt","mod","module","namespace","ne","node","no-inherit","no-preserve","of","option","or","order","ordered","ordering","parent","preceding","preceding-sibling","preserve","processing-instruction","return","satisfies","schema","schema-attribute","schema-element","self","some","stable","strict","strip","text","then","to","treat","typeswitch","union","unordered","validate","variable","version","where","modes"],"mappings":";;;;;;;AAAAA,QAAQ,YAAa,SAASC,GAM7B,IAAIC,GACHC,UAAW,UACXC,MAAO,SAAUC,IAAK,UA8BnBC,EAAML,EAAGM,UAgBb,OAfAN,EAAGO,UAAUC,QACZC,kBAAkB,EACjBC,aACCC,QAASN,EAAIO,UACbC,UAAW,SAAU,SAAU,WAC/BC,UACCC,SAhCHC,SAAY,EAAGC,mBAAoB,EAAGC,IAAQ,EAC9CC,GAAM,EAAGC,UAAa,EAAGC,GAAM,EAAGC,UAAa,EAC/CC,WAAY,EAAGC,iBAAkB,EAAGC,GAAM,EAAGC,KAAQ,EACrDC,KAAQ,EAAGC,SAAY,EAAGC,MAAS,EAAGC,UAAa,EACnDC,QAAW,EAAGC,aAAgB,EAAGC,kBAAmB,EACpDC,QAAW,EAAGC,QAAW,EAAGC,WAAc,EAAGC,qBAAsB,EACnEC,WAAc,EAAGC,IAAO,EAAGC,SAAY,EAAGC,gBAAiB,EAC3DC,QAAW,EAAGC,KAAQ,EAAGC,MAAS,EAAGC,iBAAkB,EACvDC,SAAY,EAAGC,GAAM,EAAGC,MAAS,EAAGC,OAAU,EAAGC,SAAY,EAC7DC,UAAa,EAAGC,oBAAqB,EAAGC,IAAO,EAAGC,SAAY,EAC9DC,GAAM,EAAGC,SAAY,EAAGC,GAAM,EAAGC,KAAQ,EAAGC,GAAM,EAAGC,OAAU,EAC/DC,GAAM,EAAGC,QAAW,EAAGC,SAAY,EAAGC,UAAa,EAAGC,GAAM,EAC5DC,KAAQ,EAAGC,IAAO,EAAGC,GAAM,EAAGC,MAAS,EAAGC,IAAO,EAAGC,GAAM,EAC1DC,IAAO,EAAGC,OAAU,EAAGC,UAAa,EAAGC,GAAM,EAAGC,KAAQ,EACxDC,aAAc,EAAGC,cAAe,EAAGC,GAAM,EAAGC,OAAU,EAAGC,GAAM,EAC/DC,MAAS,EAAGC,QAAW,EAAGC,SAAY,EAAGC,OAAU,EACnDC,UAAa,EAAGC,oBAAqB,EAAGC,SAAY,EACpDC,yBAA0B,EAAGC,OAAU,EAAGC,UAAa,EACvDC,OAAU,EAAGC,mBAAoB,EAAGC,iBAAkB,EACtDC,KAAQ,EAAGC,KAAQ,EAAGC,OAAU,EAAGC,OAAU,EAAGC,MAAS,EACzDC,KAAQ,EAAGC,KAAQ,EAAGC,GAAM,EAAGC,MAAS,EAAGC,WAAc,EACzDC,MAAS,EAAGC,UAAa,EAAGC,SAAY,EAAGC,SAAY,EACvDC,QAAW,EAAGC,MAAS,EAAGtG,OAAU,KAapCuG,OACE9G,GAEFA,eAAgBA,GAGVD,EAAGO,UAAUC","file":"../../../highlight/languages/xquery.js","sourcesContent":["define([\"../_base\"], function(dh){\r\n\r\n\t// Very simple XQuery language file.  Would be nice\r\n\t// to eventually handle more of the enclosed expressions\r\n\t// and direct XML element construction\r\n\r\n\tvar XQUERY_COMMENT = {\r\n\t\tclassName: 'comment',\r\n\t\tbegin: '\\\\(\\\\:', end: '\\\\:\\\\)'\r\n\t};\r\n\r\n\tvar XQUERY_KEYWORDS = {\r\n\t\t// From section A2.2 of the XQuery 1.0 specification\r\n\t\t'ancestor': 1, 'ancestor-or-self': 1, 'and' : 1,\r\n\t\t'as': 1, 'ascending': 1, 'at': 1, 'attribute': 1,\r\n\t\t'base-uri': 1, 'boundary-space': 1, 'by': 1, 'case': 1,\r\n\t\t'cast': 1, 'castable': 1, 'child': 1, 'collation': 1,\r\n\t\t'comment': 1, 'construction': 1, 'copy-namespaces': 1,\r\n\t\t'declare': 1, 'default': 1, 'descendant': 1, 'descendant-or-self': 1,\r\n\t\t'descending': 1, 'div': 1, 'document': 1, 'document-node': 1,\r\n\t\t'element': 1, 'else': 1, 'empty': 1, 'empty-sequence': 1,\r\n\t\t'encoding': 1, 'eq': 1, 'every': 1, 'except': 1, 'external': 1,\r\n\t\t'following': 1, 'following-sibling': 1, 'for': 1, 'function': 1,\r\n\t\t'ge': 1, 'greatest': 1, 'gt': 1, 'idiv': 1, 'if': 1, 'import': 1,\r\n\t\t'in': 1, 'inherit': 1, 'instance': 1, 'intersect': 1, 'is': 1,\r\n\t\t'item': 1, 'lax': 1, 'le': 1, 'least': 1, 'let': 1, 'lt': 1,\r\n\t\t'mod': 1, 'module': 1, 'namespace': 1, 'ne': 1, 'node': 1,\r\n\t\t'no-inherit': 1, 'no-preserve': 1, 'of': 1, 'option': 1, 'or': 1,\r\n\t\t'order': 1, 'ordered': 1, 'ordering': 1, 'parent': 1,\r\n\t\t'preceding': 1, 'preceding-sibling': 1, 'preserve': 1,\r\n\t\t'processing-instruction': 1, 'return': 1, 'satisfies': 1,\r\n\t\t'schema': 1, 'schema-attribute': 1, 'schema-element': 1,\r\n\t\t'self': 1, 'some': 1, 'stable': 1, 'strict': 1, 'strip': 1,\r\n\t\t'text': 1, 'then': 1, 'to': 1, 'treat': 1, 'typeswitch': 1,\r\n\t\t'union': 1, 'unordered': 1, 'validate': 1, 'variable': 1,\r\n\t\t'version': 1, 'where': 1, 'xquery': 1\r\n\t};\r\n\r\n\tvar dhc = dh.constants;\r\n\tdh.languages.xquery = {\r\n\t\tcase_insensitive: true,\r\n\t\t\tdefaultMode: {\r\n\t\t\t\tlexems: [dhc.IDENT_RE],\r\n\t\t\t\tcontains: ['string', 'number', 'comment'],\r\n\t\t\t\tkeywords: {\r\n\t\t\t\t\t'keyword': XQUERY_KEYWORDS\r\n\t\t\t\t}\r\n\t\t},\r\n\t\tmodes: [\r\n\t\t\t\tXQUERY_COMMENT\r\n\t\t],\r\n\t\tXQUERY_COMMENT: XQUERY_COMMENT\r\n\t};\r\n\r\n\treturn dh.languages.xquery;\r\n});\r\n"]}