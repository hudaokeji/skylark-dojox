{"version":3,"sources":["highlight/widget/Code.js"],"names":["define","declare","lang","array","query","domClass","domAttr","domConstruct","xhr","_Widget","_Templated","url","range","style","listType","templateString","postCreate","this","inherited","arguments","then","hitch","_populate","containerNode","innerHTML","data","replace","forEach","dojox","highlight","init","lines","split","line","i","li","create","add","codeList","appendChild","_lines","_updateView","setRange","Array","r","display","filter","n","set","_loadError","error","console","warn"],"mappings":";;;;;;;AAAAA,QACC,qBACA,kBACA,mBACA,aACA,iBACA,gBACA,qBACA,mBACA,gBACA,mBACA,mBACE,SAASC,EAASC,EAAMC,EAAOC,EAAOC,EAAUC,EAASC,EAAcC,EAAKC,EAASC,GAEvF,OAAOT,EAAQ,+BAAgCQ,EAASC,IAKvDC,IAAK,GACLC,MAAM,KACNC,MAAM,GACNC,SAAS,IACTZ,KAAK,GAILa,eACC,oNAMDC,WAAY,WACXC,KAAKC,UAAUC,WACZF,KAAKN,IACPH,EAAIS,KAAKN,QAASS,KAAKlB,EAAKmB,MAAMJ,KAAK,aAAcf,EAAKmB,MAAMJ,KAAK,eAUrEA,KAAKK,UAAUL,KAAKM,cAAcC,YAIpCF,UAAW,SAASG,GAEnBR,KAAKM,cAAcC,UAClB,qBAAuBP,KAAKf,KAAO,KAClCuB,EAAKC,QAAQ,MAAM,QACpB,gBAEDtB,EAAM,aAAaa,KAAKM,eAAeI,QAAQC,MAAMC,UAAUC,MAG/D,IAAIC,EAAQd,KAAKM,cAAcC,UAAUQ,MAAM,MAC/C7B,EAAMwB,QAAQI,EAAM,SAASE,EAAKC,GAEjC,IAAIC,EAAK5B,EAAa6B,OAAO,MAE7B/B,EAASgC,IAAIF,EAAKD,EAAI,GAAM,EAAI,OAAS,OAEzCD,GADAA,EAAO,cAAgBA,EAAO,uBAClBP,QAAQ,MAAM,YAC1BS,EAAGX,UAAYS,EACfhB,KAAKqB,SAASC,YAAYJ,IACzBlB,MAEFA,KAAKuB,OAASpC,EAAM,KAAKa,KAAKqB,UAC9BrB,KAAKwB,eAINC,SAAU,SAAoB9B,GAG1BA,aAAiB+B,QACnB1B,KAAKL,MAAQA,EACbK,KAAKwB,gBAIPA,YAAa,WAGZ,GAAGxB,KAAKL,MAAM,CACb,IAAIgC,EAAI3B,KAAKL,MACbK,KAAKuB,OAEH3B,OAAQgC,QAAQ,SAChBC,OAAO,SAASC,EAAEb,GAElB,OAAQA,EAAI,GAAKU,EAAE,IAAMV,EAAI,GAAKU,EAAE,KAGpC/B,OAAQgC,QAAQ,KAGlBvC,EAAQ0C,IAAI/B,KAAKqB,SAAS,QAAQM,EAAE,MAItCK,WAAY,SAASC,GAGpBC,QAAQC,KAAK,YAAanC,KAAKN,IAAK,UAAWuC","file":"../../../highlight/widget/Code.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\", \r\n\t\"dojo/_base/lang\", \r\n\t\"dojo/_base/array\", \r\n\t\"dojo/query\",\r\n\t\"dojo/dom-class\",\r\n\t\"dojo/dom-attr\",\r\n\t\"dojo/dom-construct\",\r\n\t\"dojo/request/xhr\",\r\n\t\"dijit/_Widget\", \r\n\t\"dijit/_Templated\", \r\n\t\"dojox/highlight\"\r\n], function(declare, lang, array, query, domClass, domAttr, domConstruct, xhr, _Widget, _Templated){\r\n\r\n\treturn declare(\"dojox.highlight.widget.Code\", [_Widget, _Templated],{\r\n\t\t// summary:\r\n\t\t//\t\tA simple source code formatting widget that adds line numbering, alternating line colors\r\n\t\t//\t\tand line range support on top of dojox.highlight module.\r\n\r\n\t\turl: \"\",\r\n\t\trange:null,\r\n\t\tstyle:\"\",\r\n\t\tlistType:\"1\",\r\n\t\tlang:\"\",\r\n\r\n\t\t// Note: If more control over formatting is required, the order list items can be replaced\r\n\t\t// with a table implementation instead... exercise is left for those that need it...\r\n\t\ttemplateString:\r\n\t\t\t'<div class=\"formatted\" style=\"${style}\">'+\r\n\t\t\t\t'<div class=\"titleBar\"></div>'+\r\n\t\t\t\t'<ol type=\"${listType}\" dojoAttachPoint=\"codeList\" class=\"numbers\"></ol>' +\r\n\t\t\t\t'<div style=\"display:none\" dojoAttachPoint=\"containerNode\"></div>' +\r\n\t\t\t'</div>',\r\n\t\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(this.url){\r\n\t\t\t\txhr(this.url, {}).then(lang.hitch(this,\"_populate\"), lang.hitch(this,\"_loadError\"));\r\n\t\t\t\t// load from a url\r\n\t\t\t\t/*dojo.xhrGet({\r\n\t\t\t\t\turl: this.url,\r\n\t\t\t\t\t// then poopulate:\r\n\t\t\t\t\tload: lang.hitch(this,\"_populate\"),\r\n\t\t\t\t\terror: lang.hitch(this,\"_loadError\")\r\n\t\t\t\t});*/\r\n\t\t\t}else{\r\n\t\t\t\t// or just populate from our internal content\r\n\t\t\t\tthis._populate(this.containerNode.innerHTML);\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t_populate: function(data){\r\n\t\t\t// put the content in a common node\r\n\t\t\tthis.containerNode.innerHTML =\r\n\t\t\t\t\"<pre><code class='\" + this.lang + \"'>\" +\r\n\t\t\t\t\tdata.replace(/\\</g,\"&lt;\") +\r\n\t\t\t\t\"</code></pre>\";\r\n\t\t\t// highlight it\r\n\t\t\tquery(\"pre > code\",this.containerNode).forEach(dojox.highlight.init);\r\n\t\t\t// FIXME: in ie7, the innerHTML in a real <pre> isn't split by \\n's ?\r\n\t\t\t// split the content into lines\r\n\t\t\tvar lines = this.containerNode.innerHTML.split(\"\\n\");\r\n\t\t\tarray.forEach(lines,function(line,i){\r\n\t\t\t\t// setup all the lines of the content as <li>'s\r\n\t\t\t\tvar li = domConstruct.create('li');\r\n\t\t\t\t// add some style sugar:\r\n\t\t\t\tdomClass.add(li, (i % 2 !== 0 ? \"even\" : \"odd\"));\r\n\t\t\t\tline = \"<pre><code>\" + line + \"&nbsp;</code></pre>\";\r\n\t\t\t\tline = line.replace(/\\t/g,\" &nbsp; \");\r\n\t\t\t\tli.innerHTML = line;\r\n\t\t\t\tthis.codeList.appendChild(li);\r\n\t\t\t},this);\r\n\t\t\t// save our data\r\n\t\t\tthis._lines = query(\"li\",this.codeList);\r\n\t\t\tthis._updateView();\r\n\t\t},\r\n\t\r\n\t\t// FIXME: user _setRangeAttr pattern? so you can code.set('range', [1, 100]);\r\n\t\tsetRange: function(/* Array */range){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tupdate the view to a new passed range\r\n\t\t\tif(range instanceof Array){\r\n\t\t\t\tthis.range = range;\r\n\t\t\t\tthis._updateView();\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t_updateView: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tset the list to the current range\r\n\t\t\tif(this.range){\r\n\t\t\t\tvar r = this.range;\r\n\t\t\t\tthis._lines\r\n\t\t\t\t\t// hide them all\r\n\t\t\t\t\t.style({ display:\"none\" })\r\n\t\t\t\t\t.filter(function(n,i){\r\n\t\t\t\t\t\t// remove nodes out of range\r\n\t\t\t\t\t\treturn (i + 1 >= r[0] && i + 1 <= r[1]);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t// set them visible again\r\n\t\t\t\t\t.style({ display:\"\" })\r\n\t\t\t\t;\r\n\t\t\t\t// set the \"start\" attribute on the OL so numbering works\r\n\t\t\t\tdomAttr.set(this.codeList,\"start\",r[0]);\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t_loadError: function(error){\r\n\t\t\t// summary:\r\n\t\t\t//\t\ta generic error handler for the url=\"\"\r\n\t\t\tconsole.warn(\"loading: \", this.url, \" FAILED\", error);\r\n\t\t}\r\n\r\n\t});\r\n\r\n});"]}