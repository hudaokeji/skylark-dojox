{"version":3,"sources":["highlight/_base.js"],"names":["define","lang","array","dom","domClass","dh","getObject","C_NUMBER_RE","esc","value","replace","blockText","block","result","forEach","childNodes","node","nodeType","push","nodeValue","String","nodeName","toLowerCase","join","buildKeywordGroups","mode","keywordGroups","key","keywords","Object","keyword","languages","constants","IDENT_RE","UNDERSCORE_IDENT_RE","NUMBER_RE","APOS_STRING_MODE","className","begin","end","illegal","contains","relevance","QUOTE_STRING_MODE","BACKSLASH_ESCAPE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","HASH_COMMENT_MODE","C_NUMBER_MODE","Highlighter","langName","textBlock","language","this","modes","defaultMode","keywordCount","illegalRe","buildRes","highlight","e","partialResult","replaceText","text","tagName","parentNode","container","document","createElement","environment","innerHTML","replaceChild","firstChild","highlightStringLanguage","str","highlightStringAuto","relevanceMax","extend","beginRe","langRe","endRe","subMode","lexeme","classes","length","i","j","test","endOfMode","endsWithParent","isIllegal","global","case_insensitive","RegExp","buildTerminators","terminators","lmode","indexOf","m","t","terminatorsRe","eatModeChunk","index","substr","match","exec","buffer","keywordMatch","matchStr","buildLexemes","lexemes","lexems","lexemsRe","processKeywords","lastIndex","keywordM","processModeInfo","newMode","excludeBegin","endLevel","excludeEnd","pop","modeInfo","dojox","processString","init","byId","every","split","some","charAt","highlightAuto","Code","props"],"mappings":"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","file":"../../highlight/_base.js","sourcesContent":["define([\r\n\t\"dojo/_base/lang\", \r\n\t\"dojo/_base/array\", \r\n\t\"dojo/dom\", \r\n\t\"dojo/dom-class\"\r\n], function(lang, array, dom, domClass){\r\n\r\n\r\n\tvar dh = lang.getObject(\"dojox.highlight\", true),\r\n\t\tC_NUMBER_RE = '\\\\b(0x[A-Za-z0-9]+|\\\\d+(\\\\.\\\\d+)?)'\r\n\t;\r\n\t/*=====\r\n\t dh = {\r\n\t\t // summary:\r\n\t\t //\t\tSyntax highlighting with language auto-detection package\r\n\t\t // description:\r\n\t\t //\t\tSyntax highlighting with language auto-detection package.\r\n\t\t //\t\tReleased under CLA by the Dojo Toolkit, original BSD release\r\n\t\t //\t\tavailable from: http://softwaremaniacs.org/soft/highlight/\r\n\t };\r\n\t =====*/\r\n\r\n\tdh.languages = dh.languages || {};\r\n\t// constants\r\n\r\n\tdh.constants = {\r\n\t\tIDENT_RE: '[a-zA-Z][a-zA-Z0-9_]*',\r\n\t\tUNDERSCORE_IDENT_RE: '[a-zA-Z_][a-zA-Z0-9_]*',\r\n\t\tNUMBER_RE: '\\\\b\\\\d+(\\\\.\\\\d+)?',\r\n\t\tC_NUMBER_RE: C_NUMBER_RE,\r\n\t\t// Common modes\r\n\t\tAPOS_STRING_MODE: {\r\n\t\t\tclassName: 'string',\r\n\t\t\tbegin: '\\'', end: '\\'',\r\n\t\t\tillegal: '\\\\n',\r\n\t\t\tcontains: ['escape'],\r\n\t\t\trelevance: 0\r\n\t\t},\r\n\t\tQUOTE_STRING_MODE: {\r\n\t\t\tclassName: 'string',\r\n\t\t\tbegin: '\"',\r\n\t\t\tend: '\"',\r\n\t\t\tillegal: '\\\\n',\r\n\t\t\tcontains: ['escape'],\r\n\t\t\trelevance: 0\r\n\t\t},\r\n\t\tBACKSLASH_ESCAPE: {\r\n\t\t\tclassName: 'escape',\r\n\t\t\tbegin: '\\\\\\\\.', end: '^',\r\n\t\t\trelevance: 0\r\n\t\t},\r\n\t\tC_LINE_COMMENT_MODE: {\r\n\t\t\tclassName: 'comment',\r\n\t\t\tbegin: '//', end: '$',\r\n\t\t\trelevance: 0\r\n\t\t},\r\n\t\tC_BLOCK_COMMENT_MODE: {\r\n\t\t\tclassName: 'comment',\r\n\t\t\tbegin: '/\\\\*', end: '\\\\*/'\r\n\t\t},\r\n\t\tHASH_COMMENT_MODE: {\r\n\t\t\tclassName: 'comment',\r\n\t\t\tbegin: '#', end: '$'\r\n\t\t},\r\n\t\tC_NUMBER_MODE: {\r\n\t\t\tclassName: 'number',\r\n\t\t\tbegin: C_NUMBER_RE, end: '^',\r\n\t\t\trelevance: 0\r\n\t\t}\r\n\t};\r\n\r\n\t// utilities\r\n\t\r\n\tfunction esc(value){\r\n\t\treturn value.replace(/&/gm, '&amp;').replace(/</gm, '&lt;').replace(/>/gm, '&gt;');\r\n\t}\r\n\t\r\n\tfunction verifyText(block){\r\n\t\treturn array.every(block.childNodes, function(node){\r\n\t\t\treturn node.nodeType == 3 || String(node.nodeName).toLowerCase() == 'br';\r\n\t\t});\r\n\t}\r\n\r\n\tfunction blockText(block){\r\n\t\tvar result = [];\r\n\t\tarray.forEach(block.childNodes, function(node){\r\n\t\t\tif(node.nodeType == 3){\r\n\t\t\t\tresult.push(node.nodeValue);\r\n\t\t\t}else if(String(node.nodeName).toLowerCase() == 'br'){\r\n\t\t\t\tresult.push(\"\\n\");\r\n\t\t\t}else{\r\n\t\t\t\tthrow 'Complex markup';\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result.join(\"\");\r\n\t}\r\n\r\n\tfunction buildKeywordGroups(mode){\r\n\t\tif(!mode.keywordGroups){\r\n\t\t\tfor(var key in mode.keywords){\r\n\t\t\t\tvar kw = mode.keywords[key];\r\n    \t\t\tif(kw instanceof Object){  // dojo.isObject?\r\n\t\t\t\t\tmode.keywordGroups = mode.keywords;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tmode.keywordGroups = {keyword: mode.keywords};\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction buildKeywords(language){\r\n\t\tif(language.defaultMode && language.modes){\r\n\t\t\tbuildKeywordGroups(language.defaultMode);\r\n\t\t\tarray.forEach(language.modes, buildKeywordGroups);\r\n\t\t}\r\n\t}\r\n\t\r\n\t// main object\r\n\r\n\tvar Highlighter = function(langName, textBlock){\r\n\t\t// initialize the state\r\n\t\tthis.langName = langName;\r\n\t\tthis.lang = dh.languages[langName];\r\n\t\tthis.modes = [this.lang.defaultMode];\r\n\t\tthis.relevance = 0;\r\n\t\tthis.keywordCount = 0;\r\n\t\tthis.result = [];\r\n\t\t\r\n\t\t// build resources lazily\r\n\t\tif(!this.lang.defaultMode.illegalRe){\r\n\t\t\tthis.buildRes();\r\n\t\t\tbuildKeywords(this.lang);\r\n\t\t}\r\n\t\t\r\n\t\t// run the algorithm\r\n\t\ttry{\r\n\t\t\tthis.highlight(textBlock);\r\n\t\t\tthis.result = this.result.join(\"\");\r\n\t\t}catch(e){\r\n\t\t\tif(e == 'Illegal'){\r\n\t\t\t\tthis.relevance = 0;\r\n\t\t\t\tthis.keywordCount = 0;\r\n\t\t\t\tthis.partialResult = this.result.join(\"\");\r\n\t\t\t\tthis.result = esc(textBlock);\r\n\t\t\t}else{\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tlang.extend(Highlighter, {\r\n\t\tbuildRes: function(){\r\n\t\t\tarray.forEach(this.lang.modes, function(mode){\r\n\t\t\t\tif(mode.begin){\r\n\t\t\t\t\tmode.beginRe = this.langRe('^' + mode.begin);\r\n\t\t\t\t}\r\n\t\t\t\tif(mode.end){\r\n\t\t\t\t\tmode.endRe = this.langRe('^' + mode.end);\r\n\t\t\t\t}\r\n\t\t\t\tif(mode.illegal){\r\n\t\t\t\t\tmode.illegalRe = this.langRe('^(?:' + mode.illegal + ')');\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t\tthis.lang.defaultMode.illegalRe = this.langRe('^(?:' + this.lang.defaultMode.illegal + ')');\r\n\t\t},\r\n\t\t\r\n\t\tsubMode: function(lexeme){\r\n\t\t\tvar classes = this.modes[this.modes.length - 1].contains;\r\n\t\t\tif(classes){\r\n\t\t\t\tvar modes = this.lang.modes;\r\n\t\t\t\tfor(var i = 0; i < classes.length; ++i){\r\n\t\t\t\t\tvar className = classes[i];\r\n\t\t\t\t\tfor(var j = 0; j < modes.length; ++j){\r\n\t\t\t\t\t\tvar mode = modes[j];\r\n\t\t\t\t\t\tif(mode.className == className && mode.beginRe.test(lexeme)){ return mode; }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\r\n\t\tendOfMode: function(lexeme){\r\n\t\t\tfor(var i = this.modes.length - 1; i >= 0; --i){\r\n\t\t\t\tvar mode = this.modes[i];\r\n\t\t\t\tif(mode.end && mode.endRe.test(lexeme)){ return this.modes.length - i; }\r\n\t\t\t\tif(!mode.endsWithParent){ break; }\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t},\r\n\r\n\t\tisIllegal: function(lexeme){\r\n\t\t\tvar illegalRe = this.modes[this.modes.length - 1].illegalRe;\r\n\t\t\treturn illegalRe && illegalRe.test(lexeme);\r\n\t\t},\r\n\r\n\r\n\t\tlangRe: function(value, global){\r\n\t\t\tvar mode =  'm' + (this.lang.case_insensitive ? 'i' : '') + (global ? 'g' : '');\r\n\t\t\treturn new RegExp(value, mode);\r\n\t\t},\r\n\t\r\n\t\tbuildTerminators: function(){\r\n\t\t\tvar mode = this.modes[this.modes.length - 1],\r\n\t\t\t\tterminators = {};\r\n\t\t\tif(mode.contains){\r\n\t\t\t\tarray.forEach(this.lang.modes, function(lmode){\r\n\t\t\t\t\tif(array.indexOf(mode.contains, lmode.className) >= 0){\r\n\t\t\t\t\t\tterminators[lmode.begin] = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tfor(var i = this.modes.length - 1; i >= 0; --i){\r\n\t\t\t\tvar m = this.modes[i];\r\n\t\t\t\tif(m.end){ terminators[m.end] = 1; }\r\n\t\t\t\tif(!m.endsWithParent){ break; }\r\n\t\t\t}\r\n\t\t\tif(mode.illegal){ terminators[mode.illegal] = 1; }\r\n\t\t\tvar t = [];\r\n\t\t\tfor(i in terminators){ t.push(i); }\r\n\t\t\tmode.terminatorsRe = this.langRe(\"(\" + t.join(\"|\") + \")\");\r\n\t\t},\r\n\r\n\t\teatModeChunk: function(value, index){\r\n\t\t\tvar mode = this.modes[this.modes.length - 1];\r\n\t\t\t\r\n\t\t\t// create terminators lazily\r\n\t\t\tif(!mode.terminatorsRe){\r\n\t\t\t\tthis.buildTerminators();\r\n\t\t\t}\r\n\t\r\n\t\t\tvalue = value.substr(index);\r\n\t\t\tvar match = mode.terminatorsRe.exec(value);\r\n\t\t\tif(!match){\r\n\t\t\t\treturn {\r\n\t\t\t\t\tbuffer: value,\r\n\t\t\t\t\tlexeme: \"\",\r\n\t\t\t\t\tend:    true\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tbuffer: match.index ? value.substr(0, match.index) : \"\",\r\n\t\t\t\tlexeme: match[0],\r\n\t\t\t\tend:    false\r\n\t\t\t};\r\n\t\t},\r\n\t\r\n\t\tkeywordMatch: function(mode, match){\r\n\t\t\tvar matchStr = match[0];\r\n\t\t\tif(this.lang.case_insensitive){ matchStr = matchStr.toLowerCase(); }\r\n\t\t\tfor(var className in mode.keywordGroups){\r\n\t\t\t\tif(matchStr in mode.keywordGroups[className]){ return className; }\r\n\t\t\t}\r\n\t\t\treturn \"\";\r\n\t\t},\r\n\t\t\r\n\t\tbuildLexemes: function(mode){\r\n\t\t\tvar lexemes = {};\r\n\t\t\tarray.forEach(mode.lexems, function(lexeme){\r\n\t\t\t\tlexemes[lexeme] = 1;\r\n\t\t\t});\r\n\t\t\tvar t = [];\r\n\t\t\tfor(var i in lexemes){ t.push(i); }\r\n\t\t\tmode.lexemsRe = this.langRe(\"(\" + t.join(\"|\") + \")\", true);\r\n\t\t},\r\n\t\r\n\t\tprocessKeywords: function(buffer){\r\n\t\t\tvar mode = this.modes[this.modes.length - 1];\r\n\t\t\tif(!mode.keywords || !mode.lexems){\r\n\t\t\t\treturn esc(buffer);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// create lexemes lazily\r\n\t\t\tif(!mode.lexemsRe){\r\n\t\t\t\tthis.buildLexemes(mode);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tmode.lexemsRe.lastIndex = 0;\r\n\t\t\tvar result = [], lastIndex = 0,\r\n\t\t\t\tmatch = mode.lexemsRe.exec(buffer);\r\n\t\t\twhile(match){\r\n\t\t\t\tresult.push(esc(buffer.substr(lastIndex, match.index - lastIndex)));\r\n\t\t\t\tvar keywordM = this.keywordMatch(mode, match);\r\n\t\t\t\tif(keywordM){\r\n\t\t\t\t\t++this.keywordCount;\r\n\t\t\t\t\tresult.push('<span class=\"'+ keywordM +'\">' + esc(match[0]) + '</span>');\r\n\t\t\t\t}else{\r\n\t\t\t\t\tresult.push(esc(match[0]));\r\n\t\t\t\t}\r\n\t\t\t\tlastIndex = mode.lexemsRe.lastIndex;\r\n\t\t\t\tmatch = mode.lexemsRe.exec(buffer);\r\n\t\t\t}\r\n\t\t\tresult.push(esc(buffer.substr(lastIndex, buffer.length - lastIndex)));\r\n\t\t\treturn result.join(\"\");\r\n\t\t},\r\n\t\r\n\t\tprocessModeInfo: function(buffer, lexeme, end) {\r\n\t\t\tvar mode = this.modes[this.modes.length - 1];\r\n\t\t\tif(end){\r\n\t\t\t\tthis.result.push(this.processKeywords(mode.buffer + buffer));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(this.isIllegal(lexeme)){ throw 'Illegal'; }\r\n\t\t\tvar newMode = this.subMode(lexeme);\r\n\t\t\tif(newMode){\r\n\t\t\t\tmode.buffer += buffer;\r\n\t\t\t\tthis.result.push(this.processKeywords(mode.buffer));\r\n\t\t\t\tif(newMode.excludeBegin){\r\n\t\t\t\t\tthis.result.push(lexeme + '<span class=\"' + newMode.className + '\">');\r\n\t\t\t\t\tnewMode.buffer = '';\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.result.push('<span class=\"' + newMode.className + '\">');\r\n\t\t\t\t\tnewMode.buffer = lexeme;\r\n\t\t\t\t}\r\n\t\t\t\tthis.modes.push(newMode);\r\n\t\t\t\tthis.relevance += typeof newMode.relevance == \"number\" ? newMode.relevance : 1;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar endLevel = this.endOfMode(lexeme);\r\n\t\t\tif(endLevel){\r\n\t\t\t\tmode.buffer += buffer;\r\n\t\t\t\tif(mode.excludeEnd){\r\n\t\t\t\t\tthis.result.push(this.processKeywords(mode.buffer) + '</span>' + lexeme);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.result.push(this.processKeywords(mode.buffer + lexeme) + '</span>');\r\n\t\t\t\t}\r\n\t\t\t\twhile(endLevel > 1){\r\n\t\t\t\t\tthis.result.push('</span>');\r\n\t\t\t\t\t--endLevel;\r\n\t\t\t\t\tthis.modes.pop();\r\n\t\t\t\t}\r\n\t\t\t\tthis.modes.pop();\r\n\t\t\t\tthis.modes[this.modes.length - 1].buffer = '';\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\thighlight: function(value){\r\n\t\t\tvar index = 0;\r\n\t\t\tthis.lang.defaultMode.buffer = '';\r\n\t\t\tdo{\r\n\t\t\t\tvar modeInfo = this.eatModeChunk(value, index);\r\n\t\t\t\tthis.processModeInfo(modeInfo.buffer, modeInfo.lexeme, modeInfo.end);\r\n\t\t\t\tindex += modeInfo.buffer.length + modeInfo.lexeme.length;\r\n\t\t\t}while(!modeInfo.end);\r\n\t\t\tif(this.modes.length > 1){\r\n\t\t\t\tthrow 'Illegal';\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\t\r\n\t// more utilities\r\n\t\r\n\tfunction replaceText(node, className, text){\r\n\t\tif(String(node.tagName).toLowerCase() == \"code\" && String(node.parentNode.tagName).toLowerCase() == \"pre\"){\r\n\t\t\t// See these 4 lines? This is IE's notion of \"node.innerHTML = text\". Love this browser :-/\r\n\t\t\tvar container = document.createElement('div'),\r\n\t\t\t\tenvironment = node.parentNode.parentNode;\r\n\t\t\tcontainer.innerHTML = '<pre><code class=\"' + className + '\">' + text + '</code></pre>';\r\n\t\t\tenvironment.replaceChild(container.firstChild, node.parentNode);\r\n\t\t}else{\r\n\t\t\tnode.className = className;\r\n\t\t\tnode.innerHTML = text;\r\n\t\t}\r\n\t}\r\n\tfunction highlightStringLanguage(language, str){\r\n\t\tvar highlight = new Highlighter(language, str);\r\n\t\treturn {result:highlight.result, langName:language, partialResult:highlight.partialResult};\r\n\t}\r\n\r\n\tfunction highlightLanguage(block, language){\r\n\t\tvar result = highlightStringLanguage(language, blockText(block));\r\n\t\treplaceText(block, block.className, result.result);\r\n\t}\r\n\r\n\tfunction highlightStringAuto(str){\r\n\t\tvar result = \"\", langName = \"\", bestRelevance = 2,\r\n\t\t\ttextBlock = str;\r\n\t\tfor(var key in dh.languages){\r\n\t\t\tif(!dh.languages[key].defaultMode){ continue; }\t// skip internal members\r\n\t\t\tvar highlight = new Highlighter(key, textBlock),\r\n\t\t\t\trelevance = highlight.keywordCount + highlight.relevance, relevanceMax = 0;\r\n\t\t\tif(!result || relevance > relevanceMax){\r\n\t\t\t\trelevanceMax = relevance;\r\n\t\t\t\tresult = highlight.result;\r\n\t\t\t\tlangName = highlight.langName;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {result:result, langName:langName};\r\n\t}\r\n\t\r\n\tfunction highlightAuto(block){\r\n\t\tvar result = highlightStringAuto(blockText(block));\r\n\t\tif(result.result){\r\n\t\t\treplaceText(block, result.langName, result.result);\r\n\t\t}\r\n\t}\r\n\t\r\n\t// the public API\r\n\r\n\tdojox.highlight.processString = function(/* String */ str, /* String? */lang){\r\n\t\t// summary:\r\n\t\t//\t\thighlight a string of text\r\n\t\t// returns: Object\r\n\t\t//\t\tObject containing:\r\n\t\t//\r\n\t\t//\t\t- result - string of html with spans to apply formatting\r\n\t\t//\t\t- partialResult - if the formatting failed: string of html\r\n\t\t//\t\t  up to the point of the failure, otherwise: undefined\r\n\t\t//\t\t- langName - the language used to do the formatting\r\n\t\treturn lang ? highlightStringLanguage(lang, str) : highlightStringAuto(str);\r\n\t};\r\n\r\n\tdojox.highlight.init = function(/* String|DomNode */ node){\r\n\t\t// summary:\r\n\t\t//\t\tHighlight a passed node\r\n\t\t// description:\r\n\t\t//\t\tSyntax highlight a passed DomNode or String ID of a DomNode\r\n\t\t// example:\r\n\t\t//\t|\tdojox.highlight.init(\"someId\");\r\n\t\t//\r\n\t\tnode = dom.byId(node);\r\n\t\tif(domClass.contains(node, \"no-highlight\")){ return; }\r\n\t\tif(!verifyText(node)){ return; }\r\n\t\r\n\t\tvar classes = node.className.split(/\\s+/),\r\n\t\t\tflag = array.some(classes, function(className){\r\n\t\t\t\tif(className.charAt(0) != \"_\" && dh.languages[className]){\r\n\t\t\t\t\thighlightLanguage(node, className);\r\n\t\t\t\t\treturn true;\t// stop iterations\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t// continue iterations\r\n\t\t\t});\r\n\t\tif(!flag){\r\n\t\t\thighlightAuto(node);\r\n\t\t}\r\n\t};\r\n\r\n\tdh.Code = function(props, node){\r\n\t\t// summary:\r\n\t\t//\t\tA class object to allow for dojoType usage with the highlight engine. This is\r\n\t\t//\t\tNOT a Widget in the conventional sense, and does not have any member functions for\r\n\t\t//\t\tthe instance. This is provided as a convenience. You likely should be calling\r\n\t\t//\t\t`dojox.highlight.init` directly.\r\n\t\t// props: Object?\r\n\t\t//\t\tUnused. Pass 'null' or {}. Positional usage to allow `dojo.parser` to instantiate\r\n\t\t//\t\tthis class as other Widgets would be.\r\n\t\t// node: String|DomNode\r\n\t\t//\t\tA String ID or DomNode reference to use as the root node of this instance.\r\n\t\t// example:\r\n\t\t//\t|\t<pre><code dojoType=\"dojox.highlight.Code\">for(var i in obj){ ... }</code></pre>\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\tvar inst = new dojox.highlight.Code({}, \"someId\");\r\n\t\t//\r\n\t\tdh.init(node);\r\n\t};\r\n\r\n\treturn dh;\r\n\r\n});\r\n"]}