{"version":3,"sources":["store/tests/priority.js"],"names":["define","registerSuite","assert","priority","Deferred","all","declare","Memory","QueryResults","started","anAsyncMethod","query","results","this","inherited","arguments","deferred","setTimeout","resolve","AsyncMemory","get","put","add","data","id","name","prime","mappedTo","words","even","priorityStore","order","operations","initialData","slice","push","forEach","object","then","deepEqual","strictEqual"],"mappings":";;;;;;;AAAAA,QACC,gBACA,qBACA,cACA,gBACA,mBACA,qBACA,oBACA,gCACE,SAAUC,EAAeC,EAAQC,EAAUC,EAAUC,EAAKC,EAASC,EAAQC,GAE7E,IAAIC,EAAU,EACd,SAASC,EAAcC,GACtB,OAAO,WACNF,IACA,IAAIG,EAAUC,KAAKC,UAAUC,WACzBC,EAAW,IAAIZ,EAInB,OAHAa,WAAW,WACVD,EAASE,QAAQN,IACf,IACID,EAAQ,IAAIH,EAAaQ,GAAYA,GAG9C,IAAIG,EAAcb,EAAQC,GACzBa,IAAKV,IACLW,IAAKX,IACLY,IAAKZ,IACLC,MAAOD,GAAc,KAElBa,IACFC,GAAI,EAAGC,KAAM,MAAOC,OAAO,EAAOC,SAAU,IAAKC,OAAQ,YACzDJ,GAAI,EAAGC,KAAM,MAAOI,MAAM,EAAMH,OAAO,EAAMC,SAAU,IAAKC,OAAQ,SAAU,YAC9EJ,GAAI,EAAGC,KAAM,QAASC,OAAO,EAAMC,SAAU,IAAKC,OAAQ,QAAS,YACnEJ,GAAI,EAAGC,KAAM,OAAQI,MAAM,EAAMH,OAAO,EAAOC,SAAU,OACzDH,GAAI,EAAGC,KAAM,OAAQC,OAAO,EAAMC,SAAU,MAE9CG,cAAgB3B,EAAS,IAAIgB,GAC5BI,KAAMA,KAGPtB,GACCwB,KAAM,WACNM,MAAO,WACN,IAAInB,KACAoB,KACAD,KACAE,EAAcV,EAAKW,MAAM,GAsB7B,OArBAF,EAAWG,KAAKL,cAAcnB,UAAWR,SAAU,KAAKiC,QAAQ,SAASC,GAExEzB,EAAQuB,KAAKE,KACXC,KAAK,WACPP,EAAMI,KAAK,SACXjC,EAAOqC,UAAU3B,EAASqB,MAE3B/B,EAAOsC,YAAY/B,EAAS,GAC5BuB,EAAWG,KAAKL,cAAcV,IAAI,GAAIjB,SAAU,IAAImC,KAAK,SAASD,GACjEN,EAAMI,KAAK,OACXjC,EAAOqC,UAAUF,EAAQd,EAAK,OAE/BrB,EAAOsC,YAAY/B,EAAS,GAC5BuB,EAAWG,KAAKL,cAAcT,KAAKG,GAAI,EAAGC,KAAM,QAAStB,SAAU,IAAImC,KAAK,SAASD,GACpFN,EAAMI,KAAK,UAEZjC,EAAOsC,YAAY/B,EAAS,GAC5BuB,EAAWG,KAAKL,cAAcR,KAAKE,GAAI,EAAGC,KAAM,UAAWtB,SAAU,IAAImC,KAAK,SAASD,GACtFN,EAAMI,KAAK,UAEZjC,EAAOsC,YAAY/B,EAAS,GACrBJ,EAAI2B,GAAYM,KAAK,WAC3BpC,EAAOsC,YAAY/B,EAAS,GAC5BP,EAAOqC,UAAUR,GAAQ,QAAS,MAAO,MAAO","file":"../../../store/tests/priority.js","sourcesContent":["define([\r\n\t'intern!object',\r\n\t'intern/chai!assert',\r\n\t'../priority',\r\n\t'dojo/Deferred',\r\n\t'dojo/promise/all',\r\n\t'dojo/_base/declare',\r\n\t'dojo/store/Memory',\r\n\t'dojo/store/util/QueryResults'\r\n], function (registerSuite, assert, priority, Deferred, all, declare, Memory, QueryResults) {\r\n\r\n\tvar started = 0;\r\n\tfunction anAsyncMethod(query){\r\n\t\treturn function(){\r\n\t\t\tstarted++;\r\n\t\t\tvar results = this.inherited(arguments);\r\n\t\t\tvar deferred = new Deferred();\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tdeferred.resolve(results);\r\n\t\t\t}, 10);\r\n\t\t\treturn query ? new QueryResults(deferred) : deferred;\r\n\t\t}\r\n\t}\r\n\tvar AsyncMemory = declare(Memory, {\r\n\t\tget: anAsyncMethod(),\r\n\t\tput: anAsyncMethod(),\r\n\t\tadd: anAsyncMethod(),\r\n\t\tquery: anAsyncMethod(true)\r\n\t});\r\n\tvar data = [\r\n\t\t{id: 1, name: 'one', prime: false, mappedTo: 'E', words: ['banana']},\r\n\t\t{id: 2, name: 'two', even: true, prime: true, mappedTo: 'D', words: ['banana', 'orange']},\r\n\t\t{id: 3, name: 'three', prime: true, mappedTo: 'C', words: ['apple', 'orange']},\r\n\t\t{id: 4, name: 'four', even: true, prime: false, mappedTo: null},\r\n\t\t{id: 5, name: 'five', prime: true, mappedTo: 'A'}\r\n\t];\r\n\tpriorityStore = priority(new AsyncMemory({\r\n\t\tdata: data\r\n\t}));\r\n\r\n\tregisterSuite({\r\n\t\tname: \"priority\",\r\n\t\torder: function(){\r\n\t\t\tvar results = [];\r\n\t\t\tvar operations = [];\r\n\t\t\tvar order = [];\r\n\t\t\tvar initialData = data.slice(0);\r\n\t\t\toperations.push(priorityStore.query({}, {priority: 10}).forEach(function(object){\r\n\t\t\t\t// clear the data\r\n\t\t\t\tresults.push(object);\r\n\t\t\t}).then(function(){\r\n\t\t\t\torder.push('query');\r\n\t\t\t\tassert.deepEqual(results, initialData);\r\n\t\t\t}));\r\n\t\t\tassert.strictEqual(started, 1);\r\n\t\t\toperations.push(priorityStore.get(1, {priority: 0}).then(function(object){\r\n\t\t\t\torder.push('get');\r\n\t\t\t\tassert.deepEqual(object, data[0]);\r\n\t\t\t}));\r\n\t\t\tassert.strictEqual(started, 1);\r\n\t\t\toperations.push(priorityStore.put({id: 6, name: 'six'}, {priority: 3}).then(function(object){\r\n\t\t\t\torder.push('put');\r\n\t\t\t}));\r\n\t\t\tassert.strictEqual(started, 2);\r\n\t\t\toperations.push(priorityStore.add({id: 7, name: 'seven'}, {priority: 1}).then(function(object){\r\n\t\t\t\torder.push('add');\r\n\t\t\t}));\r\n\t\t\tassert.strictEqual(started, 2);\r\n\t\t\treturn all(operations).then(function(){\r\n\t\t\t\tassert.strictEqual(started, 5);\r\n\t\t\t\tassert.deepEqual(order, ['query', 'put', 'add', 'get']);\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n});\r\n"]}