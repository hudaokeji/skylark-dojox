{"version":3,"sources":["date/php.js"],"names":["define","dojo","dlang","ddate","dxst","php","getObject","dojox","format","date","DateFormat","this","regex","keys","key","constructor","prototype","isString","length","isFunction","push","RegExp","join","replacements","tokens","escape","token","i","charAt","extend","weekdays","weekdays_3","months","months_3","monthdays","replacement","d","j","D","getDay","getDate","l","N","w","S","z","millis","getTime","Date","getFullYear","Math","floor","W","week","jan1_w","parseInt","last_year","getMonth","isLeapYear","Boolean","L","ceil","F","m","n","M","t","o","Y","y","slice","a","getHours","b","toUpperCase","B","off","getTimezoneOffset","secs","getMinutes","getSeconds","beat","abs","g","G","h","H","mins","s","e","getTimezoneName","I","O","hours","P","substring","T","Z","c","r","U"],"mappings":";;;;;;;AAAAA,QAAQ,oBAAqB,kBAAkB,YAAY,yBAA0B,SAASC,EAAKC,EAAMC,EAAMC,GAE/G,IAAIC,EAAMJ,EAAKK,UAAU,YAAY,EAAMC,OA6V3C,OAtVAF,EAAIG,OAAS,SAAkBC,EAAiBD,GAI/C,OADS,IAAIH,EAAIK,WAAWF,GAClBA,OAAOC,IAGlBJ,EAAIK,WAAa,SAAoBF,GAGpC,IAAIG,KAAKC,MAAM,CACd,IAAIC,KACJ,IAAI,IAAIC,KAAOH,KAAKI,YAAYC,UAC5Bf,EAAKgB,SAASH,IAAsB,GAAdA,EAAII,QAAejB,EAAKkB,WAAWR,KAAKG,KAChED,EAAKO,KAAKN,GAGZH,KAAKI,YAAYC,UAAUJ,MAAQ,IAAIS,OAAO,gBAAkBR,EAAKS,KAAK,IAAM,MAAO,KAGxF,IAAIC,KAEJZ,KAAKa,OAASpB,EAAKI,EAAQG,KAAKC,MAAO,SAASa,EAAQC,EAAOC,GAC9D,OAAGD,GACFH,EAAaH,MAAMO,EAAGD,IACfA,GAELD,EACKA,EAAOG,OAAO,QADtB,IAKDjB,KAAKY,aAAeA,GAGrBtB,EAAK4B,OAAOxB,EAAIK,YACfoB,UAAW,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAC7EC,YAAa,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACvDC,QAAS,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YACvHC,UAAW,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACxFC,WAAY,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAE7C1B,OAAQ,SAAkBC,GACzBE,KAAKF,KAAOA,EACZ,IAAI,IAAW0B,EAAPR,EAAI,EAAgBQ,EAAcxB,KAAKY,aAAaI,GAAIA,IAC/DhB,KAAKa,OAAOW,EAAY,IAAMxB,KAAKwB,EAAY,MAEhD,OAAOxB,KAAKa,OAAOF,KAAK,KAKzBc,EAAG,WAGF,IAAIC,EAAI1B,KAAK0B,IACb,OAAoB,GAAZA,EAAEnB,OAAe,IAAMmB,EAAIA,GAGpCC,EAAG,WAGF,OAAO3B,KAAKoB,WAAWpB,KAAKF,KAAK8B,WAGlCF,EAAG,WAGF,OAAO1B,KAAKF,KAAK+B,UAAY,IAG9BC,EAAG,WAGF,OAAO9B,KAAKmB,SAASnB,KAAKF,KAAK8B,WAGhCG,EAAG,WAGF,IAAIC,EAAIhC,KAAKgC,IACb,OAASA,GAAK,GAGfC,EAAG,WAGF,OAAOjC,KAAKF,KAAK+B,WAChB,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,MAAO,KAClC,KAAK,EAAG,KAAK,GAAI,KAAK,GAAI,MAAO,KACjC,KAAK,EAAG,KAAK,GAAI,MAAO,KACxB,KAAK,EAAG,KAAK,GAAI,MAAO,KACxB,QAAS,MAAO,OAIlBG,EAAG,WAGF,OAAOhC,KAAKF,KAAK8B,SAAW,IAG7BM,EAAG,WAGF,IAAIC,EAASnC,KAAKF,KAAKsC,UAAY,IAAIC,KAAKrC,KAAKF,KAAKwC,cAAe,EAAG,GAAGF,UAC3E,OAAOG,KAAKC,MAAML,EAAO,OAAY,IAKtCM,EAAG,WAGF,IAAIC,EACAC,EAAS,IAAIN,KAAKrC,KAAKF,KAAKwC,cAAe,EAAG,GAAGV,SAAW,EAC5DI,EAAIhC,KAAKF,KAAK8B,SAAW,EACzBM,EAAIU,SAAS5C,KAAKkC,KAEtB,GAAGA,GAAM,EAAIS,GAAWA,EAAS,EAAE,CAClC,IAAIE,EAAY,IAAIR,KAAKrC,KAAKF,KAAKwC,cAAgB,EAAGtC,KAAKF,KAAKgD,WAAY9C,KAAKF,KAAK+B,WAErFa,EADY,GAAVC,GAA0B,GAAVA,GAAenD,EAAMuD,WAAWF,GAC3C,GAEA,OAEJ,CAOJ,IALGG,QAAQhD,KAAKiD,KACX,IAEA,KAEGf,EAAM,EAAIF,EACjBU,EAAO,MACH,CACJ,IAAIhB,EAAIQ,GAAK,EAAIF,IAAMW,EAAS,GAChCD,EAAOH,KAAKW,KAAKxB,EAAI,GAClBiB,EAAS,KACTD,GAKL,OAAOA,GAKRS,EAAG,WAGF,OAAOnD,KAAKqB,OAAOrB,KAAKF,KAAKgD,aAG9BM,EAAG,WAGF,IAAIC,EAAIrD,KAAKqD,IACb,OAAoB,GAAZA,EAAE9C,OAAe,IAAM8C,EAAIA,GAGpCC,EAAG,WAGF,OAAOtD,KAAKsB,SAAStB,KAAKF,KAAKgD,aAGhCO,EAAG,WAGF,OAAOrD,KAAKF,KAAKgD,WAAa,EAAI,IAGnCS,EAAG,WAGF,OAAQP,QAAQhD,KAAKiD,MAAgC,GAAxBjD,KAAKF,KAAKgD,WAAmB,GAAK9C,KAAKuB,UAAUvB,KAAK8C,aAKpFG,EAAG,WAGF,OAAQzD,EAAMuD,WAAW/C,KAAKF,MAAS,IAAM,KAG9C0D,EAAG,aAQHC,EAAG,WAGF,OAAOzD,KAAKF,KAAKwC,cAAgB,IAGlCoB,EAAG,WAGF,OAAO1D,KAAKyD,IAAIE,OAAO,IAKxBC,EAAG,WAGF,OAAO5D,KAAKF,KAAK+D,YAAc,GAAK,KAAO,MAG5CC,EAAG,WAGF,OAAO9D,KAAK4D,IAAIG,eAGjBC,EAAG,WAOF,IAHA,IAAIC,EAAMjE,KAAKF,KAAKoE,oBAAsB,GACtCC,EAA+B,KAAvBnE,KAAKF,KAAK+D,WAA+C,GAAzB7D,KAAKF,KAAKsE,aAAqBpE,KAAKqE,aAAsB,GAANJ,EAC5FK,EAAO/B,KAAKgC,IAAIhC,KAAKC,MAAM2B,EAAO,MAAQ,KAAQ,GAChDG,EAAK/D,OAAU,GAAG+D,EAAO,IAAMA,EACrC,OAAOA,GAGRE,EAAG,WAGF,OAAQxE,KAAKF,KAAK+D,WAAa,IAAM,IAAM,IAG5CY,EAAG,WAGF,OAAOzE,KAAKF,KAAK+D,WAAa,IAG/Ba,EAAG,WAGF,IAAIF,EAAIxE,KAAKwE,IACb,OAAoB,GAAZA,EAAEjE,OAAe,IAAMiE,EAAIA,GAGpCG,EAAG,WAGF,IAAIF,EAAIzE,KAAKyE,IACb,OAAoB,GAAZA,EAAElE,OAAe,IAAMkE,EAAIA,GAGpCzD,EAAG,WAGF,IAAI4D,EAAO5E,KAAKF,KAAKsE,aAAe,GACpC,OAAuB,GAAfQ,EAAKrE,OAAe,IAAMqE,EAAOA,GAG1CC,EAAG,WAGF,IAAIV,EAAOnE,KAAKF,KAAKuE,aAAe,GACpC,OAAuB,GAAfF,EAAK5D,OAAe,IAAM4D,EAAOA,GAK1CW,EAAG,WAGF,OAAOtF,EAAMuF,gBAAgB/E,KAAKF,OAGnCkF,EAAG,aAOHC,EAAG,WAGF,IAAIhB,EAAM1B,KAAKgC,IAAIvE,KAAKF,KAAKoE,qBACzBgB,EAAQ3C,KAAKC,MAAMyB,EAAM,IAAM,GAC/BW,EAAQX,EAAM,GAAM,GAGxB,OAFmB,GAAhBiB,EAAM3E,SAAa2E,EAAQ,IAAMA,GAClB,GAAfN,EAAKrE,SAAa2E,EAAQ,IAAMN,IAC1B5E,KAAKF,KAAKoE,oBAAsB,EAAK,IAAM,KAAOgB,EAAQN,GAGpEO,EAAG,WAGF,IAAIF,EAAIjF,KAAKiF,IACb,OAAOA,EAAEG,UAAU,EAAG,GAAK,IAAMH,EAAEG,UAAU,EAAG,IAGjDC,EAAG,WAKF,OAAOrF,KAAK8E,IAAIM,UAAU,EAAG,IAG9BE,EAAG,WAIF,OAAwC,GAAjCtF,KAAKF,KAAKoE,qBAKlBqB,EAAG,WAGF,OAAOvF,KAAKyD,IAAM,IAAMzD,KAAKoD,IAAM,IAAMpD,KAAKyB,IAAM,IAAMzB,KAAK0E,IAAM,IAAM1E,KAAKgB,IAAM,IAAMhB,KAAK6E,IAAM7E,KAAKmF,KAG7GK,EAAG,WAGF,OAAOxF,KAAK2B,IAAM,KAAO3B,KAAKyB,IAAM,IAAMzB,KAAKsD,IAAM,IAAMtD,KAAKyD,IAAM,IAAMzD,KAAK2E,IAAM,IAAM3E,KAAKgB,IAAM,IAAMhB,KAAK6E,IAAM,IAAM7E,KAAKiF,KAGrIQ,EAAG,WAGF,OAAOlD,KAAKC,MAAMxC,KAAKF,KAAKsC,UAAY,QAInC1C","file":"../../date/php.js","sourcesContent":["define([\"dojo/_base/kernel\", \"dojo/_base/lang\",\"dojo/date\",\"dojox/string/tokenize\"], function(dojo,dlang,ddate,dxst){\r\n\r\nvar php = dojo.getObject(\"date.php\", true, dojox);\r\n/*=====\r\nvar php = {\r\n\t// TODO: summary\r\n};\r\n=====*/\r\n\r\nphp.format = function(/*Date*/ date, /*String*/ format){\r\n\t// summary:\r\n\t//\t\tGet a formatted string for a given date object\r\n\tvar df = new php.DateFormat(format);\r\n\treturn df.format(date);\r\n};\r\n\r\nphp.DateFormat = function(/*String*/ format){\r\n\t// summary:\r\n\t//\t\tFormat the internal date object\r\n\tif(!this.regex){\r\n\t\tvar keys = [];\r\n\t\tfor(var key in this.constructor.prototype){\r\n\t\t\tif(dojo.isString(key) && key.length == 1 && dojo.isFunction(this[key])){\r\n\t\t\t\tkeys.push(key);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.constructor.prototype.regex = new RegExp(\"(?:(\\\\\\\\.)|([\" + keys.join(\"\") + \"]))\", \"g\");\r\n\t}\r\n\r\n\tvar replacements = [];\r\n\r\n\tthis.tokens = dxst(format, this.regex, function(escape, token, i){\r\n\t\tif(token){\r\n\t\t\treplacements.push([i, token]);\r\n\t\t\treturn token;\r\n\t\t}\r\n\t\tif(escape){\r\n\t\t\treturn escape.charAt(1);\r\n\t\t}\r\n\t});\r\n\r\n\tthis.replacements = replacements;\r\n};\r\n\r\ndojo.extend(php.DateFormat, {\r\n\tweekdays: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\r\n\tweekdays_3: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\r\n\tmonths: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\r\n\tmonths_3: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n\tmonthdays: [31,28,31,30,31,30,31,31,30,31,30,31],\r\n\r\n\tformat: function(/*Date*/ date){\r\n\t\tthis.date = date;\r\n\t\tfor(var i = 0, replacement; replacement = this.replacements[i]; i++){\r\n\t\t\tthis.tokens[replacement[0]] = this[replacement[1]]();\r\n\t\t}\r\n\t\treturn this.tokens.join(\"\");\r\n\t},\r\n\r\n\t// Day\r\n\r\n\td: function(){\r\n\t\t// summary:\r\n\t\t//\t\tDay of the month, 2 digits with leading zeros\r\n\t\tvar j = this.j();\r\n\t\treturn (j.length == 1) ? \"0\" + j : j;\r\n\t},\r\n\r\n\tD: function(){\r\n\t\t// summary:\r\n\t\t//\t\tA textual representation of a day, three letters\r\n\t\treturn this.weekdays_3[this.date.getDay()];\r\n\t},\r\n\r\n\tj: function(){\r\n\t\t// summary:\r\n\t\t//\t\tDay of the month without leading zeros\r\n\t\treturn this.date.getDate() + \"\";\r\n\t},\r\n\r\n\tl: function(){\r\n\t\t// summary:\r\n\t\t//\t\tA full textual representation of the day of the week\r\n\t\treturn this.weekdays[this.date.getDay()];\r\n\t},\r\n\r\n\tN: function(){\r\n\t\t// summary:\r\n\t\t//\t\tISO-8601 numeric representation of the day of the week (added in PHP 5.1.0)\r\n\t\tvar w = this.w();\r\n\t\treturn (!w) ? 7 : w;\r\n\t},\r\n\r\n\tS: function(){\r\n\t\t// summary:\r\n\t\t//\t\tEnglish ordinal suffix for the day of the month, 2 characters\r\n\t\tswitch(this.date.getDate()){\r\n\t\t\tcase 11: case 12: case 13: return \"th\";\r\n\t\t\tcase 1: case 21: case 31: return \"st\";\r\n\t\t\tcase 2: case 22: return \"nd\";\r\n\t\t\tcase 3: case 23: return \"rd\";\r\n\t\t\tdefault: return \"th\";\r\n\t\t}\r\n\t},\r\n\r\n\tw: function(){\r\n\t\t// summary:\r\n\t\t//\t\tNumeric representation of the day of the week\r\n\t\treturn this.date.getDay() + \"\";\r\n\t},\r\n\r\n\tz: function(){\r\n\t\t// summary:\r\n\t\t//\t\tThe day of the year (starting from 0)\r\n\t\tvar millis = this.date.getTime() - new Date(this.date.getFullYear(), 0, 1).getTime();\r\n\t\treturn Math.floor(millis/86400000) + \"\";\r\n\t},\r\n\r\n\t// Week\r\n\r\n\tW: function(){\r\n\t\t// summary:\r\n\t\t//\t\tISO-8601 week number of year, weeks starting on Monday (added in PHP 4.1.0)\r\n\t\tvar week;\r\n\t\tvar jan1_w = new Date(this.date.getFullYear(), 0, 1).getDay() + 1;\r\n\t\tvar w = this.date.getDay() + 1;\r\n\t\tvar z = parseInt(this.z());\r\n\r\n\t\tif(z <= (8 - jan1_w) && jan1_w > 4){\r\n\t\t\tvar last_year = new Date(this.date.getFullYear() - 1, this.date.getMonth(), this.date.getDate());\r\n\t\t\tif(jan1_w == 5 || (jan1_w == 6 && ddate.isLeapYear(last_year))){\r\n\t\t\t\tweek = 53;\r\n\t\t\t}else{\r\n\t\t\t\tweek = 52;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tvar i;\r\n\t\t\tif(Boolean(this.L())){\r\n\t\t\t\ti = 366;\r\n\t\t\t}else{\r\n\t\t\t\ti = 365;\r\n\t\t\t}\r\n\t\t\tif((i - z) < (4 - w)){\r\n\t\t\t\tweek = 1;\r\n\t\t\t}else{\r\n\t\t\t\tvar j = z + (7 - w) + (jan1_w - 1);\r\n\t\t\t\tweek = Math.ceil(j / 7);\r\n\t\t\t\tif(jan1_w > 4){\r\n\t\t\t\t\t--week;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn week;\r\n\t},\r\n\r\n\t// Month\r\n\r\n\tF: function(){\r\n\t\t// summary:\r\n\t\t//\t\tA full textual representation of a month, such as January or March\r\n\t\treturn this.months[this.date.getMonth()];\r\n\t},\r\n\r\n\tm: function(){\r\n\t\t// summary:\r\n\t\t//\t\tNumeric representation of a month, with leading zeros\r\n\t\tvar n = this.n();\r\n\t\treturn (n.length == 1) ? \"0\" + n : n;\r\n\t},\r\n\r\n\tM: function(){\r\n\t\t// summary:\r\n\t\t//\t\tA short textual representation of a month, three letters\r\n\t\treturn this.months_3[this.date.getMonth()];\r\n\t},\r\n\r\n\tn: function(){\r\n\t\t// summary:\r\n\t\t//\t\tNumeric representation of a month, without leading zeros\r\n\t\treturn this.date.getMonth() + 1 + \"\";\r\n\t},\r\n\r\n\tt: function(){\r\n\t\t// summary:\r\n\t\t//\t\tNumber of days in the given month\r\n\t\treturn (Boolean(this.L()) && this.date.getMonth() == 1) ? 29 : this.monthdays[this.getMonth()];\r\n\t},\r\n\r\n\t// Year\r\n\r\n\tL: function(){\r\n\t\t// summary:\r\n\t\t//\t\tWhether it's a leap year\r\n\t\treturn (ddate.isLeapYear(this.date)) ? \"1\" : \"0\";\r\n\t},\r\n\r\n\to: function(){\r\n\t\t// summary:\r\n\t\t//\t\tISO-8601 year number. This has the same value as Y, except that if\r\n\t\t//\t\tthe ISO week number (W) belongs to the previous or next year, that year is used instead. (added in PHP 5.1.0)\r\n\r\n\t\t// TODO: Figure out what this means\r\n\t},\r\n\r\n\tY: function(){\r\n\t\t// summary:\r\n\t\t//\t\tA full numeric representation of a year, 4 digits\r\n\t\treturn this.date.getFullYear() + \"\";\r\n\t},\r\n\r\n\ty: function(){\r\n\t\t// summary:\r\n\t\t//\t\tA two digit representation of a year\r\n\t\treturn this.Y().slice(-2);\r\n\t},\r\n\r\n\t// Time\r\n\r\n\ta: function(){\r\n\t\t// summary:\r\n\t\t//\t\tLowercase Ante meridian and Post meridian\r\n\t\treturn this.date.getHours() >= 12 ? \"pm\" : \"am\";\r\n\t},\r\n\r\n\tb: function(){\r\n\t\t// summary:\r\n\t\t//\t\tUppercase Ante meridian and Post meridian\r\n\t\treturn this.a().toUpperCase();\r\n\t},\r\n\r\n\tB: function(){\r\n\t\t// summary:\r\n\t\t//\t\tSwatch Internet time\r\n\t\t//\t\tA day is 1,000 beats. All time is measured from GMT + 1\r\n\t\tvar off = this.date.getTimezoneOffset() + 60;\r\n\t\tvar secs = (this.date.getHours() * 3600) + (this.date.getMinutes() * 60) + this.getSeconds() + (off * 60);\r\n\t\tvar beat = Math.abs(Math.floor(secs / 86.4) % 1000) + \"\";\r\n\t\twhile(beat.length <  2) beat = \"0\" + beat;\r\n\t\treturn beat;\r\n\t},\r\n\r\n\tg: function(){\r\n\t\t// summary:\r\n\t\t//\t\t12-hour format of an hour without leading zeros\r\n\t\treturn (this.date.getHours() % 12 || 12) + \"\";\r\n\t},\r\n\r\n\tG: function(){\r\n\t\t// summary:\r\n\t\t//\t\t24-hour format of an hour without leading zeros\r\n\t\treturn this.date.getHours() + \"\";\r\n\t},\r\n\r\n\th: function(){\r\n\t\t// summary:\r\n\t\t//\t\t12-hour format of an hour with leading zeros\r\n\t\tvar g = this.g();\r\n\t\treturn (g.length == 1) ? \"0\" + g : g;\r\n\t},\r\n\r\n\tH: function(){\r\n\t\t// summary:\r\n\t\t//\t\t24-hour format of an hour with leading zeros\r\n\t\tvar G = this.G();\r\n\t\treturn (G.length == 1) ? \"0\" + G : G;\r\n\t},\r\n\r\n\ti: function(){\r\n\t\t// summary:\r\n\t\t//\t\tMinutes with leading zeros\r\n\t\tvar mins = this.date.getMinutes() + \"\";\r\n\t\treturn (mins.length == 1) ? \"0\" + mins : mins;\r\n\t},\r\n\r\n\ts: function(){\r\n\t\t// summary:\r\n\t\t//\t\tSeconds, with leading zeros\r\n\t\tvar secs = this.date.getSeconds() + \"\";\r\n\t\treturn (secs.length == 1) ? \"0\" + secs : secs;\r\n\t},\r\n\r\n\t// Timezone\r\n\r\n\te: function(){\r\n\t\t// summary:\r\n\t\t//\t\tTimezone identifier (added in PHP 5.1.0)\r\n\t\treturn ddate.getTimezoneName(this.date);\r\n\t},\r\n\r\n\tI: function(){\r\n\t\t// summary:\r\n\t\t//\t\tWhether or not the date is in daylight saving time\r\n\r\n\t\t// TODO: Can dojo.date do this?\r\n\t},\r\n\r\n\tO: function(){\r\n\t\t// summary:\r\n\t\t//\t\tDifference to Greenwich time (GMT) in hours\r\n\t\tvar off = Math.abs(this.date.getTimezoneOffset());\r\n\t\tvar hours = Math.floor(off / 60) + \"\";\r\n\t\tvar mins = (off % 60) + \"\";\r\n\t\tif(hours.length == 1) hours = \"0\" + hours;\r\n\t\tif(mins.length == 1) hours = \"0\" + mins;\r\n\t\treturn ((this.date.getTimezoneOffset() < 0) ? \"+\" : \"-\") + hours + mins;\r\n\t},\r\n\r\n\tP: function(){\r\n\t\t// summary:\r\n\t\t//\t\tDifference to Greenwich time (GMT) with colon between hours and minutes (added in PHP 5.1.3)\r\n\t\tvar O = this.O();\r\n\t\treturn O.substring(0, 2) + \":\" + O.substring(2, 4);\r\n\t},\r\n\r\n\tT: function(){\r\n\t\t// summary:\r\n\t\t//\t\tTimezone abbreviation\r\n\r\n\t\t// Guess...\r\n\t\treturn this.e().substring(0, 3);\r\n\t},\r\n\r\n\tZ: function(){\r\n\t\t// summary:\r\n\t\t//\t\tTimezone offset in seconds. The offset for timezones west of UTC is always negative,\r\n\t\t//\t\tand for those east of UTC is always positive.\r\n\t\treturn this.date.getTimezoneOffset() * -60;\r\n\t},\r\n\r\n\t// Full Date/Time\r\n\r\n\tc: function(){\r\n\t\t// summary:\r\n\t\t//\t\tISO 8601 date (added in PHP 5)\r\n\t\treturn this.Y() + \"-\" + this.m() + \"-\" + this.d() + \"T\" + this.h() + \":\" + this.i() + \":\" + this.s() + this.P();\r\n\t},\r\n\r\n\tr: function(){\r\n\t\t// summary:\r\n\t\t//\t\tRFC 2822 formatted date\r\n\t\treturn this.D() + \", \" + this.d() + \" \" + this.M() + \" \" + this.Y() + \" \" + this.H() + \":\" + this.i() + \":\" + this.s() + \" \" + this.O();\r\n\t},\r\n\r\n\tU: function(){\r\n\t\t// summary:\r\n\t\t//\t\tSeconds since the Unix Epoch (January 1 1970 00:00:00 GMT)\r\n\t\treturn Math.floor(this.date.getTime() / 1000);\r\n\t}\r\n\r\n});\r\nreturn php;\r\n});"]}