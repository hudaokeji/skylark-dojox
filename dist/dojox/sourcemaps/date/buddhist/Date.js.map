{"version":3,"sources":["date/buddhist/Date.js"],"names":["define","lang","declare","dd","BDate","_date","_month","_year","_hours","_minutes","_seconds","_milliseconds","_day","constructor","len","arguments","length","arg0","Date","this","fromGregorian","console","warn","getDate","isNumber","parseInt","getMonth","getFullYear","getHours","getMinutes","getSeconds","getMilliseconds","setDate","date","mdays","_getDaysInMonth","setFullYear","year","month","setMonth","Math","floor","setHours","hours_arg_no","hours","_addMinutes","minutes","setMinutes","_addSeconds","seconds","setSeconds","_addMilliseconds","milliseconds","setMilliseconds","toString","isNaN","getDaysInMonth","gdate","getDay","toGregorian","prototype","valueOf"],"mappings":"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","file":"../../../date/buddhist/Date.js","sourcesContent":["define([\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/date\"\r\n], function(lang, declare, dd){\r\n\r\nvar BDate = declare(\"dojox.date.buddhist.Date\", null, {\r\n\r\n\t_date: 0,\r\n\t_month: 0,\r\n\t_year: 0,\r\n\t_hours: 0,\r\n\t_minutes: 0,\r\n\t_seconds: 0,\r\n\t_milliseconds: 0,\r\n\t_day: 0,\r\n\r\n \tconstructor: function(){\r\n\t\t// summary:\r\n\t\t//\t\tThis is the constructor\r\n\t\t// description:\r\n\t\t//\t\tThis function initialize the date object values\r\n\t\t// example:\r\n\t\t//\t|\tvar date1 = new dojox.date.buddhist.Date();\r\n\t\t//\t|\tvar date2 = new dojox.date.buddhist.Date(date1);\r\n\t\t//\t|\tvar date3 = new dojox.date.buddhist.Date(2552,2,12);\r\n\r\n\t\tvar len = arguments.length;\r\n\t\tif(!len){// use the current date value, added \"\" to the similarity to date\r\n\t\t\tthis.fromGregorian(new Date());\r\n\t\t}else if(len == 1){\r\n\t\t\tvar arg0 = arguments[0];\r\n\t\t\tif(typeof arg0 == \"number\"){ // this is time \"valueof\"\r\n\t\t\t\targ0 = new Date(arg0);\r\n\t\t\t}\r\n\r\n\t\t\tif(arg0 instanceof Date){\r\n\t\t\t\tthis.fromGregorian(arg0);\r\n\t\t\t}else if(arg0 == \"\"){\r\n\t\t\t\tthis._date = new Date(\"\");\r\n\t\t\t}else{\r\n\t\t\t\tthis._year = arg0._year;\r\n\t\t\t\tthis._month =  arg0._month;\r\n\t\t\t\tthis._date = arg0._date;\r\n\t\t\t\tthis._hours = arg0._hours;\r\n\t\t\t\tthis._minutes = arg0._minutes;\r\n\t\t\t\tthis._seconds = arg0._seconds;\r\n\t\t\t\tthis._milliseconds = arg0._milliseconds;\r\n\t\t\t}\r\n\t\t}else if(len >=3){\r\n\t\t\tthis._year += arguments[0];\r\n\t\t\tthis._month += arguments[1];\r\n\t\t\tthis._date += arguments[2];\r\n\t\t\t\r\n\t\t\tif(this._month >11){\r\n\t\t\t\tconsole.warn(\"the month is incorrect , set 0\");\r\n\t\t\t\tthis._month = 0;\r\n\t\t\t}\r\n\t\t\tthis._hours += arguments[3] || 0;\r\n\t\t\tthis._minutes += arguments[4] || 0;\r\n\t\t\tthis._seconds += arguments[5] || 0;\r\n\t\t\tthis._milliseconds += arguments[6] || 0;\r\n\t\t}\r\n\t},\r\n\t\r\n\tgetDate: function(/*boolean?*/isNumber){\r\n\t\t// summary:\r\n\t\t//\t\tThis function returns the date value (0 - 30)\r\n\t\t// example:\r\n\t\t//\t|\tvar date1 = new dojox.date.buddhist.Date();\r\n\t\t//\t|\tconsole.log(date1.getDate());\r\n\t\treturn parseInt(this._date);\r\n\t},\r\n\r\n\tgetMonth: function(){\r\n\t\t// summary:\r\n\t\t//\t\tThis function return the month value ( 0 - 11 )\r\n\t\t// example:\r\n\t\t//\t|\tvar date1 = new dojox.date.buddhist.Date();\r\n\t\t//\t|\tconsole.log(date1.getMonth()+1);\r\n\t\treturn parseInt(this._month);\r\n\t},\r\n\r\n\r\n\tgetFullYear: function(){\r\n\t\t// summary:\r\n\t\t//\t\tThis function return the Year value\r\n\t\t// example:\r\n\t\t//\t|\tvar date1 = new dojox.date.buddhist.Date();\r\n\t\t//\t|\tconsole.log(date1.getFullYear());\r\n\t\treturn parseInt(this._year);\r\n\t},\r\n\t\t\t\r\n\tgetHours: function(){\r\n\t\t// summary:\r\n\t\t//\t\treturns the Hour value\r\n\t\treturn this._hours;\r\n\t},\r\n\t\t\r\n\tgetMinutes: function(){\r\n\t\t// summary:\r\n\t\t//\t\treturns the Minutes value\r\n\t\treturn this._minutes;\r\n\t},\r\n\r\n\tgetSeconds: function(){\r\n\t\t// summary:\r\n\t\t//\t\treturns the Seconds value\r\n\t\treturn this._seconds;\r\n\t},\r\n\r\n\tgetMilliseconds: function(){\r\n\t\t// summary:\r\n\t\t//\t\treturns the Milliseconds value\r\n\t\treturn this._milliseconds;\r\n\t},\r\n\r\n\tsetDate: function(/*number*/date){\r\n\t\t// summary:\r\n\t\t//\t\tThis function sets the Date\r\n\t\t// example:\r\n\t\t//\t|\tvar date1 = new dojox.date.buddhist.Date();\r\n\t\t//\t|\tdate1.setDate(2);\r\n\t\tdate = parseInt(date);\r\n\r\n\t\tif(date > 0 && date <= this._getDaysInMonth(this._month, this._year)){\r\n\t\t\tthis._date = date;\r\n\t\t}else{\r\n\t\t\tvar mdays;\r\n\t\t\tif(date>0){\r\n\t\t\t\tfor(mdays = this._getDaysInMonth(this._month, this._year);\r\n\t\t\t\t\tdate > mdays;\r\n\t\t\t\t\t\tdate -= mdays,mdays = this._getDaysInMonth(this._month, this._year)){\r\n\t\t\t\t\tthis._month++;\r\n\t\t\t\t\tif(this._month >= 12){this._year++; this._month -= 12;}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._date = date;\r\n\t\t\t}else{\r\n\t\t\t\tfor(mdays = this._getDaysInMonth((this._month-1)>=0 ?(this._month-1) :11 ,((this._month-1)>=0)? this._year: this._year-1);\r\n\t\t\t\t\t\tdate <= 0;\r\n\t\t\t\t\t\t\tmdays = this._getDaysInMonth((this._month-1)>=0 ? (this._month-1) :11,((this._month-1)>=0)? this._year: this._year-1)){\r\n\t\t\t\t\tthis._month--;\r\n\t\t\t\t\tif(this._month < 0){this._year--; this._month += 12;}\r\n\r\n\t\t\t\t\tdate+=mdays;\r\n\t\t\t\t}\r\n\t\t\t\tthis._date = date;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\tsetFullYear: function(/*number*/year, /*number?*/month, /*number?*/ date){\r\n\t\t// summary:\r\n\t\t//\t\tThis function set Year\r\n\t\t// example:\r\n\t\t//\t|\tvar date1 = new dojox.date.buddhist.Date();\r\n\t\t//\t|\tdate1.setFullYear(2552);\r\n\t\t//\t|\tdate1.setFullYear(2552, 1, 1);\r\n\t\tthis._year = parseInt(year);\r\n\t},\r\n\t\t\t\r\n\tsetMonth: function(/*number*/month){\r\n\t\t// summary:\r\n\t\t//\t\tThis function set Month\r\n\t\t// example:\r\n\t\t//\t|\tvar date1 = new dojox.date.buddhist.Date();\r\n\t\t//\t|\tdate1.setMonth(0); //first month\r\n\t\tthis._year += Math.floor(month / 12);\r\n\t\tthis._month = Math.floor(month % 12);\r\n\t\tfor(; this._month < 0; this._month = this._month+12);\r\n\t},\r\n\t\t\t\r\n\tsetHours: function(){\r\n\t\t// summary:\r\n\t\t//\t\tset the Hours  0-23\r\n\t\tvar hours_arg_no = arguments.length;\r\n\t\tvar hours = 0;\r\n\t\tif(hours_arg_no >= 1){\r\n\t\t\thours = parseInt(arguments[0]);\r\n\t\t}\r\n\t\t\t\r\n\t\tif(hours_arg_no >= 2){\r\n\t\t\tthis._minutes = parseInt(arguments[1]);\r\n\t\t}\r\n\t\t\t\r\n\t\tif(hours_arg_no >= 3){\r\n\t\t\tthis._seconds = parseInt(arguments[2]);\r\n\t\t}\r\n\t\t\t\r\n\t\tif(hours_arg_no == 4){\r\n\t\t\tthis._milliseconds = parseInt(arguments[3]);\r\n\t\t}\r\n\t\t\t\t\t\t\r\n\t\twhile(hours >= 24){\r\n\t\t\tthis._date++;\r\n\t\t\tvar mdays = this._getDaysInMonth(this._month, this._year);\r\n\t\t\tif(this._date > mdays){\r\n\t\t\t\t\tthis._month ++;\r\n\t\t\t\t\tif(this._month >= 12){this._year++; this._month -= 12;}\r\n\t\t\t\t\tthis._date -= mdays;\r\n\t\t\t}\r\n\t\t\thours -= 24;\r\n\t\t}\r\n\t\tthis._hours = hours;\r\n\t},\r\n\t\r\n\t_addMinutes: function(/*Number*/minutes){\r\n\t\tminutes += this._minutes;\r\n\t\tthis.setMinutes(minutes);\r\n\t\tthis.setHours(this._hours + parseInt(minutes / 60));\r\n\t\treturn this;\r\n\t},\r\n\r\n\t_addSeconds: function(/*Number*/seconds){\r\n\t\tseconds += this._seconds;\r\n\t\tthis.setSeconds(seconds);\r\n\t\tthis._addMinutes(parseInt(seconds / 60));\r\n\t\treturn this;\r\n\t},\r\n\r\n\t_addMilliseconds: function(/*Number*/milliseconds){\r\n\t\tmilliseconds += this._milliseconds;\r\n\t\tthis.setMilliseconds(milliseconds);\r\n\t\tthis._addSeconds(parseInt(milliseconds / 1000));\r\n\t\treturn this;\r\n\t},\r\n\r\n\tsetMinutes: function(/*Number*/minutes){\r\n\t\t// summary:\r\n\t\t//\t\tsets the minutes (0-59) only.\r\n\t\tthis._minutes = minutes % 60;\r\n\t\treturn this;\r\n\t},\r\n\r\n\tsetSeconds: function(/*Number*/seconds){\r\n\t\t// summary:\r\n\t\t//\t\tsets the seconds (0-59) only.\r\n\t\tthis._seconds = seconds % 60;\r\n\t\treturn this;\r\n\t},\r\n\r\n\tsetMilliseconds: function(/*Number*/milliseconds){\r\n\t\tthis._milliseconds = milliseconds % 1000;\r\n\t\treturn this;\r\n\t},\r\n\r\n\ttoString: function(){\r\n\t\t// summary:\r\n\t\t//\t\tThis returns a string representation of the date in \"dd, MM, YYYY HH:MM:SS\" format\r\n\t\treturn isNaN(this._date)?\"Invalid Date\":\r\n\t\t\tthis._date + \", \" + this._month + \", \" + this._year + \"  \" + this._hours + \":\" + this._minutes + \":\" + this._seconds; // String\r\n\t},\r\n\r\n//FIXME: remove this and replace usage with dojox.date.buddhist.getDaysInMonth?\r\n\t_getDaysInMonth: function(/*number*/month, /*number*/ year){\r\n\t\treturn dd.getDaysInMonth(new Date(year-543, month));\r\n\t},\r\n\r\n\tfromGregorian: function(/*Date*/gdate){\r\n\t\t// summary:\r\n\t\t//\t\tThis function sets this Date to the Hebrew Date corresponding to the Gregorian Date\r\n\t\tvar date = new Date(gdate);\r\n\t\tthis._date = date.getDate();\r\n\t\tthis._month = date.getMonth();\r\n\t\tthis._year = date.getFullYear()+543;\r\n\t\tthis._hours = date.getHours();\r\n\t\tthis._minutes = date.getMinutes();\r\n\t\tthis._seconds = date.getSeconds();\r\n\t\tthis._milliseconds = date.getMilliseconds();\r\n\t\tthis._day = date.getDay();\r\n\t\treturn this;\r\n\t},\r\n\r\n\ttoGregorian: function(){\r\n\t\t// summary:\r\n\t\t//\t\tThis returns the equivalent Gregorian date value as a Date object\r\n\t\treturn new Date(this._year-543, this._month, this._date, this._hours, this._minutes, this._seconds, this._milliseconds); // Date\r\n\t},\r\n\t\r\n\tgetDay: function(){\r\n\t\t// summary:\r\n\t\t//\t\tThis function return Week Day value ( 0 - 6 )\r\n\t\treturn this.toGregorian().getDay(); // int\r\n\t}\r\n});\r\n\r\nBDate.prototype.valueOf = function(){\r\n\treturn this.toGregorian().valueOf();\r\n};\r\n\r\nreturn BDate;\r\n});\r\n"]}