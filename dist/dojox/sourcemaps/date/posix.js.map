{"version":3,"sources":["date/posix.js"],"names":["define","dojo","dojoDate","dojoDateLocale","dojoString","dojoCldrSupplemental","posix","getObject","dojox","strftime","dateObject","format","locale","padChar","_","s","n","pad","bundle","_getGregorianBundle","$","property","getNames","getDay","getMonth","formatLength","Math","floor","getFullYear","getDate","console","warn","getHours","_getDayOfYear","getMinutes","getSeconds","String","_getWeekOfYear","getIsoWeekOfYear","selector","timezoneOffset","getTimezoneOffset","abs","getTimezoneName","string","i","index","switchCase","indexOf","substring","charAt","toUpperCase","toLowerCase","compareString","swapString","ch","j","length","getStartOfWeek","firstDay","isNaN","getFirstDayOfWeek","offset","date","Date","setHours","add","setIsoWeekOfYear","week","currentWeek","getIsoWeeksInYear","weekStart","yearStart","diff","getTime","ceil","p","y"],"mappings":"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","file":"../../date/posix.js","sourcesContent":["define([\"dojo/_base/kernel\", \"dojo/date\", \"dojo/date/locale\", \"dojo/string\", \"dojo/cldr/supplemental\"],\r\n       function(dojo, dojoDate, dojoDateLocale, dojoString, dojoCldrSupplemental){\r\n\r\nvar posix = dojo.getObject(\"date.posix\", true, dojox);\r\n/*=====\r\nvar posix = {\r\n\t// TODO: summary\r\n};\r\n=====*/\r\n\r\nposix.strftime = function(/*Date*/dateObject, /*String*/format, /*String?*/locale){\r\n\t//\r\n\t// summary:\r\n\t//\t\tFormats the date object using the specifications of the POSIX strftime function\r\n\t//\r\n\t// description:\r\n\t//\t\tsee http://www.opengroup.org/onlinepubs/007908799/xsh/strftime.html\r\n\r\n\t// zero pad\r\n\tvar padChar = null;\r\n\tvar _ = function(s, n){\r\n\t\treturn dojoString.pad(s, n || 2, padChar || \"0\");\r\n\t};\r\n\r\n\tvar bundle = dojoDateLocale._getGregorianBundle(locale);\r\n\r\n\tvar $ = function(property){\r\n\t\tswitch(property){\r\n\t\t\tcase \"a\": // abbreviated weekday name according to the current locale\r\n\t\t\t\treturn dojoDateLocale.getNames('days', 'abbr', 'format', locale)[dateObject.getDay()];\r\n\r\n\t\t\tcase \"A\": // full weekday name according to the current locale\r\n\t\t\t\treturn dojoDateLocale.getNames('days', 'wide', 'format', locale)[dateObject.getDay()];\r\n\r\n\t\t\tcase \"b\":\r\n\t\t\tcase \"h\": // abbreviated month name according to the current locale\r\n\t\t\t\treturn dojoDateLocale.getNames('months', 'abbr', 'format', locale)[dateObject.getMonth()];\r\n\t\t\t\t\r\n\t\t\tcase \"B\": // full month name according to the current locale\r\n\t\t\t\treturn dojoDateLocale.getNames('months', 'wide', 'format', locale)[dateObject.getMonth()];\r\n\t\t\t\t\r\n\t\t\tcase \"c\": // preferred date and time representation for the current\r\n\t\t\t\t      // locale\r\n\t\t\t\treturn dojoDateLocale.format(dateObject, {formatLength: 'full', locale: locale});\r\n\r\n\t\t\tcase \"C\": // century number (the year divided by 100 and truncated\r\n\t\t\t\t      // to an integer, range 00 to 99)\r\n\t\t\t\treturn _(Math.floor(dateObject.getFullYear()/100));\r\n\t\t\t\t\r\n\t\t\tcase \"d\": // day of the month as a decimal number (range 01 to 31)\r\n\t\t\t\treturn _(dateObject.getDate());\r\n\t\t\t\t\r\n\t\t\tcase \"D\": // same as %m/%d/%y\r\n\t\t\t\treturn $(\"m\") + \"/\" + $(\"d\") + \"/\" + $(\"y\");\r\n\t\t\t\t\t\r\n\t\t\tcase \"e\": // day of the month as a decimal number, a single digit is\r\n\t\t\t\t      // preceded by a space (range ' 1' to '31')\r\n\t\t\t\tif(padChar == null){ padChar = \" \"; }\r\n\t\t\t\treturn _(dateObject.getDate());\r\n\t\t\t\r\n\t\t\tcase \"f\": // month as a decimal number, a single digit is\r\n\t\t\t\t\t\t\t// preceded by a space (range ' 1' to '12')\r\n\t\t\t\tif(padChar == null){ padChar = \" \"; }\r\n\t\t\t\treturn _(dateObject.getMonth()+1);\r\n\t\t\t\r\n\t\t\tcase \"g\": // like %G, but without the century.\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase \"G\": // The 4-digit year corresponding to the ISO week number\r\n\t\t\t\t      // (see %V).  This has the same format and value as %Y,\r\n\t\t\t\t      // except that if the ISO week number belongs to the\r\n\t\t\t\t      // previous or next year, that year is used instead.\r\n\t\t\t\tconsole.warn(\"unimplemented modifier 'G'\");\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase \"F\": // same as %Y-%m-%d\r\n\t\t\t\treturn $(\"Y\") + \"-\" + $(\"m\") + \"-\" + $(\"d\");\r\n\t\t\t\t\r\n\t\t\tcase \"H\": // hour as a decimal number using a 24-hour clock (range\r\n\t\t\t\t      // 00 to 23)\r\n\t\t\t\treturn _(dateObject.getHours());\r\n\t\t\t\t\r\n\t\t\tcase \"I\": // hour as a decimal number using a 12-hour clock (range\r\n\t\t\t\t      // 01 to 12)\r\n\t\t\t\treturn _(dateObject.getHours() % 12 || 12);\r\n\r\n\t\t\tcase \"j\": // day of the year as a decimal number (range 001 to 366)\r\n\t\t\t\treturn _(dojoDateLocale._getDayOfYear(dateObject), 3);\r\n\r\n\t\t\tcase \"k\": // Hour as a decimal number using a 24-hour clock (range\r\n\t\t\t\t\t  // 0 to 23 (space-padded))\r\n\t\t\t\tif(padChar == null){ padChar = \" \"; }\r\n\t\t\t\treturn _(dateObject.getHours());\r\n\r\n\t\t\tcase \"l\": // Hour as a decimal number using a 12-hour clock (range\r\n\t\t\t\t\t  // 1 to 12 (space-padded))\r\n\t\t\t\tif(padChar == null){ padChar = \" \"; }\r\n\t\t\t\treturn _(dateObject.getHours() % 12 || 12);\r\n\r\n\t\t\tcase \"m\": // month as a decimal number (range 01 to 12)\r\n\t\t\t\treturn _(dateObject.getMonth() + 1);\r\n\r\n\t\t\tcase \"M\": // minute as a decimal number\r\n\t\t\t\treturn _(dateObject.getMinutes());\r\n\r\n\t\t\tcase \"n\":\r\n\t\t\t\treturn \"\\n\";\r\n\r\n\t\t\tcase \"p\": // either `am' or `pm' according to the given time value,\r\n\t\t\t\t      // or the corresponding strings for the current locale\r\n\t\t\t\treturn bundle['dayPeriods-format-wide-' + (dateObject.getHours() < 12 ? \"am\" : \"pm\")];\r\n\t\t\t\t\r\n\t\t\tcase \"r\": // time in a.m. and p.m. notation\r\n\t\t\t\treturn $(\"I\") + \":\" + $(\"M\") + \":\" + $(\"S\") + \" \" + $(\"p\");\r\n\t\t\t\t\r\n\t\t\tcase \"R\": // time in 24 hour notation\r\n\t\t\t\treturn $(\"H\") + \":\" + $(\"M\");\r\n\t\t\t\t\r\n\t\t\tcase \"S\": // second as a decimal number\r\n\t\t\t\treturn _(dateObject.getSeconds());\r\n\r\n\t\t\tcase \"t\":\r\n\t\t\t\treturn \"\\t\";\r\n\r\n\t\t\tcase \"T\": // current time, equal to %H:%M:%S\r\n\t\t\t\treturn $(\"H\") + \":\" + $(\"M\") + \":\" + $(\"S\");\r\n\t\t\t\t\r\n\t\t\tcase \"u\": // weekday as a decimal number [1,7], with 1 representing\r\n\t\t\t\t      // Monday\r\n\t\t\t\treturn String(dateObject.getDay() || 7);\r\n\t\t\t\t\r\n\t\t\tcase \"U\": // week number of the current year as a decimal number,\r\n\t\t\t\t      // starting with the first Sunday as the first day of the\r\n\t\t\t\t      // first week\r\n\t\t\t\treturn _(dojoDateLocale._getWeekOfYear(dateObject));\r\n\r\n\t\t\tcase \"V\": // week number of the year (Monday as the first day of the\r\n\t\t\t\t      // week) as a decimal number [01,53]. If the week containing\r\n\t\t\t\t      // 1 January has four or more days in the new year, then it\r\n\t\t\t\t      // is considered week 1. Otherwise, it is the last week of\r\n\t\t\t\t      // the previous year, and the next week is week 1.\r\n\t\t\t\treturn _(posix.getIsoWeekOfYear(dateObject));\r\n\t\t\t\t\r\n\t\t\tcase \"W\": // week number of the current year as a decimal number,\r\n\t\t\t\t      // starting with the first Monday as the first day of the\r\n\t\t\t\t      // first week\r\n\t\t\t\treturn _(dojoDateLocale._getWeekOfYear(dateObject, 1));\r\n\t\t\t\t\r\n\t\t\tcase \"w\": // day of the week as a decimal, Sunday being 0\r\n\t\t\t\treturn String(dateObject.getDay());\r\n\r\n\t\t\tcase \"x\": // preferred date representation for the current locale\r\n\t\t\t\t      // without the time\r\n\t\t\t\treturn dojoDateLocale.format(dateObject, {selector:'date', formatLength: 'full', locale:locale});\r\n\r\n\t\t\tcase \"X\": // preferred time representation for the current locale\r\n\t\t\t\t      // without the date\r\n\t\t\t\treturn dojoDateLocale.format(dateObject, {selector:'time', formatLength: 'full', locale:locale});\r\n\r\n\t\t\tcase \"y\": // year as a decimal number without a century (range 00 to\r\n\t\t\t\t      // 99)\r\n\t\t\t\treturn _(dateObject.getFullYear()%100);\r\n\t\t\t\t\r\n\t\t\tcase \"Y\": // year as a decimal number including the century\r\n\t\t\t\treturn String(dateObject.getFullYear());\r\n\t\t\t\r\n\t\t\tcase \"z\": // time zone or name or abbreviation\r\n\t\t\t\tvar timezoneOffset = dateObject.getTimezoneOffset();\r\n\t\t\t\treturn (timezoneOffset > 0 ? \"-\" : \"+\") +\r\n\t\t\t\t\t_(Math.floor(Math.abs(timezoneOffset)/60)) + \":\" +\r\n\t\t\t\t\t_(Math.abs(timezoneOffset)%60);\r\n\r\n\t\t\tcase \"Z\": // time zone or name or abbreviation\r\n\t\t\t\treturn dojoDate.getTimezoneName(dateObject);\r\n\t\t\t\r\n\t\t\tcase \"%\":\r\n\t\t\t\treturn \"%\";\r\n\t\t}\r\n\t};\r\n\r\n\t// parse the formatting string and construct the resulting string\r\n\tvar string = \"\",\r\n\t\ti = 0,\r\n\t\tindex = 0,\r\n\t\tswitchCase = null;\r\n\twhile ((index = format.indexOf(\"%\", i)) != -1){\r\n\t\tstring += format.substring(i, index++);\r\n\t\t\r\n\t\t// inspect modifier flag\r\n\t\tswitch (format.charAt(index++)) {\r\n\t\t\tcase \"_\": // Pad a numeric result string with spaces.\r\n\t\t\t\tpadChar = \" \"; break;\r\n\t\t\tcase \"-\": // Do not pad a numeric result string.\r\n\t\t\t\tpadChar = \"\"; break;\r\n\t\t\tcase \"0\": // Pad a numeric result string with zeros.\r\n\t\t\t\tpadChar = \"0\"; break;\r\n\t\t\tcase \"^\": // Convert characters in result string to uppercase.\r\n\t\t\t\tswitchCase = \"upper\"; break;\r\n\t\t\tcase \"*\": // Convert characters in result string to lowercase\r\n\t\t\t\tswitchCase = \"lower\"; break;\r\n\t\t\tcase \"#\": // Swap the case of the result string.\r\n\t\t\t\tswitchCase = \"swap\"; break;\r\n\t\t\tdefault: // no modifier flag so decrement the index\r\n\t\t\t\tpadChar = null; index--; break;\r\n\t\t}\r\n\r\n\t\t// toggle case if a flag is set\r\n\t\tvar property = $(format.charAt(index++));\r\n\t\tswitch (switchCase){\r\n\t\t\tcase \"upper\":\r\n\t\t\t\tproperty = property.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"lower\":\r\n\t\t\t\tproperty = property.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"swap\": // Upper to lower, and versey-vicea\r\n\t\t\t\tvar compareString = property.toLowerCase();\r\n\t\t\t\tvar swapString = '';\r\n\t\t\t\tvar ch = '';\r\n\t\t\t\tfor (var j = 0; j < property.length; j++){\r\n\t\t\t\t\tch = property.charAt(j);\r\n\t\t\t\t\tswapString += (ch == compareString.charAt(j)) ?\r\n\t\t\t\t\t\tch.toUpperCase() : ch.toLowerCase();\r\n\t\t\t\t}\r\n\t\t\t\tproperty = swapString;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tswitchCase = null;\r\n\t\t\r\n\t\tstring += property;\r\n\t\ti = index;\r\n\t}\r\n\tstring += format.substring(i);\r\n\t\r\n\treturn string; // String\r\n};\r\n\r\nposix.getStartOfWeek = function(/*Date*/dateObject, /*Number*/firstDay){\r\n\t// summary:\r\n\t//\t\tReturn a date object representing the first day of the given\r\n\t//\t\tdate's week.\r\n\tif(isNaN(firstDay)){\r\n\t\tfirstDay = dojoCldrSupplemental.getFirstDayOfWeek ? dojoCldrSupplemental.getFirstDayOfWeek() : 0;\r\n\t}\r\n\tvar offset = firstDay;\r\n\tif(dateObject.getDay() >= firstDay){\r\n\t\toffset -= dateObject.getDay();\r\n\t}else{\r\n\t\toffset -= (7 - dateObject.getDay());\r\n\t}\r\n\tvar date = new Date(dateObject);\r\n\tdate.setHours(0, 0, 0, 0);\r\n\treturn dojoDate.add(date, \"day\", offset); // Date\r\n};\r\n\r\nposix.setIsoWeekOfYear = function(/*Date*/dateObject, /*Number*/week){\r\n\t// summary:\r\n\t//\t\tSet the ISO8601 week number of the given date.\r\n\t//\t\tThe week containing January 4th is the first week of the year.\r\n\t// week:\r\n\t//\t\tcan be positive or negative: -1 is the year's last week.\r\n\tif(!week){ return dateObject; }\r\n\tvar currentWeek = posix.getIsoWeekOfYear(dateObject);\r\n\tvar offset = week - currentWeek;\r\n\tif(week < 0){\r\n\t\tvar weeks = posix.getIsoWeeksInYear(dateObject);\r\n\t\toffset = (weeks + week + 1) - currentWeek;\r\n\t}\r\n\treturn dojoDate.add(dateObject, \"week\", offset); // Date\r\n};\r\n\r\nposix.getIsoWeekOfYear = function(/*Date*/dateObject){\r\n\t// summary:\r\n\t//\t\tGet the ISO8601 week number of the given date.\r\n\t//\t\tThe week containing January 4th is the first week of the year.\r\n\t//\t\tSee http://en.wikipedia.org/wiki/ISO_week_date\r\n\tvar weekStart = posix.getStartOfWeek(dateObject, 1);\r\n\tvar yearStart = new Date(dateObject.getFullYear(), 0, 4); // January 4th\r\n\tyearStart = posix.getStartOfWeek(yearStart, 1);\r\n\tvar diff = weekStart.getTime() - yearStart.getTime();\r\n\tif(diff < 0){ return posix.getIsoWeeksInYear(weekStart); } // Integer\r\n\treturn Math.ceil(diff / 604800000) + 1; // Integer\r\n};\r\n\r\nposix.getIsoWeeksInYear = function(/*Date*/dateObject) {\r\n\t// summary:\r\n\t//\t\tDetermine the number of ISO8601 weeks in the year of the given\r\n\t//\t\tdate. Most years have 52 but some have 53.\r\n\t//\t\tSee http://www.phys.uu.nl/~vgent/calendar/isocalendar_text3.htm\r\n\tfunction p(y) {\r\n\t\treturn y + Math.floor(y/4) - Math.floor(y/100) + Math.floor(y/400);\r\n\t}\r\n\tvar y = dateObject.getFullYear();\r\n\treturn ( p(y) % 7 == 4 || p(y-1) % 7 == 3 ) ? 53 : 52;\t//\tInteger\r\n};\r\n\r\nreturn posix;\r\n\r\n});"]}