{"version":3,"sources":["date/tests/buddhist/Date.js"],"names":["dojo","provide","require","tests","register","name","setUp","forEach","locale","requireLocalization","runTest","t","tearDown","dateBuddhist","dojox","date","buddhist","Date","dateGregorian","toGregorian","is","compare","dateBuddhistFromGreg","dateBuddhist1","dateBuddhistLeap","dateBuddhistAdd","add","dateBuddhistAddLeap","difference","dateBuddhistAdd1","dateBuddhistAdd2","dateBuddhistAdd3","dateBuddhistAdd4","dateBuddhistAdd5","dateBuddhistAdd6","dateBuddhistDiff","options","formatLength","str","format","parse","pat","datePattern","selector","timePattern","gregDate","date2","dates","i","newBuddhistDate","newDate","getHours","getMinutes","getSeconds","getMilliseconds"],"mappings":"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","file":"../../../../date/tests/buddhist/Date.js","sourcesContent":["dojo.provide(\"dojox.date.tests.buddhist.Date\");\r\ndojo.require(\"dojox.date.buddhist\");\r\ndojo.require(\"dojox.date.buddhist.Date\");\r\ndojo.require(\"dojox.date.buddhist.locale\");\r\ndojo.require(\"dojo.date.locale\");\r\n\r\n//dojo.requireLocalization(\"dojo.cldr\", \"gregorian\");\r\n//dojo.requireLocalization(\"dojo.cldr\", \"buddhist\");\r\n\r\ntests.register(\"dojox.date.tests.buddhist.Date\",\r\n\t[\r\n\t\t{\r\n\t\t\t// see tests for dojo.date.locale for setup info\r\n\r\n\t\t\tname: \"setup\",\r\n\t\t\tsetUp: function(){\r\n\t\t\t\tvar partLocaleList = [\"th\"];\r\n\r\n\t\t\t\tdojo.forEach(partLocaleList, function(locale){\r\n\t\t\t\t\tdojo.requireLocalization(\"dojo.cldr\", \"gregorian\", locale);\r\n\t\t\t\t\tdojo.requireLocalization(\"dojo.cldr\", \"buddhist\", locale);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\trunTest: function(t){\r\n\t\t\t},\r\n\t\t\ttearDown: function(){\r\n\t\t\t\t//Clean up bundles that should not exist if\r\n\t\t\t\t//the test is re-run.\r\n\t\t\t//\t\t\t\tdelete dojo.cldr.nls.greg;\r\n\t\t\t//\t\t\t\tdelete dojo.cldr.nls.buddhist;\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"toGregorian\",\r\n\t\t\trunTest: function(t){\r\n\t\t\t\tvar dateBuddhist = new dojox.date.buddhist.Date(2551, 11, 19); //Buddhist.Date month 0-12\r\n\t\t\t\tvar dateGregorian = dateBuddhist.toGregorian();\r\n\t\t\t\tt.is(0, dojo.date.compare(new Date(2008, 11, 19), dateGregorian, \"date\"));//Date month 0-11\r\n\t\t\t\t\r\n\t\t\t\tdateBuddhist = new dojox.date.buddhist.Date(2548, 3, 18);\r\n\t\t\t\tdateGregorian = dateBuddhist.toGregorian();\r\n\t\t\t\tt.is(0, dojo.date.compare(new Date(2005, 3, 18), dateGregorian, \"date\"));\r\n\t\t\t\t\r\n\t\t\t\tdateBuddhist = new dojox.date.buddhist.Date(2550, 7, 10);\r\n\t\t\t\tdateGregorian = dateBuddhist.toGregorian();\r\n\t\t\t\tt.is(0, dojo.date.compare(new Date(2007, 7, 10), dateGregorian, \"date\"));\r\n\t\t\t\t\r\n\t\t\t\tdateBuddhist = new dojox.date.buddhist.Date(2552, 4, 20);\r\n\t\t\t\tdateGregorian = dateBuddhist.toGregorian();\r\n\t\t\t\tt.is(0, dojo.date.compare(new Date(2009, 4, 20), dateGregorian, \"date\"));\r\n\t\t\t\t\r\n\t\t\t\tdateBuddhist = new dojox.date.buddhist.Date(2553, 6, 31);\r\n\t\t\t\tdateGregorian = dateBuddhist.toGregorian();\r\n\t\t\t\tt.is(0, dojo.date.compare(new Date(2010, 6, 31), dateGregorian, \"date\"));\r\n\t\t\t\t\r\n\t\t\t\tdateBuddhist = new dojox.date.buddhist.Date(2554, 9, 1);\r\n\t\t\t\tdateGregorian = dateBuddhist.toGregorian();\r\n\t\t\t\tt.is(0, dojo.date.compare(new Date(2011, 9, 1), dateGregorian, \"date\"));\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"fromGregorian\",\r\n\t\t\trunTest: function(t){\r\n\t\t\t\tvar dateGregorian = new Date(2009, 3, 12);\r\n\t\t\t\tvar dateBuddhistFromGreg = new dojox.date.buddhist.Date(dateGregorian);\r\n\t\t\t\tt.is(0, dojo.date.compare( dateBuddhistFromGreg.toGregorian(), dateGregorian, \"date\"));\r\n\t\t\t\tt.is(0, dojo.date.compare( dateBuddhistFromGreg.toGregorian(), dateGregorian));\r\n\t\t\t\t\r\n\t\t\t\tdateGregorian = new Date(2008, 11, 18);  //Date month 0-11\r\n\t\t\t\tdateBuddhistFromGreg = new dojox.date.buddhist.Date(dateGregorian);\r\n\t\t\t\tt.is(0, dojox.date.buddhist.compare(new dojox.date.buddhist.Date(2551, 11, 18), dateBuddhistFromGreg, \"date\")); //Buddhist.Date month 0-12\r\n\t\r\n\t\t\t\tdateGregorian = new Date(2005, 3, 18);\r\n\t\t\t\tdateBuddhistFromGreg = new dojox.date.buddhist.Date(dateGregorian);\r\n\t\t\t\tt.is(0, dojox.date.buddhist.compare(new dojox.date.buddhist.Date(2548, 3, 18), dateBuddhistFromGreg, \"date\"));\r\n\t\t\t\t\r\n\t\t\t\tdateGregorian = new Date(2007, 7, 10);\r\n\t\t\t\tdateBuddhistFromGreg = new dojox.date.buddhist.Date(dateGregorian);\r\n\t\t\t\tt.is(0, dojox.date.buddhist.compare(new dojox.date.buddhist.Date(2550, 7, 10), dateBuddhistFromGreg, \"date\"));\r\n\t\t\t\t\r\n\t\t\t\tdateGregorian = new Date(2009, 4, 20);\r\n\t\t\t\tdateBuddhistFromGreg = new dojox.date.buddhist.Date(dateGregorian);\r\n\t\t\t\tt.is(0, dojox.date.buddhist.compare(new dojox.date.buddhist.Date(2552, 4, 20), dateBuddhistFromGreg, \"date\"));\r\n\t\t\t\t\r\n\t\t\t\tdateGregorian = new Date(2010, 6, 31);\r\n\t\t\t\tdateBuddhistFromGreg = new dojox.date.buddhist.Date(dateGregorian);\r\n\t\t\t\tt.is(0, dojox.date.buddhist.compare(new dojox.date.buddhist.Date(2553, 6, 31), dateBuddhistFromGreg, \"date\"));\r\n\t\t\t\t\r\n\t\t\t\tdateGregorian = new Date(2011, 9, 1);\r\n\t\t\t\tdateBuddhistFromGreg = new dojox.date.buddhist.Date(dateGregorian);\r\n\t\t\t\tt.is(0, dojox.date.buddhist.compare(new dojox.date.buddhist.Date(2554, 9, 1), dateBuddhistFromGreg, \"date\"));\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"compare\",\r\n\t\t\trunTest: function(t){\r\n\t\t\t\tvar dateBuddhist = new dojox.date.buddhist.Date(2552, 5, 16);\r\n\t\t\t\tvar dateBuddhist1 = new dojox.date.buddhist.Date(2550,  10,  25);\r\n\t\t\t\tt.is(1, dojo.date.compare(dateBuddhist.toGregorian(), dateBuddhist1.toGregorian()));\r\n\t\t\t\tt.is(-1, dojo.date.compare(dateBuddhist1.toGregorian(), dateBuddhist.toGregorian()));\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"add_and_difference\",\r\n\t\t\trunTest: function(t){\r\n\t\t\t\tvar dateBuddhist = new dojox.date.buddhist.Date(2552, 5, 16);\r\n\t\t\t\tvar dateBuddhistLeap = new dojox.date.buddhist.Date(2551, 5, 16);\r\n\t\t\t\t\r\n\t\t\t\tvar dateBuddhistAdd = dojox.date.buddhist.add(dateBuddhist, \"month\",  18);\r\n\t\t\t\tvar dateBuddhistAddLeap = dojox.date.buddhist.add(dateBuddhistLeap, \"month\",  18);\r\n\t\t\t\tt.is(0, 18 - dojox.date.buddhist.difference(dateBuddhist, dateBuddhistAdd, \"month\"));\r\n\t\t\t\tt.is(0, 18 - dojox.date.buddhist.difference(dateBuddhistLeap, dateBuddhistAddLeap, \"month\"));\r\n\t\t\t\t\r\n\t\t\t\tvar dateBuddhistAdd1= dojox.date.buddhist.add(dateBuddhist, \"year\", 2);\r\n\t\t\t\tt.is(0,  2 - dojox.date.buddhist.difference(dateBuddhist, dateBuddhistAdd1, \"year\"));\r\n\t\t\t\tt.is(0,  2 - dojox.date.buddhist.difference(dateBuddhistLeap, dojox.date.buddhist.add(dateBuddhistLeap, \"year\", 2), \"year\"));\r\n\t\t\t\t\r\n\t\t\t\tvar dateBuddhistAdd2= dojox.date.buddhist.add(dateBuddhist, \"week\",  12);\r\n\t\t\t\tt.is(0, 12 - dojox.date.buddhist.difference(dateBuddhist, dateBuddhistAdd2, \"week\"));\r\n\t\t\t\tt.is(0,  12 - dojox.date.buddhist.difference(dateBuddhistLeap, dojox.date.buddhist.add(dateBuddhistLeap, \"week\", 12), \"week\"));\r\n\t\t\t\t\t\t\t\r\n\t\t\t\tvar dateBuddhistAdd3= dojox.date.buddhist.add(dateBuddhist, \"weekday\", 20);\r\n\t\t\t\tt.is(0, 20 - dojox.date.buddhist.difference(dateBuddhist, dateBuddhistAdd3, \"weekday\"));\r\n\t\t\t\tt.is(0,  20 - dojox.date.buddhist.difference(dateBuddhistLeap, dojox.date.buddhist.add(dateBuddhistLeap, \"weekday\", 20), \"weekday\"));\r\n\t\t\t\t\r\n\t\t\t\tvar dateBuddhistAdd4= dojox.date.buddhist.add(dateBuddhist, \"day\", -50)\r\n\t\t\t\tt.is(0, -50 - dojox.date.buddhist.difference(dateBuddhist, dateBuddhistAdd4, \"day\"));\r\n\t\t\t\tt.is(0, -50 - dojox.date.buddhist.difference(dateBuddhistLeap, dojox.date.buddhist.add(dateBuddhistLeap, \"day\", -50), \"day\"));\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tvar dateBuddhistAdd5= dojox.date.buddhist.add(dateBuddhist, \"hour\", 200);\r\n\t\t\t\tt.is(0, 200 - dojox.date.buddhist.difference(dateBuddhist, dateBuddhistAdd5, \"hour\"));\r\n\t\t\t\tt.is(0, 200 - dojox.date.buddhist.difference(dateBuddhistLeap, dojox.date.buddhist.add(dateBuddhistLeap, \"hour\", 200), \"hour\"));\r\n\t\t\t\t\r\n\t\t\t\tvar dateBuddhistAdd6= dojox.date.buddhist.add(dateBuddhist, \"minute\", -200);\r\n\t\t\t\tt.is(0, -200 - dojox.date.buddhist.difference(dateBuddhist, dateBuddhistAdd6, \"minute\"));\r\n\t\t\t\tt.is(0, -200 - dojox.date.buddhist.difference(dateBuddhistLeap, dojox.date.buddhist.add(dateBuddhistLeap, \"minute\", -200), \"minute\"));\r\n\t\t\t\t\r\n\t\t\t\tvar dateBuddhistDiff = new dojox.date.buddhist.Date(2552, 5, 17);\r\n\t\t\t\tt.is(1, dojox.date.buddhist.difference(dateBuddhist, dateBuddhistDiff));\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"parse_and_format\",\r\n\t\t\trunTest: function(t){\r\n\t\t\t\tvar dateBuddhist = new dojox.date.buddhist.Date(2552, 5, 16);\r\n\t\t\t\t\t\r\n\t\t\t\tvar options = {formatLength:'short'};\r\n\t\t\t\tstr= dojox.date.buddhist.locale.format(dateBuddhist, options);\r\n\t\t\t\tdateBuddhist1 = dojox.date.buddhist.locale.parse(str, options);\r\n\t\t\t\tt.is(0, dojo.date.compare(dateBuddhist.toGregorian(), dateBuddhist1.toGregorian(), 'date'));\r\n\t\t\t\t\r\n\t\t\t\tvar pat = 'dd/MM/yy h:m:s';\r\n\t\t\t\t options = {datePattern:pat, selector:'date'};\r\n\t\t\t\t str= dojox.date.buddhist.locale.format(dateBuddhist, options);\r\n\t\t\t\t dateBuddhist1 = dojox.date.buddhist.locale.parse(str, options);\r\n\t\t\t\t t.is(0, dojo.date.compare(dateBuddhist.toGregorian(), dateBuddhist1.toGregorian(), 'date'));\r\n\t\t\t\t \r\n\t\t\t\tpat = 'dd#MM#yy HH$mm$ss';\r\n\t\t\t\t options = {datePattern:pat, selector:'date'};\r\n\t\t\t\t str= dojox.date.buddhist.locale.format(dateBuddhist, options);\r\n\t\t\t\t dateBuddhist1 = dojox.date.buddhist.locale.parse(str, options);\r\n\t\t\t\t  t.is(0, dojo.date.compare(dateBuddhist.toGregorian(), dateBuddhist1.toGregorian(), 'date'));\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t pat = 'HH$mm$ss';\r\n\t\t\t\t options = {timePattern:pat, selector:'time'};\r\n\t\t\t\t str= dojox.date.buddhist.locale.format(dateBuddhist, options);\r\n\t\t\t\t dateBuddhist1 = dojox.date.buddhist.locale.parse(str, options);\r\n\t\t\t\tgregDate = dojo.date.locale.parse(str, options);\r\n\t\t\t\tt.is(0, dojo.date.compare(gregDate, dateBuddhist1.toGregorian(), 'time'));\r\n\t\t\t\t\t\t\t\t \t\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"addMilliseconds\",\r\n\t\t\trunTest: function(t){\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tvar buddhistDates = [\r\n\t\t\t\t\t\t\t[5771, 8, 21, 10, 30],\r\n\t\t\t\t\t\t\t[5771, 8, 21, 2, 2],\r\n\t\t\t\t\t\t\t[5771, 8, 21, 8, 10], // \"absolute\" index of month, non-leap year\r\n\t\t\t\t\t\t\t[5771, 8, 21, 12, 59],\r\n\t\t\t\t\t\t\t[5771, 8, 21, 3, 33]\r\n\t\t\t\t\t\t];\r\n\t\t\t\t\t\t\r\n\t\t\t\tvar dates = [\r\n\t\t\t\t\t\t\t[1432, 8, 21, 10, 30],\r\n\t\t\t\t\t\t\t[1432, 8, 21, 2, 2],\r\n\t\t\t\t\t\t\t[1432, 8, 21, 8, 10], // \"absolute\" index of month, non-leap year\r\n\t\t\t\t\t\t\t[1432, 8, 21, 12, 59],\r\n\t\t\t\t\t\t\t[1432, 8, 21, 3, 33]\r\n\t\t\t\t\t\t];\r\n\t\t\t\t\t\t\r\n\t\t\t\tvar traceAttributes = function(date){\r\n\t\t\t\t\tconsole.log(\"getHours():\" + date.getHours()+\" getMinutes():\"+date.getMinutes()+\" getSeconds():\"+date.getSeconds()+\" getMilliseconds():\"+date.getMilliseconds());\r\n\t\t\t\t};\r\n\t\t\t\t\t\t\r\n\t\t\t\tvar dateBuddhist, date2;\r\n\t\t\t\tdojo.forEach(buddhistDates, function(date, i){\r\n\t\t\t\t\tdateBuddhist = new dojox.date.buddhist.Date(date[0], date[1], date[2], date[3], date[4]);\r\n\t\t\t\t\tdate2 = new Date(dates[i][0], dates[i][1], dates[i][2], dates[i][3], dates[i][4]);\t\t\t\r\n\t\t\r\n\t\t\t\t\tvar newBuddhistDate = dojox.date.buddhist.add(dateBuddhist, \"millisecond\",  1200);\r\n\t\t\t\t\tvar newDate = dojo.date.add(date2, \"millisecond\",  1200);\r\n\t\t\t\t\tt.is(newBuddhistDate.getHours(), newDate.getHours(), \"Hours are different\");\r\n\t\t\t\t\tt.is(newBuddhistDate.getMinutes(), newDate.getMinutes(), \"Minutes are different\");\r\n\t\t\t\t\tt.is(newBuddhistDate.getSeconds(), newDate.getSeconds(), \"Seconds are different\");\r\n\t\t\t\t\tt.is(newBuddhistDate.getMilliseconds(), newDate.getMilliseconds(), \"Milliseconds are different\");\r\n\t\t\t\t\t//traceAttributes(newBuddhistDate);\r\n\r\n\t\t\t\t\tnewBuddhistDate = dojox.date.buddhist.add(dateBuddhist, \"millisecond\",  12022);\r\n\t\t\t\t\tnewDate = dojo.date.add(date2, \"millisecond\",  12022);\r\n\t\t\t\t\tt.is(newBuddhistDate.getHours(), newDate.getHours(), \"Hours are different\");\r\n\t\t\t\t\tt.is(newBuddhistDate.getMinutes(), newDate.getMinutes(), \"Minutes are different\");\r\n\t\t\t\t\tt.is(newBuddhistDate.getSeconds(), newDate.getSeconds(), \"Seconds are different\");\r\n\t\t\t\t\tt.is(newBuddhistDate.getMilliseconds(), newDate.getMilliseconds(), \"Milliseconds are different\");\r\n\t\t\t\t\t//traceAttributes(newBuddhistDate);\r\n\r\n\t\t\t\t\tnewBuddhistDate = dojox.date.buddhist.add(dateBuddhist, \"millisecond\",  120422);\r\n\t\t\t\t\tnewDate = dojo.date.add(date2, \"millisecond\",  120422);\r\n\t\t\t\t\tt.is(newBuddhistDate.getHours(), newDate.getHours(), \"Hours are different\");\r\n\t\t\t\t\tt.is(newBuddhistDate.getMinutes(), newDate.getMinutes(), \"Minutes are different\");\r\n\t\t\t\t\tt.is(newBuddhistDate.getSeconds(), newDate.getSeconds(), \"Seconds are different\");\r\n\t\t\t\t\tt.is(newBuddhistDate.getMilliseconds(), newDate.getMilliseconds(), \"Milliseconds are different\");\r\n\t\t\t\t\t//traceAttributes(newBuddhistDate);\r\n\r\n\t\t\t\t\tnewBuddhistDate = dojox.date.buddhist.add(dateBuddhist, \"millisecond\",  1204422);\r\n\t\t\t\t\tnewDate = dojo.date.add(date2, \"millisecond\",  1204422);\r\n\t\t\t\t\tt.is(newBuddhistDate.getHours(), newDate.getHours(), \"Hours are different\");\r\n\t\t\t\t\tt.is(newBuddhistDate.getMinutes(), newDate.getMinutes(), \"Minutes are different\");\r\n\t\t\t\t\tt.is(newBuddhistDate.getSeconds(), newDate.getSeconds(), \"Seconds are different\");\r\n\t\t\t\t\tt.is(newBuddhistDate.getMilliseconds(), newDate.getMilliseconds(), \"Milliseconds are different\");\r\n\t\t\t\t\t//traceAttributes(newBuddhistDate);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n);\r\n"]}