{"version":3,"sources":["date/hebrew/Date.js"],"names":["define","lang","declare","numerals","HDate","_MONTH_LENGTH","_MONTH_START","_LEAP_MONTH_START","_GREGORIAN_MONTH_COUNT","_date","_month","_year","_hours","_minutes","_seconds","_milliseconds","_day","constructor","len","arguments","length","arg0","Date","this","fromGregorian","NaN","console","warn","_setDay","getDate","getDateLocalized","locale","dojo","match","getDayHebrewLetters","getMonth","getFullYear","getHours","getMinutes","getSeconds","getMilliseconds","setDate","date","mdays","getDaysInHebrewMonth","setFullYear","year","month","isLeapYear","undefined","setMonth","dnum","setHours","hours_arg_no","hours","_addMinutes","minutes","setMinutes","parseInt","_addSeconds","seconds","setSeconds","_addMilliseconds","milliseconds","setMilliseconds","day","_startOfYear","_yearType","toString","isNaN","yearType","yearLength","_handleGetYearLength","Number","Error","eyear","months","Math","floor","frac","wd","x","gdate","result","_computeHebrewFields","d","_getJulianDayFromGregorianDate","m","ys","dayOfYear","typeofYear","monthStart","toGregorian","hYear","hMonth","hDate","gregorianEpochDay","rem","n400","_floorDivide","n100","n4","n1","isLeap","correction","dayOfMonth","numerator","denominator","remainder","quotient","getDay","y","julianDay","prototype","valueOf"],"mappings":"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","file":"../../../date/hebrew/Date.js","sourcesContent":["define([\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/declare\",\r\n\t\"./numerals\"\r\n], function(lang, declare, numerals){\r\n\r\nvar HDate = declare(\"dojox.date.hebrew.Date\", null, {\r\n\t// summary:\r\n\t//\t\tA Date-like object which implements the Hebrew calendar\r\n\t// description:\r\n\t//\t\tA Date-like object which implements the Hebrew Calendar.  Because this object\r\n\t//\t\timplements many of the same methods as the native JavaScript Date object, which\r\n\t//\t\timplements the Gregorian calendar, it can often be used its place.  Note that\r\n\t//\t\tthis object does not extend Date or use its prototype.\r\n\t// example:\r\n\t//\t|\tdojo.require(\"dojox.date.hebrew.Date\");\r\n\t//\t|\r\n\t//\t|\tvar date = new dojox.date.hebrew.Date();\r\n\t//\t|\tconsole.log(date.getFullYear()+'\\'+date.getMonth()+'\\'+date.getDate());\r\n\r\n\t// Hebrew date calculations are performed in terms of days, hours, and\r\n\t// \"parts\" (or halakim), which are 1/1080 of an hour, or 3 1/3 seconds.\r\n\t//_HOUR_PARTS: 1080,\r\n\t//_DAY_PARTS: 24*1080,\r\n   \r\n\t// An approximate value for the length of a lunar month.\r\n\t// It is used to calculate the approximate year and month of a given\r\n\t// absolute date.\r\n\t//_MONTH_FRACT: 12*1080 + 793,\r\n\t//_MONTH_PARTS: 29*24*1080 + 12*1080 + 793,\r\n\t    \r\n\t// The time of the new moon (in parts) on 1 Tishri, year 1 (the epoch)\r\n\t// counting from noon on the day before.  BAHARAD is an abbreviation of\r\n\t// Bet (Monday), Hey (5 hours from sunset), Resh-Daled (204).\r\n\t//_BAHARAD: 11*1080 + 204,\r\n\r\n\t// The Julian day of the Gregorian epoch, that is, January 1, 1 on the\r\n\t// Gregorian calendar.\r\n\t//_JAN_1_1_JULIAN_DAY: 1721426,\r\n\r\n\t/**\r\n\t* The lengths of the Hebrew months.  This is complicated, because there\r\n\t* are three different types of years, or six if you count leap years.\r\n\t* Due to the rules for postponing the start of the year to avoid having\r\n\t* certain holidays fall on the sabbath, the year can end up being three\r\n\t* different lengths, called \"deficient\", \"normal\", and \"complete\".\r\n\t*/\r\n\t\r\n\t//\"Absolute\" indexes of  months:  Tishri -  0, Heshvan - 1, Kislev - 2, Tevet - 3, Shevat -  4, Adar I (leap years only) - 5, Adar - 6, Nisan - 7, Iyar - 8, Sivan - 9,   Tammuz-10, Av - 11, Elul - 12.\r\n\r\n\t_MONTH_LENGTH:  [\r\n\t\t// Deficient  Normal     Complete\r\n\t\t[   30,\t    30,\t    30\t],\t\t //Tishri    0\r\n\t\t[   29,\t    29,\t    30\t],\t\t //Heshvan   1\r\n\t\t[   29,\t    30,\t    30\t],\t\t //Kislev   2\r\n\t\t[   29,\t    29,\t    29\t],\t\t //Tevet  3\r\n\t\t[   30,\t    30,\t    30\t],\t\t //Shevat  4\r\n\t\t[   30,\t    30,\t    30\t],\t\t //Adar I (leap years only)  5\r\n\t\t[   29,\t    29,\t    29\t],\t\t //Adar  6\r\n\t\t[   30,\t    30,\t    30\t],\t\t //Nisan  7\r\n\t\t[   29,\t    29,\t    29\t],\t\t //Iyar  8\r\n\t\t[   30,\t    30,\t    30\t],\t\t //Sivan  9\r\n\t\t[   29,\t    29,\t    29\t],\t\t //Tammuz  10\r\n\t\t[   30,\t    30,\t    30\t],\t\t //Av  11\r\n\t\t[   29,\t    29,\t    29\t]\t\t //Elul  12\r\n\t],\r\n\r\n\t/**\r\n\t* The cumulative # of days to the end of each month in a non-leap year\r\n\t* Although this can be calculated from the MONTH_LENGTH table,\r\n\t* keeping it around separately makes some calculations a lot faster\r\n\t*/\r\n\t_MONTH_START:  [\r\n\t\t// Deficient  Normal\tComplete\r\n\t\t[    0,\t\t0,\t\t0  ],\t\t// (placeholder)\r\n\t\t[   30,\t    30,\t    30  ],\t\t// Tishri\r\n\t\t[   59,\t    59,\t    60  ],\t\t// Heshvan\r\n\t\t[   88,\t    89,\t    90  ],\t\t// Kislev\r\n\t\t[  117,\t   118,\t   119  ],\t\t// Tevet\r\n\t\t[  147,\t   148,\t   149  ],\t\t// Shevat\r\n\t\t[  147,\t   148,\t   149  ],\t\t// (Adar I placeholder)\r\n\t\t[  176,\t   177,\t   178  ],\t\t// Adar\r\n\t\t[  206,\t   207,\t   208  ],\t\t// Nisan\r\n\t\t[  235,\t   236,\t   237  ],\t\t// Iyar\r\n\t\t[  265,\t   266,\t   267  ],\t\t// Sivan\r\n\t\t[  294,\t   295,\t   296  ],\t\t// Tammuz\r\n\t\t[  324,\t   325,\t   326  ],\t\t// Av\r\n\t\t[  353,\t   354,\t   355  ]\t\t// Elul\r\n\t],\r\n\r\n\t/**\r\n\t* The cumulative # of days to the end of each month in a leap year\r\n\t*/\r\n\t_LEAP_MONTH_START:  [\r\n\t\t// Deficient  Normal\tComplete\r\n\t\t[    0,\t\t0,\t\t0  ],\t\t// (placeholder)\r\n\t\t[   30,\t    30,\t    30  ],\t\t// Tishri\r\n\t\t[   59,\t    59,\t    60  ],\t\t// Heshvan\r\n\t\t[   88,\t    89,\t    90  ],\t\t// Kislev\r\n\t\t[  117,\t   118,\t   119  ],\t\t// Tevet\r\n\t\t[  147,\t   148,\t   149  ],\t\t// Shevat\r\n\t\t[  177,\t   178,\t   179  ],\t\t// Adar I\r\n\t\t[  206,\t   207,\t   208  ],\t\t// Adar II\r\n\t\t[  236,\t   237,\t   238  ],\t\t// Nisan\r\n\t\t[  265,\t   266,\t   267  ],\t\t// Iyar\r\n\t\t[  295,\t   296,\t   297  ],\t\t// Sivan\r\n\t\t[  324,\t   325,\t   326  ],\t\t// Tammuz\r\n\t\t[  354,\t   355,\t   356  ],\t\t// Av\r\n\t\t[  383,\t   384,\t   385  ]\t\t// Elul\r\n\t],\r\n\t\r\n\t_GREGORIAN_MONTH_COUNT:  [\r\n\t\t//len len2   st  st2\r\n\t\t[  31,  31,   0,   0 ], // Jan\r\n\t\t[  28,  29,  31,  31 ], // Feb\r\n\t\t[  31,  31,  59,  60 ], // Mar\r\n\t\t[  30,  30,  90,  91 ], // Apr\r\n\t\t[  31,  31, 120, 121 ], // May\r\n\t\t[  30,  30, 151, 152 ], // Jun\r\n\t\t[  31,  31, 181, 182 ], // Jul\r\n\t\t[  31,  31, 212, 213 ], // Aug\r\n\t\t[  30,  30, 243, 244 ], // Sep\r\n\t\t[  31,  31, 273, 274 ], // Oct\r\n\t\t[  30,  30, 304, 305 ], // Nov\r\n\t\t[  31,  31, 334, 335 ] // Dec\r\n\t\t// len  length of month\r\n\t\t// len2 length of month in a leap year\r\n\t\t// st   days in year before start of month\r\n\t\t// st2  days in year before month in leap year\r\n\t],\r\n\r\n    _date: 0,\r\n\t_month: 0,\r\n\t_year: 0,\r\n\t_hours: 0,\r\n\t_minutes: 0,\r\n\t_seconds: 0,\r\n\t_milliseconds: 0,\r\n\t_day: 0,\r\n\r\n \tconstructor: function(){\r\n\t\t// summary:\r\n\t\t//\t\tinitialize the date object value\r\n\t\t// example:\r\n\t\t//\t|\tvar date1 = new dojox.date.hebrew.Date();\r\n\t\t//\t|\tvar date2 = new dojox.date.hebrew.Date(date1);\r\n\t\t//\t|\tvar date3 = new dojox.date.hebrew.Date(5768,2,12);\r\n\r\n\t\tvar len = arguments.length;\r\n\t\tif(!len){// use the current date value, added \"\" to the similarity to date\r\n\t\t\tthis.fromGregorian(new Date());\r\n\t\t}else if(len == 1){\r\n\t\t\tvar arg0 = arguments[0];\r\n\t\t\tif(typeof arg0 == \"number\"){ // this is time \"valueof\"\r\n\t\t\t\targ0 = new Date(arg0);\r\n\t\t\t}\r\n\r\n\t\t\tif(arg0 instanceof Date){\r\n\t\t\t\tthis.fromGregorian(arg0);\r\n\t\t\t}else if(arg0 == \"\"){\r\n\t\t\t\t// date should be invalid.  Dijit relies on this behavior.\r\n\t\t\t\tthis._year = this._month = this._date = this._hours = this._minutes = this._seconds = this._milliseconds = NaN;\r\n\t\t\t}else{  // this is hebrew.Date object\r\n\t\t\t\tthis._year = arg0._year;\r\n\t\t\t\tthis._month =  arg0._month;\r\n\t\t\t\tthis._date = arg0._date;\r\n\t\t\t\tthis._hours = arg0._hours;\r\n\t\t\t\tthis._minutes = arg0._minutes;\r\n\t\t\t\tthis._seconds = arg0._seconds;\r\n\t\t\t\tthis._milliseconds = arg0._milliseconds;\r\n\t\t\t}\r\n\t\t}else if(len >= 3){\r\n\t\t\t// YYYY, MM, DD arguments passed, month is from 0-12,  \"absolute\" index of month\r\n\t\t\tthis._year += arguments[0];\r\n\t\t\tthis._month += arguments[1];\r\n\t\t\tthis._date += arguments[2];\r\n\t\t\t\r\n\t\t\tif(this._month > 12){\r\n\t\t\t\tconsole.warn(\"the month is incorrect , set 0  \" + this._month + \"   \" + this._year );\r\n\t\t\t\tthis._month = 0;\r\n\t\t\t}\r\n\t\t\tthis._hours += arguments[3] || 0;\r\n\t\t\tthis._minutes += arguments[4] || 0;\r\n\t\t\tthis._seconds += arguments[5] || 0;\r\n\t\t\tthis._milliseconds += arguments[6] || 0;\r\n\t\t}\r\n  \r\n\t\tthis._setDay();\r\n\t},\r\n\t\r\n\tgetDate: function(){\r\n\t\t// summary:\r\n\t\t//\t\treturns the date value (1 - 30)\r\n\t\t// example:\r\n\t\t//\t|\tvar date1 = new dojox.date.hebrew.Date();\r\n\t\t//\t|\tconsole.log(date1.getDate());\r\n\r\n\t\treturn this._date; // int\r\n\t},\r\n\r\n\tgetDateLocalized: function(/*String?*/locale){\r\n\t\t// summary:\r\n\t\t//\t\treturns the date value as hebrew numerals for the Hebrew locale,\r\n\t\t//\t\ta number for all others.\r\n\t\t// example:\r\n\t\t//\t|\tvar date1 = new dojox.date.hebrew.Date();\r\n\t\t//\t|\tconsole.log(date1.getDate());\r\n\r\n\t\treturn (locale || dojo.locale).match(/^he(?:-.+)?$/) ?\r\n\t\t\tnumerals.getDayHebrewLetters(this._date) : this.getDate();\r\n\t},\r\n\r\n\tgetMonth: function(){\r\n\t\t// summary:\r\n\t\t//\t\treturns the month value (0 - 12)\r\n\t\t// description:\r\n\t\t//\t\tthe result is the index in the month array:\r\n\t\t//\r\n\t\t//\t\t0. Tishri\r\n\t\t//\t\t1. Heshvan\r\n\t\t//\t\t2. Kislev\r\n\t\t//\t\t3. Tevet\r\n\t\t//\t\t4. Shevat\r\n\t\t//\t\t5. Adar I (leap years only)\r\n\t\t//\t\t6. Adar\r\n\t\t//\t\t7. Nisan\r\n\t\t//\t\t8. Iyar\r\n\t\t//\t\t9. Sivan\r\n\t\t//\t\t10. Tammuz\r\n\t\t//\t\t11. Av\r\n\t\t//\t\t12. Elul - 12\r\n\t\t//\r\n\t\t//\t\tFor non leap years, for months after Shevat, the actual position of\r\n\t\t//\t\tthe month in the year (used for short format) is less than\r\n\t\t//\t\tthe \"absolute\" index by 1.\r\n\t\t// example:\r\n\t\t//\t|\tvar date1 = new dojox.date.hebrew.Date(5769, 6, 1);\r\n\t\t//\t|\tconsole.log(date1.getMonth()+1);\r\n\t\t//\t|\t>> 7\r\n\r\n\t\treturn this._month;\r\n\t},\r\n\r\n\tgetFullYear: function(){\r\n\t\t// summary:\r\n\t\t//\t\treturns the Year value\r\n\t\t// example:\r\n\t\t//\t|\tvar date1 = new dojox.date.hebrew.Date(5769, 6, 1);\r\n\t\t//\t|\tconsole.log(date1.getFullYear());\r\n\t\t//\t|\t>> 5769\r\n\t\treturn this._year;\r\n\t},\r\n\t\t\t\r\n\tgetHours: function(){\r\n \t\t// summary:\r\n \t\t//\t\treturns the hour value\r\n\t\treturn this._hours;\r\n\t},\r\n\t\t\r\n\tgetMinutes: function(){\r\n\t\t// summary:\r\n\t\t//\t\treturns the minutes value\r\n\r\n\t\treturn this._minutes;\r\n\t},\r\n\r\n\tgetSeconds: function(){\r\n\t\t// summary:\r\n\t\t//\t\treturns the seconds value\r\n\t\treturn this._seconds;\r\n\t},\r\n\r\n\tgetMilliseconds: function(){\r\n\t\t// summary:\r\n\t\t//\t\treturns the milliseconds value\r\n\r\n\t\treturn this._milliseconds;\r\n\t},\r\n\r\n\tsetDate: function(/*number*/date){\r\n\t\t// summary:\r\n\t\t//\t\tsets the date number for a given month\r\n\t\t// example:\r\n\t\t//\t|\tvar date1 = new dojox.date.hebrew.Date(5769, 6, 1);\r\n\t\t//\t|\tdate1.setDate(2);\r\n\r\n\t\tdate = +date;\r\n\t\tvar mdays;\r\n\t\tif(date>0){\r\n\t\t\twhile (date > (mdays = this.getDaysInHebrewMonth(this._month, this._year))){\r\n\t\t\t\tdate -= mdays;\r\n\t\t\t\tthis._month++;\r\n\t\t\t\tif(this._month >= 13){this._year++; this._month -= 13;}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\twhile(date<=0){\r\n\t\t\t\tmdays = this.getDaysInHebrewMonth((this._month-1)>=0 ? (this._month-1) : 12, ((this._month-1)>=0)? this._year : this._year-1);\r\n\t\t\t\tthis._month--;\r\n\t\t\t\tif(this._month < 0){this._year--; this._month += 13;}\r\n\t\t\t\tdate += mdays;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._date = date;\r\n\t\tthis._setDay();\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\r\n\tsetFullYear: function(/*number*/year, /*number?*/month, /*number?*/ date){\r\n\t\t// summary:\r\n\t\t//\t\t set the year\r\n\t\t// example:\r\n\t\t//\t|\tvar date1 = new dojox.date.hebrew.Date();\r\n\t\t//\t|\tdate1.setFullYear(5768);\r\n\t\t//\t|\tdate1.setFullYear(5768, 1, 1);\r\n\t\t\r\n\t\tthis._year = year = +year;\r\n\t\tif(!this.isLeapYear(year) && this._month==5){  //incorrect month number for non leap year\r\n\t\t\tthis._month++;\r\n\t\t}\r\n\t\t\r\n\t\tif(month !== undefined){this.setMonth(month);}\r\n\t\tif(date !== undefined){this.setDate(date);}\r\n\t\t\r\n\t\tvar dnum = this.getDaysInHebrewMonth(this._month, this._year);\r\n\t\tif(dnum < this._date){\r\n\t\t\tthis._date = dnum;\r\n\t\t} // if the date in this month more than number of the days in this month\r\n\t\t\r\n\t\tthis._setDay();\r\n\t\treturn this;\r\n\t},\r\n\r\n\tsetMonth: function(/*number*/month){\r\n\t\t// summary:\r\n\t\t//\t\tsets the month.  You should use \"absolute\" index in the month array:\r\n\t\t//\r\n\t\t//\t\t0. Tishri\r\n\t\t//\t\t1. Heshvan\r\n\t\t//\t\t2. Kislev\r\n\t\t//\t\t3. Tevet\r\n\t\t//\t\t4. Shevat\r\n\t\t//\t\t5. Adar I (leap years only)\r\n\t\t//\t\t6. Adar\r\n\t\t//\t\t7. Nisan\r\n\t\t//\t\t8. Iyar\r\n\t\t//\t\t9. Sivan\r\n\t\t//\t\t10. Tammuz\r\n\t\t//\t\t11.\tAv\r\n\t\t//\t\t12. Elul - 12\r\n\t\t//\r\n\t\t//\tFor non leap years, for months after Shevat, the actual position of\r\n\t\t//\tthe month in the year (used for short format) is less than\r\n\t\t//\tthe \"absolute\" index by 1.\r\n\t\t// example:\r\n\t\t//\t|\tvar date1 = new dojox.date.hebrew.Date();\r\n\t\t//\t|\tdate1.setMonth(0); //first month\r\n\r\n\t\tmonth = +month; // coerce to a Number\r\n\t\tif(!this.isLeapYear(this._year) && month == 5){month++;}\r\n\t\r\n\t\tif(month>=0){\r\n\t\t\twhile(month >12){\r\n\t\t\t\tthis._year++;\r\n\t\t\t\tmonth -= 13;\r\n\t\t\t\tif (!this.isLeapYear(this._year) && month >= 5){month++;}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\twhile(month<0){\r\n\t\t\t\tthis._year--;\r\n\t\t\t\tmonth += (!this.isLeapYear(this._year)  &&  month < -7) ? 12 : 13;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis._month = month;\r\n\r\n\t\tvar dnum = this.getDaysInHebrewMonth(this._month, this._year);\r\n\t\tif(dnum < this._date){\r\n\t\t\tthis._date = dnum;\r\n\t\t} // if the date in this month more than number of the days in this month\r\n\t\t\r\n\t\tthis._setDay();\r\n\t\treturn this;\r\n\t},\r\n\r\n\tsetHours: function(){\r\n\t\t// summary:\r\n\t\t//\t\tsets the hour\r\n\t\t// description:\r\n\t\t//\t\tSets the hour and optionally minutes, seconds, milliseconds also.\r\n\t\t// example:\r\n\t\t//\t|\tvar date1 = new dojox.date.hebrew.Date();\r\n\t\t//\t|\tdate1.setHours(12, 30, 0, 0);\r\n\r\n\t\tvar hours_arg_no = arguments.length;\r\n\t\tvar hours = 0;\r\n\t\tif(hours_arg_no >= 1){\r\n\t\t\thours = +arguments[0];\r\n\t\t}\r\n\r\n\t\tif(hours_arg_no >= 2){\r\n\t\t\tthis._minutes = +arguments[1];\r\n\t\t}\r\n\r\n\t\tif(hours_arg_no >= 3){\r\n\t\t\tthis._seconds = +arguments[2];\r\n\t\t}\r\n\r\n\t\tif(hours_arg_no == 4){\r\n\t\t\tthis._milliseconds = +arguments[3];\r\n\t\t}\r\n\r\n\t\twhile(hours >= 24){\r\n\t\t\tthis._date++;\r\n\t\t\tvar mdays = this.getDaysInHebrewMonth(this._month, this._year);\r\n\t\t\tif(this._date > mdays)\r\n\t\t\t{\r\n\t\t\t\tthis._month++;\r\n\t\t\t\tif(!this.isLeapYear(this._year) && this._month==5){ this._month++; }\r\n\t\t\t\tif(this._month >= 13){this._year++; this._month -= 13;}\r\n\t\t\t\tthis._date -= mdays;\r\n\t\t\t}\r\n\t\t\thours -= 24;\r\n\t\t}\r\n\t\tthis._hours = hours;\r\n\t\tthis._setDay();\r\n\t\treturn this;\r\n\t},\r\n\r\n\t_addMinutes: function(/*Number*/minutes){\r\n\t\tminutes += this._minutes;\r\n\t\tthis.setMinutes(minutes);\r\n\t\tthis.setHours(this._hours + parseInt(minutes / 60));\r\n\t\treturn this;\r\n\t},\r\n\r\n\t_addSeconds: function(/*Number*/seconds){\r\n\t\tseconds += this._seconds;\r\n\t\tthis.setSeconds(seconds);\r\n\t\tthis._addMinutes(parseInt(seconds / 60));\r\n\t\treturn this;\r\n\t},\r\n\r\n\t_addMilliseconds: function(/*Number*/milliseconds){\r\n\t\tmilliseconds += this._milliseconds;\r\n\t\tthis.setMilliseconds(milliseconds);\r\n\t\tthis._addSeconds(parseInt(milliseconds / 1000));\r\n\t\treturn this;\r\n\t},\r\n\r\n\tsetMinutes: function(/*Number*/minutes){\r\n\t\t// summary:\r\n\t\t//\t\tsets the minutes (0-59) only.\r\n\t\tthis._minutes = minutes % 60;\r\n\t\treturn this;\r\n\t},\r\n\r\n\tsetSeconds: function(/*Number*/seconds){\r\n\t\t// summary:\r\n\t\t//\t\tsets the seconds (0-59) only.\r\n\t\tthis._seconds = seconds % 60;\r\n\t\treturn this;\r\n\t},\r\n\r\n\tsetMilliseconds: function(/*Number*/milliseconds){\r\n\t\tthis._milliseconds = milliseconds % 1000;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t_setDay: function(){\r\n\t\tvar day = this._startOfYear(this._year);\r\n\t\tif(this._month != 0){\r\n\t\t\tday += (this.isLeapYear(this._year) ? this._LEAP_MONTH_START : this._MONTH_START)[this._month || 0][this._yearType(this._year)];\r\n\t\t}\r\n\t\tday += this._date - 1;\r\n\t\tthis._day = (day+1) % 7;\r\n\t},\r\n\r\n\ttoString: function(){\r\n\t\t// summary:\r\n\t\t//\t\treturns a string representation of the date in \"dd, MM, yyyy HH:mm:ss\" format\r\n\t\t// description:\r\n\t\t//\t\treturns a string representation of the date in \"dd, MM, yyyy HH:mm:ss\" format (all numeric)\r\n\t\t//\t\tFor user presentation, use dojox.date.hebrew.locale.format which will present in the appropriate language\r\n\t\t//\t\tand format.  toString() language- and culturally-specific conventions to keep this module free of\r\n\t\t//\t\tdependencies on dojox.date.locale and dojo.cldr.\r\n\t\t// example:\r\n\t\t//\t|\tvar date1 = new dojox.date.hebrew.Date(5769, 6, 1);\r\n\t\t//\t|\tconsole.log(date1.toString());\r\n\t\t//\t|\t>>> \"1, 6, 5769 0:0:0\"\r\n\t\treturn isNaN(this._date)?\"Invalid Date\":\r\n\t\t\tthis._date + \", \" + this._month + \", \" + this._year + \"  \" + this._hours + \":\" + this._minutes + \":\" + this._seconds; // String\r\n\t},\r\n\r\n\t// ported from the Java class com.ibm.icu.util.HebrewCalendar from ICU4J v3.6.1 at http://www.icu-project.org/\r\n\tgetDaysInHebrewMonth: function(/*Number*/month, /*Number*/ year){\r\n\t\t// summary:\r\n\t\t//\t\treturns the number of days in the given month and year\r\n\r\n\t\t// Aside from the leap month, these two months can vary: 1=HESHVAN, 2=KISLEV\r\n\t\t// The rest are a fixed length\r\n\t\tvar yearType = (month == 1 || month == 2) ? this._yearType(year) : 0;\r\n\t\treturn (!this.isLeapYear(this._year) && month == 5) ? 0 : this._MONTH_LENGTH[month][yearType];\r\n\t},\r\n\r\n\t// ported from the Java class com.ibm.icu.util.HebrewCalendar from ICU4J v3.6.1 at http://www.icu-project.org/\r\n\t_yearType: function(/*Number*/year){\r\n\t\tvar yearLength = this._handleGetYearLength(Number(year));\r\n\t\tif(yearLength > 380){\r\n\t\t\tyearLength -= 30;        // Subtract length of leap month.\r\n\t\t}\r\n\r\n\t\tvar yearType = yearLength - 353;\r\n\t\tif (yearType < 0 || yearType > 2){\r\n\t\t\tthrow new Error(\"Illegal year length \" + yearLength + \" in year \" + year);\r\n\t\t}\r\n\t\treturn yearType;\r\n\t},\r\n\r\n\t// ported from the Java class com.ibm.icu.util.HebrewCalendar from ICU4J v3.6.1 at http://www.icu-project.org/\r\n\t_handleGetYearLength: function(/*number*/eyear){\r\n\t\treturn this._startOfYear(eyear+1) - this._startOfYear(eyear);\r\n\t},\r\n\r\n\t// ported from the Java class com.ibm.icu.util.HebrewCalendar from ICU4J v3.6.1 at http://www.icu-project.org/\r\n\t_startOfYear: function(/*number*/year){\r\n\t\tvar months = Math.floor((235 * year - 234) / 19),\t// # of months before year\r\n\t\t\tfrac = months * (12*1080 + 793) + 11*1080 + 204/*BAHARAD*/,\t// Fractional part of day #\r\n\t\t\tday  = months * 29 + Math.floor(frac / (24*1080));\t// Whole # part of calculation\r\n\t\tfrac %= 24*1080;\t// Time of day\r\n\r\n\t\tvar wd = day % 7;\t// Day of week (0 == Monday)\r\n\r\n\t\tif(wd == 2 || wd == 4 || wd == 6){\r\n\t\t\t// If the 1st is on Sun, Wed, or Fri, postpone to the next day\r\n\t\t\tday += 1;\r\n\t\t\twd = day % 7;\r\n\t\t}\r\n\t\tif(wd == 1 && frac > 15 * 1080 + 204 && !this.isLeapYear(year)){\r\n\t\t\t// If the new moon falls after 3:11:20am (15h204p from the previous noon)\r\n\t\t\t// on a Tuesday and it is not a leap year, postpone by 2 days.\r\n\t\t\t// This prevents 356-day years.\r\n\t\t\tday += 2;\r\n\t\t}else if(wd == 0 && frac > 21 * 1080 + 589 && this.isLeapYear(year-1)){\r\n\t\t\t// If the new moon falls after 9:32:43 1/3am (21h589p from yesterday noon)\r\n\t\t\t// on a Monday and *last* year was a leap year, postpone by 1 day.\r\n\t\t\t// Prevents 382-day years.\r\n\t\t\tday += 1;\r\n\t\t}\r\n\r\n\t\treturn day;\r\n\t},\r\n\r\n\t// ported from the Java class com.ibm.icu.util.HebrewCalendar from ICU4J v3.6.1 at http://www.icu-project.org/\r\n\tisLeapYear: function(/*Number*/year){\r\n\t\t// summary:\r\n\t\t//\t\tDetermines if the year (argument) is a leap year\r\n\t\t// description:\r\n\t\t//\t\tThe Leap year contains additional month adar sheni\r\n\r\n\t\t//return (year * 12 + 17) % 19 >= 12;\r\n\t\tvar x = (year*12 + 17) % 19;\r\n\t\treturn x >= ((x < 0) ? -7 : 12);\r\n\t},\r\n\r\n\t\r\n\tfromGregorian: function(/*Date*/gdate){\r\n\t\t// summary:\r\n\t\t//\t\tThis function sets this Date to the Hebrew Date corresponding to the Gregorian Date\r\n\t\t// example:\r\n\t\t//\t|\tvar dateHebrew = new dojox.date.hebrew.Date();\r\n\t\t//\t|\tvar dateGregorian = new Date(2008,10,12);\r\n\t\t//\t|\tdateHebrew.fromGregorian(dateGregorian);\r\n\r\n\t\tvar result = (!isNaN(gdate)) ? this._computeHebrewFields(gdate) : NaN;\r\n\t\tthis._year = (!isNaN(gdate)) ? result[0] : NaN;\r\n\t\tthis._month = (!isNaN(gdate))? result[1] : NaN;\r\n\t\tthis._date = (!isNaN(gdate)) ? result[2] : NaN;\r\n\t\tthis._hours = gdate.getHours();\r\n\t\tthis._milliseconds = gdate.getMilliseconds();\r\n\t\tthis._minutes = gdate.getMinutes();\r\n\t\tthis._seconds = gdate.getSeconds();\r\n\t\tif (!isNaN(gdate)) this._setDay();\r\n\t\treturn this;\r\n\t},\r\n\r\n\t// ported from the Java class com.ibm.icu.util.HebrewCalendar.handleComputeFields from ICU4J v3.6.1 at http://www.icu-project.org/\r\n\t_computeHebrewFields: function(/*Date*/gdate){\r\n\t\tvar julianDay = this._getJulianDayFromGregorianDate(gdate),\r\n\t\t\td = julianDay - 347997,\r\n\t\t\tm = Math.floor((d * 24*1080) / (29*24*1080 + 12*1080 + 793)),       // Months (approx)\r\n\t\t\tyear = Math.floor((19 * m + 234) / 235) + 1,  // Years (approx)\r\n\t\t\tys  = this._startOfYear(year),                 // 1st day of year\r\n\t\t\tdayOfYear = (d - ys);\r\n\t\t// Because of the postponement rules, it's possible to guess wrong.  Fix it.\r\n\t\twhile(dayOfYear < 1){\r\n\t\t\tyear--;\r\n\t\t\tys  = this._startOfYear(year);\r\n\t\t\tdayOfYear = d - ys;\r\n\t\t}\r\n\r\n\t\t// Now figure out which month we're in, and the date within that month\r\n\r\n\t\tvar typeofYear = this._yearType(year),\r\n\t\t\tmonthStart = this.isLeapYear(year) ? this._LEAP_MONTH_START : this._MONTH_START,\r\n\t\t\tmonth = 0;\r\n\r\n\t\twhile(dayOfYear > monthStart[month][typeofYear]){\r\n\t\t\tmonth++;\r\n\t\t}\r\n\t\tmonth--;\r\n\t\tvar dayOfMonth = dayOfYear - monthStart[month][typeofYear];\r\n\t\treturn [year, month, dayOfMonth];\r\n\t},\r\n\r\n\t// ported from the Java class com.ibm.icu.util.Calendar.computeGregorianFields from ICU4J v3.6.1 at http://www.icu-project.org/\r\n\ttoGregorian: function(){\r\n\t\t// summary:\r\n\t\t//\t\treturns the equivalent Gregorian date value as a native Date object\r\n\t\t// example:\r\n\t\t//\t|\tvar dateHebrew = new dojox.date.hebrew.Date(5768,11,20);\r\n\t\t//\t|\tvar dateGregorian = dateHebrew.toGregorian();\r\n\t\t\r\n\t\tvar hYear = this._year || 0,\r\n\t\t\thMonth = this._month || 0,\r\n\t\t\thDate = this._date || 0,\r\n\t\t\tday = this._startOfYear(hYear);\r\n\r\n\t\tif(hMonth != 0){\r\n\t\t\tday += (this.isLeapYear(hYear) ? this._LEAP_MONTH_START : this._MONTH_START)[hMonth][this._yearType(hYear)];\r\n\t\t}\r\n\r\n\t\tvar julianDay =  (hDate + day + 347997),\r\n\t\t// The Gregorian epoch day is zero for Monday January 1, year 1.\r\n\t\t\tgregorianEpochDay = julianDay - 1721426;\r\n\r\n\t\t// Here we convert from the day number to the multiple radix\r\n\t\t// representation.  We use 400-year, 100-year, and 4-year cycles.\r\n\t\t// For example, the 4-year cycle has 4 years + 1 leap day; giving\r\n\t\t// 1461 == 365*4 + 1 days.\r\n\t\tvar rem = [];\r\n\t\tvar n400 = this._floorDivide(gregorianEpochDay , 146097, rem), // 400-year cycle length\r\n\t\t\tn100 = this._floorDivide(rem[0] , 36524, rem), // 100-year cycle length\r\n\t\t\tn4 = this._floorDivide(rem[0] , 1461, rem), // 4-year cycle length\r\n\t\t\tn1 = this._floorDivide(rem[0] , 365, rem),\r\n\t\t\tyear = 400*n400 + 100*n100 + 4*n4 + n1,\r\n\t\t\tdayOfYear = rem[0]; // zero-based day of year\r\n\r\n\t\tif(n100 == 4 || n1 == 4){\r\n\t\t\tdayOfYear = 365; // Dec 31 at end of 4- or 400-yr cycle\r\n\t\t}else{\r\n\t\t\t++year;\r\n\t\t}\r\n\r\n\t\tvar isLeap = !(year%4) && // equiv. to (year%4 == 0)\r\n\t\t\t\t(year%100 || !(year%400)),\r\n\t\t\tcorrection = 0,\r\n\t\t\tmarch1 = isLeap ? 60 : 59; // zero-based DOY for March 1\r\n\t\tif(dayOfYear >= march1){ correction = isLeap ? 1 : 2; }\r\n\t\tvar month = Math.floor((12 * (dayOfYear + correction) + 6) / 367); // zero-based month\r\n\t\tvar dayOfMonth = dayOfYear -\r\n\t\t\t\tthis._GREGORIAN_MONTH_COUNT[month][isLeap ? 3 : 2] + 1; // one-based DOM\r\n\r\n\t\treturn new Date(year, month, dayOfMonth, this._hours, this._minutes, this._seconds, this._milliseconds); // Date\r\n\t},\r\n\t_floorDivide: function(numerator, denominator, remainder){\r\n\t\tif(numerator >= 0){\r\n\t\t\tremainder[0] = (numerator % denominator);\r\n\t\t\treturn Math.floor(numerator / denominator);\r\n\t\t}\r\n\t\tvar quotient = Math.floor(numerator / denominator);\r\n\t\tremainder[0] = numerator - (quotient * denominator);\r\n\t\treturn quotient;\r\n\t},\r\n\r\n\tgetDay: function(){\r\n\t\t// summary:\r\n\t\t//\t\treturns weekday value (0 - 6)\r\n\t\t// example:\r\n\t\t//\t|\tvar date1 = new dojox.date.hebrew.Date();\r\n\t\t//\t|\tconsole.log(date1.getDay());\r\n\r\n\t\tvar hYear = this._year,\r\n\t\t\thMonth = this._month,\r\n\t\t\thDate = this._date,\r\n\t\t\tday = this._startOfYear(hYear);\r\n\r\n\t\tif(hMonth != 0){\r\n\t\t\tday += (this.isLeapYear(hYear) ? this._LEAP_MONTH_START : this._MONTH_START)[hMonth][this._yearType(hYear)];\r\n\t\t}\r\n\r\n\t\tday += hDate - 1;\r\n\t\treturn (day+1) % 7;\r\n\t},\r\n\r\n\t// ported from the Java class com.ibm.icu.util.Calendar.computeGregorianMonthStart from ICU4J v3.6.1 at http://www.icu-project.org/\r\n\t_getJulianDayFromGregorianDate: function(gdate){\r\n\t\t// summary:\r\n\t\t//\t\treturns the Julian day of a Gregorian date\r\n\r\n\t\tvar year = gdate.getFullYear(),\r\n\t\t\tmonth = gdate.getMonth(),\r\n\t\t\td = gdate.getDate(),\r\n\t\t\tisLeap = !(year%4) && (year%100 || !(year%400)), //TODO: dup\r\n\t\t\ty = year - 1;\r\n\t\t// This computation is actually ... + (_JAN_1_1_JULIAN_DAY - 3) + 2.\r\n\t\t// Add 2 because Gregorian calendar starts 2 days after Julian\r\n\t\t// calendar.\r\n\t\tvar julianDay = 365*y + Math.floor(y/4) - Math.floor(y/100) +\r\n\t\t\tMath.floor(y/400) + 1721426 - 1;\r\n\t\t// At this point julianDay indicates the day BEFORE the first day\r\n\t\t// of January 1, <eyear> of the Gregorian calendar.\r\n\t\tif(month > 0) {\r\n\t\t\tjulianDay += this._GREGORIAN_MONTH_COUNT[month][isLeap ? 3 : 2];\r\n\t\t}\r\n\t\t\r\n\t\tjulianDay += d;\r\n\t\treturn julianDay;\r\n\t}\r\n});\r\n\r\nHDate.prototype.valueOf = function(){\r\n\treturn this.toGregorian().valueOf();\r\n};\r\nreturn HDate;\r\n});\r\n"]}