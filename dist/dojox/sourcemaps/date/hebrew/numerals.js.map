{"version":3,"sources":["date/hebrew/numerals.js"],"names":["define","dojox","lang","arr","hnumerals","getObject","transformChars","str","nogrsh","replace","len","length","substr","charAt","parseStrToNumber","num","forEach","ch","i","indexOf","convertNumberToStr","n","j","getYearHebrewLetters","year","parseYearHebrewLetters","getDayHebrewLetters","day","parseDayHebrewLetters","getMonthHebrewLetters","month","parseMonthHebrewLetters","monthStr","monnum","Error"],"mappings":";;;;;;;AAAAA,QAAQ,QAAS,kBAAmB,oBAAqB,SAASC,EAAOC,EAAMC,GAC9E,IAAIC,EAAYF,EAAKG,UAAU,wBAAwB,EAAMJ,GAQzDK,EAAiB,SAASC,EAAKC,GAGlC,GAFAD,EAAMA,EAAIE,QAAQ,KAAM,MAAMA,QAAQ,KAAM,OAExCD,EAAO,CACV,IAAIE,EAAMH,EAAII,OACXD,EAAM,EACRH,EAAMA,EAAIK,OAAO,EAAGF,EAAM,GAAK,IAAMH,EAAIM,OAAOH,EAAM,GAEtDH,GAAO,IAGT,OAAOA,GAGJO,EAAmB,SAASP,GAC/B,IAAIQ,EAAM,EAWV,OAVAZ,EAAIa,QAAQT,EAAK,SAASU,GACzB,IAAIC,GACyB,IAAzBA,EAtBE,YAsBMC,QAAQF,IACnBF,KAASG,GACyB,IAAzBA,EAvBJ,YAuBYC,QAAQF,IACzBF,GAAO,KAAOG,GACoB,IAAzBA,EAxBJ,OAwBYC,QAAQF,MACzBF,GAAO,MAAQG,KAGVH,GAGJK,EAAqB,SAASL,GAE/B,IADF,IAAIR,EAAO,GAAIc,EAAI,EAAGC,EAAI,EAClBP,GACP,GAAGA,GAAS,IAAFM,EACTd,GAnCK,OAmCMM,OAAOQ,EAAE,GACpBN,GAAS,IAAFM,OAEF,GAAGA,EAAI,EACZA,SAEK,GAAGN,GAAS,GAAFO,EACff,GA3CK,YA2CMM,OAAOS,EAAE,GACpBP,GAAS,GAAFO,MACF,CAAA,GAAGA,EAAI,EAAE,CACdA,IACA,SACQP,EAAM,IACdR,GAlDK,YAkDMM,OAAOE,EAAI,GACtBA,EAAM,GAGR,OAAOR,GA2ER,OAxEAH,EAAUmB,qBAAuB,SAAqBC,GAUrD,OAAOlB,EAAec,EAHZI,EAAO,OAMlBpB,EAAUqB,uBAA0B,SAAgCD,GAOnE,OAAOV,EAAiBU,GAAQ,KAGjCpB,EAAUsB,oBAAuB,SAASC,EAAkBnB,GAQ3D,OAAOF,EAAec,EAAmBO,GAAMnB,IAGhDJ,EAAUwB,sBAAyB,SAA2BD,GAM7D,OAAOb,EAAiBa,IAGzBvB,EAAUyB,sBAAyB,SAAgBC,GAOlD,OAAOxB,EAAec,EAAmBU,EAAM,KAGhD1B,EAAU2B,wBAA0B,SAAmBC,GAYtD,IAAIC,EAAS7B,EAAUwB,sBAAsBI,GAAY,EAEzD,IAAc,GAAXC,GAAgBA,EAAS,GAC3B,MAAM,IAAIC,MAAM,yCAA2CD,GAE5D,OAAOA,GAED7B","file":"../../../date/hebrew/numerals.js","sourcesContent":["define([\"../..\", \"dojo/_base/lang\", \"dojo/_base/array\"], function(dojox, lang, arr){\r\n\tvar hnumerals = lang.getObject(\"date.hebrew.numerals\", true, dojox);\r\n\r\n\t//Conversion from \"Hindi\" numerals to Hebrew numerals and vice versa\r\n\r\n\tvar DIG=\"אבגדהוזחט\";\r\n\tvar\tTEN=\"יכלמנסעפצ\";\r\n\tvar\tHUN=\"קרשת\";\r\n\r\n\tvar transformChars = function(str, nogrsh){\r\n\t\tstr = str.replace(\"יה\", \"טו\").replace(\"יו\", \"טז\");\r\n\r\n\t\tif(!nogrsh){\r\n\t\t\tvar len = str.length;\r\n\t\t\tif(len > 1){\r\n\t\t\t\tstr = str.substr(0, len - 1) + '\"' + str.charAt(len - 1);\r\n\t\t\t}else{\r\n\t\t\t\tstr += \"\\u05F3\"; // 05F3:geresh\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn str; // String\r\n\t};\r\n\t \r\n\tvar parseStrToNumber = function(str){\r\n\t\tvar num = 0;\r\n\t\tarr.forEach(str, function(ch){\r\n\t\t\tvar i;\r\n\t\t\tif((i = DIG.indexOf(ch)) != -1){\r\n\t\t\t\tnum += ++i;\r\n\t\t\t}else if((i = TEN.indexOf(ch)) != -1){\r\n\t\t\t\tnum += 10 * ++i;\r\n\t\t\t}else if((i = HUN.indexOf(ch)) != -1){\r\n\t\t\t\tnum += 100 * ++i;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn num; //Number\r\n\t};\r\n\t \r\n\tvar convertNumberToStr = function(num){\r\n\t\tvar str  = \"\", n = 4, j = 9;\r\n  \t\twhile(num){\r\n\t\t\tif(num >= n*100){\r\n\t\t\t\tstr += HUN.charAt(n-1);\r\n\t\t\t\tnum -= n*100;\r\n\t\t\t\tcontinue;\r\n\t\t\t}else if(n > 1){\r\n\t\t\t\tn--;\r\n\t\t\t\tcontinue;\r\n\t\t\t}else if(num >= j*10){\r\n\t\t\t\tstr += TEN.charAt(j-1);\r\n\t\t\t\tnum -= j*10;\r\n\t\t\t}else if(j > 1){\r\n\t\t\t\tj--;\r\n\t\t\t\tcontinue;\r\n\t\t\t}else if(num > 0){\r\n\t\t\t\tstr += DIG.charAt(num-1);\r\n\t\t\t\tnum = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn str; //String\r\n\t};\r\n\r\n\thnumerals.getYearHebrewLetters = function(/*Number */ year){\r\n\t\t// summary:\r\n\t\t//\t\tconverts the year from an integer to Hebrew numerals.\r\n\t\t// example:\r\n\t\t//\t|\tvar date1 = new dojox.date.hebrew.Date();\r\n\t\t//\t|\tdocument.writeln(dojox.date.hebrew.numerals.getYearHebrewLetters(date1.getFullYear());\r\n\t\t\r\n\t\tvar rem = year % 1000;\r\n\t\t//FIXME: tests include dates outside this range and seem to pass.\r\n\t\t//\t    \tif((year - rem) / 1000 != 5){ throw new Error(\"Hebrew year \"+year+\" is not in range 5001-5999\");}\r\n\t\treturn transformChars(convertNumberToStr(rem)); // String\r\n\t};\r\n\t\r\n\thnumerals.parseYearHebrewLetters  = function(/*String hebrew year*/ year){\r\n\t\t// summary:\r\n\t\t//\t\tconverts the year written in Hebrew numerals to an integer\r\n\t\t// example:\r\n\t\t//\t|\tvar date = new dojox.date.hebrew.Date();\r\n\t\t//\t|\t        \tdate.setFullYear(dojox.date.hebrew.numerals.parseYearHebrewLetters('\\u05ea\\u05e9\\u05e1\\u05f4\\u05d7'));\r\n\r\n\t\treturn parseStrToNumber(year) + 5000; // int\r\n\t};\r\n\t\r\n\thnumerals.getDayHebrewLetters =  function(day, /*boolean?*/ nogrsh){\r\n\t\t// summary:\r\n\t\t//\t\t converts an integer to a String representing the number in Hebrew numerals.\r\n\t\t//\t\tCan be formatted with or without geresh &#x05f3;\r\n\t\t// example:\r\n\t\t//\t|\tvar date1 = new dojox.date.hebrew.Date();\r\n\t\t//\t|\tdocument.writeln(dojox.date.hebrew.numerals.getDayHebrewLetters(date1.getDay());\r\n\r\n\t\treturn transformChars(convertNumberToStr(day), nogrsh); // String\r\n\t};\r\n\t\r\n\thnumerals.parseDayHebrewLetters =  function(/*String hebrew*/ day){\r\n\t\t// summary:\r\n\t\t//\t\tconverts the string containing a Hebrew numeral to an integer\r\n\t\t// example:\r\n\t\t//\t|\tvar date1 = new dojox.date.hebrew.Date();\r\n\t\t//\t|\tdate1.setDate(dojox.date.hebrew.numerals.parseDayHebrewLetters('\\u05d0')); // ALEPH\r\n\t\treturn parseStrToNumber(day); // int\r\n\t};\r\n\r\n\thnumerals.getMonthHebrewLetters =  function(/*int*/month){\r\n\t\t// summary:\r\n\t\t//\t\tconverts an integer representing a  month to a String written in Hebrew numerals\r\n\t\t// example:\r\n\t\t//\t|\tvar date1 = new dojox.date.hebrew.Date();\r\n\t\t//\t|\tdocument.writeln(dojox.date.hebrew.numerals.getMonthHebrewLetters(date1.getMonth());\r\n\r\n\t\treturn transformChars(convertNumberToStr(month+1)); // String\r\n\t};\r\n\r\n\thnumerals.parseMonthHebrewLetters = function(/*String*/monthStr){\r\n\t\t// summary:\r\n\t\t//\t\tconverts a Hebrew numeral string representing\r\n\t\t//\t\ta month to an integer.  The returned value\r\n\t\t//\t\tis indexed in the month name array.  To use it for\r\n\t\t//\t\tsetMonth, do correction for leap year\r\n\t\t// example:\r\n\t\t//\t|\tvar date = new dojox.date.hebrew.Date();\r\n\t\t//\t|\t            var number = dojox.date.hebrew.numerals.parseMonthHebrewLetters(\"\\u05ea\\u05de\\u05d5\\u05d6\"); // Tammuz\r\n\t\t//\t|\tdate.setMonth(number);\r\n\t\t\t\r\n\t\t//month number from 0 to 12\r\n\t\tvar monnum = hnumerals.parseDayHebrewLetters(monthStr) - 1;\r\n\r\n\t\tif(monnum == -1 || monnum > 12){\r\n\t\t\tthrow new Error(\"The month name is incorrect , month = \" + monnum);\r\n\t\t}\r\n\t\treturn monnum;\r\n\t};\r\n\treturn hnumerals;\r\n});\r\n"]}