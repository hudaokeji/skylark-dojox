{"version":3,"sources":["sketch/UndoStack.js"],"names":["define","dojo","getObject","dojox","ta","sketch","CommandTypes","Create","Move","Modify","Delete","Convert","declare","constructor","figure","this","_steps","_undoedSteps","apply","state","from","to","fullText","fromText","shapeText","toText","length","nann","getAnnotator","shapeId","no","xml","DomParser","parse","documentElement","draw","select","ann","_delete","o","a","_loadAnnotation","_add","setValue","add","cmd","before","id","after","serialize","cmdname","push","destroy","undo","pop","redo","UndoStack"],"mappings":";;;;;;;AAAAA,QACC,oBACA,kBACA,qBACA,oBACE,SAASC,GACXA,EAAKC,UAAU,UAAU,EAAMC,OAC/B,IAAIC,EAAGD,MAAME,OAgGb,OA/FAD,EAAGE,cAAeC,OAAO,SAAUC,KAAK,OAAQC,OAAO,SAAUC,OAAO,SAAUC,QAAQ,WAE1FV,EAAKW,QAAQ,yBAAyB,MACrCC,YAAa,SAASC,GACrBC,KAAKD,OAAOA,EACZC,KAAKC,UACLD,KAAKE,iBAENC,MAAO,SAASC,EAAOC,EAAMC,GAM5B,GAAID,GAASC,IAAMF,EAAMG,SAAzB,CAKA,IAAIC,EAASH,EAAKI,UACdC,EAAOJ,EAAGG,UAEd,GAAoB,GAAjBD,EAASG,QAA0B,GAAfD,EAAOC,OAI9B,GAAoB,GAAjBH,EAASG,OAOZ,GAAkB,GAAfD,EAAOC,OAAV,CASA,IAAIC,EAAKZ,KAAKD,OAAOc,aAAaP,EAAGQ,SACjCC,EAAG3B,MAAM4B,IAAIC,UAAUC,MAAMR,GAAQS,gBACzCP,EAAKQ,KAAKL,GACVf,KAAKD,OAAOsB,OAAOT,OAZnB,CAEC,IAAIU,EAAItB,KAAKD,OAAOc,aAAaR,EAAKS,SACtCd,KAAKD,OAAOwB,SAASD,IAAK,OAV3B,CAEC,IAAIE,EAAEpC,MAAM4B,IAAIC,UAAUC,MAAMR,GAAQS,gBACpCM,EAAEzB,KAAKD,OAAO2B,gBAAgBF,GAC/BC,GAAGzB,KAAKD,OAAO4B,KAAKF,SAfvBzB,KAAKD,OAAO6B,SAASxB,EAAMG,WAkC7BsB,IAAK,SAAmBC,EAAuBR,EAAgBS,GAC9D,IAAIC,EAAGV,EAAIA,EAAIU,GAAG,GAEdC,EAAMX,EAAIA,EAAIY,YAAY,GAC3BJ,GAAKzC,EAAGE,aAAaI,SAASsC,EAAM,IAQvC,IAAI7B,GACH+B,QAAQL,EAGRC,QACCjB,QAASkB,EACTvB,UAAUsB,GAAQ,IAEnBE,OACCnB,QAASkB,EACTvB,UAAUwB,IAIZjC,KAAKC,OAAOmC,KAAKhC,GACjBJ,KAAKE,iBAENmC,QAAS,aACTC,KAAM,WACL,IAAIlC,EAAMJ,KAAKC,OAAOsC,MACnBnC,IACFJ,KAAKE,aAAakC,KAAKhC,GACvBJ,KAAKG,MAAMC,EAAMA,EAAM6B,MAAM7B,EAAM2B,UAGrCS,KAAM,WACL,IAAIpC,EAAMJ,KAAKE,aAAaqC,MACzBnC,IACFJ,KAAKC,OAAOmC,KAAKhC,GACjBJ,KAAKG,MAAMC,EAAMA,EAAM2B,OAAO3B,EAAM6B,WAKhC7C,MAAME,OAAOmD","file":"../../sketch/UndoStack.js","sourcesContent":["define([\r\n\t\"dojo/_base/kernel\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/declare\",\r\n\t\"../xml/DomParser\"\r\n], function(dojo){\r\n\tdojo.getObject(\"sketch\", true, dojox);\r\n\tvar ta=dojox.sketch;\r\n\tta.CommandTypes={ Create:\"Create\", Move:\"Move\", Modify:\"Modify\", Delete:\"Delete\", Convert:\"Convert\"};\r\n\r\n\tdojo.declare(\"dojox.sketch.UndoStack\",null,{\r\n\t\tconstructor: function(figure){\r\n\t\t\tthis.figure=figure;\r\n\t\t\tthis._steps=[];\r\n\t\t\tthis._undoedSteps=[];\r\n\t\t},\r\n\t\tapply: function(state, from, to){\r\n\t\t\t//\tthe key here is to neutrally move from one state to another.\r\n\t\t\t//\twe let the individual functions (i.e. undo and redo) actually\r\n\t\t\t//\tdetermine the from and to; all we do here is implement it.\r\n\r\n\t\t\t//\tcheck whether this is a fullText step\r\n\t\t\tif(!from && !to && state.fullText){\r\n\t\t\t\tthis.figure.setValue(state.fullText);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar fromText=from.shapeText;\r\n\t\t\tvar toText=to.shapeText;\r\n\t\t\t\r\n\t\t\tif(fromText.length==0&&toText.length==0){\r\n\t\t\t\t//\tnothing to reapply?\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(fromText.length==0){\r\n\t\t\t\t//\tWe are creating.\r\n\t\t\t\tvar o=dojox.xml.DomParser.parse(toText).documentElement;\r\n\t\t\t\tvar a=this.figure._loadAnnotation(o);\r\n\t\t\t\tif(a) this.figure._add(a);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(toText.length==0){\r\n\t\t\t\t//\twe are deleting.\r\n\t\t\t\tvar ann=this.figure.getAnnotator(from.shapeId);\r\n\t\t\t\tthis.figure._delete([ann],true);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//\twe can simply reinit and draw from the shape itself,\r\n\t\t\t//\t\tregardless of the actual command.\r\n\t\t\tvar nann=this.figure.getAnnotator(to.shapeId);\r\n\t\t\tvar no=dojox.xml.DomParser.parse(toText).documentElement;\r\n\t\t\tnann.draw(no);\r\n\t\t\tthis.figure.select(nann);\r\n\t\t\treturn;\r\n\t\t},\r\n\t\t//\tstack methods.\r\n\t\tadd: function(/*String*/cmd, /*ta.Annotation?*/ann, /*String?*/before){\r\n\t\t\tvar id=ann?ann.id:'';\r\n\t\t\t//var bbox=ann?ann.getBBox():{};\r\n\t\t\tvar after=ann?ann.serialize():\"\";\r\n\t\t\tif(cmd==ta.CommandTypes.Delete){ after=\"\"; }\r\n\t\t\t\r\n\t\t\t/*if(ann){\r\n\t\t\t\t//\tfix the bbox x/y coords\r\n\t\t\t\tvar t=ann.transform;\r\n\t\t\t\tbbox.x+=t.dx;\r\n\t\t\t\tbbox.y+=t.dy;\r\n\t\t\t}*/\r\n\t\t\tvar state={\r\n\t\t\t\tcmdname:cmd,\r\n\t\t\t\t//bbox:bbox,\r\n//\t\t\t\t\tfullText:fullText,\r\n\t\t\t\tbefore:{\r\n\t\t\t\t\tshapeId: id,\r\n\t\t\t\t\tshapeText:before||''\r\n\t\t\t\t},\r\n\t\t\t\tafter:{\r\n\t\t\t\t\tshapeId: id,\r\n\t\t\t\t\tshapeText:after\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t//console.log('dojox.sketch history add',state);\r\n\t\t\tthis._steps.push(state);\r\n\t\t\tthis._undoedSteps = [];\r\n\t\t},\r\n\t\tdestroy: function(){},\r\n\t\tundo: function(){\r\n\t\t\tvar state=this._steps.pop();\r\n\t\t\tif(state){\r\n\t\t\t\tthis._undoedSteps.push(state);\r\n\t\t\t\tthis.apply(state,state.after,state.before);\r\n\t\t\t}\r\n\t\t},\r\n\t\tredo: function(){\r\n\t\t\tvar state=this._undoedSteps.pop();\r\n\t\t\tif(state){\r\n\t\t\t\tthis._steps.push(state);\r\n\t\t\t\tthis.apply(state,state.before,state.after);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn dojox.sketch.UndoStack;\r\n});\r\n"]}