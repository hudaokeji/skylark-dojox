{"version":3,"sources":["dtl/_DomTemplated.js"],"names":["define","domConstruct","dtl","ddcd","ddrd","cache","TemplatedMixin","_DomTemplated","prototype","_dijitTemplateCompat","buildRendering","this","domNode","srcNodeRef","dojo","create","_render","old","widgetsInTemplate","template","_getCachedTemplate","templatePath","templateString","Render","context","_getContext","_created","_getter","render","getRootNode","parentNode","destroy","setTemplate","dojox","text","_isTemplate","tpl","Context","setThis","_templates","sanitize","key","tmplts","DomTemplate","getCachedTemplate"],"mappings":";;;;;;;AAAAA,QACC,qBACA,IACA,kBACA,eACA,aACA,yBACG,SAASC,EAAaC,EAAIC,EAAKC,EAAKC,EAAMC,GAyF7C,OAvFAJ,EAAIK,cAAgB,aAIpBL,EAAIK,cAAcC,WACjBC,sBAAsB,EACtBC,eAAgB,WAOf,GAFAC,KAAKC,QAAUD,KAAKE,YAAcC,KAAKC,OAAO,QAE1CJ,KAAKK,QAAQ,CAChB,IAAIC,EAAMd,EAAKe,kBACff,EAAKe,kBAAoBP,KAAKO,kBAC9BP,KAAKQ,SAAWR,KAAKQ,WAA8B,IAAlBR,KAAKQ,SAAoBR,KAAKQ,SAAWR,KAAKS,mBAAmBT,KAAKU,aAAcV,KAAKW,gBAC1HX,KAAKK,QAAU,IAAIZ,EAAKmB,OAAOZ,KAAKC,QAASD,KAAKQ,UAClDhB,EAAKe,kBAAoBD,EAG1B,IAAIO,EAAUb,KAAKc,cACfd,KAAKe,iBACDF,EAAQG,QAEhBhB,KAAKiB,OAAOJ,GAEZb,KAAKC,QAAUD,KAAKQ,SAASU,cAC1BlB,KAAKE,YAAcF,KAAKE,WAAWiB,aACrC7B,EAAa8B,QAAQpB,KAAKE,mBACnBF,KAAKE,aAGdmB,YAAa,SAA6Bb,EAAiCK,GAOvES,MAAM/B,IAAIgC,KAAKC,YAAYhB,GAC7BR,KAAKQ,SAAWR,KAAKS,mBAAmB,KAAMD,GAE9CR,KAAKQ,SAAWR,KAAKS,mBAAmBD,GAEzCR,KAAKiB,OAAOJ,IAEbI,OAAQ,SAAgCJ,EAAoCY,GAOxEA,IACFzB,KAAKQ,SAAWiB,GAEjBzB,KAAKK,QAAQY,OAAOjB,KAAKc,YAAYD,GAAUb,KAAKQ,WAErDM,YAAa,SAASD,GAMrB,OALKA,aAAmBS,MAAM/B,IAAImC,UACjCb,GAAU,IAEXA,EAAUA,GAAW,IAAIS,MAAM/B,IAAImC,QAAQ1B,OACnC2B,QAAQ3B,MACTa,GAERJ,mBAAoB,SAASC,EAAcC,GACtCX,KAAK4B,aACR5B,KAAK4B,eAEFjB,IACHA,EAAiBjB,EAAMgB,GAAemB,UAAU,KAEjD,IAAIC,EAAMnB,EACNoB,EAAS/B,KAAK4B,WAClB,OAAGG,EAAOD,GACFC,EAAOD,GAEPC,EAAOD,GAAO,IAAIR,MAAM/B,IAAIyC,YACnCrC,EAAesC,kBACdtB,GACA,MAKGpB,EAAIK","file":"../../dtl/_DomTemplated.js","sourcesContent":["define([\r\n\t\"dojo/dom-construct\",\r\n\t\".\",\r\n\t\"./contrib/dijit\",\r\n\t\"./render/dom\",\r\n\t\"dojo/cache\",\r\n\t\"dijit/_TemplatedMixin\"\r\n\t], function(domConstruct,dtl,ddcd,ddrd,cache,TemplatedMixin){\r\n\r\n\tdtl._DomTemplated = function(){\r\n\t\t// summary:\r\n\t\t//\t\tThe base class for DOM-based templating.\r\n\t};\r\n\tdtl._DomTemplated.prototype = {\r\n\t\t_dijitTemplateCompat: false,\r\n\t\tbuildRendering: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConstructs the DOM representation.\r\n\t\t\t\r\n\t\t\t//render needs a domNode to work with\r\n\t\t\tthis.domNode = this.srcNodeRef || dojo.create('div');\r\n\r\n\t\t\tif(!this._render){\r\n\t\t\t\tvar old = ddcd.widgetsInTemplate;\r\n\t\t\t\tddcd.widgetsInTemplate = this.widgetsInTemplate;\r\n\t\t\t\tthis.template = this.template && this.template !== true ? this.template : this._getCachedTemplate(this.templatePath, this.templateString);\r\n\t\t\t\tthis._render = new ddrd.Render(this.domNode, this.template);\r\n\t\t\t\tddcd.widgetsInTemplate = old;\r\n\t\t\t}\r\n\r\n\t\t\tvar context = this._getContext();\r\n\t\t\tif(!this._created){\r\n\t\t\t\tdelete context._getter;\r\n\t\t\t}\r\n\t\t\tthis.render(context);\r\n\r\n\t\t\tthis.domNode = this.template.getRootNode();\r\n\t\t\tif(this.srcNodeRef && this.srcNodeRef.parentNode){\r\n\t\t\t\tdomConstruct.destroy(this.srcNodeRef);\r\n\t\t\t\tdelete this.srcNodeRef;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetTemplate: function(/*String|dojo/url*/ template, /*dojox/dtl/Context?*/ context){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tQuickly switch between templated by location\r\n\t\t\t// template:\r\n\t\t\t//\t\tThe new template.\r\n\t\t\t// context:\r\n\t\t\t//\t\tThe runtime context.\r\n\t\t\tif(dojox.dtl.text._isTemplate(template)){\r\n\t\t\t\tthis.template = this._getCachedTemplate(null, template);\r\n\t\t\t}else{\r\n\t\t\t\tthis.template = this._getCachedTemplate(template);\r\n\t\t\t}\r\n\t\t\tthis.render(context);\r\n\t\t},\r\n\t\trender: function(/*dojox/dtl/Context?*/ context, /*dojox/dtl/DomTemplate?*/ tpl){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRenders this template.\r\n\t\t\t// context:\r\n\t\t\t//\t\tThe runtime context.\r\n\t\t\t// tpl:\r\n\t\t\t//\t\tThe template to render. Optional.\r\n\t\t\tif(tpl){\r\n\t\t\t\tthis.template = tpl;\r\n\t\t\t}\r\n\t\t\tthis._render.render(this._getContext(context), this.template);\r\n\t\t},\r\n\t\t_getContext: function(context){\r\n\t\t\tif(!(context instanceof dojox.dtl.Context)){\r\n\t\t\t\tcontext = false;\r\n\t\t\t}\r\n\t\t\tcontext = context || new dojox.dtl.Context(this);\r\n\t\t\tcontext.setThis(this);\r\n\t\t\treturn context;\r\n\t\t},\r\n\t\t_getCachedTemplate: function(templatePath, templateString){\r\n\t\t\tif(!this._templates){\r\n\t\t\t\tthis._templates = {};\r\n\t\t\t}\r\n\t\t\tif(!templateString){\r\n\t\t\t\ttemplateString = cache(templatePath, {sanitize: true});\r\n\t\t\t}\r\n\t\t\tvar key = templateString;\r\n\t\t\tvar tmplts = this._templates;\r\n\t\t\tif(tmplts[key]){\r\n\t\t\t\treturn tmplts[key];\r\n\t\t\t}\r\n\t\t\treturn (tmplts[key] = new dojox.dtl.DomTemplate(\r\n\t\t\t\tTemplatedMixin.getCachedTemplate(\r\n\t\t\t\t\ttemplateString,\r\n\t\t\t\t\ttrue\r\n\t\t\t\t)\r\n\t\t\t));\r\n\t\t}\r\n\t};\r\n\treturn dtl._DomTemplated;\r\n});\r\n\r\n"]}