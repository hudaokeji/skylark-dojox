{"version":3,"sources":["dtl/_Templated.js"],"names":["define","aspect","declare","dd","TemplatedMixin","domConstruct","Cache","Array","dString","Parser","_dijitTemplateCompat","buildRendering","node","this","domNode","_template","t","getCachedTemplate","templatePath","templateString","_skipNodeCache","Template","cloneNode","context","_Context","_created","_getter","nodes","toDom","render","nodeType","i","l","childNodes","length","_attachTemplateNodes","widgetsInTemplate","qry","attr","parser","_query","_attrName","cw","_startupWidgets","parse","noStart","_earlyTemplatedStartup","inherited","dir","lang","_processTemplateNode","n","p","widget","type","callback","after","on","place","destroyDescendants","destroy","_fillContent","srcNodeRef","baseNode","getAttrFunc","attachFunc","arguments","_templateCache","alwaysUseString","tmplts","key","trim","sanitize","match","_stringRepl","startup","forEach","w","_started"],"mappings":";;;;;;;AAAAA,QACC,cACA,qBACA,UACA,wBACA,qBACA,aACA,mBACA,cACA,eACE,SAASC,EAAOC,EAAQC,EAAGC,EAAgBC,EAAaC,EAAMC,EAAMC,EAAQC,GAE9E,OAAOP,EAAQ,uBAAwBE,GAItCM,sBAAsB,EAEtBC,eAAgB,WACf,IAAIC,EAEJ,IAAGC,KAAKC,SAAYD,KAAKE,UAAzB,CAIA,IAAIF,KAAKE,UAAU,CAClB,IAAIC,EAAIH,KAAKI,kBACZJ,KAAKK,aACLL,KAAKM,eACLN,KAAKO,gBAEHJ,aAAab,EAAGkB,SAClBR,KAAKE,UAAYC,EAEjBJ,EAAOI,EAAEM,WAAU,GAGrB,IAAIV,EAAK,CACR,IAAIW,EAAU,IAAIpB,EAAGqB,SAASX,MAC1BA,KAAKY,iBACDF,EAAQG,QAEhB,IAAIC,EAAQtB,EAAauB,MACxBf,KAAKE,UAAUc,OAAON,IAGvB,GAAsB,IAAnBI,EAAMG,UAAqC,IAAnBH,EAAMG,SAGhC,IAAI,IAAIC,EAAI,EAAGC,EAAIL,EAAMM,WAAWC,OAAQH,EAAIC,GAE3B,IADpBpB,EAAOe,EAAMM,WAAWF,IAChBD,WAF4CC,QAQrDnB,EAAOe,EAIT,GADAd,KAAKsB,qBAAqBvB,GACvBC,KAAKuB,kBAAkB,CAGzB,IAAqBC,EAAKC,EAAtBC,EAAS9B,EACO,cAAjB8B,EAAOC,SACTH,EAAME,EAAOC,OACbF,EAAOC,EAAOE,UACdF,EAAOC,OAAS,aAChBD,EAAOE,UAAY,YAIpB,IAAIC,EAAM7B,KAAK8B,gBAAkBlC,EAAOmC,MAAMhC,GAC7CiC,SAAUhC,KAAKiC,uBACfC,WAAYC,IAAKnC,KAAKmC,IAAKC,KAAMpC,KAAKoC,QAIpCZ,IACFE,EAAOC,OAASH,EAChBE,EAAOE,UAAYH,GAIpB,IAAQP,EAAI,EAAGA,EAAIW,EAAGR,OAAQH,IAC7BlB,KAAKqC,qBAAqBR,EAAGX,GAAI,SAASoB,EAAEC,GAC3C,OAAOD,EAAEC,IACP,SAASC,EAAQC,EAAMC,GAEzB,OAAGD,KAAQD,EAEHpD,EAAOuD,MAAMH,EAAQC,EAAMC,GAAU,GAGrCF,EAAOI,GAAGH,EAAMC,GAAU,KAMlC1C,KAAKC,UACPT,EAAaqD,MAAM9C,EAAMC,KAAKC,QAAS,UACvCD,KAAK8C,qBACLtD,EAAauD,QAAQ/C,KAAKC,UAE3BD,KAAKC,QAAUF,EAEfC,KAAKgD,aAAahD,KAAKiD,cAGxBZ,qBAAsB,SAA4Ba,EAAUC,EAAaC,GAIxE,GAAGpD,KAAKuB,oBAAsB4B,EAAYD,EAAU,aAAeC,EAAYD,EAAU,mBACxF,OAAO,EAGRlD,KAAKkC,UAAUmB,YAGhBC,kBACAlD,kBAAmB,SAASC,EAAcC,EAAgBiD,GAGzD,IAAIC,EAASxD,KAAKsD,eACdG,EAAMnD,GAAkBD,EAC5B,OAAGmD,EAAOC,GACFD,EAAOC,IAGfnD,EAAiBX,EAAQ+D,KAAKpD,GAAkBb,EAAMY,GAAesD,UAAU,KAE3E3D,KAAKH,uBACP0D,GAAmBjD,EAAesD,MAAM,sBAEzCtD,EAAiBN,KAAK6D,YAAYvD,IAIhCiD,IAAoBjD,EAAesD,MAAM,yBACpCJ,EAAOC,GAAOjE,EAAauB,MAAMT,GAEjCkD,EAAOC,GAAO,IAAInE,EAAGkB,SAASF,KAGvCU,OAAQ,WAGPhB,KAAKF,kBAENgE,QAAS,WACRpE,EAAMqE,QAAQ/D,KAAK8B,gBAAiB,SAASkC,GACzCA,IAAMA,EAAEC,UAAYD,EAAEF,SACxBE,EAAEF,YAGJ9D,KAAKkC,UAAUmB","file":"../../dtl/_Templated.js","sourcesContent":["define([\r\n\t\"dojo/aspect\",\r\n\t\"dojo/_base/declare\",\r\n\t\"./_base\",\r\n\t\"dijit/_TemplatedMixin\",\r\n\t\"dojo/dom-construct\",\r\n\t\"dojo/cache\",\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/string\",\r\n\t\"dojo/parser\"\r\n], function(aspect,declare,dd,TemplatedMixin, domConstruct,Cache,Array,dString,Parser){\r\n\r\n\treturn declare(\"dojox.dtl._Templated\", TemplatedMixin, {\r\n\t\t// summary:\r\n\t\t//\t\tThe base-class for DTL-templated widgets.\r\n\r\n\t\t_dijitTemplateCompat: false,\r\n\t\t\r\n\t\tbuildRendering: function(){\r\n\t\t\tvar node;\r\n\r\n\t\t\tif(this.domNode && !this._template){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(!this._template){\r\n\t\t\t\tvar t = this.getCachedTemplate(\r\n\t\t\t\t\tthis.templatePath,\r\n\t\t\t\t\tthis.templateString,\r\n\t\t\t\t\tthis._skipNodeCache\r\n\t\t\t\t);\r\n\t\t\t\tif(t instanceof dd.Template) {\r\n\t\t\t\t\tthis._template = t;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tnode = t.cloneNode(true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!node){\r\n\t\t\t\tvar context = new dd._Context(this);\r\n\t\t\t\tif(!this._created){\r\n\t\t\t\t\tdelete context._getter;\r\n\t\t\t\t}\r\n\t\t\t\tvar nodes = domConstruct.toDom(\r\n\t\t\t\t\tthis._template.render(context)\r\n\t\t\t\t);\r\n\t\t\t\t// TODO: is it really necessary to look for the first node?\r\n\t\t\t\tif(nodes.nodeType !== 1 && nodes.nodeType !== 3){\r\n\t\t\t\t\t// nodes.nodeType === 11\r\n\t\t\t\t\t// the node is a document fragment\r\n\t\t\t\t\tfor(var i = 0, l = nodes.childNodes.length; i < l; ++i){\r\n\t\t\t\t\t\tnode = nodes.childNodes[i];\r\n\t\t\t\t\t\tif(node.nodeType == 1){\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// the node is an element or a text\r\n\t\t\t\t\tnode = nodes;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._attachTemplateNodes(node);\r\n\t\t\tif(this.widgetsInTemplate){\r\n\t\t\t\t//Make sure dojoType is used for parsing widgets in template.\r\n\t\t\t\t//The Parser.query could be changed from multiversion support.\r\n\t\t\t\tvar parser = Parser, qry, attr;\r\n\t\t\t\tif(parser._query != \"[dojoType]\"){\r\n\t\t\t\t\tqry = parser._query;\r\n\t\t\t\t\tattr = parser._attrName;\r\n\t\t\t\t\tparser._query = \"[dojoType]\";\r\n\t\t\t\t\tparser._attrName = \"dojoType\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Store widgets that we need to start at a later point in time\r\n\t\t\t\tvar cw = (this._startupWidgets = Parser.parse(node, {\r\n\t\t\t\t\tnoStart: !this._earlyTemplatedStartup,\r\n\t\t\t\t\tinherited: {dir: this.dir, lang: this.lang}\r\n\t\t\t\t}));\r\n\r\n\t\t\t\t//Restore the query.\r\n\t\t\t\tif(qry){\r\n\t\t\t\t\tparser._query = qry;\r\n\t\t\t\t\tparser._attrName = attr;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Hook up attach points and events for nodes that were converted to widgets\r\n\t\t\t\tfor(var i = 0; i < cw.length; i++){\r\n\t\t\t\t\tthis._processTemplateNode(cw[i], function(n,p){\r\n\t\t\t\t\t\treturn n[p];\r\n\t\t\t\t\t}, function(widget, type, callback){\r\n\t\t\t\t\t\t// function to do data-dojo-attach-event to a widget\r\n\t\t\t\t\t\tif(type in widget){\r\n\t\t\t\t\t\t\t// back-compat, remove for 2.0\r\n\t\t\t\t\t\t\treturn aspect.after(widget, type, callback, true);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t// 1.x may never hit this branch, but it's the default for 2.0\r\n\t\t\t\t\t\t\treturn widget.on(type, callback, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(this.domNode){\r\n\t\t\t\tdomConstruct.place(node, this.domNode, \"before\");\r\n\t\t\t\tthis.destroyDescendants();\r\n\t\t\t\tdomConstruct.destroy(this.domNode);\r\n\t\t\t}\r\n\t\t\tthis.domNode = node;\r\n\r\n\t\t\tthis._fillContent(this.srcNodeRef);\r\n\t\t},\r\n\r\n\t\t_processTemplateNode: function(/*DOMNode|Widget*/ baseNode, getAttrFunc, attachFunc){\r\n\t\t\t// Override _AttachMixin._processNode to skip nodes with data-dojo-type set.   They are handled separately\r\n\t\t\t// in the buildRendering() code above.\r\n\r\n\t\t\tif(this.widgetsInTemplate && (getAttrFunc(baseNode, \"dojoType\") || getAttrFunc(baseNode, \"data-dojo-type\"))){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_templateCache: {},\r\n\t\tgetCachedTemplate: function(templatePath, templateString, alwaysUseString){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tLayer for dijit._Templated.getCachedTemplate\r\n\t\t\tvar tmplts = this._templateCache;\r\n\t\t\tvar key = templateString || templatePath;\r\n\t\t\tif(tmplts[key]){\r\n\t\t\t\treturn tmplts[key];\r\n\t\t\t}\r\n\r\n\t\t\ttemplateString = dString.trim(templateString || Cache(templatePath, {sanitize: true}));\r\n\r\n\t\t\tif(\tthis._dijitTemplateCompat &&\r\n\t\t\t\t(alwaysUseString || templateString.match(/\\$\\{([^\\}]+)\\}/g))\r\n\t\t\t){\r\n\t\t\t\ttemplateString = this._stringRepl(templateString);\r\n\t\t\t}\r\n\r\n\t\t\t// If we always use a string, or find no variables, just store it as a node\r\n\t\t\tif(alwaysUseString || !templateString.match(/\\{[{%]([^\\}]+)[%}]\\}/g)){\r\n\t\t\t\treturn tmplts[key] = domConstruct.toDom(templateString);\r\n\t\t\t}else{\r\n\t\t\t\treturn tmplts[key] = new dd.Template(templateString);\r\n\t\t\t}\r\n\t\t},\r\n\t\trender: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRenders the widget.\r\n\t\t\tthis.buildRendering();\r\n\t\t},\r\n\t\tstartup: function(){\r\n\t\t\tArray.forEach(this._startupWidgets, function(w){\r\n\t\t\t\tif(w && !w._started && w.startup){\r\n\t\t\t\t\tw.startup();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n});\r\n"]}