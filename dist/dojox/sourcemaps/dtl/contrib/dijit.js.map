{"version":3,"sources":["dtl/contrib/dijit.js"],"names":["define","lang","connect","array","query","dd","dxdom","parser","has","ddcd","getObject","cloneNode","n1","n2","forEach","AttachNode","extend","keys","object","this","_keys","_object","render","context","buffer","_rendered","key","i","getThis","getParent","unrender","clone","constructor","EventNode","command","obj","_command","type","events","split","trim","types","fns","pop","fn","indexOf","funcNameArr","slice","join","push","_types","_fns","_clear","args","disconnect","map","item","_Filter","resolve","isArray","e","apply","concat","addEvent","length","DojoTypeNode","node","parsed","_node","_parsed","getAttribute","_events","attach","_attach","old","widgetsInTemplate","_template","DomTemplate","_dijit","instantiate","_buffer","DomBuffer","root","getRootNode","div","document","createElement","appendChild","rendered","innerHTML","removeChild","destroyRecursive","domNode","remove","mixin","dojoAttachPoint","token","contents","dojoAttachEvent","dojoType","toString","swallowNode","setAttribute","AttributeNode","on","parts","register","tags","dijit"],"mappings":"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","file":"../../../dtl/contrib/dijit.js","sourcesContent":["define([\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/connect\",\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/query\",\r\n\t\"../_base\",\r\n\t\"../dom\",\r\n\t\"dojo/parser\",\r\n\t\"dojo/_base/sniff\"\r\n], function(lang,connect,array,query,dd,dxdom,parser,has){\r\n\r\n\tvar ddcd = lang.getObject(\"contrib.dijit\", true, dd);\r\n/*=====\r\n\tddcd = {\r\n\t\t// TODO: summary\r\n\t};\r\n=====*/\r\n\r\n\tddcd.AttachNode = lang.extend(function(keys, object){\r\n\t\tthis._keys = keys;\r\n\t\tthis._object = object;\r\n\t},\r\n\t{\r\n\t\trender: function(context, buffer){\r\n\t\t\tif(!this._rendered){\r\n\t\t\t\tthis._rendered = true;\r\n\t\t\t\tfor(var i = 0, key; key = this._keys[i]; i++){\r\n\t\t\t\t\tcontext.getThis()[key] = this._object || buffer.getParent();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn buffer;\r\n\t\t},\r\n\t\tunrender: function(context, buffer){\r\n\t\t\tif(this._rendered){\r\n\t\t\t\tthis._rendered = false;\r\n\t\t\t\tfor(var i = 0, key; key = this._keys[i]; i++){\r\n\t\t\t\t\tif(context.getThis()[key] === (this._object || buffer.getParent())){\r\n\t\t\t\t\t\tdelete context.getThis()[key];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn buffer;\r\n\t\t},\r\n\t\tclone: function(buffer){\r\n\t\t\treturn new this.constructor(this._keys, this._object);\r\n\t\t}\r\n\t});\r\n\r\n\tddcd.EventNode = lang.extend(function(command, obj){\r\n\t\tthis._command = command;\r\n\r\n\t\tvar type, events = command.split(/\\s*,\\s*/);\r\n\t\tvar trim = lang.trim;\r\n\t\tvar types = [];\r\n\t\tvar fns = [];\r\n\t\twhile(type = events.pop()){\r\n\t\t\tif(type){\r\n\t\t\t\tvar fn = null;\r\n\t\t\t\tif(type.indexOf(\":\") != -1){\r\n\t\t\t\t\t// oh, if only JS had tuple assignment\r\n\t\t\t\t\tvar funcNameArr = type.split(\":\");\r\n\t\t\t\t\ttype = trim(funcNameArr[0]);\r\n\t\t\t\t\tfn = trim(funcNameArr.slice(1).join(\":\"));\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttype = trim(type);\r\n\t\t\t\t}\r\n\t\t\t\tif(!fn){\r\n\t\t\t\t\tfn = type;\r\n\t\t\t\t}\r\n\t\t\t\ttypes.push(type);\r\n\t\t\t\tfns.push(fn);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._types = types;\r\n\t\tthis._fns = fns;\r\n\t\tthis._object = obj;\r\n\t\tthis._rendered = [];\r\n\t},\r\n\t{\r\n\t\t// _clear: Boolean\r\n\t\t//\t\tMake sure we kill the actual tags (onclick problems, etc)\r\n\t\t_clear: false,\r\n\t\trender: function(context, buffer){\r\n\t\t\tfor(var i = 0, type; type = this._types[i]; i++){\r\n\t\t\t\tif(!this._clear && !this._object){\r\n\t\t\t\t\tbuffer.getParent()[type] = null;\r\n\t\t\t\t}\r\n\t\t\t\tvar fn = this._fns[i];\r\n\t\t\t\tvar args;\r\n\t\t\t\tif(fn.indexOf(\" \") != -1){\r\n\t\t\t\t\tif(this._rendered[i]){\r\n\t\t\t\t\t\tconnect.disconnect(this._rendered[i]);\r\n\t\t\t\t\t\tthis._rendered[i] = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\targs = array.map(fn.split(\" \").slice(1), function(item){\r\n\t\t\t\t\t\treturn new dd._Filter(item).resolve(context);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tfn = fn.split(\" \", 2)[0];\r\n\t\t\t\t}\r\n\t\t\t\tif(!this._rendered[i]){\r\n\t\t\t\t\tif(!this._object){\r\n\t\t\t\t\t\tthis._rendered[i] = buffer.addEvent(context, type, fn, args);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tvar resolved = fn; \r\n\t\t\t\t\t\tif(lang.isArray(args)){ \r\n\t\t\t\t\t\t\tresolved = function(e){ \r\n\t\t\t\t\t\t\t\tthis[fn].apply(this, [e].concat(args)); \r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t\tthis._rendered[i] = connect.connect(this._object, type, context.getThis(), fn);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._clear = true;\r\n\r\n\t\t\treturn buffer;\r\n\t\t},\r\n\t\tunrender: function(context, buffer){\r\n\t\t\twhile(this._rendered.length){\r\n\t\t\t\tconnect.disconnect(this._rendered.pop());\r\n\t\t\t}\r\n\t\t\treturn buffer;\r\n\t\t},\r\n\t\tclone: function(){\r\n\t\t\treturn new this.constructor(this._command, this._object);\r\n\t\t}\r\n\t});\r\n\r\n\tfunction cloneNode(n1){\r\n\t\tvar n2 = n1.cloneNode(true);\r\n\t\tif(has(\"ie\")){\r\n\t\t\tquery(\"script\", n2).forEach(\"item.text = this[index].text;\", query(\"script\", n1));\r\n\t\t}\r\n\t\treturn n2;\r\n\t}\r\n\r\n\tddcd.DojoTypeNode = lang.extend(function(node, parsed){\r\n\t\tthis._node = node;\r\n\t\tthis._parsed = parsed;\r\n\r\n\t\tvar events = node.getAttribute(\"dojoAttachEvent\") || node.getAttribute(\"data-dojo-attach-event\");\r\n\t\tif(events){\r\n\t\t\tthis._events = new ddcd.EventNode(lang.trim(events));\r\n\t\t}\r\n\t\tvar attach = node.getAttribute(\"dojoAttachPoint\") || node.getAttribute(\"data-dojo-attach-point\");\r\n\t\tif(attach){\r\n\t\t\tthis._attach = new ddcd.AttachNode(lang.trim(attach).split(/\\s*,\\s*/));\r\n\t\t}\r\n\r\n\t\tif(!parsed){\r\n\t\t\tthis._dijit = parser.instantiate([cloneNode(node)])[0];\r\n\t\t}else{\r\n\t\t\tnode = cloneNode(node);\r\n\t\t\tvar old = ddcd.widgetsInTemplate;\r\n\t\t\tddcd.widgetsInTemplate = false;\r\n\t\t\tthis._template = new dd.DomTemplate(node);\r\n\t\t\tddcd.widgetsInTemplate = old;\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\trender: function(context, buffer){\r\n\t\t\tif(this._parsed){\r\n\t\t\t\tvar _buffer = new dd.DomBuffer();\r\n\t\t\t\tthis._template.render(context, _buffer);\r\n\t\t\t\tvar root = cloneNode(_buffer.getRootNode());\r\n\t\t\t\tvar div = document.createElement(\"div\");\r\n\t\t\t\tdiv.appendChild(root);\r\n\t\t\t\tvar rendered = div.innerHTML;\r\n\t\t\t\tdiv.removeChild(root);\r\n\t\t\t\tif(rendered != this._rendered){\r\n\t\t\t\t\tthis._rendered = rendered;\r\n\t\t\t\t\tif(this._dijit){\r\n\t\t\t\t\t\tthis._dijit.destroyRecursive();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._dijit = parser.instantiate([root])[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar node = this._dijit.domNode;\r\n\r\n\t\t\tif(this._events){\r\n\t\t\t\tthis._events._object = this._dijit;\r\n\t\t\t\tthis._events.render(context, buffer);\r\n\t\t\t}\r\n\t\t\tif(this._attach){\r\n\t\t\t\tthis._attach._object = this._dijit;\r\n\t\t\t\tthis._attach.render(context, buffer);\r\n\t\t\t}\r\n\r\n\t\t\treturn buffer.concat(node);\r\n\t\t},\r\n\t\tunrender: function(context, buffer){\r\n\t\t\treturn buffer.remove(this._dijit.domNode);\r\n\t\t},\r\n\t\tclone: function(){\r\n\t\t\treturn new this.constructor(this._node, this._parsed);\r\n\t\t}\r\n\t});\r\n\r\n\tlang.mixin(ddcd, {\r\n\t\twidgetsInTemplate: true,\r\n\t\tdojoAttachPoint: function(parser, token){\r\n\t\t\treturn new ddcd.AttachNode(token.contents.slice(token.contents.indexOf(\"data-\") !== -1 ? 23 : 16).split(/\\s*,\\s*/));\r\n\t\t},\r\n\t\tdojoAttachEvent: function(parser, token){\r\n\t\t\treturn new ddcd.EventNode(token.contents.slice(token.contents.indexOf(\"data-\") !== -1 ? 23 : 16));\r\n\t\t},\r\n\t\tdojoType: function(parser, token){\r\n\t\t\tvar parsed = false;\r\n\t\t\tif(token.contents.slice(-7) == \" parsed\"){\r\n\t\t\t\tparsed = true;\r\n\t\t\t}\r\n\t\t\tvar contents = token.contents.indexOf(\"data-\") !== -1 ? token.contents.slice(15)  : token.contents.slice(9);\r\n\t\t\tvar dojoType = parsed ? contents.slice(0, -7) : contents.toString();\r\n\r\n\t\t\tif(ddcd.widgetsInTemplate){\r\n\t\t\t\tvar node = parser.swallowNode();\r\n\t\t\t\tnode.setAttribute(\"data-dojo-type\", dojoType);\r\n\t\t\t\treturn new ddcd.DojoTypeNode(node, parsed);\r\n\t\t\t}\r\n\r\n\t\t\treturn new dd.AttributeNode(\"data-dojo-type\", dojoType);\r\n\t\t},\r\n\t\ton: function(parser, token){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAssociates an event type to a function (on the current widget) by name\r\n\t\t\tvar parts = token.contents.split();\r\n\t\t\treturn new ddcd.EventNode(parts[0] + \":\" + parts.slice(1).join(\" \"));\r\n\t\t}\r\n\t});\r\n\tddcd[\"data-dojo-type\"] = ddcd.dojoType;\r\n\tddcd[\"data-dojo-attach-point\"] = ddcd.dojoAttachPoint;\r\n\tddcd[\"data-dojo-attach-event\"] = ddcd.dojoAttachEvent;\r\n\t\r\n\r\n\tdd.register.tags(\"dojox.dtl.contrib\", {\r\n\t\t\"dijit\": [\"attr:dojoType\", \"attr:data-dojo-type\", \"attr:dojoAttachPoint\", \"attr:data-dojo-attach-point\", [\"attr:attach\", \"dojoAttachPoint\"], [\"attr:attach\", \"data-dojo-attach-point\"], \"attr:dojoAttachEvent\", \"attr:data-dojo-attach-event\", [/(attr:)?on(click|key(up))/i, \"on\"]]\r\n\t});\r\n\r\n\treturn ddcd;\r\n});\r\n"]}