{"version":3,"sources":["dtl/dom.js"],"names":["define","lang","dd","Tokenize","context","dom","domconstruct","html","array","connect","has","BOOLS","checked","disabled","readonly","TOKEN_CHANGE","TOKEN_ATTR","TOKEN_CUSTOM","TOKEN_NODE","ddt","text","ddh","_attributes","_uppers","_re4","_reTrim","_reSplit","getTemplate","this","_commentable","comment","div","document","createElement","innerHTML","childNodes","length","firstChild","nodeType","data","match","replace","pair","table","pairs","replacements","i","indexOf","selectRe","RegExp","exec","inner","inners","split","innerRe","j","push","tags","tokens","join","tag","jl","token","isObject","stripped","k","kl","replacement","p","pl","re","lower","toLowerCase","output","nodes","removeChild","tokenize","node","__tokenize","_tokenize","_swallowed","child","first","swallowed","register","getAttributeTags","swallowNode","Token","e","getAttribute","custom","parentNode","children","tagName","change","key","clear","value","className","htmlFor","hash","location","href","lastIndexOf","substring","pop","decodeURIComponent","slice","trim","setAttribute","removeAttribute","toString","instruction","texts","TOKEN_TEXT","substr","part","parts","test","require","TOKEN_BLOCK","TOKEN_VAR","DomTemplate","extend","obj","byId","forEach","item","getTemplateString","tests","parser","_DomParser","nodelist","parse","_count","_re","setClass","str","getRootNode","buffer","rootNode","getBuffer","DomBuffer","render","Context","_cache","unrender","parent","_parent","concat","_dirty","Error","_closed","_drawn","caches","cache","onAddNode","insertBefore","onAddNodeComplete","remove","_removed","onRemoveNode","old","attr","onChangeAttribute","style","cssText","addEvent","type","fn","args","getThis","onAddEvent","getParent","resolved","isArray","apply","setParent","up","root","_first","script","ie","select","options","appendChild","defaultSelected","selectedIndex","onSetParent","_DomNode","contents","_rendered","clone","constructor","_DomNodeList","unshift","instance","prototype","dummyRender","asNode","_clone","ChangeNode","cloned","cloneNode","onClone","rtrim","_DomTextNode","isEmpty","_DomVarNode","_Filter","resolve","safe","_type","_txt","createTextNode","onChangeData","_root","injected","_injected","_node","_src","_html","_div","removed","_injection","l","getExpression","AttributeNode","_pool","quickFilter","Template","upcoming","set","stop_at","terminators","changeNode","getTag","isString","cmd","tpl","next_token","delete_first_token","skip_past","endtag","_Parser","call","create_variable_node","expr","create_text_node","loc"],"mappings":"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","file":"../../dtl/dom.js","sourcesContent":["define([\r\n\t\"dojo/_base/lang\",\r\n\t\"./_base\",\r\n\t\"dojox/string/tokenize\",\r\n\t\"./Context\",\r\n\t\"dojo/dom\",\r\n\t\"dojo/dom-construct\",\r\n\t\"dojo/_base/html\",\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/connect\",\r\n\t\"dojo/_base/sniff\"\r\n], function(lang,dd,Tokenize,context,dom,domconstruct,html,array,connect,has){\r\n\r\n\tdd.BOOLS = {checked: 1, disabled: 1, readonly: 1};\r\n\tdd.TOKEN_CHANGE = -11;\r\n\tdd.TOKEN_ATTR = -12;\r\n\tdd.TOKEN_CUSTOM = -13;\r\n\tdd.TOKEN_NODE = 1;\r\n\r\n\tvar ddt = dd.text;\r\n\tvar ddh = dd.dom = {\r\n\t\t_attributes: {},\r\n\t\t_uppers: {},\r\n\t\t_re4: /^function anonymous\\(\\)\\s*{\\s*(.*)\\s*}$/,\r\n\t\t_reTrim: /(?:^[\\n\\s]*(\\{%)?\\s*|\\s*(%\\})?[\\n\\s]*$)/g,\r\n\t\t_reSplit: /\\s*%\\}[\\n\\s]*\\{%\\s*/g,\r\n\t\tgetTemplate: function(text){\r\n\t\t\tif(typeof this._commentable == \"undefined\"){\r\n\t\t\t\t// Check to see if the browser can handle comments\r\n\t\t\t\tthis._commentable = false;\r\n\t\t\t\tvar div = document.createElement(\"div\"), comment = \"Test comment handling, and long comments, using comments whenever possible.\";\r\n\t\t\t\tdiv.innerHTML = \"<!--\" + comment + \"-->\";\r\n\t\t\t\tif(div.childNodes.length && div.firstChild.nodeType == 8 && div.firstChild.data == comment){\r\n\t\t\t\t\tthis._commentable = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(!this._commentable){\r\n\t\t\t\t// Strip comments\r\n\t\t\t\ttext = text.replace(/<!--({({|%).*?(%|})})-->/g, \"$1\");\r\n\t\t\t}\r\n\r\n\t\t\tif(has(\"ie\")){\r\n\t\t\t\ttext = text.replace(/\\b(checked|disabled|readonly|style)=\"/g, 't$1=\"');\r\n\t\t\t}\r\n\t\t\ttext = text.replace(/\\bstyle=\"/g, 'tstyle=\"');\r\n\r\n\t\t\tvar match;\r\n\t\t\tvar table = has(\"webkit\");\r\n\t\t\tvar pairs = [ // Format: [enable, parent, allowed children (first for nesting), nestings]\r\n\t\t\t\t[true, \"select\", \"option\"],\r\n\t\t\t\t[table, \"tr\", \"td|th\"],\r\n\t\t\t\t[table, \"thead\", \"tr\", \"th\"],\r\n\t\t\t\t[table, \"tbody\", \"tr\", \"td\"],\r\n\t\t\t\t[table, \"table\", \"tbody|thead|tr\", \"tr\", \"td\"]\r\n\t\t\t];\r\n\t\t\tvar replacements = [];\r\n\t\t\t// Some tags can't contain text. So we wrap the text in tags that they can have.\r\n\t\t\tfor(var i = 0, pair; pair = pairs[i]; i++){\r\n\t\t\t\tif(!pair[0]){\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif(text.indexOf(\"<\" + pair[1]) != -1){\r\n\t\t\t\t\tvar selectRe = new RegExp(\"<\" + pair[1] + \"(?:.|\\n)*?>((?:.|\\n)+?)</\" + pair[1] + \">\", \"ig\");\r\n\t\t\t\t\ttagLoop: while(match = selectRe.exec(text)){\r\n\t\t\t\t\t\t// Do it like this to make sure we don't double-wrap\r\n\t\t\t\t\t\tvar inners = pair[2].split(\"|\");\r\n\t\t\t\t\t\tvar innerRe = [];\r\n\t\t\t\t\t\tfor(var j = 0, inner; inner = inners[j]; j++){\r\n\t\t\t\t\t\t\tinnerRe.push(\"<\" + inner + \"(?:.|\\n)*?>(?:.|\\n)*?</\" + inner + \">\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar tags = [];\r\n\t\t\t\t\t\tvar tokens = Tokenize(match[1], new RegExp(\"(\" + innerRe.join(\"|\") + \")\", \"ig\"), function(data){\r\n\t\t\t\t\t\t\tvar tag = /<(\\w+)/.exec(data)[1];\r\n\t\t\t\t\t\t\tif(!tags[tag]){\r\n\t\t\t\t\t\t\t\ttags[tag] = true;\r\n\t\t\t\t\t\t\t\ttags.push(tag);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn {data: data};\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif(tags.length){\r\n\t\t\t\t\t\t\tvar tag = (tags.length == 1) ? tags[0] : pair[2].split(\"|\")[0];\r\n\r\n\t\t\t\t\t\t\tvar replace = [];\r\n\t\t\t\t\t\t\tfor(var j = 0, jl = tokens.length; j < jl; j++) {\r\n\t\t\t\t\t\t\t\tvar token = tokens[j];\r\n\t\t\t\t\t\t\t\tif(lang.isObject(token)){\r\n\t\t\t\t\t\t\t\t\treplace.push(token.data);\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\tvar stripped = token.replace(this._reTrim, \"\");\r\n\t\t\t\t\t\t\t\t\tif(!stripped){ continue; }\r\n\t\t\t\t\t\t\t\t\ttoken = stripped.split(this._reSplit);\r\n\t\t\t\t\t\t\t\t\tfor(var k = 0, kl = token.length; k < kl; k++){\r\n\t\t\t\t\t\t\t\t\t\tvar replacement = \"\";\r\n\t\t\t\t\t\t\t\t\t\tfor(var p = 2, pl = pair.length; p < pl; p++){\r\n\t\t\t\t\t\t\t\t\t\t\tif(p == 2){\r\n\t\t\t\t\t\t\t\t\t\t\t\treplacement += \"<\" + tag + ' dtlinstruction=\"{% ' + token[k].replace('\"', '\\\\\"') + ' %}\">';\r\n\t\t\t\t\t\t\t\t\t\t\t}else if(tag == pair[p]) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t\t\treplacement += \"<\" + pair[p] + \">\";\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\treplacement += \"DTL\";\r\n\t\t\t\t\t\t\t\t\t\tfor(var p = pair.length - 1; p > 1; p--){\r\n\t\t\t\t\t\t\t\t\t\t\tif(p == 2){\r\n\t\t\t\t\t\t\t\t\t\t\t\treplacement += \"</\" + tag + \">\";\r\n\t\t\t\t\t\t\t\t\t\t\t}else if(tag == pair[p]) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t\t\treplacement += \"</\" + pair[p] + \">\";\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\treplace.push(\"\\xFF\" + replacements.length);\r\n\t\t\t\t\t\t\t\t\t\treplacements.push(replacement);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttext = text.replace(match[1], replace.join(\"\"));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor(var i = replacements.length; i--;){\r\n\t\t\t\ttext = text.replace(\"\\xFF\" + i, replacements[i]);\r\n\t\t\t}\r\n\r\n\t\t\tvar re = /\\b([a-zA-Z_:][a-zA-Z0-9_\\-\\.:]*)=['\"]/g;\r\n\t\t\twhile(match = re.exec(text)){\r\n\t\t\t\tvar lower = match[1].toLowerCase();\r\n\t\t\t\tif(lower == \"dtlinstruction\"){ continue; }\r\n\t\t\t\tif(lower != match[1]){\r\n\t\t\t\t\tthis._uppers[lower] = match[1];\r\n\t\t\t\t}\r\n\t\t\t\tthis._attributes[lower] = true;\r\n\t\t\t}\r\n\t\t\tvar div = document.createElement(\"div\");\r\n\t\t\tdiv.innerHTML = text;\r\n\t\t\tvar output = {nodes: []};\r\n\t\t\twhile(div.childNodes.length){\r\n\t\t\t\toutput.nodes.push(div.removeChild(div.childNodes[0]))\r\n\t\t\t}\r\n\r\n\t\t\treturn output;\r\n\t\t},\r\n\t\ttokenize: function(/*Node*/ nodes){\r\n\t\t\tvar tokens = [];\r\n\r\n\t\t\tfor(var i = 0, node; node = nodes[i++];){\r\n\t\t\t\tif(node.nodeType != 1){\r\n\t\t\t\t\tthis.__tokenize(node, tokens);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis._tokenize(node, tokens);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn tokens;\r\n\t\t},\r\n\t\t_swallowed: [],\r\n\t\t_tokenize: function(/*Node*/ node, /*Array*/ tokens){\r\n\t\t\tvar first = false;\r\n\t\t\tvar swallowed = this._swallowed;\r\n\t\t\tvar i, j, tag, child;\r\n\r\n\t\t\tif(!tokens.first){\r\n\t\t\t\t// Try to efficiently associate tags that use an attribute to\r\n\t\t\t\t// remove the node from DOM (eg dojoType) so that we can efficiently\r\n\t\t\t\t// locate them later in the tokenizing.\r\n\t\t\t\tfirst = tokens.first = true;\r\n\t\t\t\tvar tags = dd.register.getAttributeTags();\r\n\t\t\t\tfor(i = 0; tag = tags[i]; i++){\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\t(tag[2])({ swallowNode: function(){ throw 1; }}, new dd.Token(dd.TOKEN_ATTR, \"\"));\r\n\t\t\t\t\t}catch(e){\r\n\t\t\t\t\t\tswallowed.push(tag);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor(i = 0; tag = swallowed[i]; i++){\r\n\t\t\t\tvar text = node.getAttribute(tag[0]);\r\n\t\t\t\tif(text){\r\n\t\t\t\t\tvar swallowed = false;\r\n\t\t\t\t\tvar custom = (tag[2])({ swallowNode: function(){ swallowed = true; return node; }}, new dd.Token(dd.TOKEN_ATTR, tag[0] + \" \" + text));\r\n\t\t\t\t\tif(swallowed){\r\n\t\t\t\t\t\tif(node.parentNode && node.parentNode.removeChild){\r\n\t\t\t\t\t\t\tnode.parentNode.removeChild(node);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttokens.push([dd.TOKEN_CUSTOM, custom]);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar children = [];\r\n\t\t\tif(has(\"ie\") && node.tagName == \"SCRIPT\"){\r\n\t\t\t\tchildren.push({\r\n\t\t\t\t\tnodeType: 3,\r\n\t\t\t\t\tdata: node.text\r\n\t\t\t\t});\r\n\t\t\t\tnode.text = \"\";\r\n\t\t\t}else{\r\n\t\t\t\tfor(i = 0; child = node.childNodes[i]; i++){\r\n\t\t\t\t\tchildren.push(child);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttokens.push([dd.TOKEN_NODE, node]);\r\n\r\n\t\t\tvar change = false;\r\n\t\t\tif(children.length){\r\n\t\t\t\t// Only do a change request if we need to\r\n\t\t\t\ttokens.push([dd.TOKEN_CHANGE, node]);\r\n\t\t\t\tchange = true;\r\n\t\t\t}\r\n\r\n\t\t\tfor(var key in this._attributes){\r\n\t\t\t\tvar clear = false;\r\n\r\n\t\t\t\tvar value = \"\";\r\n\t\t\t\tif(key == \"class\"){\r\n\t\t\t\t\tvalue = node.className || value;\r\n\t\t\t\t}else if(key == \"for\"){\r\n\t\t\t\t\tvalue = node.htmlFor || value;\r\n\t\t\t\t}else if(key == \"value\" && node.value == node.innerHTML){\r\n\t\t\t\t\t// Sometimes .value is set the same as the contents of the item (button)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}else if(node.getAttribute){\r\n\t\t\t\t\tvalue = node.getAttribute(key, 2) || value;\r\n\t\t\t\t\tif(key == \"href\" || key == \"src\"){\r\n\t\t\t\t\t\tif(has(\"ie\")){\r\n\t\t\t\t\t\t\tvar hash = location.href.lastIndexOf(location.hash);\r\n\t\t\t\t\t\t\tvar href = location.href.substring(0, hash).split(\"/\");\r\n\t\t\t\t\t\t\thref.pop();\r\n\t\t\t\t\t\t\thref = href.join(\"/\") + \"/\";\r\n\t\t\t\t\t\t\tif(value.indexOf(href) == 0){\r\n\t\t\t\t\t\t\t\tvalue = value.replace(href, \"\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvalue = decodeURIComponent(value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else if(key == \"tstyle\"){\r\n\t\t\t\t\t\tclear = key; // Placeholder because we can't use style\r\n\t\t\t\t\t\tkey = \"style\";\r\n\t\t\t\t\t}else if(dd.BOOLS[key.slice(1)] && lang.trim(value)){\r\n\t\t\t\t\t\tkey = key.slice(1);\r\n\t\t\t\t\t}else if(this._uppers[key] && lang.trim(value)){\r\n\t\t\t\t\t\tclear = this._uppers[key]; // Replaced by lowercase\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(clear){\r\n\t\t\t\t\t// Clear out values that are different than will\r\n\t\t\t\t\t// be used in plugins\r\n\t\t\t\t\tnode.setAttribute(clear, \"\");\r\n\t\t\t\t\tnode.removeAttribute(clear);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(typeof value == \"function\"){\r\n\t\t\t\t\tvalue = value.toString().replace(this._re4, \"$1\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(!change){\r\n\t\t\t\t\t// Only do a change request if we need to\r\n\t\t\t\t\ttokens.push([dd.TOKEN_CHANGE, node]);\r\n\t\t\t\t\tchange = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// We'll have to resolve attributes during parsing (some ref plugins)\r\n\r\n\t\t\t\ttokens.push([dd.TOKEN_ATTR, node, key, value]);\r\n\t\t\t}\r\n\r\n\t\t\tfor(i = 0, child; child = children[i]; i++){\r\n\t\t\t\tif(child.nodeType == 1){\r\n\t\t\t\t\tvar instruction = child.getAttribute(\"dtlinstruction\");\r\n\t\t\t\t\tif(instruction){\r\n\t\t\t\t\t\tchild.parentNode.removeChild(child);\r\n\t\t\t\t\t\tchild = {\r\n\t\t\t\t\t\t\tnodeType: 8,\r\n\t\t\t\t\t\t\tdata: instruction\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.__tokenize(child, tokens);\r\n\t\t\t}\r\n\r\n\t\t\tif(!first && node.parentNode && node.parentNode.tagName){\r\n\t\t\t\tif(change){\r\n\t\t\t\t\ttokens.push([dd.TOKEN_CHANGE, node, true]);\r\n\t\t\t\t}\r\n\t\t\t\ttokens.push([dd.TOKEN_CHANGE, node.parentNode]);\r\n\t\t\t\tnode.parentNode.removeChild(node);\r\n\t\t\t}else{\r\n\t\t\t\t// If this node is parentless, it's a base node, so we have to \"up\" change to itself\r\n\t\t\t\t// and note that it's a top-level to watch for errors\r\n\t\t\t\ttokens.push([dd.TOKEN_CHANGE, node, true, true]);\r\n\t\t\t}\r\n\t\t},\r\n\t\t__tokenize: function(child, tokens){\r\n\t\t\tvar data = child.data;\r\n\t\t\tswitch(child.nodeType){\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tthis._tokenize(child, tokens);\r\n\t\t\t\t\treturn;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tif(data.match(/[^\\s\\n]/) && (data.indexOf(\"{{\") != -1 || data.indexOf(\"{%\") != -1)){\r\n\t\t\t\t\t\tvar texts = ddt.tokenize(data);\r\n\t\t\t\t\t\tfor(var j = 0, text; text = texts[j]; j++){\r\n\t\t\t\t\t\t\tif(typeof text == \"string\"){\r\n\t\t\t\t\t\t\t\ttokens.push([dd.TOKEN_TEXT, text]);\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\ttokens.push(text);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\ttokens.push([child.nodeType, child]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(child.parentNode) child.parentNode.removeChild(child);\r\n\t\t\t\t\treturn;\r\n\t\t\t\tcase 8:\r\n\t\t\t\t\tif(data.indexOf(\"{%\") == 0){\r\n\t\t\t\t\t\tvar text = lang.trim(data.slice(2, -2));\r\n\t\t\t\t\t\tif(text.substr(0, 5) == \"load \"){\r\n\t\t\t\t\t\t\tvar parts = lang.trim(text).split(/\\s+/g);\r\n\t\t\t\t\t\t\tfor(var i = 1, part; part = parts[i]; i++){\r\n\t\t\t\t\t\t\t\tif (/\\./.test(part)){\r\n\t\t\t\t\t\t\t\t\tpart = part.replace(/\\./g,\"/\");\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\trequire([part]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttokens.push([dd.TOKEN_BLOCK, text]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(data.indexOf(\"{{\") == 0){\r\n\t\t\t\t\t\ttokens.push([dd.TOKEN_VAR, lang.trim(data.slice(2, -2))]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(child.parentNode) child.parentNode.removeChild(child);\r\n\t\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tdd.DomTemplate = lang.extend(function(/*String|DOMNode|dojo/Url*/ obj){\r\n\t\t// summary:\r\n\t\t//\t\tThe template class for DOM templating.\r\n\t\tif(!obj.nodes){\r\n\t\t\tvar node = dom.byId(obj);\r\n\t\t\tif(node && node.nodeType == 1){\r\n\t\t\t\tarray.forEach([\"class\", \"src\", \"href\", \"name\", \"value\"], function(item){\r\n\t\t\t\t\tddh._attributes[item] = true;\r\n\t\t\t\t});\r\n\t\t\t\tobj = {\r\n\t\t\t\t\tnodes: [node]\r\n\t\t\t\t};\r\n\t\t\t}else{\r\n\t\t\t\tif(typeof obj == \"object\"){\r\n\t\t\t\t\tobj = ddt.getTemplateString(obj);\r\n\t\t\t\t}\r\n\t\t\t\tobj = ddh.getTemplate(obj);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar tokens = ddh.tokenize(obj.nodes);\r\n\t\tif(dd.tests){\r\n\t\t\tthis.tokens = tokens.slice(0);\r\n\t\t}\r\n\r\n\t\tvar parser = new dd._DomParser(tokens);\r\n\t\tthis.nodelist = parser.parse();\r\n\t},\r\n\t{\r\n\t\t_count: 0,\r\n\t\t_re: /\\bdojo:([a-zA-Z0-9_]+)\\b/g,\r\n\t\tsetClass: function(/*String*/str){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets the specified class name on the root node.\r\n\t\t\tthis.getRootNode().className = str;\r\n\t\t},\r\n\t\tgetRootNode: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the template root node.\r\n\t\t\treturn this.buffer.rootNode;\r\n\t\t},\r\n\t\tgetBuffer: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns a new buffer.\r\n\t\t\treturn new dd.DomBuffer();\r\n\t\t},\r\n\t\trender: function(/*dojox/dtl/Context?*/context, /*concatenable?*/buffer){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRenders this template.\r\n\t\t\tbuffer = this.buffer = buffer || this.getBuffer();\r\n\t\t\tthis.rootNode = null;\r\n\t\t\tvar output = this.nodelist.render(context || new dd.Context({}), buffer);\r\n\t\t\tfor(var i = 0, node; node = buffer._cache[i]; i++){\r\n\t\t\t\tif(node._cache){\r\n\t\t\t\t\tnode._cache.length = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn output;\r\n\t\t},\r\n\t\tunrender: function(context, buffer){\r\n\t\t\treturn this.nodelist.unrender(context, buffer);\r\n\t\t}\r\n\t});\r\n\r\n\tdd.DomBuffer = lang.extend(function(/*Node*/ parent){\r\n\t\t// summary:\r\n\t\t//\t\tAllows the manipulation of DOM\r\n\t\t// description:\r\n\t\t//\t\tUse this to append a child, change the parent, or\r\n\t\t//\t\tchange the attribute of the current node.\r\n\t\t// parent:\r\n\t\t//\t\tThe parent node.\r\n\t\tthis._parent = parent;\r\n\t\tthis._cache = [];\r\n\t},\r\n\t{\r\n\t\tconcat: function(/*DOMNode*/ node){\r\n\t\t\tvar parent = this._parent;\r\n\t\t\tif(parent && node.parentNode && node.parentNode === parent && !parent._dirty){\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tif(node.nodeType == 1 && !this.rootNode){\r\n\t\t\t\tthis.rootNode = node || true;\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tif(!parent){\r\n\t\t\t\tif(node.nodeType == 3 && lang.trim(node.data)){\r\n\t\t\t\t\tthrow new Error(\"Text should not exist outside of the root node in template\");\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\tif(this._closed){\r\n\t\t\t\tif(node.nodeType == 3 && !lang.trim(node.data)){\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthrow new Error(\"Content should not exist outside of the root node in template\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(parent._dirty){\r\n\t\t\t\tif(node._drawn && node.parentNode == parent){\r\n\t\t\t\t\tvar caches = parent._cache;\r\n\t\t\t\t\tif(caches){\r\n\t\t\t\t\t\tfor(var i = 0, cache; cache = caches[i]; i++){\r\n\t\t\t\t\t\t\tthis.onAddNode && this.onAddNode(cache);\r\n\t\t\t\t\t\t\tparent.insertBefore(cache, node);\r\n\t\t\t\t\t\t\tthis.onAddNodeComplete && this.onAddNodeComplete(cache);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcaches.length = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tparent._dirty = false;\r\n\t\t\t}\r\n\t\t\tif(!parent._cache){\r\n\t\t\t\tparent._cache = [];\r\n\t\t\t\tthis._cache.push(parent);\r\n\t\t\t}\r\n\t\t\tparent._dirty = true;\r\n\t\t\tparent._cache.push(node);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tremove: function(/*String|DomNode*/obj){\r\n\t\t\tif(typeof obj == \"string\"){\r\n\t\t\t\tif(this._parent){\r\n\t\t\t\t\tthis._parent.removeAttribute(obj);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(obj.nodeType == 1 && !this.getRootNode() && !this._removed){\r\n\t\t\t\t\tthis._removed = true;\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\t\t\t\tif(obj.parentNode){\r\n\t\t\t\t\tthis.onRemoveNode && this.onRemoveNode(obj);\r\n\t\t\t\t\tif(obj.parentNode){\r\n\t\t\t\t\t\tobj.parentNode.removeChild(obj);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tsetAttribute: function(key, value){\r\n\t\t\tvar old = html.attr(this._parent, key);\r\n\t\t\tif(this.onChangeAttribute && old != value){\r\n\t\t\t\tthis.onChangeAttribute(this._parent, key, old, value);\r\n\t\t\t}\r\n\t\t\tif(key == \"style\"){\r\n\t\t\t\t//console.log(value);\r\n\t\t\t\tthis._parent.style.cssText = value;\r\n\t\t\t}else{\r\n\t\t\t\thtml.attr(this._parent, key, value);\r\n\t\t\t\t//console.log(this._parent, key, value);\r\n\t\t\t\tif(key == \"value\"){\r\n\t\t\t\t\tthis._parent.setAttribute(key, value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\taddEvent: function(context, type, fn, /*Array|Function*/ args){\r\n\t\t\tif(!context.getThis()){ throw new Error(\"You must use Context.setObject(instance)\"); }\r\n\t\t\tthis.onAddEvent && this.onAddEvent(this.getParent(), type, fn);\r\n\t\t\tvar resolved = fn;\r\n\t\t\tif(lang.isArray(args)){\r\n\t\t\t\tresolved = function(e){\r\n\t\t\t\t\tthis[fn].apply(this, [e].concat(args));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn connect.connect(this.getParent(), type, context.getThis(), resolved);\r\n\t\t},\r\n\t\tsetParent: function(node, /*Boolean?*/ up, /*Boolean?*/ root){\r\n\t\t\tif(!this._parent) this._parent = this._first = node;\r\n\r\n\t\t\tif(up && root && node === this._first){\r\n\t\t\t\tthis._closed = true;\r\n\t\t\t}\r\n\r\n\t\t\tif(up){\r\n\t\t\t\tvar parent = this._parent;\r\n\t\t\t\tvar script = \"\";\r\n\t\t\t\tvar ie = has(\"ie\") && parent.tagName == \"SCRIPT\";\r\n\t\t\t\tif(ie){\r\n\t\t\t\t\tparent.text = \"\";\r\n\t\t\t\t}\r\n\t\t\t\tif(parent._dirty){\r\n\t\t\t\t\tvar caches = parent._cache;\r\n\t\t\t\t\tvar select = (parent.tagName == \"SELECT\" && !parent.options.length);\r\n\t\t\t\t\tfor(var i = 0, cache; cache = caches[i]; i++){\r\n\t\t\t\t\t\tif(cache !== parent){\r\n\t\t\t\t\t\t\tthis.onAddNode && this.onAddNode(cache);\r\n\t\t\t\t\t\t\tif(ie){\r\n\t\t\t\t\t\t\t\tscript += cache.data;\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tparent.appendChild(cache);\r\n\t\t\t\t\t\t\t\tif(select && cache.defaultSelected && i){\r\n\t\t\t\t\t\t\t\t\tselect = i;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.onAddNodeComplete && this.onAddNodeComplete(cache);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(select){\r\n\t\t\t\t\t\tparent.options.selectedIndex = (typeof select == \"number\") ? select : 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcaches.length = 0;\r\n\t\t\t\t\tparent._dirty = false;\r\n\t\t\t\t}\r\n\t\t\t\tif(ie){\r\n\t\t\t\t\tparent.text = script;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._parent = node;\r\n\t\t\tthis.onSetParent && this.onSetParent(node, up, root);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tgetParent: function(){\r\n\t\t\treturn this._parent;\r\n\t\t},\r\n\t\tgetRootNode: function(){\r\n\t\t\treturn this.rootNode;\r\n\t\t}\r\n\t\t/*=====\r\n\t\t,\r\n\t\tonSetParent: function(node, up){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStub called when setParent is used.\r\n\t\t},\r\n\t\tonAddNode: function(node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStub called before new nodes are added\r\n\t\t},\r\n\t\tonAddNodeComplete: function(node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStub called after new nodes are added\r\n\t\t},\r\n\t\tonRemoveNode: function(node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStub called when nodes are removed\r\n\t\t},\r\n\t\tonChangeAttribute: function(node, attribute, old, updated){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStub called when an attribute is changed\r\n\t\t},\r\n\t\tonChangeData: function(node, old, updated){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStub called when a data in a node is changed\r\n\t\t},\r\n\t\tonClone: function(from, to){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStub called when a node is duplicated\r\n\t\t\t// from: DOMNode\r\n\t\t\t// to: DOMNode\r\n\t\t},\r\n\t\tonAddEvent: function(node, type, description){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStub to call when you're adding an event\r\n\t\t\t// node: DOMNode\r\n\t\t\t// type: String\r\n\t\t\t// description: String\r\n\t\t}\r\n\t\t=====*/\r\n\t});\r\n\r\n\tdd._DomNode = lang.extend(function(node){\r\n\t\t// summary:\r\n\t\t//\t\tPlaces a node into DOM\r\n\t\tthis.contents = node;\r\n\t},\r\n\t{\r\n\t\trender: function(context, buffer){\r\n\t\t\tthis._rendered = true;\r\n\t\t\treturn buffer.concat(this.contents);\r\n\t\t},\r\n\t\tunrender: function(context, buffer){\r\n\t\t\tif(!this._rendered){\r\n\t\t\t\treturn buffer;\r\n\t\t\t}\r\n\t\t\tthis._rendered = false;\r\n\t\t\treturn buffer.remove(this.contents);\r\n\t\t},\r\n\t\tclone: function(buffer){\r\n\t\t\treturn new this.constructor(this.contents);\r\n\t\t}\r\n\t});\r\n\r\n\tdd._DomNodeList = lang.extend(function(/*Node[]*/ nodes){\r\n\t\t// summary:\r\n\t\t//\t\tA list of any DOM-specific node objects\r\n\t\t// description:\r\n\t\t//\t\tAny object that's used in the constructor or added\r\n\t\t//\t\tthrough the push function much implement the\r\n\t\t//\t\trender, unrender, and clone functions.\r\n\t\tthis.contents = nodes || [];\r\n\t},\r\n\t{\r\n\t\tpush: function(node){\r\n\t\t\tthis.contents.push(node);\r\n\t\t},\r\n\t\tunshift: function(node){\r\n\t\t\tthis.contents.unshift(node);\r\n\t\t},\r\n\t\trender: function(context, buffer, /*Node*/ instance){\r\n\t\t\tbuffer = buffer || dd.DomTemplate.prototype.getBuffer();\r\n\r\n\t\t\tif(instance){\r\n\t\t\t\tvar parent = buffer.getParent();\r\n\t\t\t}\r\n\t\t\tfor(var i = 0; i < this.contents.length; i++){\r\n\t\t\t\tbuffer = this.contents[i].render(context, buffer);\r\n\t\t\t\tif(!buffer) throw new Error(\"Template node render functions must return their buffer\");\r\n\t\t\t}\r\n\t\t\tif(parent){\r\n\t\t\t\tbuffer.setParent(parent);\r\n\t\t\t}\r\n\t\t\treturn buffer;\r\n\t\t},\r\n\t\tdummyRender: function(context, buffer, asNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tA really expensive way of checking to see how a rendering will look.\r\n\t\t\t//\t\tUsed in the ifchanged tag\r\n\t\t\tvar div = document.createElement(\"div\");\r\n\r\n\t\t\tvar parent = buffer.getParent();\r\n\t\t\tvar old = parent._clone;\r\n\t\t\t// Tell the clone system to attach itself to our new div\r\n\t\t\tparent._clone = div;\r\n\t\t\tvar nodelist = this.clone(buffer, div);\r\n\t\t\tif(old){\r\n\t\t\t\t// Restore state if there was a previous clone\r\n\t\t\t\tparent._clone = old;\r\n\t\t\t}else{\r\n\t\t\t\t// Remove if there was no clone\r\n\t\t\t\tparent._clone = null;\r\n\t\t\t}\r\n\r\n\t\t\tbuffer = dd.DomTemplate.prototype.getBuffer();\r\n\t\t\tnodelist.unshift(new dd.ChangeNode(div));\r\n\t\t\tnodelist.unshift(new dd._DomNode(div));\r\n\t\t\tnodelist.push(new dd.ChangeNode(div, true));\r\n\t\t\tnodelist.render(context, buffer);\r\n\r\n\t\t\tif(asNode){\r\n\t\t\t\treturn buffer.getRootNode();\r\n\t\t\t}\r\n\r\n\t\t\tvar html = div.innerHTML;\r\n\t\t\treturn (has(\"ie\")) ? domconstruct.replace(/\\s*_(dirty|clone)=\"[^\"]*\"/g, \"\") : html;\r\n\t\t},\r\n\t\tunrender: function(context, buffer, instance){\r\n\t\t\tif(instance){\r\n\t\t\t\tvar parent = buffer.getParent();\r\n\t\t\t}\r\n\t\t\tfor(var i = 0; i < this.contents.length; i++){\r\n\t\t\t\tbuffer = this.contents[i].unrender(context, buffer);\r\n\t\t\t\tif(!buffer) throw new Error(\"Template node render functions must return their buffer\");\r\n\t\t\t}\r\n\t\t\tif(parent){\r\n\t\t\t\tbuffer.setParent(parent);\r\n\t\t\t}\r\n\t\t\treturn buffer;\r\n\t\t},\r\n\t\tclone: function(buffer){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUsed to create an identical copy of a NodeList, useful for things like the for tag.\r\n\t\t\tvar parent = buffer.getParent();\r\n\t\t\tvar contents = this.contents;\r\n\t\t\tvar nodelist = new dd._DomNodeList();\r\n\t\t\tvar cloned = [];\r\n\t\t\tfor(var i = 0; i < contents.length; i++){\r\n\t\t\t\tvar clone = contents[i].clone(buffer);\r\n\t\t\t\tif(clone instanceof dd.ChangeNode || clone instanceof dd._DomNode){\r\n\t\t\t\t\tvar item = clone.contents._clone;\r\n\t\t\t\t\tif(item){\r\n\t\t\t\t\t\tclone.contents = item;\r\n\t\t\t\t\t}else if(parent != clone.contents && clone instanceof dd._DomNode){\r\n\t\t\t\t\t\tvar node = clone.contents;\r\n\t\t\t\t\t\tclone.contents = clone.contents.cloneNode(false);\r\n\t\t\t\t\t\tbuffer.onClone && buffer.onClone(node, clone.contents);\r\n\t\t\t\t\t\tcloned.push(node);\r\n\t\t\t\t\t\tnode._clone = clone.contents;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tnodelist.push(clone);\r\n\t\t\t}\r\n\r\n\t\t\tfor(var i = 0, clone; clone = cloned[i]; i++){\r\n\t\t\t\tclone._clone = null;\r\n\t\t\t}\r\n\r\n\t\t\treturn nodelist;\r\n\t\t},\r\n\t\trtrim: function(){\r\n\t\t\twhile(1){\r\n\t\t\t\tvar i = this.contents.length - 1;\r\n\t\t\t\tif(this.contents[i] instanceof dd._DomTextNode && this.contents[i].isEmpty()){\r\n\t\t\t\t\tthis.contents.pop();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t});\r\n\r\n\tdd._DomVarNode = lang.extend(function(str){\r\n\t\t// summary:\r\n\t\t//\t\tA node to be processed as a variable\r\n\t\t// description:\r\n\t\t//\t\tWill render an object that supports the render function\r\n\t\t// \t\tand the getRootNode function\r\n\t\tthis.contents = new dd._Filter(str);\r\n\t},\r\n\t{\r\n\t\trender: function(context, buffer){\r\n\t\t\tvar str = this.contents.resolve(context);\r\n\r\n\t\t\t// What type of rendering?\r\n\t\t\tvar type = \"text\";\r\n\t\t\tif(str){\r\n\t\t\t\tif(str.render && str.getRootNode){\r\n\t\t\t\t\ttype = \"injection\";\r\n\t\t\t\t}else if(str.safe){\r\n\t\t\t\t\tif(str.nodeType){\r\n\t\t\t\t\t\ttype = \"node\";\r\n\t\t\t\t\t}else if(str.toString){\r\n\t\t\t\t\t\tstr = str.toString();\r\n\t\t\t\t\t\ttype = \"html\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Has the typed changed?\r\n\t\t\tif(this._type && type != this._type){\r\n\t\t\t\tthis.unrender(context, buffer);\r\n\t\t\t}\r\n\t\t\tthis._type = type;\r\n\r\n\t\t\t// Now render\r\n\t\t\tswitch(type){\r\n\t\t\tcase \"text\":\r\n\t\t\t\tthis._rendered = true;\r\n\t\t\t\tthis._txt = this._txt || document.createTextNode(str);\r\n\t\t\t\tif(this._txt.data != str){\r\n\t\t\t\t\tvar old = this._txt.data;\r\n\t\t\t\t\tthis._txt.data = str;\r\n\t\t\t\t\tbuffer.onChangeData && buffer.onChangeData(this._txt, old, this._txt.data);\r\n\t\t\t\t}\r\n\t\t\t\treturn buffer.concat(this._txt);\r\n\t\t\tcase \"injection\":\r\n\t\t\t\tvar root = str.getRootNode();\r\n\r\n\t\t\t\tif(this._rendered && root != this._root){\r\n\t\t\t\t\tbuffer = this.unrender(context, buffer);\r\n\t\t\t\t}\r\n\t\t\t\tthis._root = root;\r\n\r\n\t\t\t\tvar injected = this._injected = new dd._DomNodeList();\r\n\t\t\t\tinjected.push(new dd.ChangeNode(buffer.getParent()));\r\n\t\t\t\tinjected.push(new dd._DomNode(root));\r\n\t\t\t\tinjected.push(str);\r\n\t\t\t\tinjected.push(new dd.ChangeNode(buffer.getParent()));\r\n\t\t\t\tthis._rendered = true;\r\n\r\n\t\t\t\treturn injected.render(context, buffer);\r\n\t\t\tcase \"node\":\r\n\t\t\t\tthis._rendered = true;\r\n\t\t\t\tif(this._node && this._node != str && this._node.parentNode && this._node.parentNode === buffer.getParent()){\r\n\t\t\t\t\tthis._node.parentNode.removeChild(this._node);\r\n\t\t\t\t}\r\n\t\t\t\tthis._node = str;\r\n\t\t\t\treturn buffer.concat(str);\r\n\t\t\tcase \"html\":\r\n\t\t\t\tif(this._rendered && this._src != str){\r\n\t\t\t\t\tbuffer = this.unrender(context, buffer);\r\n\t\t\t\t}\r\n\t\t\t\tthis._src = str;\r\n\r\n\t\t\t\t// This can get reset in the above tag\r\n\t\t\t\tif(!this._rendered){\r\n\t\t\t\t\tthis._rendered = true;\r\n\t\t\t\t\tthis._html = this._html || [];\r\n\t\t\t\t\tvar div = (this._div = this._div || document.createElement(\"div\"));\r\n\t\t\t\t\tdiv.innerHTML = str;\r\n\t\t\t\t\tvar children = div.childNodes;\r\n\t\t\t\t\twhile(children.length){\r\n\t\t\t\t\t\tvar removed = div.removeChild(children[0]);\r\n\t\t\t\t\t\tthis._html.push(removed);\r\n\t\t\t\t\t\tbuffer = buffer.concat(removed);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn buffer;\r\n\t\t\tdefault:\r\n\t\t\t\treturn buffer;\r\n\t\t\t}\r\n\t\t},\r\n\t\tunrender: function(context, buffer){\r\n\t\t\tif(!this._rendered){\r\n\t\t\t\treturn buffer;\r\n\t\t\t}\r\n\t\t\tthis._rendered = false;\r\n\r\n\t\t\t// Unrender injected nodes\r\n\t\t\tswitch(this._type){\r\n\t\t\tcase \"text\":\r\n\t\t\t\treturn buffer.remove(this._txt);\r\n\t\t\tcase \"injection\":\r\n\t\t\t\treturn this._injection.unrender(context, buffer);\r\n\t\t\tcase \"node\":\r\n\t\t\t\tif(this._node.parentNode === buffer.getParent()){\r\n\t\t\t\t\treturn buffer.remove(this._node);\r\n\t\t\t\t}\r\n\t\t\t\treturn buffer;\r\n\t\t\tcase \"html\":\r\n\t\t\t\tfor(var i = 0, l = this._html.length; i < l; i++){\r\n\t\t\t\t\tbuffer = buffer.remove(this._html[i]);\r\n\t\t\t\t}\r\n\t\t\t\treturn buffer;\r\n\t\t\tdefault:\r\n\t\t\t\treturn buffer;\r\n\t\t\t}\r\n\t\t},\r\n\t\tclone: function(){\r\n\t\t\treturn new this.constructor(this.contents.getExpression());\r\n\t\t}\r\n\t});\r\n\r\n\tdd.ChangeNode = lang.extend(function(node, /*Boolean?*/ up, /*Bookean*/ root){\r\n\t\t// summary:\r\n\t\t//\t\tChanges the parent during render/unrender\r\n\t\tthis.contents = node;\r\n\t\tthis.up = up;\r\n\t\tthis.root = root;\r\n\t},\r\n\t{\r\n\t\trender: function(context, buffer){\r\n\t\t\treturn buffer.setParent(this.contents, this.up, this.root);\r\n\t\t},\r\n\t\tunrender: function(context, buffer){\r\n\t\t\tif(!buffer.getParent()){\r\n\t\t\t\treturn buffer;\r\n\t\t\t}\r\n\t\t\treturn buffer.setParent(this.contents);\r\n\t\t},\r\n\t\tclone: function(){\r\n\t\t\treturn new this.constructor(this.contents, this.up, this.root);\r\n\t\t}\r\n\t});\r\n\r\n\tdd.AttributeNode = lang.extend(function(key, value){\r\n\t\t// summary\r\n\t\t//\t\tWorks on attributes\r\n\t\tthis.key = key;\r\n\t\tthis.value = value;\r\n\t\tthis.contents = value;\r\n\t\tif(this._pool[value]){\r\n\t\t\tthis.nodelist = this._pool[value];\r\n\t\t}else{\r\n\t\t\tif(!(this.nodelist = dd.quickFilter(value))){\r\n\t\t\t\tthis.nodelist = (new dd.Template(value, true)).nodelist;\r\n\t\t\t}\r\n\t\t\tthis._pool[value] = this.nodelist;\r\n\t\t}\r\n\r\n\t\tthis.contents = \"\";\r\n\t},\r\n\t{\r\n\t\t_pool: {},\r\n\t\trender: function(context, buffer){\r\n\t\t\tvar key = this.key;\r\n\t\t\tvar value = this.nodelist.dummyRender(context);\r\n\t\t\tif(dd.BOOLS[key]){\r\n\t\t\t\tvalue = !(value == \"false\" || value == \"undefined\" || !value);\r\n\t\t\t}\r\n\t\t\tif(value !== this.contents){\r\n\t\t\t\tthis.contents = value;\r\n\t\t\t\treturn buffer.setAttribute(key, value);\r\n\t\t\t}\r\n\t\t\treturn buffer;\r\n\t\t},\r\n\t\tunrender: function(context, buffer){\r\n\t\t\tthis.contents = \"\";\r\n\t\t\treturn buffer.remove(this.key);\r\n\t\t},\r\n\t\tclone: function(buffer){\r\n\t\t\treturn new this.constructor(this.key, this.value);\r\n\t\t}\r\n\t});\r\n\r\n\tdd._DomTextNode = lang.extend(function(str){\r\n\t\t// summary\r\n\t\t//\t\tAdds a straight text node without any processing\r\n\t\tthis.contents = document.createTextNode(str);\r\n\t\tthis.upcoming = str;\r\n\t},\r\n\t{\r\n\t\tset: function(data){\r\n\t\t\tthis.upcoming = data;\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\trender: function(context, buffer){\r\n\t\t\tif(this.contents.data != this.upcoming){\r\n\t\t\t\tvar old = this.contents.data;\r\n\t\t\t\tthis.contents.data = this.upcoming;\r\n\t\t\t\tbuffer.onChangeData && buffer.onChangeData(this.contents, old, this.upcoming);\r\n\t\t\t}\r\n\t\t\treturn buffer.concat(this.contents);\r\n\t\t},\r\n\t\tunrender: function(context, buffer){\r\n\t\t\treturn buffer.remove(this.contents);\r\n\t\t},\r\n\t\tisEmpty: function(){\r\n\t\t\treturn !lang.trim(this.contents.data);\r\n\t\t},\r\n\t\tclone: function(){\r\n\t\t\treturn new this.constructor(this.contents.data);\r\n\t\t}\r\n\t});\r\n\r\n\tdd._DomParser = lang.extend(function(tokens){\r\n\t\t// summary:\r\n\t\t//\t\tTurn a simple array into a set of objects\r\n\t\t// description:\r\n\t\t//\t\tThis is also used by all tags to move through\r\n\t\t//\t\tthe list of nodes.\r\n\t\tthis.contents = tokens;\r\n\t},\r\n\t{\r\n\t\ti: 0,\r\n\t\tparse: function(/*Array?*/ stop_at){\r\n\t\t\tvar terminators = {};\r\n\t\t\tvar tokens = this.contents;\r\n\t\t\tif(!stop_at){\r\n\t\t\t\tstop_at = [];\r\n\t\t\t}\r\n\t\t\tfor(var i = 0; i < stop_at.length; i++){\r\n\t\t\t\tterminators[stop_at[i]] = true;\r\n\t\t\t}\r\n\t\t\tvar nodelist = new dd._DomNodeList();\r\n\t\t\twhile(this.i < tokens.length){\r\n\t\t\t\tvar token = tokens[this.i++];\r\n\t\t\t\tvar type = token[0];\r\n\t\t\t\tvar value = token[1];\r\n\t\t\t\tif(type == dd.TOKEN_CUSTOM){\r\n\t\t\t\t\tnodelist.push(value);\r\n\t\t\t\t}else if(type == dd.TOKEN_CHANGE){\r\n\t\t\t\t\tvar changeNode = new dd.ChangeNode(value, token[2], token[3]);\r\n\t\t\t\t\tvalue[changeNode.attr] = changeNode;\r\n\t\t\t\t\tnodelist.push(changeNode);\r\n\t\t\t\t}else if(type == dd.TOKEN_ATTR){\r\n\t\t\t\t\tvar fn = ddt.getTag(\"attr:\" + token[2], true);\r\n\t\t\t\t\tif(fn && token[3]){\r\n\t\t\t\t\t\tif (token[3].indexOf(\"{%\") != -1 || token[3].indexOf(\"{{\") != -1) {\r\n\t\t\t\t\t\t\tvalue.setAttribute(token[2], \"\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tnodelist.push(fn(null, new dd.Token(type, token[2] + \" \" + token[3])));\r\n\t\t\t\t\t}else if(lang.isString(token[3])){\r\n\t\t\t\t\t\tif(token[2] == \"style\" || token[3].indexOf(\"{%\") != -1 || token[3].indexOf(\"{{\") != -1){\r\n\t\t\t\t\t\t\tnodelist.push(new dd.AttributeNode(token[2], token[3]));\r\n\t\t\t\t\t\t}else if(lang.trim(token[3])){\r\n\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\thtml.attr(value, token[2], token[3]);\r\n\t\t\t\t\t\t\t}catch(e){}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else if(type == dd.TOKEN_NODE){\r\n\t\t\t\t\tvar fn = ddt.getTag(\"node:\" + value.tagName.toLowerCase(), true);\r\n\t\t\t\t\tif(fn){\r\n\t\t\t\t\t\t// TODO: We need to move this to tokenization so that it's before the\r\n\t\t\t\t\t\t//\t\t\t\tnode and the parser can be passed here instead of null\r\n\t\t\t\t\t\tnodelist.push(fn(null, new dd.Token(type, value), value.tagName.toLowerCase()));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnodelist.push(new dd._DomNode(value));\r\n\t\t\t\t}else if(type == dd.TOKEN_VAR){\r\n\t\t\t\t\tnodelist.push(new dd._DomVarNode(value));\r\n\t\t\t\t}else if(type == dd.TOKEN_TEXT){\r\n\t\t\t\t\tnodelist.push(new dd._DomTextNode(value.data || value));\r\n\t\t\t\t}else if(type == dd.TOKEN_BLOCK){\r\n\t\t\t\t\tif(terminators[value]){\r\n\t\t\t\t\t\t--this.i;\r\n\t\t\t\t\t\treturn nodelist;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar cmd = value.split(/\\s+/g);\r\n\t\t\t\t\tif(cmd.length){\r\n\t\t\t\t\t\tcmd = cmd[0];\r\n\t\t\t\t\t\tvar fn = ddt.getTag(cmd);\r\n\t\t\t\t\t\tif(typeof fn != \"function\"){\r\n\t\t\t\t\t\t\tthrow new Error(\"Function not found for \" + cmd);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar tpl = fn(this, new dd.Token(type, value));\r\n\t\t\t\t\t\tif(tpl){\r\n\t\t\t\t\t\t\tnodelist.push(tpl);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(stop_at.length){\r\n\t\t\t\tthrow new Error(\"Could not find closing tag(s): \" + stop_at.toString());\r\n\t\t\t}\r\n\r\n\t\t\treturn nodelist;\r\n\t\t},\r\n\t\tnext_token: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the next token in the list.\r\n\t\t\tvar token = this.contents[this.i++];\r\n\t\t\treturn new dd.Token(token[0], token[1]);\r\n\t\t},\r\n\t\tdelete_first_token: function(){\r\n\t\t\tthis.i++;\r\n\t\t},\r\n\t\tskip_past: function(endtag){\r\n\t\t\treturn dd._Parser.prototype.skip_past.call(this, endtag);\r\n\t\t},\r\n\t\tcreate_variable_node: function(expr){\r\n\t\t\treturn new dd._DomVarNode(expr);\r\n\t\t},\r\n\t\tcreate_text_node: function(expr){\r\n\t\t\treturn new dd._DomTextNode(expr || \"\");\r\n\t\t},\r\n\t\tgetTemplate: function(/*String*/ loc){\r\n\t\t\treturn new dd.DomTemplate(ddh.getTemplate(loc));\r\n\t\t}\r\n\t});\r\n\r\n\treturn ddh;\r\n});\r\n"]}