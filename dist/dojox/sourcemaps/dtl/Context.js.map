{"version":3,"sources":["dtl/Context.js"],"names":["define","lang","dd","Context","extend","dict","this","_this","_Context","call","prototype","getKeys","keys","key","hasOwnProperty","push","obj","delegate","filter","i","arg","context","arguments","setThis","scope","getThis","hasKey","_getter"],"mappings":";;;;;;;AAAAA,QACC,kBACA,WACE,SAASC,EAAKC,GAChB,OAAOA,EAAGC,QAAUF,EAAKG,OAAO,SAAmBC,GAGlDC,KAAKC,SACLL,EAAGM,SAASC,KAAKH,KAAMD,IACrBH,EAAGM,SAASE,WAEdC,QAAS,WAGR,IAAIC,KACJ,IAAI,IAAIC,KAAOP,KACXA,KAAKQ,eAAeD,IAAe,SAAPA,GAC9BD,EAAKG,KAAKF,GAGZ,OAAOD,GAERR,OAAQ,SAAsCY,GAK7C,OAAQf,EAAKgB,SAASX,KAAMU,IAE7BE,OAAQ,SAAgDA,GAGvD,IAEIC,EAAGC,EAFHC,EAAU,IAAInB,EAAGC,QACjBS,KAEJ,GAAGM,aAAkBhB,EAAGC,QACvBS,EAAOM,EAAOP,eACT,GAAoB,iBAAVO,EACf,IAAI,IAAIL,KAAOK,EACdN,EAAKG,KAAKF,QAGX,IAAIM,EAAI,EAAGC,EAAME,UAAUH,GAAIA,IACb,iBAAPC,GACTR,EAAKG,KAAKK,GAKb,IAAID,EAAI,EAAQN,EAAMD,EAAKO,GAAIA,IAC9BE,EAAQR,GAAOP,KAAKO,GAGrB,OAAOQ,GAERE,QAAS,SAAoBC,GAK5BlB,KAAKC,MAAQiB,GAEdC,QAAS,WAGR,OAAOnB,KAAKC,OAEbmB,OAAQ,SAAmBb,GAK1B,GAAGP,KAAKqB,cAEU,IADPrB,KAAKqB,QAAQd,GAEtB,OAAO,EAIT,YAAuB,IAAbP,KAAKO","file":"../../dtl/Context.js","sourcesContent":["define([\r\n\t\"dojo/_base/lang\",\r\n\t\"./_base\"\r\n], function(lang,dd){\r\n\treturn dd.Context = lang.extend(function(/*Object*/dict){\r\n\t \t// summary:\r\n\t \t//\t\tRepresents a runtime context used by DTL templates.\r\n\t\tthis._this = {};\r\n\t\tdd._Context.call(this, dict);\t// TODO: huh?\r\n\t}, dd._Context.prototype,\t\t// TODO: huh?\r\n\t{\r\n\t\tgetKeys: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the set of keys exported by this context.\r\n\t\t\tvar keys = [];\r\n\t\t\tfor(var key in this){\r\n\t\t\t\tif(this.hasOwnProperty(key) && key != \"_this\"){\r\n\t\t\t\t\tkeys.push(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn keys;\r\n\t\t},\r\n\t\textend: function(/*dojox/dtl/Context|Object*/ obj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns a clone of this context object, with the items from the passed objecct mixed in.\r\n\t\t\t// obj:\r\n\t\t\t//\t\tThe object to extend.\r\n\t\t\treturn  lang.delegate(this, obj);\r\n\t\t},\r\n\t\tfilter: function(/*dojox/dtl/Context|Object|String...*/ filter){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns a clone of this context, only containing the items defined in the filter.\r\n\t\t\tvar context = new dd.Context();\r\n\t\t\tvar keys = [];\r\n\t\t\tvar i, arg;\r\n\t\t\tif(filter instanceof dd.Context){\r\n\t\t\t\tkeys = filter.getKeys();\r\n\t\t\t}else if(typeof filter == \"object\"){\r\n\t\t\t\tfor(var key in filter){\r\n\t\t\t\t\tkeys.push(key);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tfor(i = 0; arg = arguments[i]; i++){\r\n\t\t\t\t\tif(typeof arg == \"string\"){\r\n\t\t\t\t\t\tkeys.push(arg);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor(i = 0, key; key = keys[i]; i++){\r\n\t\t\t\tcontext[key] = this[key];\r\n\t\t\t}\r\n\r\n\t\t\treturn context;\r\n\t\t},\r\n\t\tsetThis: function(/*Object*/ scope){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets the object on which to perform operations. \r\n\t\t\t// scope:\r\n\t\t\t//\t\tthe this ref.\r\n\t\t\tthis._this = scope;\r\n\t\t},\r\n\t\tgetThis: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGets the object on which to perform operations. \r\n\t\t\treturn this._this;\r\n\t\t},\r\n\t\thasKey: function(/*String*/key){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tIndicates whether the specified key is defined on this context.\r\n\t\t\t// key:\r\n\t\t\t//\t\tThe key to look up.\r\n\t\t\tif(this._getter){\r\n\t\t\t\tvar got = this._getter(key);\r\n\t\t\t\tif(typeof got != \"undefined\"){\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof this[key] != \"undefined\"){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\treturn false;\r\n\t\t}\r\n\t});\r\n});"]}