{"version":3,"sources":["dtl/tests/context.js"],"names":["dojo","provide","require","doh","register","t","context","dojox","dtl","Context","foo","bar","is","push","found","key","get","tpl","Template","render","f","hasOwnProperty","pop","e","message","baz","filtered","filter","extended","extend","barr","bazz"],"mappings":";;;;;;;AAAAA,KAAKC,QAAQ,2BAEbD,KAAKE,QAAQ,aACbF,KAAKE,QAAQ,qBAEbC,IAAIC,SAAS,qBAEX,SAA+BC,GAC9B,IAAIC,EAAU,IAAIC,MAAMC,IAAIC,SAAUC,IAAK,MAAOC,IAAK,QACvDN,EAAEO,GAAG,MAAON,EAAQI,KACpBL,EAAEO,GAAG,MAAON,EAAQK,MAErB,SAA2BN,GAC1B,IAAIC,EAAU,IAAIC,MAAMC,IAAIC,SAAUC,IAAK,MAAOC,IAAK,QACvDL,EAAUA,EAAQO,OAClB,IAAIC,GAAQ,EACZ,IAAI,IAAIC,KAAOT,EACJ,OAAPS,GAAuB,OAAPA,IAClBD,GAAQ,GAGVT,EAAEA,EAAES,IAEL,SAA6BT,GAC5B,IAAIC,EAAU,IAAIC,MAAMC,IAAIC,SAASC,IAAK,MAAOC,IAAK,MAAOK,IAAK,SAASD,GAAM,OAAOA,EAAM,UAC1FE,EAAM,IAAIV,MAAMC,IAAIU,SAAS,uBACjCb,EAAEO,GAAG,kBAAmBK,EAAIE,OAAOb,KAEpC,SAA0BD,GACzB,IAAIC,EAAU,IAAIC,MAAMC,IAAIC,SAAUC,IAAK,MAAOC,IAAK,QACvDL,EAAUA,EAAQO,OAClBR,EAAEe,EAAEd,EAAQe,eAAe,QAC3BhB,EAAEe,EAAEd,EAAQe,eAAe,QAC3Bf,EAAUA,EAAQgB,MAClBjB,EAAEO,GAAG,MAAON,EAAQI,KACpBL,EAAEO,GAAG,MAAON,EAAQK,MAErB,SAA8BN,GAC7B,IAAIC,EAAU,IAAIC,MAAMC,IAAIC,QAC5B,IACCH,EAAUA,EAAQgB,MAClBjB,EAAEA,GAAE,GACJ,MAAMkB,GACNlB,EAAEO,GAAG,gCAAiCW,EAAEC,WAG1C,SAA6BnB,GAC5B,IAAIC,EAAU,IAAIC,MAAMC,IAAIC,SAAUC,IAAK,MAAOC,IAAK,MAAOc,IAAK,UAC/DC,EAAWpB,EAAQqB,OAAO,MAAO,OACrCtB,EAAEO,GAAGc,EAAShB,IAAK,OACnBL,EAAEO,GAAGc,EAASf,IAAK,OACnBN,EAAEe,EAAEM,EAASD,KAEbC,EAAWpB,EAAQqB,QAAShB,KAAK,EAAMc,KAAK,IAC5CpB,EAAEe,EAAEM,EAAShB,KACbL,EAAEO,GAAGc,EAASf,IAAK,OACnBN,EAAEO,GAAGc,EAASD,IAAK,SAEnBC,EAAWpB,EAAQqB,OAAO,IAAIpB,MAAMC,IAAIC,SAAUC,KAAK,EAAMe,KAAK,KAClEpB,EAAEO,GAAGc,EAAShB,IAAK,OACnBL,EAAEe,EAAEM,EAASf,KACbN,EAAEO,GAAGc,EAASD,IAAK,UAEpB,SAA6BpB,GAC5B,IAAIC,EAAU,IAAIC,MAAMC,IAAIC,SAAUC,IAAK,QACvCkB,EAAWtB,EAAQuB,QAASlB,IAAK,MAAOc,IAAK,UACjDpB,EAAEO,GAAGgB,EAASlB,IAAK,OACnBL,EAAEO,GAAGgB,EAASjB,IAAK,OACnBN,EAAEO,GAAGgB,EAASH,IAAK,SAEnBG,EAAWtB,EAAQuB,QAASC,KAAM,MAAOC,KAAM,UAC/C1B,EAAEO,GAAGgB,EAASlB,IAAK,OACnBL,EAAEe,EAAEQ,EAASjB,KACbN,EAAEe,EAAEQ,EAASH,KACbpB,EAAEO,GAAGgB,EAASE,KAAM,OACpBzB,EAAEO,GAAGgB,EAASG,KAAM,SAEpB1B,EAAEe,EAAEd,EAAQK,KACZN,EAAEe,EAAEd,EAAQmB,KACZpB,EAAEe,EAAEd,EAAQwB,MACZzB,EAAEe,EAAEd,EAAQyB","file":"../../../dtl/tests/context.js","sourcesContent":["dojo.provide(\"dojox.dtl.tests.context\");\r\n\r\ndojo.require(\"dojox.dtl\");\r\ndojo.require(\"dojox.dtl.Context\");\r\n\r\ndoh.register(\"dojox.dtl.context\",\r\n\t[\r\n\t\tfunction test_context_creation(t){\r\n\t\t\tvar context = new dojox.dtl.Context({ foo: \"foo\", bar: \"bar\" });\r\n\t\t\tt.is(\"foo\", context.foo);\r\n\t\t\tt.is(\"bar\", context.bar);\r\n\t\t},\r\n\t\tfunction test_context_push(t){\r\n\t\t\tvar context = new dojox.dtl.Context({ foo: \"foo\", bar: \"bar\" });\r\n\t\t\tcontext = context.push();\r\n\t\t\tvar found = false;\r\n\t\t\tfor(var key in context){\r\n\t\t\t\tif(key == \"foo\" || key == \"bar\"){\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tt.t(found);\r\n\t\t},\r\n\t\tfunction test_context_getter(t){\r\n\t\t\tvar context = new dojox.dtl.Context({foo: \"foo\", bar: \"bar\", get: function(key){ return key + \"TEST\"; }});\r\n\t\t\tvar tpl = new dojox.dtl.Template(\"{{ foo }}-{{ bar }}\");\r\n\t\t\tt.is(\"fooTEST-barTEST\", tpl.render(context));\r\n\t\t},\r\n\t\tfunction test_context_pop(t){\r\n\t\t\tvar context = new dojox.dtl.Context({ foo: \"foo\", bar: \"bar\" });\r\n\t\t\tcontext = context.push();\r\n\t\t\tt.f(context.hasOwnProperty(\"foo\"));\r\n\t\t\tt.f(context.hasOwnProperty(\"bar\"));\r\n\t\t\tcontext = context.pop();\r\n\t\t\tt.is(\"foo\", context.foo);\r\n\t\t\tt.is(\"bar\", context.bar);\r\n\t\t},\r\n\t\tfunction test_context_overpop(t){\r\n\t\t\tvar context = new dojox.dtl.Context();\r\n\t\t\ttry{\r\n\t\t\t\tcontext = context.pop();\r\n\t\t\t\tt.t(false);\r\n\t\t\t}catch(e){\r\n\t\t\t\tt.is(\"pop() called on empty Context\", e.message);\r\n\t\t\t}\r\n\t\t},\r\n\t\tfunction test_context_filter(t){\r\n\t\t\tvar context = new dojox.dtl.Context({ foo: \"one\", bar: \"two\", baz: \"three\" });\r\n\t\t\tvar filtered = context.filter(\"foo\", \"bar\");\r\n\t\t\tt.is(filtered.foo, \"one\");\r\n\t\t\tt.is(filtered.bar, \"two\");\r\n\t\t\tt.f(filtered.baz);\r\n\r\n\t\t\tfiltered = context.filter({ bar: true, baz: true });\r\n\t\t\tt.f(filtered.foo);\r\n\t\t\tt.is(filtered.bar, \"two\");\r\n\t\t\tt.is(filtered.baz, \"three\");\r\n\r\n\t\t\tfiltered = context.filter(new dojox.dtl.Context({ foo: true, baz: true }));\r\n\t\t\tt.is(filtered.foo, \"one\");\r\n\t\t\tt.f(filtered.bar);\r\n\t\t\tt.is(filtered.baz, \"three\");\r\n\t\t},\r\n\t\tfunction test_context_extend(t){\r\n\t\t\tvar context = new dojox.dtl.Context({ foo: \"one\" });\r\n\t\t\tvar extended = context.extend({ bar: \"two\", baz: \"three\" });\r\n\t\t\tt.is(extended.foo, \"one\");\r\n\t\t\tt.is(extended.bar, \"two\");\r\n\t\t\tt.is(extended.baz, \"three\");\r\n\r\n\t\t\textended = context.extend({ barr: \"two\", bazz: \"three\" });\r\n\t\t\tt.is(extended.foo, \"one\");\r\n\t\t\tt.f(extended.bar);\r\n\t\t\tt.f(extended.baz);\r\n\t\t\tt.is(extended.barr, \"two\");\r\n\t\t\tt.is(extended.bazz, \"three\");\r\n\r\n\t\t\tt.f(context.bar)\r\n\t\t\tt.f(context.baz);\r\n\t\t\tt.f(context.barr);\r\n\t\t\tt.f(context.bazz);\r\n\t\t}\r\n\t]\r\n);"]}