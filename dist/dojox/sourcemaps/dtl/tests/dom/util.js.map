{"version":3,"sources":["dtl/tests/dom/util.js"],"names":["dojo","provide","require","dojox","dtl","DomBuffer","prototype","onClone","from","to","group","clones","this","_clones","i","item","j","push","onAddEvent","node","type","description","evt","events","_events","found","tests","dom","util","render","template","context","div","document","createElement","style","attach","appendChild","body","buffer","getBuffer","canvas","Render","first","serialize","domNode","tokens","toString","second","doh","is","e","parentNode","removeChild","output","types","nodeType","name","nodeName","toLowerCase","string","Builder","append","attributes","filter","TOKEN_ATTR","isString","trim","map","attribute","value","className","htmlFor","checked","disabled","readonly","attr","getAttribute","tagName","isIE","hash","location","href","lastIndexOf","substring","split","pop","join","indexOf","replace","decodeURIComponent","childNodes","length","forEach","nodeValue"],"mappings":"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","file":"../../../../dtl/tests/dom/util.js","sourcesContent":["dojo.provide(\"dojox.dtl.tests.dom.util\");\r\n\r\ndojo.require(\"dojox.dtl.dom\");\r\ndojo.require(\"dojox.dtl.render.dom\");\r\ndojo.require(\"dojox.string.Builder\");\r\n\r\ndojox.dtl.DomBuffer.prototype.onClone = function(from, to){\r\n\tvar clones = this._clones = this._clones || [];\r\n\r\n\tfor(var i = 0, group; group = clones[i]; i++){\r\n\t\tfor(var j = 0, item; item = group[j]; j++){\r\n\t\t\tif(item === from){\r\n\t\t\t\tgroup.push(to);\r\n\t\t\t\treturn\r\n\t\t\t}else if(item === to){\r\n\t\t\t\tgroup.push(from);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tclones.push([from, to]);\r\n}\r\ndojox.dtl.DomBuffer.prototype.onAddEvent = function(node, type, description){\r\n\tvar events = this._events = this._events || [];\r\n\r\n\tvar found = false;\r\n\tfor(var i = 0, evt; evt = events[i]; i++){\r\n\t\tif(evt[0] === node){\r\n\t\t\tfound = true;\r\n\t\t\tevt[1] = type;\r\n\t\t\tevt[2] = description;\r\n\t\t}\r\n\t}\r\n\r\n\tif(!found){\r\n\t\tevents.push([node, type, description]);\r\n\t}\r\n}\r\n\r\ndojox.dtl.tests.dom.util.render = function(/*DomTemplate*/ template, /*Context*/ context) {\r\n\ttry {\r\n\t\tvar div = document.createElement(\"div\");\r\n\t\tdojo.style(div, \"visibility\", \"hidden\");\r\n\t\tvar attach = document.createElement(\"div\");\r\n\t\tdiv.appendChild(attach);\r\n\t\tdojo.body().appendChild(div);\r\n\r\n\t\tvar buffer = template.getBuffer();\r\n\t\tvar canvas = new dojox.dtl.render.dom.Render(attach, template);\r\n\t\tcanvas.render(context, template, buffer);\r\n\t\tvar clones = buffer._clones;\r\n\t\tvar events = buffer._events;\r\n\r\n\t\tvar first = dojox.dtl.tests.dom.util.serialize(canvas.domNode, template.tokens, clones, events).toString();\r\n\r\n\t\tbuffer = template.getBuffer();\r\n\t\tbuffer._clones = clones;\r\n\t\tbuffer._events = events;\r\n\t\tcanvas.render(context, template, buffer);\r\n\r\n\t\tvar second = dojox.dtl.tests.dom.util.serialize(canvas.domNode, template.tokens, clones, events).toString();\r\n\r\n\t\tdoh.is(\"Compare re-render: \" + first, \"Compare re-render: \" + second);\r\n\t\treturn first;\r\n\t}\r\n\tcatch(e){\r\n\t\tthrow e;\r\n\t}finally{\r\n\t\tdiv.parentNode.removeChild(div);\r\n\t}\r\n}\r\n\r\ndojox.dtl.tests.dom.util.serialize = function(node, tokens, clones, events, output) {\r\n\tvar types = dojox.dtl.dom.types;\r\n\tclones = clones || [];\r\n\tevents = events || [];\r\n\r\n\tif (node.nodeType == 3) {\r\n\t\toutput.append(node.nodeValue);\r\n\t}else{\r\n\t\tvar name = node.nodeName.toLowerCase();\r\n\t\tif(!name){ return; }\r\n\r\n\t\tif (!output) {\r\n\t\t\toutput = new dojox.string.Builder();\r\n\t\t}\r\n\t\toutput.append(\"<\").append(name);\r\n\r\n\t\tvar found = {};\r\n\t\tvar attributes = dojo.filter(tokens, function(item){\r\n\t\t\treturn item[0] == dojox.dtl.TOKEN_ATTR && dojo.isString(item[3]) && dojo.trim(item[3]);\r\n\t\t});\r\n\t\tattributes = dojo.map(attributes, \"return item[2];\");\r\n\t\tattributes = dojo.filter(attributes, function(attribute){\r\n\t\t\tif(!found[attribute]){\r\n\t\t\t\treturn found[attribute] = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tfor(var i = 0, attribute; attribute = attributes[i]; i++){\r\n\t\t\tvar value = \"\";\r\n\t\t\tif(attribute == \"class\"){\r\n\t\t\t\tvalue = node.className || value;\r\n\t\t\t}else if(attribute == \"for\"){\r\n\t\t\t\tvalue = node.htmlFor || value;\r\n\t\t\t}else{\r\n\t\t\t\tvar bools = {checked: 1, disabled: 1, readonly: 1};\r\n\t\t\t\tif(bools[attribute] && typeof node[attribute] == \"boolean\"){\r\n\t\t\t\t\tvalue = dojo.attr(node, attribute) ? \"true\" : \"false\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvalue = node.getAttribute(attribute, 2) || value;\r\n\t\t\t\t}\r\n\t\t\t\tif(node.tagName == \"TEXTAREA\" && (attribute == \"type\" || attribute == \"value\")){\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif(node.tagName == \"INPUT\" && attribute == \"type\" && value == \"text\"){\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif(dojo.isIE && (attribute == \"href\" || attribute == \"src\")){\r\n\t\t\t\t\tvar hash = location.href.lastIndexOf(location.hash);\r\n\t\t\t\t\tvar href = location.href.substring(0, hash).split(\"/\");\r\n\t\t\t\t\thref.pop();\r\n\t\t\t\t\thref = href.join(\"/\") + \"/\";\r\n\t\t\t\t\tif(value.indexOf(href) == 0){\r\n\t\t\t\t\t\tvalue = value.replace(href, \"\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalue = decodeURIComponent(value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(value !== \"\"){\r\n\t\t\t\toutput.append(\" \").append(attribute).append('=\"').append(value.replace(/\"/g, '\\\\\"')).append('\"');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Deal with events\r\n\t\tif(events){\r\n\t\t\tfor(var i = 0, evt; evt = events[i]; i++){\r\n\t\t\t\tif(evt[0] === node){\r\n\t\t\t\t\toutput.append(\" \").append(evt[1]).append('=\"').append(evt[2]).append('\"');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!node.childNodes.length){\r\n\t\t\toutput.append(\"/>\");\r\n\t\t}else{\r\n\t\t\toutput.append(\">\");\r\n\t\t\tdojo.forEach(node.childNodes, function(node){\r\n\t\t\t\tdojox.dtl.tests.dom.util.serialize(node, tokens, clones, events, output);\r\n\t\t\t});\r\n\t\t\toutput.append(\"</\").append(name).append(\">\");\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n}"]}