{"version":3,"sources":["dtl/_base.js"],"names":["define","kernel","lang","Tokenize","json","dom","xhr","StringBuilder","deferred","experimental","dd","getObject","_base","TOKEN_BLOCK","TOKEN_VAR","TOKEN_COMMENT","TOKEN_TEXT","_Context","extend","dict","_mixin","this","get","_getter","push","last","context","delegate","pop","Error","key","otherwise","n","_normalize","got","undefined","value","Date","year","getFullYear","month","getMonth","day","getDate","date","slice","hour","getHours","minute","getMinutes","second","getSeconds","microsecond","getMilliseconds","update","smart_split_re","split_re","split","splitter","limit","RegExp","global","exec","part","parts","lastIndex","i","length","Token","token_type","contents","String","trim","prototype","apply","arguments","split_contents","bit","bits","charAt","replace","ddt","text","_get","module","name","errorless","params","register","toLowerCase","fn","deps","indexOf","mod","test","require","parent","getTag","getFilter","getTemplate","file","Template","getTemplateString","_getText","toString","_resolveLazy","location","sync","fromJson","handleAs","url","_resolveTemplateArg","arg","_isTemplate","d","callback","match","_resolveContextArg","constructor","Object","_re","tokenize","str","_parseDelims","varr","load","tag","template","isString","tokens","parser","_Parser","nodelist","parse","node","addCallback","contextObject","content","render","forEach","item","innerHTML","byId","buffer","getBuffer","qfRe","quickFilter","_QuickNodeList","token","_Filter","_NodeList","l","resolve","concat","dummyRender","clone","cache","_cache","filters","_tokenize","_values","0","1","2","8","_args","4","5","6","7","pos","has","isFunction","getExpression","filter","resolvePath","path","current","first","isNaN","parseInt","self","getThis","alters_data","call","base","isObject","items","safe","parseFloat","_TextNode","_Node","obj","set","data","isEmpty","nodes","unrender","rtrim","_VarNode","escape","_noOpNode","stop_at","terminators","type","cmd","next_token","delete_first_token","skip_past","endtag","create_variable_node","expr","create_text_node","_registry","attributes","tags","entry","registry","getAttributeTags","_any","locations","isArray","substr","attr","escapeamp","escapelt","escapegt","escapeqt","escapedblqt","mark_safe","logic","loader","misc","loop","dates","htmlstrings","integers","lists","strings"],"mappings":"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","file":"../../dtl/_base.js","sourcesContent":["define([\r\n\t\"dojo/_base/kernel\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojox/string/tokenize\",\r\n\t\"dojo/_base/json\",\r\n\t\"dojo/dom\",\r\n\t\"dojo/_base/xhr\",\r\n\t\"dojox/string/Builder\",\r\n\t\"dojo/_base/Deferred\"], \r\n\tfunction(kernel, lang, Tokenize, json, dom, xhr, StringBuilder, deferred){\r\n\r\n\tkernel.experimental(\"dojox.dtl\");\r\n\r\n\tvar dd = lang.getObject(\"dojox.dtl\", true);\r\n/*=====\r\n\tdd = {\r\n\t\t// TODO: summary\r\n\t};\r\n=====*/\r\n\r\n\tdd._base = {};\r\n\r\n\tdd.TOKEN_BLOCK = -1;\r\n\tdd.TOKEN_VAR = -2;\r\n\tdd.TOKEN_COMMENT = -3;\r\n\tdd.TOKEN_TEXT = 3;\r\n\r\n\tdd._Context = lang.extend(function(dict){\r\n\t\t// summary:\r\n\t\t//\t\tPass one of these when rendering a template to tell the template what values to use.\r\n\t\tif(dict){\r\n\t\t\tlang._mixin(this, dict);\r\n\t\t\tif(dict.get){\r\n\t\t\t\t// Preserve passed getter and restore prototype get\r\n\t\t\t\tthis._getter = dict.get;\r\n\t\t\t\tdelete this.get;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tpush: function(){\r\n\t\t\tvar last = this;\r\n\t\t\tvar context = lang.delegate(this);\r\n\t\t\tcontext.pop = function(){ return last; }\r\n\t\t\treturn context;\r\n\t\t},\r\n\t\tpop: function(){\r\n\t\t\tthrow new Error(\"pop() called on empty Context\");\r\n\t\t},\r\n\t\tget: function(key, otherwise){\r\n\t\t\tvar n = this._normalize;\r\n\r\n\t\t\tif(this._getter){\r\n\t\t\t\tvar got = this._getter(key);\r\n\t\t\t\tif(got !== undefined){\r\n\t\t\t\t\treturn n(got);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(this[key] !== undefined){\r\n\t\t\t\treturn n(this[key]);\r\n\t\t\t}\r\n\r\n\t\t\treturn otherwise;\r\n\t\t},\r\n\t\t_normalize: function(value){\r\n\t\t\tif(value instanceof Date){\r\n\t\t\t\tvalue.year = value.getFullYear();\r\n\t\t\t\tvalue.month = value.getMonth() + 1;\r\n\t\t\t\tvalue.day = value.getDate();\r\n\t\t\t\tvalue.date = value.year + \"-\" + (\"0\" + value.month).slice(-2) + \"-\" + (\"0\" + value.day).slice(-2);\r\n\t\t\t\tvalue.hour = value.getHours();\r\n\t\t\t\tvalue.minute = value.getMinutes();\r\n\t\t\t\tvalue.second = value.getSeconds();\r\n\t\t\t\tvalue.microsecond = value.getMilliseconds();\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t},\r\n\t\tupdate: function(dict){\r\n\t\t\tvar context = this.push();\r\n\t\t\tif(dict){\r\n\t\t\t\tlang._mixin(this, dict);\r\n\t\t\t}\r\n\t\t\treturn context;\r\n\t\t}\r\n\t});\r\n\r\n\tvar smart_split_re = /(\"(?:[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"|'(?:[^'\\\\]*(?:\\\\.[^'\\\\]*)*)'|[^\\s]+)/g;\r\n\tvar split_re = /\\s+/g;\r\n\tvar split = function(/*String|RegExp?*/ splitter, /*Integer?*/ limit){\r\n\t\tsplitter = splitter || split_re;\r\n\t\tif(!(splitter instanceof RegExp)){\r\n\t\t\tsplitter = new RegExp(splitter, \"g\");\r\n\t\t}\r\n\t\tif(!splitter.global){\r\n\t\t\tthrow new Error(\"You must use a globally flagged RegExp with split \" + splitter);\r\n\t\t}\r\n\t\tsplitter.exec(\"\"); // Reset the global\r\n\r\n\t\tvar part, parts = [], lastIndex = 0, i = 0;\r\n\t\twhile((part = splitter.exec(this))){\r\n\t\t\tparts.push(this.slice(lastIndex, splitter.lastIndex - part[0].length));\r\n\t\t\tlastIndex = splitter.lastIndex;\r\n\t\t\tif(limit && (++i > limit - 1)){\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tparts.push(this.slice(lastIndex));\r\n\t\treturn parts;\r\n\t};\r\n\r\n\tdd.Token = function(token_type, contents){\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tthis.token_type = token_type;\r\n\t\tthis.contents = new String(lang.trim(contents));\r\n\t\tthis.contents.split = split;\r\n\t\tthis.split = function(){\r\n\t\t\treturn String.prototype.split.apply(this.contents, arguments);\r\n\t\t}\r\n\t};\r\n\tdd.Token.prototype.split_contents = function(/*Integer?*/ limit){\r\n\t\tvar bit, bits = [], i = 0;\r\n\t\tlimit = limit || 999;\r\n\t\twhile(i++ < limit && (bit = smart_split_re.exec(this.contents))){\r\n\t\t\tbit = bit[0];\r\n\t\t\tif(bit.charAt(0) == '\"' && bit.slice(-1) == '\"'){\r\n\t\t\t\tbits.push('\"' + bit.slice(1, -1).replace('\\\\\"', '\"').replace('\\\\\\\\', '\\\\') + '\"');\r\n\t\t\t}else if(bit.charAt(0) == \"'\" && bit.slice(-1) == \"'\"){\r\n\t\t\t\tbits.push(\"'\" + bit.slice(1, -1).replace(\"\\\\'\", \"'\").replace('\\\\\\\\', '\\\\') + \"'\");\r\n\t\t\t}else{\r\n\t\t\t\tbits.push(bit);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn bits;\r\n\t};\r\n\r\n\tvar ddt = dd.text = {\r\n\t\t_get: function(module, name, errorless){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUsed to find both tags and filters\r\n\t\t\tvar params = dd.register.get(module, name.toLowerCase(), errorless);\r\n\t\t\tif(!params){\r\n\t\t\t\tif(!errorless){\r\n\t\t\t\t\tthrow new Error(\"No tag found for \" + name);\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar fn = params[1];\r\n\t\t\tvar deps = params[2];\r\n\r\n\t\t\tvar parts;\r\n\t\t\tif(fn.indexOf(\":\") != -1){\r\n\t\t\t\tparts = fn.split(\":\");\r\n\t\t\t\tfn = parts.pop();\r\n\t\t\t}\r\n\r\n// FIXME: THIS DESIGN DOES NOT WORK WITH ASYNC LOADERS!\r\n\t\t\tvar mod = deps;\r\n\t\t\tif (/\\./.test(deps)) {\r\n\t\t\t\tdeps = deps.replace(/\\./g, \"/\");\r\n\t\t\t}\r\n\t\t\trequire([deps], function(){});\r\n\r\n\t\t\tvar parent = lang.getObject(mod);\r\n\r\n\t\t\treturn parent[fn || name] || parent[name + \"_\"] || parent[fn + \"_\"];\r\n\t\t},\r\n\t\tgetTag: function(name, errorless){\r\n\t\t\treturn ddt._get(\"tag\", name, errorless);\r\n\t\t},\r\n\t\tgetFilter: function(name, errorless){\r\n\t\t\treturn ddt._get(\"filter\", name, errorless);\r\n\t\t},\r\n\t\tgetTemplate: function(file){\r\n\t\t\treturn new dd.Template(ddt.getTemplateString(file));\r\n\t\t},\r\n\t\tgetTemplateString: function(file){\r\n\t\t\treturn xhr._getText(file.toString()) || \"\";\r\n\t\t},\r\n\t\t_resolveLazy: function(location, sync, json){\r\n\t\t\tif(sync){\r\n\t\t\t\tif(json){\r\n\t\t\t\t\treturn json.fromJson(xhr._getText(location)) || {};\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn dd.text.getTemplateString(location);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\treturn xhr.get({\r\n\t\t\t\t\thandleAs: json ? \"json\" : \"text\",\r\n\t\t\t\t\turl: location\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\t_resolveTemplateArg: function(arg, sync){\r\n\t\t\tif(ddt._isTemplate(arg)){\r\n\t\t\t\tif(!sync){\r\n\t\t\t\t\tvar d = new deferred();\r\n\t\t\t\t\td.callback(arg);\r\n\t\t\t\t\treturn d;\r\n\t\t\t\t}\r\n\t\t\t\treturn arg;\r\n\t\t\t}\r\n\t\t\treturn ddt._resolveLazy(arg, sync);\r\n\t\t},\r\n\t\t_isTemplate: function(arg){\r\n\t\t\treturn (arg === undefined) || (typeof arg == \"string\" && (arg.match(/^\\s*[<{]/) || arg.indexOf(\" \") != -1));\r\n\t\t},\r\n\t\t_resolveContextArg: function(arg, sync){\r\n\t\t\tif(arg.constructor == Object){\r\n\t\t\t\tif(!sync){\r\n\t\t\t\t\tvar d = new deferred;\r\n\t\t\t\t\td.callback(arg);\r\n\t\t\t\t\treturn d;\r\n\t\t\t\t}\r\n\t\t\t\treturn arg;\r\n\t\t\t}\r\n\t\t\treturn ddt._resolveLazy(arg, sync, true);\r\n\t\t},\r\n\t\t_re: /(?:\\{\\{\\s*(.+?)\\s*\\}\\}|\\{%\\s*(load\\s*)?(.+?)\\s*%\\})/g,\r\n\t\ttokenize: function(str){\r\n\t\t\treturn Tokenize(str, ddt._re, ddt._parseDelims);\r\n\t\t},\r\n\t\t_parseDelims: function(varr, load, tag){\r\n\t\t\tif(varr){\r\n\t\t\t\treturn [dd.TOKEN_VAR, varr];\r\n\t\t\t}else if(load){\r\n\t\t\t\tvar parts = lang.trim(tag).split(/\\s+/g);\r\n\t\t\t\tfor(var i = 0, part; part = parts[i]; i++){\r\n\t\t\t\t\tif (/\\./.test(part)){\r\n\t\t\t\t\t\tpart = part.replace(/\\./g,\"/\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\trequire([part]);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\treturn [dd.TOKEN_BLOCK, tag];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tdd.Template = lang.extend(function(/*String|dojo._Url*/ template, /*Boolean*/ isString){\r\n\t\t// summary:\r\n\t\t//\t\tThe base class for text-based templates.\r\n\t\t// template: String|dojo/_base/url\r\n\t\t//\t\tThe string or location of the string to\r\n\t\t//\t\tuse as a template\r\n\t\t// isString: Boolean\r\n\t\t//\t\tIndicates whether the template is a string or a url.\r\n\t\tvar str = isString ? template : ddt._resolveTemplateArg(template, true) || \"\";\r\n\t\tvar tokens = ddt.tokenize(str);\r\n\t\tvar parser = new dd._Parser(tokens);\r\n\t\tthis.nodelist = parser.parse();\r\n\t},\r\n\t{\r\n\t\tupdate: function(node, context){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUpdates this template according to the given context.\r\n\t\t\t// node: DOMNode|String|dojo/NodeList\r\n\t\t\t//\t\tA node reference or set of nodes\r\n\t\t\t// context: dojo/base/url|String|Object\r\n\t\t\t//\t\tThe context object or location\r\n\t\t\treturn ddt._resolveContextArg(context).addCallback(this, function(contextObject){\r\n\t\t\t\tvar content = this.render(new dd._Context(contextObject));\r\n\t\t\t\tif(node.forEach){\r\n\t\t\t\t\tnode.forEach(function(item){\r\n\t\t\t\t\t\titem.innerHTML = content;\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdom.byId(node).innerHTML = content;\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t});\r\n\t\t},\r\n\t\trender: function(context, buffer){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRenders this template.\r\n\t\t\t// context: Object\r\n\t\t\t//\t\tThe runtime context.\r\n\t\t\t// buffer: StringBuilder?\r\n\t\t\t//\t\tA string buffer.\r\n\t\t\tbuffer = buffer || this.getBuffer();\r\n\t\t\tcontext = context || new dd._Context({});\r\n\t\t\treturn this.nodelist.render(context, buffer) + \"\";\r\n\t\t},\r\n\t\tgetBuffer: function(){\r\n\t\t\treturn new StringBuilder();\r\n\t\t}\r\n\t});\r\n\r\n\tvar qfRe = /\\{\\{\\s*(.+?)\\s*\\}\\}/g;\r\n\tdd.quickFilter = function(str){\r\n\t\tif(!str){\r\n\t\t\treturn new dd._NodeList();\r\n\t\t}\r\n\r\n\t\tif(str.indexOf(\"{%\") == -1){\r\n\t\t\treturn new dd._QuickNodeList(Tokenize(str, qfRe, function(token){\r\n\t\t\t\treturn new dd._Filter(token);\r\n\t\t\t}));\r\n\t\t}\r\n\t};\r\n\r\n\tdd._QuickNodeList = lang.extend(function(contents){\r\n\t\tthis.contents = contents;\r\n\t},\r\n\t{\r\n\t\trender: function(context, buffer){\r\n\t\t\tfor(var i = 0, l = this.contents.length; i < l; i++){\r\n\t\t\t\tif(this.contents[i].resolve){\r\n\t\t\t\t\tbuffer = buffer.concat(this.contents[i].resolve(context));\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbuffer = buffer.concat(this.contents[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn buffer;\r\n\t\t},\r\n\t\tdummyRender: function(context){ return this.render(context, dd.Template.prototype.getBuffer()).toString(); },\r\n\t\tclone: function(buffer){ return this; }\r\n\t});\r\n\r\n\tdd._Filter = lang.extend(function(token){\r\n\t\t// summary:\r\n\t\t//\t\tUses a string to find (and manipulate) a variable\r\n\t\tif(!token) throw new Error(\"Filter must be called with variable name\");\r\n\t\tthis.contents = token;\r\n\r\n\t\tvar cache = this._cache[token];\r\n\t\tif(cache){\r\n\t\t\tthis.key = cache[0];\r\n\t\t\tthis.filters = cache[1];\r\n\t\t}else{\r\n\t\t\tthis.filters = [];\r\n\t\t\tTokenize(token, this._re, this._tokenize, this);\r\n\t\t\tthis._cache[token] = [this.key, this.filters];\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t_cache: {},\r\n\t\t_re: /(?:^_\\(\"([^\\\\\"]*(?:\\\\.[^\\\\\"])*)\"\\)|^\"([^\\\\\"]*(?:\\\\.[^\\\\\"]*)*)\"|^([a-zA-Z0-9_.]+)|\\|(\\w+)(?::(?:_\\(\"([^\\\\\"]*(?:\\\\.[^\\\\\"])*)\"\\)|\"([^\\\\\"]*(?:\\\\.[^\\\\\"]*)*)\"|([a-zA-Z0-9_.]+)|'([^\\\\']*(?:\\\\.[^\\\\']*)*)'))?|^'([^\\\\']*(?:\\\\.[^\\\\']*)*)')/g,\r\n\t\t_values: {\r\n\t\t\t0: '\"', // _(\"text\")\r\n\t\t\t1: '\"', // \"text\"\r\n\t\t\t2: \"\", // variable\r\n\t\t\t8: '\"' // 'text'\r\n\t\t},\r\n\t\t_args: {\r\n\t\t\t4: '\"', // :_(\"text\")\r\n\t\t\t5: '\"', // :\"text\"\r\n\t\t\t6: \"\", // :variable\r\n\t\t\t7: \"'\"// :'text'\r\n\t\t},\r\n\t\t_tokenize: function(){\r\n\t\t\tvar pos, arg;\r\n\r\n\t\t\tfor(var i = 0, has = []; i < arguments.length; i++){\r\n\t\t\t\thas[i] = (arguments[i] !== undefined && typeof arguments[i] == \"string\" && arguments[i]);\r\n\t\t\t}\r\n\r\n\t\t\tif(!this.key){\r\n\t\t\t\tfor(pos in this._values){\r\n\t\t\t\t\tif(has[pos]){\r\n\t\t\t\t\t\tthis.key = this._values[pos] + arguments[pos] + this._values[pos];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tfor(pos in this._args){\r\n\t\t\t\t\tif(has[pos]){\r\n\t\t\t\t\t\tvar value = arguments[pos];\r\n\t\t\t\t\t\tif(this._args[pos] == \"'\"){\r\n\t\t\t\t\t\t\tvalue = value.replace(/\\\\'/g, \"'\");\r\n\t\t\t\t\t\t}else if(this._args[pos] == '\"'){\r\n\t\t\t\t\t\t\tvalue = value.replace(/\\\\\"/g, '\"');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\targ = [!this._args[pos], value];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Get a named filter\r\n\t\t\t\tvar fn = ddt.getFilter(arguments[3]);\r\n\t\t\t\tif(!lang.isFunction(fn)) throw new Error(arguments[3] + \" is not registered as a filter\");\r\n\t\t\t\tthis.filters.push([fn, arg]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetExpression: function(){\r\n\t\t\treturn this.contents;\r\n\t\t},\r\n\t\tresolve: function(context){\r\n\t\t\tif(this.key === undefined){\r\n\t\t\t\treturn \"\";\r\n\t\t\t}\r\n\r\n\t\t\tvar str = this.resolvePath(this.key, context);\r\n\r\n\t\t\tfor(var i = 0, filter; filter = this.filters[i]; i++){\r\n\t\t\t\t// Each filter has the function in [0], a boolean in [1][0] of whether it's a variable or a string\r\n\t\t\t\t// and [1][1] is either the variable name of the string content.\r\n\t\t\t\tif(filter[1]){\r\n\t\t\t\t\tif(filter[1][0]){\r\n\t\t\t\t\t\tstr = filter[0](str, this.resolvePath(filter[1][1], context));\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tstr = filter[0](str, filter[1][1]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tstr = filter[0](str);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn str;\r\n\t\t},\r\n\t\tresolvePath: function(path, context){\r\n\t\t\tvar current, parts;\r\n\t\t\tvar first = path.charAt(0);\r\n\t\t\tvar last = path.slice(-1);\r\n\t\t\tif(!isNaN(parseInt(first))){\r\n\t\t\t\tcurrent = (path.indexOf(\".\") == -1) ? parseInt(path) : parseFloat(path);\r\n\t\t\t}else if(first == '\"' && first == last){\r\n\t\t\t\tcurrent = path.slice(1, -1);\r\n\t\t\t}else{\r\n\t\t\t\tif(path == \"true\"){ return true; }\r\n\t\t\t\tif(path == \"false\"){ return false; }\r\n\t\t\t\tif(path == \"null\" || path == \"None\"){ return null; }\r\n\t\t\t\tparts = path.split(\".\");\r\n\t\t\t\tcurrent = context.get(parts[0]);\r\n\r\n\t\t\t\tif(lang.isFunction(current)){\r\n\t\t\t\t\tvar self = context.getThis && context.getThis();\r\n\t\t\t\t\tif(current.alters_data){\r\n\t\t\t\t\t\tcurrent = \"\";\r\n\t\t\t\t\t}else if(self){\r\n\t\t\t\t\t\tcurrent = current.call(self);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tcurrent = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor(var i = 1; i < parts.length; i++){\r\n\t\t\t\t\tvar part = parts[i];\r\n\t\t\t\t\tif(current){\r\n\t\t\t\t\t\tvar base = current;\r\n\t\t\t\t\t\tif(lang.isObject(current) && part == \"items\" && current[part] === undefined){\r\n\t\t\t\t\t\t\tvar items = [];\r\n\t\t\t\t\t\t\tfor(var key in current){\r\n\t\t\t\t\t\t\t\titems.push([key, current[key]]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcurrent = items;\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(current.get && lang.isFunction(current.get) && current.get.safe){\r\n\t\t\t\t\t\t\tcurrent = current.get(part);\r\n\t\t\t\t\t\t}else if(current[part] === undefined){\r\n\t\t\t\t\t\t\tcurrent = current[part];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tcurrent = current[part];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(lang.isFunction(current)){\r\n\t\t\t\t\t\t\tif(current.alters_data){\r\n\t\t\t\t\t\t\t\tcurrent = \"\";\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tcurrent = current.call(base);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else if(current instanceof Date){\r\n\t\t\t\t\t\t\tcurrent = dd._Context.prototype._normalize(current);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\treturn \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn current;\r\n\t\t}\r\n\t});\r\n\r\n\tdd._TextNode = dd._Node = lang.extend(function(/*Object*/ obj){\r\n\t\t// summary:\r\n\t\t//\t\tBasic catch-all node\r\n\t\tthis.contents = obj;\r\n\t},\r\n\t{\r\n\t\tset: function(data){\r\n\t\t\tthis.contents = data;\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\trender: function(context, buffer){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdds content onto the buffer\r\n\t\t\treturn buffer.concat(this.contents);\r\n\t\t},\r\n\t\tisEmpty: function(){\r\n\t\t\treturn !lang.trim(this.contents);\r\n\t\t},\r\n\t\tclone: function(){ return this; }\r\n\t});\r\n\r\n\tdd._NodeList = lang.extend(function(/*Node[]*/ nodes){\r\n\t\t// summary:\r\n\t\t//\t\tAllows us to render a group of nodes\r\n\t\tthis.contents = nodes || [];\r\n\t\tthis.last = \"\";\r\n\t},\r\n\t{\r\n\t\tpush: function(node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdd a new node to the list\r\n\t\t\tthis.contents.push(node);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tconcat: function(nodes){\r\n\t\t\tthis.contents = this.contents.concat(nodes);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\trender: function(context, buffer){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdds all content onto the buffer\r\n\t\t\tfor(var i = 0; i < this.contents.length; i++){\r\n\t\t\t\tbuffer = this.contents[i].render(context, buffer);\r\n\t\t\t\tif(!buffer) throw new Error(\"Template must return buffer\");\r\n\t\t\t}\r\n\t\t\treturn buffer;\r\n\t\t},\r\n\t\tdummyRender: function(context){\r\n\t\t\treturn this.render(context, dd.Template.prototype.getBuffer()).toString();\r\n\t\t},\r\n\t\tunrender: function(){ return arguments[1]; },\r\n\t\tclone: function(){ return this; },\r\n\t\trtrim: function(){\r\n\t\t\twhile(1){\r\n\t\t\t\ti = this.contents.length - 1;\r\n\t\t\t\tif(this.contents[i] instanceof dd._TextNode && this.contents[i].isEmpty()){\r\n\t\t\t\t\tthis.contents.pop();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t});\r\n\r\n\tdd._VarNode = lang.extend(function(str){\r\n\t\t// summary:\r\n\t\t//\t\tA node to be processed as a variable\r\n\t\tthis.contents = new dd._Filter(str);\r\n\t},\r\n\t{\r\n\t\trender: function(context, buffer){\r\n\t\t\tvar str = this.contents.resolve(context);\r\n\t\t\tif(!str.safe){\r\n\t\t\t\tstr = dd._base.escape(\"\" + str);\r\n\t\t\t}\r\n\t\t\treturn buffer.concat(str);\r\n\t\t}\r\n\t});\r\n\r\n\tdd._noOpNode = new function(){\r\n\t\t// summary:\r\n\t\t//\t\tAdds a no-op node. Useful in custom tags\r\n\t\tthis.render = this.unrender = function(){ return arguments[1]; }\r\n\t\tthis.clone = function(){ return this; }\r\n\t};\r\n\r\n\tdd._Parser = lang.extend(function(tokens){\r\n\t\t// summary:\r\n\t\t//\t\tParser used during initialization and for tag groups.\r\n\t\tthis.contents = tokens;\r\n\t},\r\n\t{\r\n\t\ti: 0,\r\n\t\tparse: function(/*Array?*/ stop_at){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTurns tokens into nodes\r\n\t\t\t// description:\r\n\t\t\t//\t\tSteps into tags are they're found. Blocks use the parse object\r\n\t\t\t//\t\tto find their closing tag (the stop_at array). stop_at is inclusive, it\r\n\t\t\t//\t\treturns the node that matched.\r\n\t\t\tvar terminators = {}, token;\r\n\t\t\tstop_at = stop_at || [];\r\n\t\t\tfor(var i = 0; i < stop_at.length; i++){\r\n\t\t\t\tterminators[stop_at[i]] = true;\r\n\t\t\t}\r\n\r\n\t\t\tvar nodelist = new dd._NodeList();\r\n\t\t\twhile(this.i < this.contents.length){\r\n\t\t\t\ttoken = this.contents[this.i++];\r\n\t\t\t\tif(typeof token == \"string\"){\r\n\t\t\t\t\tnodelist.push(new dd._TextNode(token));\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar type = token[0];\r\n\t\t\t\t\tvar text = token[1];\r\n\t\t\t\t\tif(type == dd.TOKEN_VAR){\r\n\t\t\t\t\t\tnodelist.push(new dd._VarNode(text));\r\n\t\t\t\t\t}else if(type == dd.TOKEN_BLOCK){\r\n\t\t\t\t\t\tif(terminators[text]){\r\n\t\t\t\t\t\t\t--this.i;\r\n\t\t\t\t\t\t\treturn nodelist;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar cmd = text.split(/\\s+/g);\r\n\t\t\t\t\t\tif(cmd.length){\r\n\t\t\t\t\t\t\tcmd = cmd[0];\r\n\t\t\t\t\t\t\tvar fn = ddt.getTag(cmd);\r\n\t\t\t\t\t\t\tif(fn){\r\n\t\t\t\t\t\t\t\tnodelist.push(fn(this, new dd.Token(type, text)));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(stop_at.length){\r\n\t\t\t\tthrow new Error(\"Could not find closing tag(s): \" + stop_at.toString());\r\n\t\t\t}\r\n\r\n\t\t\tthis.contents.length = 0;\r\n\t\t\treturn nodelist;\r\n\t\t},\r\n\t\tnext_token: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the next token in the list.\r\n\t\t\tvar token = this.contents[this.i++];\r\n\t\t\treturn new dd.Token(token[0], token[1]);\r\n\t\t},\r\n\t\tdelete_first_token: function(){\r\n\t\t\tthis.i++;\r\n\t\t},\r\n\t\tskip_past: function(endtag){\r\n\t\t\twhile(this.i < this.contents.length){\r\n\t\t\t\tvar token = this.contents[this.i++];\r\n\t\t\t\tif(token[0] == dd.TOKEN_BLOCK && token[1] == endtag){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthrow new Error(\"Unclosed tag found when looking for \" + endtag);\r\n\t\t},\r\n\t\tcreate_variable_node: function(expr){\r\n\t\t\treturn new dd._VarNode(expr);\r\n\t\t},\r\n\t\tcreate_text_node: function(expr){\r\n\t\t\treturn new dd._TextNode(expr || \"\");\r\n\t\t},\r\n\t\tgetTemplate: function(file){\r\n\t\t\treturn new dd.Template(file);\r\n\t\t}\r\n\t});\r\n\r\n\tdd.register = {\r\n\t\t// summary:\r\n\t\t//\t\tA register for filters and tags.\r\n\t\t\r\n\t\t_registry: {\r\n\t\t\tattributes: [],\r\n\t\t\ttags: [],\r\n\t\t\tfilters: []\r\n\t\t},\r\n\t\tget: function(/*String*/ module, /*String*/ name){\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar registry = dd.register._registry[module + \"s\"];\r\n\t\t\tfor(var i = 0, entry; entry = registry[i]; i++){\r\n\t\t\t\tif(typeof entry[0] == \"string\"){\r\n\t\t\t\t\tif(entry[0] == name){\r\n\t\t\t\t\t\treturn entry;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else if(name.match(entry[0])){\r\n\t\t\t\t\treturn entry;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetAttributeTags: function(){\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar tags = [];\r\n\t\t\tvar registry = dd.register._registry.attributes;\r\n\t\t\tfor(var i = 0, entry; entry = registry[i]; i++){\r\n\t\t\t\tif(entry.length == 3){\r\n\t\t\t\t\ttags.push(entry);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar fn = lang.getObject(entry[1]);\r\n\t\t\t\t\tif(fn && lang.isFunction(fn)){\r\n\t\t\t\t\t\tentry.push(fn);\r\n\t\t\t\t\t\ttags.push(entry);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn tags;\r\n\t\t},\r\n\t\t_any: function(type, base, locations){\r\n\t\t\tfor(var path in locations){\r\n\t\t\t\tfor(var i = 0, fn; fn = locations[path][i]; i++){\r\n\t\t\t\t\tvar key = fn;\r\n\t\t\t\t\tif(lang.isArray(fn)){\r\n\t\t\t\t\t\tkey = fn[0];\r\n\t\t\t\t\t\tfn = fn[1];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(typeof key == \"string\"){\r\n\t\t\t\t\t\tif(key.substr(0, 5) == \"attr:\"){\r\n\t\t\t\t\t\t\tvar attr = fn;\r\n\t\t\t\t\t\t\tif(attr.substr(0, 5) == \"attr:\"){\r\n\t\t\t\t\t\t\t\tattr = attr.slice(5);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdd.register._registry.attributes.push([attr.toLowerCase(), base + \".\" + path + \".\" + attr]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tkey = key.toLowerCase()\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdd.register._registry[type].push([\r\n\t\t\t\t\t\tkey,\r\n\t\t\t\t\t\tfn,\r\n\t\t\t\t\t\tbase + \".\" + path\r\n\t\t\t\t\t]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\ttags: function(/*String*/ base, /*Object*/ locations){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRegister the specified tag libraries.\r\n\t\t\t// description:\r\n\t\t\t//\t\tThe locations parameter defines the contents of each library as a hash whose keys are the library names and values \r\n\t\t\t//\t\tan array of the tags exported by the library. For example, the tags exported by the logic library would be:\r\n\t\t\t//\t|\t{ logic: [\"if\", \"for\", \"ifequal\", \"ifnotequal\"] }\r\n\t\t\t// base:\r\n\t\t\t//\t\tThe base path of the libraries.\r\n\t\t\t// locations:\r\n\t\t\t//\t\tAn object defining the tags for each library as a hash whose keys are the library names and values \r\n\t\t\t//\t\tan array of the tags or filters exported by the library.\r\n\t\t\tdd.register._any(\"tags\", base, locations);\r\n\t\t},\r\n\t\tfilters: function(/*String*/ base, /*Object*/ locations){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRegister the specified filter libraries.\r\n\t\t\t// description:\r\n\t\t\t//\t\tThe locations parameter defines the contents of each library as a hash whose keys are the library names and values \r\n\t\t\t//\t\tan array of the filters exported by the library. For example, the filters exported by the date library would be:\r\n\t\t\t//\t|\t{ \"dates\": [\"date\", \"time\", \"timesince\", \"timeuntil\"] }\r\n\t\t\t// base:\r\n\t\t\t//\t\tThe base path of the libraries.\r\n\t\t\t// locations:\r\n\t\t\t//\t\tAn object defining the filters for each library as a hash whose keys are the library names and values \r\n\t\t\t//\t\tan array of the filters exported by the library.\r\n\t\t\tdd.register._any(\"filters\", base, locations);\r\n\t\t}\r\n\t}\r\n\r\n\tvar escapeamp = /&/g;\r\n\tvar escapelt = /</g;\r\n\tvar escapegt = />/g;\r\n\tvar escapeqt = /'/g;\r\n\tvar escapedblqt = /\"/g;\r\n\tdd._base.escape = function(value){\r\n\t\t// summary:\r\n\t\t//\t\tEscapes a string's HTML\r\n\t\treturn dd.mark_safe(value.replace(escapeamp, '&amp;').replace(escapelt, '&lt;').replace(escapegt, '&gt;').replace(escapedblqt, '&quot;').replace(escapeqt, '&#39;'));\r\n\t};\r\n\r\n\tdd._base.safe = function(value){\r\n\t\tif(typeof value == \"string\"){\r\n\t\t\tvalue = new String(value);\r\n\t\t}\r\n\t\tif(typeof value == \"object\"){\r\n\t\t\tvalue.safe = true;\r\n\t\t}\r\n\t\treturn value;\r\n\t};\r\n\tdd.mark_safe = dd._base.safe;\r\n\r\n\tdd.register.tags(\"dojox.dtl.tag\", {\r\n\t\t\"date\": [\"now\"],\r\n\t\t\"logic\": [\"if\", \"for\", \"ifequal\", \"ifnotequal\"],\r\n\t\t\"loader\": [\"extends\", \"block\", \"include\", \"load\", \"ssi\"],\r\n\t\t\"misc\": [\"comment\", \"debug\", \"filter\", \"firstof\", \"spaceless\", \"templatetag\", \"widthratio\", \"with\"],\r\n\t\t\"loop\": [\"cycle\", \"ifchanged\", \"regroup\"]\r\n\t});\r\n\tdd.register.filters(\"dojox.dtl.filter\", {\r\n\t\t\"dates\": [\"date\", \"time\", \"timesince\", \"timeuntil\"],\r\n\t\t\"htmlstrings\": [\"linebreaks\", \"linebreaksbr\", \"removetags\", \"striptags\"],\r\n\t\t\"integers\": [\"add\", \"get_digit\"],\r\n\t\t\"lists\": [\"dictsort\", \"dictsortreversed\", \"first\", \"join\", \"length\", \"length_is\", \"random\", \"slice\", \"unordered_list\"],\r\n\t\t\"logic\": [\"default\", \"default_if_none\", \"divisibleby\", \"yesno\"],\r\n\t\t\"misc\": [\"filesizeformat\", \"pluralize\", \"phone2numeric\", \"pprint\"],\r\n\t\t\"strings\": [\"addslashes\", \"capfirst\", \"center\", \"cut\", \"fix_ampersands\", \"floatformat\", \"iriencode\", \"linenumbers\", \"ljust\", \"lower\", \"make_list\", \"rjust\", \"slugify\", \"stringformat\", \"title\", \"truncatewords\", \"truncatewords_html\", \"upper\", \"urlencode\", \"urlize\", \"urlizetrunc\", \"wordcount\", \"wordwrap\"]\r\n\t});\r\n\tdd.register.filters(\"dojox.dtl\", {\r\n\t\t\"_base\": [\"escape\", \"safe\"]\r\n\t});\r\n\r\n\treturn dd;\r\n});\r\n\r\n"]}