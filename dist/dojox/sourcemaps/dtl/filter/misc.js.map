{"version":3,"sources":["dtl/filter/misc.js"],"names":["define","lang","json","dd","misc","getObject","mixin","filesizeformat","value","parseFloat","toFixed","pluralize","arg","indexOf","parts","split","length","singular","plural","parseInt","_phone2numeric","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","r","s","t","u","v","w","x","y","phone2numeric","dm","filter","output","chr","charAt","toLowerCase","pprint","toJson"],"mappings":";;;;;;;AAAAA,QACC,kBACA,kBACA,YACE,SAASC,EAAKC,EAAKC,GAErB,IAAIC,EAAOH,EAAKI,UAAU,eAAe,EAAMF,GAgE/C,OAzDAF,EAAKK,MAAMF,GACVG,eAAgB,SAASC,GAIxB,OADAA,EAAQC,WAAWD,IACR,KACO,GAATA,EAAcA,EAAQ,QAAUA,EAAQ,SACxCA,EAAQ,SACRA,EAAQ,MAAME,QAAQ,GAAK,MAC3BF,EAAQ,YACRA,EAAQ,KAAO,MAAME,QAAQ,GAAK,OAEnCF,EAAQ,KAAO,KAAO,MAAME,QAAQ,GAAK,OAElDC,UAAW,SAASH,EAAOI,IAQF,IADxBA,EAAMA,GAAO,KACNC,QAAQ,OACdD,EAAM,IAAMA,GAEb,IAAIE,EAAQF,EAAIG,MAAM,KACtB,GAAGD,EAAME,OAAS,EACjB,MAAO,GAER,IAAIC,EAAWH,EAAM,GACjBI,EAASJ,EAAM,GAEnB,OAA0B,GAAvBK,SAASX,EAAO,IACXU,EAEDD,GAERG,gBAAkBC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC/JC,cAAe,SAASrC,GAGvB,IAAIsC,EAAK3C,EAAG4C,OAAO3C,KACnBI,GAAgB,GAEhB,IADA,IAAIwC,EAAS,GACLnB,EAAI,EAAGA,EAAIrB,EAAMQ,OAAQa,IAAI,CACpC,IAAIoB,EAAMzC,EAAM0C,OAAOrB,GAAGsB,cACzBL,EAAG1B,eAAe6B,GAAQD,GAAUF,EAAG1B,eAAe6B,GAAOD,GAAUxC,EAAM0C,OAAOrB,GAEtF,OAAOmB,GAERI,OAAQ,SAAS5C,GAGhB,OAAON,EAAKmD,OAAO7C,MAIdJ","file":"../../../dtl/filter/misc.js","sourcesContent":["define([\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/json\",\t// dojo.toJson\r\n\t\"../_base\"\r\n], function(lang,json,dd){\r\n\r\n\tvar misc = lang.getObject(\"filter.misc\", true, dd);\r\n\t/*=====\r\n\t misc = {\r\n\t \t// TODO: summary\r\n\t };\r\n\t =====*/\r\n\r\n\tlang.mixin(misc, {\r\n\t\tfilesizeformat: function(value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFormat the value like a 'human-readable' file size (i.e. 13 KB, 4.1 MB, 102bytes, etc).\r\n\t\t\tvalue = parseFloat(value);\r\n\t\t\tif(value < 1024){\r\n\t\t\t\treturn (value == 1) ? value + \" byte\" : value + \" bytes\";\r\n\t\t\t}else if(value < 1024 * 1024){\r\n\t\t\t\treturn (value / 1024).toFixed(1) + \" KB\";\r\n\t\t\t}else if(value < 1024 * 1024 * 1024){\r\n\t\t\t\treturn (value / 1024 / 1024).toFixed(1) + \" MB\";\r\n\t\t\t}\r\n\t\t\treturn (value / 1024 / 1024 / 1024).toFixed(1) + \" GB\";\r\n\t\t},\r\n\t\tpluralize: function(value, arg){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns a plural suffix if the value is not 1, for '1 vote' vs. '2 votes'\r\n\t\t\t// description:\r\n\t\t\t//\t\tBy default, 's' is used as a suffix; if an argument is provided, that string\r\n\t\t\t//\t\tis used instead. If the provided argument contains a comma, the text before\r\n\t\t\t//\t\tthe comma is used for the singular case.\r\n\t\t\targ = arg || 's';\r\n\t\t\tif(arg.indexOf(\",\") == -1){\r\n\t\t\t\targ = \",\" + arg;\r\n\t\t\t}\r\n\t\t\tvar parts = arg.split(\",\");\r\n\t\t\tif(parts.length > 2){\r\n\t\t\t\treturn \"\";\r\n\t\t\t}\r\n\t\t\tvar singular = parts[0];\r\n\t\t\tvar plural = parts[1];\r\n\r\n\t\t\tif(parseInt(value, 10) != 1){\r\n\t\t\t\treturn plural;\r\n\t\t\t}\r\n\t\t\treturn singular;\r\n\t\t},\r\n\t\t_phone2numeric: { a: 2, b: 2, c: 2, d: 3, e: 3, f: 3, g: 4, h: 4, i: 4, j: 5, k: 5, l: 5, m: 6, n: 6, o: 6, p: 7, r: 7, s: 7, t: 8, u: 8, v: 8, w: 9, x: 9, y: 9 },\r\n\t\tphone2numeric: function(value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTakes a phone number and converts it in to its numerical equivalent\r\n\t\t\tvar dm = dd.filter.misc;\r\n\t\t\tvalue = value + \"\";\r\n\t\t\tvar output = \"\";\r\n\t\t\tfor(var i = 0; i < value.length; i++){\r\n\t\t\t\tvar chr = value.charAt(i).toLowerCase();\r\n\t\t\t\t(dm._phone2numeric[chr]) ? output += dm._phone2numeric[chr] : output += value.charAt(i);\r\n\t\t\t}\r\n\t\t\treturn output;\r\n\t\t},\r\n\t\tpprint: function(value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tA wrapper around toJson unless something better comes along\r\n\t\t\treturn json.toJson(value);\r\n\t\t}\r\n\t});\r\n\r\n\treturn misc;\r\n});\r\n"]}