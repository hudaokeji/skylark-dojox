{"version":3,"sources":["dtl/tag/logic.js"],"names":["define","lang","dd","ddtl","getObject","text","IfNode","extend","bools","trues","falses","type","this","render","context","buffer","i","bool","ifnot","value","resolve","unrender","clone","constructor","IfEqualNode","var1","var2","negate","_Filter","prototype","call","getExpression","ForNode","assign","loop","reversed","nodelist","pool","k","dirty","length","push","forloop","items","arred","isObject","isArrayLike","key","slice","reverse","parentloop","get","j","item","counter0","counter","revcounter0","revcounter","first","last","zipped","mixin","pop","if_","parser","token","part","parts","contents","split","shift","join","indexOf","Error","not","parse","next_token","_ifequal","split_contents","end","ifequal","ifnotequal","for_","index","loopvars"],"mappings":"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","file":"../../../dtl/tag/logic.js","sourcesContent":["define([\r\n\t\"dojo/_base/lang\",\r\n\t\"../_base\"\r\n], function(lang, dd){\r\n\r\n\tvar ddtl = lang.getObject(\"tag.logic\", true, dd);\r\n\t/*=====\r\n\t ddtl = {\r\n\t \t// TODO: summary\r\n\t };\r\n\t =====*/\r\n\r\n\tvar ddt = dd.text;\r\n\r\n\tddtl.IfNode = lang.extend(function(bools, trues, falses, type){\r\n\t\tthis.bools = bools;\r\n\t\tthis.trues = trues;\r\n\t\tthis.falses = falses;\r\n\t\tthis.type = type;\r\n\t},\r\n\t{\r\n\t\trender: function(context, buffer){\r\n\t\t\tvar i, bool, ifnot, filter, value;\r\n\t\t\tif(this.type == \"or\"){\r\n\t\t\t\tfor(i = 0; bool = this.bools[i]; i++){\r\n\t\t\t\t\tifnot = bool[0];\r\n\t\t\t\t\tfilter = bool[1];\r\n\t\t\t\t\tvalue = filter.resolve(context);\r\n\t\t\t\t\tif((value && !ifnot) || (ifnot && !value)){\r\n\t\t\t\t\t\tif(this.falses){\r\n\t\t\t\t\t\t\tbuffer = this.falses.unrender(context, buffer);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn (this.trues) ? this.trues.render(context, buffer, this) : buffer;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(this.trues){\r\n\t\t\t\t\tbuffer = this.trues.unrender(context, buffer);\r\n\t\t\t\t}\r\n\t\t\t\treturn (this.falses) ? this.falses.render(context, buffer, this) : buffer;\r\n\t\t\t}else{\r\n\t\t\t\tfor(i = 0; bool = this.bools[i]; i++){\r\n\t\t\t\t\tifnot = bool[0];\r\n\t\t\t\t\tfilter = bool[1];\r\n\t\t\t\t\tvalue = filter.resolve(context);\r\n\t\t\t\t\t// If we ever encounter a false value\r\n\t\t\t\t\tif(value == ifnot){\r\n\t\t\t\t\t\tif(this.trues){\r\n\t\t\t\t\t\t\tbuffer = this.trues.unrender(context, buffer);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn (this.falses) ? this.falses.render(context, buffer, this) : buffer;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(this.falses){\r\n\t\t\t\t\tbuffer = this.falses.unrender(context, buffer);\r\n\t\t\t\t}\r\n\t\t\t\treturn (this.trues) ? this.trues.render(context, buffer, this) : buffer;\r\n\t\t\t}\r\n\t\t\treturn buffer;\r\n\t\t},\r\n\t\tunrender: function(context, buffer){\r\n\t\t\tbuffer = (this.trues) ? this.trues.unrender(context, buffer) : buffer;\r\n\t\t\tbuffer = (this.falses) ? this.falses.unrender(context, buffer) : buffer;\r\n\t\t\treturn buffer;\r\n\t\t},\r\n\t\tclone: function(buffer){\r\n\t\t\tvar trues = (this.trues) ? this.trues.clone(buffer) : null;\r\n\t\t\tvar falses = (this.falses) ? this.falses.clone(buffer) : null;\r\n\t\t\treturn new this.constructor(this.bools, trues, falses, this.type);\r\n\t\t}\r\n\t});\r\n\r\n\tddtl.IfEqualNode = lang.extend(function(var1, var2, trues, falses, negate){\r\n\t\tthis.var1 = new dd._Filter(var1);\r\n\t\tthis.var2 = new dd._Filter(var2);\r\n\t\tthis.trues = trues;\r\n\t\tthis.falses = falses;\r\n\t\tthis.negate = negate;\r\n\t},\r\n\t{\r\n\t\trender: function(context, buffer){\r\n\t\t\tvar var1 = this.var1.resolve(context);\r\n\t\t\tvar var2 = this.var2.resolve(context);\r\n\t\t\tvar1 = (typeof var1 != \"undefined\") ? var1 : \"\";\r\n\t\t\tvar2 = (typeof var1 != \"undefined\") ? var2 : \"\";\r\n\t\t\tif((this.negate && var1 != var2) || (!this.negate && var1 == var2)){\r\n\t\t\t\tif(this.falses){\r\n\t\t\t\t\tbuffer = this.falses.unrender(context, buffer, this);\r\n\t\t\t\t}\r\n\t\t\t\treturn (this.trues) ? this.trues.render(context, buffer, this) : buffer;\r\n\t\t\t}\r\n\t\t\tif(this.trues){\r\n\t\t\t\tbuffer = this.trues.unrender(context, buffer, this);\r\n\t\t\t}\r\n\t\t\treturn (this.falses) ? this.falses.render(context, buffer, this) : buffer;\r\n\t\t},\r\n\t\tunrender: function(context, buffer){\r\n\t\t\treturn ddtl.IfNode.prototype.unrender.call(this, context, buffer);\r\n\t\t},\r\n\t\tclone: function(buffer){\r\n\t\t\tvar trues = this.trues ? this.trues.clone(buffer) : null;\r\n\t\t\tvar falses = this.falses ? this.falses.clone(buffer) : null;\r\n\t\t\treturn new this.constructor(this.var1.getExpression(), this.var2.getExpression(), trues, falses, this.negate);\r\n\t\t}\r\n\t});\r\n\r\n\tddtl.ForNode = lang.extend(function(assign, loop, reversed, nodelist){\r\n\t\tthis.assign = assign;\r\n\t\tthis.loop = new dd._Filter(loop);\r\n\t\tthis.reversed = reversed;\r\n\t\tthis.nodelist = nodelist;\r\n\t\tthis.pool = [];\r\n\t},\r\n\t{\r\n\t\trender: function(context, buffer){\r\n\t\t\tvar i, j, k;\r\n\t\t\tvar dirty = false;\r\n\t\t\tvar assign = this.assign;\r\n\r\n\t\t\tfor(k = 0; k < assign.length; k++){\r\n\t\t\t\tif(typeof context[assign[k]] != \"undefined\"){\r\n\t\t\t\t\tdirty = true;\r\n\t\t\t\t\tcontext = context.push();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!dirty && context.forloop){\r\n\t\t\t\tdirty = true;\r\n\t\t\t\tcontext = context.push();\r\n\t\t\t}\r\n\r\n\t\t\tvar items = this.loop.resolve(context) || [];\r\n\r\n\t\t\tvar isObject = lang.isObject(items) && !lang.isArrayLike(items);\r\n\t\t\tvar arred = [];\r\n\t\t\tif(isObject){\r\n\t\t\t\tfor(var key in items){\r\n\t\t\t\t\tarred.push(items[key]);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tarred = items;\r\n\t\t\t}\r\n\r\n\t\t\tfor(i = arred.length; i < this.pool.length; i++){\r\n\t\t\t\tthis.pool[i].unrender(context, buffer, this);\r\n\t\t\t}\r\n\t\t\tif(this.reversed){\r\n\t\t\t\tarred = arred.slice(0).reverse();\r\n\t\t\t}\r\n\r\n\t\t\tvar forloop = context.forloop = {\r\n\t\t\t\tparentloop: context.get(\"forloop\", {})\r\n\t\t\t};\r\n\t\t\tvar j = 0;\r\n\t\t\tfor(i = 0; i < arred.length; i++){\r\n\t\t\t\tvar item = arred[i];\r\n\r\n\t\t\t\tforloop.counter0 = j;\r\n\t\t\t\tforloop.counter = j + 1;\r\n\t\t\t\tforloop.revcounter0 = arred.length - j - 1;\r\n\t\t\t\tforloop.revcounter = arred.length - j;\r\n\t\t\t\tforloop.first = !j;\r\n\t\t\t\tforloop.last = (j == arred.length - 1);\r\n\r\n\t\t\t\tif(assign.length > 1 && lang.isArrayLike(item)){\r\n\t\t\t\t\tif(!dirty){\r\n\t\t\t\t\t\tdirty = true;\r\n\t\t\t\t\t\tcontext = context.push();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar zipped = {};\r\n\t\t\t\t\tfor(k = 0; k < item.length && k < assign.length; k++){\r\n\t\t\t\t\t\tzipped[assign[k]] = item[k];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlang.mixin(context, zipped);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcontext[assign[0]] = item;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(j + 1 > this.pool.length){\r\n\t\t\t\t\tthis.pool.push(this.nodelist.clone(buffer));\r\n\t\t\t\t}\r\n\t\t\t\tbuffer = this.pool[j++].render(context, buffer, this);\r\n\t\t\t}\r\n\r\n\t\t\tdelete context.forloop;\r\n\t\t\tif(dirty){\r\n\t\t\t\tcontext = context.pop();\r\n\t\t\t}else{\r\n\t\t\t\tfor(k = 0; k < assign.length; k++){\r\n\t\t\t\t\tdelete context[assign[k]];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn buffer;\r\n\t\t},\r\n\t\tunrender: function(context, buffer){\r\n\t\t\tfor(var i = 0, pool; pool = this.pool[i]; i++){\r\n\t\t\t\tbuffer = pool.unrender(context, buffer);\r\n\t\t\t}\r\n\t\t\treturn buffer;\r\n\t\t},\r\n\t\tclone: function(buffer){\r\n\t\t\treturn new this.constructor(this.assign, this.loop.getExpression(), this.reversed, this.nodelist.clone(buffer));\r\n\t\t}\r\n\t});\r\n\r\n\tlang.mixin(ddtl, {\r\n\t\tif_: function(parser, token){\r\n\t\t\tvar i, part, type, bools = [], parts = token.contents.split();\r\n\t\t\tparts.shift();\r\n\t\t\ttoken = parts.join(\" \");\r\n\t\t\tparts = token.split(\" and \");\r\n\t\t\tif(parts.length == 1){\r\n\t\t\t\ttype = \"or\";\r\n\t\t\t\tparts = token.split(\" or \");\r\n\t\t\t}else{\r\n\t\t\t\ttype = \"and\";\r\n\t\t\t\tfor(i = 0; i < parts.length; i++){\r\n\t\t\t\t\tif(parts[i].indexOf(\" or \") != -1){\r\n\t\t\t\t\t\t// Note, since we split by and, this is the only place we need to error check\r\n\t\t\t\t\t\tthrow new Error(\"'if' tags can't mix 'and' and 'or'\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor(i = 0; part = parts[i]; i++){\r\n\t\t\t\tvar not = false;\r\n\t\t\t\tif(part.indexOf(\"not \") == 0){\r\n\t\t\t\t\tpart = part.slice(4);\r\n\t\t\t\t\tnot = true;\r\n\t\t\t\t}\r\n\t\t\t\tbools.push([not, new dd._Filter(part)]);\r\n\t\t\t}\r\n\t\t\tvar trues = parser.parse([\"else\", \"endif\"]);\r\n\t\t\tvar falses = false;\r\n\t\t\tvar token = parser.next_token();\r\n\t\t\tif(token.contents == \"else\"){\r\n\t\t\t\tfalses = parser.parse([\"endif\"]);\r\n\t\t\t\tparser.next_token();\r\n\t\t\t}\r\n\t\t\treturn new ddtl.IfNode(bools, trues, falses, type);\r\n\t\t},\r\n\t\t_ifequal: function(parser, token, negate){\r\n\t\t\tvar parts = token.split_contents();\r\n\t\t\tif(parts.length != 3){\r\n\t\t\t\tthrow new Error(parts[0] + \" takes two arguments\");\r\n\t\t\t}\r\n\t\t\tvar end = 'end' + parts[0];\r\n\t\t\tvar trues = parser.parse([\"else\", end]);\r\n\t\t\tvar falses = false;\r\n\t\t\tvar token = parser.next_token();\r\n\t\t\tif(token.contents == \"else\"){\r\n\t\t\t\tfalses = parser.parse([end]);\r\n\t\t\t\tparser.next_token();\r\n\t\t\t}\r\n\t\t\treturn new ddtl.IfEqualNode(parts[1], parts[2], trues, falses, negate);\r\n\t\t},\r\n\t\tifequal: function(parser, token){\r\n\t\t\treturn ddtl._ifequal(parser, token);\r\n\t\t},\r\n\t\tifnotequal: function(parser, token){\r\n\t\t\treturn ddtl._ifequal(parser, token, true);\r\n\t\t},\r\n\t\tfor_: function(parser, token){\r\n\t\t\tvar parts = token.contents.split();\r\n\t\t\tif(parts.length < 4){\r\n\t\t\t\tthrow new Error(\"'for' statements should have at least four words: \" + token.contents);\r\n\t\t\t}\r\n\t\t\tvar reversed = parts[parts.length - 1] == \"reversed\";\r\n\t\t\tvar index = (reversed) ? -3 : -2;\r\n\t\t\tif(parts[parts.length + index] != \"in\"){\r\n\t\t\t\tthrow new Error(\"'for' tag received an invalid argument: \" + token.contents);\r\n\t\t\t}\r\n\t\t\tvar loopvars = parts.slice(1, index).join(\" \").split(/ *, */);\r\n\t\t\tfor(var i = 0; i < loopvars.length; i++){\r\n\t\t\t\tif(!loopvars[i] || loopvars[i].indexOf(\" \") != -1){\r\n\t\t\t\t\tthrow new Error(\"'for' tag received an invalid argument: \" + token.contents);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar nodelist = parser.parse([\"endfor\"]);\r\n\t\t\tparser.next_token();\r\n\t\t\treturn new ddtl.ForNode(loopvars, parts[parts.length + index + 1], reversed, nodelist);\r\n\t\t}\r\n\t});\r\n\r\n\treturn ddtl;\r\n});"]}