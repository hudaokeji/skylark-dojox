{"version":3,"sources":["gfx/gradutils.js"],"names":["define","g","lang","m","Color","gradutils","getColor","fill","pt","o","type","angle","Math","atan2","y2","y1","x2","x1","rotation","rotate","projection","project","p","multiplyPoint","pf1","pf2","scale","x","y","dx","cx","dy","cy","sqrt","r","c","color","len","length","i","stop","offset","prev","blendColors","findColor","colors","reverse","delegate","l","n","Array","sort","a","b"],"mappings":";;;;;;;AAEAA,QAAQ,UAAW,kBAAmB,WAAY,oBAChD,SAASC,EAAGC,EAAMC,EAAGC,GAEtB,IAAIC,EAAYJ,EAAEI,aAoFlB,OA3DAA,EAAUC,SAAW,SAASC,EAAMC,GAOnC,IAAIC,EACJ,GAAGF,EAAK,CACP,OAAOA,EAAKG,MACX,IAAK,SACJ,IAAIC,EAAQC,KAAKC,MAAMN,EAAKO,GAAKP,EAAKQ,GAAIR,EAAKS,GAAKT,EAAKU,IACxDC,EAAWf,EAAEgB,QAAQR,GACrBS,EAAajB,EAAEkB,QAAQd,EAAKS,GAAKT,EAAKU,GAAIV,EAAKO,GAAKP,EAAKQ,IACzDO,EAAInB,EAAEoB,cAAcH,EAAYZ,GAChCgB,EAAMrB,EAAEoB,cAAcH,EAAYb,EAAKU,GAAIV,EAAKQ,IAChDU,EAAMtB,EAAEoB,cAAcH,EAAYb,EAAKS,GAAIT,EAAKO,IAChDY,EAAQvB,EAAEoB,cAAcL,EAAUO,EAAIE,EAAIH,EAAIG,EAAGF,EAAIG,EAAIJ,EAAII,GAAGD,EACjElB,EAAIN,EAAEoB,cAAcL,EAAUI,EAAEK,EAAIH,EAAIG,EAAGL,EAAEM,EAAIJ,EAAII,GAAGD,EAAID,EAC5D,MACD,IAAK,SACJ,IAAIG,EAAKrB,EAAGmB,EAAIpB,EAAKuB,GAAIC,EAAKvB,EAAGoB,EAAIrB,EAAKyB,GAC1CvB,EAAIG,KAAKqB,KAAKJ,EAAKA,EAAKE,EAAKA,GAAMxB,EAAK2B,EAG1C,OAhDF,SAAmBzB,EAAG0B,GACrB,GAAG1B,GAAK,EACP,OAAO0B,EAAE,GAAGC,MAEb,IAAIC,EAAMF,EAAEG,OACZ,GAAG7B,GAAK,EACP,OAAO0B,EAAEE,EAAM,GAAGD,MAGnB,IAAI,IAAIG,EAAI,EAAGA,EAAIF,IAAOE,EAAE,CAC3B,IAAIC,EAAOL,EAAEI,GACb,GAAGC,EAAKC,QAAUhC,EAAE,CACnB,GAAG8B,EAAE,CACJ,IAAIG,EAAOP,EAAEI,EAAI,GACjB,OAAOnC,EAAMuC,YAAY,IAAIvC,EAAMsC,EAAKN,OAAQ,IAAIhC,EAAMoC,EAAKJ,QAC7D3B,EAAIiC,EAAKD,SAAWD,EAAKC,OAASC,EAAKD,SAE1C,OAAOD,EAAKJ,OAGd,OAAOD,EAAEE,EAAM,GAAGD,MA4BVQ,CAAUnC,EAAGF,EAAKsC,QAG1B,OAAO,IAAIzC,EAAMG,IAAS,EAAG,EAAG,EAAG,KAGpCF,EAAUyC,QAAU,SAASvC,GAK5B,GAAGA,EACF,OAAOA,EAAKG,MACX,IAAK,SACL,IAAK,SAEJ,IADAH,EAAOL,EAAK6C,SAASxC,IACbsC,OAAO,CAGd,IAFA,IAA0CL,EAAtCL,EAAI5B,EAAKsC,OAAQG,EAAIb,EAAEG,OAAQC,EAAI,EACtCU,EAAI1C,EAAKsC,OAAS,IAAIK,MAAMf,EAAEG,QACzBC,EAAIS,IAAKT,EACdC,EAAOL,EAAEI,GACTU,EAAEV,IACDE,OAAQ,EAAID,EAAKC,OACjBL,MAAQI,EAAKJ,OAGfa,EAAEE,KAAK,SAASC,EAAGC,GAAI,OAAOD,EAAEX,OAASY,EAAEZ,UAK/C,OAAOlC,GAGDF","file":"../../gfx/gradutils.js","sourcesContent":["// Various generic utilities to deal with a linear gradient\r\n\r\ndefine([\"./_base\", \"dojo/_base/lang\", \"./matrix\", \"dojo/_base/Color\"], \r\n  function(g, lang, m, Color){\r\n  \r\n\tvar gradutils = g.gradutils = {};\r\n\r\n\tfunction findColor(o, c){\r\n\t\tif(o <= 0){\r\n\t\t\treturn c[0].color;\r\n\t\t}\r\n\t\tvar len = c.length;\r\n\t\tif(o >= 1){\r\n\t\t\treturn c[len - 1].color;\r\n\t\t}\r\n\t\t//TODO: use binary search\r\n\t\tfor(var i = 0; i < len; ++i){\r\n\t\t\tvar stop = c[i];\r\n\t\t\tif(stop.offset >= o){\r\n\t\t\t\tif(i){\r\n\t\t\t\t\tvar prev = c[i - 1];\r\n\t\t\t\t\treturn Color.blendColors(new Color(prev.color), new Color(stop.color),\r\n\t\t\t\t\t\t(o - prev.offset) / (stop.offset - prev.offset));\r\n\t\t\t\t}\r\n\t\t\t\treturn stop.color;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn c[len - 1].color;\r\n\t}\r\n\r\n\tgradutils.getColor = function(fill, pt){\r\n\t\t// summary:\r\n\t\t//\t\tsample a color from a gradient using a point\r\n\t\t// fill: Object\r\n\t\t//\t\tfill object\r\n\t\t// pt: dojox/gfx.Point\r\n\t\t//\t\tpoint where to sample a color\r\n\t\tvar o;\r\n\t\tif(fill){\r\n\t\t\tswitch(fill.type){\r\n\t\t\t\tcase \"linear\":\r\n\t\t\t\t\tvar angle = Math.atan2(fill.y2 - fill.y1, fill.x2 - fill.x1),\r\n\t\t\t\t\t\trotation = m.rotate(-angle),\r\n\t\t\t\t\t\tprojection = m.project(fill.x2 - fill.x1, fill.y2 - fill.y1),\r\n\t\t\t\t\t\tp = m.multiplyPoint(projection, pt),\r\n\t\t\t\t\t\tpf1 = m.multiplyPoint(projection, fill.x1, fill.y1),\r\n\t\t\t\t\t\tpf2 = m.multiplyPoint(projection, fill.x2, fill.y2),\r\n\t\t\t\t\t\tscale = m.multiplyPoint(rotation, pf2.x - pf1.x, pf2.y - pf1.y).x;\r\n\t\t\t\t\to = m.multiplyPoint(rotation, p.x - pf1.x, p.y - pf1.y).x / scale;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"radial\":\r\n\t\t\t\t\tvar dx = pt.x - fill.cx, dy = pt.y - fill.cy;\r\n\t\t\t\t\to = Math.sqrt(dx * dx + dy * dy) / fill.r;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn findColor(o, fill.colors);\t// dojo/_base/Color\r\n\t\t}\r\n\t\t// simple color\r\n\t\treturn new Color(fill || [0, 0, 0, 0]);\t// dojo/_base/Color\r\n\t};\r\n\r\n\tgradutils.reverse = function(fill){\r\n\t\t// summary:\r\n\t\t//\t\treverses a gradient\r\n\t\t// fill: Object\r\n\t\t//\t\tfill object\r\n\t\tif(fill){\r\n\t\t\tswitch(fill.type){\r\n\t\t\t\tcase \"linear\":\r\n\t\t\t\tcase \"radial\":\r\n\t\t\t\t\tfill = lang.delegate(fill);\r\n\t\t\t\t\tif(fill.colors){\r\n\t\t\t\t\t\tvar c = fill.colors, l = c.length, i = 0, stop,\r\n\t\t\t\t\t\t\tn = fill.colors = new Array(c.length);\r\n\t\t\t\t\t\tfor(; i < l; ++i){\r\n\t\t\t\t\t\t\tstop = c[i];\r\n\t\t\t\t\t\t\tn[i] = {\r\n\t\t\t\t\t\t\t\toffset: 1 - stop.offset,\r\n\t\t\t\t\t\t\t\tcolor:  stop.color\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tn.sort(function(a, b){ return a.offset - b.offset; });\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn fill;\t// Object\r\n\t};\r\n\r\n\treturn gradutils;\r\n});\r\n"]}