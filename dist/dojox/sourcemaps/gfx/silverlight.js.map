{"version":3,"sources":["gfx/silverlight.js"],"names":["define","kernel","lang","declare","color","on","arr","domGeom","dom","has","g","gs","pathLib","sl","silverlight","experimental","dasharray","solid","shortdash","shortdot","shortdashdot","shortdashdotdot","dot","dash","longdash","dashdot","longdashdot","longdashdotdot","fontweight","normal","bold","caps","butt","round","square","joins","bevel","fonts","serif","times","sans-serif","helvetica","monotone","courier","hexColor","c","normalizeColor","t","toHex","a","Math","toString","length","slice","Shape","destroy","dispose","this","rawNode","setFill","fill","f","p","getHost","content","fillStyle","_setFillAttr","type","makeParameters","defaultLinearGradient","lgb","createFromXaml","mappingMode","startPoint","x1","y1","endPoint","x2","y2","forEach","colors","offset","gradientStops","add","defaultRadialGradient","rgb","matrix","multiplyPoint","invert","_getAdjustedMatrix","cx","cy","pt","x","y","gradientOrigin","center","radiusX","radiusY","r","scb","opacity","setStroke","stroke","strokeStyle","isArray","s","defaultStroke","strokeThickness","width","strokeStartLineCap","strokeEndLineCap","strokeDashCap","cap","join","strokeLineJoin","strokeMiterLimit","da","style","toLowerCase","Array","i","clone","strokeDashArray","_getParentSurface","surface","parent","Surface","_applyTransform","tm","mt","mm","m11","xx","m21","xy","m12","yx","m22","yy","offsetX","dx","offsetY","dy","renderTransform","setRawNode","tag","getUID","_moveToFront","children","remove","_moveToBack","insert","setClip","clip","inherited","arguments","clipType","bbox","getBoundingBox","height","clipT","rect","transform","rx","ry","points","line","plinegroup","pfigure","StartPoint","Point","segments","figures","Group","constructor","Container","_init","call","clear","prototype","apply","nodeType","Rect","setShape","newShape","shape","n","delta","Matrix2D","Ellipse","Circle","Line","Polyline","closed","push","_normalizePoints","rp","Image","source","src","Text","text","textDecorations","decoration","_delay","window","setTimeout","hitch","_delayAlignment","w","h","actualWidth","actualHeight","e","align","_delta","foreground","getTextWidth","getShape","_base","_isRendered","loc","_computeTextLocation","Path","_updateWithSegment","segment","path","data","TextPath","_setText","surfaces","nullFunc","Function","_onLoadName","_nodeName","setDimensions","normalizedLength","getDimensions","createSurface","parentNode","pos","position","byId","_parent","_getUniqueId","ownerDocument","createElement","id","insertBefore","_nodes","obj","pluginName","onLoadName","sender","root","onLoad","innerHTML","pluginNode","isLoaded","__dojoSilverlightError","err","ErrorCode","ErrorType","ErrorMessage","xamlFile","lineNumber","charPosition","methodName","Font","_setFont","fontStyle","family","fontWeight","weight","fontSize","size","fontFamily","C","getParent","silently","_moveChildToFront","_moveChildToBack","Creator","createObject","shapeType","rawShape","node","mouseFix","ev","target","currentTarget","preventDefault","stopPropagation","gfxId","gfxTarget","ctrlKey","ctrl","shiftKey","shift","getPosition","layerX","layerY","name","clientX","clientY","keyFix","keyCode","platformKeyCode","extend","eventNames","onclick","fix","onmouseenter","onmouseleave","onmouseover","onmouseout","onmousedown","onmouseup","onmousemove","onkeydown","onkeyup","eventsProcessing","connect","object","method","listener","indexOf","token","getEventSource","addEventListener","removeEventListener","disconnect","equalSources","b","equals"],"mappings":"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","file":"../../gfx/silverlight.js","sourcesContent":["define([\"dojo/_base/kernel\", \"dojo/_base/lang\", \"dojo/_base/declare\", \"dojo/_base/Color\", \r\n\t\t\"dojo/on\", \"dojo/_base/array\", \"dojo/dom-geometry\", \"dojo/dom\", \"dojo/_base/sniff\",\r\n\t\t\"./_base\", \"./shape\", \"./path\", \"./registry\"],\r\n  function(kernel,lang,declare,color,on,arr,domGeom,dom,has,g,gs,pathLib){\r\n\tvar sl = g.silverlight = {\r\n\t\t// summary:\r\n\t\t//\t\tThis the graphics rendering bridge for the Microsoft Silverlight plugin.\r\n\t\t//\t\tSilverlight is a faster implementation on IE6-8 than the default 2d graphics, VML\r\n\t};\r\n\tkernel.experimental(\"dojox.gfx.silverlight\");\r\n\r\n\tvar dasharray = {\r\n\t\t\tsolid:\t\t\t\t\"none\",\r\n\t\t\tshortdash:\t\t\t[4, 1],\r\n\t\t\tshortdot:\t\t\t[1, 1],\r\n\t\t\tshortdashdot:\t\t[4, 1, 1, 1],\r\n\t\t\tshortdashdotdot:\t[4, 1, 1, 1, 1, 1],\r\n\t\t\tdot:\t\t\t\t[1, 3],\r\n\t\t\tdash:\t\t\t\t[4, 3],\r\n\t\t\tlongdash:\t\t\t[8, 3],\r\n\t\t\tdashdot:\t\t\t[4, 3, 1, 3],\r\n\t\t\tlongdashdot:\t\t[8, 3, 1, 3],\r\n\t\t\tlongdashdotdot:\t\t[8, 3, 1, 3, 1, 3]\r\n\t\t},\r\n\t\tfontweight = {\r\n\t\t\tnormal: 400,\r\n\t\t\tbold:   700\r\n\t\t},\r\n\t\tcaps  = {butt: \"Flat\", round: \"Round\", square: \"Square\"},\r\n\t\tjoins = {bevel: \"Bevel\", round: \"Round\"},\r\n\t\tfonts = {\r\n\t\t\tserif: \"Times New Roman\",\r\n\t\t\ttimes: \"Times New Roman\",\r\n\t\t\t\"sans-serif\": \"Arial\",\r\n\t\t\thelvetica: \"Arial\",\r\n\t\t\tmonotone: \"Courier New\",\r\n\t\t\tcourier: \"Courier New\"\r\n\t\t};\r\n\r\n\tfunction hexColor(/*String|Array|dojo/Color*/ color){\r\n\t\t// summary:\r\n\t\t//\t\tconverts a color object to a Silverlight hex color string (#aarrggbb)\r\n\t\tvar c = g.normalizeColor(color),\r\n\t\t\tt = c.toHex(), a = Math.round(c.a * 255);\r\n\t\ta = (a < 0 ? 0 : a > 255 ? 255 : a).toString(16);\r\n\t\treturn \"#\" + (a.length < 2 ? \"0\" + a : a) + t.slice(1);\t// String\r\n\t}\r\n\r\n\tsl.Shape = declare(\"dojox.gfx.silverlight.Shape\", gs.Shape, {\r\n\t\t// summary:\r\n\t\t//\t\tSilverlight-specific implementation of dojox/gfx/shape.Shape methods\r\n\r\n\t\tdestroy: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReleases all internal resources owned by this shape. Once this method has been called,\r\n\t\t\t//\t\tthe instance is considered destroyed and should not be used anymore.\r\n\t\t\tif(has(\"gfxRegistry\")){\r\n\t\t\t\tgs.dispose(this);\r\n\t\t\t}\r\n\t\t\tthis.rawNode = null;\r\n\t\t},\r\n\r\n\t\tsetFill: function(fill){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a fill object (Silverlight)\r\n\t\t\t// fill: Object\r\n\t\t\t//\t\ta fill object\r\n\t\t\t//\t\t(see dojox/gfx.defaultLinearGradient,\r\n\t\t\t//\t\tdojox/gfx.defaultRadialGradient,\r\n\t\t\t//\t\tdojox/gfx.defaultPattern,\r\n\t\t\t//\t\tor dojo/_base/Color)\r\n\r\n\t\t\tvar p = this.rawNode.getHost().content, r = this.rawNode, f;\r\n\t\t\tif(!fill){\r\n\t\t\t\t// don't fill\r\n\t\t\t\tthis.fillStyle = null;\r\n\t\t\t\tthis._setFillAttr(null);\r\n\t\t\t\treturn this;\t// self\r\n\t\t\t}\r\n\t\t\tif(typeof(fill) == \"object\" && \"type\" in fill){\r\n\t\t\t\t// gradient\r\n\t\t\t\tswitch(fill.type){\r\n\t\t\t\t\tcase \"linear\":\r\n\t\t\t\t\t\tthis.fillStyle = f = g.makeParameters(g.defaultLinearGradient, fill);\r\n\t\t\t\t\t\tvar lgb = p.createFromXaml(\"<LinearGradientBrush/>\");\r\n\t\t\t\t\t\tlgb.mappingMode = \"Absolute\";\r\n\t\t\t\t\t\tlgb.startPoint = f.x1 + \",\" + f.y1;\r\n\t\t\t\t\t\tlgb.endPoint = f.x2 + \",\" + f.y2;\r\n\t\t\t\t\t\tarr.forEach(f.colors, function(c){\r\n\t\t\t\t\t\t\tvar t = p.createFromXaml(\"<GradientStop/>\");\r\n\t\t\t\t\t\t\tt.offset = c.offset;\r\n\t\t\t\t\t\t\tt.color = hexColor(c.color);\r\n\t\t\t\t\t\t\tlgb.gradientStops.add(t);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthis._setFillAttr(lgb);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"radial\":\r\n\t\t\t\t\t\tthis.fillStyle = f = g.makeParameters(g.defaultRadialGradient, fill);\r\n\t\t\t\t\t\tvar rgb = p.createFromXaml(\"<RadialGradientBrush/>\"),\r\n\t\t\t\t\t\t\tc = g.matrix.multiplyPoint(g.matrix.invert(this._getAdjustedMatrix()), f.cx, f.cy),\r\n\t\t\t\t\t\t\tpt = c.x + \",\" + c.y;\r\n\t\t\t\t\t\trgb.mappingMode = \"Absolute\";\r\n\t\t\t\t\t\trgb.gradientOrigin = pt;\r\n\t\t\t\t\t\trgb.center = pt;\r\n\t\t\t\t\t\trgb.radiusX = rgb.radiusY = f.r;\r\n\t\t\t\t\t\tarr.forEach(f.colors, function(c){\r\n\t\t\t\t\t\t\tvar t = p.createFromXaml(\"<GradientStop/>\");\r\n\t\t\t\t\t\t\tt.offset = c.offset;\r\n\t\t\t\t\t\t\tt.color = hexColor(c.color);\r\n\t\t\t\t\t\t\trgb.gradientStops.add(t);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthis._setFillAttr(rgb);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"pattern\":\r\n\t\t\t\t\t\t// don't fill: Silverlight doesn't define TileBrush for some reason\r\n\t\t\t\t\t\tthis.fillStyle = null;\r\n\t\t\t\t\t\tthis._setFillAttr(null);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\t// self\r\n\t\t\t}\r\n\t\t\t// color object\r\n\t\t\tthis.fillStyle = f = g.normalizeColor(fill);\r\n\t\t\tvar scb = p.createFromXaml(\"<SolidColorBrush/>\");\r\n\t\t\tscb.color = f.toHex();\r\n\t\t\tscb.opacity = f.a;\r\n\t\t\tthis._setFillAttr(scb);\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\t_setFillAttr: function(f){\r\n\t\t\tthis.rawNode.fill = f;\r\n\t\t},\r\n\r\n\t\tsetStroke: function(stroke){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a stroke object (Silverlight)\r\n\t\t\t// stroke: Object\r\n\t\t\t//\t\ta stroke object\r\n\t\t\t//\t\t(see dojox/gfx.defaultStroke)\r\n\r\n\t\t\tvar p = this.rawNode.getHost().content, r = this.rawNode;\r\n\t\t\tif(!stroke){\r\n\t\t\t\t// don't stroke\r\n\t\t\t\tthis.strokeStyle = null;\r\n\t\t\t\tr.stroke = null;\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t// normalize the stroke\r\n\t\t\tif(typeof stroke == \"string\" || lang.isArray(stroke) || stroke instanceof color){\r\n\t\t\t\tstroke = {color: stroke};\r\n\t\t\t}\r\n\t\t\tvar s = this.strokeStyle = g.makeParameters(g.defaultStroke, stroke);\r\n\t\t\ts.color = g.normalizeColor(s.color);\r\n\t\t\t// generate attributes\r\n\t\t\tif(s){\r\n\t\t\t\tvar scb = p.createFromXaml(\"<SolidColorBrush/>\");\r\n\t\t\t\tscb.color = s.color.toHex();\r\n\t\t\t\tscb.opacity = s.color.a;\r\n\t\t\t\tr.stroke = scb;\r\n\t\t\t\tr.strokeThickness = s.width;\r\n\t\t\t\tr.strokeStartLineCap = r.strokeEndLineCap = r.strokeDashCap =\r\n\t\t\t\t\tcaps[s.cap];\r\n\t\t\t\tif(typeof s.join == \"number\"){\r\n\t\t\t\t\tr.strokeLineJoin = \"Miter\";\r\n\t\t\t\t\tr.strokeMiterLimit = s.join;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tr.strokeLineJoin = joins[s.join];\r\n\t\t\t\t}\r\n\t\t\t\tvar da = s.style.toLowerCase();\r\n\t\t\t\tif(da in dasharray){ da = dasharray[da]; }\r\n\t\t\t\tif(da instanceof Array){\r\n\t\t\t\t\tda = lang.clone(da);\r\n\t\t\t\t\tvar i;\r\n\t\t\t\t\t/*\r\n\t\t\t\t\tfor(var i = 0; i < da.length; ++i){\r\n\t\t\t\t\t\tda[i] *= s.width;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t*/\r\n\t\t\t\t\tif(s.cap != \"butt\"){\r\n\t\t\t\t\t\tfor(i = 0; i < da.length; i += 2){\r\n\t\t\t\t\t\t\t//da[i] -= s.width;\r\n\t\t\t\t\t\t\t--da[i]\r\n\t\t\t\t\t\t\tif(da[i] < 1){ da[i] = 1; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor(i = 1; i < da.length; i += 2){\r\n\t\t\t\t\t\t\t//da[i] += s.width;\r\n\t\t\t\t\t\t\t++da[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tr.strokeDashArray = da.join(\",\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tr.strokeDashArray = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\r\n\t\t_getParentSurface: function(){\r\n\t\t\tvar surface = this.parent;\r\n\t\t\tfor(; surface && !(surface instanceof g.Surface); surface = surface.parent);\r\n\t\t\treturn surface;\r\n\t\t},\r\n\r\n\t\t_applyTransform: function() {\r\n\t\t\tvar tm = this._getAdjustedMatrix(), r = this.rawNode;\r\n\t\t\tif(tm){\r\n\t\t\t\tvar p = this.rawNode.getHost().content,\r\n\t\t\t\t\tmt = p.createFromXaml(\"<MatrixTransform/>\"),\r\n\t\t\t\t\tmm = p.createFromXaml(\"<Matrix/>\");\r\n\t\t\t\tmm.m11 = tm.xx;\r\n\t\t\t\tmm.m21 = tm.xy;\r\n\t\t\t\tmm.m12 = tm.yx;\r\n\t\t\t\tmm.m22 = tm.yy;\r\n\t\t\t\tmm.offsetX = tm.dx;\r\n\t\t\t\tmm.offsetY = tm.dy;\r\n\t\t\t\tmt.matrix = mm;\r\n\t\t\t\tr.renderTransform = mt;\r\n\t\t\t}else{\r\n\t\t\t\tr.renderTransform = null;\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tsetRawNode: function(rawNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tassigns and clears the underlying node that will represent this\r\n\t\t\t//\t\tshape. Once set, transforms, gradients, etc, can be applied.\r\n\t\t\t//\t\t(no fill & stroke by default)\r\n\t\t\trawNode.fill = null;\r\n\t\t\trawNode.stroke = null;\r\n\t\t\tthis.rawNode = rawNode;\r\n\t\t\tthis.rawNode.tag = this.getUID();\r\n\t\t},\r\n\r\n\t\t// move family\r\n\r\n\t\t_moveToFront: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tmoves a shape to front of its parent's list of shapes (Silverlight)\r\n\t\t\tvar c = this.parent.rawNode.children, r = this.rawNode;\r\n\t\t\tc.remove(r);\r\n\t\t\tc.add(r);\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\t_moveToBack: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tmoves a shape to back of its parent's list of shapes (Silverlight)\r\n\t\t\tvar c = this.parent.rawNode.children, r = this.rawNode;\r\n\t\t\tc.remove(r);\r\n\t\t\tc.insert(0, r);\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\r\n\t\t_getAdjustedMatrix: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns the adjusted (\"real\") transformation matrix\r\n\t\t\treturn this.matrix;\t// dojox/gfx/matrix.Matrix2D\r\n\t\t},\r\n\t\t\r\n\t\tsetClip: function(clip){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets the clipping area of this shape.\r\n\t\t\t// description:\r\n\t\t\t//\t\tThis method overrides the dojox/gfx/shape.Shape.setClip() method.\r\n\t\t\t// clip: Object\r\n\t\t\t//\t\tan object that defines the clipping geometry, or null to remove clip.\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tvar r = this.rawNode;\r\n\t\t\tif(clip){\r\n\t\t\t\tvar clipType = clip ? \"width\" in clip ? \"rect\" : \r\n\t\t\t\t\t\t\t\t\"cx\" in clip ? \"ellipse\" : \r\n\t\t\t\t\t\t\t\t\"points\" in clip ? \"polyline\" : \"d\" in clip ? \"path\" : null : null;\r\n\t\t\t\tif(clip && !clipType){\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\t\t\t\tvar bbox = this.getBoundingBox() || {x:0, y:0, width:0, height:0};\r\n\t\t\t\tvar clipT = \"1,0,0,1,\"+(-bbox.x)+\",\"+(-bbox.y);\r\n\t\t\t\tswitch(clipType){\r\n\t\t\t\t\tcase \"rect\":\r\n\t\t\t\t\t\tr.clip = r.getHost().content.createFromXaml(\"<RectangleGeometry/>\");\r\n\t\t\t\t\t\tr.clip.rect = clip.x+\",\"+clip.y+\",\"+clip.width+\",\"+clip.height;\r\n\t\t\t\t\t\tr.clip.transform = clipT;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"ellipse\":\r\n\t\t\t\t\t\tr.clip = r.getHost().content.createFromXaml(\"<EllipseGeometry/>\");\r\n\t\t\t\t\t\tr.clip.center = clip.cx+\",\"+clip.cy;\r\n\t\t\t\t\t\tr.clip.radiusX = clip.rx;\r\n\t\t\t\t\t\tr.clip.radiusY = clip.ry;\r\n\t\t\t\t\t\tr.clip.transform = \"1,0,0,1,\"+(-bbox.x)+\",\"+(-bbox.y);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"polyline\":\r\n\t\t\t\t\t\tif(clip.points.length>2){\r\n\t\t\t\t\t\t\tvar line, plinegroup = r.getHost().content.createFromXaml(\"<PathGeometry/>\"),\r\n\t\t\t\t\t\t\t\tpfigure = r.getHost().content.createFromXaml(\"<PathFigure/>\");\r\n\t\t\t\t\t\t\tpfigure.StartPoint = clip.points[0]+\",\"+clip.points[1];\r\n\t\t\t\t\t\t\tfor (var i=2; i<=clip.points.length-2;i=i+2){\r\n\t\t\t\t\t\t\t\tline = r.getHost().content.createFromXaml(\"<LineSegment/>\");\r\n\t\t\t\t\t\t\t\tline.Point = clip.points[i]+\",\"+clip.points[i+1];\r\n\t\t\t\t\t\t\t\tpfigure.segments.add(line);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tplinegroup.figures.add(pfigure);\r\n\t\t\t\t\t\t\tplinegroup.transform = \"1,0,0,1,\"+(-bbox.x)+\",\"+(-bbox.y);\r\n\t\t\t\t\t\t\tr.clip = plinegroup;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"path\":\r\n\t\t\t\t\t\t// missing JS api\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tr.clip = null;\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\t});\r\n\r\n\tsl.Group = declare(\"dojox.gfx.silverlight.Group\", sl.Shape, {\r\n\t\t// summary:\r\n\t\t//\t\ta group shape (Silverlight), which can be used\r\n\t\t//\t\tto logically group shapes (e.g, to propagate matricies)\r\n\t\tconstructor: function(){\r\n\t\t\tgs.Container._init.call(this);\r\n\t\t},\r\n\t\tsetRawNode: function(rawNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a raw Silverlight node to be used by this shape\r\n\t\t\t// rawNode: Node\r\n\t\t\t//\t\ta Sliverlight node\r\n\t\t\tthis.rawNode = rawNode;\r\n\t\t\tthis.rawNode.tag = this.getUID();\r\n\t\t\t\r\n\t\t},\r\n\t\tdestroy: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReleases all internal resources owned by this shape. Once this method has been called,\r\n\t\t\t//\t\tthe instance is considered disposed and should not be used anymore.\r\n\t\t\tthis.clear(true);\r\n\t\t\t// avoid this.inherited\r\n\t\t\tsl.Shape.prototype.destroy.apply(this, arguments);\r\n\t\t}\r\n\t});\r\n\tsl.Group.nodeType = \"Canvas\";\r\n\r\n\tsl.Rect = declare(\"dojox.gfx.silverlight.Rect\", [sl.Shape, gs.Rect], {\r\n\t\t// summary:\r\n\t\t//\t\ta rectangle shape (Silverlight)\r\n\t\tsetShape: function(newShape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a rectangle shape object (Silverlight)\r\n\t\t\t// newShape: Object\r\n\t\t\t//\t\ta rectangle shape object\r\n\t\t\tthis.shape = g.makeParameters(this.shape, newShape);\r\n\t\t\tthis.bbox = null;\r\n\t\t\tvar r = this.rawNode, n = this.shape;\r\n\t\t\tr.width   = n.width;\r\n\t\t\tr.height  = n.height;\r\n\t\t\tr.radiusX = r.radiusY = n.r;\r\n\t\t\treturn this._applyTransform();\t// self\r\n\t\t},\r\n\t\t_getAdjustedMatrix: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns the adjusted (\"real\") transformation matrix\r\n\t\t\tvar matrix = this.matrix, s = this.shape, delta = {dx: s.x, dy: s.y};\r\n\t\t\treturn new g.Matrix2D(matrix ? [matrix, delta] : delta);\t// dojox/gfx/matrix.Matrix2D\r\n\t\t}\r\n\t});\r\n\tsl.Rect.nodeType = \"Rectangle\";\r\n\r\n\tsl.Ellipse = declare(\"dojox.gfx.silverlight.Ellipse\", [sl.Shape, gs.Ellipse], {\r\n\t\t// summary:\r\n\t\t//\t\tan ellipse shape (Silverlight)\r\n\t\tsetShape: function(newShape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets an ellipse shape object (Silverlight)\r\n\t\t\t// newShape: Object\r\n\t\t\t//\t\tan ellipse shape object\r\n\t\t\tthis.shape = g.makeParameters(this.shape, newShape);\r\n\t\t\tthis.bbox = null;\r\n\t\t\tvar r = this.rawNode, n = this.shape;\r\n\t\t\tr.width  = 2 * n.rx;\r\n\t\t\tr.height = 2 * n.ry;\r\n\t\t\treturn this._applyTransform();\t// self\r\n\t\t},\r\n\t\t_getAdjustedMatrix: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns the adjusted (\"real\") transformation matrix\r\n\t\t\tvar matrix = this.matrix, s = this.shape, delta = {dx: s.cx - s.rx, dy: s.cy - s.ry};\r\n\t\t\treturn new g.Matrix2D(matrix ? [matrix, delta] : delta);\t// dojox/gfx/matrix.Matrix2D\r\n\t\t}\r\n\t});\r\n\tsl.Ellipse.nodeType = \"Ellipse\";\r\n\r\n\tsl.Circle = declare(\"dojox.gfx.silverlight.Circle\", [sl.Shape, gs.Circle], {\r\n\t\t// summary:\r\n\t\t//\t\ta circle shape (Silverlight)\r\n\t\tsetShape: function(newShape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a circle shape object (Silverlight)\r\n\t\t\t// newShape: Object\r\n\t\t\t//\t\ta circle shape object\r\n\t\t\tthis.shape = g.makeParameters(this.shape, newShape);\r\n\t\t\tthis.bbox = null;\r\n\t\t\tvar r = this.rawNode, n = this.shape;\r\n\t\t\tr.width = r.height = 2 * n.r;\r\n\t\t\treturn this._applyTransform();\t// self\r\n\t\t},\r\n\t\t_getAdjustedMatrix: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns the adjusted (\"real\") transformation matrix\r\n\t\t\tvar matrix = this.matrix, s = this.shape, delta = {dx: s.cx - s.r, dy: s.cy - s.r};\r\n\t\t\treturn new g.Matrix2D(matrix ? [matrix, delta] : delta);\t// dojox/gfx/matrix.Matrix2D\r\n\t\t}\r\n\t});\r\n\tsl.Circle.nodeType = \"Ellipse\";\r\n\r\n\tsl.Line = declare(\"dojox.gfx.silverlight.Line\", [sl.Shape, gs.Line], {\r\n\t\t// summary:\r\n\t\t//\t\ta line shape (Silverlight)\r\n\t\tsetShape: function(newShape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a line shape object (Silverlight)\r\n\t\t\t// newShape: Object\r\n\t\t\t//\t\ta line shape object\r\n\t\t\tthis.shape = g.makeParameters(this.shape, newShape);\r\n\t\t\tthis.bbox = null;\r\n\t\t\tvar r = this.rawNode, n = this.shape;\r\n\t\t\tr.x1 = n.x1; r.y1 = n.y1; r.x2 = n.x2; r.y2 = n.y2;\r\n\t\t\treturn this;\t// self\r\n\t\t}\r\n\t});\r\n\tsl.Line.nodeType = \"Line\";\r\n\r\n\tsl.Polyline = declare(\"dojox.gfx.silverlight.Polyline\", [sl.Shape, gs.Polyline], {\r\n\t\t// summary:\r\n\t\t//\t\ta polyline/polygon shape (Silverlight)\r\n\t\tsetShape: function(points, closed){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a polyline/polygon shape object (Silverlight)\r\n\t\t\t// points: Object|Array\r\n\t\t\t//\t\ta polyline/polygon shape object, or an array of points\r\n\t\t\tif(points && points instanceof Array){\r\n\t\t\t\tthis.shape = g.makeParameters(this.shape, {points: points});\r\n\t\t\t\tif(closed && this.shape.points.length){\r\n\t\t\t\t\tthis.shape.points.push(this.shape.points[0]);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.shape = g.makeParameters(this.shape, points);\r\n\t\t\t}\r\n\t\t\tthis.bbox = null;\r\n\t\t\tthis._normalizePoints();\r\n\t\t\tvar p = this.shape.points, rp = [];\r\n\t\t\tfor(var i = 0; i < p.length; ++i){\r\n\t\t\t\trp.push(p[i].x, p[i].y);\r\n\t\t\t}\r\n\t\t\tthis.rawNode.points = rp.join(\",\");\r\n\t\t\treturn this;\t// self\r\n\t\t}\r\n\t});\r\n\tsl.Polyline.nodeType = \"Polyline\";\r\n\r\n\tsl.Image = declare(\"dojox.gfx.silverlight.Image\", [sl.Shape, gs.Image], {\r\n\t\t// summary:\r\n\t\t//\t\tan image (Silverlight)\r\n\t\tsetShape: function(newShape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets an image shape object (Silverlight)\r\n\t\t\t// newShape: Object\r\n\t\t\t//\t\tan image shape object\r\n\t\t\tthis.shape = g.makeParameters(this.shape, newShape);\r\n\t\t\tthis.bbox = null;\r\n\t\t\tvar r = this.rawNode, n = this.shape;\r\n\t\t\tr.width  = n.width;\r\n\t\t\tr.height = n.height;\r\n\t\t\tr.source = n.src;\r\n\t\t\treturn this._applyTransform();\t// self\r\n\t\t},\r\n\t\t_getAdjustedMatrix: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns the adjusted (\"real\") transformation matrix\r\n\t\t\tvar matrix = this.matrix, s = this.shape, delta = {dx: s.x, dy: s.y};\r\n\t\t\treturn new g.Matrix2D(matrix ? [matrix, delta] : delta);\t// dojox/gfx/matrix.Matrix2D\r\n\t\t},\r\n\t\tsetRawNode: function(rawNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tassigns and clears the underlying node that will represent this\r\n\t\t\t//\t\tshape. Once set, transforms, gradients, etc, can be applied.\r\n\t\t\t//\t\t(no fill & stroke by default)\r\n\t\t\tthis.rawNode = rawNode;\r\n\t\t\tthis.rawNode.tag = this.getUID();\r\n\t\t}\r\n\t});\r\n\tsl.Image.nodeType = \"Image\";\r\n\r\n\tsl.Text = declare(\"dojox.gfx.silverlight.Text\", [sl.Shape, gs.Text], {\r\n\t\t// summary:\r\n\t\t//\t\tan anchored text (Silverlight)\r\n\t\tsetShape: function(newShape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a text shape object (Silverlight)\r\n\t\t\t// newShape: Object\r\n\t\t\t//\t\ta text shape object\r\n\t\t\tthis.shape = g.makeParameters(this.shape, newShape);\r\n\t\t\tthis.bbox = null;\r\n\t\t\tvar r = this.rawNode, s = this.shape;\r\n\t\t\tr.text = \"\" + s.text; // #14522\r\n\t\t\tr.textDecorations = s.decoration === \"underline\" ? \"Underline\" : \"None\";\r\n\t\t\tr[\"Canvas.Left\"] = -10000;\r\n\t\t\tr[\"Canvas.Top\"]  = -10000;\r\n\t\t\tif(!this._delay){\r\n\t\t\t\tthis._delay = window.setTimeout(lang.hitch(this, \"_delayAlignment\"), 10);\r\n\t\t\t}\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\t_delayAlignment: function(){\r\n\t\t\t// handle alignment\r\n\t\t\tvar r = this.rawNode, s = this.shape, w, h;\r\n\t\t\ttry{\r\n\t\t\t\tw = r.actualWidth;\r\n\t\t\t\th = r.actualHeight;\r\n\t\t\t}catch(e){\r\n\t\t\t\t// bail out if the node is hidden\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar x = s.x, y = s.y - h * 0.75;\r\n\t\t\tswitch(s.align){\r\n\t\t\t\tcase \"middle\":\r\n\t\t\t\t\tx -= w / 2;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"end\":\r\n\t\t\t\t\tx -= w;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis._delta = {dx: x, dy: y};\r\n\t\t\tr[\"Canvas.Left\"] = 0;\r\n\t\t\tr[\"Canvas.Top\"]  = 0;\r\n\t\t\tthis._applyTransform();\r\n\t\t\tdelete this._delay;\r\n\t\t},\r\n\t\t_getAdjustedMatrix: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns the adjusted (\"real\") transformation matrix\r\n\t\t\tvar matrix = this.matrix, delta = this._delta, x;\r\n\t\t\tif(matrix){\r\n\t\t\t\tx = delta ? [matrix, delta] : matrix;\r\n\t\t\t}else{\r\n\t\t\t\tx = delta ? delta : {};\r\n\t\t\t}\r\n\t\t\treturn new g.Matrix2D(x);\r\n\t\t},\r\n\t\tsetStroke: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tignore setting a stroke style\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\t_setFillAttr: function(f){\r\n\t\t\tthis.rawNode.foreground = f;\r\n\t\t},\r\n\t\tsetRawNode: function(rawNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tassigns and clears the underlying node that will represent this\r\n\t\t\t//\t\tshape. Once set, transforms, gradients, etc, can be applied.\r\n\t\t\t//\t\t(no fill & stroke by default)\r\n\t\t\tthis.rawNode = rawNode;\r\n\t\t\tthis.rawNode.tag = this.getUID();\r\n\t\t},\r\n\t\tgetTextWidth: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tget the text width in pixels\r\n\t\t\treturn this.rawNode.actualWidth;\r\n\t\t},\r\n\t\tgetBoundingBox: function(){\r\n\t\t\tvar bbox = null, text = this.getShape().text, r = this.rawNode, w = 0, h = 0;\r\n\t\t\tif(!g._base._isRendered(this)){\r\n\t\t\t\treturn {x:0, y:0, width:0, height:0};\r\n\t\t\t}\r\n\t\t\tif(text){\r\n\t\t\t\ttry{\r\n\t\t\t\t\tw = r.actualWidth;\r\n\t\t\t\t\th = r.actualHeight;\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\t// bail out if the node is hidden\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\tvar loc = g._base._computeTextLocation(this.getShape(), w, h, true);\r\n\t\t\t\tbbox = {\r\n\t\t\t\t\tx: loc.x,\r\n\t\t\t\t\ty: loc.y,\r\n\t\t\t\t\twidth : w,\r\n\t\t\t\t\theight: h\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn bbox;\r\n\t\t}\r\n\t});\r\n\tsl.Text.nodeType = \"TextBlock\";\r\n\r\n\tsl.Path = declare(\"dojox.gfx.silverlight.Path\", [sl.Shape, pathLib.Path], {\r\n\t\t// summary:\r\n\t\t//\t\ta path shape (Silverlight)\r\n\t\t_updateWithSegment: function(segment){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tupdates the bounding box of path with new segment\r\n\t\t\t// segment: Object\r\n\t\t\t//\t\ta segment\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tvar p = this.shape.path;\r\n\t\t\tif(typeof(p) == \"string\"){\r\n\t\t\t\tthis.rawNode.data = p ? p : null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetShape: function(newShape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a path using a shape (Silverlight)\r\n\t\t\t// newShape: Object\r\n\t\t\t//\t\tan SVG path string or a path object (see dojox/gfx.defaultPath)\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tvar p = this.shape.path;\r\n\t\t\tthis.rawNode.data = p ? p : null;\r\n\t\t\treturn this;\t// self\r\n\t\t}\r\n\t});\r\n\tsl.Path.nodeType = \"Path\";\r\n\r\n\tsl.TextPath = declare(\"dojox.gfx.silverlight.TextPath\", [sl.Shape, pathLib.TextPath], {\r\n\t\t// summary:\r\n\t\t//\t\ta textpath shape (Silverlight)\r\n\t\t_updateWithSegment: function(segment){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tupdates the bounding box of path with new segment\r\n\t\t\t// segment: Object\r\n\t\t\t//\t\ta segment\r\n\t\t},\r\n\t\tsetShape: function(newShape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a path using a shape (Silverlight)\r\n\t\t\t// newShape: Object\r\n\t\t\t//\t\tan SVG path string or a path object (see dojox/gfx.defaultPath)\r\n\t\t},\r\n\t\t_setText: function(){\r\n\t\t}\r\n\t});\r\n\tsl.TextPath.nodeType = \"text\";\r\n\r\n\tvar surfaces = {}, nullFunc = new Function;\r\n\r\n\tsl.Surface = declare(\"dojox.gfx.silverlight.Surface\", gs.Surface, {\r\n\t\t// summary:\r\n\t\t//\t\ta surface object to be used for drawings (Silverlight)\r\n\t\tconstructor: function(){\r\n\t\t\tgs.Container._init.call(this);\r\n\t\t},\r\n\t\tdestroy: function(){\r\n\t\t\tthis.clear(true);\r\n\t\t\twindow[this._onLoadName] = nullFunc;\r\n\t\t\tdelete surfaces[this._nodeName];\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\t\tsetDimensions: function(width, height){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets the width and height of the rawNode\r\n\t\t\t// width: String\r\n\t\t\t//\t\twidth of surface, e.g., \"100px\"\r\n\t\t\t// height: String\r\n\t\t\t//\t\theight of surface, e.g., \"100px\"\r\n\t\t\tthis.width  = g.normalizedLength(width);\t// in pixels\r\n\t\t\tthis.height = g.normalizedLength(height);\t// in pixels\r\n\t\t\tvar p = this.rawNode && this.rawNode.getHost();\r\n\t\t\tif(p){\r\n\t\t\t\tp.width = width;\r\n\t\t\t\tp.height = height;\r\n\t\t\t}\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\tgetDimensions: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns an object with properties \"width\" and \"height\"\r\n\t\t\tvar p = this.rawNode && this.rawNode.getHost();\r\n\t\t\tvar t = p ? {width: p.content.actualWidth, height: p.content.actualHeight} : null;\r\n\t\t\tif(t.width  <= 0){ t.width  = this.width; }\r\n\t\t\tif(t.height <= 0){ t.height = this.height; }\r\n\t\t\treturn t;\t// Object\r\n\t\t}\r\n\t});\r\n\r\n\tsl.createSurface = function(parentNode, width, height){\r\n\t\t// summary:\r\n\t\t//\t\tcreates a surface (Silverlight)\r\n\t\t// parentNode: Node\r\n\t\t//\t\ta parent node\r\n\t\t// width: String\r\n\t\t//\t\twidth of surface, e.g., \"100px\"\r\n\t\t// height: String\r\n\t\t//\t\theight of surface, e.g., \"100px\"\r\n\r\n\t\tif(!width && !height){\r\n\t\t\tvar pos = domGeom.position(parentNode);\r\n\t\t\twidth  = width  || pos.w;\r\n\t\t\theight = height || pos.h;\r\n\t\t}\r\n\t\tif(typeof width == \"number\"){\r\n\t\t\twidth = width + \"px\";\r\n\t\t}\r\n\t\tif(typeof height == \"number\"){\r\n\t\t\theight = height + \"px\";\r\n\t\t}\r\n\r\n\t\tvar s = new sl.Surface();\r\n\t\tparentNode = dom.byId(parentNode);\r\n\t\ts._parent = parentNode;\r\n\t\ts._nodeName = g._base._getUniqueId();\r\n\r\n\t\t// create an empty canvas\r\n\t\tvar t = parentNode.ownerDocument.createElement(\"script\");\r\n\t\tt.type = \"text/xaml\";\r\n\t\tt.id = g._base._getUniqueId();\r\n\t\tt.text = \"<?xml version='1.0'?><Canvas xmlns='http://schemas.microsoft.com/client/2007' Name='\" +\r\n\t\t\ts._nodeName + \"'/>\";\r\n\t\tparentNode.parentNode.insertBefore(t, parentNode);\r\n\t\ts._nodes.push(t);\r\n\r\n\t\t// build the object\r\n\t\tvar obj, pluginName = g._base._getUniqueId(),\r\n\t\t\tonLoadName = \"__\" + g._base._getUniqueId() + \"_onLoad\";\r\n\t\ts._onLoadName = onLoadName;\r\n\t\twindow[onLoadName] = function(sender){\r\n\t\t\tif(!s.rawNode){\r\n\t\t\t\ts.rawNode = dom.byId(pluginName, parentNode.ownerDocument).content.root;\r\n\t\t\t\t// register the plugin with its parent node\r\n\t\t\t\tsurfaces[s._nodeName] = parentNode;\r\n\t\t\t\ts.onLoad(s);\r\n\t\t\t}\r\n\t\t};\r\n\t\tif(has(\"safari\")){\r\n\t\t\tobj = \"<embed type='application/x-silverlight' id='\" +\r\n\t\t\tpluginName + \"' width='\" + width + \"' height='\" + height +\r\n\t\t\t\" background='transparent'\" +\r\n\t\t\t\" source='#\" + t.id + \"'\" +\r\n\t\t\t\" windowless='true'\" +\r\n\t\t\t\" maxFramerate='60'\" +\r\n\t\t\t\" onLoad='\" + onLoadName + \"'\" +\r\n\t\t\t\" onError='__dojoSilverlightError'\" +\r\n\t\t\t\" /><iframe style='visibility:hidden;height:0;width:0'/>\";\r\n\t\t}else{\r\n\t\t\tobj = \"<object type='application/x-silverlight' data='data:application/x-silverlight,' id='\" +\r\n\t\t\tpluginName + \"' width='\" + width + \"' height='\" + height + \"'>\" +\r\n\t\t\t\"<param name='background' value='transparent' />\" +\r\n\t\t\t\"<param name='source' value='#\" + t.id + \"' />\" +\r\n\t\t\t\"<param name='windowless' value='true' />\" +\r\n\t\t\t\"<param name='maxFramerate' value='60' />\" +\r\n\t\t\t\"<param name='onLoad' value='\" + onLoadName + \"' />\" +\r\n\t\t\t\"<param name='onError' value='__dojoSilverlightError' />\" +\r\n\t\t\t\"</object>\";\r\n\t\t}\r\n\t\tparentNode.innerHTML = obj;\r\n\r\n\t\tvar pluginNode = dom.byId(pluginName, parentNode.ownerDocument);\r\n\t\tif(pluginNode.content && pluginNode.content.root){\r\n\t\t\t// the plugin was created synchronously\r\n\t\t\ts.rawNode = pluginNode.content.root;\r\n\t\t\t// register the plugin with its parent node\r\n\t\t\tsurfaces[s._nodeName] = parentNode;\r\n\t\t}else{\r\n\t\t\t// the plugin is being created asynchronously\r\n\t\t\ts.rawNode = null;\r\n\t\t\ts.isLoaded = false;\r\n\t\t}\r\n\t\ts._nodes.push(pluginNode);\r\n\r\n\t\ts.width  = g.normalizedLength(width);\t// in pixels\r\n\t\ts.height = g.normalizedLength(height);\t// in pixels\r\n\r\n\t\treturn s;\t// dojox/gfx.Surface\r\n\t};\r\n\r\n\t// the function below is meant to be global, it is called from\r\n\t// the Silverlight's error handler\r\n\t__dojoSilverlightError = function(sender, err){\r\n\t\tvar t = \"Silverlight Error:\\n\" +\r\n\t\t\t\"Code: \" + err.ErrorCode + \"\\n\" +\r\n\t\t\t\"Type: \" + err.ErrorType + \"\\n\" +\r\n\t\t\t\"Message: \" + err.ErrorMessage + \"\\n\";\r\n\t\tswitch(err.ErrorType){\r\n\t\t\tcase \"ParserError\":\r\n\t\t\t\tt += \"XamlFile: \" + err.xamlFile + \"\\n\" +\r\n\t\t\t\t\t\"Line: \" + err.lineNumber + \"\\n\" +\r\n\t\t\t\t\t\"Position: \" + err.charPosition + \"\\n\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"RuntimeError\":\r\n\t\t\t\tt += \"MethodName: \" + err.methodName + \"\\n\";\r\n\t\t\t\tif(err.lineNumber != 0){\r\n\t\t\t\t\tt +=\r\n\t\t\t\t\t\t\"Line: \" + err.lineNumber + \"\\n\" +\r\n\t\t\t\t\t\t\"Position: \" + err.charPosition + \"\\n\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\t// Extenders\r\n\r\n\tvar Font = {\r\n\t\t_setFont: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a font object (Silverlight)\r\n\t\t\tvar f = this.fontStyle, r = this.rawNode, t = f.family.toLowerCase();\r\n\t\t\tr.fontStyle = f.style == \"italic\" ? \"Italic\" : \"Normal\";\r\n\t\t\tr.fontWeight = f.weight in fontweight ? fontweight[f.weight] : f.weight;\r\n\t\t\tr.fontSize = g.normalizedLength(f.size);\r\n\t\t\tr.fontFamily = t in fonts ? fonts[t] : f.family;\r\n\r\n\t\t\t// update the transform\r\n\t\t\tif(!this._delay){\r\n\t\t\t\tthis._delay = window.setTimeout(lang.hitch(this, \"_delayAlignment\"), 10);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar C = gs.Container, Container = {\r\n\t\tadd: function(shape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tadds a shape to a group/surface\r\n\t\t\t// shape: dojox/gfx/shape.Shape\r\n\t\t\t//\t\ta Silverlight shape object\r\n\t\t\tif(this != shape.getParent()){\r\n\t\t\t\tC.add.apply(this, arguments);\r\n\t\t\t\tthis.rawNode.children.add(shape.rawNode);\r\n\t\t\t}\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\tremove: function(shape, silently){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tremove a shape from a group/surface\r\n\t\t\t// shape: dojox/gfx/shape.Shape\r\n\t\t\t//\t\ta Silverlight shape object\r\n\t\t\t// silently: Boolean?\r\n\t\t\t//\t\tif true, regenerate a picture\r\n\t\t\tif(this == shape.getParent()){\r\n\t\t\t\tvar parent = shape.rawNode.getParent();\r\n\t\t\t\tif(parent){\r\n\t\t\t\t\tparent.children.remove(shape.rawNode);\r\n\t\t\t\t}\r\n\t\t\t\tC.remove.apply(this, arguments);\r\n\t\t\t}\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\tclear: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tremoves all shapes from a group/surface\r\n\t\t\tthis.rawNode.children.clear();\r\n\t\t\treturn C.clear.apply(this, arguments);\r\n\t\t},\r\n\t\tgetBoundingBox: C.getBoundingBox,\r\n\t\t_moveChildToFront: C._moveChildToFront,\r\n\t\t_moveChildToBack:  C._moveChildToBack\r\n\t};\r\n\r\n\tvar Creator = {\r\n\t\tcreateObject: function(shapeType, rawShape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreates an instance of the passed shapeType class\r\n\t\t\t// shapeType: Function\r\n\t\t\t//\t\ta class constructor to create an instance of\r\n\t\t\t// rawShape: Object\r\n\t\t\t//\t\tproperties to be passed in to the classes \"setShape\" method\r\n\t\t\tif(!this.rawNode){ return null; }\r\n\t\t\tvar shape = new shapeType();\r\n\t\t\tvar node = this.rawNode.getHost().content.createFromXaml(\"<\" + shapeType.nodeType + \"/>\");\r\n\t\t\tshape.setRawNode(node);\r\n\t\t\tshape.setShape(rawShape);\r\n\t\t\tthis.add(shape);\r\n\t\t\treturn shape;\t// dojox/gfx/shape.Shape\r\n\t\t}\r\n\t};\r\n\r\n\tlang.extend(sl.Text, Font);\r\n\t//dojo.extend(sl.TextPath, Font);\r\n\r\n\tlang.extend(sl.Group, Container);\r\n\tlang.extend(sl.Group, gs.Creator);\r\n\tlang.extend(sl.Group, Creator);\r\n\r\n\tlang.extend(sl.Surface, Container);\r\n\tlang.extend(sl.Surface, gs.Creator);\r\n\tlang.extend(sl.Surface, Creator);\r\n\r\n\tfunction mouseFix(s, a){\r\n\t\tvar ev = {target: s, currentTarget: s, preventDefault: function(){}, stopPropagation: function(){}};\r\n\t\ttry{\r\n\t\t\tif(a.source){\r\n\t\t\t\t// support silverlight 2.0\r\n\t\t\t\tev.target = a.source;\r\n\t\t\t\tvar gfxId = ev.target.tag;\t\t\t\t\r\n\t\t\t\tev.gfxTarget = gs.byId(gfxId);\r\n\t\t\t}\r\n\t\t}catch(e){\r\n\t\t\t// a.source does not exist in 1.0\r\n\t\t}\r\n\t\r\n\t\tif(a){\r\n\t\t\ttry{\r\n\t\t\t\tev.ctrlKey = a.ctrl;\r\n\t\t\t\tev.shiftKey = a.shift;\r\n\t\t\t\tvar p = a.getPosition(null);\r\n\t\t\t\tev.x = ev.offsetX = ev.layerX = p.x;\r\n\t\t\t\tev.y = ev.offsetY = ev.layerY = p.y;\r\n\t\t\t\t// calculate clientX and clientY\r\n\t\t\t\tvar parent = surfaces[s.getHost().content.root.name];\r\n\t\t\t\tvar t = domGeom.position(parent);\r\n\t\t\t\tev.clientX = t.x + p.x;\r\n\t\t\t\tev.clientY = t.y + p.y;\r\n\t\t\t}catch(e){\r\n\t\t\t\t// squelch bugs in MouseLeave's implementation\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ev;\r\n\t}\r\n\t\r\n\tfunction keyFix(s, a){\r\n\t\tvar ev = {\r\n\t\t\tkeyCode:  a.platformKeyCode,\r\n\t\t\tctrlKey:  a.ctrl,\r\n\t\t\tshiftKey: a.shift\r\n\t\t};\r\n\t\ttry{\r\n\t\t\tif(a.source){\r\n\t\t\t\t// source is defined from Silverlight 2+\r\n\t\t\t\tev.target = a.source;\r\n\t\t\t\tev.gfxTarget = gs.byId(ev.target.tag);\r\n\t\t\t}\r\n\t\t}catch(e){\r\n\t\t\t// a.source does not exist in 1.0\r\n\t\t}\r\n\t\treturn ev;\r\n\t}\r\n\t\r\n\tvar eventNames = {\r\n\t\tonclick:\t\t{name: \"MouseLeftButtonUp\", fix: mouseFix},\r\n\t\tonmouseenter:\t{name: \"MouseEnter\", fix: mouseFix},\r\n\t\tonmouseleave:\t{name: \"MouseLeave\", fix: mouseFix},\r\n\t\tonmouseover:\t{name: \"MouseEnter\", fix: mouseFix},\r\n\t\tonmouseout:\t\t{name: \"MouseLeave\", fix: mouseFix},\r\n\t\tonmousedown:\t{name: \"MouseLeftButtonDown\", fix: mouseFix},\r\n\t\tonmouseup:\t\t{name: \"MouseLeftButtonUp\", fix: mouseFix},\r\n\t\tonmousemove:\t{name: \"MouseMove\", fix: mouseFix},\r\n\t\tonkeydown:\t\t{name: \"KeyDown\", fix: keyFix},\r\n\t\tonkeyup:\t\t{name: \"KeyUp\", fix: keyFix}\r\n\t};\r\n\t\r\n\tvar eventsProcessing = {\r\n\t\tconnect: function(name, object, method){\r\n\t\t\treturn this.on(name, method ? lang.hitch(object, method) : object);\r\n\t\t},\r\n\r\n\t\ton: function(name, listener){\r\n\t\t\tif(typeof name === \"string\"){\r\n\t\t\t\tif(name.indexOf(\"mouse\") === 0){\r\n\t\t\t\t\tname = \"on\" + name;\r\n\t\t\t\t}\r\n\t\t\t\tvar token, n = name in eventNames ? eventNames[name] :\r\n\t\t\t\t\t{name: name, fix: function(){ return {}; }};\r\n\t\t\t\ttoken = this.getEventSource().addEventListener(n.name, function(s, a){ listener(n.fix(s, a)); });\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: n.name,\r\n\t\t\t\t\ttoken: token,\r\n\t\t\t\t\tremove: lang.hitch(this, function(){\r\n\t\t\t\t\t\tthis.getEventSource().removeEventListener(n.name, token);\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t}else{\r\n\t\t\t\t// pass this so that it gets back in this.on with the event name\r\n\t\t\t\treturn on(this, name, listener);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdisconnect: function(token){\r\n\t\t\treturn token.remove();\r\n\t\t}\r\n\t};\r\n\t\r\n\tlang.extend(sl.Shape, eventsProcessing);\r\n\tlang.extend(sl.Surface, eventsProcessing);\r\n\t\r\n\t// patch dojox/gfx\r\n\tg.equalSources = function(a, b){\r\n\t\t// summary:\r\n\t\t//\t\tcompares event sources, returns true if they are equal\r\n\t\treturn a && b && a.equals(b);\r\n\t};\r\n\t\r\n\treturn sl;\r\n});\r\n\r\n"]}