{"version":3,"sources":["gfx/path.js"],"names":["define","g","lang","declare","matrix","shapeLib","Path","Shape","constructor","rawNode","this","shape","clone","defaultPath","segments","tbbox","absolute","last","segmented","setAbsoluteMode","mode","_confirmSegmented","getAbsoluteMode","getBoundingBox","bbox","x","l","y","t","width","r","height","b","_getRealBBox","_getRealMatrix","i","len","length","_updateWithSegment","getLastPosition","_applyTransform","inherited","arguments","_updateBBox","m","multiplyPoint","segment","n","args","action","start","path","push","formatNumber","join","_validSegments","h","v","c","s","q","a","z","_pushSegment","group","toLowerCase","slice","_collectArgs","array","Array","moveTo","lineTo","hLineTo","vLineTo","curveTo","smoothCurveTo","qCurveTo","qSmoothCurveTo","arcTo","closePath","_setPath","p","isArray","match","pathSvgRegExp","parseFloat","isNaN","setShape","newShape","lazyPathSegmentation","_2PI","Math","PI","TextPath","text","defaultTextPath","fontStyle","defaultFont","getText","setText","newText","makeParameters","_setText","getFont","setFont","newFont","splitFontString","_setFont"],"mappings":"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","file":"../../gfx/path.js","sourcesContent":["define([\"./_base\", \"dojo/_base/lang\",\"dojo/_base/declare\", \"./matrix\", \"./shape\"],\r\n\tfunction(g, lang, declare, matrix, shapeLib){\r\n\r\n\t// module:\r\n\t//\t\tdojox/gfx/path\r\n\r\n\tvar Path = declare(\"dojox.gfx.path.Path\", shapeLib.Shape, {\r\n\t\t// summary:\r\n\t\t//\t\ta generalized path shape\r\n\r\n\t\tconstructor: function(rawNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\ta path constructor\r\n\t\t\t// rawNode: Node\r\n\t\t\t//\t\ta DOM node to be used by this path object\r\n\t\t\tthis.shape = lang.clone(g.defaultPath);\r\n\t\t\tthis.segments = [];\r\n\t\t\tthis.tbbox = null;\r\n\t\t\tthis.absolute = true;\r\n\t\t\tthis.last = {};\r\n\t\t\tthis.rawNode = rawNode;\r\n\t\t\tthis.segmented = false;\r\n\t\t},\r\n\r\n\t\t// mode manipulations\r\n\t\tsetAbsoluteMode: function(mode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets an absolute or relative mode for path points\r\n\t\t\t// mode: Boolean\r\n\t\t\t//\t\ttrue/false or \"absolute\"/\"relative\" to specify the mode\r\n\t\t\tthis._confirmSegmented();\r\n\t\t\tthis.absolute = typeof mode == \"string\" ? (mode == \"absolute\") : mode;\r\n\t\t\treturn this; // self\r\n\t\t},\r\n\t\tgetAbsoluteMode: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns a current value of the absolute mode\r\n\t\t\tthis._confirmSegmented();\r\n\t\t\treturn this.absolute; // Boolean\r\n\t\t},\r\n\r\n\t\tgetBoundingBox: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns the bounding box {x, y, width, height} or null\r\n\t\t\tthis._confirmSegmented();\r\n\t\t\treturn (this.bbox && (\"l\" in this.bbox)) ? {x: this.bbox.l, y: this.bbox.t, width: this.bbox.r - this.bbox.l, height: this.bbox.b - this.bbox.t} : null; // dojox/gfx.Rectangle\r\n\t\t},\r\n\r\n\t\t_getRealBBox: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns an array of four points or null\r\n\t\t\t//\t\tfour points represent four corners of the untransformed bounding box\r\n\t\t\tthis._confirmSegmented();\r\n\t\t\tif(this.tbbox){\r\n\t\t\t\treturn this.tbbox;\t// Array\r\n\t\t\t}\r\n\t\t\tvar bbox = this.bbox, matrix = this._getRealMatrix();\r\n\t\t\tthis.bbox = null;\r\n\t\t\tfor(var i = 0, len = this.segments.length; i < len; ++i){\r\n\t\t\t\tthis._updateWithSegment(this.segments[i], matrix);\r\n\t\t\t}\r\n\t\t\tvar t = this.bbox;\r\n\t\t\tthis.bbox = bbox;\r\n\t\t\tthis.tbbox = t ? [\r\n\t\t\t\t{x: t.l, y: t.t},\r\n\t\t\t\t{x: t.r, y: t.t},\r\n\t\t\t\t{x: t.r, y: t.b},\r\n\t\t\t\t{x: t.l, y: t.b}\r\n\t\t\t] : null;\r\n\t\t\treturn this.tbbox;\t// Array\r\n\t\t},\r\n\r\n\t\tgetLastPosition: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns the last point in the path, or null\r\n\t\t\tthis._confirmSegmented();\r\n\t\t\treturn \"x\" in this.last ? this.last : null; // Object\r\n\t\t},\r\n\r\n\t\t_applyTransform: function(){\r\n\t\t\tthis.tbbox = null;\r\n\t\t\treturn this.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t// segment interpretation\r\n\t\t_updateBBox: function(x, y, m){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tupdates the bounding box of path with new point\r\n\t\t\t// x: Number\r\n\t\t\t//\t\tan x coordinate\r\n\t\t\t// y: Number\r\n\t\t\t//\t\ta y coordinate\r\n\r\n\t\t\tif(m){\r\n\t\t\t\tvar t = matrix.multiplyPoint(m, x, y);\r\n\t\t\t\tx = t.x;\r\n\t\t\t\ty = t.y;\r\n\t\t\t}\r\n\r\n\t\t\t// we use {l, b, r, t} representation of a bbox\r\n\t\t\tif(this.bbox && (\"l\" in this.bbox)){\r\n\t\t\t\tif(this.bbox.l > x) this.bbox.l = x;\r\n\t\t\t\tif(this.bbox.r < x) this.bbox.r = x;\r\n\t\t\t\tif(this.bbox.t > y) this.bbox.t = y;\r\n\t\t\t\tif(this.bbox.b < y) this.bbox.b = y;\r\n\t\t\t}else{\r\n\t\t\t\tthis.bbox = {l: x, b: y, r: x, t: y};\r\n\t\t\t}\r\n\t\t},\r\n\t\t_updateWithSegment: function(segment, matrix){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tupdates the bounding box of path with new segment\r\n\t\t\t// segment: Object\r\n\t\t\t//\t\ta segment\r\n\t\t\tvar n = segment.args, l = n.length, i;\r\n\t\t\t// update internal variables: bbox, absolute, last\r\n\t\t\tswitch(segment.action){\r\n\t\t\t\tcase \"M\":\r\n\t\t\t\tcase \"L\":\r\n\t\t\t\tcase \"C\":\r\n\t\t\t\tcase \"S\":\r\n\t\t\t\tcase \"Q\":\r\n\t\t\t\tcase \"T\":\r\n\t\t\t\t\tfor(i = 0; i < l; i += 2){\r\n\t\t\t\t\t\tthis._updateBBox(n[i], n[i + 1], matrix);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.last.x = n[l - 2];\r\n\t\t\t\t\tthis.last.y = n[l - 1];\r\n\t\t\t\t\tthis.absolute = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"H\":\r\n\t\t\t\t\tfor(i = 0; i < l; ++i){\r\n\t\t\t\t\t\tthis._updateBBox(n[i], this.last.y, matrix);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.last.x = n[l - 1];\r\n\t\t\t\t\tthis.absolute = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"V\":\r\n\t\t\t\t\tfor(i = 0; i < l; ++i){\r\n\t\t\t\t\t\tthis._updateBBox(this.last.x, n[i], matrix);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.last.y = n[l - 1];\r\n\t\t\t\t\tthis.absolute = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"m\":\r\n\t\t\t\t\tvar start = 0;\r\n\t\t\t\t\tif(!(\"x\" in this.last)){\r\n\t\t\t\t\t\tthis._updateBBox(this.last.x = n[0], this.last.y = n[1], matrix);\r\n\t\t\t\t\t\tstart = 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor(i = start; i < l; i += 2){\r\n\t\t\t\t\t\tthis._updateBBox(this.last.x += n[i], this.last.y += n[i + 1], matrix);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.absolute = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"l\":\r\n\t\t\t\tcase \"t\":\r\n\t\t\t\t\tfor(i = 0; i < l; i += 2){\r\n\t\t\t\t\t\tthis._updateBBox(this.last.x += n[i], this.last.y += n[i + 1], matrix);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.absolute = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"h\":\r\n\t\t\t\t\tfor(i = 0; i < l; ++i){\r\n\t\t\t\t\t\tthis._updateBBox(this.last.x += n[i], this.last.y, matrix);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.absolute = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"v\":\r\n\t\t\t\t\tfor(i = 0; i < l; ++i){\r\n\t\t\t\t\t\tthis._updateBBox(this.last.x, this.last.y += n[i], matrix);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.absolute = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"c\":\r\n\t\t\t\t\tfor(i = 0; i < l; i += 6){\r\n\t\t\t\t\t\tthis._updateBBox(this.last.x + n[i], this.last.y + n[i + 1], matrix);\r\n\t\t\t\t\t\tthis._updateBBox(this.last.x + n[i + 2], this.last.y + n[i + 3], matrix);\r\n\t\t\t\t\t\tthis._updateBBox(this.last.x += n[i + 4], this.last.y += n[i + 5], matrix);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.absolute = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"s\":\r\n\t\t\t\tcase \"q\":\r\n\t\t\t\t\tfor(i = 0; i < l; i += 4){\r\n\t\t\t\t\t\tthis._updateBBox(this.last.x + n[i], this.last.y + n[i + 1], matrix);\r\n\t\t\t\t\t\tthis._updateBBox(this.last.x += n[i + 2], this.last.y += n[i + 3], matrix);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.absolute = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"A\":\r\n\t\t\t\t\tfor(i = 0; i < l; i += 7){\r\n\t\t\t\t\t\tthis._updateBBox(n[i + 5], n[i + 6], matrix);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.last.x = n[l - 2];\r\n\t\t\t\t\tthis.last.y = n[l - 1];\r\n\t\t\t\t\tthis.absolute = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"a\":\r\n\t\t\t\t\tfor(i = 0; i < l; i += 7){\r\n\t\t\t\t\t\tthis._updateBBox(this.last.x += n[i + 5], this.last.y += n[i + 6], matrix);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.absolute = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t// add an SVG path segment\r\n\t\t\tvar path = [segment.action];\r\n\t\t\tfor(i = 0; i < l; ++i){\r\n\t\t\t\tpath.push(g.formatNumber(n[i], true));\r\n\t\t\t}\r\n\t\t\tif(typeof this.shape.path == \"string\"){\r\n\t\t\t\tthis.shape.path += path.join(\"\");\r\n\t\t\t}else{\r\n\t\t\t\tfor(i = 0, l = path.length; i < l; ++i){\r\n\t\t\t\t\tthis.shape.path.push(path[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// a dictionary, which maps segment type codes to a number of their arguments\r\n\t\t_validSegments: {m: 2, l: 2, h: 1, v: 1, c: 6, s: 4, q: 4, t: 2, a: 7, z: 0},\r\n\r\n\t\t_pushSegment: function(action, args){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tadds a segment\r\n\t\t\t// action: String\r\n\t\t\t//\t\tvalid SVG code for a segment's type\r\n\t\t\t// args: Array\r\n\t\t\t//\t\ta list of parameters for this segment\r\n\t\t\tthis.tbbox = null;\r\n\t\t\tvar group = this._validSegments[action.toLowerCase()], segment;\r\n\t\t\tif(typeof group == \"number\"){\r\n\t\t\t\tif(group){\r\n\t\t\t\t\tif(args.length >= group){\r\n\t\t\t\t\t\tsegment = {action: action, args: args.slice(0, args.length - args.length % group)};\r\n\t\t\t\t\t\tthis.segments.push(segment);\r\n\t\t\t\t\t\tthis._updateWithSegment(segment);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsegment = {action: action, args: []};\r\n\t\t\t\t\tthis.segments.push(segment);\r\n\t\t\t\t\tthis._updateWithSegment(segment);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_collectArgs: function(array, args){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tconverts an array of arguments to plain numeric values\r\n\t\t\t// array: Array\r\n\t\t\t//\t\tan output argument (array of numbers)\r\n\t\t\t// args: Array\r\n\t\t\t//\t\tan input argument (can be values of Boolean, Number, dojox/gfx.Point, or an embedded array of them)\r\n\t\t\tfor(var i = 0; i < args.length; ++i){\r\n\t\t\t\tvar t = args[i];\r\n\t\t\t\tif(typeof t == \"boolean\"){\r\n\t\t\t\t\tarray.push(t ? 1 : 0);\r\n\t\t\t\t}else if(typeof t == \"number\"){\r\n\t\t\t\t\tarray.push(t);\r\n\t\t\t\t}else if(t instanceof Array){\r\n\t\t\t\t\tthis._collectArgs(array, t);\r\n\t\t\t\t}else if(\"x\" in t && \"y\" in t){\r\n\t\t\t\t\tarray.push(t.x, t.y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// segments\r\n\t\tmoveTo: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a move segment\r\n\t\t\tthis._confirmSegmented();\r\n\t\t\tvar args = [];\r\n\t\t\tthis._collectArgs(args, arguments);\r\n\t\t\tthis._pushSegment(this.absolute ? \"M\" : \"m\", args);\r\n\t\t\treturn this; // self\r\n\t\t},\r\n\t\tlineTo: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a line segment\r\n\t\t\tthis._confirmSegmented();\r\n\t\t\tvar args = [];\r\n\t\t\tthis._collectArgs(args, arguments);\r\n\t\t\tthis._pushSegment(this.absolute ? \"L\" : \"l\", args);\r\n\t\t\treturn this; // self\r\n\t\t},\r\n\t\thLineTo: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a horizontal line segment\r\n\t\t\tthis._confirmSegmented();\r\n\t\t\tvar args = [];\r\n\t\t\tthis._collectArgs(args, arguments);\r\n\t\t\tthis._pushSegment(this.absolute ? \"H\" : \"h\", args);\r\n\t\t\treturn this; // self\r\n\t\t},\r\n\t\tvLineTo: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a vertical line segment\r\n\t\t\tthis._confirmSegmented();\r\n\t\t\tvar args = [];\r\n\t\t\tthis._collectArgs(args, arguments);\r\n\t\t\tthis._pushSegment(this.absolute ? \"V\" : \"v\", args);\r\n\t\t\treturn this; // self\r\n\t\t},\r\n\t\tcurveTo: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a curve segment\r\n\t\t\tthis._confirmSegmented();\r\n\t\t\tvar args = [];\r\n\t\t\tthis._collectArgs(args, arguments);\r\n\t\t\tthis._pushSegment(this.absolute ? \"C\" : \"c\", args);\r\n\t\t\treturn this; // self\r\n\t\t},\r\n\t\tsmoothCurveTo: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a smooth curve segment\r\n\t\t\tthis._confirmSegmented();\r\n\t\t\tvar args = [];\r\n\t\t\tthis._collectArgs(args, arguments);\r\n\t\t\tthis._pushSegment(this.absolute ? \"S\" : \"s\", args);\r\n\t\t\treturn this; // self\r\n\t\t},\r\n\t\tqCurveTo: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a quadratic curve segment\r\n\t\t\tthis._confirmSegmented();\r\n\t\t\tvar args = [];\r\n\t\t\tthis._collectArgs(args, arguments);\r\n\t\t\tthis._pushSegment(this.absolute ? \"Q\" : \"q\", args);\r\n\t\t\treturn this; // self\r\n\t\t},\r\n\t\tqSmoothCurveTo: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a quadratic smooth curve segment\r\n\t\t\tthis._confirmSegmented();\r\n\t\t\tvar args = [];\r\n\t\t\tthis._collectArgs(args, arguments);\r\n\t\t\tthis._pushSegment(this.absolute ? \"T\" : \"t\", args);\r\n\t\t\treturn this; // self\r\n\t\t},\r\n\t\tarcTo: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms an elliptic arc segment\r\n\t\t\tthis._confirmSegmented();\r\n\t\t\tvar args = [];\r\n\t\t\tthis._collectArgs(args, arguments);\r\n\t\t\tthis._pushSegment(this.absolute ? \"A\" : \"a\", args);\r\n\t\t\treturn this; // self\r\n\t\t},\r\n\t\tclosePath: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcloses a path\r\n\t\t\tthis._confirmSegmented();\r\n\t\t\tthis._pushSegment(\"Z\", []);\r\n\t\t\treturn this; // self\r\n\t\t},\r\n\r\n\t\t_confirmSegmented: function() {\r\n\t\t\tif (!this.segmented) {\r\n\t\t\t\tvar path = this.shape.path;\r\n\t\t\t\t// switch to non-updating version of path building\r\n\t\t\t\tthis.shape.path = [];\r\n\t\t\t\tthis._setPath(path);\r\n\t\t\t\t// switch back to the string path\r\n\t\t\t\tthis.shape.path = this.shape.path.join(\"\");\r\n\t\t\t\t// become segmented\r\n\t\t\t\tthis.segmented = true;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// setShape\r\n\t\t_setPath: function(path){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a path using an SVG path string\r\n\t\t\t// path: String\r\n\t\t\t//\t\tan SVG path string\r\n\t\t\tvar p = lang.isArray(path) ? path : path.match(g.pathSvgRegExp);\r\n\t\t\tthis.segments = [];\r\n\t\t\tthis.absolute = true;\r\n\t\t\tthis.bbox = {};\r\n\t\t\tthis.last = {};\r\n\t\t\tif(!p) return;\r\n\t\t\t// create segments\r\n\t\t\tvar action = \"\",\t// current action\r\n\t\t\t\targs = [],\t\t// current arguments\r\n\t\t\t\tl = p.length;\r\n\t\t\tfor(var i = 0; i < l; ++i){\r\n\t\t\t\tvar t = p[i], x = parseFloat(t);\r\n\t\t\t\tif(isNaN(x)){\r\n\t\t\t\t\tif(action){\r\n\t\t\t\t\t\tthis._pushSegment(action, args);\r\n\t\t\t\t\t}\r\n\t\t\t\t\targs = [];\r\n\t\t\t\t\taction = t;\r\n\t\t\t\t}else{\r\n\t\t\t\t\targs.push(x);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._pushSegment(action, args);\r\n\t\t},\r\n\t\tsetShape: function(newShape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a path using a shape\r\n\t\t\t// newShape: Object\r\n\t\t\t//\t\tan SVG path string or a path object (see dojox/gfx.defaultPath)\r\n\t\t\tthis.inherited(arguments, [typeof newShape == \"string\" ? {path: newShape} : newShape]);\r\n\r\n\t\t\tthis.segmented = false;\r\n\t\t\tthis.segments = [];\r\n\t\t\tif(!g.lazyPathSegmentation){\r\n\t\t\t\tthis._confirmSegmented();\r\n\t\t\t}\r\n\t\t\treturn this; // self\r\n\t\t},\r\n\r\n\t\t// useful constant for descendants\r\n\t\t_2PI: Math.PI * 2\r\n\t});\r\n\r\n\tvar TextPath = declare(\"dojox.gfx.path.TextPath\", Path, {\r\n\t\t// summary:\r\n\t\t//\t\ta generalized TextPath shape\r\n\r\n\t\tconstructor: function(rawNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\ta TextPath shape constructor\r\n\t\t\t// rawNode: Node\r\n\t\t\t//\t\ta DOM node to be used by this TextPath object\r\n\t\t\tif(!(\"text\" in this)){\r\n\t\t\t\tthis.text = lang.clone(g.defaultTextPath);\r\n\t\t\t}\r\n\t\t\tif(!(\"fontStyle\" in this)){\r\n\t\t\t\tthis.fontStyle = lang.clone(g.defaultFont);\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetText: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns the current text object or null\r\n\t\t\treturn this.text;\t// Object\r\n\t\t},\r\n\t\tsetText: function(newText){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a text to be drawn along the path\r\n\t\t\tthis.text = g.makeParameters(this.text,\r\n\t\t\t\ttypeof newText == \"string\" ? {text: newText} : newText);\r\n\t\t\tthis._setText();\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\tgetFont: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns the current font object or null\r\n\t\t\treturn this.fontStyle;\t// Object\r\n\t\t},\r\n\t\tsetFont: function(newFont){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a font for text\r\n\t\t\tthis.fontStyle = typeof newFont == \"string\" ?\r\n\t\t\t\tg.splitFontString(newFont) :\r\n\t\t\t\tg.makeParameters(g.defaultFont, newFont);\r\n\t\t\tthis._setFont();\r\n\t\t\treturn this;\t// self\r\n\t\t}\r\n\t});\r\n\r\n\t/*=====\r\n\tg.Path = Path;\r\n\tg.TextPath = TextPath;\r\n\t=====*/\r\n\r\n\treturn g.path = {\r\n\t\t// summary:\r\n\t\t//\t\tThis module contains the core graphics Path API.\r\n\t\t//\t\tPath command format follows the W3C SVG 1.0 Path api.\r\n\r\n\t\tPath: Path,\r\n\t\tTextPath: TextPath\r\n\t};\r\n});\r\n"]}