{"version":3,"sources":["gfx/Moveable.js"],"names":["define","lang","declare","arr","event","topic","touch","domClass","win","Mover","constructor","shape","params","this","delay","mover","events","on","press","hitch","destroy","forEach","handle","remove","onMouseDown","e","push","move","release","_lastX","clientX","_lastY","clientY","stop","onMouseMove","Math","abs","onMouseUp","pop","onMoveStart","publish","add","body","onMoveStop","onFirstMove","onMove","shift","onMoving","applyLeftTransform","onMoved"],"mappings":";;;;;;;AAAAA,QAAQ,kBAAkB,qBAAqB,mBAAmB,mBAAmB,aAAa,aACjG,iBAAiB,oBAAoB,WACpC,SAASC,EAAKC,EAAQC,EAAIC,EAAMC,EAAMC,EAAMC,EAASC,EAAIC,GAiB1D,OAAOP,EAAQ,qBAAsB,MACpCQ,YAAa,SAASC,EAAOC,GAQ5BC,KAAKF,MAAQA,EACbE,KAAKC,MAASF,GAAUA,EAAOE,MAAQ,EAAKF,EAAOE,MAAQ,EAC3DD,KAAKE,MAASH,GAAUA,EAAOG,MAASH,EAAOG,MAAQN,EACvDI,KAAKG,QACJH,KAAKF,MAAMM,GAAGX,EAAMY,MAAOjB,EAAKkB,MAAMN,KAAM,kBAQ9CO,QAAS,WAGRjB,EAAIkB,QAAQR,KAAKG,OAAQ,SAASM,GACjCA,EAAOC,WAERV,KAAKG,OAASH,KAAKF,MAAQ,MAI5Ba,YAAa,SAASC,GAKlBZ,KAAKC,OACPD,KAAKG,OAAOU,KACXb,KAAKF,MAAMM,GAAGX,EAAMqB,KAAM1B,EAAKkB,MAAMN,KAAM,gBAC3CA,KAAKF,MAAMM,GAAGX,EAAMsB,QAAS3B,EAAKkB,MAAMN,KAAM,eAC/CA,KAAKgB,OAASJ,EAAEK,QAChBjB,KAAKkB,OAASN,EAAEO,SAEhB,IAAInB,KAAKE,MAAMF,KAAKF,MAAOc,EAAGZ,MAE/BT,EAAM6B,KAAKR,IAEZS,YAAa,SAAST,GAKrB,IAAIK,EAAUL,EAAEK,QACfE,EAAUP,EAAEO,SAEVG,KAAKC,IAAIN,EAAUjB,KAAKgB,QAAUhB,KAAKC,OAASqB,KAAKC,IAAIJ,EAAUnB,KAAKkB,QAAUlB,KAAKC,SACzFD,KAAKwB,UAAUZ,GACf,IAAIZ,KAAKE,MAAMF,KAAKF,MAAOc,EAAGZ,OAE/BT,EAAM6B,KAAKR,IAEZY,UAAW,SAASZ,GAKnBZ,KAAKG,OAAOsB,MAAMf,UAInBgB,YAAa,SAA+BxB,GAK3CV,EAAMmC,QAAQ,kBAAmBzB,GACjCR,EAASkC,IAAIjC,EAAIkC,OAAQ,aAE1BC,WAAY,SAA+B5B,GAK1CV,EAAMmC,QAAQ,iBAAkBzB,GAChCR,EAASgB,OAAOf,EAAIkC,OAAQ,aAE7BE,YAAa,SAA+B7B,KAS5C8B,OAAQ,SAA+B9B,EAAoB+B,GAQ1DjC,KAAKkC,SAAShC,EAAO+B,GACrBjC,KAAKF,MAAMqC,mBAAmBF,GAC9BjC,KAAKoC,QAAQlC,EAAO+B,IAErBC,SAAU,SAA+BhC,EAAoB+B,KAW7DG,QAAS,SAA+BlC,EAAoB+B","file":"../../gfx/Moveable.js","sourcesContent":["define([\"dojo/_base/lang\",\"dojo/_base/declare\",\"dojo/_base/array\",\"dojo/_base/event\",\"dojo/topic\",\"dojo/touch\",\r\n\t\"dojo/dom-class\",\"dojo/_base/window\",\"./Mover\"],\r\n  function(lang,declare,arr,event,topic,touch,domClass,win,Mover){\r\n\r\n\t/*=====\r\n\tvar __MoveableCtorArgs = declare(\"dojox.gfx.__MoveableCtorArgs\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tThe arguments used for dojox/gfx/Moveable constructor.\r\n\r\n\t\t// delay: Number\r\n\t\t//\t\tdelay move by this number of pixels\r\n\t\tdelay:0,\r\n\r\n\t\t// mover: Object\r\n\t\t//\t\ta constructor of custom Mover\r\n\t\tmover:Mover\r\n\t});\r\n\t=====*/\r\n\r\n\treturn declare(\"dojox.gfx.Moveable\", null, {\r\n\t\tconstructor: function(shape, params){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tan object, which makes a shape moveable\r\n\t\t\t// shape: dojox/gfx.Shape\r\n\t\t\t//\t\ta shape object to be moved.\r\n\t\t\t// params: __MoveableCtorArgs\r\n\t\t\t//\t\tan optional configuration object.\r\n\r\n\t\t\tthis.shape = shape;\r\n\t\t\tthis.delay = (params && params.delay > 0) ? params.delay : 0;\r\n\t\t\tthis.mover = (params && params.mover) ? params.mover : Mover;\r\n\t\t\tthis.events = [\r\n\t\t\t\tthis.shape.on(touch.press, lang.hitch(this, \"onMouseDown\"))\r\n\t\t\t\t// cancel text selection and text dragging\r\n\t\t\t\t//, dojo.connect(this.handle, \"ondragstart\",   dojo, \"stopEvent\")\r\n\t\t\t\t//, dojo.connect(this.handle, \"onselectstart\", dojo, \"stopEvent\")\r\n\t\t\t];\r\n\t\t},\r\n\r\n\t\t// methods\r\n\t\tdestroy: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tstops watching for possible move, deletes all references, so the object can be garbage-collected\r\n\t\t\tarr.forEach(this.events, function(handle){\r\n\t\t\t\thandle.remove();\r\n\t\t\t});\r\n\t\t\tthis.events = this.shape = null;\r\n\t\t},\r\n\r\n\t\t// mouse event processors\r\n\t\tonMouseDown: function(e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tevent processor for onmousedown, creates a Mover for the shape\r\n\t\t\t// e: Event\r\n\t\t\t//\t\tmouse event\r\n\t\t\tif(this.delay){\r\n\t\t\t\tthis.events.push(\r\n\t\t\t\t\tthis.shape.on(touch.move, lang.hitch(this, \"onMouseMove\")),\r\n\t\t\t\t\tthis.shape.on(touch.release, lang.hitch(this, \"onMouseUp\")));\r\n\t\t\t\tthis._lastX = e.clientX;\r\n\t\t\t\tthis._lastY = e.clientY;\r\n\t\t\t}else{\r\n\t\t\t\tnew this.mover(this.shape, e, this);\r\n\t\t\t}\r\n\t\t\tevent.stop(e);\r\n\t\t},\r\n\t\tonMouseMove: function(e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tevent processor for onmousemove, used only for delayed drags\r\n\t\t\t// e: Event\r\n\t\t\t//\t\tmouse event\r\n\t\t\tvar clientX = e.clientX,\r\n\t\t\t\tclientY = e.clientY;\r\n\r\n\t\t\tif(Math.abs(clientX - this._lastX) > this.delay || Math.abs(clientY - this._lastY) > this.delay){\r\n\t\t\t\tthis.onMouseUp(e);\r\n\t\t\t\tnew this.mover(this.shape, e, this);\r\n\t\t\t}\r\n\t\t\tevent.stop(e);\r\n\t\t},\r\n\t\tonMouseUp: function(e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tevent processor for onmouseup, used only for delayed delayed drags\r\n\t\t\t// e: Event\r\n\t\t\t//\t\tmouse event\r\n\t\t\tthis.events.pop().remove();\r\n\t\t},\r\n\r\n\t\t// local events\r\n\t\tonMoveStart: function(/* dojox/gfx/Mover */ mover){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcalled before every move operation\r\n\t\t\t// mover:\r\n\t\t\t//\t\tA Mover instance that fired the event.\r\n\t\t\ttopic.publish(\"/gfx/move/start\", mover);\r\n\t\t\tdomClass.add(win.body(), \"dojoMove\");\r\n\t\t},\r\n\t\tonMoveStop: function(/* dojox/gfx/Mover */ mover){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcalled after every move operation\r\n\t\t\t// mover:\r\n\t\t\t//\t\tA Mover instance that fired the event.\r\n\t\t\ttopic.publish(\"/gfx/move/stop\", mover);\r\n\t\t\tdomClass.remove(win.body(), \"dojoMove\");\r\n\t\t},\r\n\t\tonFirstMove: function(/* dojox/gfx/Mover */ mover){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcalled during the very first move notification,\r\n\t\t\t//\t\tcan be used to initialize coordinates, can be overwritten.\r\n\t\t\t// mover:\r\n\t\t\t//\t\tA Mover instance that fired the event.\r\n\r\n\t\t\t// default implementation does nothing\r\n\t\t},\r\n\t\tonMove: function(/* dojox/gfx/Mover */ mover, /* Object */ shift){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcalled during every move notification,\r\n\t\t\t//\t\tshould actually move the node, can be overwritten.\r\n\t\t\t// mover:\r\n\t\t\t//\t\tA Mover instance that fired the event.\r\n\t\t\t// shift:\r\n\t\t\t//\t\tAn object as {dx,dy} that represents the shift.\r\n\t\t\tthis.onMoving(mover, shift);\r\n\t\t\tthis.shape.applyLeftTransform(shift);\r\n\t\t\tthis.onMoved(mover, shift);\r\n\t\t},\r\n\t\tonMoving: function(/* dojox/gfx/Mover */ mover, /* Object */ shift){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcalled before every incremental move,\r\n\t\t\t//\t\tcan be overwritten.\r\n\t\t\t// mover:\r\n\t\t\t//\t\tA Mover instance that fired the event.\r\n\t\t\t// shift:\r\n\t\t\t//\t\tAn object as {dx,dy} that represents the shift.\r\n\r\n\t\t\t// default implementation does nothing\r\n\t\t},\r\n\t\tonMoved: function(/* dojox/gfx/Mover */ mover, /* Object */ shift){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcalled after every incremental move,\r\n\t\t\t//\t\tcan be overwritten.\r\n\t\t\t// mover:\r\n\t\t\t//\t\tA Mover instance that fired the event.\r\n\t\t\t// shift:\r\n\t\t\t//\t\tAn object as {dx,dy} that represents the shift.\r\n\r\n\t\t\t// default implementation does nothing\r\n\t\t}\r\n\t});\r\n});\r\n"]}