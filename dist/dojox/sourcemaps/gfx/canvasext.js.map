{"version":3,"sources":["gfx/canvasext.js"],"names":["define","gfx","canvas","ext","canvasext","Surface","extend","getImageData","rect","this","_render","rawNode","getContext","x","y","width","height"],"mappings":";;;;;;;AAAAA,QACC,UACA,YACA,SAASC,EAAKC,GAUd,IAAIC,EAAMF,EAAIG,aAwBd,OAtBAF,EAAOG,QAAQC,QAEdC,aAAc,SAASC,GAUtB,MAHG,kBAAmBC,MACrBA,KAAKC,SAAQ,GAEPD,KAAKE,QAAQC,WAAW,MAAML,aAAaC,EAAKK,EAAGL,EAAKM,EAAGN,EAAKO,MAAOP,EAAKQ,SAGpFJ,WAAY,WAGX,OAAOH,KAAKE,QAAQC,WAAW,SAI1BT","file":"../../gfx/canvasext.js","sourcesContent":["define([\r\n\t\"./_base\",\r\n\t\"./canvas\"],\r\n\tfunction(gfx, canvas){\r\n\r\n\t/*=====\r\n\t return {\r\n\t \t// summary:\r\n\t \t//\t\tA module that adds canvas-specific features to the gfx api. You should require this module\r\n\t \t//\t\twhen your application specifically targets the HTML5 Canvas renderer.\r\n\t }\r\n\t =====*/\r\n\t\r\n\tvar ext = gfx.canvasext = {};\r\n\t\r\n\tcanvas.Surface.extend({\r\n\t\t\r\n\t\tgetImageData: function(rect){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the canvas pixel buffer.\r\n\t\t\t// rect: dojox/gfx.Rectangle\r\n\t\t\t//\t\tThe canvas area.\r\n\t\t\t\r\n\t\t\t// flush pending renders queue, if any\r\n\t\t\tif(\"pendingRender\" in this){\r\n\t\t\t\tthis._render(true); // force render even if there're pendingImages\r\n\t\t\t}\r\n\t\t\treturn this.rawNode.getContext(\"2d\").getImageData(rect.x, rect.y, rect.width, rect.height);\t\t\t\t\r\n\t\t},\r\n\t\t\r\n\t\tgetContext: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the surface CanvasRenderingContext2D.\r\n\t\t\treturn this.rawNode.getContext(\"2d\");\r\n\t\t}\r\n\t});\t\t\r\n\r\n\treturn ext;\r\n});\r\n"]}