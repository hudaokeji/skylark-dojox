{"version":3,"sources":["gfx/decompose.js"],"names":["define","g","lang","m","eq","a","b","Math","abs","calcFromValues","r1","m1","r2","m2","isFinite","scaleSign","matrix","xx","yy","xy","yx","eigenvalueDecomposition","M","normalize","c","d","sqrt","l1","l2","vx1","vy1","vx2","vy2","d1","d2","value1","value2","vector1","x","y","vector2","decomposeSR","result","sign","angle1","atan2","cos","sin","sx","sy","decomposeRS","angle2","decompose","dx","dy","mixin","MT","Matrix2D","transpose","u","v","U","VT","S","invert"],"mappings":"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","file":"../../gfx/decompose.js","sourcesContent":["define([\"./_base\", \"dojo/_base/lang\", \"./matrix\"], \r\n  function (g, lang, m){\r\n\tfunction eq(/* Number */ a, /* Number */ b){\r\n\t\t// summary:\r\n\t\t//\t\tcompare two FP numbers for equality\r\n\t\treturn Math.abs(a - b) <= 1e-6 * (Math.abs(a) + Math.abs(b));\t// Boolean\r\n\t}\r\n\r\n\tfunction calcFromValues(/* Number */ r1, /* Number */ m1, /* Number */ r2, /* Number */ m2){\r\n\t\t// summary:\r\n\t\t//\t\tuses two close FP ration and their original magnitudes to approximate the result\r\n\t\tif(!isFinite(r1)){\r\n\t\t\treturn r2;\t// Number\r\n\t\t}else if(!isFinite(r2)){\r\n\t\t\treturn r1;\t// Number\r\n\t\t}\r\n\t\tm1 = Math.abs(m1); m2 = Math.abs(m2);\r\n\t\treturn (m1 * r1 + m2 * r2) / (m1 + m2);\t// Number\r\n\t}\r\n\r\n\tfunction transpose(matrix){\r\n\t\t// matrix: dojox/gfx/matrix.Matrix2D\r\n\t\t//\t\ta 2D matrix-like object\r\n\t\tvar M = new m.Matrix2D(matrix);\r\n\t\treturn lang.mixin(M, {dx: 0, dy: 0, xy: M.yx, yx: M.xy});\t// dojox/gfx/matrix.Matrix2D\r\n\t}\r\n\r\n\tfunction scaleSign(/* dojox/gfx/matrix.Matrix2D */ matrix){\r\n\t\treturn (matrix.xx * matrix.yy < 0 || matrix.xy * matrix.yx > 0) ? -1 : 1;\t// Number\r\n\t}\r\n\r\n\tfunction eigenvalueDecomposition(matrix){\r\n\t\t// matrix: dojox/gfx/matrix.Matrix2D\r\n\t\t//\t\ta 2D matrix-like object\r\n\t\tvar M = m.normalize(matrix),\r\n\t\t\tb = -M.xx - M.yy,\r\n\t\t\tc = M.xx * M.yy - M.xy * M.yx,\r\n\t\t\td = Math.sqrt(b * b - 4 * c),\r\n\t\t\tl1 = -(b + (b < 0 ? -d : d)) / 2,\r\n\t\t\tl2 = c / l1,\r\n\t\t\tvx1 = M.xy / (l1 - M.xx), vy1 = 1,\r\n\t\t\tvx2 = M.xy / (l2 - M.xx), vy2 = 1;\r\n\t\tif(eq(l1, l2)){\r\n\t\t\tvx1 = 1, vy1 = 0, vx2 = 0, vy2 = 1;\r\n\t\t}\r\n\t\tif(!isFinite(vx1)){\r\n\t\t\tvx1 = 1, vy1 = (l1 - M.xx) / M.xy;\r\n\t\t\tif(!isFinite(vy1)){\r\n\t\t\t\tvx1 = (l1 - M.yy) / M.yx, vy1 = 1;\r\n\t\t\t\tif(!isFinite(vx1)){\r\n\t\t\t\t\tvx1 = 1, vy1 = M.yx / (l1 - M.yy);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(!isFinite(vx2)){\r\n\t\t\tvx2 = 1, vy2 = (l2 - M.xx) / M.xy;\r\n\t\t\tif(!isFinite(vy2)){\r\n\t\t\t\tvx2 = (l2 - M.yy) / M.yx, vy2 = 1;\r\n\t\t\t\tif(!isFinite(vx2)){\r\n\t\t\t\t\tvx2 = 1, vy2 = M.yx / (l2 - M.yy);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar d1 = Math.sqrt(vx1 * vx1 + vy1 * vy1),\r\n\t\t\td2 = Math.sqrt(vx2 * vx2 + vy2 * vy2);\r\n\t\tif(!isFinite(vx1 /= d1)){ vx1 = 0; }\r\n\t\tif(!isFinite(vy1 /= d1)){ vy1 = 0; }\r\n\t\tif(!isFinite(vx2 /= d2)){ vx2 = 0; }\r\n\t\tif(!isFinite(vy2 /= d2)){ vy2 = 0; }\r\n\t\treturn {\t// Object\r\n\t\t\tvalue1: l1,\r\n\t\t\tvalue2: l2,\r\n\t\t\tvector1: {x: vx1, y: vy1},\r\n\t\t\tvector2: {x: vx2, y: vy2}\r\n\t\t};\r\n\t}\r\n\r\n\tfunction decomposeSR(/* dojox/gfx/matrix.Matrix2D */ M, /* Object */ result){\r\n\t\t// summary:\r\n\t\t//\t\tdecomposes a matrix into [scale, rotate]; no checks are done.\r\n\t\tvar sign = scaleSign(M),\r\n\t\t\ta = result.angle1 = (Math.atan2(M.yx, M.yy) + Math.atan2(-sign * M.xy, sign * M.xx)) / 2,\r\n\t\t\tcos = Math.cos(a), sin = Math.sin(a);\r\n\t\tresult.sx = calcFromValues(M.xx / cos, cos, -M.xy / sin, sin);\r\n\t\tresult.sy = calcFromValues(M.yy / cos, cos,  M.yx / sin, sin);\r\n\t\treturn result;\t// Object\r\n\t}\r\n\r\n\tfunction decomposeRS(/* dojox/gfx/matrix.Matrix2D */ M, /* Object */ result){\r\n\t\t// summary:\r\n\t\t//\t\tdecomposes a matrix into [rotate, scale]; no checks are done\r\n\t\tvar sign = scaleSign(M),\r\n\t\t\ta = result.angle2 = (Math.atan2(sign * M.yx, sign * M.xx) + Math.atan2(-M.xy, M.yy)) / 2,\r\n\t\t\tcos = Math.cos(a), sin = Math.sin(a);\r\n\t\tresult.sx = calcFromValues(M.xx / cos, cos,  M.yx / sin, sin);\r\n\t\tresult.sy = calcFromValues(M.yy / cos, cos, -M.xy / sin, sin);\r\n\t\treturn result;\t// Object\r\n\t}\r\n\r\n\treturn g.decompose = function(matrix){\r\n\t\t// summary:\r\n\t\t//\t\tDecompose a 2D matrix into translation, scaling, and rotation components.\r\n\t\t// description:\r\n\t\t//\t\tThis function decompose a matrix into four logical components:\r\n\t\t//\t\ttranslation, rotation, scaling, and one more rotation using SVD.\r\n\t\t//\t\tThe components should be applied in following order:\r\n\t\t//\t| [translate, rotate(angle2), scale, rotate(angle1)]\r\n\t\t// matrix: dojox/gfx/matrix.Matrix2D\r\n\t\t//\t\ta 2D matrix-like object\r\n\t\tvar M = m.normalize(matrix),\r\n\t\t\tresult = {dx: M.dx, dy: M.dy, sx: 1, sy: 1, angle1: 0, angle2: 0};\r\n\t\t// detect case: [scale]\r\n\t\tif(eq(M.xy, 0) && eq(M.yx, 0)){\r\n\t\t\treturn lang.mixin(result, {sx: M.xx, sy: M.yy});\t// Object\r\n\t\t}\r\n\t\t// detect case: [scale, rotate]\r\n\t\tif(eq(M.xx * M.yx, -M.xy * M.yy)){\r\n\t\t\treturn decomposeSR(M, result);\t// Object\r\n\t\t}\r\n\t\t// detect case: [rotate, scale]\r\n\t\tif(eq(M.xx * M.xy, -M.yx * M.yy)){\r\n\t\t\treturn decomposeRS(M, result);\t// Object\r\n\t\t}\r\n\t\t// do SVD\r\n\t\tvar\tMT = transpose(M),\r\n\t\t\tu  = eigenvalueDecomposition([M, MT]),\r\n\t\t\tv  = eigenvalueDecomposition([MT, M]),\r\n\t\t\tU  = new m.Matrix2D({xx: u.vector1.x, xy: u.vector2.x, yx: u.vector1.y, yy: u.vector2.y}),\r\n\t\t\tVT = new m.Matrix2D({xx: v.vector1.x, xy: v.vector1.y, yx: v.vector2.x, yy: v.vector2.y}),\r\n\t\t\tS = new m.Matrix2D([m.invert(U), M, m.invert(VT)]);\r\n\t\tdecomposeSR(VT, result);\r\n\t\tS.xx *= result.sx;\r\n\t\tS.yy *= result.sy;\r\n\t\tdecomposeRS(U, result);\r\n\t\tS.xx *= result.sx;\r\n\t\tS.yy *= result.sy;\r\n\t\treturn lang.mixin(result, {sx: S.xx, sy: S.yy});\t// Object\r\n\t};\r\n});\r\n"]}