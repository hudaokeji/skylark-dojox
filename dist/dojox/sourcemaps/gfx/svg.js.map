{"version":3,"sources":["gfx/svg.js"],"names":["define","lang","has","win","dom","declare","arr","domGeom","domAttr","Color","g","gs","pathLib","svg","useSvgWeb","window","svgweb","uagent","navigator","userAgent","safMobile","android","textRenderingFix","_createElementNS","ns","nodeType","doc","createElementNS","createElement","_setAttributeNS","node","attr","value","setAttributeNS","setAttribute","_createTextNode","text","createTextNode","xmlns","xlink","getRef","name","match","byId","slice","dasharray","solid","shortdash","shortdot","shortdashdot","shortdashdotdot","dot","dash","longdash","dashdot","longdashdot","longdashdotdot","clipCount","Shape","destroy","this","fillStyle","fill","rawNode","getAttribute","ref","parentNode","removeChild","clip","clipPathProp","clipNode","prototype","apply","arguments","setFill","f","setter","x","toFixed","type","makeParameters","defaultLinearGradient","gradient","_setFillObject","forEach","defaultRadialGradient","grad","defaultPattern","pattern","normalizeColor","toCss","a","setStroke","stroke","rn","strokeStyle","isArray","color","s","defaultStroke","width","cap","join","da","style","toLowerCase","Array","i","_toArray","length","_getParentSurface","surface","parent","Surface","svgns","defs","defNode","tagName","id","appendChild","childNodes","lastChild","_base","_getUniqueId","img","height","src","colors","c","t","cc","offset","removeAttribute","_applyTransform","matrix","tm","xx","yx","xy","yy","dx","dy","setRawNode","r","shape","__gfxObject__","setShape","newShape","bbox","_moveToFront","_moveToBack","insertBefore","firstChild","setClip","inherited","clipType","clone","points","clipShape","get","clipId","clipUrl","set","_removeClipNode","Group","constructor","Container","_init","call","clear","Rect","Ellipse","Circle","Line","Polyline","closed","push","_normalizePoints","p","y","Image","Text","align","decoration","rotated","kerning","nodeValue","getTextWidth","oldParent","_measurementNode","cloneNode","visibility","_width","_text","getBBox","parseInt","getBoundingBox","getShape","e","Path","_updateWithSegment","segment","path","TextPath","_setTextPath","tp","tx","getAttributeNS","_setText","data","matches","hasSvgSetAttributeBug","exec","setDimensions","getDimensions","normalizedLength","createSurface","_parent","_fixMsTouchAction","Font","_setFont","fontStyle","variant","weight","size","family","C","openBatch","_batch","fragment","createDocumentFragment","closeBatch","add","getParent","remove","silently","_moveChildToFront","_moveChildToBack","Creator","createObject","shapeType","rawShape","extend","fixTarget","event","gfxElement","gfxTarget","target","wholeText","parentElement","pos","position","w","h","mockSvg","addEventListener","isLoaded","onLoad","_eventsProcessing","connect","object","method","substring","hitch","getEventSource","disconnect","token","removeEventListener"],"mappings":"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","file":"../../gfx/svg.js","sourcesContent":["define([\"dojo/_base/lang\", \"dojo/_base/sniff\", \"dojo/_base/window\", \"dojo/dom\", \"dojo/_base/declare\", \"dojo/_base/array\",\r\n  \"dojo/dom-geometry\", \"dojo/dom-attr\", \"dojo/_base/Color\", \"./_base\", \"./shape\", \"./path\"],\r\nfunction(lang, has, win, dom, declare, arr, domGeom, domAttr, Color, g, gs, pathLib){\r\n\r\n\tvar svg = g.svg = {\r\n\t\t// summary:\r\n\t\t//\t\tThis the graphics rendering bridge for browsers compliant with W3C SVG1.0.\r\n\t\t//\t\tThis is the preferred renderer to use for interactive and accessible graphics.\r\n\t};\r\n\tsvg.useSvgWeb = (typeof window.svgweb != \"undefined\");\r\n\r\n\t// Need to detect iOS in order to workaround bug when\r\n\t// touching nodes with text\r\n\tvar uagent = navigator.userAgent,\r\n\t\tsafMobile = has(\"ios\"),\r\n\t\tandroid = has(\"android\"),\r\n\t\ttextRenderingFix = has(\"chrome\") || (android && android>=4) ? \"auto\" : \"optimizeLegibility\";// #16099, #16461\r\n\r\n\tfunction _createElementNS(ns, nodeType){\r\n\t\t// summary:\r\n\t\t//\t\tInternal helper to deal with creating elements that\r\n\t\t//\t\tare namespaced.  Mainly to get SVG markup output\r\n\t\t//\t\tworking on IE.\r\n\t\tif(win.doc.createElementNS){\r\n\t\t\treturn win.doc.createElementNS(ns,nodeType);\r\n\t\t}else{\r\n\t\t\treturn win.doc.createElement(nodeType);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction _setAttributeNS(node, ns, attr, value){\r\n\t\tif(node.setAttributeNS){\r\n\t\t\treturn node.setAttributeNS(ns, attr, value);\r\n\t\t}else{\r\n\t\t\treturn node.setAttribute(attr, value);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _createTextNode(text){\r\n\t\tif(svg.useSvgWeb){\r\n\t\t\treturn win.doc.createTextNode(text, true);\r\n\t\t}else{\r\n\t\t\treturn win.doc.createTextNode(text);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _createFragment(){\r\n\t\tif(svg.useSvgWeb){\r\n\t\t\treturn win.doc.createDocumentFragment(true);\r\n\t\t}else{\r\n\t\t\treturn win.doc.createDocumentFragment();\r\n\t\t}\r\n\t}\r\n\r\n\tsvg.xmlns = {\r\n\t\txlink: \"http://www.w3.org/1999/xlink\",\r\n\t\tsvg:   \"http://www.w3.org/2000/svg\"\r\n\t};\r\n\r\n\tsvg.getRef = function(name){\r\n\t\t// summary:\r\n\t\t//\t\tlooks up a node by its external name\r\n\t\t// name: String\r\n\t\t//\t\tan SVG external reference\r\n\t\t// returns:\r\n\t\t//      returns a DOM Node specified by the name argument or null\r\n\t\tif(!name || name == \"none\") return null;\r\n\t\tif(name.match(/^url\\(#.+\\)$/)){\r\n\t\t\treturn dom.byId(name.slice(5, -1));\t// Node\r\n\t\t}\r\n\t\t// alternative representation of a reference\r\n\t\tif(name.match(/^#dojoUnique\\d+$/)){\r\n\t\t\t// we assume here that a reference was generated by dojox/gfx\r\n\t\t\treturn dom.byId(name.slice(1));\t// Node\r\n\t\t}\r\n\t\treturn null;\t// Node\r\n\t};\r\n\r\n\tsvg.dasharray = {\r\n\t\tsolid:\t\t\t\t\"none\",\r\n\t\tshortdash:\t\t\t[4, 1],\r\n\t\tshortdot:\t\t\t[1, 1],\r\n\t\tshortdashdot:\t\t[4, 1, 1, 1],\r\n\t\tshortdashdotdot:\t[4, 1, 1, 1, 1, 1],\r\n\t\tdot:\t\t\t\t[1, 3],\r\n\t\tdash:\t\t\t\t[4, 3],\r\n\t\tlongdash:\t\t\t[8, 3],\r\n\t\tdashdot:\t\t\t[4, 3, 1, 3],\r\n\t\tlongdashdot:\t\t[8, 3, 1, 3],\r\n\t\tlongdashdotdot:\t\t[8, 3, 1, 3, 1, 3]\r\n\t};\r\n\r\n\tvar clipCount = 0;\r\n\r\n\tsvg.Shape = declare(\"dojox.gfx.svg.Shape\", gs.Shape, {\r\n\t\t// summary:\r\n\t\t//\t\tSVG-specific implementation of dojox/gfx/shape.Shape methods\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tif(this.fillStyle && \"type\" in this.fillStyle){\r\n\t\t\t\tvar fill = this.rawNode.getAttribute(\"fill\"),\r\n\t\t\t\t\tref  = svg.getRef(fill);\r\n\t\t\t\tif(ref){\r\n\t\t\t\t\tref.parentNode.removeChild(ref);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(this.clip){\r\n\t\t\t\tvar clipPathProp = this.rawNode.getAttribute(\"clip-path\");\r\n\t\t\t\tif(clipPathProp){\r\n\t\t\t\t\tvar clipNode = dom.byId(clipPathProp.match(/gfx_clip[\\d]+/)[0]);\r\n\t\t\t\t\tif(clipNode){ clipNode.parentNode.removeChild(clipNode); }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tgs.Shape.prototype.destroy.apply(this, arguments);\r\n\t\t},\r\n\r\n\t\tsetFill: function(fill){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a fill object (SVG)\r\n\t\t\t// fill: Object\r\n\t\t\t//\t\ta fill object\r\n\t\t\t//\t\t(see dojox/gfx.defaultLinearGradient,\r\n\t\t\t//\t\tdojox/gfx.defaultRadialGradient,\r\n\t\t\t//\t\tdojox/gfx.defaultPattern,\r\n\t\t\t//\t\tor dojo/_base/Color)\r\n\r\n\t\t\tif(!fill){\r\n\t\t\t\t// don't fill\r\n\t\t\t\tthis.fillStyle = null;\r\n\t\t\t\tthis.rawNode.setAttribute(\"fill\", \"none\");\r\n\t\t\t\tthis.rawNode.setAttribute(\"fill-opacity\", 0);\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\tvar f;\r\n\t\t\t// FIXME: slightly magical. We're using the outer scope's \"f\", but setting it later\r\n\t\t\tvar setter = function(x){\r\n\t\t\t\t\t// we assume that we're executing in the scope of the node to mutate\r\n\t\t\t\t\tthis.setAttribute(x, f[x].toFixed(8));\r\n\t\t\t\t};\r\n\t\t\tif(typeof(fill) == \"object\" && \"type\" in fill){\r\n\t\t\t\t// gradient\r\n\t\t\t\tswitch(fill.type){\r\n\t\t\t\t\tcase \"linear\":\r\n\t\t\t\t\t\tf = g.makeParameters(g.defaultLinearGradient, fill);\r\n\t\t\t\t\t\tvar gradient = this._setFillObject(f, \"linearGradient\");\r\n\t\t\t\t\t\tarr.forEach([\"x1\", \"y1\", \"x2\", \"y2\"], setter, gradient);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"radial\":\r\n\t\t\t\t\t\tf = g.makeParameters(g.defaultRadialGradient, fill);\r\n\t\t\t\t\t\tvar grad = this._setFillObject(f, \"radialGradient\");\r\n\t\t\t\t\t\tarr.forEach([\"cx\", \"cy\", \"r\"], setter, grad);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"pattern\":\r\n\t\t\t\t\t\tf = g.makeParameters(g.defaultPattern, fill);\r\n\t\t\t\t\t\tvar pattern = this._setFillObject(f, \"pattern\");\r\n\t\t\t\t\t\tarr.forEach([\"x\", \"y\", \"width\", \"height\"], setter, pattern);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.fillStyle = f;\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t// color object\r\n\t\t\tf = g.normalizeColor(fill);\r\n\t\t\tthis.fillStyle = f;\r\n\t\t\tthis.rawNode.setAttribute(\"fill\", f.toCss());\r\n\t\t\tthis.rawNode.setAttribute(\"fill-opacity\", f.a);\r\n\t\t\tthis.rawNode.setAttribute(\"fill-rule\", \"evenodd\");\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\r\n\t\tsetStroke: function(stroke){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a stroke object (SVG)\r\n\t\t\t// stroke: Object\r\n\t\t\t//\t\ta stroke object (see dojox/gfx.defaultStroke)\r\n\r\n\t\t\tvar rn = this.rawNode;\r\n\t\t\tif(!stroke){\r\n\t\t\t\t// don't stroke\r\n\t\t\t\tthis.strokeStyle = null;\r\n\t\t\t\trn.setAttribute(\"stroke\", \"none\");\r\n\t\t\t\trn.setAttribute(\"stroke-opacity\", 0);\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t// normalize the stroke\r\n\t\t\tif(typeof stroke == \"string\" || lang.isArray(stroke) || stroke instanceof Color){\r\n\t\t\t\tstroke = { color: stroke };\r\n\t\t\t}\r\n\t\t\tvar s = this.strokeStyle = g.makeParameters(g.defaultStroke, stroke);\r\n\t\t\ts.color = g.normalizeColor(s.color);\r\n\t\t\t// generate attributes\r\n\t\t\tif(s){\r\n\t\t\t\trn.setAttribute(\"stroke\", s.color.toCss());\r\n\t\t\t\trn.setAttribute(\"stroke-opacity\", s.color.a);\r\n\t\t\t\trn.setAttribute(\"stroke-width\",   s.width);\r\n\t\t\t\trn.setAttribute(\"stroke-linecap\", s.cap);\r\n\t\t\t\tif(typeof s.join == \"number\"){\r\n\t\t\t\t\trn.setAttribute(\"stroke-linejoin\",   \"miter\");\r\n\t\t\t\t\trn.setAttribute(\"stroke-miterlimit\", s.join);\r\n\t\t\t\t}else{\r\n\t\t\t\t\trn.setAttribute(\"stroke-linejoin\",   s.join);\r\n\t\t\t\t}\r\n\t\t\t\tvar da = s.style.toLowerCase();\r\n\t\t\t\tif(da in svg.dasharray){\r\n\t\t\t\t\tda = svg.dasharray[da];\r\n\t\t\t\t}\r\n\t\t\t\tif(da instanceof Array){\r\n\t\t\t\t\tda = lang._toArray(da);\r\n\t\t\t\t\tvar i;\r\n\t\t\t\t\tfor(i = 0; i < da.length; ++i){\r\n\t\t\t\t\t\tda[i] *= s.width;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(s.cap != \"butt\"){\r\n\t\t\t\t\t\tfor(i = 0; i < da.length; i += 2){\r\n\t\t\t\t\t\t\tda[i] -= s.width;\r\n\t\t\t\t\t\t\tif(da[i] < 1){ da[i] = 1; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor(i = 1; i < da.length; i += 2){\r\n\t\t\t\t\t\t\tda[i] += s.width;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tda = da.join(\",\");\r\n\t\t\t\t}\r\n\t\t\t\trn.setAttribute(\"stroke-dasharray\", da);\r\n\t\t\t\trn.setAttribute(\"dojoGfxStrokeStyle\", s.style);\r\n\t\t\t}\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\r\n\t\t_getParentSurface: function(){\r\n\t\t\tvar surface = this.parent;\r\n\t\t\tfor(; surface && !(surface instanceof g.Surface); surface = surface.parent);\r\n\t\t\treturn surface;\r\n\t\t},\r\n\r\n\t\t_setFillObject: function(f, nodeType){\r\n\t\t\tvar svgns = svg.xmlns.svg;\r\n\t\t\tthis.fillStyle = f;\r\n\t\t\tvar surface = this._getParentSurface(),\r\n\t\t\t\tdefs = surface.defNode,\r\n\t\t\t\tfill = this.rawNode.getAttribute(\"fill\"),\r\n\t\t\t\tref  = svg.getRef(fill);\r\n\t\t\tif(ref){\r\n\t\t\t\tfill = ref;\r\n\t\t\t\tif(fill.tagName.toLowerCase() != nodeType.toLowerCase()){\r\n\t\t\t\t\tvar id = fill.id;\r\n\t\t\t\t\tfill.parentNode.removeChild(fill);\r\n\t\t\t\t\tfill = _createElementNS(svgns, nodeType);\r\n\t\t\t\t\tfill.setAttribute(\"id\", id);\r\n\t\t\t\t\tdefs.appendChild(fill);\r\n\t\t\t\t}else{\r\n\t\t\t\t\twhile(fill.childNodes.length){\r\n\t\t\t\t\t\tfill.removeChild(fill.lastChild);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tfill = _createElementNS(svgns, nodeType);\r\n\t\t\t\tfill.setAttribute(\"id\", g._base._getUniqueId());\r\n\t\t\t\tdefs.appendChild(fill);\r\n\t\t\t}\r\n\t\t\tif(nodeType == \"pattern\"){\r\n\t\t\t\tfill.setAttribute(\"patternUnits\", \"userSpaceOnUse\");\r\n\t\t\t\tvar img = _createElementNS(svgns, \"image\");\r\n\t\t\t\timg.setAttribute(\"x\", 0);\r\n\t\t\t\timg.setAttribute(\"y\", 0);\r\n\t\t\t\timg.setAttribute(\"width\",  f.width .toFixed(8));\r\n\t\t\t\timg.setAttribute(\"height\", f.height.toFixed(8));\r\n\t\t\t\t_setAttributeNS(img, svg.xmlns.xlink, \"xlink:href\", f.src);\r\n\t\t\t\tfill.appendChild(img);\r\n\t\t\t}else{\r\n\t\t\t\tfill.setAttribute(\"gradientUnits\", \"userSpaceOnUse\");\r\n\t\t\t\tfor(var i = 0; i < f.colors.length; ++i){\r\n\t\t\t\t\tvar c = f.colors[i], t = _createElementNS(svgns, \"stop\"),\r\n\t\t\t\t\t\tcc = c.color = g.normalizeColor(c.color);\r\n\t\t\t\t\tt.setAttribute(\"offset\",       c.offset.toFixed(8));\r\n\t\t\t\t\tt.setAttribute(\"stop-color\",   cc.toCss());\r\n\t\t\t\t\tt.setAttribute(\"stop-opacity\", cc.a);\r\n\t\t\t\t\tfill.appendChild(t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.rawNode.setAttribute(\"fill\", \"url(#\" + fill.getAttribute(\"id\") +\")\");\r\n\t\t\tthis.rawNode.removeAttribute(\"fill-opacity\");\r\n\t\t\tthis.rawNode.setAttribute(\"fill-rule\", \"evenodd\");\r\n\t\t\treturn fill;\r\n\t\t},\r\n\r\n\t\t_applyTransform: function() {\r\n\t\t\tvar matrix = this.matrix;\r\n\t\t\tif(matrix){\r\n\t\t\t\tvar tm = this.matrix;\r\n\t\t\t\tthis.rawNode.setAttribute(\"transform\", \"matrix(\" +\r\n\t\t\t\t\ttm.xx.toFixed(8) + \",\" + tm.yx.toFixed(8) + \",\" +\r\n\t\t\t\t\ttm.xy.toFixed(8) + \",\" + tm.yy.toFixed(8) + \",\" +\r\n\t\t\t\t\ttm.dx.toFixed(8) + \",\" + tm.dy.toFixed(8) + \")\");\r\n\t\t\t}else{\r\n\t\t\t\tthis.rawNode.removeAttribute(\"transform\");\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tsetRawNode: function(rawNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tassigns and clears the underlying node that will represent this\r\n\t\t\t//\t\tshape. Once set, transforms, gradients, etc, can be applied.\r\n\t\t\t//\t\t(no fill & stroke by default)\r\n\t\t\tvar r = this.rawNode = rawNode;\r\n\t\t\tif(this.shape.type!=\"image\"){\r\n\t\t\t\tr.setAttribute(\"fill\", \"none\");\r\n\t\t\t}\r\n\t\t\tr.setAttribute(\"fill-opacity\", 0);\r\n\t\t\tr.setAttribute(\"stroke\", \"none\");\r\n\t\t\tr.setAttribute(\"stroke-opacity\", 0);\r\n\t\t\tr.setAttribute(\"stroke-width\", 1);\r\n\t\t\tr.setAttribute(\"stroke-linecap\", \"butt\");\r\n\t\t\tr.setAttribute(\"stroke-linejoin\", \"miter\");\r\n\t\t\tr.setAttribute(\"stroke-miterlimit\", 4);\r\n\t\t\t// Bind GFX object with SVG node for ease of retrieval - that is to\r\n\t\t\t// save code/performance to keep this association elsewhere\r\n\t\t\tr.__gfxObject__ = this;\r\n\t\t},\r\n\r\n\t\tsetShape: function(newShape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a shape object (SVG)\r\n\t\t\t// newShape: Object\r\n\t\t\t//\t\ta shape object\r\n\t\t\t//\t\t(see dojox/gfx.defaultPath,\r\n\t\t\t//\t\tdojox/gfx.defaultPolyline,\r\n\t\t\t//\t\tdojox/gfx.defaultRect,\r\n\t\t\t//\t\tdojox/gfx.defaultEllipse,\r\n\t\t\t//\t\tdojox/gfx.defaultCircle,\r\n\t\t\t//\t\tdojox/gfx.defaultLine,\r\n\t\t\t//\t\tor dojox/gfx.defaultImage)\r\n\t\t\tthis.shape = g.makeParameters(this.shape, newShape);\r\n\t\t\tfor(var i in this.shape){\r\n\t\t\t\tif(i != \"type\"){\r\n\t\t\t\t\tthis.rawNode.setAttribute(i, this.shape[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.bbox = null;\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\r\n\t\t// move family\r\n\r\n\t\t_moveToFront: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tmoves a shape to front of its parent's list of shapes (SVG)\r\n\t\t\tthis.rawNode.parentNode.appendChild(this.rawNode);\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\t_moveToBack: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tmoves a shape to back of its parent's list of shapes (SVG)\r\n\t\t\tthis.rawNode.parentNode.insertBefore(this.rawNode, this.rawNode.parentNode.firstChild);\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\tsetClip: function(clip){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets the clipping area of this shape.\r\n\t\t\t// description:\r\n\t\t\t//\t\tThis method overrides the dojox/gfx/shape.Shape.setClip() method.\r\n\t\t\t// clip: Object\r\n\t\t\t//\t\tan object that defines the clipping geometry, or null to remove clip.\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tvar clipType = clip ? \"width\" in clip ? \"rect\" : \r\n\t\t\t\t\t\t\t\"cx\" in clip ? \"ellipse\" : \r\n\t\t\t\t\t\t\t\"points\" in clip ? \"polyline\" : \"d\" in clip ? \"path\" : null : null;\r\n\t\t\tif(clip && !clipType){\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\tif(clipType === \"polyline\"){\r\n\t\t\t\tclip = lang.clone(clip);\r\n\t\t\t\tclip.points = clip.points.join(\",\");\r\n\t\t\t}\r\n\t\t\tvar clipNode, clipShape,\r\n\t\t\t\tclipPathProp = domAttr.get(this.rawNode, \"clip-path\");\r\n\t\t\tif(clipPathProp){\r\n\t\t\t\tclipNode = dom.byId(clipPathProp.match(/gfx_clip[\\d]+/)[0]);\r\n\t\t\t\tif(clipNode){ // may be null if not in the DOM anymore\r\n\t\t\t\t\tclipNode.removeChild(clipNode.childNodes[0]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(clip){\r\n\t\t\t\tif(clipNode){\r\n\t\t\t\t\tclipShape = _createElementNS(svg.xmlns.svg, clipType);\r\n\t\t\t\t\tclipNode.appendChild(clipShape);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar idIndex = ++clipCount;\r\n\t\t\t\t\tvar clipId = \"gfx_clip\" + idIndex;\r\n\t\t\t\t\tvar clipUrl = \"url(#\" + clipId + \")\";\r\n\t\t\t\t\tthis.rawNode.setAttribute(\"clip-path\", clipUrl);\r\n\t\t\t\t\tclipNode = _createElementNS(svg.xmlns.svg, \"clipPath\");\r\n\t\t\t\t\tclipShape = _createElementNS(svg.xmlns.svg, clipType);\r\n\t\t\t\t\tclipNode.appendChild(clipShape);\r\n\t\t\t\t\tthis.rawNode.parentNode.insertBefore(clipNode, this.rawNode);\r\n\t\t\t\t\tdomAttr.set(clipNode, \"id\", clipId);\r\n\t\t\t\t}\r\n\t\t\t\tdomAttr.set(clipShape, clip);\r\n\t\t\t}else{\r\n\t\t\t\t//remove clip-path\r\n\t\t\t\tthis.rawNode.removeAttribute(\"clip-path\");\r\n\t\t\t\tif(clipNode){\r\n\t\t\t\t\tclipNode.parentNode.removeChild(clipNode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t_removeClipNode: function(){\r\n\t\t\tvar clipNode, clipPathProp = domAttr.get(this.rawNode, \"clip-path\");\r\n\t\t\tif(clipPathProp){\r\n\t\t\t\tclipNode = dom.byId(clipPathProp.match(/gfx_clip[\\d]+/)[0]);\r\n\t\t\t\tif(clipNode){\r\n\t\t\t\t\tclipNode.parentNode.removeChild(clipNode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn clipNode;\r\n\t\t}\r\n\t});\r\n\r\n\r\n\tsvg.Group = declare(\"dojox.gfx.svg.Group\", svg.Shape, {\r\n\t\t// summary:\r\n\t\t//\t\ta group shape (SVG), which can be used\r\n\t\t//\t\tto logically group shapes (e.g, to propagate matricies)\r\n\t\tconstructor: function(){\r\n\t\t\tgs.Container._init.call(this);\r\n\t\t},\r\n\t\tsetRawNode: function(rawNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a raw SVG node to be used by this shape\r\n\t\t\t// rawNode: Node\r\n\t\t\t//\t\tan SVG node\r\n\t\t\tthis.rawNode = rawNode;\r\n\t\t\t// Bind GFX object with SVG node for ease of retrieval - that is to\r\n\t\t\t// save code/performance to keep this association elsewhere\r\n\t\t\tthis.rawNode.__gfxObject__ = this;\r\n\t\t},\r\n\t\tdestroy: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReleases all internal resources owned by this shape. Once this method has been called,\r\n\t\t\t//\t\tthe instance is considered disposed and should not be used anymore.\r\n\t\t\tthis.clear(true);\r\n\t\t\t// avoid this.inherited\r\n\t\t\tsvg.Shape.prototype.destroy.apply(this, arguments);\r\n\t\t}\r\n\t});\r\n\tsvg.Group.nodeType = \"g\";\r\n\r\n\tsvg.Rect = declare(\"dojox.gfx.svg.Rect\", [svg.Shape, gs.Rect], {\r\n\t\t// summary:\r\n\t\t//\t\ta rectangle shape (SVG)\r\n\t\tsetShape: function(newShape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a rectangle shape object (SVG)\r\n\t\t\t// newShape: Object\r\n\t\t\t//\t\ta rectangle shape object\r\n\t\t\tthis.shape = g.makeParameters(this.shape, newShape);\r\n\t\t\tthis.bbox = null;\r\n\t\t\tfor(var i in this.shape){\r\n\t\t\t\tif(i != \"type\" && i != \"r\"){\r\n\t\t\t\t\tthis.rawNode.setAttribute(i, this.shape[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(this.shape.r != null){\r\n\t\t\t\tthis.rawNode.setAttribute(\"ry\", this.shape.r);\r\n\t\t\t\tthis.rawNode.setAttribute(\"rx\", this.shape.r);\r\n\t\t\t}\r\n\t\t\treturn this;\t// self\r\n\t\t}\r\n\t});\r\n\tsvg.Rect.nodeType = \"rect\";\r\n\r\n\tsvg.Ellipse = declare(\"dojox.gfx.svg.Ellipse\", [svg.Shape, gs.Ellipse], {});\r\n\tsvg.Ellipse.nodeType = \"ellipse\";\r\n\r\n\tsvg.Circle = declare(\"dojox.gfx.svg.Circle\", [svg.Shape, gs.Circle], {});\r\n\tsvg.Circle.nodeType = \"circle\";\r\n\r\n\tsvg.Line = declare(\"dojox.gfx.svg.Line\", [svg.Shape, gs.Line], {});\r\n\tsvg.Line.nodeType = \"line\";\r\n\r\n\tsvg.Polyline = declare(\"dojox.gfx.svg.Polyline\", [svg.Shape, gs.Polyline], {\r\n\t\t// summary:\r\n\t\t//\t\ta polyline/polygon shape (SVG)\r\n\t\tsetShape: function(points, closed){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a polyline/polygon shape object (SVG)\r\n\t\t\t// points: Object|Array\r\n\t\t\t//\t\ta polyline/polygon shape object, or an array of points\r\n\t\t\tif(points && points instanceof Array){\r\n\t\t\t\tthis.shape = g.makeParameters(this.shape, { points: points });\r\n\t\t\t\tif(closed && this.shape.points.length){\r\n\t\t\t\t\tthis.shape.points.push(this.shape.points[0]);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.shape = g.makeParameters(this.shape, points);\r\n\t\t\t}\r\n\t\t\tthis.bbox = null;\r\n\t\t\tthis._normalizePoints();\r\n\t\t\tvar attr = [], p = this.shape.points;\r\n\t\t\tfor(var i = 0; i < p.length; ++i){\r\n\t\t\t\tattr.push(p[i].x.toFixed(8), p[i].y.toFixed(8));\r\n\t\t\t}\r\n\t\t\tthis.rawNode.setAttribute(\"points\", attr.join(\" \"));\r\n\t\t\treturn this;\t// self\r\n\t\t}\r\n\t});\r\n\tsvg.Polyline.nodeType = \"polyline\";\r\n\r\n\tsvg.Image = declare(\"dojox.gfx.svg.Image\", [svg.Shape, gs.Image], {\r\n\t\t// summary:\r\n\t\t//\t\tan image (SVG)\r\n\t\tsetShape: function(newShape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets an image shape object (SVG)\r\n\t\t\t// newShape: Object\r\n\t\t\t//\t\tan image shape object\r\n\t\t\tthis.shape = g.makeParameters(this.shape, newShape);\r\n\t\t\tthis.bbox = null;\r\n\t\t\tvar rawNode = this.rawNode;\r\n\t\t\tfor(var i in this.shape){\r\n\t\t\t\tif(i != \"type\" && i != \"src\"){\r\n\t\t\t\t\trawNode.setAttribute(i, this.shape[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\trawNode.setAttribute(\"preserveAspectRatio\", \"none\");\r\n\t\t\t_setAttributeNS(rawNode, svg.xmlns.xlink, \"xlink:href\", this.shape.src);\r\n\t\t\t// Bind GFX object with SVG node for ease of retrieval - that is to\r\n\t\t\t// save code/performance to keep this association elsewhere\r\n\t\t\trawNode.__gfxObject__ = this;\r\n\t\t\treturn this;\t// self\r\n\t\t}\r\n\t});\r\n\tsvg.Image.nodeType = \"image\";\r\n\r\n\tsvg.Text = declare(\"dojox.gfx.svg.Text\", [svg.Shape, gs.Text], {\r\n\t\t// summary:\r\n\t\t//\t\tan anchored text (SVG)\r\n\t\tsetShape: function(newShape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a text shape object (SVG)\r\n\t\t\t// newShape: Object\r\n\t\t\t//\t\ta text shape object\r\n\t\t\tthis.shape = g.makeParameters(this.shape, newShape);\r\n\t\t\tthis.bbox = null;\r\n\t\t\tvar r = this.rawNode, s = this.shape;\r\n\t\t\tr.setAttribute(\"x\", s.x);\r\n\t\t\tr.setAttribute(\"y\", s.y);\r\n\t\t\tr.setAttribute(\"text-anchor\", s.align);\r\n\t\t\tr.setAttribute(\"text-decoration\", s.decoration);\r\n\t\t\tr.setAttribute(\"rotate\", s.rotated ? 90 : 0);\r\n\t\t\tr.setAttribute(\"kerning\", s.kerning ? \"auto\" : 0);\r\n\t\t\tr.setAttribute(\"text-rendering\", textRenderingFix);\r\n\r\n\t\t\t// update the text content\r\n\t\t\tif(r.firstChild){\r\n\t\t\t\tr.firstChild.nodeValue = s.text;\r\n\t\t\t}else{\r\n\t\t\t\tr.appendChild(_createTextNode(s.text));\r\n\t\t\t}\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\tgetTextWidth: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tget the text width in pixels\r\n\t\t\tvar rawNode = this.rawNode,\r\n\t\t\t\toldParent = rawNode.parentNode,\r\n\t\t\t\t_measurementNode = rawNode.cloneNode(true);\r\n\t\t\t_measurementNode.style.visibility = \"hidden\";\r\n\r\n\t\t\t// solution to the \"orphan issue\" in FF\r\n\t\t\tvar _width = 0, _text = _measurementNode.firstChild.nodeValue;\r\n\t\t\toldParent.appendChild(_measurementNode);\r\n\r\n\t\t\t// solution to the \"orphan issue\" in Opera\r\n\t\t\t// (nodeValue == \"\" hangs firefox)\r\n\t\t\tif(_text!=\"\"){\r\n\t\t\t\twhile(!_width){\r\n//Yang: work around svgweb bug 417 -- http://code.google.com/p/svgweb/issues/detail?id=417\r\nif (_measurementNode.getBBox)\r\n\t\t\t\t\t_width = parseInt(_measurementNode.getBBox().width);\r\nelse\r\n\t_width = 68;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\toldParent.removeChild(_measurementNode);\r\n\t\t\treturn _width;\r\n\t\t},\r\n\t\tgetBoundingBox: function(){\r\n\t\t\tvar s = this.getShape(), bbox = null;\r\n\t\t\tif(s.text){\r\n\t\t\t\t// try/catch the FF native getBBox error.\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbbox = this.rawNode.getBBox();\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\t// under FF when the node is orphan (all other browsers return a 0ed bbox.\r\n\t\t\t\t\tbbox = {x:0, y:0, width:0, height:0};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn bbox;\r\n\t\t}\r\n\t});\r\n\tsvg.Text.nodeType = \"text\";\r\n\r\n\tsvg.Path = declare(\"dojox.gfx.svg.Path\", [svg.Shape, pathLib.Path], {\r\n\t\t// summary:\r\n\t\t//\t\ta path shape (SVG)\r\n\t\t_updateWithSegment: function(segment){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tupdates the bounding box of path with new segment\r\n\t\t\t// segment: Object\r\n\t\t\t//\t\ta segment\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(typeof(this.shape.path) == \"string\"){\r\n\t\t\t\tthis.rawNode.setAttribute(\"d\", this.shape.path);\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetShape: function(newShape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a path using a shape (SVG)\r\n\t\t\t// newShape: Object\r\n\t\t\t//\t\tan SVG path string or a path object (see dojox/gfx.defaultPath)\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(this.shape.path){\r\n\t\t\t\tthis.rawNode.setAttribute(\"d\", this.shape.path);\r\n\t\t\t}else{\r\n\t\t\t\tthis.rawNode.removeAttribute(\"d\");\r\n\t\t\t}\r\n\t\t\treturn this;\t// self\r\n\t\t}\r\n\t});\r\n\tsvg.Path.nodeType = \"path\";\r\n\r\n\tsvg.TextPath = declare(\"dojox.gfx.svg.TextPath\", [svg.Shape, pathLib.TextPath], {\r\n\t\t// summary:\r\n\t\t//\t\ta textpath shape (SVG)\r\n\t\t_updateWithSegment: function(segment){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tupdates the bounding box of path with new segment\r\n\t\t\t// segment: Object\r\n\t\t\t//\t\ta segment\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._setTextPath();\r\n\t\t},\r\n\t\tsetShape: function(newShape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a path using a shape (SVG)\r\n\t\t\t// newShape: Object\r\n\t\t\t//\t\tan SVG path string or a path object (see dojox/gfx.defaultPath)\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._setTextPath();\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\t_setTextPath: function(){\r\n\t\t\tif(typeof this.shape.path != \"string\"){ return; }\r\n\t\t\tvar r = this.rawNode;\r\n\t\t\tif(!r.firstChild){\r\n\t\t\t\tvar tp = _createElementNS(svg.xmlns.svg, \"textPath\"),\r\n\t\t\t\t\ttx = _createTextNode(\"\");\r\n\t\t\t\ttp.appendChild(tx);\r\n\t\t\t\tr.appendChild(tp);\r\n\t\t\t}\r\n\t\t\tvar ref  = r.firstChild.getAttributeNS(svg.xmlns.xlink, \"href\"),\r\n\t\t\t\tpath = ref && svg.getRef(ref);\r\n\t\t\tif(!path){\r\n\t\t\t\tvar surface = this._getParentSurface();\r\n\t\t\t\tif(surface){\r\n\t\t\t\t\tvar defs = surface.defNode;\r\n\t\t\t\t\tpath = _createElementNS(svg.xmlns.svg, \"path\");\r\n\t\t\t\t\tvar id = g._base._getUniqueId();\r\n\t\t\t\t\tpath.setAttribute(\"id\", id);\r\n\t\t\t\t\tdefs.appendChild(path);\r\n\t\t\t\t\t_setAttributeNS(r.firstChild, svg.xmlns.xlink, \"xlink:href\", \"#\" + id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(path){\r\n\t\t\t\tpath.setAttribute(\"d\", this.shape.path);\r\n\t\t\t}\r\n\t\t},\r\n\t\t_setText: function(){\r\n\t\t\tvar r = this.rawNode;\r\n\t\t\tif(!r.firstChild){\r\n\t\t\t\tvar tp = _createElementNS(svg.xmlns.svg, \"textPath\"),\r\n\t\t\t\t\ttx = _createTextNode(\"\");\r\n\t\t\t\ttp.appendChild(tx);\r\n\t\t\t\tr.appendChild(tp);\r\n\t\t\t}\r\n\t\t\tr = r.firstChild;\r\n\t\t\tvar t = this.text;\r\n\t\t\tr.setAttribute(\"alignment-baseline\", \"middle\");\r\n\t\t\tswitch(t.align){\r\n\t\t\t\tcase \"middle\":\r\n\t\t\t\t\tr.setAttribute(\"text-anchor\", \"middle\");\r\n\t\t\t\t\tr.setAttribute(\"startOffset\", \"50%\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"end\":\r\n\t\t\t\t\tr.setAttribute(\"text-anchor\", \"end\");\r\n\t\t\t\t\tr.setAttribute(\"startOffset\", \"100%\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tr.setAttribute(\"text-anchor\", \"start\");\r\n\t\t\t\t\tr.setAttribute(\"startOffset\", \"0%\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t//r.parentNode.setAttribute(\"alignment-baseline\", \"central\");\r\n\t\t\t//r.setAttribute(\"dominant-baseline\", \"central\");\r\n\t\t\tr.setAttribute(\"baseline-shift\", \"0.5ex\");\r\n\t\t\tr.setAttribute(\"text-decoration\", t.decoration);\r\n\t\t\tr.setAttribute(\"rotate\", t.rotated ? 90 : 0);\r\n\t\t\tr.setAttribute(\"kerning\", t.kerning ? \"auto\" : 0);\r\n\t\t\tr.firstChild.data = t.text;\r\n\t\t}\r\n\t});\r\n\tsvg.TextPath.nodeType = \"text\";\r\n\r\n\t// Fix for setDimension bug:\r\n\t// http://bugs.dojotoolkit.org/ticket/16100\r\n\t// (https://code.google.com/p/chromium/issues/detail?id=162628)\r\n\tvar hasSvgSetAttributeBug = (function(){ var matches = /WebKit\\/(\\d*)/.exec(uagent); return matches ? matches[1] : 0})() > 534;\r\n\r\n\tsvg.Surface = declare(\"dojox.gfx.svg.Surface\", gs.Surface, {\r\n\t\t// summary:\r\n\t\t//\t\ta surface object to be used for drawings (SVG)\r\n\t\tconstructor: function(){\r\n\t\t\tgs.Container._init.call(this);\r\n\t\t},\r\n\t\tdestroy: function(){\r\n\t\t\t// no need to call svg.Container.clear to remove the children raw\r\n\t\t\t// nodes since the surface raw node will be removed. So, only dispose at gfx level\t\r\n\t\t\tgs.Container.clear.call(this, true); \r\n\t\t\tthis.defNode = null;\t// release the external reference\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\t\tsetDimensions: function(width, height){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets the width and height of the rawNode\r\n\t\t\t// width: String\r\n\t\t\t//\t\twidth of surface, e.g., \"100px\"\r\n\t\t\t// height: String\r\n\t\t\t//\t\theight of surface, e.g., \"100px\"\r\n\t\t\tif(!this.rawNode){ return this; }\r\n\t\t\tthis.rawNode.setAttribute(\"width\",  width);\r\n\t\t\tthis.rawNode.setAttribute(\"height\", height);\r\n\t\t\tif(hasSvgSetAttributeBug){\r\n\t\t\t\tthis.rawNode.style.width =  width;\r\n\t\t\t\tthis.rawNode.style.height =  height;\r\n\t\t\t}\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\tgetDimensions: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns an object with properties \"width\" and \"height\"\r\n\t\t\tvar t = this.rawNode ? {\r\n\t\t\t\twidth:  g.normalizedLength(this.rawNode.getAttribute(\"width\")),\r\n\t\t\t\theight: g.normalizedLength(this.rawNode.getAttribute(\"height\"))} : null;\r\n\t\t\treturn t;\t// Object\r\n\t\t}\r\n\t});\r\n\r\n\tsvg.createSurface = function(parentNode, width, height){\r\n\t\t// summary:\r\n\t\t//\t\tcreates a surface (SVG)\r\n\t\t// parentNode: Node\r\n\t\t//\t\ta parent node\r\n\t\t// width: String|Number\r\n\t\t//\t\twidth of surface, e.g., \"100px\" or 100\r\n\t\t// height: String|Number\r\n\t\t//\t\theight of surface, e.g., \"100px\" or 100\r\n\t\t// returns: dojox/gfx/shape.Surface\r\n\t\t//     newly created surface\r\n\r\n\t\tvar s = new svg.Surface();\r\n\t\ts.rawNode = _createElementNS(svg.xmlns.svg, \"svg\");\r\n\t\ts.rawNode.setAttribute(\"overflow\", \"hidden\");\r\n\t\tif(width){\r\n\t\t\ts.rawNode.setAttribute(\"width\",  width);\r\n\t\t}\r\n\t\tif(height){\r\n\t\t\ts.rawNode.setAttribute(\"height\", height);\r\n\t\t}\r\n\r\n\t\tvar defNode = _createElementNS(svg.xmlns.svg, \"defs\");\r\n\t\ts.rawNode.appendChild(defNode);\r\n\t\ts.defNode = defNode;\r\n\r\n\t\ts._parent = dom.byId(parentNode);\r\n\t\ts._parent.appendChild(s.rawNode);\r\n\r\n\t\tg._base._fixMsTouchAction(s);\r\n\r\n\t\treturn s;\t// dojox/gfx.Surface\r\n\t};\r\n\r\n\t// Extenders\r\n\r\n\tvar Font = {\r\n\t\t_setFont: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a font object (SVG)\r\n\t\t\tvar f = this.fontStyle;\r\n\t\t\t// next line doesn't work in Firefox 2 or Opera 9\r\n\t\t\t//this.rawNode.setAttribute(\"font\", dojox.gfx.makeFontString(this.fontStyle));\r\n\t\t\tthis.rawNode.setAttribute(\"font-style\", f.style);\r\n\t\t\tthis.rawNode.setAttribute(\"font-variant\", f.variant);\r\n\t\t\tthis.rawNode.setAttribute(\"font-weight\", f.weight);\r\n\t\t\tthis.rawNode.setAttribute(\"font-size\", f.size);\r\n\t\t\tthis.rawNode.setAttribute(\"font-family\", f.family);\r\n\t\t}\r\n\t};\r\n\r\n\tvar C = gs.Container;\r\n\tvar Container = svg.Container = {\r\n\t\topenBatch: function() {\r\n\t\t\t// summary:\r\n\t\t\t//\t\tstarts a new batch, subsequent new child shapes will be held in\r\n\t\t\t//\t\tthe batch instead of appending to the container directly\r\n\t\t\tif(!this._batch){\r\n\t\t\t\tthis.fragment = _createFragment();\r\n\t\t\t}\r\n\t\t\t++this._batch;\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tcloseBatch: function() {\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsubmits the current batch, append all pending child shapes to DOM\r\n\t\t\tthis._batch = this._batch > 0 ? --this._batch : 0;\r\n\t\t\tif (this.fragment && !this._batch) {\r\n\t\t\t\tthis.rawNode.appendChild(this.fragment);\r\n\t\t\t\tdelete this.fragment;\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tadd: function(shape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tadds a shape to a group/surface\r\n\t\t\t// shape: dojox/gfx/shape.Shape\r\n\t\t\t//\t\tan VML shape object\r\n\t\t\tif(this != shape.getParent()){\r\n\t\t\t\tif (this.fragment) {\r\n\t\t\t\t\tthis.fragment.appendChild(shape.rawNode);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.rawNode.appendChild(shape.rawNode);\r\n\t\t\t\t}\r\n\t\t\t\tC.add.apply(this, arguments);\r\n\t\t\t\t// update clipnode with new parent\r\n\t\t\t\tshape.setClip(shape.clip);\r\n\t\t\t}\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\tremove: function(shape, silently){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tremove a shape from a group/surface\r\n\t\t\t// shape: dojox/gfx/shape.Shape\r\n\t\t\t//\t\tan VML shape object\r\n\t\t\t// silently: Boolean?\r\n\t\t\t//\t\tif true, regenerate a picture\r\n\t\t\tif(this == shape.getParent()){\r\n\t\t\t\tif(this.rawNode == shape.rawNode.parentNode){\r\n\t\t\t\t\tthis.rawNode.removeChild(shape.rawNode);\r\n\t\t\t\t}\r\n\t\t\t\tif(this.fragment && this.fragment == shape.rawNode.parentNode){\r\n\t\t\t\t\tthis.fragment.removeChild(shape.rawNode);\r\n\t\t\t\t}\r\n\t\t\t\t// remove clip node from parent \r\n\t\t\t\tshape._removeClipNode();\r\n\t\t\t\tC.remove.apply(this, arguments);\r\n\t\t\t}\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\tclear: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tremoves all shapes from a group/surface\r\n\t\t\tvar r = this.rawNode;\r\n\t\t\twhile(r.lastChild){\r\n\t\t\t\tr.removeChild(r.lastChild);\r\n\t\t\t}\r\n\t\t\tvar defNode = this.defNode;\r\n\t\t\tif(defNode){\r\n\t\t\t\twhile(defNode.lastChild){\r\n\t\t\t\t\tdefNode.removeChild(defNode.lastChild);\r\n\t\t\t\t}\r\n\t\t\t\tr.appendChild(defNode);\r\n\t\t\t}\r\n\t\t\treturn C.clear.apply(this, arguments);\r\n\t\t},\r\n\t\tgetBoundingBox: C.getBoundingBox,\r\n\t\t_moveChildToFront: C._moveChildToFront,\r\n\t\t_moveChildToBack:  C._moveChildToBack\r\n\t};\r\n\r\n\tvar Creator = svg.Creator = {\r\n\t\t// summary:\r\n\t\t//\t\tSVG shape creators\r\n\t\tcreateObject: function(shapeType, rawShape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreates an instance of the passed shapeType class\r\n\t\t\t// shapeType: Function\r\n\t\t\t//\t\ta class constructor to create an instance of\r\n\t\t\t// rawShape: Object\r\n\t\t\t//\t\tproperties to be passed in to the classes \"setShape\" method\r\n\t\t\tif(!this.rawNode){ return null; }\r\n\t\t\tvar shape = new shapeType(),\r\n\t\t\t\tnode = _createElementNS(svg.xmlns.svg, shapeType.nodeType);\r\n\r\n\t\t\tshape.setRawNode(node);\r\n\t\t\tshape.setShape(rawShape);\r\n\t\t\t// rawNode.appendChild() will be done inside this.add(shape) below\r\n\t\t\tthis.add(shape);\r\n\t\t\treturn shape;\t// dojox/gfx/shape.Shape\r\n\t\t}\r\n\t};\r\n\r\n\tlang.extend(svg.Text, Font);\r\n\tlang.extend(svg.TextPath, Font);\r\n\r\n\tlang.extend(svg.Group, Container);\r\n\tlang.extend(svg.Group, gs.Creator);\r\n\tlang.extend(svg.Group, Creator);\r\n\r\n\tlang.extend(svg.Surface, Container);\r\n\tlang.extend(svg.Surface, gs.Creator);\r\n\tlang.extend(svg.Surface, Creator);\r\n\r\n\t// Mouse/Touch event\r\n\tsvg.fixTarget = function(event, gfxElement) {\r\n\t\t// summary:\r\n\t\t//\t\tAdds the gfxElement to event.gfxTarget if none exists. This new\r\n\t\t//\t\tproperty will carry the GFX element associated with this event.\r\n\t\t// event: Object\r\n\t\t//\t\tThe current input event (MouseEvent or TouchEvent)\r\n\t\t// gfxElement: Object\r\n\t\t//\t\tThe GFX target element\r\n\t\tif (!event.gfxTarget) {\r\n\t\t\tif (safMobile && event.target.wholeText) {\r\n\t\t\t\t// Workaround iOS bug when touching text nodes\r\n\t\t\t\tevent.gfxTarget = event.target.parentElement.__gfxObject__;\r\n\t\t\t} else {\r\n\t\t\t\tevent.gfxTarget = event.target.__gfxObject__;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t};\r\n\r\n\t// some specific override for svgweb + flash\r\n\tif(svg.useSvgWeb){\r\n\t\t// override createSurface()\r\n\t\tsvg.createSurface = function(parentNode, width, height){\r\n\t\t\tvar s = new svg.Surface();\r\n\r\n\t\t\t// ensure width / height\r\n\t\t\tif(!width || !height){\r\n\t\t\t\tvar pos = domGeom.position(parentNode);\r\n\t\t\t\twidth  = width  || pos.w;\r\n\t\t\t\theight = height || pos.h;\r\n\t\t\t}\r\n\r\n\t\t\t// ensure id\r\n\t\t\tparentNode = dom.byId(parentNode);\r\n\t\t\tvar id = parentNode.id ? parentNode.id+'_svgweb' : g._base._getUniqueId();\r\n\r\n\t\t\t// create dynamic svg root\r\n\t\t\tvar mockSvg = _createElementNS(svg.xmlns.svg, 'svg');\r\n\t\t\tmockSvg.id = id;\r\n\t\t\tmockSvg.setAttribute('width', width);\r\n\t\t\tmockSvg.setAttribute('height', height);\r\n\t\t\tsvgweb.appendChild(mockSvg, parentNode);\r\n\r\n\t\t\t// notice: any call to the raw node before flash init will fail.\r\n\t\t\tmockSvg.addEventListener('SVGLoad', function(){\r\n\t\t\t\t// become loaded\r\n\t\t\t\ts.rawNode = this;\r\n\t\t\t\ts.isLoaded = true;\r\n\r\n\t\t\t\t// init defs\r\n\t\t\t\tvar defNode = _createElementNS(svg.xmlns.svg, \"defs\");\r\n\t\t\t\ts.rawNode.appendChild(defNode);\r\n\t\t\t\ts.defNode = defNode;\r\n\r\n\t\t\t\t// notify application\r\n\t\t\t\tif (s.onLoad)\r\n\t\t\t\t\ts.onLoad(s);\r\n\t\t\t}, false);\r\n\r\n\t\t\t// flash not loaded yet\r\n\t\t\ts.isLoaded = false;\r\n\t\t\treturn s;\r\n\t\t};\r\n\r\n\t\t// override Surface.destroy()\r\n\t\tsvg.Surface.extend({\r\n\t\t\tdestroy: function(){\r\n\t\t\t\tvar mockSvg = this.rawNode;\r\n\t\t\t\tsvgweb.removeChild(mockSvg, mockSvg.parentNode);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// override connect() & disconnect() for Shape & Surface event processing\r\n\t\tvar _eventsProcessing = {\r\n\t\t\tconnect: function(name, object, method){\r\n\t\t\t\t// connect events using the mock addEventListener() provided by svgweb\r\n\t\t\t\tif (name.substring(0, 2)==='on') { name = name.substring(2); }\r\n\t\t\t\tif (arguments.length == 2) {\r\n\t\t\t\t\tmethod = object;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmethod = lang.hitch(object, method);\r\n\t\t\t\t}\r\n\t\t\t\tthis.getEventSource().addEventListener(name, method, false);\r\n\t\t\t\treturn [this, name, method];\r\n\t\t\t},\r\n\t\t\tdisconnect: function(token){\r\n\t\t\t\t// disconnect events using the mock removeEventListener() provided by svgweb\r\n\t\t\t\tthis.getEventSource().removeEventListener(token[1], token[2], false);\r\n\t\t\t\tdelete token[0];\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tlang.extend(svg.Shape, _eventsProcessing);\r\n\t\tlang.extend(svg.Surface, _eventsProcessing);\r\n\t}\r\n\r\n\treturn svg;\r\n});\r\n"]}