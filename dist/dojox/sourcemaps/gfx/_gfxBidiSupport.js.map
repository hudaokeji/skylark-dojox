{"version":3,"sources":["gfx/_gfxBidiSupport.js"],"names":["define","g","lang","has","dom","html","arr","utils","shapeLib","pathLib","BidiEngine","getObject","renderer","isVml","isSvg","svg","useSvgWeb","isSvgWeb","isSilverlight","isCanvas","bidi_const","bidiEngine","extend","shape","Surface","textDir","setTextDir","newTextDir","this","getTextDir","Group","Text","formatText","text","length","targetDir","checkContextual","hasBidiChar","bidiTransform","bidiPreprocess","newShape","TextPath","newText","origText","extendMethod","method","before","after","old","prototype","rBefore","apply","arguments","r","call","validateTextDir","Array","join","undefined","restoreText","origObj","obj","clone","groupTextDir","group","args","textDirPreprocess","tDir","forEach","e","setShape","setText","toLowerCase","indexOf","createSurface","parentNode","width","height","s","style","byId","rawNode","_nodes"],"mappings":"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","file":"../../gfx/_gfxBidiSupport.js","sourcesContent":["define([\"./_base\", \"dojo/_base/lang\",\"dojo/_base/sniff\", \"dojo/dom\", \"dojo/_base/html\", \"dojo/_base/array\",\r\n\t\t\"./utils\", \"./shape\", \"./path\", \"dojox/string/BidiEngine\"],\r\nfunction(g, lang, has, dom, html, arr, utils, shapeLib, pathLib, BidiEngine){\r\n\tlang.getObject(\"dojox.gfx._gfxBidiSupport\", true);\r\n\r\n\t/*=====\r\n\t// Prevent changes here from masking the definitions in _base.js from the doc parser\r\n\tvar origG = g;\r\n\tg = {};\r\n\t=====*/\r\n\r\n\tswitch (g.renderer){\r\n\t\tcase 'vml':\r\n\t\t\tg.isVml = true;\r\n\t\t\tbreak;\r\n\t\tcase 'svg':\r\n\t\t\tg.isSvg = true;\r\n\t\t\tif(g.svg.useSvgWeb){\r\n\t\t\t\tg.isSvgWeb = true;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'silverlight':\r\n\t\t\tg.isSilverlight = true;\r\n\t\t\tbreak;\r\n\t\tcase 'canvas':\r\n\t\tcase 'canvasWithEvents':\r\n\t\t\tg.isCanvas = true;\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tvar bidi_const = {\r\n\t\tLRM : '\\u200E',\r\n\t\tLRE : '\\u202A',\r\n\t\tPDF : '\\u202C',\r\n\t\tRLM : '\\u200f',\r\n\t\tRLE : '\\u202B'\r\n\t};\r\n\r\n\t/*===== g = origG; =====*/\r\n\r\n\t// the object that performs text transformations.\r\n\tvar bidiEngine = new BidiEngine();\r\n\r\n\tlang.extend(g.shape.Surface, {\r\n\t\t// textDir: String\r\n\t\t//\t\tWill be used as default for Text/TextPath/Group objects that created by this surface\r\n\t\t//\t\tand textDir wasn't directly specified for them, though the bidi support was loaded.\r\n\t\t//\t\tCan be set in two ways:\r\n\t\t//\r\n\t\t//\t\t1. When the surface is created and textDir value passed to it as fourth\r\n\t\t//\t\tparameter.\r\n\t\t//\t\t2. Using the setTextDir(String) function, when this function is used the value\r\n\t\t//\t\tof textDir propagates to all of it's children and the children of children (for Groups) etc.\r\n\t\ttextDir: \"\",\r\n\r\n\t\tsetTextDir: function(/*String*/newTextDir){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUsed for propagation and change of textDir.\r\n\t\t\t//\t\tnewTextDir will be forced as textDir for all of it's children (Group/Text/TextPath).\r\n\t\t\tsetTextDir(this, newTextDir);\r\n\t\t},\r\n\r\n\t\tgetTextDir: function(){\r\n\t\t\treturn this.textDir;\r\n\t\t}\r\n\t});\r\n\r\n\tlang.extend(g.Group, {                          \r\n\t\t// textDir: String\r\n\t\t//\t\tWill be used for inheritance, or as default for text objects\r\n\t\t//\t\tthat textDir wasn't directly specified for them but the bidi support was required.\r\n\t\ttextDir: \"\",\r\n\r\n\t\tsetTextDir: function(/*String*/newTextDir){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUsed for propagation and change of textDir.\r\n\t\t\t//\t\tnewTextDir will be forced as textDir for all of it's children (Group/Text/TextPath).\r\n\t\t\tsetTextDir(this, newTextDir);\r\n\t\t},\r\n\r\n\t\tgetTextDir: function(){\r\n\t\t\treturn this.textDir;\r\n\t\t}\t\r\n\t});\r\n\t\r\n\tlang.extend(g.Text, {  \r\n\t\t// summary:\r\n\t\t//\t\tOverrides some of dojox/gfx.Text properties, and adds some\r\n\t\t//\t\tfor bidi support.\r\n\t\t\r\n\t\t// textDir: String\r\n\t\t//\t\tUsed for displaying bidi scripts in right layout.\r\n\t\t//\t\tDefines the base direction of text that displayed, can have 3 values:\r\n\t\t//\r\n\t\t//\t\t1. \"ltr\" - base direction is left to right.\r\n\t\t//\t\t2. \"rtl\" - base direction is right to left.\r\n\t\t//\t\t3. \"auto\" - base direction is contextual (defined by first strong character).\r\n\t\ttextDir: \"\",\r\n\r\n\t\tformatText: function (/*String*/ text, /*String*/ textDir){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tApplies the right transform on text, according to renderer.\r\n\t\t\t// text:\t\r\n\t\t\t//\t\tthe string for manipulation, by default return value.\r\n\t\t\t// textDir:\t\r\n\t\t\t//\t\tText direction.\r\n\t\t\t//\t\tCan be:\r\n\t\t\t//\r\n\t\t\t//\t\t1. \"ltr\" - for left to right layout.\r\n\t\t\t//\t\t2. \"rtl\" - for right to left layout\r\n\t\t\t//\t\t3. \"auto\" - for contextual layout: the first strong letter decides the direction.\r\n\t\t\t// description:\r\n\t\t\t//\t\tFinds the right transformation that should be applied on the text, according to renderer.\r\n\t\t\t//\t\tWas tested in:\r\n\t\t\t//\r\n\t\t\t//\t\tRenderers (browser for testing):\r\n\t\t\t//\r\n\t\t\t//\t\t- canvas (FF, Chrome, Safari),\r\n\t\t\t//\t\t- vml (IE),\r\n\t\t\t//\t\t- svg (FF, Chrome, Safari, Opera),\r\n\t\t\t//\t\t- silverlight (IE, Chrome, Safari, Opera),\r\n\t\t\t//\t\t- svgWeb(FF, Chrome, Safari, Opera, IE).\r\n\t\t\t//\r\n\t\t\t//\t\tBrowsers [browser version that was tested]:\r\n\t\t\t//\r\n\t\t\t//\t\t- IE [6,7,8], FF [3.6],\r\n\t\t\t//\t\t- Chrome (latest for March 2011),\r\n\t\t\t//\t\t- Safari [5.0.3],\r\n\t\t\t//\t\t- Opera [11.01].\r\n\r\n\t\t\tif(textDir && text && text.length > 1){\r\n\t\t\t\tvar sourceDir = \"ltr\", targetDir = textDir;\r\n\t\r\n\t\t\t\tif(targetDir == \"auto\"){\r\n\t\t\t\t\t//is auto by default\r\n\t\t\t\t\tif(g.isVml){\r\n\t\t\t\t\t\treturn text;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttargetDir = bidiEngine.checkContextual(text);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif(g.isVml){\r\n\t\t\t\t\tsourceDir = bidiEngine.checkContextual(text);\r\n\t\t\t\t\tif(targetDir != sourceDir){\r\n\t\t\t\t\t\tif(targetDir == \"rtl\"){\r\n\t\t\t\t\t\t\treturn !bidiEngine.hasBidiChar(text) ? bidiEngine.bidiTransform(text,\"IRNNN\",\"ILNNN\") : bidi_const.RLM + bidi_const.RLM + text;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\treturn bidi_const.LRM + text;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn text;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif(g.isSvgWeb){\r\n\t\t\t\t\tif(targetDir == \"rtl\"){\r\n\t\t\t\t\t\treturn bidiEngine.bidiTransform(text,\"IRNNN\",\"ILNNN\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn text;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif(g.isSilverlight){\r\n\t\t\t\t\treturn (targetDir == \"rtl\") ? bidiEngine.bidiTransform(text,\"IRNNN\",\"VLYNN\") : bidiEngine.bidiTransform(text,\"ILNNN\",\"VLYNN\");\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif(g.isCanvas){\r\n\t\t\t\t\treturn (targetDir == \"rtl\") ? bidi_const.RLE + text + bidi_const.PDF : bidi_const.LRE + text + bidi_const.PDF;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif(g.isSvg){\r\n\t\t\t\t\tif(has(\"ff\") < 4){\r\n\t\t\t\t\t\treturn (targetDir == \"rtl\") ? bidiEngine.bidiTransform(text,\"IRYNN\",\"VLNNN\") : bidiEngine.bidiTransform(text,\"ILYNN\",\"VLNNN\");\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\treturn bidi_const.LRM + (targetDir == \"rtl\" ? bidi_const.RLE : bidi_const.LRE) + text + bidi_const.PDF;\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t}\t\t\t\t\t\r\n\t\t\t}\r\n\t\t\treturn text;\r\n\t\t},\t\r\n\r\n\t\tbidiPreprocess: function(newShape){     \r\n\t\t\treturn newShape;\r\n\t\t}\r\n\t});\r\n\r\n\tlang.extend(g.TextPath, {\r\n\t\t// textDir: String\r\n\t\t//\t\tUsed for displaying bidi scripts in right layout.\r\n\t\t//\t\tDefines the base direction of text that displayed, can have 3 values:\r\n\t\t//\r\n\t\t//\t\t1. \"ltr\" - base direction is left to right.\r\n\t\t//\t\t2. \"rtl\" - base direction is right to left.\r\n\t\t//\t\t3. \"auto\" - base direction is contextual (defined by first strong character).\r\n\t\ttextDir: \"\",\r\n\r\n\t\tformatText: function (/*String*/text, /*String*/textDir){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tApplies the right transform on text, according to renderer.\r\n\t\t\t// text:\r\n\t\t\t//\t\tthe string for manipulation, by default return value.\r\n\t\t\t// textDir:\r\n\t\t\t//\t\ttext direction direction.\r\n\t\t\t//\t\tCan be:\r\n\t\t\t//\r\n\t\t\t//\t\t1. \"ltr\" - for left to right layout.\r\n\t\t\t//\t\t2. \"rtl\" - for right to left layout\r\n\t\t\t//\t\t3. \"auto\" - for contextual layout: the first strong letter decides the direction.\r\n\t\t\t// description:\r\n\t\t\t//\t\tFinds the right transformation that should be applied on the text, according to renderer.\r\n\t\t\t//\t\tWas tested in:\r\n\t\t\t//\r\n\t\t\t//\t\tRenderers:\r\n\t\t\t//\t\tcanvas (FF, Chrome, Safari), vml (IE), svg (FF, Chrome, Safari, Opera), silverlight (IE8), svgWeb(FF, Chrome, Safari, Opera, IE).\r\n\t\t\t//\r\n\t\t\t//\t\tBrowsers:\r\n\t\t\t//\t\tIE [6,7,8], FF [3.6], Chrome (latest for February 2011), Safari [5.0.3], Opera [11.01].\r\n\r\n\t\t\tif(textDir && text && text.length > 1){\r\n\t\t\t\tvar sourceDir = \"ltr\", targetDir = textDir;\r\n\r\n\t\t\t\tif(targetDir == \"auto\"){\r\n\t\t\t\t\t//is auto by default\r\n\t\t\t\t\tif(g.isVml){\r\n\t\t\t\t\t\treturn text;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttargetDir = bidiEngine.checkContextual(text);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(g.isVml){\r\n\t\t\t\t\tsourceDir = bidiEngine.checkContextual(text);\r\n\t\t\t\t\tif(targetDir != sourceDir){\r\n\t\t\t\t\t\tif(targetDir == \"rtl\"){\r\n\t\t\t\t\t\t\treturn !bidiEngine.hasBidiChar(text) ? bidiEngine.bidiTransform(text,\"IRNNN\",\"ILNNN\") : bidi_const.RLM + bidi_const.RLM + text;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\treturn bidi_const.LRM + text;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn text;\r\n\t\t\t\t}\r\n\t\t\t\tif(g.isSvgWeb){\r\n\t\t\t\t\tif(targetDir == \"rtl\"){\r\n\t\t\t\t\t\treturn bidiEngine.bidiTransform(text,\"IRNNN\",\"ILNNN\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn text;\r\n\t\t\t\t}\r\n\t\t\t\t//unlike the g.Text that is rendered in logical layout for Bidi scripts.\r\n\t\t\t\t//for g.TextPath in svg always visual -> bidi script is unreadable (except Opera and FF start from version 4)\r\n\t\t\t\tif(g.isSvg){\r\n\t\t\t\t\tif(has(\"opera\") || has(\"ff\") >= 4){\r\n\t\t\t\t\t\ttext = bidi_const.LRM + (targetDir == \"rtl\"? bidi_const.RLE : bidi_const.LRE) + text + bidi_const.PDF;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\ttext = (targetDir == \"rtl\") ? bidiEngine.bidiTransform(text,\"IRYNN\",\"VLNNN\") : bidiEngine.bidiTransform(text,\"ILYNN\",\"VLNNN\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\t\t\t\r\n\t\t\t}\t\r\n\t\t\treturn text;\r\n\t\t},\r\n\t\tbidiPreprocess: function(newText){\r\n\t\t\tif(newText && (typeof newText == \"string\")){\r\n\t\t\t\tthis.origText = newText;\r\n\t\t\t\tnewText = this.formatText(newText,this.textDir);\r\n\t\t\t}\r\n\t\t\treturn newText;\r\n\t\t}\r\n\t});\t\r\n\t\t\r\n\tvar extendMethod = function(shape, method, before, after){\r\n\t\t// summary:\r\n\t\t//\t\tSome helper function. Used for extending methods of shape.\r\n\t\t// shape: Object\r\n\t\t//\t\tThe shape we overriding it's method.\r\n\t\t// method: String\r\n\t\t//\t\tThe method that is extended, the original method is called before or after\r\n\t\t//\t\tfunctions that passed to extendMethod.\r\n\t\t// before: function\r\n\t\t//\t\tIf defined this function will be executed before the original method.\r\n\t\t// after: function\r\n\t\t//\t\tIf defined this function will be executed after the original method.\r\n\t\tvar old = shape.prototype[method];\r\n\t\tshape.prototype[method] = \r\n\t\t\tfunction(){\r\n\t\t\t\tvar rBefore;\r\n\t\t\t\tif (before){\r\n\t\t\t\t\trBefore = before.apply(this, arguments);\r\n\t\t\t\t}\r\n\t\t\t\tvar r = old.call(this, rBefore);\r\n\t\t\t\tif (after){\r\n\t\t\t\t\tr = after.call(this, r, arguments);\r\n\t\t\t\t}\r\n\t\t\t\treturn r;\r\n\t\t\t};\r\n\t};\r\n\r\n\tvar bidiPreprocess = function(newText){\r\n\t\tif (newText){  \r\n\t\t\tif (newText.textDir){\r\n\t\t\t\tnewText.textDir = validateTextDir(newText.textDir);\r\n\t\t\t}\r\n\t\t\tif (newText.text && (newText.text instanceof Array)){\r\n\t\t\t\tnewText.text = newText.text.join(\",\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(newText && (newText.text != undefined || newText.textDir) && (this.textDir != newText.textDir || newText.text != this.origText)){\r\n\t\t\t// store the original text. \r\n\t\t\tthis.origText = (newText.text != undefined) ? newText.text : this.origText;\r\n\t\t\tif(newText.textDir){\r\n\t\t\t\tthis.textDir = newText.textDir;\r\n\t\t\t}\r\n\t\t\tnewText.text = this.formatText(this.origText,this.textDir);\r\n\t\t}\r\n\t\treturn this.bidiPreprocess(newText);\r\n\r\n\t};\r\n\r\n\t// Instead of adding bidiPreprocess to all renders one by one\r\n\t// use the extendMethod, at first there's a need for bidi transformation \r\n\t// on text then call to original setShape.\r\n\textendMethod(g.Text,\"setShape\", bidiPreprocess, null);\r\n\textendMethod(g.TextPath,\"setText\", bidiPreprocess, null);\r\n\t\r\n\tvar restoreText = function(origObj){\r\n\t\tvar obj = lang.clone(origObj);\r\n\t\tif (obj && this.origText){\r\n\t\t\tobj.text = this.origText;\r\n\t\t}\r\n\t\treturn obj;\r\n\t};\r\n\r\n\t// Instead of adding restoreText to all renders one by one\r\n\t// use the extendMethod, at first get the shape by calling the original getShape,\r\n\t// than resrore original text (without the text transformations).\r\n\textendMethod(g.Text, \"getShape\", null, restoreText);\r\n\textendMethod(g.TextPath, \"getText\", null, restoreText);\r\n\r\n\tvar groupTextDir = function(group, args){\r\n\t\tvar textDir;\r\n\t\tif (args && args[0]){\r\n\t\t\ttextDir = validateTextDir(args[0]);\r\n\t\t}\r\n\t\tgroup.setTextDir(textDir ? textDir : this.textDir);\r\n\t\treturn group;\t// dojox/gfx.Group\r\n\t};\r\n\r\n\t// In creation of Group there's a need to update it's textDir,\r\n\t// so instead of doing it in renders one by one (vml vs others)\r\n\t// use the extendMethod, at first the original createGroup is applied, the\r\n\t// groupTextDir which is setts Group's textDir as it's father's or if was defined\r\n\t// by user by this value.\r\n\textendMethod(g.Surface, \"createGroup\", null, groupTextDir);\r\n\textendMethod(g.Group, \"createGroup\", null, groupTextDir);\r\n\r\n\tvar textDirPreprocess =  function(text){\r\n\t\t// inherit from surface / group  if textDir is defined there\r\n\t\tif(text){\r\n\t\t\tvar textDir = text.textDir ? validateTextDir(text.textDir) : this.textDir;\r\n\t\t\tif(textDir){\r\n\t\t\t\ttext.textDir = textDir;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn text;\r\n\t};\r\n\r\n\t// In creation there's a need to some preprocess,\r\n\t// so instead of doing it in renders one by one (vml vs others)\r\n\t// use the extendMethod, at first the textDirPreprocess function handles the input\r\n\t// then the original createXXXXXX is applied.\r\n\textendMethod(g.Surface,\"createText\", textDirPreprocess, null);\r\n\textendMethod(g.Surface,\"createTextPath\", textDirPreprocess, null);\r\n\textendMethod(g.Group,\"createText\", textDirPreprocess, null);\r\n\textendMethod(g.Group,\"createTextPath\", textDirPreprocess, null);\r\n\r\n\t/*=====\r\n\t// don't mask definition of original createSurface() function from doc parser\r\n\tg = {};\r\n\t=====*/\r\n\r\n\tg.createSurface = function(parentNode, width, height, textDir) {\r\n\t\tvar s = g[g.renderer].createSurface(parentNode, width, height);\r\n\t\tvar tDir = validateTextDir(textDir);\r\n\t\t\r\n\t\tif(g.isSvgWeb){\r\n\t\t\ts.textDir = tDir ? tDir : html.style(dom.byId(parentNode),\"direction\");\r\n\t\t\treturn s;\r\n\t\t}\r\n\t\t// if textDir was defined use it, else get default value.\r\n\t\t//s.textDir = tDir ? tDir : html.style(s.rawNode,\"direction\");\r\n\t\tif(g.isVml || g.isSvg || g.isCanvas){\r\n\t\t\ts.textDir = tDir ? tDir : html.style(s.rawNode,\"direction\");\r\n\t\t}\r\n\t\tif(g.isSilverlight){\r\n\t\t\t// allow this once rawNode will be able for the silverlight\r\n\t\t\t//s.textDir = tDir ? tDir : dojo.style(s.rawNode,\"direction\");\r\n\t\t\ts.textDir = tDir ? tDir : html.style(s._nodes[1],\"direction\");\r\n\t\t}\r\n\t\t\r\n\t\treturn s;\r\n\t};\r\n\t/*===== g = origG; =====*/\r\n\r\n\t// some helper functions\r\n\t\r\n\tfunction setTextDir(/*Object*/ obj, /*String*/ newTextDir){\r\n\t\tvar tDir = validateTextDir(newTextDir);\r\n\t\tif (tDir){\r\n\t\t\tg.utils.forEach(obj,function(e){\r\n\t\t\t\tif(e instanceof g.Surface || e instanceof g.Group){\r\n\t\t\t\t\te.textDir = tDir;\r\n\t\t\t\t}\t\t\r\n\t\t\t\tif(e instanceof g.Text){\r\n\t\t\t\t\te.setShape({textDir: tDir});\r\n\t\t\t\t}\r\n\t\t\t\tif(e instanceof g.TextPath){\r\n\t\t\t\t\te.setText({textDir: tDir})\r\n\t\t\t\t}\r\n\t\t\t}, obj);\r\n\t\t}\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tfunction validateTextDir(textDir){\r\n\t\tvar validValues = [\"ltr\",\"rtl\",\"auto\"]; \r\n\t\tif (textDir){\r\n\t\t\ttextDir = textDir.toLowerCase();\r\n\t\t\tif (arr.indexOf(validValues, textDir) < 0){\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn textDir;\r\n\t}\r\n\r\n\treturn g; // return gfx api augmented with bidi support\t\r\n});\r\n\r\n"]}