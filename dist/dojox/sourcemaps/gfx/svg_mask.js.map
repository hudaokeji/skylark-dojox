{"version":3,"sources":["gfx/svg_mask.js"],"names":["define","declare","lang","gfx","gfxShape","svg","extend","Shape","mask","setMask","rawNode","this","setAttribute","shape","id","removeAttribute","getMask","Mask","constructor","Container","_init","call","defaultMask","setRawNode","setShape","mixin","_base","_getUniqueId","inherited","arguments","nodeType","x","y","width","height","maskUnits","maskContentUnits","Creator","Surface","surfaceAdd","prototype","add","surfaceRemove","remove","createMask","createObject","defNode","appendChild","parent","apply","silently","parentNode","removeChild"],"mappings":";;;;;;;AAAAA,QACC,qBACA,kBACA,UACA,UACA,SACE,SAASC,EAASC,EAAMC,EAAKC,EAAUC,GAUzCH,EAAKI,OAAOD,EAAIE,OACfC,KAAM,KACNC,QAAS,SAA+BD,GAMvC,IAAIE,EAAUC,KAAKD,QASnB,OARGF,GACFE,EAAQE,aAAa,OAAQ,QAAQJ,EAAKK,MAAMC,GAAG,KACnDH,KAAKH,KAAOA,IAEZE,EAAQK,gBAAgB,QACxBJ,KAAKH,KAAO,MAGNG,MAERK,QAAS,WAGR,OAAOL,KAAKH,QAId,IAAIS,EAAOZ,EAAIY,KAAOhB,EAAQ,qBAAsBI,EAAIE,OAOvDW,YAAa,WACZd,EAASe,UAAUC,MAAMC,KAAKV,MAC9BA,KAAKE,MAAQI,EAAKK,aAGnBC,WAAY,SAASb,GACpBC,KAAKD,QAAUA,GAGhBc,SAAU,SAASX,GACdA,EAAMC,KACTD,EAAQX,EAAKuB,OAAQX,GAAIX,EAAIuB,MAAMC,gBAAkBd,IAEtDF,KAAKiB,UAAUC,WAAYhB,OAG7BI,EAAKa,SAAW,OAChBb,EAAKK,aAMJR,GAAI,KAIJiB,EAAG,EAIHC,EAAG,EAKHC,MAAO,EAKPC,OAAQ,EAMRC,UAAW,oBAKXC,iBAAkB,kBAGnBlC,EAAKI,OAAOW,EAAMZ,EAAIc,WACtBjB,EAAKI,OAAOW,EAAMb,EAASiC,SAC3BnC,EAAKI,OAAOW,EAAMZ,EAAIgC,SAEtB,IAAIC,EAAUjC,EAAIiC,QACjBC,EAAaD,EAAQE,UAAUC,IAC/BC,EAAgBJ,EAAQE,UAAUG,OACnCzC,EAAKI,OAAOgC,GACXM,WAAY,SAASpC,GA0BpB,OAAOG,KAAKkC,aAAa5B,EAAMT,IAEhCiC,IAAK,SAAS5B,GAOb,OANGA,aAAiBI,GACnBN,KAAKmC,QAAQC,YAAYlC,EAAMH,SAC/BG,EAAMmC,OAASrC,MAEf4B,EAAWU,MAAMtC,KAAMkB,WAEjBlB,MAERgC,OAAQ,SAAS9B,EAAOqC,GAOvB,OANGrC,aAAiBI,GAAQN,KAAKmC,SAAWjC,EAAMH,QAAQyC,YACzDxC,KAAKmC,QAAQM,YAAYvC,EAAMH,SAC/BG,EAAMmC,OAAS,MAEfN,EAAcO,MAAMtC,KAAMkB,WAEpBlB","file":"../../gfx/svg_mask.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/lang\",\r\n\t\"./_base\",\r\n\t\"./shape\",\r\n\t\"./svg\"\r\n], function(declare, lang, gfx, gfxShape, svg){\r\n\r\n\t/*=====\r\n\treturn {\r\n\t\t// summary:\r\n\t\t//\t\tAn svg-specific module that adds SVG mask support to the gfx api.\r\n\t\t//\t\tYou may require this module when your application specifically targets the SVG renderer.\r\n\t}\r\n\t=====*/\r\n\r\n\tlang.extend(svg.Shape, {\r\n\t\tmask: null,\r\n\t\tsetMask: function(/*dojox.gfx.svg.Mask*/mask){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets a mask object (SVG)\r\n\t\t\t// mask:\r\n\t\t\t//\t\tThe mask object\r\n\r\n\t\t\tvar rawNode = this.rawNode;\r\n\t\t\tif(mask){\r\n\t\t\t\trawNode.setAttribute(\"mask\", \"url(#\"+mask.shape.id+\")\");\r\n\t\t\t\tthis.mask = mask;\r\n\t\t\t}else{\r\n\t\t\t\trawNode.removeAttribute(\"mask\");\r\n\t\t\t\tthis.mask = null;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tgetMask: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the current mask object or null\r\n\t\t\treturn this.mask;\r\n\t\t}\r\n\t});\r\n\r\n\tvar Mask = svg.Mask = declare(\"dojox.gfx.svg.Mask\", svg.Shape, {\r\n\t\t// summary:\r\n\t\t//\t\tAn SVG mask object\r\n\t\t// description:\r\n\t\t//\t\tThis object represents an SVG mask. Much like `dojox/gfx.Group`,\r\n\t\t//\t\ta Mask's geometry is defined by its children.\r\n\r\n\t\tconstructor: function(){\r\n\t\t\tgfxShape.Container._init.call(this);\r\n\t\t\tthis.shape = Mask.defaultMask;\r\n\t\t},\r\n\r\n\t\tsetRawNode: function(rawNode){\r\n\t\t\tthis.rawNode = rawNode;\r\n\t\t},\r\n\r\n\t\tsetShape: function(shape){\r\n\t\t\tif(!shape.id){\r\n\t\t\t\tshape = lang.mixin({ id: gfx._base._getUniqueId() }, shape);\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments, [shape]);\r\n\t\t}\r\n\t});\r\n\tMask.nodeType = 'mask';\r\n\tMask.defaultMask = {\r\n\t\t// summary:\r\n\t\t//\t\tDefines the default Mask prototype.\r\n\r\n\t\t// id: String\r\n\t\t//\t\tThe mask identifier. If none is provided, a generated id will be used.\r\n\t\tid: null,\r\n\r\n\t\t// x: Number\r\n\t\t//\t\tThe x coordinate of the top-left corner of the mask\r\n\t\tx: 0,\r\n\r\n\t\t// y: Number\r\n\t\t//\t\tThe y coordinate of the top-left corner of the mask\r\n\t\ty: 0,\r\n\r\n\t\t// width: Number\r\n\t\t//\t\tThe width of the mask. Defaults to 1 which is 100% of the bounding\r\n\t\t//\t\tbox width of the object applying the mask.\r\n\t\twidth: 1,\r\n\r\n\t\t// height: Number\r\n\t\t//\t\tThe height of the mask. Defaults to 1 which is 100% of the bounding\r\n\t\t//\t\tbox height of the object applying the mask.\r\n\t\theight: 1,\r\n\r\n\t\t// maskUnits: String\r\n\t\t//\t\tThe coordinate system of the mask's `x`, `y`, `width`, and `height` properties.\r\n\t\t//\t\tThe default is \"objectBoundingBox\" where coordinates are fractions of the bounding box\r\n\t\t//\t\tof the shape referencing the mask.\r\n\t\tmaskUnits: \"objectBoundingBox\",\r\n\r\n\t\t// maskContentUnits: String\r\n\t\t//\t\tThe coordinate system for the mask's children. The default is \"userSpaceOnUse\"\r\n\t\t//\t\t(i.e., the coordinate system of the shape referencing the mask).\r\n\t\tmaskContentUnits: \"userSpaceOnUse\"\r\n\t};\r\n\r\n\tlang.extend(Mask, svg.Container);\r\n\tlang.extend(Mask, gfxShape.Creator);\r\n\tlang.extend(Mask, svg.Creator);\r\n\r\n\tvar Surface = svg.Surface,\r\n\t\tsurfaceAdd = Surface.prototype.add,\r\n\t\tsurfaceRemove = Surface.prototype.remove;\r\n\tlang.extend(Surface, {\r\n\t\tcreateMask: function(mask){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates a mask object\r\n\t\t\t// mask: Object\r\n\t\t\t//\t\tA mask object (see dojox/gfx.svg.Mask.defaultMask)\r\n\t\t\t//\r\n\t\t\t// example:\r\n\t\t\t//\t\tDefine a mask where content coordinates are fractions of the bounding box\r\n\t\t\t//\t\tof the object using the mask:\r\n\t\t\t//\t|\tvar mask = surface.createMask({ maskContentUnits: \"objectBoundingBox\" });\r\n\t\t\t//\t|\tmask.createRect({ width: 1, height: 1 });\r\n\t\t\t//\t|\tmask.setFill({\r\n\t\t\t//\t|\t\ttype: 'linear',\r\n\t\t\t//\t|\t\tx2: 1,\r\n\t\t\t//\t|\t\ty2: 0,\r\n\t\t\t//\t|\t\tcolors: [\r\n\t\t\t//\t|\t\t\t{ offset: 0, color: '#111' },\r\n\t\t\t//\t|\t\t\t{ offset: 1, color: '#ddd' }\r\n\t\t\t//\t|\t\t]\r\n\t\t\t//\t|\t});\r\n\t\t\t//\r\n\t\t\t// example:\r\n\t\t\t//\t\tA mask with dimensions in user coordinates of element referring to mask\r\n\t\t\t//\t|\tvar mask = {\r\n\t\t\t//\t|\t\tmaskUnits: 'userSpaceOnUse'\r\n\t\t\t//\t|\t};\r\n\t\t\treturn this.createObject(Mask, mask);\t// dojox.gfx.svg.Mask\r\n\t\t},\r\n\t\tadd: function(shape){\r\n\t\t\tif(shape instanceof Mask){\r\n\t\t\t\tthis.defNode.appendChild(shape.rawNode);\r\n\t\t\t\tshape.parent = this;\r\n\t\t\t}else{\r\n\t\t\t\tsurfaceAdd.apply(this, arguments);\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tremove: function(shape, silently){\r\n\t\t\tif(shape instanceof Mask && this.defNode == shape.rawNode.parentNode){\r\n\t\t\t\tthis.defNode.removeChild(shape.rawNode);\r\n\t\t\t\tshape.parent = null;\r\n\t\t\t}else{\r\n\t\t\t\tsurfaceRemove.apply(this, arguments);\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\t});\r\n});\r\n"]}