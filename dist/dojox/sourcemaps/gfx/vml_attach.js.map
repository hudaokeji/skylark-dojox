{"version":3,"sources":["gfx/vml_attach.js"],"names":["define","kernel","lang","g","m","pathLib","Color","vml","experimental","attachNode","node","s","tagName","toLowerCase","Rect","nodeType","attachRect","Ellipse","style","width","height","Circle","attachCircle","attachEllipse","Path","getAttribute","Line","attachLine","Polyline","attachPolyline","attachPath","Text","attachText","attachFont","attachTextTransform","TextPath","Image","attachImage","attachImageTransform","attachFill","attachStroke","attachTransform","attachSurface","Surface","clipNode","r","rawNode","firstChild","b","bgNode","object","stops","i","t","fillStyle","fo","fill","on","type","clone","defaultLinearGradient","rad","_degToRad","angle","x2","Math","cos","y2","sin","colors","value","split","length","match","push","offset","_parseFloat","color","defaultRadialGradient","w","parseFloat","h","cx","isNaN","focusposition","x","cy","y","defaultPattern","pt2px","size","origin","src","fillcolor","a","opacity","stroked","strokeStyle","defaultStroke","rs","stroke","strokecolor","normalizedLength","strokeweight","cap","this","_translate","_capMapReversed","endcap","join","joinstyle","miterlimit","dashstyle","skew","sm","matrix","so","normalize","xx","xtox","xy","ytox","yx","xtoy","yy","ytoy","dx","dy","arcsize","outerHTML","indexOf","shape","makeParameters","defaultRect","parseInt","left","top","min","rx","ry","defaultEllipse","defaultCircle","defaultLine","p","path","v","pathVmlRegExp","x1","y1","defaultPolyline","points","defaultImage","mm","filters","M11","M12","M21","M22","Dx","Dy","defaultText","c","childNodes","text","string","align","decoration","rotated","_bool","kerning","fontStyle","defaultFont","fontstyle","variant","fontvariant","weight","fontweight","fontsize","family","fontfamily","fs","multiply","defaultPath","skip","map","_pathVmlToSvgMap","n","l","splice"],"mappings":"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","file":"../../gfx/vml_attach.js","sourcesContent":["define([\"dojo/_base/kernel\", \"dojo/_base/lang\", \"./_base\", \"./matrix\", \"./path\", \"dojo/_base/Color\", \"./vml\"],\r\n  function (kernel, lang, g, m, pathLib, Color, vml){\r\n\r\n\tkernel.experimental(\"dojox.gfx.vml_attach\");\r\n\t\r\n\tvml.attachNode = function(node){\r\n\t\t// summary:\r\n\t\t//\t\tcreates a shape from a Node\r\n\t\t// node: Node\r\n\t\t//\t\ta VML node\r\n\t\tif(!node) return null;\r\n\t\tvar s = null;\r\n\t\tswitch(node.tagName.toLowerCase()){\r\n\t\t\tcase vml.Rect.nodeType:\r\n\t\t\t\ts = new vml.Rect(node);\r\n\t\t\t\tattachRect(s);\r\n\t\t\t\tbreak;\r\n\t\t\tcase vml.Ellipse.nodeType:\r\n\t\t\t\tif(node.style.width == node.style.height){\r\n\t\t\t\t\ts = new vml.Circle(node);\r\n\t\t\t\t\tattachCircle(s);\r\n\t\t\t\t}else{\r\n\t\t\t\t\ts = new vml.Ellipse(node);\r\n\t\t\t\t\tattachEllipse(s);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase vml.Path.nodeType:\r\n\t\t\t\tswitch(node.getAttribute(\"dojoGfxType\")){\r\n\t\t\t\t\tcase \"line\":\r\n\t\t\t\t\t\ts = new vml.Line(node);\r\n\t\t\t\t\t\tattachLine(s);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"polyline\":\r\n\t\t\t\t\t\ts = new vml.Polyline(node);\r\n\t\t\t\t\t\tattachPolyline(s);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"path\":\r\n\t\t\t\t\t\ts = new vml.Path(node);\r\n\t\t\t\t\t\tattachPath(s);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"text\":\r\n\t\t\t\t\t\ts = new vml.Text(node);\r\n\t\t\t\t\t\tattachText(s);\r\n\t\t\t\t\t\tattachFont(s);\r\n\t\t\t\t\t\tattachTextTransform(s);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"textpath\":\r\n\t\t\t\t\t\ts = new vml.TextPath(node);\r\n\t\t\t\t\t\tattachPath(s);\r\n\t\t\t\t\t\tattachText(s);\r\n\t\t\t\t\t\tattachFont(s);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase vml.Image.nodeType:\r\n\t\t\t\tswitch(node.getAttribute(\"dojoGfxType\")){\r\n\t\t\t\t\tcase \"image\":\r\n\t\t\t\t\t\ts = new vml.Image(node);\r\n\t\t\t\t\t\tattachImage(s);\r\n\t\t\t\t\t\tattachImageTransform(s);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\t//console.debug(\"FATAL ERROR! tagName = \" + node.tagName);\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\t\tif(!(s instanceof vml.Image)){\r\n\t\t\tattachFill(s);\r\n\t\t\tattachStroke(s);\r\n\t\t\tif(!(s instanceof vml.Text)){\r\n\t\t\t\tattachTransform(s);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn s;\t// dojox/gfx/shape.Shape\r\n\t};\r\n\r\n\tvml.attachSurface = function(node){\r\n\t\t// summary:\r\n\t\t//\t\tcreates a surface from a Node\r\n\t\t// node: Node\r\n\t\t//\t\ta VML node\r\n\t\tvar s = new vml.Surface();\r\n\t\ts.clipNode = node;\r\n\t\tvar r = s.rawNode = node.firstChild;\r\n\t\tvar b = r.firstChild;\r\n\t\tif(!b || b.tagName != \"rect\"){\r\n\t\t\treturn null;\t// dojox/gfx.Surface\r\n\t\t}\r\n\t\ts.bgNode = r;\r\n\t\treturn s;\t// dojox/gfx.Surface\r\n\t};\r\n\r\n\tvar attachFill = function(object){\r\n\t\t// summary:\r\n\t\t//\t\tdeduces a fill style from a node.\r\n\t\t// object: dojox/gfx/shape.Shape\r\n\t\t//\t\ta VML shape\r\n\t\tvar fillStyle = null, r = object.rawNode, fo = r.fill, stops, i, t;\r\n\t\tif(fo.on && fo.type == \"gradient\"){\r\n\t\t\tfillStyle = lang.clone(g.defaultLinearGradient),\r\n\t\t\t\trad = m._degToRad(fo.angle);\r\n\t\t\tfillStyle.x2 = Math.cos(rad);\r\n\t\t\tfillStyle.y2 = Math.sin(rad);\r\n\t\t\tfillStyle.colors = [];\r\n\t\t\tstops = fo.colors.value.split(\";\");\r\n\t\t\tfor(i = 0; i < stops.length; ++i){\r\n\t\t\t\t t = stops[i].match(/\\S+/g);\r\n\t\t\t\tif(!t || t.length != 2){ continue; }\r\n\t\t\t\tfillStyle.colors.push({offset: vml._parseFloat(t[0]), color: new Color(t[1])});\r\n\t\t\t}\r\n\t\t}else if(fo.on && fo.type == \"gradientradial\"){\r\n\t\t\tfillStyle = lang.clone(g.defaultRadialGradient),\r\n\t\t\t\tw = parseFloat(r.style.width), h = parseFloat(r.style.height);\r\n\t\t\tfillStyle.cx = isNaN(w) ? 0 : fo.focusposition.x * w;\r\n\t\t\tfillStyle.cy = isNaN(h) ? 0 : fo.focusposition.y * h;\r\n\t\t\tfillStyle.r  = isNaN(w) ? 1 : w / 2;\r\n\t\t\tfillStyle.colors = [];\r\n\t\t\tstops = fo.colors.value.split(\";\");\r\n\t\t\tfor(i = stops.length - 1; i >= 0; --i){\r\n\t\t\t\tt = stops[i].match(/\\S+/g);\r\n\t\t\t\tif(!t || t.length != 2){ continue; }\r\n\t\t\t\tfillStyle.colors.push({offset: vml._parseFloat(t[0]), color: new Color(t[1])});\r\n\t\t\t}\r\n\t\t}else if(fo.on && fo.type == \"tile\"){\r\n\t\t\tfillStyle = lang.clone(g.defaultPattern);\r\n\t\t\tfillStyle.width  = g.pt2px(fo.size.x); // from pt\r\n\t\t\tfillStyle.height = g.pt2px(fo.size.y); // from pt\r\n\t\t\tfillStyle.x = fo.origin.x * fillStyle.width;\r\n\t\t\tfillStyle.y = fo.origin.y * fillStyle.height;\r\n\t\t\tfillStyle.src = fo.src;\r\n\t\t}else if(fo.on && r.fillcolor){\r\n\t\t\t// a color object !\r\n\t\t\tfillStyle = new Color(r.fillcolor+\"\");\r\n\t\t\tfillStyle.a = fo.opacity;\r\n\t\t}\r\n\t\tobject.fillStyle = fillStyle;\r\n\t};\r\n\r\n\tvar attachStroke = function(object) {\r\n\t\t// summary:\r\n\t\t//\t\tdeduces a stroke style from a node.\r\n\t\t// object: dojox/gfx/shape.Shape\r\n\t\t//\t\ta VML shape\r\n\t\tvar r = object.rawNode;\r\n\t\tif(!r.stroked){\r\n\t\t\tobject.strokeStyle = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar strokeStyle = object.strokeStyle = lang.clone(g.defaultStroke),\r\n\t\t\trs = r.stroke;\r\n\t\tstrokeStyle.color = new Color(r.strokecolor.value);\r\n\t\tstrokeStyle.width = g.normalizedLength(r.strokeweight+\"\");\r\n\t\tstrokeStyle.color.a = rs.opacity;\r\n\t\tstrokeStyle.cap = this._translate(this._capMapReversed, rs.endcap);\r\n\t\tstrokeStyle.join = rs.joinstyle == \"miter\" ? rs.miterlimit : rs.joinstyle;\r\n\t\tstrokeStyle.style = rs.dashstyle;\r\n\t};\r\n\r\n\tvar attachTransform = function(object) {\r\n\t\t// summary:\r\n\t\t//\t\tdeduces a transformation matrix from a node.\r\n\t\t// object: dojox/gfx/shape.Shape\r\n\t\t//\t\ta VML shape\r\n\t\tvar s = object.rawNode.skew, sm = s.matrix, so = s.offset;\r\n\t\tobject.matrix = m.normalize({\r\n\t\t\txx: sm.xtox,\r\n\t\t\txy: sm.ytox,\r\n\t\t\tyx: sm.xtoy,\r\n\t\t\tyy: sm.ytoy,\r\n\t\t\tdx: g.pt2px(so.x),\r\n\t\t\tdy: g.pt2px(so.y)\r\n\t\t});\r\n\t};\r\n\r\n\tvar attachGroup = function(object){\r\n\t\t// summary:\r\n\t\t//\t\treconstructs all group shape parameters from a node (VML).\r\n\t\t// object: dojox/gfx/shape.Shape\r\n\t\t//\t\ta VML shape\r\n\t\t\r\n\t\t// attach the background\r\n\t\tobject.bgNode = object.rawNode.firstChild;\t// TODO: check it first\r\n\t};\r\n\r\n\tvar attachRect = function(object){\r\n\t\t// summary:\r\n\t\t//\t\tbuilds a rectangle shape from a node.\r\n\t\t// object: dojox/gfx/shape.Shape\r\n\t\t//\t\ta VML shape\r\n\t\t\r\n\t\t// a workaround for the VML's arcsize bug: cannot read arcsize of an instantiated node\r\n\t\tvar r = object.rawNode, arcsize = r.outerHTML.match(/arcsize = \\\"(\\d*\\.?\\d+[%f]?)\\\"/)[1],\r\n\t\t\tstyle = r.style, width = parseFloat(style.width), height = parseFloat(style.height);\r\n\t\tarcsize = (arcsize.indexOf(\"%\") >= 0) ? parseFloat(arcsize) / 100 : vml._parseFloat(arcsize);\r\n\t\t// make an object\r\n\t\tobject.shape = g.makeParameters(g.defaultRect, {\r\n\t\t\tx: parseInt(style.left),\r\n\t\t\ty: parseInt(style.top),\r\n\t\t\twidth:  width,\r\n\t\t\theight: height,\r\n\t\t\tr: Math.min(width, height) * arcsize\r\n\t\t});\r\n\t};\r\n\r\n\tvar attachEllipse = function(object){\r\n\t\t// summary:\r\n\t\t//\t\tbuilds an ellipse shape from a node.\r\n\t\t// object: dojox/gfx/shape.Shape\r\n\t\t//\t\ta VML shape\r\n\t\tvar style = object.rawNode.style,\r\n\t\t\trx = parseInt(style.width ) / 2,\r\n\t\t\try = parseInt(style.height) / 2;\r\n\t\tobject.shape = g.makeParameters(g.defaultEllipse, {\r\n\t\t\tcx: parseInt(style.left) + rx,\r\n\t\t\tcy: parseInt(style.top ) + ry,\r\n\t\t\trx: rx,\r\n\t\t\try: ry\r\n\t\t});\r\n\t};\r\n\r\n\tvar attachCircle = function(object){\r\n\t\t// summary:\r\n\t\t//\t\tbuilds a circle shape from a node.\r\n\t\t// object: dojox/gfx/shape.Shape\r\n\t\t//\t\ta VML shape\r\n\t\tvar style = object.rawNode.style, r = parseInt(style.width) / 2;\r\n\t\tobject.shape = g.makeParameters(g.defaultCircle, {\r\n\t\t\tcx: parseInt(style.left) + r,\r\n\t\t\tcy: parseInt(style.top)  + r,\r\n\t\t\tr:  r\r\n\t\t});\r\n\t};\r\n\r\n\tvar attachLine = function(object){\r\n\t\t// summary:\r\n\t\t//\t\tbuilds a line shape from a node.\r\n\t\t// object: dojox/gfx/shape.Shape\r\n\t\t//\t\ta VML shape\r\n\t\tvar shape = object.shape = lang.clone(g.defaultLine),\r\n\t\t\tp = object.rawNode.path.v.match(g.pathVmlRegExp);\r\n\t\tdo{\r\n\t\t\tif(p.length < 7 || p[0] != \"m\" || p[3] != \"l\" || p[6] != \"e\"){ break; }\r\n\t\t\tshape.x1 = parseInt(p[1]);\r\n\t\t\tshape.y1 = parseInt(p[2]);\r\n\t\t\tshape.x2 = parseInt(p[4]);\r\n\t\t\tshape.y2 = parseInt(p[5]);\r\n\t\t}while(false);\r\n\t};\r\n\r\n\tvar attachPolyline = function(object){\r\n\t\t// summary:\r\n\t\t//\t\tbuilds a polyline/polygon shape from a node.\r\n\t\t// object: dojox/gfx/shape.Shape\r\n\t\t//\t\ta VML shape\r\n\t\tvar shape = object.shape = lang.clone(g.defaultPolyline),\r\n\t\t\tp = object.rawNode.path.v.match(g.pathVmlRegExp);\r\n\t\tdo{\r\n\t\t\tif(p.length < 3 || p[0] != \"m\"){ break; }\r\n\t\t\tvar x = parseInt(p[0]), y = parseInt(p[1]);\r\n\t\t\tif(isNaN(x) || isNaN(y)){ break; }\r\n\t\t\tshape.points.push({x: x, y: y});\r\n\t\t\tif(p.length < 6 || p[3] != \"l\"){ break; }\r\n\t\t\tfor(var i = 4; i < p.length; i += 2){\r\n\t\t\t\tx = parseInt(p[i]);\r\n\t\t\t\ty = parseInt(p[i + 1]);\r\n\t\t\t\tif(isNaN(x) || isNaN(y)){ break; }\r\n\t\t\t\tshape.points.push({x: x, y: y});\r\n\t\t\t}\r\n\t\t}while(false);\r\n\t};\r\n\r\n\tvar attachImage = function(object){\r\n\t\t// summary:\r\n\t\t//\t\tbuilds an image shape from a node.\r\n\t\t// object: dojox/gfx/shape.Shape\r\n\t\t//\t\ta VML shape\r\n\t\tobject.shape = lang.clone(g.defaultImage);\r\n\t\tobject.shape.src = object.rawNode.firstChild.src;\r\n\t};\r\n\r\n\tvar attachImageTransform = function(object) {\r\n\t\t// summary:\r\n\t\t//\t\tdeduces a transformation matrix from a node.\r\n\t\t// object: dojox/gfx/shape.Shape\r\n\t\t//\t\ta VML shape\r\n\t\tvar mm = object.rawNode.filters[\"DXImageTransform.Microsoft.Matrix\"];\r\n\t\tobject.matrix = m.normalize({\r\n\t\t\txx: mm.M11,\r\n\t\t\txy: mm.M12,\r\n\t\t\tyx: mm.M21,\r\n\t\t\tyy: mm.M22,\r\n\t\t\tdx: mm.Dx,\r\n\t\t\tdy: mm.Dy\r\n\t\t});\r\n\t};\r\n\r\n\tvar attachText = function(object){\r\n\t\t// summary:\r\n\t\t//\t\tbuilds a text shape from a node.\r\n\t\t// object: dojox/gfx/shape.Shape\r\n\t\t//\t\ta VML shape\r\n\t\tvar shape = object.shape = lang.clone(g.defaultText),\r\n\t\t\tr = object.rawNode, p = r.path.v.match(g.pathVmlRegExp);\r\n\t\tdo{\r\n\t\t\tif(!p || p.length != 7){ break; }\r\n\t\t\tvar c = r.childNodes, i = 0;\r\n\t\t\tfor(; i < c.length && c[i].tagName != \"textpath\"; ++i);\r\n\t\t\tif(i >= c.length){ break; }\r\n\t\t\tvar s = c[i].style;\r\n\t\t\tshape.text = c[i].string;\r\n\t\t\tswitch(s[\"v-text-align\"]){\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\t\tshape.x = parseInt(p[1]);\r\n\t\t\t\t\tshape.align = \"start\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"center\":\r\n\t\t\t\t\tshape.x = (parseInt(p[1]) + parseInt(p[4])) / 2;\r\n\t\t\t\t\tshape.align = \"middle\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\tshape.x = parseInt(p[4]);\r\n\t\t\t\t\tshape.align = \"end\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tshape.y = parseInt(p[2]);\r\n\t\t\tshape.decoration = s[\"text-decoration\"];\r\n\t\t\tshape.rotated = s[\"v-rotate-letters\"].toLowerCase() in vml._bool;\r\n\t\t\tshape.kerning = s[\"v-text-kern\"].toLowerCase() in vml._bool;\r\n\t\t\treturn;\r\n\t\t}while(false);\r\n\t\tobject.shape = null;\r\n\t};\r\n\r\n\tvar attachFont = function(object){\r\n\t\t// summary:\r\n\t\t//\t\tdeduces a font style from a node.\r\n\t\t// object: dojox/gfx/shape.Shape\r\n\t\t//\t\ta VML shape\r\n\t\tvar fontStyle = object.fontStyle = lang.clone(g.defaultFont),\r\n\t\t\tc = object.rawNode.childNodes, i = 0;\r\n\t\tfor(; i < c.length && c[i].tagName == \"textpath\"; ++i);\r\n\t\tif(i >= c.length){\r\n\t\t\tobject.fontStyle = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar s = c[i].style;\r\n\t\tfontStyle.style = s.fontstyle;\r\n\t\tfontStyle.variant = s.fontvariant;\r\n\t\tfontStyle.weight = s.fontweight;\r\n\t\tfontStyle.size = s.fontsize;\r\n\t\tfontStyle.family = s.fontfamily;\r\n\t};\r\n\r\n\tvar attachTextTransform = function(object) {\r\n\t\t// summary:\r\n\t\t//\t\tdeduces a transformation matrix from a node.\r\n\t\t// object: dojox/gfx/shape.Shape\r\n\t\t//\t\ta VML shape\r\n\t\tattachTransform(object);\r\n\t\tvar matrix = object.matrix, fs = object.fontStyle;\r\n\t\t// see comments in _getRealMatrix()\r\n\t\tif(matrix && fs){\r\n\t\t\tobject.matrix = m.multiply(matrix, {dy: g.normalizedLength(fs.size) * 0.35});\r\n\t\t}\r\n\t};\r\n\r\n\tvar attachPath = function(object){\r\n\t\t// summary:\r\n\t\t//\t\tbuilds a path shape from a Node.\r\n\t\t// object: dojox/gfx/shape.Shape\r\n\t\t//\t\ta VML shape\r\n\t\tvar shape = object.shape = lang.clone(g.defaultPath),\r\n\t\t\tp = object.rawNode.path.v.match(g.pathVmlRegExp),\r\n\t\t\tt = [], skip = false, map = pathLib._pathVmlToSvgMap;\r\n\t\tfor(var i = 0; i < p.length; ++p){\r\n\t\t\tvar s = p[i];\r\n\t\t\tif(s in map) {\r\n\t\t\t\tskip = false;\r\n\t\t\t\tt.push(map[s]);\r\n\t\t\t} else if(!skip){\r\n\t\t\t\tvar n = parseInt(s);\r\n\t\t\t\tif(isNaN(n)){\r\n\t\t\t\t\tskip = true;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tt.push(n);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar l = t.length;\r\n\t\tif(l >= 4 && t[l - 1] == \"\" && t[l - 2] == 0 && t[l - 3] == 0 && t[l - 4] == \"l\"){\r\n\t\t\tt.splice(l - 4, 4);\r\n\t\t}\r\n\t\tif(l){\r\n\t\t\tshape.path = t.join(\" \");\r\n\t\t}\r\n\t};\r\n\r\n\treturn vml; //return augmented vml api\r\n});\r\n"]}