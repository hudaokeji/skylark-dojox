{"version":3,"sources":["data/GoogleFeedStore.js"],"names":["define","dojo","lang","declare","GoogleSearchStore","experimental","Search","_type","_googleUrl","_attributes","_queryAttrs","url","getFeedValue","attribute","defaultValue","values","this","getFeedValues","isArray","_feedMetaData","_processItem","item","request","inherited","arguments","_getItems","data","title","feed","desc","description","link","author","entries","_createContent","query","callback","cb","num","count","start"],"mappings":";;;;;;;AAAAA,QAAQ,oBAAqB,kBAAmB,qBAAsB,gCACpE,SAASC,EAAMC,EAAMC,EAASC,GAMhC,OAJAH,EAAKI,aAAa,8BAIXF,EAAQ,6BAFFC,EAAkBE,QAkB9BC,MAAO,GACPC,WAAY,qDACZC,aAAc,QAAS,OAAQ,SAAU,YACvC,UAAW,UAAW,cACxBC,aACCC,IAAM,KAGPC,aAAc,SAASC,EAAWC,GAIjC,IAAIC,EAASC,KAAKC,cAAcJ,EAAWC,GAC3C,OAAGZ,EAAKgB,QAAQH,GACRA,EAAO,GAERA,GAGRE,cAAe,SAASJ,EAAWC,GAIlC,OAAIE,KAAKG,eAGFH,KAAKG,cAAcN,IAFlBC,GAKTM,aAAc,SAASC,EAAMC,GAC5BN,KAAKO,UAAUC,WACfH,EAAc,QAAIA,EAAqB,eACvCA,EAAgB,UAAIA,EAAoB,eAGzCI,UAAW,SAASC,GACnB,OAAGA,EAAW,MACbV,KAAKG,eACJQ,MAAOD,EAAKE,KAAKD,MACjBE,KAAMH,EAAKE,KAAKE,YAChBnB,IAAKe,EAAKE,KAAKG,KACfC,OAAQN,EAAKE,KAAKI,QAEZN,EAAKE,KAAKK,SAEX,MAGRC,eAAgB,SAASC,EAAOC,EAAUd,GACzC,IAAIe,EAAKrB,KAAKO,UAAUC,WAExB,OADAa,EAAGC,KAAOhB,EAAQiB,OAAS,KAAOjB,EAAQkB,OAAS,GAC5CH","file":"../../data/GoogleFeedStore.js","sourcesContent":["define([\"dojo/_base/kernel\", \"dojo/_base/lang\", \"dojo/_base/declare\", \"dojox/data/GoogleSearchStore\"], \r\n  function(dojo, lang, declare, GoogleSearchStore) {\r\n\r\ndojo.experimental(\"dojox.data.GoogleFeedStore\");\r\n\r\nvar Search = GoogleSearchStore.Search;\r\n\r\nreturn declare(\"dojox.data.GoogleFeedStore\", Search,{\r\n\t// summary:\r\n\t//\t\tA data store for retrieving RSS and Atom feeds from Google. The\r\n\t//\t\tfeeds can come from any source, which is specified in the \"url\"\r\n\t//\t\tparameter of the query passed to the \"fetch\" function.\r\n\t//\t\tThe following attributes are supported on each item:\r\n\t//\r\n\t//\t\t- title - The feed entry title. \r\n\t//\t\t- link - The URL for the HTML version of the feed entry. \r\n\t//\t\t- content - The full content of the blog post, in HTML format \r\n\t//\t\t- summary - A snippet of information about the feed entry, in plain text \r\n\t//\t\t- published - The string date on which the entry was published.\r\n\t//\t\t\t\t\tYou can parse the date with new Date(store.getValue(item, \"published\") \r\n\t//\t\t- categories - An array of string tags for the entry \r\n\t//\r\n\t//\t\tThe query accepts one parameter: url - The URL of the feed to retrieve\r\n\t_type: \"\",\r\n\t_googleUrl: \"http://ajax.googleapis.com/ajax/services/feed/load\",\r\n\t_attributes: [\"title\", \"link\", \"author\", \"published\",\r\n\t\t\t\"content\", \"summary\", \"categories\"],\r\n\t_queryAttrs: {\r\n\t\t\"url\":\"q\"\r\n\t},\r\n\t\r\n\tgetFeedValue: function(attribute, defaultValue){\r\n\t\t// summary:\r\n\t\t//\t\tNon-API method for retrieving values regarding the Atom feed,\r\n\t\t//\t\trather than the Atom entries.\r\n\t\tvar values = this.getFeedValues(attribute, defaultValue);\r\n\t\tif(lang.isArray(values)){\r\n\t\t\treturn values[0];\r\n\t\t}\r\n\t\treturn values;\r\n\t},\r\n\r\n\tgetFeedValues: function(attribute, defaultValue){\r\n\t\t// summary:\r\n\t\t//\t\tNon-API method for retrieving values regarding the Atom feed,\r\n\t\t//\t\trather than the Atom entries.\r\n\t\tif(!this._feedMetaData){\r\n\t\t\treturn defaultValue;\r\n\t\t}\r\n\t\treturn this._feedMetaData[attribute] || defaultValue;\r\n\t},\r\n\r\n\t_processItem: function(item, request) {\r\n\t\tthis.inherited(arguments);\r\n\t\titem[\"summary\"] = item[\"contentSnippet\"];\r\n\t\titem[\"published\"] = item[\"publishedDate\"];\r\n\t},\r\n\r\n\t_getItems: function(data){\r\n\t\tif(data['feed']){\r\n\t\t\tthis._feedMetaData = {\r\n\t\t\t\ttitle: data.feed.title,\r\n\t\t\t\tdesc: data.feed.description,\r\n\t\t\t\turl: data.feed.link,\r\n\t\t\t\tauthor: data.feed.author\r\n\t\t\t};\r\n\t\t\treturn data.feed.entries;\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\r\n\t_createContent: function(query, callback, request){\r\n\t\tvar cb = this.inherited(arguments);\r\n\t\tcb.num = (request.count || 10) + (request.start || 0);\r\n\t\treturn cb;\r\n\t}\r\n});\r\n\r\n});\r\n"]}