{"version":3,"sources":["data/PicasaStore.js"],"names":["define","lang","declare","connect","scriptIO","simpleFetch","dateStamp","PicasaStore","constructor","args","label","this","urlPreventCache","maxResults","parseInt","_picasaUrl","_storeRef","_assertIsItem","item","isItem","Error","_assertIsAttribute","attribute","getFeatures","dojo.data.api.Read","getValue","defaultValue","values","getValues","length","getAttributes","hasAttribute","isItemLoaded","loadItem","keywordArgs","getLabel","getLabelAttributes","containsValue","value","i","_unescapeHtml","title","author","name","dateAtamp","fromISOString","published","updated","media","thumbnail","url","content$src","link","tags","split","summary","close","request","_fetchItems","fetchHandler","errorHandler","query","content","alt","pp","psc","start-index","start","q","userid","uname","userids","ids","hl","self","getArgs","preventCache","callbackParamName","handle","data","_processPicasaData","get","addErrback","error","disconnect","items","feed","entry","str","replace","extend"],"mappings":"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","file":"../../data/PicasaStore.js","sourcesContent":["define([\"dojo/_base/lang\",\"dojo/_base/declare\", \"dojo/_base/connect\", \"dojo/io/script\", \"dojo/data/util/simpleFetch\", \"dojo/date/stamp\"], \r\n  function(lang, declare, connect, scriptIO, simpleFetch, dateStamp) {\r\n\r\nvar PicasaStore = declare(\"dojox.data.PicasaStore\", null, {\r\n\tconstructor: function(/*Object*/args){\r\n\t\t// summary:\r\n\t\t//\t\tInitializer for the PicasaStore store.\r\n\t\t// description:\r\n\t\t//\t\tThe PicasaStore is a Datastore interface to one of the basic services\r\n\t\t//\t\tof the Picasa service, the public photo feed.  This does not provide\r\n\t\t//\t\taccess to all the services of Picasa.\r\n\t\t//\t\tThis store cannot do * and ? filtering as the picasa service\r\n\t\t//\t\tprovides no interface for wildcards.\r\n\t\tif(args && args.label){\r\n\t\t\tthis.label = args.label;\r\n\t\t}\r\n\t\tif(args && \"urlPreventCache\" in args){\r\n\t\t\tthis.urlPreventCache = args.urlPreventCache?true:false;\r\n\t\t}\r\n\t\tif(args && \"maxResults\" in args){\r\n\t\t\tthis.maxResults = parseInt(args.maxResults);\r\n\t\t\tif(!this.maxResults){\r\n\t\t\t\tthis.maxResults = 20;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_picasaUrl: \"http://picasaweb.google.com/data/feed/api/all\",\r\n\r\n\t_storeRef: \"_S\",\r\n\r\n\t// label: string\r\n\t//\t\tThe attribute to use from the picasa item as its label.\r\n\tlabel: \"title\",\r\n\r\n\t// urlPreventCache: boolean\r\n\t//\t\tFlag denoting if preventCache should be passed to io.script.\r\n\turlPreventCache: false,\r\n\r\n\t// maxResults: Number\r\n\t//\t\tDefine out how many results to return for a fetch.\r\n\tmaxResults: 20,\r\n\r\n\t_assertIsItem: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tThis function tests whether the item passed in is indeed an item in the store.\r\n\t\t// item:\r\n\t\t//\t\tThe item to test for being contained by the store.\r\n\t\tif(!this.isItem(item)){\r\n\t\t\tthrow new Error(\"dojox.data.PicasaStore: a function was passed an item argument that was not an item\");\r\n\t\t}\r\n\t},\r\n\r\n\t_assertIsAttribute: function(/* attribute-name-string */ attribute){\r\n\t\t// summary:\r\n\t\t//\t\tThis function tests whether the item passed in is indeed a valid 'attribute' like type for the store.\r\n\t\t// attribute:\r\n\t\t//\t\tThe attribute to test for being contained by the store.\r\n\t\tif(typeof attribute !== \"string\"){\r\n\t\t\tthrow new Error(\"dojox.data.PicasaStore: a function was passed an attribute argument that was not an attribute name string\");\r\n\t\t}\r\n\t},\r\n\r\n\tgetFeatures: function(){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getFeatures()\r\n\t\treturn {\r\n\t\t\t'dojo.data.api.Read': true\r\n\t\t};\r\n\t},\r\n\r\n\tgetValue: function(item, attribute, defaultValue){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getValue()\r\n\t\tvar values = this.getValues(item, attribute);\r\n\t\tif(values && values.length > 0){\r\n\t\t\treturn values[0];\r\n\t\t}\r\n\t\treturn defaultValue;\r\n\t},\r\n\r\n\tgetAttributes: function(item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getAttributes()\r\n\t\treturn [\"id\", \"published\", \"updated\", \"category\", \"title$type\", \"title\",\r\n\t\t\t\"summary$type\", \"summary\", \"rights$type\", \"rights\", \"link\", \"author\",\r\n\t\t\t\"gphoto$id\", \"gphoto$name\", \"location\", \"imageUrlSmall\", \"imageUrlMedium\",\r\n\t\t\t\"imageUrl\", \"datePublished\", \"dateTaken\",\"description\"];\r\n\t},\r\n\r\n\thasAttribute: function(item, attribute){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.hasAttributes()\r\n\t\tif(this.getValue(item,attribute)){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\r\n\tisItemLoaded: function(item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.isItemLoaded()\r\n\t\treturn this.isItem(item);\r\n\t},\r\n\r\n\tloadItem: function(keywordArgs){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.loadItem()\r\n\t},\r\n\r\n\tgetLabel: function(item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getLabel()\r\n\t\treturn this.getValue(item,this.label);\r\n\t},\r\n\t\r\n\tgetLabelAttributes: function(item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getLabelAttributes()\r\n\t\treturn [this.label];\r\n\t},\r\n\r\n\tcontainsValue: function(item, attribute, value){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.containsValue()\r\n\t\tvar values = this.getValues(item,attribute);\r\n\t\tfor(var i = 0; i < values.length; i++){\r\n\t\t\tif(values[i] === value){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\r\n\tgetValues: function(item, attribute){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getValue()\r\n\r\n\t\tthis._assertIsItem(item);\r\n\t\tthis._assertIsAttribute(attribute);\r\n\t\tif(attribute === \"title\"){\r\n\t\t\treturn [this._unescapeHtml(item.title)];\r\n\t\t}else if(attribute === \"author\"){\r\n\t\t\treturn [this._unescapeHtml(item.author[0].name)];\r\n\t\t}else if(attribute === \"datePublished\"){\r\n\t\t\treturn [dateAtamp.fromISOString(item.published)];\r\n\t\t}else if(attribute === \"dateTaken\"){\r\n\t\t\treturn [dateStamp.fromISOString(item.published)];\r\n\t\t}else if(attribute === \"updated\"){\r\n\t\t\treturn [dateStamp.fromISOString(item.updated)];\r\n\t\t}else if(attribute === \"imageUrlSmall\"){\r\n\t\t\treturn [item.media.thumbnail[1].url];\r\n\t\t}else if(attribute === \"imageUrl\"){\r\n\t\t\treturn [item.content$src];\r\n\t\t}else if(attribute === \"imageUrlMedium\"){\r\n\t\t\treturn [item.media.thumbnail[2].url];\r\n\t\t}else if(attribute === \"link\"){\r\n\t\t\treturn [item.link[1]];\r\n\t\t}else if(attribute === \"tags\"){\r\n\t\t\treturn item.tags.split(\" \");\r\n\t\t}else if(attribute === \"description\"){\r\n\t\t\treturn [this._unescapeHtml(item.summary)];\r\n\t\t}\r\n\t\treturn [];\r\n\t},\r\n\r\n\tisItem: function(item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.isItem()\r\n\t\tif(item && item[this._storeRef] === this){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\t\r\n\tclose: function(request){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.close()\r\n\t},\r\n\r\n\t_fetchItems: function(request, fetchHandler, errorHandler){\r\n\t\t// summary:\r\n\t\t//\t\tFetch picasa items that match to a query\r\n\t\t// request:\r\n\t\t//\t\tA request object\r\n\t\t// fetchHandler:\r\n\t\t//\t\tA function to call for fetched items\r\n\t\t// errorHandler:\r\n\t\t//\t\tA function to call on error\r\n\r\n\t\tif(!request.query){\r\n\t\t\trequest.query={};\r\n\t\t}\r\n\r\n\t\t//Build up the content to send the request for.\r\n\t\tvar content = {alt: \"jsonm\", pp: \"1\", psc: \"G\"};\r\n\r\n\t\tcontent['start-index'] = \"1\";\r\n\t\tif(request.query.start){\r\n\t\t\tcontent['start-index'] = request.query.start;\r\n\t\t}\r\n\t\tif(request.query.tags){\r\n\t\t\tcontent.q = request.query.tags;\r\n\t\t}\r\n\t\tif(request.query.userid){\r\n\t\t\tcontent.uname = request.query.userid;\r\n\t\t}\r\n\t\tif(request.query.userids){\r\n\t\t\tcontent.ids = request.query.userids;\r\n\t\t}\r\n\t\tif(request.query.lang){\r\n\t\t\tcontent.hl = request.query.lang;\r\n\t\t}\r\n\t\tcontent['max-results'] = this.maxResults;\r\n\r\n\t\t//Linking this up to Picasa is a JOY!\r\n\t\tvar self = this;\r\n\t\tvar handle = null;\r\n\t\tvar myHandler = function(data){\r\n\t\t\tif(handle !== null){\r\n\t\t\t\tconnect.disconnect(handle);\r\n\t\t\t}\r\n\r\n\t\t\t//Process the items...\r\n\t\t\tfetchHandler(self._processPicasaData(data), request);\r\n\t\t};\r\n\t\tvar getArgs = {\r\n\t\t\turl: this._picasaUrl,\r\n\t\t\tpreventCache: this.urlPreventCache,\r\n\t\t\tcontent: content,\r\n\t\t\tcallbackParamName: 'callback',\r\n\t\t\thandle: myHandler\r\n\t\t};\r\n\t\tvar deferred = scriptIO.get(getArgs);\r\n\t\t\r\n\t\tdeferred.addErrback(function(error){\r\n\t\t\tconnect.disconnect(handle);\r\n\t\t\terrorHandler(error, request);\r\n\t\t});\r\n\t},\r\n\r\n\t_processPicasaData: function(data){\r\n\t\tvar items = [];\r\n\t\tif(data.feed){\r\n\t\t\titems = data.feed.entry;\r\n\t\t\t//Add on the store ref so that isItem can work.\r\n\t\t\tfor(var i = 0; i < items.length; i++){\r\n\t\t\t\tvar item = items[i];\r\n\t\t\t\titem[this._storeRef] = this;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn items;\r\n\t},\r\n\r\n\t_unescapeHtml: function(str){\r\n\t\t// summary:\r\n\t\t//\t\tUtility function to un-escape XML special characters in an HTML string.\r\n\t\t// description:\r\n\t\t//\t\tUtility function to un-escape XML special characters in an HTML string.\r\n\t\t// str: String\r\n\t\t//\t\tThe string to un-escape\r\n\t\t// returns:\r\n\t\t//\t\tHTML String converted back to the normal text (unescaped) characters (<,>,&, \", etc,).\r\n\r\n\t\t// TODO: Check to see if theres already compatible escape() in dojo.string or dojo.html\r\n\t\tif(str){\r\n\t\t\tstr = str.replace(/&amp;/gm, \"&\").replace(/&lt;/gm, \"<\").replace(/&gt;/gm, \">\").replace(/&quot;/gm, \"\\\"\");\r\n\t\t\tstr = str.replace(/&#39;/gm, \"'\");\r\n\t\t}\r\n\t\treturn str;\r\n\t}\r\n});\r\nlang.extend(PicasaStore, simpleFetch);\r\n\r\nreturn PicasaStore;\r\n\r\n});\r\n"]}