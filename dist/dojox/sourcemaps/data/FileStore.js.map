{"version":3,"sources":["data/FileStore.js"],"names":["define","declare","lang","kernel","jsonUtil","xhr","constructor","args","label","this","url","options","isArray","isString","split","pathAsQueryParam","urlPreventCache","_storeRef","_identifier","_attributes","pathSeparator","failOk","_assertIsItem","item","isItem","Error","_assertIsAttribute","attribute","getFeatures","dojo.data.api.Read","dojo.data.api.Identity","getValue","defaultValue","values","getValues","length","getAttributes","hasAttribute","getIdentity","getIdentityAttributes","isItemLoaded","loaded","_loaded","loadItem","keywordArgs","self","scope","global","content","toJson","path","parentPath","name","xhrData","handleAs","preventCache","deferred","get","addErrback","error","onError","call","addCallback","data","mixin","_processItem","onItem","getLabel","getLabelAttributes","containsValue","value","i","close","request","fetch","store","reqParams","query","sort","queryOptions","start","count","getArgs","_processResult","fetchItemByIdentity","identity","onBegin","total","items","_processItemArray","onComplete","e","console","log","itemArray","children","directory","isObject"],"mappings":"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","file":"../../data/FileStore.js","sourcesContent":["define([\"dojo/_base/declare\", \"dojo/_base/lang\", \"dojo/_base/kernel\", \"dojo/_base/json\", \"dojo/_base/xhr\"],\r\n  function(declare, lang, kernel, jsonUtil, xhr) {\r\n\r\nreturn declare(\"dojox.data.FileStore\", null, {\r\n\tconstructor: function(/*Object*/args){\r\n\t\t// summary:\r\n\t\t//\t\tA simple store that provides a datastore interface to a filesystem.\r\n\t\t// description:\r\n\t\t//\t\tA simple store that provides a datastore interface to a filesystem.  It takes a few parameters\r\n\t\t//\t\tfor initialization:\r\n\t\t//\r\n\t\t//\t\t- url:\tThe URL of the service which provides the file store serverside implementation.\r\n\t\t//\t\t- label:\tThe attribute of the file to use as the human-readable text.  Default is 'name'.\r\n\t\t//\r\n\t\t//\t\tThe purpose of this store is to represent a file as a datastore item.  The\r\n\t\t//\t\tdatastore item by default has the following attributes that can be examined on it.\r\n\t\t//\r\n\t\t//\t\t- directory:\tBoolean indicating if the file item represents a directory.\r\n\t\t//\t\t- name:\tThe filename with no path informatiom.\r\n\t\t//\t\t- path:\tThe file complete file path including name, relative to the location the\r\n\t\t//\t\t\tfile service scans from\r\n\t\t//\t\t- size:\tThe size of the file, in bytes.\r\n\t\t//\t\t- parentDir:\tThe parent directory path.\r\n\t\t//\t\t- children:\tAny child files contained by a directory file item.\r\n\t\t//\r\n\t\t//\t\tNote that the store's server call pattern is RESTlike.\r\n\t\t//\r\n\t\t//\t\tThe store also supports the passing of configurable options to the back end service, such as\r\n\t\t//\t\texpanding all child files (no lazy load), displaying hidden files, displaying only directories, and so on.\r\n\t\t//\t\tThese are defined through a comma-separated list in declarative, or through setting the options array in programmatic.\r\n\t\t//\t\texample:\toptions=\"expand,dirsOnly,showHiddenFiles\"\r\n\t\tif(args && args.label){\r\n\t\t\tthis.label = args.label;\r\n\t\t}\r\n\t\tif(args && args.url){\r\n\t\t\tthis.url = args.url;\r\n\t\t}\r\n\t\tif(args && args.options){\r\n\t\t\tif(lang.isArray(args.options)){\r\n\t\t\t\tthis.options = args.options;\r\n\t\t\t}else{\r\n\t\t\t\tif(lang.isString(args.options)){\r\n\t\t\t\t\tthis.options = args.options.split(\",\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(args && args.pathAsQueryParam){\r\n\t\t\tthis.pathAsQueryParam = true;\r\n\t\t}\r\n\t\tif(args && \"urlPreventCache\" in args){\r\n\t\t\tthis.urlPreventCache = args.urlPreventCache?true:false;\r\n\t\t}\r\n\t},\r\n\r\n\t// url: [public] string\r\n\t//\t\tThe URL to the file path service.\r\n\turl: \"\",\r\n\t\r\n\t// _storeRef: [private] string\r\n\t//\t\tInternal variable used to denote an item came from this store instance.\r\n\t_storeRef: \"_S\",\r\n\r\n\t// label: [public] string\r\n\t//\t\tDefault attribute to use to represent the item as a user-readable\r\n\t//\t\tstring.  Public, so users can change it.\r\n\tlabel: \"name\",\r\n\r\n\t// _identifier: [private] string\r\n\t//\t\tDefault attribute to use to represent the item's identifier.\r\n\t//\t\tPath should always be unique in the store instance.\r\n\t_identifier: \"path\",\r\n\r\n\t// _attributes: [private] string\r\n\t//\t\tInternal variable of attributes all file items should have.\r\n\t_attributes: [\"children\", \"directory\", \"name\", \"path\", \"modified\", \"size\", \"parentDir\"],\r\n\t\r\n\t// pathSeparator: [public] string\r\n\t//\t\tThe path separator to use when chaining requests for children\r\n\t//\t\tCan be overriden by the server on initial load\r\n\tpathSeparator: \"/\",\r\n\r\n\t// options: [public] array\r\n\t//\t\tArray of options to always send when doing requests.\r\n\t//\t\tBack end service controls this, like 'dirsOnly', 'showHiddenFiles', 'expandChildren', etc.\r\n\toptions: [],\r\n\r\n\t// failOk: [public] boolean\r\n\t//\t\tFlag to pass on to xhr functions to check if we are OK to fail the call silently\r\n\tfailOk: false,\r\n\r\n\t// urlPreventCache: [public] string\r\n\t//\t\tFlag to dennote if preventCache should be passed to xhrGet.\r\n\turlPreventCache: true,\r\n\r\n\t_assertIsItem: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tThis function tests whether the item passed in is indeed an item in the store.\r\n\t\t// item:\r\n\t\t//\t\tThe item to test for being contained by the store.\r\n\t\tif(!this.isItem(item)){\r\n\t\t\tthrow new Error(\"dojox.data.FileStore: a function was passed an item argument that was not an item\");\r\n\t\t}\r\n\t},\r\n\r\n\t_assertIsAttribute: function(/* attribute-name-string */ attribute){\r\n\t\t// summary:\r\n\t\t//\t\tThis function tests whether the item passed in is indeed a valid 'attribute' like type for the store.\r\n\t\t// attribute:\r\n\t\t//\t\tThe attribute to test for being contained by the store.\r\n\t\tif(typeof attribute !== \"string\"){\r\n\t\t\tthrow new Error(\"dojox.data.FileStore: a function was passed an attribute argument that was not an attribute name string\");\r\n\t\t}\r\n\t},\r\n\r\n\tpathAsQueryParam: false, //Function to switch between REST style URL lookups and passing the path to specific items as a query param: 'path'.\r\n\r\n\tgetFeatures: function(){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getFeatures()\r\n\t\treturn {\r\n\t\t\t'dojo.data.api.Read': true, 'dojo.data.api.Identity':true\r\n\t\t};\r\n\t},\r\n\r\n\tgetValue: function(item, attribute, defaultValue){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getValue()\r\n\t\tvar values = this.getValues(item, attribute);\r\n\t\tif(values && values.length > 0){\r\n\t\t\treturn values[0];\r\n\t\t}\r\n\t\treturn defaultValue;\r\n\t},\r\n\r\n\tgetAttributes: function(item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getAttributes()\r\n\t\treturn this._attributes;\r\n\t},\r\n\r\n\thasAttribute: function(item, attribute){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.hasAttribute()\r\n\t\tthis._assertIsItem(item);\r\n\t\tthis._assertIsAttribute(attribute);\r\n\t\treturn (attribute in item);\r\n\t},\r\n\t\r\n\tgetIdentity: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Identity.getIdentity()\r\n\t\treturn this.getValue(item, this._identifier);\r\n\t},\r\n\t\r\n\tgetIdentityAttributes: function(item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getLabelAttributes()\r\n\t\treturn [this._identifier];\r\n\t},\r\n\r\n\r\n\tisItemLoaded: function(item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.isItemLoaded()\r\n\t\tvar loaded = this.isItem(item);\r\n\t\tif(loaded && typeof item._loaded == \"boolean\" && !item._loaded){\r\n\t\t\tloaded = false;\r\n\t\t}\r\n\t\treturn loaded;\r\n\t},\r\n\r\n\tloadItem: function(keywordArgs){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.loadItem()\r\n\t\tvar item = keywordArgs.item;\r\n\t\tvar self = this;\r\n\t\tvar scope = keywordArgs.scope || kernel.global;\r\n\r\n\t\tvar content = {};\r\n\r\n\t\tif(this.options.length > 0){\r\n\t\t\tcontent.options = jsonUtil.toJson(this.options);\r\n\t\t}\r\n\r\n\t\tif(this.pathAsQueryParam){\r\n\t\t\tcontent.path = item.parentPath + this.pathSeparator + item.name;\r\n\t\t}\r\n\t\tvar xhrData = {\r\n\t\t\turl: this.pathAsQueryParam? this.url : this.url + \"/\" + item.parentPath + \"/\" + item.name,\r\n\t\t\thandleAs: \"json-comment-optional\",\r\n\t\t\tcontent: content,\r\n\t\t\tpreventCache: this.urlPreventCache,\r\n\t\t\tfailOk: this.failOk\r\n\t\t};\r\n\r\n\t\tvar deferred = xhr.get(xhrData);\r\n\t\tdeferred.addErrback(function(error){\r\n\t\t\t\tif(keywordArgs.onError){\r\n\t\t\t\t\tkeywordArgs.onError.call(scope, error);\r\n\t\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tdeferred.addCallback(function(data){\r\n\t\t\tdelete item.parentPath;\r\n\t\t\tdelete item._loaded;\r\n\t\t\tlang.mixin(item, data);\r\n\t\t\tself._processItem(item);\r\n\t\t\tif(keywordArgs.onItem){\r\n\t\t\t\tkeywordArgs.onItem.call(scope, item);\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tgetLabel: function(item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getLabel()\r\n\t\treturn this.getValue(item,this.label);\r\n\t},\r\n\t\r\n\tgetLabelAttributes: function(item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getLabelAttributes()\r\n\t\treturn [this.label];\r\n\t},\r\n\t\r\n\tcontainsValue: function(item, attribute, value){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.containsValue()\r\n\t\tvar values = this.getValues(item,attribute);\r\n\t\tfor(var i = 0; i < values.length; i++){\r\n\t\t\tif(values[i] == value){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\r\n\tgetValues: function(item, attribute){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getValue()\r\n\t\tthis._assertIsItem(item);\r\n\t\tthis._assertIsAttribute(attribute);\r\n\t\t\r\n\t\tvar value = item[attribute];\r\n\t\tif(typeof value !== \"undefined\" && !lang.isArray(value)){\r\n\t\t\tvalue = [value];\r\n\t\t}else if(typeof value === \"undefined\"){\r\n\t\t\tvalue = [];\r\n\t\t}\r\n\t\treturn value;\r\n\t},\r\n\r\n\tisItem: function(item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.isItem()\r\n\t\tif(item && item[this._storeRef] === this){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\t\r\n\tclose: function(request){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.close()\r\n\t},\r\n\r\n\tfetch: function(request){\r\n\t\t// summary:\r\n\t\t//\t\tFetch  items that match to a query\r\n\t\t// request:\r\n\t\t//\t\tA request object\r\n\r\n\t\trequest = request || {};\r\n\t\tif(!request.store){\r\n\t\t\trequest.store = this;\r\n\t\t}\r\n\t\tvar self = this;\r\n\t\tvar scope = request.scope || kernel.global;\r\n\r\n\t\t//Generate what will be sent over.\r\n\t\tvar reqParams = {};\r\n\t\tif(request.query){\r\n\t\t\treqParams.query = jsonUtil.toJson(request.query);\r\n\t\t}\r\n\r\n\t\tif(request.sort){\r\n\t\t\treqParams.sort = jsonUtil.toJson(request.sort);\r\n\t\t}\r\n\r\n\t\tif(request.queryOptions){\r\n\t\t\treqParams.queryOptions = jsonUtil.toJson(request.queryOptions);\r\n\t\t}\r\n\r\n\t\tif(typeof request.start == \"number\"){\r\n\t\t\treqParams.start = \"\" + request.start;\r\n\t\t}\r\n\t\tif(typeof request.count == \"number\"){\r\n\t\t\treqParams.count = \"\" + request.count;\r\n\t\t}\r\n\r\n\t\tif(this.options.length > 0){\r\n\t\t\treqParams.options = jsonUtil.toJson(this.options);\r\n\t\t}\r\n\r\n\t\tvar getArgs = {\r\n\t\t\turl: this.url,\r\n\t\t\tpreventCache: this.urlPreventCache,\r\n\t\t\tfailOk: this.failOk,\r\n\t\t\thandleAs: \"json-comment-optional\",\r\n\t\t\tcontent: reqParams\r\n\t\t};\r\n\r\n\r\n\t\tvar deferred = xhr.get(getArgs);\r\n\r\n\t\tdeferred.addCallback(function(data){self._processResult(data, request);});\r\n\t\tdeferred.addErrback(function(error){\r\n\t\t\tif(request.onError){\r\n\t\t\t\trequest.onError.call(scope, error, request);\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tfetchItemByIdentity: function(keywordArgs){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.loadItem()\r\n\t\tvar path = keywordArgs.identity;\r\n\t\tvar self = this;\r\n\t\tvar scope = keywordArgs.scope || kernel.global;\r\n\r\n\t\tvar content = {};\r\n\r\n\t\tif(this.options.length > 0){\r\n\t\t\tcontent.options = jsonUtil.toJson(this.options);\r\n\t\t}\r\n\r\n\t\tif(this.pathAsQueryParam){\r\n\t\t\tcontent.path = path;\r\n\t\t}\r\n\t\tvar xhrData = {\r\n\t\t\turl: this.pathAsQueryParam? this.url : this.url + \"/\" + path,\r\n\t\t\thandleAs: \"json-comment-optional\",\r\n\t\t\tcontent: content,\r\n\t\t\tpreventCache: this.urlPreventCache,\r\n\t\t\tfailOk: this.failOk\r\n\t\t};\r\n\r\n\t\tvar deferred = xhr.get(xhrData);\r\n\t\tdeferred.addErrback(function(error){\r\n\t\t\t\tif(keywordArgs.onError){\r\n\t\t\t\t\tkeywordArgs.onError.call(scope, error);\r\n\t\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tdeferred.addCallback(function(data){\r\n\t\t\tvar item = self._processItem(data);\r\n\t\t\tif(keywordArgs.onItem){\r\n\t\t\t\tkeywordArgs.onItem.call(scope, item);\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\t_processResult: function(data, request){\r\n\t\tvar scope = request.scope || kernel.global;\r\n\t\ttry{\r\n\t\t\t//If the data contains a path separator, set ours\r\n\t\t\tif(data.pathSeparator){\r\n\t\t\t\tthis.pathSeparator = data.pathSeparator;\r\n\t\t\t}\r\n\t\t\t//Invoke the onBegin handler, if any, to return the\r\n\t\t\t//size of the dataset as indicated by the service.\r\n\t\t\tif(request.onBegin){\r\n\t\t\t\trequest.onBegin.call(scope, data.total, request);\r\n\t\t\t}\r\n\t\t\t//Now process all the returned items thro\r\n\t\t\tvar items = this._processItemArray(data.items);\r\n\t\t\tif(request.onItem){\r\n\t\t\t\tvar i;\r\n\t\t\t\tfor(i = 0; i < items.length; i++){\r\n\t\t\t\t\trequest.onItem.call(scope, items[i], request);\r\n\t\t\t\t}\r\n\t\t\t\titems = null;\r\n\t\t\t}\r\n\t\t\tif(request.onComplete){\r\n\t\t\t\trequest.onComplete.call(scope, items, request);\r\n\t\t\t}\r\n\t\t}catch (e){\r\n\t\t\tif(request.onError){\r\n\t\t\t\trequest.onError.call(scope, e, request);\r\n\t\t\t}else{\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t_processItemArray: function(itemArray){\r\n\t\t// summary:\r\n\t\t//\t\tInternal function for processing an array of items for return.\r\n\t\tvar i;\r\n\t\tfor(i = 0; i < itemArray.length; i++){\r\n\t\t\tthis._processItem(itemArray[i]);\r\n\t\t}\r\n\t\treturn itemArray;\r\n\t},\r\n\t\r\n\t_processItem: function(item){\r\n\t\t// summary:\r\n\t\t//\t\tInternal function for processing an item returned from the store.\r\n\t\t//\t\tIt sets up the store ref as well as sets up the attributes necessary\r\n\t\t//\t\tto invoke a lazy load on a child, if there are any.\r\n\t\tif(!item){return null;}\r\n\t\titem[this._storeRef] = this;\r\n\t\tif(item.children && item.directory){\r\n\t\t\tif(lang.isArray(item.children)){\r\n\t\t\t\tvar children = item.children;\r\n\t\t\t\tvar i;\r\n\t\t\t\tfor(i = 0; i < children.length; i++ ){\r\n\t\t\t\t\tvar name = children[i];\r\n\t\t\t\t\tif(lang.isObject(name)){\r\n\t\t\t\t\t\tchildren[i] = this._processItem(name);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tchildren[i] = {name: name, _loaded: false, parentPath: item.path};\r\n\t\t\t\t\t\tchildren[i][this._storeRef] = this;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tdelete item.children;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn item;\r\n\t}\r\n});\r\n});\r\n"]}