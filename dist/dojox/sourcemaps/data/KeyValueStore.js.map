{"version":3,"sources":["data/KeyValueStore.js"],"names":["define","declare","lang","xhr","kernel","simpleFetch","filterUtil","KeyValueStore","constructor","keywordParameters","url","this","_keyValueString","data","_keyValueVar","dataVar","_keyAttribute","_valueAttribute","_storeProp","_features","dojo.data.api.Read","dojo.data.api.Identity","_loadInProgress","_queuedFetches","urlPreventCache","_assertIsItem","item","isItem","Error","_assertIsAttribute","attribute","isString","getValue","defaultValue","value","undefined","getValues","getAttributes","hasAttribute","containsValue","regexp","patternToRegExp","_containsValue","values","i","length","possibleValue","match","something","isItemLoaded","loadItem","keywordArgs","getFeatures","close","request","getLabel","getLabelAttributes","_fetchItems","findCallback","errorCallback","self","filter","requestArgs","arrayOfAllItems","items","query","ignoreCase","queryOptions","regexpList","key","candidateItem","push","identity","slice","_loadFinished","_arrayOfAllItems","args","getArgs","handleAs","preventCache","getHandler","get","addCallback","_processData","_handleQueuedFetches","addErrback","error","eval","fData","delayedFilter","delayedQuery","fetchItemByIdentity","_createItem","getIdentity","getIdentityAttributes","oldOnItem","onItem","onComplete","_finishFetchItemByIdentity","fetch","scope","global","call","extend"],"mappings":"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","file":"../../data/KeyValueStore.js","sourcesContent":["define([\"dojo/_base/declare\", \"dojo/_base/lang\", \"dojo/_base/xhr\", \"dojo/_base/kernel\",\r\n\t\t\"dojo/data/util/simpleFetch\", \"dojo/data/util/filter\"], \r\n  function(declare, lang, xhr, kernel, simpleFetch, filterUtil) {\r\n\r\nvar KeyValueStore = declare(\"dojox.data.KeyValueStore\", null, {\r\n\t// summary:\r\n\t//\t\tThis is a dojo.data store implementation.  It can take in either a Javascript\r\n\t//\t\tarray, JSON string, or URL as the data source.  Data is expected to be in the\r\n\t//\t\tfollowing format:\r\n\t// |\t[\r\n\t// |\t\t{ \"key1\": \"value1\" },\r\n\t// |\t\t{ \"key2\": \"value2\" }\r\n\t// |\t]\r\n\t//\t\tThis is to mimic the Java Properties file format.  Each 'item' from this store\r\n\t//\t\tis a JS object representing a key-value pair.  If an item in the above array has\r\n\t//\t\tmore than one key/value pair, only the first will be used/accessed.\r\n\tconstructor: function(/* Object */ keywordParameters){\r\n\t\t// summary:\r\n\t\t//\t\tconstructor\r\n\t\t// keywordParameters:\r\n\t\t//\t\t- {url: String}\r\n\t\t//\t\t- {data: string}\r\n\t\t//\t\t- {dataVar: jsonObject}\r\n\t\tif(keywordParameters.url){\r\n\t\t\tthis.url = keywordParameters.url;\r\n\t\t}\r\n\t\tthis._keyValueString = keywordParameters.data;\r\n\t\tthis._keyValueVar = keywordParameters.dataVar;\r\n\t\tthis._keyAttribute = \"key\";\r\n\t\tthis._valueAttribute = \"value\";\r\n\t\tthis._storeProp = \"_keyValueStore\";\r\n\t\tthis._features = {\r\n\t\t\t'dojo.data.api.Read': true,\r\n\t\t\t'dojo.data.api.Identity': true\r\n\t\t};\r\n\t\tthis._loadInProgress = false;\t//Got to track the initial load to prevent duelling loads of the dataset.\r\n\t\tthis._queuedFetches = [];\r\n\t\tif(keywordParameters && \"urlPreventCache\" in keywordParameters){\r\n\t\t\tthis.urlPreventCache = keywordParameters.urlPreventCache?true:false;\r\n\t\t}\r\n\t},\r\n\t\r\n\turl: \"\",\r\n\tdata: \"\",\r\n\r\n\t// urlPreventCache: boolean\r\n\t//\t\tControls if urlPreventCache should be used with underlying xhrGet.\r\n\turlPreventCache: false,\r\n\t\r\n\t_assertIsItem: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tThis function tests whether the item passed in is indeed an item in the store.\r\n\t\t// item:\r\n\t\t//\t\tThe item to test for being contained by the store.\r\n\t\tif(!this.isItem(item)){\r\n\t\t\tthrow new Error(\"dojox.data.KeyValueStore: a function was passed an item argument that was not an item\");\r\n\t\t}\r\n\t},\r\n\t\r\n\t_assertIsAttribute: function(/* item */ item, /* String */ attribute){\r\n\t\t// summary:\r\n\t\t//\t\tThis function tests whether the item passed in is indeed a valid 'attribute' like type for the store.\r\n\t\t// attribute:\r\n\t\t//\t\tThe attribute to test for being contained by the store.\r\n\t\tif(!lang.isString(attribute)){\r\n\t\t\tthrow new Error(\"dojox.data.KeyValueStore: a function was passed an attribute argument that was not an attribute object nor an attribute name string\");\r\n\t\t}\r\n\t},\r\n\r\n/***************************************\r\n     dojo/data/api/Read API\r\n***************************************/\r\n\tgetValue: function(\t/* item */ item,\r\n\t\t\t\t\t\t/* attribute-name-string */ attribute,\r\n\t\t\t\t\t\t/* value? */ defaultValue){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getValue()\r\n\t\tthis._assertIsItem(item);\r\n\t\tthis._assertIsAttribute(item, attribute);\r\n\t\tvar value;\r\n\t\tif(attribute == this._keyAttribute){ // Looking for key\r\n\t\t\tvalue = item[this._keyAttribute];\r\n\t\t}else{\r\n\t\t\tvalue = item[this._valueAttribute]; // Otherwise, attribute == ('value' || the actual key )\r\n\t\t}\r\n\t\tif(value === undefined){\r\n\t\t\tvalue = defaultValue;\r\n\t\t}\r\n\t\treturn value;\r\n\t},\r\n\r\n\tgetValues: function(/* item */ item,\r\n\t\t\t\t\t\t/* attribute-name-string */ attribute){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getValues()\r\n\t\t//\t\tKey/Value syntax does not support multi-valued attributes, so this is just a\r\n\t\t//\t\twrapper function for getValue().\r\n\t\tvar value = this.getValue(item, attribute);\r\n\t\treturn (value ? [value] : []); //Array\r\n\t},\r\n\r\n\tgetAttributes: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getAttributes()\r\n\t\treturn [this._keyAttribute, this._valueAttribute, item[this._keyAttribute]];\r\n\t},\r\n\r\n\thasAttribute: function(\t/* item */ item,\r\n\t\t\t\t\t\t\t/* attribute-name-string */ attribute){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.hasAttribute()\r\n\t\tthis._assertIsItem(item);\r\n\t\tthis._assertIsAttribute(item, attribute);\r\n\t\treturn (attribute == this._keyAttribute || attribute == this._valueAttribute || attribute == item[this._keyAttribute]);\r\n\t},\r\n\r\n\tcontainsValue: function(/* item */ item,\r\n\t\t\t\t\t\t\t/* attribute-name-string */ attribute,\r\n\t\t\t\t\t\t\t/* anything */ value){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.containsValue()\r\n\t\tvar regexp = undefined;\r\n\t\tif(typeof value === \"string\"){\r\n\t\t\tregexp = filterUtil.patternToRegExp(value, false);\r\n\t\t}\r\n\t\treturn this._containsValue(item, attribute, value, regexp); //boolean.\r\n\t},\r\n\r\n\t_containsValue: function(\t/* item */ item,\r\n\t\t\t\t\t\t\t\t/* attribute|attribute-name-string */ attribute,\r\n\t\t\t\t\t\t\t\t/* anything */ value,\r\n\t\t\t\t\t\t\t\t/* RegExp?*/ regexp){\r\n\t\t// summary:\r\n\t\t//\t\tInternal function for looking at the values contained by the item.\r\n\t\t// description:\r\n\t\t//\t\tInternal function for looking at the values contained by the item.  This\r\n\t\t//\t\tfunction allows for denoting if the comparison should be case sensitive for\r\n\t\t//\t\tstrings or not (for handling filtering cases where string case should not matter)\r\n\t\t// item:\r\n\t\t//\t\tThe data item to examine for attribute values.\r\n\t\t// attribute:\r\n\t\t//\t\tThe attribute to inspect.\r\n\t\t// value:\r\n\t\t//\t\tThe value to match.\r\n\t\t// regexp:\r\n\t\t//\t\tOptional regular expression generated off value if value was of string type to handle wildcarding.\r\n\t\t//\t\tIf present and attribute values are string, then it can be used for comparison instead of 'value'\r\n\t\tvar values = this.getValues(item, attribute);\r\n\t\tfor(var i = 0; i < values.length; ++i){\r\n\t\t\tvar possibleValue = values[i];\r\n\t\t\tif(typeof possibleValue === \"string\" && regexp){\r\n\t\t\t\treturn (possibleValue.match(regexp) !== null);\r\n\t\t\t}else{\r\n\t\t\t\t//Non-string matching.\r\n\t\t\t\tif(value === possibleValue){\r\n\t\t\t\t\treturn true; // Boolean\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false; // Boolean\r\n\t},\r\n\r\n\tisItem: function(/* anything */ something){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.isItem()\r\n\t\tif(something && something[this._storeProp] === this){\r\n\t\t\treturn true; //Boolean\r\n\t\t}\r\n\t\treturn false; //Boolean\r\n\t},\r\n\r\n\tisItemLoaded: function(/* anything */ something){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.isItemLoaded()\r\n\t\t//\t\tThe KeyValueStore always loads all items, so if it's an item, then it's loaded.\r\n\t\treturn this.isItem(something); //Boolean\r\n\t},\r\n\r\n\tloadItem: function(/* object */ keywordArgs){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.loadItem()\r\n\t\t// description:\r\n\t\t//\t\tThe KeyValueStore always loads all items, so if it's an item, then it's loaded.\r\n\t\t//\r\n\t\t//\t\tFrom the dojo/data/api/Read.loadItem docs:\r\n\t\t//\r\n\t\t//\t\t\tIf a call to isItemLoaded() returns true before loadItem() is even called,\r\n\t\t//\t\t\tthen loadItem() need not do any work at all and will not even invoke\r\n\t\t//\t\t\tthe callback handlers.\r\n\t},\r\n\r\n\tgetFeatures: function(){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getFeatures()\r\n\t\treturn this._features; //Object\r\n\t},\r\n\r\n\tclose: function(/*dojo/data/api/Request|Object?*/ request){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.close()\r\n\t},\r\n\r\n\tgetLabel: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getLabel()\r\n\t\treturn item[this._keyAttribute];\r\n\t},\r\n\r\n\tgetLabelAttributes: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getLabelAttributes()\r\n\t\treturn [this._keyAttribute];\r\n\t},\r\n\t\r\n\t// The dojo/data/api/Read.fetch() function is implemented as\r\n\t// a mixin from dojo.data.util.simpleFetch.\r\n\t// That mixin requires us to define _fetchItems().\r\n\t_fetchItems: function(\t/* Object */ keywordArgs,\r\n\t\t\t\t\t\t\t/* Function */ findCallback,\r\n\t\t\t\t\t\t\t/* Function */ errorCallback){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo.data.util.simpleFetch.fetch()\r\n\t\t\r\n\t\tvar self = this;\r\n\r\n\t\tvar filter = function(requestArgs, arrayOfAllItems){\r\n\t\t\tvar items = null;\r\n\t\t\tif(requestArgs.query){\r\n\t\t\t\titems = [];\r\n\t\t\t\tvar ignoreCase = requestArgs.queryOptions ? requestArgs.queryOptions.ignoreCase : false;\r\n\r\n\t\t\t\t//See if there are any string values that can be regexp parsed first to avoid multiple regexp gens on the\r\n\t\t\t\t//same value for each item examined.  Much more efficient.\r\n\t\t\t\tvar regexpList = {};\r\n\t\t\t\tfor(var key in requestArgs.query){\r\n\t\t\t\t\tvar value = requestArgs.query[key];\r\n\t\t\t\t\tif(typeof value === \"string\"){\r\n\t\t\t\t\t\tregexpList[key] = filterUtil.patternToRegExp(value, ignoreCase);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor(var i = 0; i < arrayOfAllItems.length; ++i){\r\n\t\t\t\t\tvar match = true;\r\n\t\t\t\t\tvar candidateItem = arrayOfAllItems[i];\r\n\t\t\t\t\tfor(var key in requestArgs.query){\r\n\t\t\t\t\t\tvar value = requestArgs.query[key];\r\n\t\t\t\t\t\tif(!self._containsValue(candidateItem, key, value, regexpList[key])){\r\n\t\t\t\t\t\t\tmatch = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(match){\r\n\t\t\t\t\t\titems.push(candidateItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else if(requestArgs.identity){\r\n\t\t\t\titems = [];\r\n\t\t\t\tvar item;\r\n\t\t\t\tfor(var key in arrayOfAllItems){\r\n\t\t\t\t\titem = arrayOfAllItems[key];\r\n\t\t\t\t\tif(item[self._keyAttribute] == requestArgs.identity){\r\n\t\t\t\t\t\titems.push(item);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// We want a copy to pass back in case the parent wishes to sort the array.  We shouldn't allow resort\r\n\t\t\t\t// of the internal list so that multiple callers can get lists and sort without affecting each other.\r\n\t\t\t\tif(arrayOfAllItems.length> 0){\r\n\t\t\t\t\titems = arrayOfAllItems.slice(0,arrayOfAllItems.length);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfindCallback(items, requestArgs);\r\n\t\t};\r\n\r\n\t\tif(this._loadFinished){\r\n\t\t\tfilter(keywordArgs, this._arrayOfAllItems);\r\n\t\t}else{\r\n\t\t\tif(this.url !== \"\"){\r\n\t\t\t\t//If fetches come in before the loading has finished, but while\r\n\t\t\t\t//a load is in progress, we have to defer the fetching to be\r\n\t\t\t\t//invoked in the callback.\r\n\t\t\t\tif(this._loadInProgress){\r\n\t\t\t\t\tthis._queuedFetches.push({args: keywordArgs, filter: filter});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis._loadInProgress = true;\r\n\t\t\t\t\tvar getArgs = {\r\n\t\t\t\t\t\t\turl: self.url,\r\n\t\t\t\t\t\t\thandleAs: \"json-comment-filtered\",\r\n\t\t\t\t\t\t\tpreventCache: this.urlPreventCache\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\tvar getHandler = xhr.get(getArgs);\r\n\t\t\t\t\tgetHandler.addCallback(function(data){\r\n\t\t\t\t\t\tself._processData(data);\r\n\t\t\t\t\t\tfilter(keywordArgs, self._arrayOfAllItems);\r\n\t\t\t\t\t\tself._handleQueuedFetches();\r\n\t\t\t\t\t});\r\n\t\t\t\t\tgetHandler.addErrback(function(error){\r\n\t\t\t\t\t\tself._loadInProgress = false;\r\n\t\t\t\t\t\tthrow error;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}else if(this._keyValueString){\r\n\t\t\t\tthis._processData(eval(this._keyValueString));\r\n\t\t\t\tthis._keyValueString = null;\r\n\t\t\t\tfilter(keywordArgs, this._arrayOfAllItems);\r\n\t\t\t}else if(this._keyValueVar){\r\n\t\t\t\tthis._processData(this._keyValueVar);\r\n\t\t\t\tthis._keyValueVar = null;\r\n\t\t\t\tfilter(keywordArgs, this._arrayOfAllItems);\r\n\t\t\t}else{\r\n\t\t\t\tthrow new Error(\"dojox.data.KeyValueStore: No source data was provided as either URL, String, or Javascript variable data input.\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t},\r\n\r\n\t_handleQueuedFetches: function(){\r\n\t\t// summary:\r\n\t\t//\t\tInternal function to execute delayed request in the store.\r\n\t\t\r\n\t\t//Execute any deferred fetches now.\r\n\t\tif(this._queuedFetches.length > 0){\r\n\t\t\tfor(var i = 0; i < this._queuedFetches.length; i++){\r\n\t\t\t\tvar fData = this._queuedFetches[i];\r\n\t\t\t\tvar delayedFilter = fData.filter;\r\n\t\t\t\tvar delayedQuery = fData.args;\r\n\t\t\t\tif(delayedFilter){\r\n\t\t\t\t\tdelayedFilter(delayedQuery, this._arrayOfAllItems);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.fetchItemByIdentity(fData.args);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._queuedFetches = [];\r\n\t\t}\r\n\t},\r\n\t\r\n\t_processData: function(/* Array */ data){\r\n\t\tthis._arrayOfAllItems = [];\r\n\t\tfor(var i=0; i<data.length; i++){\r\n\t\t\tthis._arrayOfAllItems.push(this._createItem(data[i]));\r\n\t\t}\r\n\t\tthis._loadFinished = true;\r\n\t\tthis._loadInProgress = false;\r\n\t},\r\n\t\r\n\t_createItem: function(/* Object */ something){\r\n\t\tvar item = {};\r\n\t\titem[this._storeProp] = this;\r\n\t\tfor(var i in something){\r\n\t\t\titem[this._keyAttribute] = i;\r\n\t\t\titem[this._valueAttribute] = something[i];\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\treturn item; //Object\r\n\t},\r\n\r\n/***************************************\r\n     dojo/data/api/Identity API\r\n***************************************/\r\n\tgetIdentity: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Identity.getIdentity()\r\n\t\tif(this.isItem(item)){\r\n\t\t\treturn item[this._keyAttribute]; //String\r\n\t\t}\r\n\t\treturn null; //null\r\n\t},\r\n\r\n\tgetIdentityAttributes: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Identity.getIdentifierAttributes()\r\n\t\treturn [this._keyAttribute];\r\n\t},\r\n\r\n\tfetchItemByIdentity: function(/* object */ keywordArgs){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Identity.fetchItemByIdentity()\r\n\t\tkeywordArgs.oldOnItem = keywordArgs.onItem;\r\n\t\tkeywordArgs.onItem = null;\r\n\t\tkeywordArgs.onComplete = this._finishFetchItemByIdentity ;\r\n\t\tthis.fetch(keywordArgs);\r\n\t},\r\n\t\r\n\t_finishFetchItemByIdentity: function(/* Array */ items, /* object */ request){\r\n\t\tvar scope = request.scope || kernel.global;\r\n\t\tif(items.length){\r\n\t\t\trequest.oldOnItem.call(scope, items[0]);\r\n\t\t}else{\r\n\t\t\trequest.oldOnItem.call(scope, null);\r\n\t\t}\r\n\t}\r\n});\r\n//Mix in the simple fetch implementation to this class.\r\nlang.extend(KeyValueStore,simpleFetch);\r\nreturn KeyValueStore;\r\n});\r\n"]}