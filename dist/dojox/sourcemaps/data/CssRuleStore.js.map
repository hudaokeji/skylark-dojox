{"version":3,"sources":["data/CssRuleStore.js"],"names":["define","lang","declare","array","jsonUtil","kernel","has","sorter","filter","css","_storeRef","_labelAttribute","_cache","_browserMap","_cName","constructor","keywordParameters","mixin","this","_allItems","_waiting","gatherHandle","self","setInterval","context","determineContext","clearInterval","length","item","pop","rules","forEach","forFunc","finishFunc","e","setContext","close","getFeatures","dojo.data.api.Read","isItem","hasAttribute","attribute","_assertIsItem","_assertIsAttribute","attrs","getAttributes","indexOf","key","style","rule","push","getValue","defaultValue","values","getValues","value","isString","split","classes","cssText","toLowerCase","substring","styleSheet","parentStyleSheet","href","attr","undefined","isArray","getLabel","getLabelAttributes","containsValue","regexp","patternToRegExp","_containsValue","isItemLoaded","something","loadItem","keywordArgs","fetch","request","store","scope","global","_pending","_fetch","hitch","_handleRule","_handleReturn","onError","call","selector","s","j","tmp","first","last","requestInfo","_inProgress","items","i","_items","_handleFetchReturn","cacheKey","query","toJson","ignoreCase","queryOptions","regexpList","match","total","sort","createSortFunction","start","count","endIdx","slice","onBegin","onItem","onComplete","Error","some","possibleValue","isObject","toString"],"mappings":"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","file":"../../data/CssRuleStore.js","sourcesContent":["define([\"dojo/_base/lang\", \"dojo/_base/declare\", \"dojo/_base/array\", \"dojo/_base/json\",\"dojo/_base/kernel\", \"dojo/_base/sniff\", \"dojo/data/util/sorter\", \"dojo/data/util/filter\", \"./css\"],\r\n function(lang, declare, array, jsonUtil, kernel, has, sorter, filter, css) {\r\n\r\nreturn declare(\"dojox.data.CssRuleStore\", null, {\r\n\t// summary:\r\n\t//\t\tBasic store to display CSS information.\r\n\t// description:\r\n\t//\t\tThe CssRuleStore allows users to get information about active CSS rules in the page running the CssRuleStore.\r\n\t//\t\tIt can also filter out rules from specific stylesheets.  The attributes it exposes on rules are as follows:\r\n\t//\r\n\t//\t\t- selector:\t\t\t\tThe selector text.\r\n\t//\t\t- classes:\t\t\t\tAn array of classes present in this selector.\r\n\t//\t\t- rule:\t\t\t\t\tThe actual DOM Rule object.\r\n\t//\t\t- style:\t\t\t\t\tThe actual DOM CSSStyleDeclaration object.\r\n\t//\t\t- cssText:\t\t\t\tThe cssText string provided on the rule object.\r\n\t//\t\t- styleSheet:\t\t\t\tThe originating DOM Stylesheet object.\r\n\t//\t\t- parentStyleSheet:\t\tThe parent stylesheet to the sheet this rule originates from.\r\n\t//\t\t- parentStyleSheetHref:\tThe href of the parent stylesheet.\r\n\t//\r\n\t//\t\tAND every style attribute denoted as style.*, such as style.textAlign or style.backgroundColor\r\n\r\n\t_storeRef: '_S',\r\n\t_labelAttribute: 'selector', // text representation of the Item [label and identifier may need to stay due to method names]\r\n\r\n\t_cache: null,\r\n\r\n\t_browserMap: null,\r\n\r\n\t_cName: \"dojox.data.CssRuleStore\",\r\n\r\n\tconstructor: function(/* Object */ keywordParameters){\r\n\t\t// Initializes this store\r\n\t\tif(keywordParameters){\r\n\t\t\tlang.mixin(this, keywordParameters);\r\n\t\t}\r\n\t\tthis._cache = {};\r\n\t\tthis._allItems = null;\r\n\t\tthis._waiting = [];\r\n\t\tthis.gatherHandle = null;\r\n\t\tvar self = this;\r\n\t\t// CSS files may not be finished loading by the time the store is constructed.  We need to\r\n\t\t// give them a little time, so setting the stylesheet loading to retry every 250ms.\r\n\t\tfunction gatherRules(){\r\n\t\t\ttry{\r\n\t\t\t\t// Funkiness here is due to css that may still be loading.  This throws an DOM Access\r\n\t\t\t\t// error if css isnt completely loaded.\r\n\t\t\t\tself.context = css.determineContext(self.context);\r\n\t\t\t\tif(self.gatherHandle){\r\n\t\t\t\t\tclearInterval(self.gatherHandle);\r\n\t\t\t\t\tself.gatherHandle = null;\r\n\t\t\t\t}\r\n\t\t\t\t// Handle any fetches that have been queued while we've been waiting on the CSS files\r\n\t\t\t\t// to finish\r\n\t\t\t\twhile(self._waiting.length){\r\n\t\t\t\t\tvar item = self._waiting.pop();\r\n\t\t\t\t\tcss.rules.forEach(item.forFunc, null, self.context);\r\n\t\t\t\t\titem.finishFunc();\r\n\t\t\t\t}\r\n\t\t\t}catch(e){}\r\n\t\t}\r\n\t\tthis.gatherHandle = setInterval(gatherRules,250);\r\n\t},\r\n\t\r\n\tsetContext: function(/* Array */ context){\r\n\t\t// Sets the context in which queries are executed\r\n\t\t// context: Array - Array of CSS string paths to execute queries within\r\n\t\tif(context){\r\n\t\t\tthis.close();\r\n\t\t\tthis.context = css.determineContext(context);\r\n\t\t}\r\n\t},\r\n\r\n\tgetFeatures: function(){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getFeatures()\r\n\t\treturn {\r\n\t\t\t\"dojo.data.api.Read\" : true\r\n\t\t};\r\n\t},\r\n\r\n\tisItem: function(item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.isItem()\r\n\t\tif(item && item[this._storeRef] == this){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\r\n\thasAttribute: function(item, attribute){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.hasAttribute()\r\n\t\tthis._assertIsItem(item);\r\n\t\tthis._assertIsAttribute(attribute);\r\n\t\tvar attrs = this.getAttributes(item);\r\n\t\tif(array.indexOf(attrs, attribute) != -1){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\r\n\tgetAttributes: function(item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getAttributes()\r\n\t\tthis._assertIsItem(item);\r\n\t\tvar attrs = ['selector', 'classes', 'rule', 'style', 'cssText', 'styleSheet', 'parentStyleSheet', 'parentStyleSheetHref'];\r\n\t\tvar style = item.rule.style;\r\n\t\tif(style){\r\n\t\t\tvar key;\r\n\t\t\tfor(key in style){\r\n\t\t\t\tattrs.push(\"style.\" + key);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn attrs;\r\n\t},\r\n\r\n\tgetValue: function(item, attribute, defaultValue){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getValue()\r\n\t\tvar values = this.getValues(item, attribute);\r\n\t\tvar value = defaultValue;\r\n\t\tif(values && values.length > 0){\r\n\t\t\treturn values[0];\r\n\t\t}\r\n\t\treturn defaultValue;\r\n\t},\r\n\r\n\tgetValues: function(item, attribute){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getValues()\r\n\t\tthis._assertIsItem(item);\r\n\t\tthis._assertIsAttribute(attribute);\r\n\t\tvar value = null;\r\n\t\tif(attribute === \"selector\"){\r\n\t\t\tvalue = item.rule[\"selectorText\"];\r\n\t\t\tif(value && lang.isString(value)){\r\n\t\t\t\tvalue = value.split(\",\");\r\n\t\t\t}\r\n\t\t}else if(attribute === \"classes\"){\r\n\t\t\tvalue = item.classes;\r\n\t\t}else if(attribute === \"rule\"){\r\n\t\t\tvalue = item.rule.rule;\r\n\t\t}else if(attribute === \"style\"){\r\n\t\t\tvalue = item.rule.style;\r\n\t\t}else if(attribute === \"cssText\"){\r\n\t\t\tif(has(\"ie\")){\r\n\t\t\t\tif(item.rule.style){\r\n\t\t\t\t\tvalue = item.rule.style.cssText;\r\n\t\t\t\t\tif(value){\r\n\t\t\t\t\t\tvalue = \"{ \" + value.toLowerCase() + \" }\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tvalue = item.rule.cssText;\r\n\t\t\t\tif(value){\r\n\t\t\t\t\tvalue = value.substring(value.indexOf(\"{\"), value.length);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else if(attribute === \"styleSheet\"){\r\n\t\t\tvalue = item.rule.styleSheet;\r\n\t\t}else if(attribute === \"parentStyleSheet\"){\r\n\t\t\tvalue = item.rule.parentStyleSheet;\r\n\t\t}else if(attribute === \"parentStyleSheetHref\"){\r\n\t\t\tif(item.href){\r\n\t\t\t\tvalue = item.href;\r\n\t\t\t}\r\n\t\t}else if(attribute.indexOf(\"style.\") === 0){\r\n\t\t\tvar attr = attribute.substring(attribute.indexOf(\".\"), attribute.length);\r\n\t\t\tvalue = item.rule.style[attr];\r\n\t\t}else{\r\n\t\t\tvalue = [];\r\n\t\t}\r\n\t\tif(value !== undefined){\r\n\t\t\tif(!lang.isArray(value)){\r\n\t\t\t\tvalue = [value];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t},\r\n\r\n\tgetLabel: function(item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getLabel()\r\n\t\tthis._assertIsItem(item);\r\n\t\treturn this.getValue(item, this._labelAttribute);\r\n\t},\r\n\r\n\tgetLabelAttributes: function(item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getLabelAttributes()\r\n\t\treturn [this._labelAttribute];\r\n\t},\r\n\r\n\tcontainsValue: function(/* item */ item,\r\n\t\t\t\t\t\t\t/* attribute-name-string */ attribute,\r\n\t\t\t\t\t\t\t/* anything */ value){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.containsValue()\r\n\t\tvar regexp = undefined;\r\n\t\tif(typeof value === \"string\"){\r\n\t\t\tregexp = filter.patternToRegExp(value, false);\r\n\t\t}\r\n\t\treturn this._containsValue(item, attribute, value, regexp); //boolean.\r\n\t},\r\n\r\n\tisItemLoaded: function(/* anything */ something){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.isItemLoaded()\r\n\t\treturn this.isItem(something); //boolean\r\n\t},\r\n\r\n\tloadItem: function(/* object */ keywordArgs){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.loadItem()\r\n\t\tthis._assertIsItem(keywordArgs.item);\r\n\t},\r\n\r\n\tfetch: function(request){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.fetch()\r\n\t\trequest = request || {};\r\n\t\tif(!request.store){\r\n\t\t\trequest.store = this;\r\n\t\t}\r\n\r\n\t\tvar scope = request.scope || kernel.global;\r\n\t\tif(this._pending && this._pending.length > 0){\r\n\t\t\tthis._pending.push({request: request, fetch: true});\r\n\t\t}else{\r\n\t\t\tthis._pending = [{request: request, fetch: true}];\r\n\t\t\tthis._fetch(request);\r\n\t\t}\r\n\t\treturn request;\r\n\t},\r\n\r\n\t_fetch: function(request){\r\n\t\t// summary:\r\n\t\t//\t\tPopulates the _allItems object with unique class names\r\n\t\tvar scope = request.scope || kernel.global;\r\n\t\tif(this._allItems === null){\r\n\t\t\tthis._allItems = {};\r\n\t\t\ttry{\r\n\t\t\t\tif(this.gatherHandle){\r\n\t\t\t\t\tthis._waiting.push({'forFunc': lang.hitch(this, this._handleRule), 'finishFunc': lang.hitch(this, this._handleReturn)});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcss.rules.forEach(lang.hitch(this, this._handleRule), null, this.context);\r\n\t\t\t\t\tthis._handleReturn();\r\n\t\t\t\t}\r\n\t\t\t}catch(e){\r\n\t\t\t\tif(request.onError){\r\n\t\t\t\t\trequest.onError.call(scope, e, request);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis._handleReturn();\r\n\t\t}\r\n\t},\r\n\r\n\t_handleRule: function(rule, styleSheet, href){\r\n\t\t// summary:\r\n\t\t//\t\tHandles the creation of an item based on the passed rule.  In this store, this implies\r\n\t\t//\t\tparsing out all available class names.\r\n\t\tvar selector = rule['selectorText'];\r\n\t\tvar s = selector.split(\" \");\r\n\t\tvar classes = [];\r\n\t\tfor(var j=0; j<s.length; j++){\r\n\t\t\tvar tmp = s[j];\r\n\t\t\tvar first = tmp.indexOf('.');\r\n\t\t\tif(tmp && tmp.length > 0 && first !== -1){\r\n\t\t\t\tvar last = tmp.indexOf(',') || tmp.indexOf('[');\r\n\t\t\t\ttmp = tmp.substring(first, ((last !== -1 && last > first)?last:tmp.length));\r\n\t\t\t\tclasses.push(tmp);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar item = {};\r\n\t\titem.rule = rule;\r\n\t\titem.styleSheet = styleSheet;\r\n\t\titem.href = href;\r\n\t\titem.classes = classes;\r\n\t\titem[this._storeRef] = this;\r\n\t\tif(!this._allItems[selector]){\r\n\t\t\tthis._allItems[selector] = [];\r\n\t\t}\r\n\t\tthis._allItems[selector].push(item);\r\n\t},\r\n\r\n\t_handleReturn: function(){\r\n\t\t// summary:\r\n\t\t//\t\tHandles the return from a fetching action.  Delegates requests to act on the resulting\r\n\t\t//\t\titem set to eitehr the _handleFetchReturn or _handleFetchByIdentityReturn depending on\r\n\t\t//\t\twhere the request originated.\r\n\t\tvar _inProgress = [];\r\n\t\t\r\n\t\tvar items = [];\r\n\t\tvar item = null;\r\n\t\tfor(var i in this._allItems){\r\n\t\t\titem = this._allItems[i];\r\n\t\t\tfor(var j in item){\r\n\t\t\t\titems.push(item[j]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar requestInfo;\r\n\t\t// One-level deep clone (can't use dojo.clone, since we don't want to clone all those store refs!)\r\n\t\twhile(this._pending.length){\r\n\t\t\trequestInfo = this._pending.pop();\r\n\t\t\trequestInfo.request._items = items;\r\n\t\t\t_inProgress.push(requestInfo);\r\n\t\t}\r\n\r\n\t\twhile(_inProgress.length){\r\n\t\t\trequestInfo = _inProgress.pop();\r\n\t\t\tthis._handleFetchReturn(requestInfo.request);\r\n\t\t}\r\n\t},\r\n\r\n\t_handleFetchReturn: function(/*Request */ request){\r\n\t\t// summary:\r\n\t\t//\t\tHandles a fetchByIdentity request by finding the correct items.\r\n\t\tvar scope = request.scope || kernel.global;\r\n\t\tvar items = [];\r\n\t\t//Check to see if we've looked this query up before\r\n\t\t//If so, just reuse it, much faster.  Only regen if query changes.\r\n\t\tvar cacheKey = \"all\";\r\n\t\tvar i;\r\n\t\tif(request.query){\r\n\t\t\tcacheKey = jsonUtil.toJson(request.query);\r\n\t\t}\r\n\t\tif(this._cache[cacheKey]){\r\n\t\t\titems = this._cache[cacheKey];\r\n\t\t}else if(request.query){\r\n\t\t\tfor(i in request._items){\r\n\t\t\t\tvar item = request._items[i];\r\n\t\t\t\t// Per https://bugs.webkit.org/show_bug.cgi?id=17935 , Safari 3.x always returns the selectorText\r\n\t\t\t\t// of a rule in full lowercase.\r\n\t\t\t\tvar ignoreCase = (request.queryOptions ? request.queryOptions.ignoreCase : false);\r\n\t\t\t\tvar regexpList = {};\r\n\t\t\t\tvar key;\r\n\t\t\t\tvar value;\r\n\t\t\t\tfor(key in request.query){\r\n\t\t\t\t\tvalue = request.query[key];\r\n\t\t\t\t\tif(typeof value === \"string\"){\r\n\t\t\t\t\t\tregexpList[key] = filter.patternToRegExp(value, ignoreCase);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvar match = true;\r\n\t\t\t\tfor(key in request.query){\r\n\t\t\t\t\tvalue = request.query[key];\r\n\t\t\t\t\tif(!this._containsValue(item, key, value, regexpList[key])){\r\n\t\t\t\t\t\tmatch = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(match){\r\n\t\t\t\t\titems.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._cache[cacheKey] = items;\r\n\t\t}else{\r\n\t\t\tfor(i in request._items){\r\n\t\t\t\titems.push(request._items[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar total = items.length;\r\n\r\n\t\t//Sort it if we need to.\r\n\t\tif(request.sort){\r\n\t\t\titems.sort(sorter.createSortFunction(request.sort, this));\r\n\t\t}\r\n\t\tvar start = 0;\r\n\t\tvar count = items.length;\r\n\t\tif(request.start > 0 && request.start < items.length){\r\n\t\t\tstart = request.start;\r\n\t\t}\r\n\t\tif(request.count && request.count){\r\n\t\t\tcount = request.count;\r\n\t\t}\r\n\t\tvar endIdx = start + count;\r\n\t\tif(endIdx > items.length){\r\n\t\t\tendIdx = items.length;\r\n\t\t}\r\n\r\n\t\titems = items.slice(start, endIdx);\r\n\r\n\t\tif(request.onBegin){\r\n\t\t\trequest.onBegin.call(scope, total, request);\r\n\t\t}\r\n\t\tif(request.onItem){\r\n\t\t\tif(lang.isArray(items)){\r\n\t\t\t\tfor(i = 0; i < items.length; i++){\r\n\t\t\t\t\trequest.onItem.call(scope, items[i], request);\r\n\t\t\t\t}\r\n\t\t\t\tif(request.onComplete){\r\n\t\t\t\t\trequest.onComplete.call(scope, null, request);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else if(request.onComplete){\r\n\t\t\trequest.onComplete.call(scope, items, request);\r\n\t\t}\r\n\t\treturn request;\r\n\t},\r\n\r\n\tclose: function(){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.close().\r\n\t\t//\t\tClears out the cache and allItems objects, meaning all future fetches will requery\r\n\t\t//\t\tthe stylesheets.\r\n\t\tthis._cache = {};\r\n\t\tthis._allItems = null;\r\n\t},\r\n\t\r\n\t_assertIsItem: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tThis function tests whether the item passed in is indeed an item in the store.\r\n\t\t// item:\r\n\t\t//\t\tThe item to test for being contained by the store.\r\n\t\tif(!this.isItem(item)){\r\n\t\t\tthrow new Error(this._cName + \": Invalid item argument.\");\r\n\t\t}\r\n\t},\r\n\r\n\t_assertIsAttribute: function(/* attribute-name-string */ attribute){\r\n\t\t// summary:\r\n\t\t//\t\tThis function tests whether the item passed in is indeed a valid 'attribute' like type for the store.\r\n\t\t// attribute:\r\n\t\t//\t\tThe attribute to test for being contained by the store.\r\n\t\tif(typeof attribute !== \"string\"){\r\n\t\t\tthrow new Error(this._cName + \": Invalid attribute argument.\");\r\n\t\t}\r\n\t},\r\n\r\n\t_containsValue: function(\t/* item */ item,\r\n\t\t\t\t\t\t\t\t/* attribute-name-string */ attribute,\r\n\t\t\t\t\t\t\t\t/* anything */ value,\r\n\t\t\t\t\t\t\t\t/* RegExp?*/ regexp){\r\n\t\t// summary:\r\n\t\t//\t\tInternal function for looking at the values contained by the item.\r\n\t\t// description:\r\n\t\t//\t\tInternal function for looking at the values contained by the item.  This\r\n\t\t//\t\tfunction allows for denoting if the comparison should be case sensitive for\r\n\t\t//\t\tstrings or not (for handling filtering cases where string case should not matter)\r\n\t\t// item:\r\n\t\t//\t\tThe data item to examine for attribute values.\r\n\t\t// attribute:\r\n\t\t//\t\tThe attribute to inspect.\r\n\t\t// value:\r\n\t\t//\t\tThe value to match.\r\n\t\t// regexp:\r\n\t\t//\t\tOptional regular expression generated off value if value was of string type to handle wildcarding.\r\n\t\t//\t\tIf present and attribute values are string, then it can be used for comparison instead of 'value'\r\n\t\treturn array.some(this.getValues(item, attribute), function(possibleValue){\r\n\t\t\tif(possibleValue !== null && !lang.isObject(possibleValue) && regexp){\r\n\t\t\t\tif(possibleValue.toString().match(regexp)){\r\n\t\t\t\t\treturn true; // Boolean\r\n\t\t\t\t}\r\n\t\t\t}else if(value === possibleValue){\r\n\t\t\t\treturn true; // Boolean\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t});\r\n\t}\r\n});\r\n});\r\n"]}