{"version":3,"sources":["data/OpenSearchStore.js"],"names":["define","kernel","lang","declare","dxhr","array","window","query","simpleFetch","parser","experimental","OpenSearchStore","constructor","args","this","label","url","itemPath","urlPreventCache","def","get","handleAs","sync","preventCache","addCallback","addErrback","Error","_storeRef","urlElement","iframeElement","ATOM_CONTENT_TYPE","ATOM_CONTENT_TYPE_STRING","RSS_CONTENT_TYPE","RSS_CONTENT_TYPE_STRING","XML_CONTENT_TYPE","XML_CONTENT_TYPE_STRING","_assertIsItem","item","isItem","_assertIsAttribute","attribute","getFeatures","dojo.data.api.Read","getValue","defaultValue","values","getValues","getAttributes","hasAttribute","isItemLoaded","loadItem","keywordArgs","getLabel","getLabelAttributes","containsValue","value","i","length","processItem","close","request","process","data","contentType","node","_createSearchUrl","template","attributes","getNamedItem","nodeValue","index","indexOf","substring","searchTerms","forEach","name","test","count","start","startPage","language","inputEncoding","outputEncoding","replace","_fetchItems","fetchHandler","errorHandler","self","getArgs","xhr","error","items","_processOSDxml","div","doc","createElement","innerHTML","_processItemxml","_processOSDatom","_processOSDfeed","_processItematom","_processItemfeed","_processOSDrss","_processItemrss","type","nodeList","dojox","xml","parse","getElementsByTagName","push","content","_getNodeXml","skipFirst","nodeType","attr","tagName","nodeName","childNodes","join","_processOsdd","urlnodes","types","currentType","toLowerCase","extend"],"mappings":"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","file":"../../data/OpenSearchStore.js","sourcesContent":["define([\r\n\t\"dojo/_base/kernel\", // dojo.experimental\r\n\t\"dojo/_base/lang\", // dojo.extend\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/xhr\", // dojo.xhrGet\r\n\t\"dojo/_base/array\", // dojo.forEach\r\n\t\"dojo/_base/window\", // dojo.doc\r\n\t\"dojo/query\",\r\n\t\"dojo/data/util/simpleFetch\",\r\n\t\"dojox/xml/parser\"], function (kernel, lang, declare, dxhr, array, window, query, simpleFetch, parser) {\r\nkernel.experimental(\"dojox.data.OpenSearchStore\");\r\n\r\nvar OpenSearchStore = declare(\"dojox.data.OpenSearchStore\", null, {\r\n\tconstructor: function(/*Object*/args){\r\n\t\t// summary:\r\n\t\t//\t\tInitializer for the OpenSearchStore store.\r\n\t\t// description:\r\n\t\t//\t\tThe OpenSearchStore is a Datastore interface to any search\r\n\t\t//\t\tengine that implements the open search specifications.\r\n\t\tif(args){\r\n\t\t\tthis.label = args.label;\r\n\t\t\tthis.url = args.url;\r\n\t\t\tthis.itemPath = args.itemPath;\r\n\t\t\tif(\"urlPreventCache\" in args){\r\n\t\t\t\tthis.urlPreventCache = args.urlPreventCache?true:false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar def = dxhr.get({\r\n\t\t\turl: this.url,\r\n\t\t\thandleAs: \"xml\",\r\n\t\t\tsync: true,\r\n\t\t\tpreventCache: this.urlPreventCache\r\n\t\t});\r\n\t\tdef.addCallback(this, \"_processOsdd\");\r\n\t\tdef.addErrback(function(){\r\n\t\t\tthrow new Error(\"Unable to load OpenSearch Description document from \" . args.url);\r\n\t\t});\r\n\t},\r\n\t\r\n\t// URL to the open search description document\r\n\turl: \"\",\r\n\titemPath: \"\",\r\n\t_storeRef: \"_S\",\r\n\turlElement: null,\r\n\tiframeElement: null,\r\n\r\n\t// urlPreventCache: boolean\r\n\t//\t\tFlag denoting if xhrGet calls should use the preventCache option.\r\n\turlPreventCache: true,\r\n\t\r\n\tATOM_CONTENT_TYPE: 3,\r\n\tATOM_CONTENT_TYPE_STRING: \"atom\",\r\n\tRSS_CONTENT_TYPE: 2,\r\n\tRSS_CONTENT_TYPE_STRING: \"rss\",\r\n\tXML_CONTENT_TYPE: 1,\r\n\tXML_CONTENT_TYPE_STRING: \"xml\",\r\n\r\n\t_assertIsItem: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tThis function tests whether the item passed in is indeed an item in the store.\r\n\t\t// item:\r\n\t\t//\t\tThe item to test for being contained by the store.\r\n\t\tif(!this.isItem(item)){\r\n\t\t\tthrow new Error(\"dojox.data.OpenSearchStore: a function was passed an item argument that was not an item\");\r\n\t\t}\r\n\t},\r\n\r\n\t_assertIsAttribute: function(/* attribute-name-string */ attribute){\r\n\t\t// summary:\r\n\t\t//\t\tThis function tests whether the item passed in is indeed a valid 'attribute' like type for the store.\r\n\t\t// attribute:\r\n\t\t//\t\tThe attribute to test for being contained by the store.\r\n\t\tif(typeof attribute !== \"string\"){\r\n\t\t\tthrow new Error(\"dojox.data.OpenSearchStore: a function was passed an attribute argument that was not an attribute name string\");\r\n\t\t}\r\n\t},\r\n\r\n\tgetFeatures: function(){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getFeatures()\r\n\t\treturn {\r\n\t\t\t'dojo.data.api.Read': true\r\n\t\t};\r\n\t},\r\n\r\n\tgetValue: function(item, attribute, defaultValue){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getValue()\r\n\t\tvar values = this.getValues(item, attribute);\r\n\t\tif(values){\r\n\t\t\treturn values[0];\r\n\t\t}\r\n\t\treturn defaultValue;\r\n\t},\r\n\r\n\tgetAttributes: function(item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getAttributes()\r\n\t\treturn [\"content\"];\r\n\t},\r\n\r\n\thasAttribute: function(item, attribute){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.hasAttributes()\r\n\t\tif(this.getValue(item,attribute)){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\r\n\tisItemLoaded: function(item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.isItemLoaded()\r\n\t\treturn this.isItem(item);\r\n\t},\r\n\r\n\tloadItem: function(keywordArgs){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.loadItem()\r\n\t},\r\n\r\n\tgetLabel: function(item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getLabel()\r\n\t\treturn undefined;\r\n\t},\r\n\t\r\n\tgetLabelAttributes: function(item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getLabelAttributes()\r\n\t\treturn null;\r\n\t},\r\n\r\n\tcontainsValue: function(item, attribute, value){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.containsValue()\r\n\t\tvar values = this.getValues(item,attribute);\r\n\t\tfor(var i = 0; i < values.length; i++){\r\n\t\t\tif(values[i] === value){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\r\n\tgetValues: function(item, attribute){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getValue()\r\n\r\n\t\tthis._assertIsItem(item);\r\n\t\tthis._assertIsAttribute(attribute);\r\n\t\tvar value = this.processItem(item, attribute);\r\n\t\tif(value){\r\n\t\t\treturn [value];\r\n\t\t}\r\n\t\treturn undefined;\r\n\t},\r\n\r\n\tisItem: function(item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.isItem()\r\n\t\tif(item && item[this._storeRef] === this){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\t\r\n\tclose: function(request){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.close()\r\n\t},\r\n\t\r\n\tprocess: function(data){\r\n\t\t// This should return an array of items.  This would be the function to override if the\r\n\t\t// developer wanted to customize the processing/parsing of the entire batch of search\r\n\t\t// results.\r\n\t\treturn this[\"_processOSD\"+this.contentType](data);\r\n\t},\r\n\t\r\n\tprocessItem: function(item, attribute){\r\n\t\t// This returns the text that represents the item.  If a developer wanted to customize\r\n\t\t// how an individual item is rendered/parsed, they'd override this function.\r\n\t\treturn this[\"_processItem\"+this.contentType](item.node, attribute);\r\n\t},\r\n\t\r\n\t_createSearchUrl: function(request){\r\n\t\tvar template = this.urlElement.attributes.getNamedItem(\"template\").nodeValue;\r\n\t\tvar attrs = this.urlElement.attributes;\r\n\t\tvar index = template.indexOf(\"{searchTerms}\");\r\n\t\ttemplate = template.substring(0, index) + request.query.searchTerms + template.substring(index+13);\r\n\t\t\r\n\t\tarray.forEach([\t{'name': 'count', 'test': request.count, 'def': '10'},\r\n\t\t\t\t\t\t{'name': 'startIndex', 'test': request.start, 'def': this.urlElement.attributes.getNamedItem(\"indexOffset\")?this.urlElement.attributes.getNamedItem(\"indexOffset\").nodeValue:0},\r\n\t\t\t\t\t\t{'name': 'startPage', 'test': request.startPage, 'def': this.urlElement.attributes.getNamedItem(\"pageOffset\")?this.urlElement.attributes.getNamedItem(\"pageOffset\").nodeValue:0},\r\n\t\t\t\t\t\t{'name': 'language', 'test': request.language, 'def': \"*\"},\r\n\t\t\t\t\t\t{'name': 'inputEncoding', 'test': request.inputEncoding, 'def': 'UTF-8'},\r\n\t\t\t\t\t\t{'name': 'outputEncoding', 'test': request.outputEncoding, 'def': 'UTF-8'}\r\n\t\t\t\t\t], function(item){\r\n\t\t\ttemplate = template.replace('{'+item.name+'}', item.test || item.def);\r\n\t\t\ttemplate = template.replace('{'+item.name+'?}', item.test || item.def);\r\n\t\t});\r\n\t\treturn template;\r\n\t},\r\n\r\n\t_fetchItems: function(request, fetchHandler, errorHandler){\r\n\t\t// summary:\r\n\t\t//\t\tFetch OpenSearch items that match to a query\r\n\t\t// request:\r\n\t\t//\t\tA request object\r\n\t\t// fetchHandler:\r\n\t\t//\t\tA function to call for fetched items\r\n\t\t// errorHandler:\r\n\t\t//\t\tA function to call on error\r\n\r\n\t\tif(!request.query){\r\n\t\t\trequest.query={};\r\n\t\t}\r\n\r\n\t\t//Build up the content using information from the request\r\n\t\tvar self = this;\r\n\t\tvar url = this._createSearchUrl(request);\r\n\t\tvar getArgs = {\r\n\t\t\turl: url,\r\n\t\t\tpreventCache: this.urlPreventCache\r\n\t\t};\r\n\r\n\t\t// Change to fetch the query results.\r\n\t\tvar xhr = dxhr.get(getArgs);\r\n\r\n\t\txhr.addErrback(function(error){\r\n\t\t\terrorHandler(error, request);\r\n\t\t});\r\n\r\n\t\txhr.addCallback(function(data){\r\n\t\t\tvar items = [];\r\n\t\t\tif(data){\r\n\t\t\t\t//Process the items...\r\n\t\t\t\titems = self.process(data);\r\n\t\t\t\tfor(var i=0; i < items.length; i++){\r\n\t\t\t\t\titems[i] = {node: items[i]};\r\n\t\t\t\t\titems[i][self._storeRef] = self;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfetchHandler(items, request);\r\n\t\t});\r\n\t},\r\n\t\r\n\t_processOSDxml: function(data){\r\n\t\tvar div = window.doc.createElement(\"div\");\r\n\t\tdiv.innerHTML = data;\r\n\t\treturn query(this.itemPath, div);\r\n\t},\r\n\t\r\n\t_processItemxml: function(item, attribute){\r\n\t\tif(attribute === \"content\"){\r\n\t\t\treturn item.innerHTML;\r\n\t\t}\r\n\t\treturn undefined;\r\n\t},\r\n\t\r\n\t_processOSDatom: function(data){\r\n\t\treturn this._processOSDfeed(data, \"entry\");\r\n\t},\r\n\r\n\t_processItematom: function(item, attribute){\r\n\t\treturn this._processItemfeed(item, attribute, \"content\");\r\n\t},\r\n\r\n\t_processOSDrss: function(data){\r\n\t\treturn this._processOSDfeed(data, \"item\");\r\n\t},\r\n\r\n\t_processItemrss: function(item, attribute){\r\n\t\treturn this._processItemfeed(item, attribute, \"description\");\r\n\t},\r\n\r\n\t_processOSDfeed: function(data, type){\r\n\t\tdata = dojox.xml.parser.parse(data);\r\n\t\tvar items = [];\r\n\t\tvar nodeList = data.getElementsByTagName(type);\r\n\t\tfor(var i=0; i<nodeList.length; i++){\r\n\t\t\titems.push(nodeList.item(i));\r\n\t\t}\r\n\t\treturn items;\r\n\t},\r\n\r\n\t_processItemfeed: function(item, attribute, type){\r\n\t\tif(attribute === \"content\"){\r\n\t\t\tvar content = item.getElementsByTagName(type).item(0);\r\n\t\t\treturn this._getNodeXml(content, true);\r\n\t\t}\r\n\t\treturn undefined;\r\n\t},\r\n\t\r\n\t_getNodeXml: function(node, skipFirst){\r\n\t\tvar i;\r\n\t\tswitch(node.nodeType){\r\n\t\t\tcase 1:\r\n\t\t\t\tvar xml = [];\r\n\t\t\t\tif(!skipFirst){\r\n\t\t\t\t\txml.push(\"<\"+node.tagName);\r\n\t\t\t\t\tvar attr;\r\n\t\t\t\t\tfor(i=0; i<node.attributes.length; i++){\r\n\t\t\t\t\t\tattr = node.attributes.item(i);\r\n\t\t\t\t\t\txml.push(\" \"+attr.nodeName+\"=\\\"\"+attr.nodeValue+\"\\\"\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\txml.push(\">\");\r\n\t\t\t\t}\r\n\t\t\t\tfor(i=0; i<node.childNodes.length; i++){\r\n\t\t\t\t\txml.push(this._getNodeXml(node.childNodes.item(i)));\r\n\t\t\t\t}\r\n\t\t\t\tif(!skipFirst){\r\n\t\t\t\t\txml.push(\"</\"+node.tagName+\">\\n\");\r\n\t\t\t\t}\r\n\t\t\t\treturn xml.join(\"\");\r\n\t\t\tcase 3:\r\n\t\t\tcase 4:\r\n\t\t\t\treturn node.nodeValue;\r\n\t\t}\r\n\t\treturn undefined;\r\n\t},\r\n\r\n\t_processOsdd: function(doc){\r\n\t\tvar urlnodes = doc.getElementsByTagName(\"Url\");\r\n\t\t//TODO: Check all the urlnodes and determine what our best one is...\r\n\t\tvar types = [];\r\n\t\tvar contentType;\r\n\t\tvar i;\r\n\t\tfor(i=0; i<urlnodes.length; i++){\r\n\t\t\tcontentType = urlnodes[i].attributes.getNamedItem(\"type\").nodeValue;\r\n\t\t\tswitch(contentType){\r\n\t\t\t\tcase \"application/rss+xml\":\r\n\t\t\t\t\ttypes[i] = this.RSS_CONTENT_TYPE;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"application/atom+xml\":\r\n\t\t\t\t\ttypes[i] = this.ATOM_CONTENT_TYPE;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\ttypes[i] = this.XML_CONTENT_TYPE;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar index = 0;\r\n\t\tvar currentType = types[0];\r\n\t\tfor(i=1; i<urlnodes.length; i++){\r\n\t\t\tif(types[i]>currentType){\r\n\t\t\t\tindex = i;\r\n\t\t\t\tcurrentType = types[i];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// We'll be using urlnodes[index] as it's the best option (ATOM > RSS > XML)\r\n\t\tvar label = urlnodes[index].nodeName.toLowerCase();\r\n\t\tif(label == 'url'){\r\n\t\t\tvar urlattrs = urlnodes[index].attributes;\r\n\t\t\tthis.urlElement = urlnodes[index];\r\n\t\t\tswitch(types[index]){\r\n\t\t\t\tcase this.ATOM_CONTENT_TYPE:\r\n\t\t\t\t\tthis.contentType = this.ATOM_CONTENT_TYPE_STRING;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase this.RSS_CONTENT_TYPE:\r\n\t\t\t\t\tthis.contentType = this.RSS_CONTENT_TYPE_STRING;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase this.XML_CONTENT_TYPE:\r\n\t\t\t\t\tthis.contentType = this.XML_CONTENT_TYPE_STRING;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\nreturn lang.extend(OpenSearchStore,simpleFetch);\r\n});\r\n"]}