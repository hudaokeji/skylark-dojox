{"version":3,"sources":["data/S3Store.js"],"names":["define","declare","JsonRestStore","ProxiedPath","_processResults","results","keyElements","getElementsByTagName","jsResults","self","this","i","length","val","_loadObject","key","callback","service","addCallback","firstChild","nodeValue","push","totalCount","items"],"mappings":";;;;;;;AAAAA,QAAQ,qBAAsB,2BAA4B,yBACxD,SAASC,EAASC,EAAeC,GACnC,OAAOF,EAAQ,qBAAsBC,GAKnCE,gBAAkB,SAASC,GAK1B,IAHA,IAAIC,EAAcD,EAAQE,qBAAqB,OAC3CC,KACAC,EAAOC,KACHC,EAAE,EAAGA,EAAGL,EAAYM,OAAOD,IAAI,CACtC,IAEIE,GACHC,YAAa,SAAUC,EAAIF,GAC1B,OAAO,SAASG,UAERN,KAAKI,YACZL,EAAKQ,QAAQF,GAAKG,YAAYF,IAJnB,CAHGV,EAAYK,GASdQ,WAAWC,YAE1BZ,EAAUa,KAAKR,GAGhB,OAAQS,WAAWd,EAAUI,OAAQW,MAAOf","file":"../../data/S3Store.js","sourcesContent":["define([\"dojo/_base/declare\", \"dojox/data/JsonRestStore\", \"dojox/rpc/ProxiedPath\"], \r\n  function(declare, JsonRestStore, ProxiedPath) {\r\nreturn declare(\"dojox.data.S3Store\", JsonRestStore,\r\n\t{\r\n\t// summary:\r\n\t//\t\tS3JsonRestStore is an extension of JsonRestStore to handle\r\n\t//\t\tAmazon's S3 service using JSON data\r\n\t\t_processResults : function(results){\r\n\t\t\t// unfortunately, S3 returns query results in XML form\r\n\t\t\tvar keyElements = results.getElementsByTagName(\"Key\");\r\n\t\t\tvar jsResults = [];\r\n\t\t\tvar self = this;\r\n\t\t\tfor(var i=0; i <keyElements.length;i++){\r\n\t\t\t\tvar keyElement = keyElements[i];\r\n\t\t\t\t// manually create lazy loaded Deferred items for each item in the result array\r\n\t\t\t\tvar val = {\r\n\t\t\t\t\t_loadObject: (function(key,val){\r\n\t\t\t\t\t\treturn function(callback){\r\n\t\t\t\t\t\t\t// when a callback is added we will fetch it\r\n\t\t\t\t\t\t\tdelete this._loadObject;\r\n\t\t\t\t\t\t\tself.service(key).addCallback(callback);\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})(keyElement.firstChild.nodeValue,val)\r\n\t\t\t\t};\r\n\t\t\t\tjsResults.push(val);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn {totalCount:jsResults.length, items: jsResults};\r\n\t\t}\r\n\t}\r\n);\r\n\r\n});\r\n"]}