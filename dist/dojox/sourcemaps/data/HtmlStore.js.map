{"version":3,"sources":["data/HtmlStore.js"],"names":["define","declare","array","lang","dom","xhr","kernel","simpleFetch","filter","xmlParser","HtmlStore","constructor","args","this","urlPreventCache","trimWhitespace","url","dataId","Error","fetchOnCreate","fetch","_indexItems","_getHeadings","_rootNode","rows","i","tBodies","length","_ident","c","childNodes","nodeType","_headings","tHead","forEach","cells","hitch","th","text","textContent","push","trim","_getAllItems","items","_assertIsItem","item","isItem","_assertIsAttribute","attribute","indexOf","getValue","defaultValue","values","getValues","index","getAttributes","attributes","hasAttribute","containsValue","value","regexp","undefined","patternToRegExp","_containsValue","possibleValue","match","something","isDescendant","isItemLoaded","loadItem","keywordArgs","_fetchItems","request","fetchHandler","errorHandler","_finishFetchItems","getArgs","handleAs","preventCache","self","getHandler","get","addCallback","data","findNode","node","id","returnNode","d","document","createElement","innerHTML","addErrback","error","byId","arrayOfAllItems","query","ignoreCase","queryOptions","key","regexpList","candidateItem","slice","getFeatures","dojo.data.api.Read","dojo.data.api.Identity","close","getLabel","getIdentity","getLabelAttributes","getIdentityAttributes","fetchItemByIdentity","identity","scope","onItem","global","call","onError","extend"],"mappings":"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","file":"../../data/HtmlStore.js","sourcesContent":["define([\"dojo/_base/declare\", \"dojo/_base/array\", \"dojo/_base/lang\", \"dojo/dom\", \"dojo/_base/xhr\", \"dojo/_base/kernel\",\r\n\t\t\"dojo/data/util/simpleFetch\", \"dojo/data/util/filter\", \"dojox/xml/parser\"], \r\n  function(declare, array, lang, dom, xhr, kernel, simpleFetch, filter, xmlParser) {\r\n\r\nvar HtmlStore = declare(\"dojox.data.HtmlStore\", null, {\r\n\tconstructor: function(/*Object*/ args){\r\n\t\t// summary:\r\n\t\t//\t\tInitializer for the HTML table store.\r\n\t\t// description:\r\n\t\t//\t\tThe HtmlStore can be created in one of two ways: a) by parsing an existing\r\n\t\t//\t\ttable or list DOM node on the current page or b) by referencing an external url and giving\r\n\t\t//\t\tthe id of the table or list in that page.  The remote url will be parsed as an html page.\r\n\t\t//\r\n\t\t//\t\tThe HTML table or list should be of the following form:\r\n\t\t//\r\n\t\t//\t\t|\t<table id=\"myTable\">\r\n\t\t//\t\t|\t\t<thead>\r\n\t\t//\t\t|\t\t\t<tr>\r\n\t\t//\t\t|\t\t\t\t<th>Attribute1</th>\r\n\t\t//\t\t|\t\t\t\t<th>Attribute2</th>\r\n\t\t//\t\t|\t\t\t</tr>\r\n\t\t//\t\t|\t\t</thead>\r\n\t\t//\t\t|\t\t<tbody>\r\n\t\t//\t\t|\t\t\t<tr>\r\n\t\t//\t\t|\t\t\t\t<td>Value1.1</td>\r\n\t\t//\t\t|\t\t\t\t<td>Value1.2</td>\r\n\t\t//\t\t|\t\t\t</tr>\r\n\t\t//\t\t|\t\t\t<tr>\r\n\t\t//\t\t|\t\t\t\t<td>Value2.1</td>\r\n\t\t//\t\t|\t\t\t\t<td>Value2.2</td>\r\n\t\t//\t\t|\t\t\t</tr>\r\n\t\t//\t\t|\t\t</tbody>\r\n\t\t//\t\t|\t</table>\r\n\t\t//\r\n\t\t//\t\t-or-\r\n\t\t//\r\n\t\t//\t\t|\t<ul id=\"myUnorderedList\">\r\n\t\t//\t\t|\t\t<li>Value.1</li>\r\n\t\t//\t\t|\t\t<li>Value.2</li>\r\n\t\t//\t\t|\t</ul>\r\n\t\t//\r\n\t\t//\t\t-or-\r\n\t\t//\r\n\t\t//\t\t|\t<ol id=\"myOrderedList\">\r\n\t\t//\t\t|\t\t<li>Value.1</li>\r\n\t\t//\t\t|\t\t<li>Value.2</li>\r\n\t\t//\t\t|\t</ol>\r\n\t\t//\r\n\t\t// args:\r\n\t\t//\t\tAn anonymous object to initialize properties.  It expects the following values:\r\n\t\t//\r\n\t\t//\t\t- dataId:\tThe id of the HTML table to use.\r\n\t\t//\r\n\t\t//\t\tOR\r\n\t\t//\r\n\t\t//\t\t- url:\tThe url of the remote page to load\r\n\t\t//\t\t- dataId:\tThe id of the table element in the remote page\r\n\t\t//\r\n\t\t//\t\tand the option:\r\n\t\t//\r\n\t\t//\t\t- trimWhitespace:  Trim off any surrounding whitespace from the headers (attribute\r\n\t\t//\t\tnames) and text content of the items in question.  Default is false for\r\n\t\t//\t\tbackwards compatibility.\r\n\r\n\t\tif(args && \"urlPreventCache\" in args){\r\n\t\t\tthis.urlPreventCache = args.urlPreventCache?true:false;\r\n\t\t}\r\n\t\tif(args && \"trimWhitespace\" in args){\r\n\t\t\tthis.trimWhitespace = args.trimWhitespace?true:false;\r\n\t\t}\r\n\t\tif(args.url){\r\n\t\t\tif(!args.dataId){\r\n\t\t\t\tthrow new Error(\"dojo.data.HtmlStore: Cannot instantiate using url without an id!\");\r\n\t\t\t}\r\n\t\t\tthis.url = args.url;\r\n\t\t\tthis.dataId = args.dataId;\r\n\t\t}else{\r\n\t\t\tif(args.dataId){\r\n\t\t\t\tthis.dataId = args.dataId;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(args && \"fetchOnCreate\" in args){\r\n\t\t\tthis.fetchOnCreate = args.fetchOnCreate?true:false;\r\n\t\t}\r\n\t\tif(this.fetchOnCreate && this.dataId){\r\n\t\t\tthis.fetch();\r\n\t\t}\r\n\t},\r\n\r\n\t// url: [public] string\r\n\t//\t\tThe URL from which to load an HTML document for data loading\r\n\turl: \"\",\r\n\t\r\n\t// dataId: [public] string\r\n\t//\t\tThe id in the document for an element from which to get the data.\r\n\tdataId: \"\",\r\n\r\n\t// trimWhitepace: [public] boolean\r\n\t//\t\tBoolean flag to denote if the store should trim whitepace around\r\n\t//\t\theader and data content of a node.  This matters if reformatters\r\n\t//\t\talter the white spacing around the tags.  The default is false for\r\n\t//\t\tbackwards compat.\r\n\ttrimWhitespace: false,\r\n\r\n\t// urlPreventCache: [public] boolean\r\n\t//\t\tFlag to denote if peventCache should be used on xhrGet calls.\r\n\turlPreventCache: false,\r\n\t\r\n\t// fetchOnCreate: [public] boolean\r\n\t//\t\tFlag to denote if it should try to load from a data id (nested in the page)\r\n\t//\t\tThe moment the store is created, instead of waiting for first\r\n\t//\t\tfetch call.\r\n\tfetchOnCreate: false,\r\n\t\r\n\t_indexItems: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to index items found under the id.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tthis._getHeadings();\r\n\t\tif(this._rootNode.rows){//tables\r\n\t\t\tif(this._rootNode.tBodies && this._rootNode.tBodies.length > 0){\r\n\t\t\t\tthis._rootNode = this._rootNode.tBodies[0];\r\n\t\t\t}\r\n\t\t\tvar i;\r\n\t\t\tfor(i=0; i<this._rootNode.rows.length; i++){\r\n\t\t\t\tthis._rootNode.rows[i]._ident = i+1;\r\n\t\t\t}\r\n\t\t}else{//lists\r\n\t\t\tvar c=1;\r\n\t\t\tfor(i=0; i<this._rootNode.childNodes.length; i++){\r\n\t\t\t\tif(this._rootNode.childNodes[i].nodeType === 1){\r\n\t\t\t\t\tthis._rootNode.childNodes[i]._ident = c;\r\n\t\t\t\t\tc++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_getHeadings: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to load the attribute names from the table header so that the\r\n\t\t//\t\tattributes (cells in a row), can have a reasonable name.\r\n\t\t//\t\tFor list items, returns single implicit heading, [\"name\"]\r\n\t\tthis._headings = [];\r\n\t\tif(this._rootNode.tHead){\r\n\t\t\tarray.forEach(this._rootNode.tHead.rows[0].cells, lang.hitch(this, function(th){\r\n\t\t\t\tvar text = xmlParser.textContent(th);\r\n\t\t\t\tthis._headings.push(this.trimWhitespace?lang.trim(text):text);\r\n\t\t\t}));\r\n\t\t}else{\r\n\t\t\tthis._headings = [\"name\"];\r\n\t\t}\r\n\t},\r\n\t\r\n\t_getAllItems: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to return all rows in the table as an array of items.\r\n\t\tvar items = [];\r\n\t\tvar i;\r\n\t\tif(this._rootNode.rows){//table\r\n\t\t\tfor(i=0; i<this._rootNode.rows.length; i++){\r\n\t\t\t\titems.push(this._rootNode.rows[i]);\r\n\t\t\t}\r\n\t\t}else{ //list\r\n\t\t\tfor(i=0; i<this._rootNode.childNodes.length; i++){\r\n\t\t\t\tif(this._rootNode.childNodes[i].nodeType === 1){\r\n\t\t\t\t\titems.push(this._rootNode.childNodes[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn items; //array\r\n\t},\r\n\t\r\n\t_assertIsItem: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tThis function tests whether the item passed in is indeed an item in the store.\r\n\t\t// item:\r\n\t\t//\t\tThe item to test for being contained by the store.\r\n\t\tif(!this.isItem(item)){\r\n\t\t\tthrow new Error(\"dojo.data.HtmlStore: a function was passed an item argument that was not an item\");\r\n\t\t}\r\n\t},\r\n\r\n\t_assertIsAttribute: function(/* String */ attribute){\r\n\t\t// summary:\r\n\t\t//\t\tThis function tests whether the item passed in is indeed a valid 'attribute' like type for the store.\r\n\t\t// attribute:\r\n\t\t//\t\tThe attribute to test for being contained by the store.\r\n\t\t// returns:\r\n\t\t//\t\tReturns the index (column) that the attribute resides in the row.\r\n\t\tif(typeof attribute !== \"string\"){\r\n\t\t\tthrow new Error(\"dojo.data.HtmlStore: a function was passed an attribute argument that was not an attribute name string\");\r\n\t\t}\r\n\t\treturn array.indexOf(this._headings, attribute); //int\r\n\t},\r\n\r\n/***************************************\r\n\t dojo/data/api/Read API\r\n***************************************/\r\n\t\r\n\tgetValue: function(\t/* item */ item,\r\n\t\t\t\t\t\t/* attribute-name-string */ attribute,\r\n\t\t\t\t\t\t/* value? */ defaultValue){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getValue()\r\n\t\tvar values = this.getValues(item, attribute);\r\n\t\treturn (values.length > 0)?values[0]:defaultValue; // Object|Number|Boolean\r\n\t},\r\n\r\n\tgetValues: function(/* item */ item,\r\n\t\t\t\t\t\t/* attribute-name-string */ attribute){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getValues()\r\n\r\n\t\tthis._assertIsItem(item);\r\n\t\tvar index = this._assertIsAttribute(attribute);\r\n\t\tif(index>-1){\r\n\t\t\tvar text;\r\n\t\t\tif(item.cells){\r\n\t\t\t\ttext = xmlParser.textContent(item.cells[index]);\r\n\t\t\t}else{//return Value for lists\r\n\t\t\t\ttext = xmlParser.textContent(item);\r\n\t\t\t}\r\n\t\t\treturn [this.trimWhitespace?lang.trim(text):text];\r\n\t\t}\r\n\t\treturn []; //Array\r\n\t},\r\n\r\n\tgetAttributes: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getAttributes()\r\n\t\tthis._assertIsItem(item);\r\n\t\tvar attributes = [];\r\n\t\tfor(var i=0; i<this._headings.length; i++){\r\n\t\t\tif(this.hasAttribute(item, this._headings[i]))\r\n\t\t\t\tattributes.push(this._headings[i]);\r\n\t\t}\r\n\t\treturn attributes; //Array\r\n\t},\r\n\r\n\thasAttribute: function(\t/* item */ item,\r\n\t\t\t\t\t\t\t/* attribute-name-string */ attribute){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.hasAttribute()\r\n\t\treturn this.getValues(item, attribute).length > 0;\r\n\t},\r\n\r\n\tcontainsValue: function(/* item */ item,\r\n\t\t\t\t\t\t\t/* attribute-name-string */ attribute,\r\n\t\t\t\t\t\t\t/* anything */ value){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.containsValue()\r\n\t\tvar regexp = undefined;\r\n\t\tif(typeof value === \"string\"){\r\n\t\t\tregexp = filter.patternToRegExp(value, false);\r\n\t\t}\r\n\t\treturn this._containsValue(item, attribute, value, regexp); //boolean.\r\n\t},\r\n\r\n\t_containsValue: function(\t/* item */ item,\r\n\t\t\t\t\t\t\t\t/* attribute-name-string */ attribute,\r\n\t\t\t\t\t\t\t\t/* anything */ value,\r\n\t\t\t\t\t\t\t\t/* RegExp?*/ regexp){\r\n\t\t// summary:\r\n\t\t//\t\tInternal function for looking at the values contained by the item.\r\n\t\t// description:\r\n\t\t//\t\tInternal function for looking at the values contained by the item.  This\r\n\t\t//\t\tfunction allows for denoting if the comparison should be case sensitive for\r\n\t\t//\t\tstrings or not (for handling filtering cases where string case should not matter)\r\n\t\t// item:\r\n\t\t//\t\tThe data item to examine for attribute values.\r\n\t\t// attribute:\r\n\t\t//\t\tThe attribute to inspect.\r\n\t\t// value:\r\n\t\t//\t\tThe value to match.\r\n\t\t// regexp:\r\n\t\t//\t\tOptional regular expression generated off value if value was of string type to handle wildcarding.\r\n\t\t//\t\tIf present and attribute values are string, then it can be used for comparison instead of 'value'\r\n\t\tvar values = this.getValues(item, attribute);\r\n\t\tfor(var i = 0; i < values.length; ++i){\r\n\t\t\tvar possibleValue = values[i];\r\n\t\t\tif(typeof possibleValue === \"string\" && regexp){\r\n\t\t\t\treturn (possibleValue.match(regexp) !== null);\r\n\t\t\t}else{\r\n\t\t\t\t//Non-string matching.\r\n\t\t\t\tif(value === possibleValue){\r\n\t\t\t\t\treturn true; // Boolean\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false; // Boolean\r\n\t},\r\n\r\n\tisItem: function(/* anything */ something){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.isItem()\r\n\t\treturn something && dom.isDescendant(something, this._rootNode);\r\n\t},\r\n\r\n\tisItemLoaded: function(/* anything */ something){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.isItemLoaded()\r\n\t\treturn this.isItem(something);\r\n\t},\r\n\r\n\tloadItem: function(/* Object */ keywordArgs){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.loadItem()\r\n\t\tthis._assertIsItem(keywordArgs.item);\r\n\t},\r\n\t\r\n\t_fetchItems: function(request, fetchHandler, errorHandler){\r\n\t\t// summary:\r\n\t\t//\t\tFetch items (XML elements) that match to a query\r\n\t\t// description:\r\n\t\t//\t\tIf '_fetchUrl' is specified, it is used to load an XML document\r\n\t\t//\t\twith a query string.\r\n\t\t//\t\tOtherwise and if 'url' is specified, the XML document is\r\n\t\t//\t\tloaded and list XML elements that match to a query (set of element\r\n\t\t//\t\tnames and their text attribute values that the items to contain).\r\n\t\t//\t\tA wildcard, \"*\" can be used to query values to match all\r\n\t\t//\t\toccurrences.\r\n\t\t//\t\tIf '_rootItem' is specified, it is used to fetch items.\r\n\t\t// request:\r\n\t\t//\t\tA request object\r\n\t\t// fetchHandler:\r\n\t\t//\t\tA function to call for fetched items\r\n\t\t// errorHandler:\r\n\t\t//\t\tA function to call on error\r\n\t\t\r\n\t\tif(this._rootNode){\r\n\t\t\tthis._finishFetchItems(request, fetchHandler, errorHandler);\r\n\t\t}else{\r\n\t\t\tif(!this.url){\r\n\t\t\t\tthis._rootNode = dom.byId(this.dataId);\r\n\t\t\t\tthis._indexItems();\r\n\t\t\t\tthis._finishFetchItems(request, fetchHandler, errorHandler);\r\n\t\t\t}else{\r\n\t\t\t\tvar getArgs = {\r\n\t\t\t\t\t\turl: this.url,\r\n\t\t\t\t\t\thandleAs: \"text\",\r\n\t\t\t\t\t\tpreventCache: this.urlPreventCache\r\n\t\t\t\t\t};\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tvar getHandler = xhr.get(getArgs);\r\n\t\t\t\tgetHandler.addCallback(function(data){\r\n\t\t\t\t\tvar findNode = function(node, id){\r\n\t\t\t\t\t\tif(node.id == id){\r\n\t\t\t\t\t\t\treturn node; //object\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(node.childNodes){\r\n\t\t\t\t\t\t\tfor(var i=0; i<node.childNodes.length; i++){\r\n\t\t\t\t\t\t\t\tvar returnNode = findNode(node.childNodes[i], id);\r\n\t\t\t\t\t\t\t\tif(returnNode){\r\n\t\t\t\t\t\t\t\t\treturn returnNode; //object\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn null; //null\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar d = document.createElement(\"div\");\r\n\t\t\t\t\td.innerHTML = data;\r\n\t\t\t\t\tself._rootNode = findNode(d, self.dataId);\r\n\t\t\t\t\tself._indexItems();\r\n\t\t\t\t\tself._finishFetchItems(request, fetchHandler, errorHandler);\r\n\t\t\t\t});\r\n\t\t\t\tgetHandler.addErrback(function(error){\r\n\t\t\t\t\terrorHandler(error, request);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t_finishFetchItems: function(request, fetchHandler, errorHandler){\r\n\t\t// summary:\r\n\t\t//\t\tInternal function for processing the passed in request and locating the requested items.\r\n\t\tvar items = [];\r\n\t\tvar arrayOfAllItems = this._getAllItems();\r\n\t\tif(request.query){\r\n\t\t\tvar ignoreCase = request.queryOptions ? request.queryOptions.ignoreCase : false;\r\n\t\t\titems = [];\r\n\r\n\t\t\t//See if there are any string values that can be regexp parsed first to avoid multiple regexp gens on the\r\n\t\t\t//same value for each item examined.  Much more efficient.\r\n\t\t\tvar regexpList = {};\r\n\t\t\tvar key;\r\n\t\t\t\t\t\tvar value;\r\n\t\t\tfor(key in request.query){\r\n\t\t\t\tvalue = request.query[key]+'';\r\n\t\t\t\tif(typeof value === \"string\"){\r\n\t\t\t\t\tregexpList[key] = filter.patternToRegExp(value, ignoreCase);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor(var i = 0; i < arrayOfAllItems.length; ++i){\r\n\t\t\t\tvar match = true;\r\n\t\t\t\tvar candidateItem = arrayOfAllItems[i];\r\n\t\t\t\tfor(key in request.query){\r\n\t\t\t\t\tvalue = request.query[key]+'';\r\n\t\t\t\t\tif(!this._containsValue(candidateItem, key, value, regexpList[key])){\r\n\t\t\t\t\t\tmatch = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(match){\r\n\t\t\t\t\titems.push(candidateItem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfetchHandler(items, request);\r\n\t\t}else{\r\n\t\t\t// We want a copy to pass back in case the parent wishes to sort the array.  We shouldn't allow resort\r\n\t\t\t// of the internal list so that multiple callers can get listsand sort without affecting each other.\r\n\t\t\tif(arrayOfAllItems.length> 0){\r\n\t\t\t\titems = arrayOfAllItems.slice(0,arrayOfAllItems.length);\r\n\t\t\t}\r\n\t\t\tfetchHandler(items, request);\r\n\t\t}\r\n\t},\r\n\r\n\tgetFeatures: function(){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getFeatures()\r\n\t\treturn {\r\n\t\t\t'dojo.data.api.Read': true,\r\n\t\t\t'dojo.data.api.Identity': true\r\n\t\t};\r\n\t},\r\n\t\r\n\tclose: function(/*dojo/data/api/Request|Object?*/ request){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.close()\r\n\r\n\t\t// nothing to do here!\r\n\t},\r\n\r\n\tgetLabel: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getLabel()\r\n\t\tif(this.isItem(item)){\r\n\t\t\tif(item.cells){\r\n\t\t\t\treturn \"Item #\" + this.getIdentity(item);\r\n\t\t\t}else{\r\n\t\t\t\treturn this.getValue(item,\"name\");\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn undefined;\r\n\t},\r\n\r\n\tgetLabelAttributes: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getLabelAttributes()\r\n\t\tif(item.cells){\r\n\t\t\treturn null;\r\n\t\t}else{\r\n\t\t\treturn [\"name\"];\r\n\t\t}\r\n\t},\r\n\r\n/***************************************\r\n\t dojo/data/api/Identity API\r\n***************************************/\r\n\r\n\tgetIdentity: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Identity.getIdentity()\r\n\t\tthis._assertIsItem(item);\r\n\t\tif(this.hasAttribute(item, \"name\")){\r\n\t\t\treturn this.getValue(item,\"name\");\r\n\t\t}else{\r\n\t\t\treturn item._ident;\r\n\t\t}\r\n\t},\r\n\r\n\tgetIdentityAttributes: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Identity.getIdentityAttributes()\r\n\r\n\t\t//Identity isn't taken from a public attribute.\r\n\t\treturn null;\r\n\t},\r\n\r\n\tfetchItemByIdentity: function(keywordArgs){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Identity.fetchItemByIdentity()\r\n\t\tvar identity = keywordArgs.identity;\r\n\t\tvar self = this;\r\n\t\tvar item = null;\r\n\t\tvar scope = null;\r\n\t\tif(!this._rootNode){\r\n\t\t\tif(!this.url){\r\n\t\t\t\tthis._rootNode = dom.byId(this.dataId);\r\n\t\t\t\tthis._indexItems();\r\n\t\t\t\tif(self._rootNode.rows){ //Table\r\n\t\t\t\t\titem = this._rootNode.rows[identity + 1];\r\n\t\t\t\t}else{ //Lists\r\n\t\t\t\t\tfor(var i = 0; i < self._rootNode.childNodes.length; i++){\r\n\t\t\t\t\t\tif(self._rootNode.childNodes[i].nodeType === 1 && identity === xmlParser.textContent(self._rootNode.childNodes[i])){\r\n\t\t\t\t\t\t\titem = self._rootNode.childNodes[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(keywordArgs.onItem){\r\n\t\t\t\t\tscope = keywordArgs.scope?keywordArgs.scope:kernel.global;\r\n\t\t\t\t\tkeywordArgs.onItem.call(scope, item);\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\t\t\t\tvar getArgs = {\r\n\t\t\t\t\t\turl: this.url,\r\n\t\t\t\t\t\thandleAs: \"text\"\r\n\t\t\t\t\t};\r\n\t\t\t\tvar getHandler = xhr.get(getArgs);\r\n\t\t\t\tgetHandler.addCallback(function(data){\r\n\t\t\t\t\tvar findNode = function(node, id){\r\n\t\t\t\t\t\tif(node.id == id){\r\n\t\t\t\t\t\t\treturn node; //object\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(node.childNodes){\r\n\t\t\t\t\t\t\tfor(var i=0; i<node.childNodes.length; i++){\r\n\t\t\t\t\t\t\t\tvar returnNode = findNode(node.childNodes[i], id);\r\n\t\t\t\t\t\t\t\tif(returnNode){\r\n\t\t\t\t\t\t\t\t\treturn returnNode; //object\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn null; //null\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar d = document.createElement(\"div\");\r\n\t\t\t\t\td.innerHTML = data;\r\n\t\t\t\t\tself._rootNode = findNode(d, self.dataId);\r\n\t\t\t\t\tself._indexItems();\r\n\t\t\t\t\tif(self._rootNode.rows && identity <= self._rootNode.rows.length){ //Table\r\n\t\t\t\t\t\titem = self._rootNode.rows[identity-1];\r\n\t\t\t\t\t}else{ //List\r\n\t\t\t\t\t\tfor(var i = 0; i < self._rootNode.childNodes.length; i++){\r\n\t\t\t\t\t\t\tif(self._rootNode.childNodes[i].nodeType === 1 && identity === xmlParser.textContent(self._rootNode.childNodes[i])){\r\n\t\t\t\t\t\t\t\t\titem = self._rootNode.childNodes[i];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(keywordArgs.onItem){\r\n\t\t\t\t\t\tscope = keywordArgs.scope?keywordArgs.scope:kernel.global;\r\n\t\t\t\t\t\tkeywordArgs.onItem.call(scope, item);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tgetHandler.addErrback(function(error){\r\n\t\t\t\t\tif(keywordArgs.onError){\r\n\t\t\t\t\t\tscope = keywordArgs.scope?keywordArgs.scope:kernel.global;\r\n\t\t\t\t\t\tkeywordArgs.onError.call(scope, error);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(this._rootNode.rows[identity+1]){\r\n\t\t\t\titem = this._rootNode.rows[identity+1];\r\n\t\t\t\tif(keywordArgs.onItem){\r\n\t\t\t\t\tscope = keywordArgs.scope?keywordArgs.scope:kernel.global;\r\n\t\t\t\t\tkeywordArgs.onItem.call(scope, item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\nlang.extend(HtmlStore, simpleFetch);\r\nreturn HtmlStore;\r\n});\r\n"]}