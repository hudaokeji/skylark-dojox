{"version":3,"sources":["data/AppStore.js"],"names":["define","dojo","dojox","experimental","AppStore","declare","url","urlPreventCache","xmethod","_atomIO","_feed","_requests","_processing","_updates","_adds","_deletes","constructor","args","this","Error","_setFeed","feed","data","i","entries","length","store","request","fh","eh","_finishFetchItems","clear","add","addEntry","remove","removeEntry","_getAllItems","items","push","_assertIsItem","item","isItem","_assertIsAttribute","attribute","key","atom","io","model","_actions","_addUpdate","update","getValue","defaultValue","values","getValues","categories","nodeType","value","getAttributes","attributes","hasAttribute","containsValue","regexp","undefined","util","filter","patternToRegExp","_containsValue","trim","possibleValue","replace","RegExp","match","something","isItemLoaded","loadItem","keywordArgs","_fetchItems","fetchHandler","errorHandler","flag","Connection","getFeed","arrayOfAllItems","query","ignoreCase","queryOptions","regexpList","candidateItem","slice","e","getFeatures","dojo.data.api.Read","dojo.data.api.Write","dojo.data.api.Identity","close","getLabel","getLabelAttributes","getIdentity","getIdentityAttributes","fetchItemByIdentity","id","identity","onItem","scope","global","call","onError","newItem","entry","Entry","temp","addLink","href","rel","hrefLang","title","type","addAuthor","name","email","uri","addContributor","addCategory","scheme","term","label","createDate","Content","isDirty","hitch","deleteItem","setValue","links","authors","contributors","setValues","unsetAttribute","save","updateEntry","onComplete","revert","extend","simpleFetch"],"mappings":"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","file":"../../data/AppStore.js","sourcesContent":["define([\"dojo\", \"dojox\", \"dojo/data/util/simpleFetch\", \"dojo/data/util/filter\", \"dojox/atom/io/Connection\"], function(dojo, dojox) {\r\n\r\ndojo.experimental(\"dojox.data.AppStore\");\r\n\r\nvar AppStore = dojo.declare(\"dojox.data.AppStore\", null, {\r\n\r\n\t// url: [public] string\r\n\t//\t\tSo the parser can instantiate the store via markup.\r\n\turl: \"\",\r\n\t\r\n\t// urlPreventCache: [public] boolean\r\n\t//\t\tWhether or not to pass the preventCache parameter to the connection\r\n\turlPreventCache: false,\r\n\r\n\t// xmethod: [public] boolean\r\n\t//\t\tWhether to use X-Method-Override for PUT/DELETE.\r\n\txmethod: false,\r\n\t\r\n\t_atomIO: null,\r\n\t_feed: null,\r\n\t_requests: null,\r\n\t_processing: null,\r\n\t\r\n\t_updates: null,\r\n\t_adds: null,\r\n\t_deletes: null,\r\n\t\r\n\tconstructor: function(/*Object*/args){\r\n\t\t// summary:\r\n\t\t//\t\tThe APP data store.\r\n\t\t// description:\r\n\t\t//\t\tThe APP Store is instantiated either in markup or programmatically by supplying a\r\n\t\t//\t\turl of the Collection to be used.\r\n\t\t// args:\r\n\t\t//\t\tAn anonymous object to initialize properties.  It expects the following values:\r\n\t\t//\r\n\t\t//\t\t- url:\t\t\t\tThe url of the Collection to load.\r\n\t\t//\t\t- urlPreventCache:\tWhether or not to append on cache prevention params (as defined by dojo.xhr*)\r\n\t\t\r\n\t\tif(args && args.url){\r\n\t\t\tthis.url = args.url;\r\n\t\t}\r\n\t\tif(args && args.urlPreventCache){\r\n\t\t\tthis.urlPreventCache = args.urlPreventCache;\r\n\t\t}\r\n\t\tif(!this.url){\r\n\t\t\tthrow new Error(\"A URL is required to instantiate an APP Store object\");\r\n\t\t}\r\n\t},\r\n\t\r\n\t_setFeed: function(feed, data){\r\n\t\t// summary:\r\n\t\t//\t\tSets the internal feed using a dojox.atom.io.model.Feed object.\r\n\t\t// description:\r\n\t\t//\t\tSets the internal feed using a dojox.atom.io.model.Feed object.  Also adds\r\n\t\t//\t\ta property to the entries to track that they belong to this store. It\r\n\t\t//\t\talso parses stored requests (since we were waiting on a callback) and\r\n\t\t//\t\texecutes those as well.\r\n\t\t// feed: dojox.atom.io.model.Feed object\r\n\t\t//\t\tThe Feed to use for this data store.\r\n\t\t// data: unused\r\n\t\t//\t\tSignature for this function is defined by AtomIO.getFeed, since this is a callback.\r\n\t\tthis._feed = feed;\r\n\t\tvar i;\r\n\t\tfor(i=0; i<this._feed.entries.length; i++){\r\n\t\t\tthis._feed.entries[i].store = this;\r\n\t\t}\r\n\t\tif(this._requests){\r\n\t\t\tfor(i=0; i<this._requests.length; i++){\r\n\t\t\t\tvar request = this._requests[i];\r\n\t\t\t\tif(request.request && request.fh && request.eh){\r\n\t\t\t\t\tthis._finishFetchItems(request.request, request.fh, request.eh);\r\n\t\t\t\t}else if(request.clear){\r\n\t\t\t\t\tthis._feed = null;\r\n\t\t\t\t}else if(request.add){\r\n\t\t\t\t\tthis._feed.addEntry(request.add);\r\n\t\t\t\t}else if(request.remove){\r\n\t\t\t\t\tthis._feed.removeEntry(request.remove);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._requests = null;\r\n\t},\r\n\t\r\n\t_getAllItems: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to return all entries in the Feed as an array of items.\r\n\t\t// description:\r\n\t\t//\t\tFunction to return all entries in the Feed as an array of items.\r\n\t\t// returns:\r\n\t\t//\t\tArray of all entries in the feed.\r\n\t\tvar items = [];\r\n\t\tfor(var i=0; i<this._feed.entries.length; i++){\r\n\t\t\titems.push(this._feed.entries[i]);\r\n\t\t}\r\n\t\treturn items; //array\r\n\t},\r\n\t\r\n\t_assertIsItem: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tThis function tests whether the item is an item.\r\n\t\t// description:\r\n\t\t//\t\tThis function tests whether the item passed in is indeed an item\r\n\t\t//\t\tin the store.\r\n\t\t// item:\r\n\t\t//\t\tThe item to test for being contained by the store.\r\n\t\tif(!this.isItem(item)){\r\n\t\t\tthrow new Error(\"This error message is provided when a function is called in the following form: \"\r\n\t\t\t\t+ \"getAttribute(argument, attributeName).  The argument variable represents the member \"\r\n\t\t\t\t+ \"or owner of the object. The error is created when an item that does not belong \"\r\n\t\t\t\t+ \"to this store is specified as an argument.\");\r\n\t\t}\r\n\t},\r\n\r\n\t_assertIsAttribute: function(/* String */ attribute){\r\n\t\t// summary:\r\n\t\t//\t\tThis function tests whether the item is an attribute.\r\n\t\t// description:\r\n\t\t//\t\tThis function tests whether the item passed in is indeed a valid\r\n\t\t//\t\t'attribute' like type for the store.\r\n\t\t// attribute:\r\n\t\t//\t\tThe attribute to test for being contained by the store.\r\n\t\t// returns:\r\n\t\t//\t\tReturns a boolean indicating whether this is a valid attribute.\r\n\t\tif(typeof attribute !== \"string\"){\r\n\t\t\tthrow new Error(\"The attribute argument must be a string. The error is created \"\r\n\t\t\t+ \"when a different type of variable is specified such as an array or object.\");\r\n\t\t}\r\n\r\n\t\tfor(var key in dojox.atom.io.model._actions){\r\n\t\t\tif(key == attribute){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\t\r\n\t_addUpdate: function(/* Object */ update){\r\n\t\t// summary:\r\n\t\t//\t\tInternal function to add an updated entry to our updates array\r\n\t\t// description:\r\n\t\t//\t\tInternal function to add an updated entry to our updates array\r\n\t\t// update: dojox.atom.io.model.Entry object\r\n\t\t//\t\tThe updated Entry we've changed.\r\n\t\tif(!this._updates){\r\n\t\t\tthis._updates = [update];\r\n\t\t}else{\r\n\t\t\tthis._updates.push(update);\r\n\t\t}\r\n\t},\r\n\r\n/***************************************\r\n     dojo/data/api/Read API\r\n***************************************/\r\n\t\r\n\tgetValue: function(\t/* item */ item,\r\n\t\t\t\t\t\t/* attribute-name-string */ attribute,\r\n\t\t\t\t\t\t/* value? */ defaultValue){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getValue()\r\n\t\tvar values = this.getValues(item, attribute);\r\n\t\treturn (values.length > 0)?values[0]:defaultValue; // Object|Number|Boolean\r\n\t},\r\n\r\n\tgetValues: function(/* item */ item,\r\n\t\t\t\t\t\t/* attribute-name-string */ attribute){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getValues()\r\n\r\n\t\tthis._assertIsItem(item);\r\n\t\tvar flag = this._assertIsAttribute(attribute);\r\n\r\n\t\tif(flag){\r\n\t\t\tif((attribute === \"author\" || attribute === \"contributor\" || attribute === \"link\") && item[attribute+\"s\"]){\r\n\t\t\t\treturn item[attribute+\"s\"];\r\n\t\t\t}\r\n\t\t\tif(attribute === \"category\" && item.categories){\r\n\t\t\t\treturn item.categories;\r\n\t\t\t}\r\n\t\t\tif(item[attribute]){\r\n\t\t\t\titem = item[attribute];\r\n\t\t\t\tif(item.nodeType == \"Content\"){\r\n\t\t\t\t\treturn [item.value];\r\n\t\t\t\t}\r\n\t\t\t\treturn [item] ;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn []; //Array\r\n\t},\r\n\r\n\tgetAttributes: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getAttributes()\r\n\t\tthis._assertIsItem(item);\r\n\t\tvar attributes = [];\r\n\t\tfor(var key in dojox.atom.io.model._actions){\r\n\t\t\tif(this.hasAttribute(item, key)){\r\n\t\t\t\tattributes.push(key);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn attributes; //Array\r\n\t},\r\n\r\n\thasAttribute: function(\t/* item */ item,\r\n\t\t\t\t\t\t\t/* attribute-name-string */ attribute){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.hasAttribute()\r\n\t\treturn this.getValues(item, attribute).length > 0;\r\n\t},\r\n\r\n\tcontainsValue: function(/* item */ item,\r\n\t\t\t\t\t\t\t/* attribute-name-string */ attribute,\r\n\t\t\t\t\t\t\t/* anything */ value){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.containsValue()\r\n\t\tvar regexp = undefined;\r\n\t\tif(typeof value === \"string\"){\r\n\t\t\tregexp = dojo.data.util.filter.patternToRegExp(value, false);\r\n\t\t}\r\n\t\treturn this._containsValue(item, attribute, value, regexp); //boolean.\r\n\t},\r\n\r\n\t_containsValue: function(\t/* item */ item,\r\n\t\t\t\t\t\t\t\t/* attribute-name-string */ attribute,\r\n\t\t\t\t\t\t\t\t/* anything */ value,\r\n\t\t\t\t\t\t\t\t/* RegExp?*/ regexp,\r\n\t\t\t\t\t\t\t\t/* Boolean?*/ trim){\r\n\t\t// summary:\r\n\t\t//\t\tInternal function for looking at the values contained by the item.\r\n\t\t// description:\r\n\t\t//\t\tInternal function for looking at the values contained by the item.  This\r\n\t\t//\t\tfunction allows for denoting if the comparison should be case sensitive for\r\n\t\t//\t\tstrings or not (for handling filtering cases where string case should not matter)\r\n\t\t// item:\r\n\t\t//\t\tThe data item to examine for attribute values.\r\n\t\t// attribute:\r\n\t\t//\t\tThe attribute to inspect.\r\n\t\t// value:\r\n\t\t//\t\tThe value to match.\r\n\t\t// regexp:\r\n\t\t//\t\tOptional regular expression generated off value if value was of string type to handle wildcarding.\r\n\t\t//\t\tIf present and attribute values are string, then it can be used for comparison instead of 'value'\r\n\t\tvar values = this.getValues(item, attribute);\r\n\t\tfor(var i = 0; i < values.length; ++i){\r\n\t\t\tvar possibleValue = values[i];\r\n\t\t\tif(typeof possibleValue === \"string\" && regexp){\r\n\t\t\t\tif(trim){\r\n\t\t\t\t\tpossibleValue = possibleValue.replace(new RegExp(/^\\s+/),\"\"); // START\r\n\t\t\t\t\tpossibleValue = possibleValue.replace(new RegExp(/\\s+$/),\"\"); // END\r\n\t\t\t\t}\r\n\t\t\t\tpossibleValue = possibleValue.replace(/\\r|\\n|\\r\\n/g, \"\");\r\n\t\t\t\treturn (possibleValue.match(regexp) !== null);\r\n\t\t\t}else{\r\n\t\t\t\t//Non-string matching.\r\n\t\t\t\tif(value === possibleValue){\r\n\t\t\t\t\treturn true; // Boolean\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false; // Boolean\r\n\t},\r\n\r\n\tisItem: function(/* anything */ something){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.isItem()\r\n\t\treturn something && something.store && something.store === this; //boolean\r\n\t},\r\n\r\n\tisItemLoaded: function(/* anything */ something){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.isItemLoaded()\r\n\t\treturn this.isItem(something);\r\n\t},\r\n\r\n\tloadItem: function(/* Object */ keywordArgs){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.loadItem()\r\n\t\tthis._assertIsItem(keywordArgs.item);\r\n\t},\r\n\t\r\n\t_fetchItems: function(request, fetchHandler, errorHandler){\r\n\t\t// summary:\r\n\t\t//\t\tFetch items (Atom entries) that match to a query\r\n\t\t// description:\r\n\t\t//\t\tFetch items (Atom entries) that match to a query\r\n\t\t// request:\r\n\t\t//\t\tA request object\r\n\t\t// fetchHandler:\r\n\t\t//\t\tA function to call for fetched items\r\n\t\t// errorHandler:\r\n\t\t//\t\tA function to call on error\r\n\t\tif(this._feed){\r\n\t\t\tthis._finishFetchItems(request, fetchHandler, errorHandler);\r\n\t\t}else{\r\n\t\t\tvar flag = false;\r\n\t\t\tif(!this._requests){\r\n\t\t\t\tthis._requests = [];\r\n\t\t\t\tflag = true;\r\n\t\t\t}\r\n\t\t\tthis._requests.push({request: request, fh: fetchHandler, eh: errorHandler});\r\n\t\t\tif(flag){\r\n\t\t\t\tthis._atomIO = new dojox.atom.io.Connection(false, this.urlPreventCache);\r\n\t\t\t\tthis._atomIO.getFeed(this.url,this._setFeed, null, this);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\t\r\n\t_finishFetchItems: function(request, fetchHandler, errorHandler){\r\n\t\t// summary:\r\n\t\t//\t\tInternal function for finishing a fetch request.\r\n\t\t// description:\r\n\t\t//\t\tInternal function for finishing a fetch request.  Needed since the feed\r\n\t\t//\t\tmight not have been loaded, so we finish the fetch in a callback.\r\n\t\t// request:\r\n\t\t//\t\tA request object\r\n\t\t// fetchHandler:\r\n\t\t//\t\tA function to call for fetched items\r\n\t\t// errorHandler:\r\n\t\t//\t\tA function to call on error\r\n\t\tvar items = null;\r\n\t\tvar arrayOfAllItems = this._getAllItems();\r\n\t\tif(request.query){\r\n\t\t\tvar ignoreCase = request.queryOptions ? request.queryOptions.ignoreCase : false;\r\n\t\t\titems = [];\r\n\r\n\t\t\t//See if there are any string values that can be regexp parsed first to avoid multiple regexp gens on the\r\n\t\t\t//same value for each item examined.  Much more efficient.\r\n\t\t\tvar regexpList = {};\r\n\t\t\tvar key;\r\n\t\t\tvar value;\r\n\t\t\tfor(key in request.query){\r\n\t\t\t\tvalue = request.query[key]+'';\r\n\t\t\t\tif(typeof value === \"string\"){\r\n\t\t\t\t\tregexpList[key] = dojo.data.util.filter.patternToRegExp(value, ignoreCase);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor(var i = 0; i < arrayOfAllItems.length; ++i){\r\n\t\t\t\tvar match = true;\r\n\t\t\t\tvar candidateItem = arrayOfAllItems[i];\r\n\t\t\t\tfor(key in request.query){\r\n\t\t\t\t\tvalue = request.query[key]+'';\r\n\t\t\t\t\tif(!this._containsValue(candidateItem, key, value, regexpList[key], request.trim)){\r\n\t\t\t\t\t\tmatch = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(match){\r\n\t\t\t\t\titems.push(candidateItem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\t// We want a copy to pass back in case the parent wishes to sort the array.  We shouldn't allow resort\r\n\t\t\t// of the internal list so that multiple callers can get listsand sort without affecting each other.\r\n\t\t\tif(arrayOfAllItems.length> 0){\r\n\t\t\t\titems = arrayOfAllItems.slice(0,arrayOfAllItems.length);\r\n\t\t\t}\r\n\t\t}\r\n\t\ttry{\r\n\t\t\tfetchHandler(items, request);\r\n\t\t}catch(e){\r\n\t\t\terrorHandler(e, request);\r\n\t\t}\r\n\t},\r\n\r\n\tgetFeatures: function(){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getFeatures()\r\n\t\treturn {\r\n\t\t\t'dojo.data.api.Read': true,\r\n\t\t\t'dojo.data.api.Write': true,\r\n\t\t\t'dojo.data.api.Identity': true\r\n\t\t};\r\n\t},\r\n\t\r\n\tclose: function(/*dojo/data/api/Request|Object?*/ request){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.close()\r\n\t\t\r\n\t\t// nothing to do here!\r\n\t\tthis._feed = null;\r\n\t},\r\n\r\n\tgetLabel: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getLabel()\r\n\t\tif(this.isItem(item)){\r\n\t\t\treturn this.getValue(item, \"title\", \"No Title\");\r\n\t\t}\r\n\t\treturn undefined;\r\n\t},\r\n\r\n\tgetLabelAttributes: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getLabelAttributes()\r\n\t\treturn [\"title\"];\r\n\t},\r\n\r\n/***************************************\r\n     dojo/data/api/Identity API\r\n***************************************/\r\n\r\n\tgetIdentity: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Identity.getIdentity()\r\n\t\tthis._assertIsItem(item);\r\n\t\treturn this.getValue(item, \"id\");\r\n\t},\r\n\r\n\tgetIdentityAttributes: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Identity.getIdentityAttributes()\r\n\t\treturn [\"id\"];\r\n\t},\r\n\r\n\tfetchItemByIdentity: function(keywordArgs){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Identity.fetchItemByIdentity()\r\n\r\n\t\tthis._fetchItems({query:{id:keywordArgs.identity}, onItem: keywordArgs.onItem, scope: keywordArgs.scope},\r\n\t\t\tfunction(items, request){\r\n\t\t\t\tvar scope = request.scope;\r\n\t\t\t\tif(!scope){\r\n\t\t\t\t\tscope = dojo.global;\r\n\t\t\t\t}\r\n\t\t\t\tif(items.length < 1){\r\n\t\t\t\t\trequest.onItem.call(scope, null);\r\n\t\t\t\t}else{\r\n\t\t\t\t\trequest.onItem.call(scope, items[0]);\r\n\t\t\t\t}\r\n\t\t}, keywordArgs.onError);\r\n\t},\r\n\r\n/***************************************\r\n     dojo/data/api/Identity API\r\n***************************************/\r\n\r\n\tnewItem: function(/* Object? */ keywordArgs){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Write.newItem()\r\n\t\tvar entry = new dojox.atom.io.model.Entry();\r\n\t\tvar value = null;\r\n\t\tvar temp = null;\r\n\t\tvar i;\r\n\t\tfor(var key in keywordArgs){\r\n\t\t\tif(this._assertIsAttribute(key)){\r\n\t\t\t\tvalue = keywordArgs[key];\r\n\t\t\t\tswitch(key){\r\n\t\t\t\t\tcase \"link\":\r\n\t\t\t\t\t\tfor(i in value){\r\n\t\t\t\t\t\t\ttemp = value[i];\r\n\t\t\t\t\t\t\tentry.addLink(temp.href,temp.rel,temp.hrefLang,temp.title,temp.type);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"author\":\r\n\t\t\t\t\t\tfor(i in value){\r\n\t\t\t\t\t\t\ttemp = value[i];\r\n\t\t\t\t\t\t\tentry.addAuthor(temp.name, temp.email, temp.uri);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"contributor\":\r\n\t\t\t\t\t\tfor(i in value){\r\n\t\t\t\t\t\t\ttemp = value[i];\r\n\t\t\t\t\t\t\tentry.addContributor(temp.name, temp.email, temp.uri);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"category\":\r\n\t\t\t\t\t\tfor(i in value){\r\n\t\t\t\t\t\t\ttemp = value[i];\r\n\t\t\t\t\t\t\tentry.addCategory(temp.scheme, temp.term, temp.label);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"icon\":\r\n\t\t\t\t\tcase \"id\":\r\n\t\t\t\t\tcase \"logo\":\r\n\t\t\t\t\tcase \"xmlBase\":\r\n\t\t\t\t\tcase \"rights\":\r\n\t\t\t\t\t\tentry[key] = value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"updated\":\r\n\t\t\t\t\tcase \"published\":\r\n\t\t\t\t\tcase \"issued\":\r\n\t\t\t\t\tcase \"modified\":\r\n\t\t\t\t\t\tentry[key] = dojox.atom.io.model.util.createDate(value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"content\":\r\n\t\t\t\t\tcase \"summary\":\r\n\t\t\t\t\tcase \"title\":\r\n\t\t\t\t\tcase \"subtitle\":\r\n\t\t\t\t\t\tentry[key] = new dojox.atom.io.model.Content(key);\r\n\t\t\t\t\t\tentry[key].value = value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tentry[key] = value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tentry.store = this;\r\n\t\tentry.isDirty = true;\r\n\r\n\t\tif(!this._adds){\r\n\t\t\tthis._adds = [entry];\r\n\t\t}else{\r\n\t\t\tthis._adds.push(entry);\r\n\t\t}\r\n\r\n\t\tif(this._feed){\r\n\t\t\tthis._feed.addEntry(entry);\r\n\t\t}else{\r\n\t\t\tif(this._requests){\r\n\t\t\t\tthis._requests.push({add:entry});\r\n\t\t\t}else{\r\n\t\t\t\tthis._requests = [{add:entry}];\r\n\t\t\t\tthis._atomIO = new dojox.atom.io.Connection(false, this.urlPreventCache);\r\n\t\t\t\tthis._atomIO.getFeed(this.url,dojo.hitch(this,this._setFeed));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\r\n\tdeleteItem: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Write.deleteItem()\r\n\t\tthis._assertIsItem(item);\r\n\r\n\t\tif(!this._deletes){\r\n\t\t\tthis._deletes = [item];\r\n\t\t}else{\r\n\t\t\tthis._deletes.push(item);\r\n\t\t}\r\n\r\n\t\tif(this._feed){\r\n\t\t\tthis._feed.removeEntry(item);\r\n\t\t}else{\r\n\t\t\tif(this._requests){\r\n\t\t\t\tthis._requests.push({remove:item});\r\n\t\t\t}else{\r\n\t\t\t\tthis._requests = [{remove:item}];\r\n\t\t\t\tthis._atomIO = new dojox.atom.io.Connection(false, this.urlPreventCache);\r\n\t\t\t\tthis._atomIO.getFeed(this.url,dojo.hitch(this,this._setFeed));\r\n\t\t\t}\r\n\t\t}\r\n\t\titem = null;\r\n\t\treturn true;\r\n\t},\r\n\r\n\tsetValue: function(\t/* item */ item,\r\n\t\t\t\t\t\t/* string */ attribute,\r\n\t\t\t\t\t\t/* almost anything */ value){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Write.setValue()\r\n\t\tthis._assertIsItem(item);\r\n\t\t\r\n\t\tvar update = {item: item};\r\n\t\tif(this._assertIsAttribute(attribute)){\r\n\t\t\tswitch(attribute){\r\n\t\t\t\tcase \"link\":\r\n\t\t\t\t\tupdate.links = item.links;\r\n\t\t\t\t\tthis._addUpdate(update);\r\n\t\t\t\t\titem.links = null;\r\n\t\t\t\t\titem.addLink(value.href,value.rel,value.hrefLang,value.title,value.type);\r\n\t\t\t\t\titem.isDirty = true;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\tcase \"author\":\r\n\t\t\t\t\tupdate.authors = item.authors;\r\n\t\t\t\t\tthis._addUpdate(update);\r\n\t\t\t\t\titem.authors = null;\r\n\t\t\t\t\titem.addAuthor(value.name, value.email, value.uri);\r\n\t\t\t\t\titem.isDirty = true;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\tcase \"contributor\":\r\n\t\t\t\t\tupdate.contributors = item.contributors;\r\n\t\t\t\t\tthis._addUpdate(update);\r\n\t\t\t\t\titem.contributors = null;\r\n\t\t\t\t\titem.addContributor(value.name, value.email, value.uri);\r\n\t\t\t\t\titem.isDirty = true;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\tcase \"category\":\r\n\t\t\t\t\tupdate.categories = item.categories;\r\n\t\t\t\t\tthis._addUpdate(update);\r\n\t\t\t\t\titem.categories = null;\r\n\t\t\t\t\titem.addCategory(value.scheme, value.term, value.label);\r\n\t\t\t\t\titem.isDirty = true;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\tcase \"icon\":\r\n\t\t\t\tcase \"id\":\r\n\t\t\t\tcase \"logo\":\r\n\t\t\t\tcase \"xmlBase\":\r\n\t\t\t\tcase \"rights\":\r\n\t\t\t\t\tupdate[attribute] = item[attribute];\r\n\t\t\t\t\tthis._addUpdate(update);\r\n\t\t\t\t\titem[attribute] = value;\r\n\t\t\t\t\titem.isDirty = true;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\tcase \"updated\":\r\n\t\t\t\tcase \"published\":\r\n\t\t\t\tcase \"issued\":\r\n\t\t\t\tcase \"modified\":\r\n\t\t\t\t\tupdate[attribute] = item[attribute];\r\n\t\t\t\t\tthis._addUpdate(update);\r\n\t\t\t\t\titem[attribute] = dojox.atom.io.model.util.createDate(value);\r\n\t\t\t\t\titem.isDirty = true;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\tcase \"content\":\r\n\t\t\t\tcase \"summary\":\r\n\t\t\t\tcase \"title\":\r\n\t\t\t\tcase \"subtitle\":\r\n\t\t\t\t\tupdate[attribute] = item[attribute];\r\n\t\t\t\t\tthis._addUpdate(update);\r\n\t\t\t\t\titem[attribute] = new dojox.atom.io.model.Content(attribute);\r\n\t\t\t\t\titem[attribute].value = value;\r\n\t\t\t\t\titem.isDirty = true;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tupdate[attribute] = item[attribute];\r\n\t\t\t\t\tthis._addUpdate(update);\r\n\t\t\t\t\titem[attribute] = value;\r\n\t\t\t\t\titem.isDirty = true;\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\r\n\tsetValues: function(/* item */ item,\r\n\t\t\t\t\t\t/* string */ attribute,\r\n\t\t\t\t\t\t/* array */ values){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Write.setValues()\r\n\t\tif(values.length === 0){\r\n\t\t\treturn this.unsetAttribute(item, attribute);\r\n\t\t}\r\n\t\tthis._assertIsItem(item);\r\n\t\t\r\n\t\tvar update = {item: item};\r\n\t\tvar value;\r\n\t\tvar i;\r\n\t\tif(this._assertIsAttribute(attribute)){\r\n\t\t\tswitch(attribute){\r\n\t\t\t\tcase \"link\":\r\n\t\t\t\t\tupdate.links = item.links;\r\n\t\t\t\t\titem.links = null;\r\n\t\t\t\t\tfor(i in values){\r\n\t\t\t\t\t\tvalue = values[i];\r\n\t\t\t\t\t\titem.addLink(value.href,value.rel,value.hrefLang,value.title,value.type);\r\n\t\t\t\t\t}\r\n\t\t\t\t\titem.isDirty = true;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\tcase \"author\":\r\n\t\t\t\t\tupdate.authors = item.authors;\r\n\t\t\t\t\titem.authors = null;\r\n\t\t\t\t\tfor(i in values){\r\n\t\t\t\t\t\tvalue = values[i];\r\n\t\t\t\t\t\titem.addAuthor(value.name, value.email, value.uri);\r\n\t\t\t\t\t}\r\n\t\t\t\t\titem.isDirty = true;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\tcase \"contributor\":\r\n\t\t\t\t\tupdate.contributors = item.contributors;\r\n\t\t\t\t\titem.contributors = null;\r\n\t\t\t\t\tfor(i in values){\r\n\t\t\t\t\t\tvalue = values[i];\r\n\t\t\t\t\t\titem.addContributor(value.name, value.email, value.uri);\r\n\t\t\t\t\t}\r\n\t\t\t\t\titem.isDirty = true;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\tcase \"categories\":\r\n\t\t\t\t\tupdate.categories = item.categories;\r\n\t\t\t\t\titem.categories = null;\r\n\t\t\t\t\tfor(i in values){\r\n\t\t\t\t\t\tvalue = values[i];\r\n\t\t\t\t\t\titem.addCategory(value.scheme, value.term, value.label);\r\n\t\t\t\t\t}\r\n\t\t\t\t\titem.isDirty = true;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\tcase \"icon\":\r\n\t\t\t\tcase \"id\":\r\n\t\t\t\tcase \"logo\":\r\n\t\t\t\tcase \"xmlBase\":\r\n\t\t\t\tcase \"rights\":\r\n\t\t\t\t\tupdate[attribute] = item[attribute];\r\n\t\t\t\t\titem[attribute] = values[0];\r\n\t\t\t\t\titem.isDirty = true;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\tcase \"updated\":\r\n\t\t\t\tcase \"published\":\r\n\t\t\t\tcase \"issued\":\r\n\t\t\t\tcase \"modified\":\r\n\t\t\t\t\tupdate[attribute] = item[attribute];\r\n\t\t\t\t\titem[attribute] = dojox.atom.io.model.util.createDate(values[0]);\r\n\t\t\t\t\titem.isDirty = true;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\tcase \"content\":\r\n\t\t\t\tcase \"summary\":\r\n\t\t\t\tcase \"title\":\r\n\t\t\t\tcase \"subtitle\":\r\n\t\t\t\t\tupdate[attribute] = item[attribute];\r\n\t\t\t\t\titem[attribute] = new dojox.atom.io.model.Content(attribute);\r\n\t\t\t\t\titem[attribute].values[0] = values[0];\r\n\t\t\t\t\titem.isDirty = true;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tupdate[attribute] = item[attribute];\r\n\t\t\t\t\titem[attribute] = values[0];\r\n\t\t\t\t\titem.isDirty = true;\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._addUpdate(update);\r\n\t\treturn false;\r\n\t},\r\n\r\n\tunsetAttribute: function(\t/* item */ item,\r\n\t\t\t\t\t\t\t\t/* string */ attribute){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Write.unsetAttribute()\r\n\t\tthis._assertIsItem(item);\r\n\t\tif(this._assertIsAttribute(attribute)){\r\n\t\t\tif(item[attribute] !== null){\r\n\t\t\t\tvar update = {item: item};\r\n\t\t\t\tswitch(attribute){\r\n\t\t\t\t\tcase \"author\":\r\n\t\t\t\t\tcase \"contributor\":\r\n\t\t\t\t\tcase \"link\":\r\n\t\t\t\t\t\tupdate[attribute+\"s\"] = item[attribute+\"s\"];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"category\":\r\n\t\t\t\t\t\tupdate.categories = item.categories;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tupdate[attribute] = item[attribute];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\titem.isDirty = true;\r\n\t\t\t\titem[attribute] = null;\r\n\t\t\t\tthis._addUpdate(update);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false; // boolean\r\n\t},\r\n\r\n\tsave: function(/* object */ keywordArgs){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Write.save()\r\n\t\t// keywordArgs:\r\n\t\t// |\t{\r\n\t\t// |\t\tonComplete: function\r\n\t\t// |\t\tonError: function\r\n\t\t// |\t\tscope: object\r\n\t\t// |\t}\r\n\t\tvar i;\r\n\t\tfor(i in this._adds){\r\n\t\t\tthis._atomIO.addEntry(this._adds[i], null, function(){}, keywordArgs.onError, false, keywordArgs.scope);\r\n\t\t}\r\n\t\t\t\r\n\t\tthis._adds = null;\r\n\t\t\r\n\t\tfor(i in this._updates){\r\n\t\t\tthis._atomIO.updateEntry(this._updates[i].item, function(){}, keywordArgs.onError, false, this.xmethod, keywordArgs.scope);\r\n\t\t}\r\n\t\t\t\r\n\t\tthis._updates = null;\r\n\t\t\r\n\t\tfor(i in this._deletes){\r\n\t\t\tthis._atomIO.removeEntry(this._deletes[i], function(){}, keywordArgs.onError, this.xmethod, keywordArgs.scope);\r\n\t\t}\r\n\t\t\t\r\n\t\tthis._deletes = null;\r\n\t\t\r\n\t\tthis._atomIO.getFeed(this.url,dojo.hitch(this,this._setFeed));\r\n\t\t\r\n\t\tif(keywordArgs.onComplete){\r\n\t\t\tvar scope = keywordArgs.scope || dojo.global;\r\n\t\t\tkeywordArgs.onComplete.call(scope);\r\n\t\t}\r\n\t},\r\n\r\n\trevert: function(){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Write.revert()\r\n\t\tvar i;\r\n\t\tfor(i in this._adds){\r\n\t\t\tthis._feed.removeEntry(this._adds[i]);\r\n\t\t}\r\n\t\t\t\r\n\t\tthis._adds = null;\r\n\t\t\r\n\t\tvar update, item, key;\r\n\t\tfor(i in this._updates){\r\n\t\t\tupdate = this._updates[i];\r\n\t\t\titem = update.item;\r\n\t\t\tfor(key in update){\r\n\t\t\t\tif(key !== \"item\"){\r\n\t\t\t\t\titem[key] = update[key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._updates = null;\r\n\t\t\r\n\t\tfor(i in this._deletes){\r\n\t\t\tthis._feed.addEntry(this._deletes[i]);\r\n\t\t}\r\n\t\tthis._deletes = null;\r\n\t\treturn true;\r\n\t},\r\n\r\n\tisDirty: function(/* item? */ item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Write.isDirty()\r\n\t\tif(item){\r\n\t\t\tthis._assertIsItem(item);\r\n\t\t\treturn item.isDirty?true:false; //boolean\r\n\t\t}\r\n\t\treturn (this._adds !== null || this._updates !== null); //boolean\r\n\t}\r\n});\r\n\r\ndojo.extend(AppStore, dojo.data.util.simpleFetch);\r\n\r\nreturn AppStore;\r\n});\r\n"]}