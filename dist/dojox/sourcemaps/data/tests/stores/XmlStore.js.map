{"version":3,"sources":["data/tests/stores/XmlStore.js"],"names":["dojo","provide","require","dojox","data","tests","stores","XmlStore","getBooks3Store","url","toUrl","toString","label","keyAttribute","getBooks2Store","getBooks2StorePC","urlPreventCache","getBooksStore","getCDataTestStore","getGeographyStore","attributeMap","text","rootItem","doh","register","t","store","d","Deferred","fetch","query","isbn","onComplete","items","request","assertEqual","length","callback","onError","error","errback","name","timeout","runTest","dumpSixthFetch","dumpFifthFetch","start","count","dumpFourthFetch","dumpThirdFetch","dumpSecondFetch","dumpFirstFetch","errData","title","author","queryOptions","ignoreCase","RegExp","book.isbn","console","debug","getLabel","assertTrue","labelList","getLabelAttributes","isArray","item","hasAttribute","getValue","ids","isItem","titleValue","trim","e","getValues","firstText","values","store1","store2","item1","item2","assertFalse","containsValue","order","sort","attribute","descending","log","i","comparatorMap","a","b","ret","parseInt","itemId","isItemLoaded","features","getFeatures","attributes","getAttributes","isIE","setValue","setValues","unsetAttribute","isDirty","revert","getIdentity","fetchItemByIdentity","identity","onItem","idAttrs","getIdentityAttributes","testStore","readApi","api","Read","passed","writeApi","Write","identityApi","Identity"],"mappings":"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","file":"../../../../data/tests/stores/XmlStore.js","sourcesContent":["dojo.provide(\"dojox.data.tests.stores.XmlStore\");\r\ndojo.require(\"dojox.data.XmlStore\");\r\ndojo.require(\"dojo.data.api.Read\");\r\ndojo.require(\"dojo.data.api.Write\");\r\ndojo.require(\"dojo.data.api.Identity\");\r\n\r\n\r\ndojox.data.tests.stores.XmlStore.getBooks3Store = function(){\r\n\treturn new dojox.data.XmlStore({url: require.toUrl(\"dojox/data/tests/stores/books2.xml\").toString(), label: \"title\", keyAttribute: \"isbn\"});\r\n};\r\n\r\ndojox.data.tests.stores.XmlStore.getBooks2Store = function(){\r\n\treturn new dojox.data.XmlStore({url: require.toUrl(\"dojox/data/tests/stores/books2.xml\").toString(), label: \"title\"});\r\n};\r\n\r\ndojox.data.tests.stores.XmlStore.getBooks2StorePC = function(){\r\n\treturn new dojox.data.XmlStore({url: require.toUrl(\"dojox/data/tests/stores/books2.xml\").toString(), label: \"title\", urlPreventCache: false});\r\n};\r\n\r\ndojox.data.tests.stores.XmlStore.getBooksStore = function(){\r\n\treturn new dojox.data.XmlStore({url: require.toUrl(\"dojox/data/tests/stores/books.xml\").toString(), label: \"title\"});\r\n};\r\n\r\ndojox.data.tests.stores.XmlStore.getCDataTestStore = function(){\r\n\treturn new dojox.data.XmlStore({url: require.toUrl(\"dojox/data/tests/stores/cdata_test.xml\").toString(), label: \"title\"});\r\n};\r\n\r\ndojox.data.tests.stores.XmlStore.getGeographyStore = function(){\r\n\treturn new dojox.data.XmlStore({url: require.toUrl(\"dojox/data/tests/stores/geography2.xml\").toString(), label: \"text\", keyAttribute: \"text\", attributeMap: {text: '@text'}, rootItem: \"geography\"});\r\n};\r\n\r\ndoh.register(\"dojox.data.tests.stores.XmlStore\",\r\n\t[\r\n\t\tfunction testReadAPI_fetch_all(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching all xml items through an XML element called isbn\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching all xml items through an XML element called isbn\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getBooksStore();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(20, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"*\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_one(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"A9B574\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"testReadAPI_fetch_paging\",\r\n\t\t\ttimeout: 10000,\r\n\t\t\trunTest: function(t){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn\r\n\t\t\t\tvar store = dojox.data.tests.stores.XmlStore.getBooksStore();\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\r\n\t\t\t\tvar dumpSixthFetch = function(items, request){\r\n\t\t\t\t\tt.assertEqual(18, items.length);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar dumpFifthFetch = function(items, request){\r\n\t\t\t\t\tt.assertEqual(11, items.length);\r\n\t\t\t\t\trequest.start = 2;\r\n\t\t\t\t\trequest.count = 20;\r\n\t\t\t\t\trequest.onComplete = dumpSixthFetch;\r\n\t\t\t\t\tstore.fetch(request);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar dumpFourthFetch = function(items, request){\r\n\t\t\t\t\tt.assertEqual(18, items.length);\r\n\t\t\t\t\trequest.start = 9;\r\n\t\t\t\t\trequest.count = 100;\r\n\t\t\t\t\trequest.onComplete = dumpFifthFetch;\r\n\t\t\t\t\tstore.fetch(request);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar dumpThirdFetch = function (items, request){\r\n\t\t\t\t\tt.assertEqual(5, items.length);\r\n\t\t\t\t\trequest.start = 2;\r\n\t\t\t\t\trequest.count = 20;\r\n\t\t\t\t\trequest.onComplete = dumpFourthFetch;\r\n\t\t\t\t\tstore.fetch(request);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar dumpSecondFetch = function(items, request){\r\n\t\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\t\trequest.start = 0;\r\n\t\t\t\t\trequest.count = 5;\r\n\t\t\t\t\trequest.onComplete = dumpThirdFetch;\r\n\t\t\t\t\tstore.fetch(request);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar dumpFirstFetch = function(items, request){\r\n\t\t\t\t\tt.assertEqual(5, items.length);\r\n\t\t\t\t\trequest.start = 3;\r\n\t\t\t\t\trequest.count = 1;\r\n\t\t\t\t\trequest.onComplete = dumpSecondFetch;\r\n\t\t\t\t\tstore.fetch(request);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar completed = function(items, request){\r\n\t\t\t\t\tt.assertEqual(20, items.length);\r\n\t\t\t\t\trequest.start = 1;\r\n\t\t\t\t\trequest.count = 5;\r\n\t\t\t\t\trequest.onComplete = dumpFirstFetch;\r\n\t\t\t\t\tstore.fetch(request);\r\n\t\t\t\t};\r\n\t\r\n\r\n\t\t\t\tfunction error(errData, request){\r\n\t\t\t\t\t d.errback(errData);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstore.fetch({onComplete: completed, onError: error});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_pattern0(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn with ? pattern match\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn with ? pattern match\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"?9B574\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\t\r\n\t\tfunction testReadAPI_fetch_pattern1(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn with ? pattern match\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn with ? pattern match\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(4, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"A9B57?\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_pattern1_preventCacheOff(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn with ? pattern match\r\n\t\t\t//\t\twith preventCache off to test that it doesn't pass it when told not to.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn with ? pattern match\r\n\t\t\t//\t\twith preventCache off to test that it doesn't pass it when told not to.\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getBooks2StorePC();\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(4, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"A9B57?\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_pattern2(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn with * pattern match\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn with * pattern match\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(5, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"A9*\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_pattern_multi(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching one xml items with a pattern of multiple attrs.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching one xml items with a pattern of multiple attrs.\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"A9B57?\", title: \"?itle of 3\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_pattern_multiValuedValue(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching one xml items with a pattern of multiple attrs.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching one xml items with a pattern of multiple attrs.\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{author:\"Third Author of 5\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_pattern_caseInsensitive(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn with ? pattern match and in case insensitive mode.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn with ? pattern match and in case insensitive mode.\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"?9b574\"}, queryOptions: {ignoreCase: true}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_pattern_caseSensitive(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn with ? pattern match and in case sensitive mode.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn with ? pattern match and in case sensitive mode.\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"?9B574\"}, queryOptions: {ignoreCase: false}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_regexp(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn with ? pattern match\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn with ? pattern match\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn: new RegExp(\"^.9B574$\")}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_all_rootItem(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching all xml items through an XML element called isbn\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching all xml items through an XML element called isbn\r\n\t\t\tvar store = new dojox.data.XmlStore({url: require.toUrl(\"dojox/data/tests/stores/books3.xml\").toString(),\r\n\t\t\t\trootItem:\"book\"});\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(5, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"*\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_withAttrMap_all(t){\r\n\t\t\tvar store = new dojox.data.XmlStore({url: require.toUrl(\"dojox/data/tests/stores/books_isbnAttr.xml\").toString(),\r\n\t\t\t\tattributeMap: {\"book.isbn\": \"@isbn\"}});\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(5, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\tconsole.debug(error);\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"*\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_withAttrMap_one(t){\r\n\t\t\tvar store = new dojox.data.XmlStore({url: require.toUrl(\"dojox/data/tests/stores/books_isbnAttr.xml\").toString(),\r\n\t\t\t\tattributeMap: {\"book.isbn\": \"@isbn\"}});\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\tconsole.debug(error);\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"2\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_withAttrMap_pattern0(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn with ? pattern match\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn with ? pattern match\r\n\t\t\tvar store = new dojox.data.XmlStore({url: require.toUrl(\"dojox/data/tests/stores/books_isbnAttr2.xml\").toString(),\r\n\t\t\t\tattributeMap: {\"book.isbn\": \"@isbn\"}});\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(3, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"ABC?\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_withAttrMap_pattern1(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn with ? pattern match\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn with ? pattern match\r\n\t\t\tvar store = new dojox.data.XmlStore({url: require.toUrl(\"dojox/data/tests/stores/books_isbnAttr2.xml\").toString(),\r\n\t\t\t\tattributeMap: {\"book.isbn\": \"@isbn\"}});\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(5, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"A*\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_withAttrMap_pattern2(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn with ? pattern match\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn with ? pattern match\r\n\t\t\tvar store = new dojox.data.XmlStore({url: require.toUrl(\"dojox/data/tests/stores/books_isbnAttr2.xml\").toString(),\r\n\t\t\t\tattributeMap: {\"book.isbn\": \"@isbn\"}});\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(2, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"?C*\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\r\n\t\tfunction testReadAPI_getLabel(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getLabel function against a store set that has a label defined.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getLabel function against a store set that has a label defined.\r\n\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(items.length, 1);\r\n\t\t\t\tvar label = store.getLabel(items[0]);\r\n\t\t\t\tt.assertTrue(label !== null);\r\n\t\t\t\tt.assertEqual(\"Title of 4\", label);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"A9B574\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d;\r\n\t\t},\r\n\t\tfunction testReadAPI_getLabelAttributes(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getLabelAttributes function against a store set that has a label defined.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getLabelAttributes function against a store set that has a label defined.\r\n\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(items.length, 1);\r\n\t\t\t\tvar labelList = store.getLabelAttributes(items[0]);\r\n\t\t\t\tt.assertTrue(dojo.isArray(labelList));\r\n\t\t\t\tt.assertEqual(\"title\", labelList[0]);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"A9B574\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d;\r\n\t\t},\r\n\r\n\t\tfunction testReadAPI_getValue(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getValue API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getValue API\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tt.assertTrue(store.hasAttribute(item,\"isbn\"));\r\n\t\t\t\tt.assertEqual(store.getValue(item,\"isbn\"), \"A9B574\");\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"A9B574\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_getValue_cdata(t) {\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getValue text() special attribute.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getValue text() special attribute.\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getCDataTestStore();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\ttry{\r\n\t\t\t\t\tt.assertTrue(store.hasAttribute(item,\"ids\"));\r\n\t\t\t\t\tt.assertEqual(store.getValue(item,\"ids\"), \"{68d3c190-4b83-11dd-c204-000000000001}17\");\r\n\t\t\t\t\tvar title = store.getValue(item, \"title\");\r\n\t\t\t\t\tt.assertTrue(store.isItem(title));\r\n\t\t\t\t\tvar titleValue = store.getValue(title, \"text()\");\r\n\t\t\t\t\tt.assertEqual(\"<b>First</b> 3\", dojo.trim(titleValue));\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\td.errback(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{ids:\"{68d3c190-4b83-11dd-c204-000000000001}17\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\r\n\t\tfunction testReadAPI_getValues_cdata(t) {\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getValues text() special attribute.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getValues text() special attribute.\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getCDataTestStore();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\ttry{\r\n\t\t\t\t\tt.assertTrue(store.hasAttribute(item,\"ids\"));\r\n\t\t\t\t\tt.assertEqual(store.getValue(item,\"ids\"), \"{68d3c190-4b83-11dd-c204-000000000001}17\");\r\n\t\t\t\t\tvar title = store.getValue(item, \"title\");\r\n\t\t\t\t\tt.assertTrue(store.isItem(title));\r\n\t\t\t\t\tvar titleValue = store.getValues(title, \"text()\");\r\n\t\t\t\t\tt.assertEqual(\"<b>First</b> 3\", dojo.trim(titleValue[0]));\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\td.errback(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{ids:\"{68d3c190-4b83-11dd-c204-000000000001}17\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_getValue_cdata_toString(t) {\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getValue and toString of the resulting 'XmlItem' API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getValue and toString of the resulting 'XmlItem' API\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getCDataTestStore();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\ttry{\r\n\t\t\t\t\tt.assertTrue(store.hasAttribute(item,\"ids\"));\r\n\t\t\t\t\tt.assertEqual(store.getValue(item,\"ids\"), \"{68d3c190-4b83-11dd-c204-000000000001}17\");\r\n\t\t\t\t\tvar title = store.getValue(item, \"title\");\r\n\t\t\t\t\tt.assertTrue(store.isItem(title));\r\n\t\t\t\t\tvar firstText = title.toString();\r\n\t\t\t\t\tt.assertEqual(\"<b>First</b> 3\", dojo.trim(firstText));\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\td.errback(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{ids:\"{68d3c190-4b83-11dd-c204-000000000001}17\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\r\n\t\tfunction testReadAPI_getValues(t){\r\n\t\t\t // summary:\r\n\t\t\t //\t\tSimple test of the getValues API\r\n\t\t\t // description:\r\n\t\t\t //\t\tSimple test of the getValues API\r\n\t\t\t var store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\r\n\t\t\t var d = new doh.Deferred();\r\n\t\t\t function onComplete(items, request) {\r\n\t\t\t\t t.assertEqual(1, items.length);\r\n\t\t\t\t var item = items[0];\r\n\t\t\t\t t.assertTrue(store.hasAttribute(item,\"isbn\"));\r\n\t\t\t\t var values = store.getValues(item,\"isbn\");\r\n\t\t\t\t t.assertEqual(1,values.length);\r\n\t\t\t\t t.assertEqual(\"A9B574\", values[0]);\r\n\t\t\t\t d.callback(true);\r\n\t\t\t }\r\n\t\t\t function onError(error, request) {\r\n\t\t\t\t d.errback(error);\r\n\t\t\t }\r\n\t\t\t store.fetch({query:{isbn:\"A9B574\"}, onComplete: onComplete, onError: onError});\r\n\t\t\t return d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_isItem(t){\r\n\t\t\t // summary:\r\n\t\t\t //\t\tSimple test of the isItem API\r\n\t\t\t // description:\r\n\t\t\t //\t\tSimple test of the isItem API\r\n\t\t\t var store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\r\n\t\t\t var d = new doh.Deferred();\r\n\t\t\t function onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tt.assertTrue(store.isItem(item));\r\n\t\t\t\tt.assertTrue(!store.isItem({}));\r\n\t\t\t\tt.assertTrue(!store.isItem(\"Foo\"));\r\n\t\t\t\tt.assertTrue(!store.isItem(1));\r\n\t\t\t\td.callback(true);\r\n\t\t\t }\r\n\t\t\t function onError(error, request) {\r\n\t\t\t\t d.errback(error);\r\n\t\t\t }\r\n\t\t\t store.fetch({query:{isbn:\"A9B574\"}, onComplete: onComplete, onError: onError});\r\n\t\t\t return d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_isItem_multistore(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the isItem API across multiple store instances.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the isItem API across multiple store instances.\r\n\t\t\tvar store1 = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\t\t\tvar store2 = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\t\t\tvar d = new doh.Deferred();\r\n\r\n\t\t\tvar onError = function(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t};\r\n\r\n\t\t\tvar onComplete1 = function(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item1 = items[0];\r\n\t\t\t\tt.assertTrue(store1.isItem(item1));\r\n\r\n\t\t\t\tvar onComplete2 = function(items, request) {\r\n\t\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\t\tvar item2 = items[0];\r\n\t\t\t\t\tt.assertTrue(store2.isItem(item2));\r\n\t\t\t\t\tt.assertTrue(!store1.isItem(item2));\r\n\t\t\t\t\tt.assertTrue(!store2.isItem(item1));\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t};\r\n\t\t\t\tstore2.fetch({query:{isbn:\"A9B574\"}, onComplete: onComplete2, onError: onError});\r\n\t\t\t};\r\n\t\t\tstore1.fetch({query:{isbn:\"A9B574\"}, onComplete: onComplete1, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_hasAttribute(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the hasAttribute API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the hasAttribute API\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tt.assertTrue(store.hasAttribute(item,\"isbn\"));\r\n\t\t\t\tt.assertTrue(!store.hasAttribute(item,\"bob\"));\r\n\t\t\t\t//Verify that XML attributes return false in this case.\r\n\t\t\t\tt.assertTrue(store.hasAttribute(item,\"@xmlAttribute\"));\r\n\t\t\t\tt.assertFalse(store.hasAttribute(item,\"@bogus\"));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"A9B574\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_containsValue(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the containsValue API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the containsValue API\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tt.assertTrue(store.containsValue(item,\"isbn\", \"A9B574\"));\r\n\t\t\t\tt.assertTrue(!store.containsValue(item,\"isbn\", \"bob\"));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"A9B574\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_sortDescending(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the sorting API in descending order.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the sorting API in descending order.\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getBooksStore();\r\n\r\n\t\t\t//Comparison is done as a string type (toString comparison), so the order won't be numeric\r\n\t\t\t//So have to compare in 'alphabetic' order.\r\n\t\t\tvar order = [9,8,7,6,5,4,3,20,2,19,18,17,16,15,14,13,12,11,10,1];\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tconsole.log(\"Number of items: \" + items.length);\r\n\t\t\t\tt.assertEqual(20, items.length);\r\n\r\n\t\t\t\tfor(var i = 0; i < items.length; i++){\r\n\t\t\t\t\tt.assertEqual(order[i], store.getValue(items[i],\"isbn\").toString());\r\n\t\t\t\t}\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\r\n\t\t\tvar sortAttributes = [{attribute: \"isbn\", descending: true}];\r\n\t\t\tstore.fetch({query:{isbn:\"*\"}, sort: sortAttributes, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_sortAscending(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the sorting API in ascending order.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the sorting API in ascending order.\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getBooksStore();\r\n\r\n\t\t\t//Comparison is done as a string type (toString comparison), so the order won't be numeric\r\n\t\t\t//So have to compare in 'alphabetic' order.\r\n\t\t\tvar order = [1,10,11,12,13,14,15,16,17,18,19,2,20,3,4,5,6,7,8,9];\r\n\t\t\t\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(20, items.length);\r\n\t\t\t\tvar itemId = 1;\r\n\t\t\t\tfor(var i = 0; i < items.length; i++){\r\n\t\t\t\t\tt.assertEqual(order[i], store.getValue(items[i],\"isbn\").toString());\r\n\t\t\t\t}\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\r\n\t\t\tvar sortAttributes = [{attribute: \"isbn\"}];\r\n\t\t\tstore.fetch({query:{isbn:\"*\"}, sort: sortAttributes, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_sortDescendingNumeric(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the sorting API in descending order using a numeric comparator.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the sorting API in descending order using a numeric comparator.\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getBooksStore();\r\n\r\n\t\t\t//isbn should be treated as a numeric, not as a string comparison\r\n\t\t\tstore.comparatorMap = {};\r\n\t\t\tstore.comparatorMap[\"isbn\"] = function(a, b){\r\n\t\t\t\tvar ret = 0;\r\n\t\t\t\tif(parseInt(a.toString(), 10) > parseInt(b.toString(), 10)){\r\n\t\t\t\t\tret = 1;\r\n\t\t\t\t}else if(parseInt(a.toString(), 10) < parseInt(b.toString(), 10)){\r\n\t\t\t\t\tret = -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn ret; //int, {-1,0,1}\r\n\t\t\t};\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n                \t\tt.assertEqual(20, items.length);\r\n                \t\tvar itemId = 20;\r\n\t\t\t\tfor(var i = 0; i < items.length; i++){\r\n\t\t\t\t\tt.assertEqual(itemId, store.getValue(items[i],\"isbn\").toString());\r\n\t\t\t\t\titemId--;\r\n\t\t\t\t}\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\r\n\t\t\tvar sortAttributes = [{attribute: \"isbn\", descending: true}];\r\n\t\t\tstore.fetch({query:{isbn:\"*\"}, sort: sortAttributes, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_sortAscendingNumeric(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the sorting API in ascending order using a numeric comparator.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the sorting API in ascending order using a numeric comparator.\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getBooksStore();\r\n\r\n\t\t\t//isbn should be treated as a numeric, not as a string comparison\r\n\t\t\tstore.comparatorMap = {};\r\n\t\t\tstore.comparatorMap[\"isbn\"] = function(a, b){\r\n\t\t\t\tvar ret = 0;\r\n\t\t\t\tif(parseInt(a.toString(), 10) > parseInt(b.toString(), 10)){\r\n\t\t\t\t\tret = 1;\r\n\t\t\t\t}else if(parseInt(a.toString(), 10) < parseInt(b.toString(), 10)){\r\n\t\t\t\t\tret = -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn ret; //int, {-1,0,1}\r\n\t\t\t};\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(20, items.length);\r\n\t\t\t\tvar itemId = 1;\r\n\t\t\t\tfor(var i = 0; i < items.length; i++){\r\n\t\t\t\t\tt.assertEqual(itemId, store.getValue(items[i],\"isbn\").toString());\r\n\t\t\t\t\titemId++;\r\n\t\t\t\t}\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\r\n\t\t\tvar sortAttributes = [{attribute: \"isbn\"}];\r\n\t\t\tstore.fetch({query:{isbn:\"*\"}, sort: sortAttributes, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_isItemLoaded(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the isItemLoaded API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the isItemLoaded API\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tt.assertTrue(store.isItemLoaded(item));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"A9B574\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_getFeatures(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getFeatures function of the store\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getFeatures function of the store\r\n\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\t\t\tvar features = store.getFeatures();\r\n\t\t\tvar count = 0;\r\n\t\t\tvar i;\r\n\t\t\tfor(i in features){\r\n\t\t\t\tt.assertTrue((i === \"dojo.data.api.Read\" || i === \"dojo.data.api.Write\" || \"dojo.data.api.Identity\"));\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t\tt.assertEqual(3, count);\r\n\t\t},\r\n\t\tfunction testReadAPI_getAttributes(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getAttributes API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getAttributes API\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tvar attributes = store.getAttributes(item);\r\n\r\n\t\t\t\t//Should be six, as all items should have tagName, childNodes, and text() special attributes\r\n\t\t\t\t//in addition to any doc defined ones, which in this case are author, title, and isbn\r\n\t\t\t\t//FIXME:  Figure out why IE returns 5!  Need to get firebug lite working in IE for that.\r\n\t\t\t\t//Suspect it's childNodes, may not be defined if there are no child nodes.\r\n\t\t\t\tfor(var i = 0; i < attributes.length; i++){\r\n\t\t\t\t\tconsole.log(\"attribute found: \" + attributes[i]);\r\n\t\t\t\t}\r\n\t\t\t\tif(dojo.isIE){\r\n\t\t\t\t\tt.assertEqual(5,attributes.length);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tt.assertEqual(6,attributes.length);\r\n\t\t\t\t}\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"A9B577\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testWriteAPI_setValue(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the setValue API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the setValue API\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tt.assertTrue(store.containsValue(item,\"isbn\", \"A9B574\"));\r\n\t\t\t\tstore.setValue(item, \"isbn\", \"A9B574-new\");\r\n\t\t\t\tt.assertEqual(store.getValue(item,\"isbn\").toString(), \"A9B574-new\");\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"A9B574\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testWriteAPI_setValues(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the setValues API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the setValues API\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tt.assertTrue(store.containsValue(item,\"isbn\", \"A9B574\"));\r\n\t\t\t\tstore.setValues(item, \"isbn\", [\"A9B574-new1\", \"A9B574-new2\"]);\r\n\t\t\t\tvar values = store.getValues(item,\"isbn\");\r\n\t\t\t\tt.assertEqual(values[0].toString(), \"A9B574-new1\");\r\n\t\t\t\tt.assertEqual(values[1].toString(), \"A9B574-new2\");\r\n\t\t\t\tstore.setValues(values[0], \"text()\", [\"A9B574\", \"-new3\"]);\r\n\t\t\t\tt.assertEqual(store.getValue(values[0],\"text()\").toString(), \"A9B574-new3\");\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"A9B574\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testWriteAPI_unsetAttribute(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the unsetAttribute API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the unsetAttribute API\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tt.assertTrue(store.containsValue(item,\"isbn\", \"A9B574\"));\r\n\t\t\t\tstore.unsetAttribute(item,\"isbn\");\r\n\t\t\t\tt.assertTrue(!store.hasAttribute(item,\"isbn\"));\r\n\t\t\t\tt.assertTrue(store.isDirty(item));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"A9B574\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testWriteAPI_isDirty(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the isDirty API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the isDirty API\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tt.assertTrue(store.containsValue(item,\"isbn\", \"A9B574\"));\r\n\t\t\t\tstore.setValue(item, \"isbn\", \"A9B574-new\");\r\n\t\t\t\tt.assertEqual(store.getValue(item,\"isbn\").toString(), \"A9B574-new\");\r\n\t\t\t\tt.assertTrue(store.isDirty(item));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"A9B574\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testWriteAPI_revert(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the write revert API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the write revert API\r\n\t\t\tvar store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tvar onError = function(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t};\r\n\t\t\tvar onComplete = function(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tt.assertTrue(store.containsValue(item,\"isbn\", \"A9B574\"));\r\n\t\t\t\tt.assertTrue(!store.isDirty(item));\r\n\t\t\t\tstore.setValue(item, \"isbn\", \"A9B574-new\");\r\n\t\t\t\tt.assertEqual(store.getValue(item,\"isbn\").toString(), \"A9B574-new\");\r\n\t\t\t\tt.assertTrue(store.isDirty(item));\r\n\t\t\t\tstore.revert();\r\n\t\t\t\t\r\n\t\t\t\t//Fetch again to see if it reset the state.\r\n\t\t\t\tvar onComplete1 = function(items, request) {\r\n\t\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\t\tvar item = items[0];\r\n\t\t\t\t\tt.assertTrue(store.containsValue(item,\"isbn\", \"A9B574\"));\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t};\r\n\t\t\t\tstore.fetch({query:{isbn:\"A9B574\"}, onComplete: onComplete1, onError: onError});\r\n\t\t\t};\r\n\t\t\tstore.fetch({query:{isbn:\"A9B574\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\r\n\t\tfunction testIdentityAPI_getIdentity(t) {\r\n\t\t\t // summary:\r\n\t\t\t //\t\tSimple test of the Identity getIdentity API\r\n\t\t\t // description:\r\n\t\t\t //\t\tSimple test of the Identity getIdentity API\r\n\t\t\t var store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\r\n\t\t\t var d = new doh.Deferred();\r\n\t\t\t function onComplete(items, request) {\r\n\t\t\t\t t.assertEqual(1, items.length);\r\n\t\t\t\t var item = items[0];\r\n\t\t\t\t try {\r\n\t\t\t\t\t t.assertTrue(store.containsValue(item,\"isbn\", \"A9B5CC\"));\r\n\t\t\t\t\t t.assertTrue(store.getIdentity(item) !== null);\r\n\t\t\t\t\t d.callback(true);\r\n\t\t\t\t } catch (e) {\r\n\t\t\t\t\t d.errback(e);\r\n\t\t\t\t }\r\n\t\t\t }\r\n\t\t\t function onError(error, request) {\r\n\t\t\t\t d.errback(error);\r\n\t\t\t }\r\n\t\t\t store.fetch({query:{isbn:\"A9B5CC\"}, onComplete: onComplete, onError: onError});\r\n\t\t\t return d; //Object\r\n\t\t},\r\n\r\n\t\tfunction testIdentityAPI_getIdentityAttributes(t) {\r\n\t\t\t // summary:\r\n\t\t\t //\t\tSimple test of the Identity getIdentityAttributes API where it defaults to internal xpath (no keyAttribute)\r\n\t\t\t // description:\r\n\t\t\t //\t\tSimple test of the Identity getIdentityAttributes API where it defaults to internal xpath (no keyAttribute)\r\n\t\t\t var store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\r\n\t\t\t var d = new doh.Deferred();\r\n\t\t\t function onItem(item, request) {\r\n\t\t\t\ttry{\r\n\t\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\t\tvar idAttrs = store.getIdentityAttributes(item);\r\n\t\t\t\t\tt.assertTrue(idAttrs === null);\r\n\t\t\t\t\tt.assertEqual(\"/books[0]/book[4]\", store.getIdentity(item));\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\td.errback(e);\r\n\t\t\t\t}\r\n\t\t\t }\r\n\t\t\t function onError(error, request) {\r\n\t\t\t\t d.errback(error);\r\n\t\t\t }\r\n\t\t\t store.fetchItemByIdentity({identity: \"/books[0]/book[4]\", onItem: onItem, onError: onError});\r\n\t\t\t return d; //Object\r\n\t\t},\r\n\r\n\t\tfunction testIdentityAPI_getIdentityAttributes_usingKeyAttributeIdentity(t) {\r\n\t\t\t // summary:\r\n\t\t\t //\t\tSimple test of the Identity getIdentityAttributes API where identity is specified by the keyAttribute param\r\n\t\t\t // description:\r\n\t\t\t //\t\tSimple test of the Identity getIdentityAttributes API where identity is specified by the keyAttribute param\r\n\t\t\t var store = dojox.data.tests.stores.XmlStore.getBooks3Store();\r\n\r\n\t\t\t var d = new doh.Deferred();\r\n\t\t\t function onItem(item, request) {\r\n\t\t\t\ttry{\r\n\t\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\t\tvar idAttrs = store.getIdentityAttributes(item);\r\n\t\t\t\t\tt.assertTrue(idAttrs !== null);\r\n\t\t\t\t\tt.assertTrue(idAttrs.length === 1);\r\n\t\t\t\t\tt.assertTrue(idAttrs[0] === \"isbn\");\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\td.errback(e);\r\n\t\t\t\t}\r\n\t\t\t }\r\n\t\t\t function onError(error, request) {\r\n\t\t\t\t d.errback(error);\r\n\t\t\t }\r\n\t\t\t store.fetchItemByIdentity({identity: \"A9B574\", onItem: onItem, onError: onError});\r\n\t\t\t return d; //Object\r\n\t\t},\r\n\r\n\t\tfunction testIdentityAPI_fetchItemByIdentity(t) {\r\n\t\t\t // summary:\r\n\t\t\t //\t\tSimple test of the Identity getIdentity API where the store defaults the identity to a xpathlike lookup.\r\n\t\t\t // description:\r\n\t\t\t //\t\tSimple test of the Identity getIdentity API where the store defaults the identity to a xpathlike lookup.\r\n\t\t\t var store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\r\n\t\t\t var d = new doh.Deferred();\r\n\t\t\t function onItem(item, request) {\r\n\t\t\t\ttry{\r\n\t\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\t\tt.assertEqual(\"/books[0]/book[4]\", store.getIdentity(item));\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\td.errback(e);\r\n\t\t\t\t}\r\n\t\t\t }\r\n\t\t\t function onError(error, request) {\r\n\t\t\t\t d.errback(error);\r\n\t\t\t }\r\n\t\t\t store.fetchItemByIdentity({identity: \"/books[0]/book[4]\", onItem: onItem, onError: onError});\r\n\t\t\t return d; //Object\r\n\t\t\r\n\t\t},\r\n\r\n\t\tfunction testIdentityAPI_fetchItemByIdentity2(t) {\r\n\t\t\t // summary:\r\n\t\t\t //\t\tSimple test of the Identity getIdentity API where the store defaults the identity to a xpathlike lookup.\r\n\t\t\t // description:\r\n\t\t\t //\t\tSimple test of the Identity getIdentity API where the store defaults the identity to a xpathlike lookup.\r\n\t\t\t var store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\r\n\t\t\t var d = new doh.Deferred();\r\n\t\t\t function onItem(item, request) {\r\n\t\t\t\ttry{\r\n\t\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\t\tt.assertEqual(\"/books[0]/book[0]\", store.getIdentity(item));\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\td.errback(e);\r\n\t\t\t\t}\r\n\t\t\t }\r\n\t\t\t function onError(error, request) {\r\n\t\t\t\t d.errback(error);\r\n\t\t\t }\r\n\t\t\t store.fetchItemByIdentity({identity: \"/books[0]/book[0]\", onItem: onItem, onError: onError});\r\n\t\t\t return d; //Object\r\n\t\t\r\n\t\t},\r\n\r\n\t\tfunction testIdentityAPI_fetchItemByIdentity3(t) {\r\n\t\t\t // summary:\r\n\t\t\t //\t\tSimple test of the Identity getIdentity API where the store defaults the identity to a xpathlike lookup.\r\n\t\t\t // description:\r\n\t\t\t //\t\tSimple test of the Identity getIdentity API where the store defaults the identity to a xpathlike lookup.\r\n\t\t\t var store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\r\n\t\t\t var d = new doh.Deferred();\r\n\t\t\t function onItem(item, request) {\r\n\t\t\t\ttry{\r\n\t\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\t\tt.assertEqual(\"/books[0]/book[2]\", store.getIdentity(item));\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\td.errback(e);\r\n\t\t\t\t}\r\n\t\t\t }\r\n\t\t\t function onError(error, request) {\r\n\t\t\t\t d.errback(error);\r\n\t\t\t }\r\n\t\t\t store.fetchItemByIdentity({identity: \"/books[0]/book[2]\", onItem: onItem, onError: onError});\r\n\t\t\t return d; //Object\r\n\t\t\r\n\t\t},\r\n\r\n\t\tfunction testIdentityAPI_fetchItemByIdentity_usingKeyAttributeIdentity(t) {\r\n\t\t\t // summary:\r\n\t\t\t //\t\tSimple test of the Identity getIdentity API where identity is specified by the keyAttribute param\r\n\t\t\t // description:\r\n\t\t\t //\t\tSimple test of the Identity getIdentity API where identity is specified by the keyAttribute param\r\n\t\t\t var store = dojox.data.tests.stores.XmlStore.getBooks3Store();\r\n\r\n\t\t\t var d = new doh.Deferred();\r\n\t\t\t function onItem(item, request) {\r\n\t\t\t\ttry{\r\n\t\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\t\tt.assertEqual(\"A9B574\", store.getIdentity(item));\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\td.errback(e);\r\n\t\t\t\t}\r\n\t\t\t }\r\n\t\t\t function onError(error, request) {\r\n\t\t\t\t d.errback(error);\r\n\t\t\t }\r\n\t\t\t store.fetchItemByIdentity({identity: \"A9B574\", onItem: onItem, onError: onError});\r\n\t\t\t return d; //Object\r\n\t\t},\r\n\r\n\t\tfunction testIdentityAPI_fetchItemByIdentity_usingKeyAttributeIdentity2(t) {\r\n\t\t\t // summary:\r\n\t\t\t //\t\tSimple test of the Identity getIdentity API where identity is specified by the keyAttribute param\r\n\t\t\t // description:\r\n\t\t\t //\t\tSimple test of the Identity getIdentity API where identity is specified by the keyAttribute param\r\n\t\t\t var store = dojox.data.tests.stores.XmlStore.getBooks3Store();\r\n\r\n\t\t\t var d = new doh.Deferred();\r\n\t\t\t function onItem(item, request) {\r\n\t\t\t\ttry{\r\n\t\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\t\tt.assertEqual(\"A9B57C\", store.getIdentity(item));\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\td.errback(e);\r\n\t\t\t\t}\r\n\t\t\t }\r\n\t\t\t function onError(error, request) {\r\n\t\t\t\t d.errback(error);\r\n\t\t\t }\r\n\t\t\t store.fetchItemByIdentity({identity: \"A9B57C\", onItem: onItem, onError: onError});\r\n\t\t\t return d; //Object\r\n\t\t},\r\n\r\n\t\tfunction testIdentityAPI_fetchItemByIdentity_usingKeyAttributeIdentity3(t) {\r\n\t\t\t // summary:\r\n\t\t\t //\t\tSimple test of the Identity getIdentity API where identity is specified by the keyAttribute param\r\n\t\t\t // description:\r\n\t\t\t //\t\tSimple test of the Identity getIdentity API where identity is specified by the keyAttribute param\r\n\t\t\t var store = dojox.data.tests.stores.XmlStore.getBooks3Store();\r\n\r\n\t\t\t var d = new doh.Deferred();\r\n\t\t\t function onItem(item, request) {\r\n\t\t\t\ttry{\r\n\t\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\t\tt.assertEqual(\"A9B5CC\", store.getIdentity(item));\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\td.errback(e);\r\n\t\t\t\t}\r\n\t\t\t }\r\n\t\t\t function onError(error, request) {\r\n\t\t\t\t d.errback(error);\r\n\t\t\t }\r\n\t\t\t store.fetchItemByIdentity({identity: \"A9B5CC\", onItem: onItem, onError: onError});\r\n\t\t\t return d; //Object\r\n\t\t},\r\n\r\n\t\tfunction testIdentityAPI_fetchItemByIdentity_usingKeyAttributeIdentity4(t) {\r\n\t\t\t // summary:\r\n\t\t\t //\t\tSimple test of the Identity getIdentity API where identity is specified by the keyAttribute param\r\n\t\t\t // description:\r\n\t\t\t //\t\tSimple test of the Identity getIdentity API where identity is specified by the keyAttribute param\r\n\t\t\t var store = dojox.data.tests.stores.XmlStore.getGeographyStore();\r\n\r\n\t\t\t var d = new doh.Deferred();\r\n\t\t\t function onItem(item, request) {\r\n\t\t\t\ttry{\r\n\t\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\t\tt.assertEqual(\"Mexico City\", store.getIdentity(item));\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\td.errback(e);\r\n\t\t\t\t}\r\n\t\t\t }\r\n\t\t\t function onError(error, request) {\r\n\t\t\t\t d.errback(error);\r\n\t\t\t }\r\n\t\t\t store.fetchItemByIdentity({identity: \"Mexico City\", onItem: onItem, onError: onError});\r\n\t\t\t return d; //Object\r\n\t\t},\r\n\r\n\r\n\t\tfunction testIdentityAPI_fetchItemByIdentity_fails(t) {\r\n\t\t\t // summary:\r\n\t\t\t //\t\tSimple test of the Identity getIdentity API\r\n\t\t\t // description:\r\n\t\t\t //\t\tSimple test of the Identity getIdentity API\r\n\t\t\t var store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\r\n\t\t\t var d = new doh.Deferred();\r\n\t\t\t function onItem(item, request) {\r\n\t\t\t\t t.assertTrue(item === null);\r\n\t\t\t\t d.callback(true);\r\n\t\t\t }\r\n\t\t\t function onError(error, request) {\r\n\t\t\t\t d.errback(error);\r\n\t\t\t }\r\n\t\t\t //In memory stores use dojo query syntax for the identifier.\r\n\t\t\t store.fetchItemByIdentity({identity: \"/books[0]/book[200]\", onItem: onItem, onError: onError});\r\n\t\t\t return d; //Object\r\n\t\t},\r\n\r\n\t\tfunction testIdentityAPI_fetchItemByIdentity_fails2(t) {\r\n\t\t\t // summary:\r\n\t\t\t //\t\tSimple test of the Identity getIdentity API\r\n\t\t\t // description:\r\n\t\t\t //\t\tSimple test of the Identity getIdentity API\r\n\t\t\t var store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\r\n\t\t\t var d = new doh.Deferred();\r\n\t\t\t function onItem(item, request) {\r\n\t\t\t\t t.assertTrue(item === null);\r\n\t\t\t\t d.callback(true);\r\n\t\t\t }\r\n\t\t\t function onError(error, request) {\r\n\t\t\t\t d.errback(error);\r\n\t\t\t }\r\n\t\t\t //In memory stores use dojo query syntax for the identifier.\r\n\t\t\t store.fetchItemByIdentity({identity: \"/books[1]/book[4]\", onItem: onItem, onError: onError});\r\n\t\t\t return d; //Object\r\n\t\t},\r\n\r\n\t\tfunction testIdentityAPI_fetchItemByIdentity_fails3(t) {\r\n\t\t\t // summary:\r\n\t\t\t //\t\tSimple test of the Identity getIdentity API\r\n\t\t\t // description:\r\n\t\t\t //\t\tSimple test of the Identity getIdentity API\r\n\t\t\t var store = dojox.data.tests.stores.XmlStore.getBooks2Store();\r\n\r\n\t\t\t var d = new doh.Deferred();\r\n\t\t\t function onItem(item, request) {\r\n\t\t\t\t t.assertTrue(item === null);\r\n\t\t\t\t d.callback(true);\r\n\t\t\t }\r\n\t\t\t function onError(error, request) {\r\n\t\t\t\t d.errback(error);\r\n\t\t\t }\r\n\t\t\t //In memory stores use dojo query syntax for the identifier.\r\n\t\t\t store.fetchItemByIdentity({identity: \"/books[1]/book[200]\", onItem: onItem, onError: onError});\r\n\t\t\t return d; //Object\r\n\t\t},\r\n\r\n\t\tfunction testIdentityAPI_fetchItemByIdentity_usingKeyAttributeIdentity_fails(t) {\r\n\t\t\t // summary:\r\n\t\t\t //\t\tSimple test of the Identity getIdentity API where identity is specified by the keyAttribute param\r\n\t\t\t // description:\r\n\t\t\t //\t\tSimple test of the Identity getIdentity API where identity is specified by the keyAttribute param\r\n\t\t\t var store = dojox.data.tests.stores.XmlStore.getBooks3Store();\r\n\r\n\t\t\t var d = new doh.Deferred();\r\n\t\t\t function onItem(item, request) {\r\n\t\t\t\ttry{\r\n\t\t\t\t\tt.assertTrue(item === null);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\td.errback(e);\r\n\t\t\t\t}\r\n\t\t\t }\r\n\t\t\t function onError(error, request) {\r\n\t\t\t\t d.errback(error);\r\n\t\t\t }\r\n\t\t\t store.fetchItemByIdentity({identity: \"A9B574_NONEXISTENT\", onItem: onItem, onError: onError});\r\n\t\t\t return d; //Object\r\n\t\t},\r\n\r\n\t\tfunction testReadAPI_functionConformance(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test read API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test read API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\r\n\t\t\tvar testStore = dojox.data.tests.stores.XmlStore.getBooksStore();\r\n\t\t\tvar readApi = new dojo.data.api.Read();\r\n\t\t\tvar passed = true;\r\n\t\t\tvar i;\r\n\t\t\tfor(i in readApi){\r\n\t\t\t\tvar member = readApi[i];\r\n\t\t\t\t//Check that all the 'Read' defined functions exist on the test store.\r\n\t\t\t\tif(typeof member === \"function\"){\r\n\t\t\t\t\tvar testStoreMember = testStore[i];\r\n\t\t\t\t\tif(!(typeof testStoreMember === \"function\")){\r\n\t\t\t\t\t\tconsole.log(\"Problem with function: [\" + i + \"]\");\r\n\t\t\t\t\t\tpassed = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tt.assertTrue(passed);\r\n\t\t},\r\n\t\tfunction testWriteAPI_functionConformance(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test write API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test write API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\r\n\t\t\tvar testStore = dojox.data.tests.stores.XmlStore.getBooksStore();\r\n\t\t\tvar writeApi = new dojo.data.api.Write();\r\n\t\t\tvar passed = true;\r\n\t\t\tvar i;\r\n\t\t\tfor(i in writeApi){\r\n\t\t\t\tvar member = writeApi[i];\r\n\t\t\t\t//Check that all the 'Write' defined functions exist on the test store.\r\n\t\t\t\tif(typeof member === \"function\"){\r\n\t\t\t\t\tvar testStoreMember = testStore[i];\r\n\t\t\t\t\tif(!(typeof testStoreMember === \"function\")){\r\n\t\t\t\t\t\tpassed = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tt.assertTrue(passed);\r\n\t\t},\r\n\t\tfunction testIdentityAPI_functionConformance(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test write API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test write API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\r\n\t\t\tvar testStore = dojox.data.tests.stores.XmlStore.getBooksStore();\r\n\t\t\tvar identityApi = new dojo.data.api.Identity();\r\n\t\t\tvar passed = true;\r\n\t\t\tvar i;\r\n\t\t\tfor(i in identityApi){\r\n\t\t\t\tvar member = identityApi[i];\r\n\t\t\t\t//Check that all the 'Write' defined functions exist on the test store.\r\n\t\t\t\tif(typeof member === \"function\"){\r\n\t\t\t\t\tvar testStoreMember = testStore[i];\r\n\t\t\t\t\tif(!(typeof testStoreMember === \"function\")){\r\n\t\t\t\t\t\tpassed = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tt.assertTrue(passed);\r\n\t\t}\r\n\t]\r\n);\r\n"]}