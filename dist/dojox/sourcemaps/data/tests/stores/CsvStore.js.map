{"version":3,"sources":["data/tests/stores/CsvStore.js"],"names":["dojo","provide","require","dojox","data","tests","stores","CsvStore","getDatasource","filepath","dataSource","isBrowser","url","toUrl","toString","csvData","verifyItems","csvStore","items","attribute","compareArray","length","i","getValue","error","t","d","errData","console","log","errback","doh","register","args","Deferred","fetch","onComplete","assertTrue","callback","onError","partial","separator","assertEqual","query","Title","request","is","urlPreventCache","done","e","fetchItemByIdentity","identity","onItem","item","count","onBegin","size","requestObj","isItem","dumpSixthFetch","dumpFifthFetch","start","dumpFourthFetch","dumpThirdFetch","dumpSecondFetch","dumpFirstFetch","label","getLabel","labelList","getLabelAttributes","isArray","names","getValues","identifier","passed","getIdentity","Error","err","getIdentityAttributes","hasAttribute","containsValue","attributes","getAttributes","features","getFeatures","Producer","value","queryOptions","ignoreCase","sort","descending","orderedArray","undefined","orderedArray1","comparatorMap","a","b","ret","lastName","name","matches","match","lastNameA","lastNameB","findResult","runTest","store","abortCalled","req","abort","testStore","readApi","api","Read","charAt","testStoreMember","identityApi","Identity"],"mappings":";;;;;;;AAAAA,KAAKC,QAAQ,oCACbD,KAAKE,QAAQ,uBACbF,KAAKE,QAAQ,sBACbF,KAAKE,QAAQ,0BAEbC,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAgB,SAASC,GAMzD,IAAIC,KACJ,GAAGV,KAAKW,UACPD,EAAWE,IAAMV,QAAQW,MAAM,oBAAoBJ,GAAUK,eACzD,CAGJ,IAAIC,EACJ,OAAON,GACN,IAAK,oBACJM,GAAW,0BACXA,GAAW,kCACXA,GAAW,2BACXA,GAAW,iDACXA,GAAW,yDACXA,GAAW,iCACXA,GAAW,gEACXA,GAAW,8DACX,MACD,IAAK,qBACJA,GAAW,0BACXA,GAAW,kCACXA,GAAW,6BACXA,GAAW,iDACXA,GAAW,yDACXA,GAAW,iCACXA,GAAW,gEACXA,GAAW,8DACX,MACD,IAAK,mBACJA,GAAW,0BACX,MACD,IAAK,qBACJA,GAAW,0BACXA,GAAW,sCACXA,GAAW,6BACXA,GAAW,iDACXA,GAAW,yDACXA,GAAW,iCACXA,GAAW,kEACXA,GAAW,8DACX,MACD,IAAK,mBACJA,GAAW,kBACXA,GAAW,wCACXA,GAAW,gDACXA,GAAW,uCACXA,GAAW,uCACXA,GAAW,kCACXA,GAAW,qDACXA,GAAW,kCACXA,GAAW,+CACXA,GAAW,qCACX,MACD,IAAK,sBACJA,GAAW,oBACXA,GAAW,4BACXA,GAAW,wBACXA,GAAW,eACXA,GAAW,cACXA,GAAW,gBACXA,GAAW,cACXA,GAAW,mBACXA,GAAW,eACXA,GAAW,QACXA,GAAW,cACX,MACD,IAAK,gCACJA,GAAW,kBACXA,GAAW,cACXA,GAAW,eACXA,GAAW,cACXA,GAAW,eACXA,GAAW,cACXA,GAAW,eACX,MACD,IAAK,2BACJA,GAAW,kBACXA,GAAW,cACXA,GAAW,eACXA,GAAW,cACXA,GAAW,eACXA,GAAW,cACXA,GAAW,eACX,MACD,IAAK,iCACJA,GAAW,kBACXA,GAAW,qBACXA,GAAW,eACXA,GAAW,cACXA,GAAW,eACXA,GAAW,cACXA,GAAW,eAGbL,EAAWN,KAAOW,EAEnB,OAAOL,GAGRP,MAAMC,KAAKC,MAAMC,OAAOC,SAASS,YAAc,SAASC,EAAUC,EAAOC,EAAWC,GAInF,GAAGF,EAAMG,QAAUD,EAAaC,OAAS,OAAO,EAChD,IAAI,IAAIC,EAAI,EAAGA,EAAIJ,EAAMG,OAAQC,IAChC,GAAKL,EAASM,SAASL,EAAMI,GAAIH,KAAeC,EAAaE,GAC5D,OAAO,EAGT,OAAO,GAGRnB,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAQ,SAASC,EAAGC,EAAGC,GAGvD,IAAK,IAAIL,KAAKK,EACbC,QAAQC,IAAIF,EAAQL,IAErBI,EAAEI,QAAQH,IAGXI,IAAIC,SAAS,oCAEX,SAA+BP,GAM9B,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAQhB,OADAjB,EAASkB,OAAQC,WANjB,SAAsBlB,GACrBO,EAAEY,WAA6B,IAAjBnB,EAAMG,QACpBK,EAAEY,UAAS,IAI+BC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACrGA,GAER,SAAqCD,GAMpC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,oBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAQhB,OADAjB,EAASkB,OAAQC,WANjB,SAAsBlB,GACrBO,EAAEY,WAA6B,IAAjBnB,EAAMG,QACpBK,EAAEY,UAAS,IAI+BC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACrGA,GAER,SAAyCD,GAMxC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,iCAC1DyB,EAAKQ,UAAY,IACjB,IAAIxB,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAQhB,OADAjB,EAASkB,OAAQC,WANjB,SAAsBlB,GACrBO,EAAEiB,YAAY,EAAGxB,EAAMG,QACvBK,EAAEY,UAAS,IAI+BC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACrGA,GAER,SAAoCD,GAKnC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,4BAC1DyB,EAAKQ,UAAY,IACjB,IAAIxB,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAQhB,OADAjB,EAASkB,OAAQC,WANjB,SAAsBlB,GACrBO,EAAEiB,YAAY,EAAGxB,EAAMG,QACvBK,EAAEY,UAAS,IAI+BC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACrGA,GAER,SAA2CD,GAK1C,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,kCAC1DyB,EAAKQ,UAAY,IACjB,IAAIxB,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAQhB,OADAjB,EAASkB,OAAQC,WANjB,SAAsBlB,GACrBO,EAAEiB,YAAY,EAAGxB,EAAMG,QACvBK,EAAEY,UAAS,IAI+BC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACrGA,GAER,SAA+CD,GAM9C,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,sBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAQhB,OADAjB,EAASkB,OAAQC,WANjB,SAAsBlB,GACrBO,EAAEY,WAA6B,IAAjBnB,EAAMG,QACpBK,EAAEY,UAAS,IAI+BC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACrGA,GAER,SAAoDD,GAMnD,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,sBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAQhB,OADAjB,EAASkB,OAAQC,WANjB,SAAsBlB,GACrBO,EAAEY,WAA6B,IAAjBnB,EAAMG,QACpBK,EAAEY,UAAS,IAI+BC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACrGA,GAER,SAA+BD,GAM9B,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAShB,OAJAjB,EAASkB,OAASQ,OAAQC,MAAO,YAC5BR,WALL,SAAoBlB,EAAO2B,GAC1BpB,EAAEqB,GAAG,EAAG5B,EAAMG,QACdK,EAAEY,UAAS,IAIPC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KAE/DA,GAER,SAA4CD,GAM3C,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBAC1DyB,EAAKc,iBAAkB,EACvB,IAAI9B,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAShB,OAJAjB,EAASkB,OAASQ,OAAQC,MAAO,YAC5BR,WALL,SAAoBlB,EAAO2B,GAC1BpB,EAAEqB,GAAG,EAAG5B,EAAMG,QACdK,EAAEY,UAAS,IAIPC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KAE/DA,GAER,SAAoCD,GAMnC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAEZc,IAAQ,GAAO,GAkBnB,IAEC/B,EAASkB,OAASQ,OAAQC,MAAO,YAC5BR,WAnBN,SAAuBlB,EAAO2B,GAC7BG,EAAK,IAAK,EACVvB,EAAEqB,GAAG,EAAG5B,EAAMG,QACX2B,EAAK,IAAMA,EAAK,IAClBtB,EAAEY,UAAS,IAgBPC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KAEtET,EAASkB,OAASQ,OAAQC,MAAO,UAC5BR,WAfN,SAAuBlB,EAAO2B,GAC7BG,EAAK,IAAK,EACVvB,EAAEqB,GAAG,EAAG5B,EAAMG,QACX2B,EAAK,IAAMA,EAAK,IAClBtB,EAAEY,UAAS,IAYPC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KAGvE,MAAMuB,GAEL,IAAK,IAAI3B,KAAK2B,EACbrB,QAAQC,IAAIoB,EAAE3B,IAIhB,OAAOI,GAER,SAAyCD,GAMxC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAEZc,IAAQ,GAAO,GAyBnB,OANA/B,EAASkB,OAASQ,OAAQC,MAAO,YAC5BR,WAnBL,SAAoBlB,EAAO2B,GAC1BG,EAAK,IAAK,EACVvB,EAAEqB,GAAG,EAAG5B,EAAMG,QACX2B,EAAK,IAAMA,EAAK,IAClBtB,EAAEY,UAAS,IAgBRC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KAGtET,EAASiC,qBAAqBC,SAAU,IAAKC,OAf7C,SAAgBC,GACfL,EAAK,IAAK,EACVvB,EAAEY,WAAoB,OAATgB,GACb5B,EAAEqB,GAAG,6BAA8B7B,EAASM,SAAS8B,EAAK,aAC1D5B,EAAEqB,GAAG,oBAAqB7B,EAASM,SAAS8B,EAAK,UAC9CL,EAAK,IAAMA,EAAK,IAClBtB,EAAEY,UAAS,IASgDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACvHA,GAER,SAAyCD,GAMxC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SACZoB,EAAQ,EAqBZ,OALArC,EAASkB,OAAQoB,QAdjB,SAAiBC,EAAMC,GACtBhC,EAAEY,WAAoB,IAATmB,IAcTJ,OAZL,SAAgBC,EAAMI,GACrBhC,EAAEY,WAAWpB,EAASyC,OAAOL,IAC7BC,KAWIlB,WATL,SAAoBlB,EAAO2B,GAC1BpB,EAAEqB,GAAG,EAAGQ,GACR7B,EAAEqB,GAAG,KAAM5B,GACRQ,EAAEY,UAAS,IAOVC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KAE/DA,GAER,SAAkCD,GAMjC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAEhB,SAASyB,EAAezC,EAAO2B,GAC9BpB,EAAEqB,GAAG,EAAG5B,EAAMG,QACXK,EAAEY,UAAS,GAGf,SAASsB,EAAe1C,EAAO2B,GAC9BpB,EAAEqB,GAAG,EAAG5B,EAAMG,QACdwB,EAAQgB,MAAQ,EAChBhB,EAAQS,MAAQ,GAChBT,EAAQT,WAAauB,EACrB1C,EAASkB,MAAMU,GAGhB,SAASiB,EAAgB5C,EAAO2B,GAC/BpB,EAAEqB,GAAG,EAAG5B,EAAMG,QACdwB,EAAQgB,MAAQ,EAChBhB,EAAQS,MAAQ,IAChBT,EAAQT,WAAawB,EACrB3C,EAASkB,MAAMU,GAGhB,SAASkB,EAAe7C,EAAO2B,GAC9BpB,EAAEqB,GAAG,EAAG5B,EAAMG,QACdwB,EAAQgB,MAAQ,EAChBhB,EAAQS,MAAQ,GAChBT,EAAQT,WAAa0B,EACrB7C,EAASkB,MAAMU,GAGhB,SAASmB,EAAgB9C,EAAO2B,GAC/BpB,EAAEqB,GAAG,EAAG5B,EAAMG,QACdwB,EAAQgB,MAAQ,EAChBhB,EAAQS,MAAQ,EAChBT,EAAQT,WAAa2B,EACrB9C,EAASkB,MAAMU,GAGhB,SAASoB,EAAe/C,EAAO2B,GAC9BpB,EAAEqB,GAAG,EAAG5B,EAAMG,QACdwB,EAAQgB,MAAQ,EAChBhB,EAAQS,MAAQ,EAChBT,EAAQT,WAAa4B,EACrB/C,EAASkB,MAAMU,GAYhB,OADA5B,EAASkB,OAAOC,WARhB,SAAmBlB,EAAO2B,GACzBpB,EAAEqB,GAAG,EAAG5B,EAAMG,QACdwB,EAAQgB,MAAQ,EAChBhB,EAAQS,MAAQ,EAChBT,EAAQT,WAAa6B,EACrBhD,EAASkB,MAAMU,IAGuBN,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACjGA,GAGR,SAA8BD,GAM7B,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBAC1DyB,EAAKiC,MAAQ,QACb,IAAIjD,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAYhB,OAJAjB,EAASkB,OAASQ,OAAQC,MAAO,YAC5BR,WARL,SAAoBlB,EAAO2B,GAC1BpB,EAAEiB,YAAYxB,EAAMG,OAAQ,GAC5B,IAAI6C,EAAQjD,EAASkD,SAASjD,EAAM,IACpCO,EAAEY,WAAqB,OAAV6B,GACbzC,EAAEiB,YAAY,sCAAyCwB,GACvDxC,EAAEY,UAAS,IAIPC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KAE/DA,GAER,SAAwCD,GAMtC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBAC1DyB,EAAKiC,MAAQ,QACb,IAAIjD,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEpCP,EAAI,IAAIK,IAAIG,SAYhB,OAJAjB,EAASkB,OAASQ,OAAQC,MAAO,YAC5BR,WARL,SAAoBlB,EAAO2B,GAC1BpB,EAAEiB,YAAYxB,EAAMG,OAAQ,GAC5B,IAAI+C,EAAYnD,EAASoD,mBAAmBnD,EAAM,IAClDO,EAAEY,WAAWrC,KAAKsE,QAAQF,IAC1B3C,EAAEiB,YAAY,QAAS0B,EAAU,IACjC1C,EAAEY,UAAS,IAIPC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KAE/DA,GAER,SAA8BD,GAM7B,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAQhB,OADAjB,EAASiC,qBAAqBC,SAAU,IAAKC,OAN7C,SAAgBC,GACf5B,EAAEY,WAAoB,OAATgB,GACb5B,EAAEqB,GAAG,6BAA8B7B,EAASM,SAAS8B,EAAK,aAC1D5B,EAAEqB,GAAG,oBAAqB7B,EAASM,SAAS8B,EAAK,UACjD3B,EAAEY,UAAS,IAEiDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACvHA,GAER,SAAgCD,GAM/B,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAQhB,OADSjB,EAASiC,qBAAqBC,SAAU,IAAKC,OANtD,SAAgBC,GACf5B,EAAEY,WAAoB,OAATgB,GACb5B,EAAEqB,GAAG,cAAe7B,EAASM,SAAS8B,EAAK,UAC3C5B,EAAEqB,GAAG,OAAQ7B,EAASM,SAAS8B,EAAK,SACpC3B,EAAEY,UAAS,IAE0DC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KAChIA,GAER,SAAgCD,GAM/B,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAQhB,OADAjB,EAASiC,qBAAqBC,SAAU,IAAKC,OAN7C,SAAgBC,GACf5B,EAAEY,WAAoB,OAATgB,GACb5B,EAAEqB,GAAG,OAAQ7B,EAASM,SAAS8B,EAAK,SACpC5B,EAAEqB,GAAG,QAAS7B,EAASM,SAAS8B,EAAK,UACrC3B,EAAEY,UAAS,IAEiDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACvHA,GAER,SAAgCD,GAM/B,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAQhB,OADAjB,EAASiC,qBAAqBC,SAAU,IAAKC,OAN7C,SAAgBC,GACf5B,EAAEY,WAAoB,OAATgB,GACb5B,EAAEqB,GAAG,wBAAyB7B,EAASM,SAAS8B,EAAK,UACrD5B,EAAEqB,GAAG,kBAAmB7B,EAASM,SAAS8B,EAAK,aAC/C3B,EAAEY,UAAS,IAEiDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACvHA,GAGR,SAA+BD,GAM9B,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAUhB,OADAjB,EAASiC,qBAAqBC,SAAU,IAAKC,OAR7C,SAAgBC,GACf5B,EAAEY,WAAoB,OAATgB,GACb,IAAIkB,EAAQtD,EAASuD,UAAUnB,EAAK,SACpC5B,EAAEY,WAAWrC,KAAKsE,QAAQC,IAC1B9C,EAAEqB,GAAG,EAAGyB,EAAMlD,QACdI,EAAEqB,GAAG,OAAQyB,EAAM,IACnB7C,EAAEY,UAAS,IAEiDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACvHA,GAER,SAA6CD,GAM5C,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAMhB,OADAjB,EAASiC,qBAAqBC,SAAU,IAAKC,OAJ7C,SAAgBC,GACf5B,EAAEY,WAAoB,OAATgB,GACb3B,EAAEY,UAAS,IAEiDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACvHA,GAGR,SAAmED,GAMlE,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBAC1DyB,EAAKwC,WAAa,QAClB,IAAIxD,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAMhB,OADAjB,EAASiC,qBAAqBC,SAAU,cAAeC,OAJvD,SAAgBC,GACf5B,EAAEY,WAAoB,OAATgB,GACb3B,EAAEY,UAAS,IAE2DC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACjIA,GAGR,SAAwED,GAMvE,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBAC1DyB,EAAKwC,WAAa,QAClB,IAAIxD,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAMhB,OADAjB,EAASiC,qBAAqBC,SAAU,gBAAiBC,OAJzD,SAAgBC,GACf5B,EAAEY,WAAoB,OAATgB,GACb3B,EAAEY,UAAS,IAE6DC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACnIA,GAGR,SAAkDD,GAMjD,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAMhB,OADAjB,EAASiC,qBAAqBC,SAAU,IAAKC,OAJ7C,SAAgBC,GACf5B,EAAEY,WAAoB,OAATgB,GACb3B,EAAEY,UAAS,IAEiDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACvHA,GAER,SAAkDD,GAMjD,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GACnCP,EAAI,IAAIK,IAAIG,SAMhB,OADAjB,EAASiC,qBAAqBC,SAAU,KAAMC,OAJ9C,SAAgBC,GACf5B,EAAEY,WAAoB,OAATgB,GACb3B,EAAEY,UAAS,IAEkDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACxHA,GAER,SAAkDD,GAMjD,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GACnCP,EAAI,IAAIK,IAAIG,SAMhB,OADAjB,EAASiC,qBAAqBC,SAAU,SAAUC,OAJlD,SAAgBC,GACf5B,EAAEY,WAAoB,OAATgB,GACb3B,EAAEY,UAAS,IAEsDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KAC5HA,GAER,SAAqCD,GAMpC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAgBhB,OADAjB,EAASkB,OAAQC,WAdjB,SAAmBlB,EAAO2B,GACzBpB,EAAEqB,GAAG,EAAG5B,EAAMG,QAEd,IADA,IAAIqD,GAAS,EACLpD,EAAI,EAAGA,EAAIJ,EAAMG,OAAQC,IAChC,GAAKL,EAAS0D,YAAYzD,EAAMI,MAAQA,EAAG,CAC1CoD,GAAO,EACP,MAGFjD,EAAEY,WAAWqC,GACbhD,EAAEY,UAAS,IAI4BC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KAClGA,GAGR,SAA2DD,GAM1D,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBAC1DyB,EAAKwC,WAAa,QAClB,IAAIxD,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAgBhB,OADAjB,EAASkB,OAAQC,WAdjB,SAAmBlB,EAAO2B,GACzBpB,EAAEqB,GAAG,EAAG5B,EAAMG,QAEd,IADA,IAAIqD,GAAS,EACLpD,EAAI,EAAGA,EAAIJ,EAAMG,OAAQC,IAChC,IAAIL,EAAS0D,YAAYzD,EAAMI,IAAI,CAChBoD,GAAO,EACzB,MAGFjD,EAAEY,WAAWqC,GACbhD,EAAEY,UAAS,IAI4BC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KAClGA,GAGR,SAA8DD,GAM7D,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBAC1DyB,EAAKwC,WAAa,aAClB,IAAIxD,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAUhB,OADAjB,EAASkB,OAAOC,WARhB,SAAmBlB,EAAO2B,GACzBnB,EAAEI,QAAQ,IAAI8C,MAAM,qDAOkBrC,QALvC,SAAesC,GACdnD,EAAEY,UAAS,MAKLZ,GAGR,SAA+CD,GAM9C,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAOb,OADHjB,EAASiC,qBAAqBC,SAAU,IAAKC,OAL7C,SAAgBC,GACf5B,EAAEY,WAAWpB,EAASyC,OAAOL,IAC7B5B,EAAEiB,YAAY,KAAMzB,EAAS6D,sBAAsBzB,IACnD3B,EAAEY,UAAS,IAEiDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACpHA,GAEX,SAA4BD,GAM3B,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAUb,OADHjB,EAASiC,qBAAqBC,SAAU,IAAKC,OAR7C,SAAgBC,GACf5B,EAAEY,WAAWpB,EAASyC,OAAOL,IAC7B5B,EAAEY,YAAYpB,EAASyC,YACvBjC,EAAEY,YAAYpB,EAASyC,QAASL,KAAM,iBACtC5B,EAAEY,YAAYpB,EAASyC,OAAO,gBAC9BjC,EAAEY,YAAYpB,EAASyC,QAAQ,iBAC/BhC,EAAEY,UAAS,IAEiDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACpHA,GAEX,SAAkCD,GAMjC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAoBb,OADHjB,EAASiC,qBAAqBC,SAAU,IAAKC,OAlB7C,SAAgBC,GACf5B,EAAEY,WAAoB,OAATgB,GACb5B,EAAEY,WAAWpB,EAAS8D,aAAa1B,EAAM,UACzC5B,EAAEY,WAAWpB,EAAS8D,aAAa1B,EAAM,aACzC5B,EAAEY,YAAYpB,EAAS8D,aAAa1B,EAAM,SAC1C5B,EAAEY,YAAYpB,EAAS8D,aAAa1B,EAAM,YAC1C5B,EAAEY,YAAYpB,EAAS8D,aAAa1B,EAAM,UAG1C,IAAIqB,GAAS,EACb,IACCzD,EAAS8D,aAAa1B,EAAM,MAC5B,MAAOJ,GACPyB,GAAS,EAEVjD,EAAEY,WAAWqC,GACbhD,EAAEY,UAAS,IAEiDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACpHA,GAEX,SAAmCD,GAMlC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAqBb,OADHjB,EAASiC,qBAAqBC,SAAU,IAAKC,OAnB7C,SAAgBC,GACf5B,EAAEY,WAAoB,OAATgB,GACb5B,EAAEY,WAAWpB,EAAS+D,cAAc3B,EAAM,QAAS,UACnD5B,EAAEY,WAAWpB,EAAS+D,cAAc3B,EAAM,OAAQ,SAClD5B,EAAEY,WAAWpB,EAAS+D,cAAc3B,EAAM,WAAY,iBACtD5B,EAAEY,YAAYpB,EAAS+D,cAAc3B,EAAM,QAAS,WACpD5B,EAAEY,YAAYpB,EAAS+D,cAAc3B,EAAM,OAAQ,YACnD5B,EAAEY,YAAYpB,EAAS+D,cAAc3B,EAAM,QAAS,OAGpD,IAAIqB,GAAS,EACb,IACCzD,EAAS+D,cAAc3B,EAAM,KAAM,OACnC,MAAOJ,GACPyB,GAAS,EAEVjD,EAAEY,WAAWqC,GACbhD,EAAEY,UAAS,IAEiDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACpHA,GAEX,SAAmCD,GAMlC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAab,OADHjB,EAASiC,qBAAqBC,SAAU,IAAKC,OAX7C,SAAgBC,GACf5B,EAAEY,WAAoB,OAATgB,GACb5B,EAAEY,WAAWpB,EAASyC,OAAOL,IAE7B,IAAI4B,EAAahE,EAASiE,cAAc7B,GACxC5B,EAAEqB,GAAG,EAAGmC,EAAW5D,QACnB,IAAI,IAAIC,EAAI,EAAGA,EAAI2D,EAAW5D,OAAQC,IACrCG,EAAEY,WAA8B,UAAlB4C,EAAW3D,IAAoC,SAAlB2D,EAAW3D,IAAmC,aAAlB2D,EAAW3D,IAEnFI,EAAEY,UAAS,IAEiDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACpHA,GAGX,SAA2CD,GAM1C,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAab,OADHjB,EAASiC,qBAAqBC,SAAU,IAAKC,OAX7C,SAAgBC,GAEf5B,EAAEY,WAAoB,OAATgB,GACb5B,EAAEY,WAAWpB,EAASyC,OAAOL,IAE7B,IAAI4B,EAAahE,EAASiE,cAAc7B,GACxC5B,EAAEY,WAAiC,IAAtB4C,EAAW5D,QACxBI,EAAEY,WAA6B,UAAlB4C,EAAW,IACxBxD,EAAEY,WAA6B,aAAlB4C,EAAW,IACxBvD,EAAEY,UAAS,IAEiDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACpHA,GAGX,SAAiCD,GAMhC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBAGtD2E,EAFW,IAAIhF,MAAMC,KAAKG,SAAS0B,GAEfmD,cACpB9B,EAAQ,EACZ,IAAI,IAAIhC,KAAK6D,EACZ1D,EAAEY,WAAkB,uBAANf,GAAoC,2BAANA,GAC5CgC,IAED7B,EAAEY,WAAqB,IAAViB,IAEd,SAAyC7B,GAMxC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAShB,OADAjB,EAASkB,OAAOQ,OAAQ0C,SAAU,WAAYjD,WAP9C,SAAmBlB,EAAO2B,GACzBpB,EAAEqB,GAAG,EAAG5B,EAAMG,QAEdI,EAAEY,WAAWlC,MAAMC,KAAKC,MAAMC,OAAOC,SAASS,YAAYC,EAAUC,EAAO,SADxD,QAAS,yCAE5BQ,EAAEY,UAAS,IAGyDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KAC/HA,GAER,SAAyCD,GAMxC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,uBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAShB,OADAjB,EAASkB,OAAOQ,OAAQ2C,MAAO,OAAQlD,WAPvC,SAAmBlB,EAAO2B,GACzBpB,EAAEY,WAA4B,IAAjBnB,EAAMG,QAEnBI,EAAEY,WAAWlC,MAAMC,KAAKC,MAAMC,OAAOC,SAASS,YAAYC,EAAUC,EAAO,SADxD,uBAAwB,cAE3CQ,EAAEY,UAAS,IAGkDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACxHA,GAER,SAAyCD,GAMxC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,uBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAQhB,OADAjB,EAASkB,OAAOQ,OAAQ2C,MAAO,aAAclD,WAN7C,SAAmBlB,EAAO2B,GACzBpB,EAAEqB,GAAG,EAAG5B,EAAMG,QACdI,EAAEY,WAAoD,YAAzCpB,EAASM,SAASL,EAAM,GAAI,UACzCQ,EAAEY,UAAS,IAGwDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KAC9HA,GAER,SAAwDD,GAMvD,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,uBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAQhB,OADAjB,EAASkB,OAAOQ,OAAQ2C,MAAO,aAAcC,cAAeC,YAAY,GAAOpD,WAN/E,SAAmBlB,EAAO2B,GACzBpB,EAAEqB,GAAG,EAAG5B,EAAMG,QACdI,EAAEY,WAAoD,YAAzCpB,EAASM,SAASL,EAAM,GAAI,UACzCQ,EAAEY,UAAS,IAG0FC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KAChKA,GAER,SAAsDD,GAMrD,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,uBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAOhB,OADAjB,EAASkB,OAAOQ,OAAQ2C,MAAO,aAAcC,cAAeC,YAAY,GAAQpD,WALhF,SAAmBlB,EAAO2B,GACzBpB,EAAEqB,GAAG,EAAG5B,EAAMG,QACdK,EAAEY,UAAS,IAG2FC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACjKA,GAER,SAAuCD,GAMtC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,uBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAahB,OAHAjB,EAASkB,OAAOC,WAThB,SAAmBlB,EAAO2B,GACzBpB,EAAEY,WAA4B,KAAjBnB,EAAMG,QAGnBI,EAAEY,WAAWlC,MAAMC,KAAKC,MAAMC,OAAOC,SAASS,YAAYC,EAAUC,EAAO,YADtD,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,OAEnEQ,EAAEY,UAAS,IAKRC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,GACjE+D,OAHmBtE,UAAW,eAI3BO,GAER,SAAiDD,GAMhD,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,uBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAWhB,OADAjB,EAASkB,OAAQsD,OADMtE,UAAW,WAAYuE,YAAY,IACnBtD,WATvC,SAAmBlB,EAAO2B,GACzBpB,EAAEqB,GAAG,GAAI5B,EAAMG,QAGfI,EAAEY,WAAWlC,MAAMC,KAAKC,MAAMC,OAAOC,SAASS,YAAYC,EAAUC,EAAO,YADtD,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,OAEnEQ,EAAEY,UAAS,IAIkDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACxHA,GAER,SAAgDD,GAM/C,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,uBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAchB,OAJAjB,EAASkB,OAAOsD,OADOtE,UAAW,WAAYuE,YAAY,IAEtDpC,MAAO,EACPlB,WAXJ,SAAmBlB,EAAO2B,GACzBpB,EAAEqB,GAAG,EAAG5B,EAAMG,QAGdI,EAAEY,WAAWlC,MAAMC,KAAKC,MAAMC,OAAOC,SAASS,YAAYC,EAAUC,EAAO,YADtD,IAAK,IAAK,IAAK,IAAK,OAEzCQ,EAAEY,UAAS,IAORC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KAC9DA,GAER,SAA0CD,GAMzC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,uBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAqBhB,OADAjB,EAASkB,OAAOsD,OADOtE,UAAW,UACIiB,WAnBtC,SAAmBlB,EAAO2B,GAEzB,IAAI8C,GAAkB,SAChB,SACA,SACA,aACA,mBACA,UACA,WACA,UACA,4BACAC,GAENnE,EAAEqB,GAAG,GAAI5B,EAAMG,QACfI,EAAEY,WAAWlC,MAAMC,KAAKC,MAAMC,OAAOC,SAASS,YAAYC,EAAUC,EAAO,QAASyE,IACpFjE,EAAEY,UAAS,IAIiDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACvHA,GAER,SAAoDD,GAMnD,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,uBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAqBhB,OADAjB,EAASkB,OAAOsD,OADOtE,UAAW,QAASuE,YAAY,IACjBtD,WAnBtC,SAAmBlB,EAAO2B,GAEzB,IAAI8C,QAAkBC,EAChB,uBACA,UACA,WACA,UACA,mBACA,aACA,SACA,SACA,UAENnE,EAAEqB,GAAG,GAAI5B,EAAMG,QACfI,EAAEY,WAAWlC,MAAMC,KAAKC,MAAMC,OAAOC,SAASS,YAAYC,EAAUC,EAAO,QAASyE,IACpFjE,EAAEY,UAAS,IAIiDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACvHA,GAER,SAAwCD,GAMvC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,uBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEnCP,EAAI,IAAIK,IAAIG,SAsBhB,OADAjB,EAASkB,OAAOsD,OADQtE,UAAW,UAAYA,UAAW,WAAYuE,YAAY,IAC5CtD,WApBtC,SAAmBlB,EAAO2B,GACzB,IACIgD,GAAkB,SAChB,SACA,SACA,aACA,mBACA,UACA,WACA,UACA,4BACAD,GAENnE,EAAEqB,GAAG,GAAI5B,EAAMG,QACfI,EAAEY,WAAWlC,MAAMC,KAAKC,MAAMC,OAAOC,SAASS,YAAYC,EAAUC,EAAO,YAbrD,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,OAcpEO,EAAEY,WAAWlC,MAAMC,KAAKC,MAAMC,OAAOC,SAASS,YAAYC,EAAUC,EAAO,QAAS2E,IACpFnE,EAAEY,UAAS,IAIiDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACvHA,GAER,SAAyDD,GAMxD,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBACtDS,EAAW,IAAId,MAAMC,KAAKG,SAAS0B,GAEvChB,EAAS6E,iBACT7E,EAAS6E,cAAwB,SAAI,SAASC,EAAEC,GAC/C,IAAIC,EAAM,EAEV,SAASC,EAASC,GACjB,QAAmB,IAATA,EAAV,CAEA,IAAIC,EAAUD,EAAKE,MAAM,aACzB,OAAOD,EAAUA,EAAQ,GAAKD,GAE/B,IAAIG,EAAYJ,EAASH,GACrBQ,EAAYL,EAASF,GAMzB,OALGM,EAAYC,QAAkC,IAAdD,EAClCL,EAAM,GACEK,EAAYC,QAAkC,IAAdA,KACxCN,GAAO,GAEDA,GAGR,IAEIvE,EAAI,IAAIK,IAAIG,SAgBhB,OADAjB,EAASkB,OAAOsD,OAjBOtE,UAAW,WAAYuE,YAAY,IAASvE,UAAW,QAASuE,YAAY,IAiB7DtD,WAdtC,SAAmBlB,EAAOsF,GACzB,IAAIb,GAAgB,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAChClE,EAAEY,WAA4B,IAAjBnB,EAAMG,QAEnB,IADA,IAAIqD,GAAS,EACLpD,EAAI,EAAGA,EAAIJ,EAAMG,OAAQC,IAChC,GAAKL,EAAS0D,YAAYzD,EAAMI,MAAQqE,EAAarE,GAAI,CACxDoD,GAAO,EACP,MAGFjD,EAAEY,WAAWqC,GACbhD,EAAEY,UAAS,IAGiDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,SAASiB,MAAOC,EAAGC,KACvHA,IAIPyE,KAAM,0BACNM,QAAS,SAAShF,GAMjB,GAAGzB,KAAKW,UAAU,CACjB,IAAIsB,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,qBACtDkG,EAAQ,IAAIvG,MAAMC,KAAKG,SAAS0B,GAEhCP,EAAI,IAAIK,IAAIG,SACZyE,GAAc,EAoBdC,EAAMF,EAAMvE,OAAQC,WAnBL,SAASlB,EAAO2B,GAClCpB,EAAEqB,GAAG,EAAG5B,EAAMG,QACXsF,GACF/E,QAAQC,IAAI,gEACZH,EAAEI,QAAQ,IAAI8C,MAAM,0BAGpBhD,QAAQC,IAAI,wEACZH,EAAEY,UAAS,KAWqCC,QARtC,SAASZ,EAASkB,GAG7BpB,EAAEY,YAAW,GACbX,EAAEY,UAAS,MAQZ,OAHAqE,GAAY,EACZ/E,QAAQC,IAAI,kBACZ+E,EAAIC,QACGnF,KAKV,SAAyCD,GAMxC,IAAIqF,EAAY,IAAI3G,MAAMC,KAAKG,SAASJ,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,sBACnFuG,EAAU,IAAI/G,KAAKI,KAAK4G,IAAIC,KAC5BvC,GAAS,EAEb,IAAI,IAAIpD,KAAKyF,EAAQ,CACpB,GAA8B,MAA3BzF,EAAER,WAAWoG,OAAO,GAItB,GAAqB,mBAFRH,EAAQzF,GAEW,CAC/BM,QAAQC,IAAI,yBAA2BP,EAAI,KAC3C,IAAI6F,EAAkBL,EAAUxF,GAChC,GAAgC,mBAApB6F,EAAgC,CAC3CvF,QAAQC,IAAI,2BAA6BP,EAAI,mBAAqB6F,GAClEzC,GAAS,EACT,QAKJjD,EAAEY,WAAWqC,IAEd,SAA6CjD,GAM5C,IAAIqF,EAAY,IAAI3G,MAAMC,KAAKG,SAASJ,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,cAAc,sBACnF4G,EAAc,IAAIpH,KAAKI,KAAK4G,IAAIK,SAChC3C,GAAS,EAEb,IAAI,IAAIpD,KAAK8F,EAAY,CACxB,GAA8B,MAA3B9F,EAAER,WAAWoG,OAAO,GAItB,GAAqB,mBAFRE,EAAY9F,GAKxB,GAFAM,QAAQC,IAAI,yBAA2BP,EAAI,KAEX,mBADVwF,EAAUxF,GACY,CAC3CoD,GAAS,EACT,OAKJjD,EAAEY,WAAWqC","file":"../../../../data/tests/stores/CsvStore.js","sourcesContent":["dojo.provide(\"dojox.data.tests.stores.CsvStore\");\r\ndojo.require(\"dojox.data.CsvStore\");\r\ndojo.require(\"dojo.data.api.Read\");\r\ndojo.require(\"dojo.data.api.Identity\");\r\n\r\ndojox.data.tests.stores.CsvStore.getDatasource = function(filepath){\r\n\t// summary:\r\n\t//\t\tA simple helper function for getting the sample data used in each of the tests.\r\n\t// description:\r\n\t//\t\tA simple helper function for getting the sample data used in each of the tests.\r\n\r\n\tvar dataSource = {};\r\n\tif(dojo.isBrowser){\r\n\t\tdataSource.url = require.toUrl(\"dojox/data/tests/\"+filepath).toString();\r\n\t}else{\r\n\t\t// When running tests in Rhino, xhrGet is not available,\r\n\t\t// so we have the file data in the code below.\r\n\t\tvar csvData;\r\n\t\tswitch(filepath){\r\n\t\t\tcase \"stores/movies.csv\":\r\n\t\t\t\tcsvData += \"Title, Year, Producer\\n\";\r\n\t\t\t\tcsvData += \"City of God, 2002, Katia Lund\\n\";\r\n\t\t\t\tcsvData += \"Rain,, Christine Jeffs\\n\";\r\n\t\t\t\tcsvData += \"2001: A Space Odyssey, 1968, Stanley Kubrick\\n\";\r\n\t\t\t\tcsvData += '\"This is a \"\"fake\"\" movie title\", 1957, Sidney Lumet\\n';\r\n\t\t\t\tcsvData += \"Alien, 1979   , Ridley Scott\\n\";\r\n\t\t\t\tcsvData += '\"The Sequel to \"\"Dances With Wolves.\"\"\", 1982, Ridley Scott\\n';\r\n\t\t\t\tcsvData += '\"Caine Mutiny, The\", 1954, \"Dymtryk \"\"the King\"\", Edward\"\\n';\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"stores/movies2.csv\":\r\n\t\t\t\tcsvData += \"Title, Year, Producer\\n\";\r\n\t\t\t\tcsvData += \"City of God, 2002, Katia Lund\\n\";\r\n\t\t\t\tcsvData += \"Rain,\\\"\\\", Christine Jeffs\\n\";\r\n\t\t\t\tcsvData += \"2001: A Space Odyssey, 1968, Stanley Kubrick\\n\";\r\n\t\t\t\tcsvData += '\"This is a \"\"fake\"\" movie title\", 1957, Sidney Lumet\\n';\r\n\t\t\t\tcsvData += \"Alien, 1979   , Ridley Scott\\n\";\r\n\t\t\t\tcsvData += '\"The Sequel to \"\"Dances With Wolves.\"\"\", 1982, Ridley Scott\\n';\r\n\t\t\t\tcsvData += '\"Caine Mutiny, The\", 1954, \"Dymtryk \"\"the King\"\", Edward\"\\n';\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"stores/empty.csv\":\r\n\t\t\t\tcsvData += \"Title, Year, Producer\\n\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"stores/movies3.csv\":\r\n\t\t\t\tcsvData += \"Title, Year, Producer\\n\";\r\n\t\t\t\tcsvData += \"\\\"City\\n of God\\\", 2002, Katia Lund\\n\";\r\n\t\t\t\tcsvData += \"Rain,\\\"\\\", Christine Jeffs\\n\";\r\n\t\t\t\tcsvData += \"2001: A Space Odyssey, 1968, Stanley Kubrick\\n\";\r\n\t\t\t\tcsvData += '\"This is a \"\"fake\"\" movie title\", 1957, Sidney Lumet\\n';\r\n\t\t\t\tcsvData += \"Alien, 1979   , Ridley Scott\\n\";\r\n\t\t\t\tcsvData += '\"The Sequel to \"\"Dances With\\n Wolves.\"\"\", 1982, Ridley Scott\\n';\r\n\t\t\t\tcsvData += '\"Caine Mutiny, The\", 1954, \"Dymtryk \"\"the King\"\", Edward\"\\n';\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"stores/books.csv\":\r\n\t\t\t\tcsvData += \"Title, Author\\n\";\r\n\t\t\t\tcsvData += \"The Transparent Society, David Brin\\n\";\r\n\t\t\t\tcsvData += \"The First Measured Century, Theodore Caplow\\n\";\r\n\t\t\t\tcsvData += \"Maps in a Mirror, Orson Scott Card\\n\";\r\n\t\t\t\tcsvData += \"Princess Smartypants, Babette Cole\\n\";\r\n\t\t\t\tcsvData += \"Carfree Cities, Crawford J.H.\\n\";\r\n\t\t\t\tcsvData += \"Down and Out in the Magic Kingdom, Cory Doctorow\\n\";\r\n\t\t\t\tcsvData += \"Tax Shift, Alan Thein Durning\\n\";\r\n\t\t\t\tcsvData += \"The Sneetches and other stories, Dr. Seuss\\n\";\r\n\t\t\t\tcsvData += \"News from Tartary, Peter Fleming\\n\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"stores/patterns.csv\":\r\n\t\t\t\tcsvData += \"uniqueId, value\\n\";\r\n\t\t\t\tcsvData += \"9, jfq4@#!$!@Rf14r14i5u\\n\";\r\n\t\t\t\tcsvData += \"6, BaBaMaSaRa***Foo\\n\";\r\n\t\t\t\tcsvData += \"2, bar*foo\\n\";\r\n\t\t\t\tcsvData += \"8, 123abc\\n\";\r\n\t\t\t\tcsvData += \"4, bit$Bite\\n\";\r\n\t\t\t\tcsvData += \"3, 123abc\\n\";\r\n\t\t\t\tcsvData += \"10, 123abcdefg\\n\";\r\n\t\t\t\tcsvData += \"1, foo*bar\\n\";\r\n\t\t\t\tcsvData += \"7, \\n\";\r\n\t\t\t\tcsvData += \"5, 123abc\\n\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"stores/semicolonSeparator.csv\":\r\n\t\t\t\tcsvData += \"article;price\\n\";\r\n\t\t\t\tcsvData += \"1008;4,59\\n\";\r\n\t\t\t\tcsvData += \"1010;10,09\\n\";\r\n\t\t\t\tcsvData += \"1011;5,13\\n\";\r\n\t\t\t\tcsvData += \"1016;16,68\\n\";\r\n\t\t\t\tcsvData += \"1019;15,5\\n\";\r\n\t\t\t\tcsvData += \"1022;10,36\\n\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"stores/pipeSeparator.csv\":\r\n\t\t\t\tcsvData += \"article|price\\n\";\r\n\t\t\t\tcsvData += \"1008|4,59\\n\";\r\n\t\t\t\tcsvData += \"1010|10,09\\n\";\r\n\t\t\t\tcsvData += \"1011|5,13\\n\";\r\n\t\t\t\tcsvData += \"1016|16,68\\n\";\r\n\t\t\t\tcsvData += \"1019|15,5\\n\";\r\n\t\t\t\tcsvData += \"1022|10,36\\n\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"stores/pipeSeparatorInData.csv\":\r\n\t\t\t\tcsvData += \"article|price\\n\";\r\n\t\t\t\tcsvData += \"1008|\\\"4,59|4,54\\\"\\n\";\r\n\t\t\t\tcsvData += \"1010|10,09\\n\";\r\n\t\t\t\tcsvData += \"1011|5,13\\n\";\r\n\t\t\t\tcsvData += \"1016|16,68\\n\";\r\n\t\t\t\tcsvData += \"1019|15,5\\n\";\r\n\t\t\t\tcsvData += \"1022|10,36\\n\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tdataSource.data = csvData;\r\n\t}\r\n\treturn dataSource; //Object\r\n};\r\n\r\ndojox.data.tests.stores.CsvStore.verifyItems = function(csvStore, items, attribute, compareArray){\r\n\t// summary:\r\n\t//\t\tA helper function for validating that the items array is ordered\r\n\t//\t\tthe same as the compareArray\r\n\tif(items.length != compareArray.length){ return false; }\r\n\tfor(var i = 0; i < items.length; i++){\r\n\t\tif(!(csvStore.getValue(items[i], attribute) === compareArray[i])){\r\n\t\t\treturn false; //Boolean\r\n\t\t}\r\n\t}\r\n\treturn true; //Boolean\r\n};\r\n\r\ndojox.data.tests.stores.CsvStore.error = function(t, d, errData){\r\n\t// summary:\r\n\t//\t\tThe error callback function to be used for all of the tests.\r\n\tfor (var i in errData) {\r\n\t\tconsole.log(errData[i]);\r\n\t}\r\n\td.errback(errData);\r\n};\r\n\r\ndoh.register(\"dojox.data.tests.stores.CsvStore\",\r\n\t[\r\n\t\tfunction testReadAPI_fetch_all(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of a basic fetch on CsvStore.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of a basic fetch on CsvStore.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completedAll(items){\r\n\t\t\t\tt.assertTrue((items.length === 7));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\r\n\t\t\t//Get everything...\r\n\t\t\tcsvStore.fetch({ onComplete: completedAll, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_all_empty(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of a basic fetch on CsvStore that's empty.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of a basic fetch on CsvStore that's empty.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/empty.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completedAll(items){\r\n\t\t\t\tt.assertTrue((items.length === 0));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\r\n\t\t\t//Get everything...\r\n\t\t\tcsvStore.fetch({ onComplete: completedAll, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_all_semicolon(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of a basic fetch on CsvStore with separator defined as |.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of a basic fetch on CsvStore with separator defined as |.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/semicolonSeparator.csv\");\r\n\t\t\targs.separator = \";\";\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completedAll(items){\r\n\t\t\t\tt.assertEqual(6, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\r\n\t\t\t//Get everything...\r\n\t\t\tcsvStore.fetch({ onComplete: completedAll, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_all_pipe(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of a basic fetch on CsvStore with separator defined as |.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of a basic fetch on CsvStore with separator defined as |\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/pipeSeparator.csv\");\r\n\t\t\targs.separator = \"|\";\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completedAll(items){\r\n\t\t\t\tt.assertEqual(6, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\r\n\t\t\t//Get everything...\r\n\t\t\tcsvStore.fetch({ onComplete: completedAll, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_all_pipe_indata(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of a basic fetch on CsvStore with separator defined as |.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of a basic fetch on CsvStore with separator defined as |\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/pipeSeparatorInData.csv\");\r\n\t\t\targs.separator = \"|\";\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completedAll(items){\r\n\t\t\t\tt.assertEqual(6, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\r\n\t\t\t//Get everything...\r\n\t\t\tcsvStore.fetch({ onComplete: completedAll, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_all_withnewlinedCsv(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of a basic fetch on CsvStore loading a CSV file with quoted newlines.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of a basic fetch on CsvStore loading a CSV file with quoted newlines.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies3.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completedAll(items){\r\n\t\t\t\tt.assertTrue((items.length === 7));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\r\n\t\t\t//Get everything...\r\n\t\t\tcsvStore.fetch({ onComplete: completedAll, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_all_withEmptyStringField(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of a basic fetch on CsvStore.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of a basic fetch on CsvStore.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies2.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completedAll(items){\r\n\t\t\t\tt.assertTrue((items.length === 7));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\r\n\t\t\t//Get everything...\r\n\t\t\tcsvStore.fetch({ onComplete: completedAll, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_one(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of a basic fetch on CsvStore of a single item.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of a basic fetch on CsvStore of a single item.\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.is(1, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tcsvStore.fetch({ \tquery: {Title: \"*Sequel*\"},\r\n\t\t\t\t\t\t\t\tonComplete: onComplete,\r\n\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)\r\n\t\t\t\t\t\t\t});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_one_preventcache(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of a basic fetch on CsvStore of a single item.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of a basic fetch on CsvStore of a single item.\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\targs.urlPreventCache = true;\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.is(1, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tcsvStore.fetch({ \tquery: {Title: \"*Sequel*\"},\r\n\t\t\t\t\t\t\t\tonComplete: onComplete,\r\n\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)\r\n\t\t\t\t\t\t\t});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_Multiple(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of a basic fetch on CsvStore of a single item.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of a basic fetch on CsvStore of a single item.\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\r\n\t\t\tvar done = [false, false];\r\n\r\n\t\t\tfunction onCompleteOne(items, request){\r\n\t\t\t\tdone[0] = true;\r\n\t\t\t\tt.is(1, items.length);\r\n\t\t\t\tif(done[0] && done[1]){\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfunction onCompleteTwo(items, request){\r\n\t\t\t\tdone[1] = true;\r\n\t\t\t\tt.is(1, items.length);\r\n\t\t\t\tif(done[0] && done[1]){\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tcsvStore.fetch({ \tquery: {Title: \"*Sequel*\"},\r\n\t\t\t\t\t\t\t\t\tonComplete: onCompleteOne,\r\n\t\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\tcsvStore.fetch({ \tquery: {Title: \"2001:*\"},\r\n\t\t\t\t\t\t\t\t\tonComplete: onCompleteTwo,\r\n\t\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tcatch(e)\r\n\t\t\t{\r\n\t\t\t\tfor (var i in e) {\r\n\t\t\t\t\tconsole.log(e[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_MultipleMixed(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of a basic fetch on CsvStore of a single item.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of a basic fetch on CsvStore of a single item.\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\r\n\t\t\tvar done = [false, false];\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tdone[0] = true;\r\n\t\t\t\tt.is(1, items.length);\r\n\t\t\t\tif(done[0] && done[1]){\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tdone[1] = true;\r\n\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\tt.is('Dymtryk \"the King\", Edward', csvStore.getValue(item,\"Producer\"));\r\n\t\t\t\tt.is('Caine Mutiny, The', csvStore.getValue(item,\"Title\"));\r\n\t\t\t\tif(done[0] && done[1]){\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcsvStore.fetch({ \tquery: {Title: \"*Sequel*\"},\r\n\t\t\t\t\t\t\t\tonComplete: onComplete,\r\n\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\r\n\t\t\tcsvStore.fetchItemByIdentity({identity: \"6\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_all_streaming(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of a basic fetch on CsvStore.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of a basic fetch on CsvStore.\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tvar count = 0;\r\n\r\n\t\t\tfunction onBegin(size, requestObj){\r\n\t\t\t\tt.assertTrue(size === 7);\r\n\t\t\t}\r\n\t\t\tfunction onItem(item, requestObj){\r\n\t\t\t\tt.assertTrue(csvStore.isItem(item));\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.is(7, count);\r\n\t\t\t\tt.is(null, items);\r\n\t\t\t    d.callback(true);\r\n\t\t\t}\r\n\r\n\t\t\t//Get everything...\r\n\t\t\tcsvStore.fetch({\tonBegin: onBegin,\r\n\t\t\t\t\t\t\t\tonItem: onItem,\r\n\t\t\t\t\t\t\t\tonComplete: onComplete,\r\n\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)\r\n\t\t\t\t\t\t\t});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_paging(t){\r\n\t\t\t // summary:\r\n\t\t\t //\t\tTest of multiple fetches on a single result.  Paging, if you will.\r\n\t\t\t // description:\r\n\t\t\t //\t\tTest of multiple fetches on a single result.  Paging, if you will.\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\r\n\t\t\tfunction dumpSixthFetch(items, request){\r\n\t\t\t\tt.is(5, items.length);\r\n\t\t\t    d.callback(true);\r\n\t\t\t}\r\n\r\n\t\t\tfunction dumpFifthFetch(items, request){\r\n\t\t\t\tt.is(0, items.length);\r\n\t\t\t\trequest.start = 2;\r\n\t\t\t\trequest.count = 20;\r\n\t\t\t\trequest.onComplete = dumpSixthFetch;\r\n\t\t\t\tcsvStore.fetch(request);\r\n\t\t\t}\r\n\r\n\t\t\tfunction dumpFourthFetch(items, request){\r\n\t\t\t\tt.is(5, items.length);\r\n\t\t\t\trequest.start = 9;\r\n\t\t\t\trequest.count = 100;\r\n\t\t\t\trequest.onComplete = dumpFifthFetch;\r\n\t\t\t\tcsvStore.fetch(request);\r\n\t\t\t}\r\n\r\n\t\t\tfunction dumpThirdFetch(items, request){\r\n\t\t\t\tt.is(5, items.length);\r\n\t\t\t\trequest.start = 2;\r\n\t\t\t\trequest.count = 20;\r\n\t\t\t\trequest.onComplete = dumpFourthFetch;\r\n\t\t\t\tcsvStore.fetch(request);\r\n\t\t\t}\r\n\r\n\t\t\tfunction dumpSecondFetch(items, request){\r\n\t\t\t\tt.is(1, items.length);\r\n\t\t\t\trequest.start = 0;\r\n\t\t\t\trequest.count = 5;\r\n\t\t\t\trequest.onComplete = dumpThirdFetch;\r\n\t\t\t\tcsvStore.fetch(request);\r\n\t\t\t}\r\n\r\n\t\t\tfunction dumpFirstFetch(items, request){\r\n\t\t\t\tt.is(5, items.length);\r\n\t\t\t\trequest.start = 3;\r\n\t\t\t\trequest.count = 1;\r\n\t\t\t\trequest.onComplete = dumpSecondFetch;\r\n\t\t\t\tcsvStore.fetch(request);\r\n\t\t\t}\r\n\r\n\t\t\tfunction completed(items, request){\r\n\t\t\t\tt.is(7, items.length);\r\n\t\t\t\trequest.start = 1;\r\n\t\t\t\trequest.count = 5;\r\n\t\t\t\trequest.onComplete = dumpFirstFetch;\r\n\t\t\t\tcsvStore.fetch(request);\r\n\t\t\t}\r\n\r\n\t\t\tcsvStore.fetch({onComplete: completed, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\t\r\n\t\tfunction testReadAPI_getLabel(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getLabel function against a store set that has a label defined.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getLabel function against a store set that has a label defined.\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\targs.label = \"Title\";\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(items.length, 1);\r\n\t\t\t\tvar label = csvStore.getLabel(items[0]);\r\n\t\t\t\tt.assertTrue(label !== null);\r\n\t\t\t\tt.assertEqual(\"The Sequel to \\\"Dances With Wolves.\\\"\", label);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tcsvStore.fetch({ \tquery: {Title: \"*Sequel*\"},\r\n\t\t\t\t\t\t\t\tonComplete: onComplete,\r\n\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)\r\n\t\t\t\t\t\t\t});\r\n\t\t\treturn d;\r\n\t\t},\r\n\t\tfunction testReadAPI_getLabelAttributes(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getLabelAttributes function against a store set that has a label defined.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getLabelAttributes function against a store set that has a label defined.\r\n\r\n\t\t\t var args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\t args.label = \"Title\";\r\n\t\t\t var csvStore = new dojox.data.CsvStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(items.length, 1);\r\n\t\t\t\tvar labelList = csvStore.getLabelAttributes(items[0]);\r\n\t\t\t\tt.assertTrue(dojo.isArray(labelList));\r\n\t\t\t\tt.assertEqual(\"Title\", labelList[0]);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tcsvStore.fetch({ \tquery: {Title: \"*Sequel*\"},\r\n\t\t\t\t\t\t\t\tonComplete: onComplete,\r\n\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)\r\n\t\t\t\t\t\t\t});\r\n\t\t\treturn d;\r\n\t\t},\r\n\t\tfunction testReadAPI_getValue(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getValue function of the store.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getValue function of the store.\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\tt.is('Dymtryk \"the King\", Edward', csvStore.getValue(item,\"Producer\"));\r\n\t\t\t\tt.is('Caine Mutiny, The', csvStore.getValue(item,\"Title\"));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tcsvStore.fetchItemByIdentity({identity: \"6\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d;\r\n\t\t},\r\n\t\tfunction testReadAPI_getValue_2(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getValue function of the store.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getValue function of the store.\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\tt.is(\"City of God\", csvStore.getValue(item,\"Title\"));\r\n\t\t\t\tt.is(\"2002\", csvStore.getValue(item,\"Year\"));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n            csvStore.fetchItemByIdentity({identity: \"0\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d;\r\n\t\t},\r\n\t\tfunction testReadAPI_getValue_3(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getValue function of the store.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getValue function of the store.\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\tt.is(\"1979\", csvStore.getValue(item,\"Year\"));\r\n\t\t\t\tt.is(\"Alien\", csvStore.getValue(item,\"Title\"));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tcsvStore.fetchItemByIdentity({identity: \"4\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d;\r\n\t\t},\r\n\t\tfunction testReadAPI_getValue_4(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getValue function of the store.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getValue function of the store.\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\tt.is(\"2001: A Space Odyssey\", csvStore.getValue(item,\"Title\"));\r\n\t\t\t\tt.is(\"Stanley Kubrick\", csvStore.getValue(item,\"Producer\"));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tcsvStore.fetchItemByIdentity({identity: \"2\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d;\r\n\t\t},\r\n\r\n\t\tfunction testReadAPI_getValues(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getValues function of the store.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getValues function of the store.\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\tvar names = csvStore.getValues(item,\"Title\");\r\n\t\t\t\tt.assertTrue(dojo.isArray(names));\r\n\t\t\t\tt.is(1, names.length);\r\n\t\t\t\tt.is(\"Rain\", names[0]);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tcsvStore.fetchItemByIdentity({identity: \"1\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d;\r\n\t\t},\r\n\t\tfunction testIdentityAPI_fetchItemByIdentity(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity function of the store.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity function of the store.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tcsvStore.fetchItemByIdentity({identity: \"1\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d;\r\n\t\t},\r\n\r\n\t\tfunction testIdentityAPI_fetchItemByIdentity_withDefinedIdentifier(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity function of the store.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity function of the store.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\targs.identifier = \"Title\";\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tcsvStore.fetchItemByIdentity({identity: \"City of God\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d;\r\n\t\t},\r\n\r\n\t\tfunction testIdentityAPI_fetchItemByIdentity_withDefinedIdentifier_bad1(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity function of the store.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity function of the store.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\targs.identifier = \"Title\";\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tt.assertTrue(item === null);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tcsvStore.fetchItemByIdentity({identity: \"No Such Title\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d;\r\n\t\t},\r\n\r\n\t\tfunction testIdentityAPI_fetchItemByIdentity_bad1(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity function of the store.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity function of the store.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tt.assertTrue(item === null);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tcsvStore.fetchItemByIdentity({identity: \"7\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d;\r\n\t\t},\r\n\t\tfunction testIdentityAPI_fetchItemByIdentity_bad2(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity function of the store.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity function of the store.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tt.assertTrue(item === null);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tcsvStore.fetchItemByIdentity({identity: \"-1\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d;\r\n\t\t},\r\n\t\tfunction testIdentityAPI_fetchItemByIdentity_bad3(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity function of the store.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity function of the store.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tt.assertTrue(item === null);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tcsvStore.fetchItemByIdentity({identity: \"999999\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d;\r\n\t\t},\r\n\t\tfunction testIdentityAPI_getIdentity(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity function of the store.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity function of the store.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completed(items, request){\r\n\t\t\t\tt.is(7, items.length);\r\n\t\t\t\tvar passed = true;\r\n\t\t\t\tfor(var i = 0; i < items.length; i++){\r\n\t\t\t\t\tif(!(csvStore.getIdentity(items[i]) === i)){\r\n\t\t\t\t\t\tpassed=false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tt.assertTrue(passed);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//Get everything...\r\n\t\t\tcsvStore.fetch({ onComplete: completed, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\r\n\t\tfunction testIdentityAPI_getIdentity_withDefinedIdentifier(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity function of the store.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity function of the store.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\targs.identifier = \"Title\";\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completed(items, request){\r\n\t\t\t\tt.is(7, items.length);\r\n\t\t\t\tvar passed = true;\r\n\t\t\t\tfor(var i = 0; i < items.length; i++){\r\n\t\t\t\t\tif(!csvStore.getIdentity(items[i])){\r\n                        passed=false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tt.assertTrue(passed);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//Get everything...\r\n\t\t\tcsvStore.fetch({ onComplete: completed, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\r\n\t\tfunction testIdentityAPI_getIdentity_withBadDefinedIdentifier(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity function of the store.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity function of the store.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\targs.identifier = \"Not Column\";\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completed(items, request){\r\n\t\t\t\td.errback(new Error(\"Unexpected callback of success in failure case.\"));\r\n\t\t\t}\r\n\t\t\tfunction error(err){\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//Get everything...\r\n\t\t\tcsvStore.fetch({onComplete: completed, onError: error});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\r\n\t\tfunction testIdentityAPI_getIdentityAttributes(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getIdentityAttributes\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity function of the store.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tt.assertTrue(csvStore.isItem(item));\r\n\t\t\t\tt.assertEqual(null, csvStore.getIdentityAttributes(item));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tcsvStore.fetchItemByIdentity({identity: \"1\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t   \treturn d;\r\n\t\t},\r\n\t\tfunction testReadAPI_isItem(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the isItem function of the store\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the isItem function of the store\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tt.assertTrue(csvStore.isItem(item));\r\n\t\t\t\tt.assertTrue(!csvStore.isItem({}));\r\n\t\t\t\tt.assertTrue(!csvStore.isItem({ item: \"not an item\" }));\r\n\t\t\t\tt.assertTrue(!csvStore.isItem(\"not an item\"));\r\n\t\t\t\tt.assertTrue(!csvStore.isItem([\"not an item\"]));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tcsvStore.fetchItemByIdentity({identity: \"1\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t   \treturn d;\r\n\t\t},\r\n\t\tfunction testReadAPI_hasAttribute(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the hasAttribute function of the store\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the hasAttribute function of the store\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\tt.assertTrue(csvStore.hasAttribute(item, \"Title\"));\r\n\t\t\t\tt.assertTrue(csvStore.hasAttribute(item, \"Producer\"));\r\n\t\t\t\tt.assertTrue(!csvStore.hasAttribute(item, \"Year\"));\r\n\t\t\t\tt.assertTrue(!csvStore.hasAttribute(item, \"Nothing\"));\r\n\t\t\t\tt.assertTrue(!csvStore.hasAttribute(item, \"title\"));\r\n\r\n\t\t\t\t//Test that null attributes throw an exception\r\n\t\t\t\tvar passed = false;\r\n\t\t\t\ttry{\r\n\t\t\t\t\tcsvStore.hasAttribute(item, null);\r\n\t\t\t\t}catch (e){\r\n\t\t\t\t\tpassed = true;\r\n\t\t\t\t}\r\n\t\t\t\tt.assertTrue(passed);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tcsvStore.fetchItemByIdentity({identity: \"1\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t   \treturn d;\r\n\t\t},\r\n\t\tfunction testReadAPI_containsValue(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the containsValue function of the store\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the containsValue function of the store\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n \t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\tt.assertTrue(csvStore.containsValue(item, \"Title\", \"Alien\"));\r\n\t\t\t\tt.assertTrue(csvStore.containsValue(item, \"Year\", \"1979\"));\r\n\t\t\t\tt.assertTrue(csvStore.containsValue(item, \"Producer\", \"Ridley Scott\"));\r\n\t\t\t\tt.assertTrue(!csvStore.containsValue(item, \"Title\", \"Alien2\"));\r\n\t\t\t\tt.assertTrue(!csvStore.containsValue(item, \"Year\", \"1979   \"));\r\n\t\t\t\tt.assertTrue(!csvStore.containsValue(item, \"Title\", null));\r\n\r\n\t\t\t\t//Test that null attributes throw an exception\r\n\t\t\t\tvar passed = false;\r\n\t\t\t\ttry{\r\n\t\t\t\t\tcsvStore.containsValue(item, null, \"foo\");\r\n\t\t\t\t}catch (e){\r\n\t\t\t\t\tpassed = true;\r\n\t\t\t\t}\r\n\t\t\t\tt.assertTrue(passed);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tcsvStore.fetchItemByIdentity({identity: \"4\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t   \treturn d;\r\n\t\t},\r\n\t\tfunction testReadAPI_getAttributes(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getAttributes function of the store\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getAttributes function of the store\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\tt.assertTrue(csvStore.isItem(item));\r\n\r\n\t\t\t\tvar attributes = csvStore.getAttributes(item);\r\n\t\t\t\tt.is(3, attributes.length);\r\n\t\t\t\tfor(var i = 0; i < attributes.length; i++){\r\n\t\t\t\t\tt.assertTrue((attributes[i] === \"Title\" || attributes[i] === \"Year\" || attributes[i] === \"Producer\"));\r\n\t\t\t\t}\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tcsvStore.fetchItemByIdentity({identity: \"4\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t   \treturn d;\r\n\t\t},\r\n\r\n\t\tfunction testReadAPI_getAttributes_onlyTwo(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getAttributes function of the store\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getAttributes function of the store\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\t// Test an item that does not have all of the attributes\r\n\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\tt.assertTrue(csvStore.isItem(item));\r\n\r\n\t\t\t\tvar attributes = csvStore.getAttributes(item);\r\n\t\t\t\tt.assertTrue(attributes.length === 2);\r\n\t\t\t\tt.assertTrue(attributes[0] === \"Title\");\r\n\t\t\t\tt.assertTrue(attributes[1] === \"Producer\");\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tcsvStore.fetchItemByIdentity({identity: \"1\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t   \treturn d;\r\n\t\t},\r\n\r\n\t\tfunction testReadAPI_getFeatures(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getFeatures function of the store\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getFeatures function of the store\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\r\n\t\t\tvar features = csvStore.getFeatures();\r\n\t\t\tvar count = 0;\r\n\t\t\tfor(var i in features){\r\n\t\t\t\tt.assertTrue((i === \"dojo.data.api.Read\" || i === \"dojo.data.api.Identity\"));\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t\tt.assertTrue(count === 2);\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_patternMatch0(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to test pattern matching of everything starting with lowercase e\r\n\t\t\t// description:\r\n\t\t\t//\t\tFunction to test pattern matching of everything starting with lowercase e\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completed(items, request){\r\n\t\t\t\tt.is(2, items.length);\r\n\t\t\t\tvar valueArray = [ \"Alien\", \"The Sequel to \\\"Dances With Wolves.\\\"\"];\r\n\t\t\t\tt.assertTrue(dojox.data.tests.stores.CsvStore.verifyItems(csvStore, items, \"Title\", valueArray));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcsvStore.fetch({query: {Producer: \"* Scott\"}, onComplete: completed, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_patternMatch1(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to test pattern matching of everything with $ in it.\r\n\t\t\t// description:\r\n\t\t\t//\t\tFunction to test pattern matching of everything with $ in it.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/patterns.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completed(items, request){\r\n\t\t\t\tt.assertTrue(items.length === 2);\r\n\t\t\t\tvar valueArray = [ \"jfq4@#!$!@Rf14r14i5u\", \"bit$Bite\"];\r\n\t\t\t\tt.assertTrue(dojox.data.tests.stores.CsvStore.verifyItems(csvStore, items, \"value\", valueArray));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcsvStore.fetch({query: {value: \"*$*\"}, onComplete: completed, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_patternMatch2(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to test exact pattern match\r\n\t\t\t// description:\r\n\t\t\t//\t\tFunction to test exact pattern match\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/patterns.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completed(items, request){\r\n\t\t\t\tt.is(1, items.length);\r\n\t\t\t\tt.assertTrue(csvStore.getValue(items[0], \"value\") === \"bar*foo\");\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcsvStore.fetch({query: {value: \"bar\\\\*foo\"}, onComplete: completed, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_patternMatch_caseInsensitive(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to test exact pattern match with case insensitivity set.\r\n\t\t\t// description:\r\n\t\t\t//\t\tFunction to test exact pattern match with case insensitivity set.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/patterns.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completed(items, request){\r\n\t\t\t\tt.is(1, items.length);\r\n\t\t\t\tt.assertTrue(csvStore.getValue(items[0], \"value\") === \"bar*foo\");\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcsvStore.fetch({query: {value: \"BAR\\\\*foo\"}, queryOptions: {ignoreCase: true}, onComplete: completed, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_patternMatch_caseSensitive(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to test exact pattern match with case insensitivity set.\r\n\t\t\t// description:\r\n\t\t\t//\t\tFunction to test exact pattern match with case insensitivity set.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/patterns.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completed(items, request){\r\n\t\t\t\tt.is(0, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcsvStore.fetch({query: {value: \"BAR\\\\*foo\"}, queryOptions: {ignoreCase: false}, onComplete: completed, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_sortNumeric(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to test sorting numerically.\r\n\t\t\t// description:\r\n\t\t\t//\t\tFunction to test sorting numerically.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/patterns.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completed(items, request){\r\n\t\t\t\tt.assertTrue(items.length === 10);\r\n\t\t\t\t// TODO: CsvStore treats everything like a string, so these numbers will be sorted lexicographically.\r\n\t\t\t\tvar orderedArray = [ \"1\", \"10\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\" ];\r\n\t\t\t\tt.assertTrue(dojox.data.tests.stores.CsvStore.verifyItems(csvStore, items, \"uniqueId\", orderedArray));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\r\n\t\t\tvar sortAttributes = [{attribute: \"uniqueId\"}];\r\n\t\t\tcsvStore.fetch({onComplete: completed,\r\n\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d),\r\n\t\t\t\t\t\t\tsort: sortAttributes});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_sortNumericDescending(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to test sorting numerically.\r\n\t\t\t// description:\r\n\t\t\t//\t\tFunction to test sorting numerically.\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/patterns.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completed(items, request){\r\n\t\t\t\tt.is(10, items.length);\r\n\t\t\t\t// TODO: CsvStore treats everything like a string, so these numbers will be sorted lexicographically.\r\n\t\t\t\tvar orderedArray = [ \"9\", \"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\", \"10\", \"1\" ];\r\n\t\t\t\tt.assertTrue(dojox.data.tests.stores.CsvStore.verifyItems(csvStore, items, \"uniqueId\", orderedArray));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar sortAttributes = [{attribute: \"uniqueId\", descending: true}];\r\n\t\t\tcsvStore.fetch({ sort: sortAttributes, onComplete: completed, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_sortNumericWithCount(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to test sorting numerically in descending order, returning only a specified number of them.\r\n\t\t\t// description:\r\n\t\t\t//\t\tFunction to test sorting numerically in descending order, returning only a specified number of them.\r\n\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/patterns.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completed(items, request){\r\n\t\t\t\tt.is(5, items.length);\r\n\t\t\t\t// TODO: CsvStore treats everything like a string, so these numbers will be sorted lexicographically.\r\n\t\t\t\tvar orderedArray = [ \"9\", \"8\", \"7\", \"6\", \"5\" ];\r\n\t\t\t\tt.assertTrue(dojox.data.tests.stores.CsvStore.verifyItems(csvStore, items, \"uniqueId\", orderedArray));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar sortAttributes = [{attribute: \"uniqueId\", descending: true}];\r\n\t\t\tcsvStore.fetch({sort: sortAttributes,\r\n\t\t\t\t\t\t\tcount: 5,\r\n\t\t\t\t\t\t\tonComplete: completed,\r\n\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_sortAlphabetic(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to test sorting alphabetic ordering.\r\n\t\t\t// description:\r\n\t\t\t//\t\tFunction to test sorting alphabetic ordering.\r\n\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/patterns.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completed(items, request){\r\n\t\t\t\t//Output should be in this order...\r\n\t\t\t\tvar orderedArray = [ \t\"123abc\",\r\n\t\t\t\t\t\t\t\t\t\t\"123abc\",\r\n\t\t\t\t\t\t\t\t\t\t\"123abc\",\r\n\t\t\t\t\t\t\t\t\t\t\"123abcdefg\",\r\n\t\t\t\t\t\t\t\t\t\t\"BaBaMaSaRa***Foo\",\r\n\t\t\t\t\t\t\t\t\t\t\"bar*foo\",\r\n\t\t\t\t\t\t\t\t\t\t\"bit$Bite\",\r\n\t\t\t\t\t\t\t\t\t\t\"foo*bar\",\r\n\t\t\t\t\t\t\t\t\t\t\"jfq4@#!$!@Rf14r14i5u\",\r\n\t\t\t\t\t\t\t\t\t\tundefined\r\n\t\t\t\t\t];\r\n\t\t\t\tt.is(10, items.length);\r\n\t\t\t\tt.assertTrue(dojox.data.tests.stores.CsvStore.verifyItems(csvStore, items, \"value\", orderedArray));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar sortAttributes = [{attribute: \"value\"}];\r\n\t\t\tcsvStore.fetch({sort: sortAttributes, onComplete: completed, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_sortAlphabeticDescending(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to test sorting alphabetic ordering in descending mode.\r\n\t\t\t// description:\r\n\t\t\t//\t\tFunction to test sorting alphabetic ordering in descending mode.\r\n\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/patterns.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completed(items, request){\r\n\t\t\t\t//Output should be in this order...\r\n\t\t\t\tvar orderedArray = [ \tundefined,\r\n\t\t\t\t\t\t\t\t\t\t\"jfq4@#!$!@Rf14r14i5u\",\r\n\t\t\t\t\t\t\t\t\t\t\"foo*bar\",\r\n\t\t\t\t\t\t\t\t\t\t\"bit$Bite\",\r\n\t\t\t\t\t\t\t\t\t\t\"bar*foo\",\r\n\t\t\t\t\t\t\t\t\t\t\"BaBaMaSaRa***Foo\",\r\n\t\t\t\t\t\t\t\t\t\t\"123abcdefg\",\r\n\t\t\t\t\t\t\t\t\t\t\"123abc\",\r\n\t\t\t\t\t\t\t\t\t\t\"123abc\",\r\n\t\t\t\t\t\t\t\t\t\t\"123abc\"\r\n\t\t\t\t\t];\r\n\t\t\t\tt.is(10, items.length);\r\n\t\t\t\tt.assertTrue(dojox.data.tests.stores.CsvStore.verifyItems(csvStore, items, \"value\", orderedArray));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar sortAttributes = [{attribute: \"value\", descending: true}];\r\n\t\t\tcsvStore.fetch({sort: sortAttributes, onComplete: completed, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_sortMultiple(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to test sorting on multiple attributes.\r\n\t\t\t// description:\r\n\t\t\t//\t\tFunction to test sorting on multiple attributes.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/patterns.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completed(items, request){\r\n\t\t\t\tvar orderedArray0 = [ \"8\", \"5\", \"3\", \"10\", \"6\", \"2\", \"4\", \"1\", \"9\", \"7\" ];\r\n\t\t\t\tvar orderedArray1 = [\t\"123abc\",\r\n\t\t\t\t\t\t\t\t\t\t\"123abc\",\r\n\t\t\t\t\t\t\t\t\t\t\"123abc\",\r\n\t\t\t\t\t\t\t\t\t\t\"123abcdefg\",\r\n\t\t\t\t\t\t\t\t\t\t\"BaBaMaSaRa***Foo\",\r\n\t\t\t\t\t\t\t\t\t\t\"bar*foo\",\r\n\t\t\t\t\t\t\t\t\t\t\"bit$Bite\",\r\n\t\t\t\t\t\t\t\t\t\t\"foo*bar\",\r\n\t\t\t\t\t\t\t\t\t\t\"jfq4@#!$!@Rf14r14i5u\",\r\n\t\t\t\t\t\t\t\t\t\tundefined\r\n\t\t\t\t\t\t\t\t\t];\r\n\t\t\t\tt.is(10, items.length);\r\n\t\t\t\tt.assertTrue(dojox.data.tests.stores.CsvStore.verifyItems(csvStore, items, \"uniqueId\", orderedArray0));\r\n\t\t\t\tt.assertTrue(dojox.data.tests.stores.CsvStore.verifyItems(csvStore, items, \"value\", orderedArray1));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar sortAttributes = [{ attribute: \"value\"}, { attribute: \"uniqueId\", descending: true}];\r\n\t\t\tcsvStore.fetch({sort: sortAttributes, onComplete: completed, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_sortMultipleSpecialComparator(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to test sorting on multiple attributes with a custom comparator.\r\n\t\t\t// description:\r\n\t\t\t//\t\tFunction to test sorting on multiple attributes with a custom comparator.\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar csvStore = new dojox.data.CsvStore(args);\r\n\t\t\t\r\n\t\t\tcsvStore.comparatorMap = {};\r\n\t\t\tcsvStore.comparatorMap[\"Producer\"] = function(a,b){\r\n\t\t\t\tvar ret = 0;\r\n\t\t\t\t// We want to sort authors alphabetical by their last name\r\n\t\t\t\tfunction lastName(name){\r\n\t\t\t\t\tif(typeof name === \"undefined\"){ return undefined; }\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar matches = name.match(/\\s*(\\S+)$/); // Grab the last word in the string.\r\n\t\t\t\t\treturn matches ? matches[1] : name; // Strings with only whitespace will not match.\r\n\t\t\t\t}\r\n\t\t\t\tvar lastNameA = lastName(a);\r\n\t\t\t\tvar lastNameB = lastName(b);\r\n\t\t\t\tif(lastNameA > lastNameB || typeof lastNameA === \"undefined\"){\r\n\t\t\t\t\tret = 1;\r\n\t\t\t\t}else if(lastNameA < lastNameB || typeof lastNameB === \"undefined\"){\r\n\t\t\t\t\tret = -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn ret;\r\n\t\t\t};\r\n\t\t\r\n\t\t\tvar sortAttributes = [{attribute: \"Producer\", descending: true}, { attribute: \"Title\", descending: true}];\r\n\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completed(items, findResult){\r\n\t\t\t\tvar orderedArray = [5,4,0,3,2,1,6];\r\n\t\t\t\tt.assertTrue(items.length === 7);\r\n\t\t\t\tvar passed = true;\r\n\t\t\t\tfor(var i = 0; i < items.length; i++){\r\n\t\t\t\t\tif(!(csvStore.getIdentity(items[i]) === orderedArray[i])){\r\n\t\t\t\t\t\tpassed=false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tt.assertTrue(passed);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcsvStore.fetch({sort: sortAttributes, onComplete: completed, onError: dojo.partial(dojox.data.tests.stores.CsvStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\tname: \"testReadAPI_fetch_abort\",\r\n\t\t\trunTest: function(t){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of a basic fetch abort on CsvStore.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of a basic fetch abort on CsvStore.\r\n\t\t\t\t//\t\tCan only async abort in a browser, so disable this test from rhino\r\n\t\t\t\tif(dojo.isBrowser){\r\n\t\t\t\t\tvar args = dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\t\t\tvar store = new dojox.data.CsvStore(args);\r\n\t\t\t\t\r\n\t\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\t\tvar abortCalled = false;\r\n\t\t\t\t\tvar completedAll = function(items, request){\r\n\t\t\t\t\t\tt.is(7, items.length);\r\n\t\t\t\t\t\tif(abortCalled){\r\n\t\t\t\t\t\t\tconsole.log(\"Made it to complete callback and abort was called.  Problem.\");\r\n\t\t\t\t\t\t\td.errback(new Error(\"Should not be here.\"));\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t//We beat out calling abort, so this is okay.  Timing.\r\n\t\t\t\t\t\t\tconsole.log(\"in onComplete and abort has not been called.  Timing.  This is okay.\");\r\n\t\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\tvar error = function(errData, request){\r\n\t\t\t\t\t\t//An abort should throw a cancel error, so we should\r\n\t\t\t\t\t\t//reach this.\r\n\t\t\t\t\t\tt.assertTrue(true);\r\n\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\t//Get everything...\r\n\t\t\t\t\tvar req = store.fetch({ onComplete: completedAll, onError: error});\r\n\t\t\t\t\tabortCalled=true;\r\n\t\t\t\t\tconsole.log(\"Calling abort.\");\r\n\t\t\t\t\treq.abort();\r\n\t\t\t\t\treturn d;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tfunction testReadAPI_functionConformance(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test read API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test read API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\r\n\t\t\tvar testStore = new dojox.data.CsvStore(dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\"));\r\n\t\t\tvar readApi = new dojo.data.api.Read();\r\n\t\t\tvar passed = true;\r\n\r\n\t\t\tfor(var i in readApi){\r\n\t\t\t\tif(i.toString().charAt(0) !== '_')\r\n\t\t\t\t{\r\n\t\t\t\t\tvar member = readApi[i];\r\n\t\t\t\t\t//Check that all the 'Read' defined functions exist on the test store.\r\n\t\t\t\t\tif(typeof member === \"function\"){\r\n\t\t\t\t\t\tconsole.log(\"Looking at function: [\" + i + \"]\");\r\n\t\t\t\t\t\tvar testStoreMember = testStore[i];\r\n\t\t\t\t\t\tif(!(typeof testStoreMember === \"function\")){\r\n\t\t\t\t\t\t\tconsole.log(\"Problem with function: [\" + i + \"].   Got value: \" + testStoreMember);\r\n\t\t\t\t\t\t\tpassed = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tt.assertTrue(passed);\r\n\t\t},\r\n\t\tfunction testIdentityAPI_functionConformance(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test identity API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test identity API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\r\n\t\t\tvar testStore = new dojox.data.CsvStore(dojox.data.tests.stores.CsvStore.getDatasource(\"stores/movies.csv\"));\r\n\t\t\tvar identityApi = new dojo.data.api.Identity();\r\n\t\t\tvar passed = true;\r\n\r\n\t\t\tfor(var i in identityApi){\r\n\t\t\t\tif(i.toString().charAt(0) !== '_')\r\n\t\t\t\t{\r\n\t\t\t\t\tvar member = identityApi[i];\r\n\t\t\t\t\t//Check that all the 'Read' defined functions exist on the test store.\r\n\t\t\t\t\tif(typeof member === \"function\"){\r\n\t\t\t\t\t\tconsole.log(\"Looking at function: [\" + i + \"]\");\r\n\t\t\t\t\t\tvar testStoreMember = testStore[i];\r\n\t\t\t\t\t\tif(!(typeof testStoreMember === \"function\")){\r\n\t\t\t\t\t\t\tpassed = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tt.assertTrue(passed);\r\n\t\t}\r\n\t]\r\n);\r\n\r\n"]}