{"version":3,"sources":["data/tests/stores/SnapLogicStore.js"],"names":["dojo","provide","require","dojox","data","tests","stores","SnapLogicStore","pipelineUrl","toUrl","toString","pipelineSize","attributes","error","t","d","errData","errback","doh","register","name","timeout","runTest","store","url","Deferred","fetch","count","onComplete","items","request","assertEqual","length","callback","onError","partial","onBegin","size","requestObj","onItem","item","assertTrue","isItem","dumpSecondFetch","start","dumpThirdFetch","dumpFourthFetch","Math","floor","dumpFifthFetch","dumpSixthFetch","label","getLabel","undefined","labelList","getLabelAttributes","console","debug","getValue","i","values","getValues","isArray","hasAttribute","passed","e","value","containsValue","itemAttributes","getAttributes","indexOf","features","getFeatures","testStore","readApi","api","Read","charAt"],"mappings":"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","file":"../../../../data/tests/stores/SnapLogicStore.js","sourcesContent":["dojo.provide(\"dojox.data.tests.stores.SnapLogicStore\");\r\ndojo.require(\"dojox.data.SnapLogicStore\");\r\ndojo.require(\"dojo.data.api.Read\");\r\n\r\ndojox.data.tests.stores.SnapLogicStore.pipelineUrl = require.toUrl(\"dojox/data/tests/stores/snap_pipeline.php\").toString();\r\ndojox.data.tests.stores.SnapLogicStore.pipelineSize = 14;\r\ndojox.data.tests.stores.SnapLogicStore.attributes = [\"empno\", \"ename\", \"job\", \"hiredate\", \"sal\", \"comm\", \"deptno\"];\r\n\r\ndojox.data.tests.stores.SnapLogicStore.error = function(t, d, errData){\r\n\t// summary:\r\n\t//\t\tThe error callback function to be used for all of the tests.\r\n\td.errback(errData);\r\n};\r\n\r\ndoh.register(\"dojox.data.tests.stores.SnapLogicStore\",\r\n\t[\r\n\t    {\r\n\t\t\tname: \"ReadAPI:  Fetch One\",\r\n\t\t\ttimeout:\t3000, //3 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of a basic fetch from a SnapLogic pipeline\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of a basic fetch from a SnapLogic pipeline\r\n\r\n\t\t\t\tvar store = new dojox.data.SnapLogicStore({url: dojox.data.tests.stores.SnapLogicStore.pipelineUrl});\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items, request){\r\n\t\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tstore.fetch({\tcount: 1,\r\n\t\t\t\t\t\t\t\tonComplete: onComplete,\r\n\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.SnapLogicStore.error, doh, d)\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"ReadAPI:  Fetch_10_Streaming\",\r\n\t\t\ttimeout:\t3000, //3 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of a basic fetch on SnapLogic pipeline.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of a basic fetch on SnapLogic pipeline.\r\n\r\n\t\t\t\tvar store = new dojox.data.SnapLogicStore({url: dojox.data.tests.stores.SnapLogicStore.pipelineUrl});\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tcount = 0;\r\n\r\n\t\t\t\tfunction onBegin(size, requestObj){\r\n\t\t\t\t\tt.assertEqual(dojox.data.tests.stores.SnapLogicStore.pipelineSize, size);\r\n\t\t\t\t}\r\n\t\t\t\tfunction onItem(item, requestObj){\r\n\t\t\t\t\tt.assertTrue(store.isItem(item));\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t}\r\n\t\t\t\tfunction onComplete(items, request){\r\n\t\t\t\t\tt.assertEqual(10, count);\r\n\t\t\t\t\tt.assertTrue(items === null);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Get everything...\r\n\t\t\t\tstore.fetch({\t\tonBegin: onBegin,\r\n\t\t\t\t\t\t\t\t\tcount: 10,\r\n\t\t\t\t\t\t\t\t\tonItem: onItem,\r\n\t\t\t\t\t\t\t\t\tonComplete: onComplete,\r\n\t\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.SnapLogicStore.error, t, d)\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t    {\r\n\t\t\tname: \"ReadAPI:  Fetch Zero\",\r\n\t\t\ttimeout:\t3000, //3 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tTry fetching 0 records. A count of the items in the pipeline should be returned.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tTry fetching 0 records. A count of the items in the pipeline should be returned.\r\n\r\n\t\t\t\tvar store = new dojox.data.SnapLogicStore({url: dojox.data.tests.stores.SnapLogicStore.pipelineUrl});\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onBegin(count, request){\r\n\t\t\t\t\tt.assertEqual(dojox.data.tests.stores.SnapLogicStore.pipelineSize, count);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tstore.fetch({\tcount: 0,\r\n\t\t\t\t\t\t\t\tonBegin: onBegin,\r\n\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.SnapLogicStore.error, doh, d)\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"ReadAPI:  Fetch_Paging\",\r\n\t\t\ttimeout:\t3000, //3 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tTest of multiple fetches on a single result.  Paging, if you will.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tTest of multiple fetches on a single result.  Paging, if you will.\r\n\r\n\t\t\t\tvar store = new dojox.data.SnapLogicStore({url: dojox.data.tests.stores.SnapLogicStore.pipelineUrl});\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction dumpFirstFetch(items, request){\r\n\t\t\t\t\tt.assertEqual(request.count, items.length);\r\n\t\t\t\t\trequest.start = dojox.data.tests.stores.SnapLogicStore.pipelineSize / 3;\r\n\t\t\t\t\trequest.count = 1;\r\n\t\t\t\t\trequest.onComplete = dumpSecondFetch;\r\n\t\t\t\t\tstore.fetch(request);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction dumpSecondFetch(items, request){\r\n\t\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\t\trequest.start = 0;\r\n\t\t\t\t\trequest.count = dojox.data.tests.stores.SnapLogicStore.pipelineSize / 2;\r\n\t\t\t\t\trequest.onComplete = dumpThirdFetch;\r\n\t\t\t\t\tstore.fetch(request);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction dumpThirdFetch(items, request){\r\n\t\t\t\t\tt.assertEqual(request.count, items.length);\r\n\t\t\t\t\trequest.count = dojox.data.tests.stores.SnapLogicStore.pipelineSize * 2;\r\n\t\t\t\t\trequest.onComplete = dumpFourthFetch;\r\n\t\t\t\t\tstore.fetch(request);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction dumpFourthFetch(items, request){\r\n\t\t\t\t\tt.assertEqual(dojox.data.tests.stores.SnapLogicStore.pipelineSize, items.length);\r\n\t\t\t\t\trequest.start = Math.floor(3 * dojox.data.tests.stores.SnapLogicStore.pipelineSize / 4);\r\n\t\t\t\t\trequest.count = dojox.data.tests.stores.SnapLogicStore.pipelineSize;\r\n\t\t\t\t\trequest.onComplete = dumpFifthFetch;\r\n\t\t\t\t\tstore.fetch(request);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction dumpFifthFetch(items, request){\r\n\t\t\t\t\tt.assertEqual(dojox.data.tests.stores.SnapLogicStore.pipelineSize - request.start, items.length);\r\n\t\t\t\t\trequest.start = 2;\r\n\t\t\t\t\trequest.count = dojox.data.tests.stores.SnapLogicStore.pipelineSize * 10;\r\n\t\t\t\t\trequest.onComplete = dumpSixthFetch;\r\n\t\t\t\t\tstore.fetch(request);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction dumpSixthFetch(items, request){\r\n\t\t\t\t\tt.assertEqual(dojox.data.tests.stores.SnapLogicStore.pipelineSize - request.start, items.length);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstore.fetch({\tcount: 5,\r\n\t\t\t\t\t\t\t\tonComplete: dumpFirstFetch,\r\n\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.SnapLogicStore.error, t, d)});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"ReadAPI:  getLabel\",\r\n\t\t\ttimeout:\t3000, //3 seconds\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tTest that the label function returns undefined since it's not supported.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tTest that the label function returns undefined since it's not supported.\r\n\r\n\t\t\t\tvar store = new dojox.data.SnapLogicStore({url: dojox.data.tests.stores.SnapLogicStore.pipelineUrl});\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items, request){\r\n\t\t\t\t\tt.assertEqual(items.length, 1);\r\n\t\t\t\t\tvar label = store.getLabel(items[0]);\r\n\t\t\t\t\tt.assertTrue(label === undefined);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tstore.fetch({\t\tcount: 1,\r\n\t\t\t\t\t\t\t\t\tonComplete: onComplete,\r\n\t\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.SnapLogicStore.error, t, d)\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"ReadAPI:  getLabelAttributes\",\r\n\t\t\ttimeout:\t3000, //3 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of the getLabelAttributes returns null since it's not supported.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of the getLabelAttributes returns null since it's not supported.\r\n\r\n\t\t\t\tvar store = new dojox.data.SnapLogicStore({url: dojox.data.tests.stores.SnapLogicStore.pipelineUrl});\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items, request){\r\n\t\t\t\t\tt.assertEqual(items.length, 1);\r\n\t\t\t\t\tvar labelList = store.getLabelAttributes(items[0]);\r\n\t\t\t\t\tt.assertTrue(labelList === null);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tstore.fetch({\t\tcount: 1,\r\n\t\t\t\t\t\t\t\t\tonComplete: onComplete,\r\n\t\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.SnapLogicStore.error, t, d)\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"ReadAPI:  getValue\",\r\n\t\t\ttimeout:\t3000, //3 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of the getValue function of the store.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of the getValue function of the store.\r\n\t\t\t\tvar store = new dojox.data.SnapLogicStore({url: dojox.data.tests.stores.SnapLogicStore.pipelineUrl});\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction completedAll(items){\r\n\t\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\t\tconsole.debug(items[0]);\r\n\t\t\t\t\tt.assertTrue(store.getValue(items[0], \"empno\") === 7369);\r\n\t\t\t\t\tt.assertTrue(store.getValue(items[0], \"ename\") === \"SMITH,CLERK\");\r\n\t\t\t\t\tconsole.debug(store.getValue(items[0], \"sal\"));\r\n\t\t\t\t\tt.assertTrue(store.getValue(items[0], \"sal\") == 800.00);\r\n\t\t\t\t\tconsole.debug(1);\r\n\t\t\t\t\tt.assertTrue(store.getValue(items[0], \"deptno\") === 20);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstore.fetch({\tcount: 1,\r\n\t\t\t\t\t\t\t\tonComplete: completedAll,\r\n\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.SnapLogicStore.error, t, d)});\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"ReadAPI:  getValues\",\r\n\t\t\ttimeout:\t3000, //3 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of the getValue function of the store.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of the getValue function of the store.\r\n\t\t\t\tvar store = new dojox.data.SnapLogicStore({url: dojox.data.tests.stores.SnapLogicStore.pipelineUrl});\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction completedAll(items){\r\n\t\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\t\tfor(var i = 0; i < dojox.data.tests.stores.SnapLogicStore.attributes.length; ++i){\r\n\t\t\t\t\t\tvar values = store.getValues(items[0], dojox.data.tests.stores.SnapLogicStore.attributes[i]);\r\n\t\t\t\t\t\tt.assertTrue(dojo.isArray(values));\r\n\t\t\t\t\t\tt.assertTrue(values[0] === store.getValue(items[0], dojox.data.tests.stores.SnapLogicStore.attributes[i]));\r\n\t\t\t\t\t}\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstore.fetch({\tcount: 1,\r\n\t\t\t\t\t\t\t\tonComplete: completedAll,\r\n\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.SnapLogicStore.error, t, d)});\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"ReadAPI:  isItem\",\r\n\t\t\ttimeout:\t3000, //3 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of the isItem function of the store\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of the isItem function of the store\r\n\t\t\t\tvar store = new dojox.data.SnapLogicStore({url: dojox.data.tests.stores.SnapLogicStore.pipelineUrl});\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction completedAll(items){\r\n\t\t\t\t\tt.assertEqual(5, items.length);\r\n\t\t\t\t\tfor(var i=0; i < items.length; i++){\r\n\t\t\t\t\t\tt.assertTrue(store.isItem(items[i]));\r\n\t\t\t\t\t}\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Get everything...\r\n\t\t\t\tstore.fetch({\tcount: 5,\r\n\t\t\t\t\t\t\t\tonComplete: completedAll,\r\n\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.SnapLogicStore.error, t, d)});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"ReadAPI:  hasAttribute\",\r\n\t\t\ttimeout:\t3000, //3 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of the hasAttribute function of the store\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of the hasAttribute function of the store\r\n\r\n\t\t\t\tvar store = new dojox.data.SnapLogicStore({url: dojox.data.tests.stores.SnapLogicStore.pipelineUrl});\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items){\r\n\t\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\t\tt.assertTrue(items[0] !== null);\r\n\t\t\t\t\tfor(var i = 0; i < dojox.data.tests.stores.SnapLogicStore.attributes.length; ++i){\r\n\t\t\t\t\t\tt.assertTrue(store.hasAttribute(items[0], dojox.data.tests.stores.SnapLogicStore.attributes[i]));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tt.assertTrue(!store.hasAttribute(items[0], \"Nothing\"));\r\n\t\t\t\t\tt.assertTrue(!store.hasAttribute(items[0], \"Text\"));\r\n\r\n\t\t\t\t\t//Test that null attributes throw an exception\r\n\t\t\t\t\tvar passed = false;\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\tstore.hasAttribute(items[0], null);\r\n\t\t\t\t\t}catch (e){\r\n\t\t\t\t\t\tpassed = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tt.assertTrue(passed);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Get one item...\r\n\t\t\t\tstore.fetch({\tcount: 1,\r\n\t\t\t\t\t\t\t\tonComplete: onComplete,\r\n\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.SnapLogicStore.error, t, d)\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"ReadAPI:  containsValue\",\r\n\t\t\ttimeout:\t3000, //3 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of the containsValue function of the store\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of the containsValue function of the store\r\n\r\n\t\t\t\tvar store = new dojox.data.SnapLogicStore({url: dojox.data.tests.stores.SnapLogicStore.pipelineUrl});\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items){\r\n\t\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\t\tvar value = store.getValue(items[0], \"LastName\");\r\n\t\t\t\t\tt.assertTrue(store.containsValue(items[0], \"LastName\", value));\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Get one item...\r\n\t\t\t\tstore.fetch({\tcount: 1,\r\n\t\t\t\t\t\t\t\tonComplete: onComplete,\r\n\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.SnapLogicStore.error, t, d)\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"ReadAPI:  getAttributes\",\r\n\t\t\ttimeout:\t3000, //3 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of the getAttributes function of the store\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of the getAttributes function of the store\r\n\r\n\t\t\t\tvar store = new dojox.data.SnapLogicStore({url: dojox.data.tests.stores.SnapLogicStore.pipelineUrl});\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items){\r\n\t\t\t\t\tt.assertEqual(1, items.length);\r\n\r\n\t\t\t\t\tvar itemAttributes = store.getAttributes(items[0]);\r\n\t\t\t\t\tt.assertEqual(dojox.data.tests.stores.SnapLogicStore.attributes.length, itemAttributes.length);\r\n\t\t\t\t\tfor(var i = 0; i < dojox.data.tests.stores.SnapLogicStore.attributes.length; ++i){\r\n\t\t\t\t\t\tt.assertTrue(dojo.indexOf(itemAttributes, dojox.data.tests.stores.SnapLogicStore.attributes[i]) !== -1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Get everything...\r\n\t\t\t\tstore.fetch({\tcount: 1,\r\n\t\t\t\t\t\t\t\tonComplete: onComplete,\r\n\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.SnapLogicStore.error, t, d)});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\tfunction testReadAPI_getFeatures(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getFeatures function of the store\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getFeatures function of the store\r\n\r\n\t\t\tvar store = new dojox.data.SnapLogicStore({url: dojox.data.tests.stores.SnapLogicStore.pipelineUrl});\r\n\r\n\t\t\tvar features = store.getFeatures();\r\n\t\t\tvar count = 0;\r\n\t\t\tfor(var i in features){\r\n\t\t\t\tt.assertEqual(i, \"dojo.data.api.Read\");\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\r\n\t\t\tt.assertEqual(count, 1);\r\n\t\t},\r\n\t\tfunction testReadAPI_functionConformance(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test read API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test read API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\r\n\t\t\tvar testStore = new dojox.data.SnapLogicStore({url: dojox.data.tests.stores.SnapLogicStore.pipelineUrl});\r\n\t\t\tvar readApi = new dojo.data.api.Read();\r\n\t\t\tvar passed = true;\r\n\r\n\t\t\tfor(var i in readApi){\r\n\t\t\t\tif(i.toString().charAt(0) !== '_'){\r\n\t\t\t\t\tvar member = readApi[i];\r\n\t\t\t\t\t//Check that all the 'Read' defined functions exist on the test store.\r\n\t\t\t\t\tif(typeof member === \"function\"){\r\n\t\t\t\t\t\tvar testStoreMember = testStore[i];\r\n\t\t\t\t\t\tif(!(typeof testStoreMember === \"function\")){\r\n\t\t\t\t\t\t\tpassed = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tt.assertTrue(passed);\r\n\t\t}\r\n\t]\r\n);\r\n"]}