{"version":3,"sources":["data/tests/stores/JsonQueryRestStore.js"],"names":["dojo","provide","require","dojox","data","tests","stores","JsonQueryRestStore","error","t","d","errData","errback","testService","query","lastQuery","deferred","Deferred","callback","id","name","price","servicePath","jsonStore","service","doh","register","timeout","runTest","fetch","onComplete","items","request","is","onError","partial","sort","attribute","testItems","console","log","length","queryOptions","cache","start","count","descending","jsonQueryPagination","onBegin"],"mappings":"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","file":"../../../../data/tests/stores/JsonQueryRestStore.js","sourcesContent":["dojo.provide(\"dojox.data.tests.stores.JsonQueryRestStore\");\r\ndojo.require(\"dojox.data.ClientFilter\");\r\ndojo.require(\"dojox.data.JsonQueryRestStore\");\r\n\r\ndojox.data.tests.stores.JsonQueryRestStore.error = function(t, d, errData){\r\n\t// summary:\r\n\t//\t\tThe error callback function to be used for all of the tests.\r\n\td.errback(errData);\r\n};\r\ntestService = function(query){\r\n\tlastQuery = query;\r\n\tvar deferred = new dojo.Deferred();\r\n\tdeferred.callback([\r\n\t\t{id:1, name:\"Ball\", price: 5},\r\n\t\t{id:2, name:\"Car\", price: 15},\r\n\t\t{id:3, name:\"Truck\", price: 25},\r\n\t\t{id:4, name:\"Hula Hoop\", price: 55}\r\n\t]);\r\n\treturn deferred;\r\n\t\r\n};\r\ntestService.servicePath = \"/testing\";\r\njsonStore = new dojox.data.JsonQueryRestStore({service:testService});\r\n\r\ndoh.register(\"dojox.data.tests.stores.JsonQueryRestStore\",\r\n\t[\r\n\t\t{\r\n\t\t\tname: \"Fetch using a query object\",\r\n\t\t\ttimeout:\t10000, //10 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of a basic fetch on JsonQueryRestStore of a simple query.\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tjsonStore.fetch({query:{name:\"Car\"},\r\n\t\t\t\t\tonComplete: function(items, request){\r\n\t\t\t\t\t\tt.is(lastQuery,\"[?(@.name='Car')]\");\r\n\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.JsonQueryRestStore.error, doh, d)\r\n\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Fetch+Sorting using a query object\",\r\n\t\t\ttimeout:\t10000, //10 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of a basic fetch on JsonQueryRestStore of a simple query.\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tjsonStore.fetch({query:{name:\"Car\"},\r\n\t\t\t\t\tsort:[{attribute:\"price\"}],\r\n\t\t\t\t\tonComplete: function(items, request){\r\n\t\t\t\t\t\tt.is(lastQuery,\"[?(@.name='Car')][/@['price']]\");\r\n\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.JsonQueryRestStore.error, doh, d)\r\n\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Fetch all items (and cache for the next tests)\",\r\n\t\t\ttimeout:\t10000, //10 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of a basic fetch on JsonQueryRestStore of a simple query.\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tjsonStore.fetch({query:\"\",\r\n\t\t\t\t\tonComplete: function(items, request){\r\n\t\t\t\t\t\ttestItems = items;\r\n\t\t\t\t\t\tconsole.log(items.length, items);\r\n\t\t\t\t\t\tt.is(4, items.length);\r\n\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.JsonQueryRestStore.error, doh, d),\r\n\t\t\t\t\tqueryOptions:{cache:true}\r\n\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Fetch using a query object\",\r\n\t\t\ttimeout:\t10000, //10 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of a basic fetch on JsonQueryRestStore of a simple query.\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tlastQuery = null;\r\n\t\t\t\tjsonStore.fetch({query:{name:\"Car\"},\r\n\t\t\t\t\tonComplete: function(items, request){\r\n\t\t\t\t\t\tt.is(1, items.length);\r\n\t\t\t\t\t\tt.is(lastQuery, null); // should not be sent to the service\r\n\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.JsonQueryRestStore.error, doh, d)\r\n\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Fetch using a JSONQuery\",\r\n\t\t\ttimeout:\t10000, //10 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of a basic fetch on JsonQueryRestStore of a simple query.\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tlastQuery = null;\r\n\t\t\t\tjsonStore.fetch({query:\"?name='Car'\",\r\n\t\t\t\t\tonComplete: function(items, request){\r\n\t\t\t\t\t\tt.is(1, items.length);\r\n\t\t\t\t\t\tt.is(lastQuery, null); // should not be sent to the service\r\n\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.JsonQueryRestStore.error, doh, d)\r\n\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Fetch using a JSONQuery with operator\",\r\n\t\t\ttimeout:\t10000, //10 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of a basic fetch on JsonQueryRestStore of a simple query.\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tlastQuery = null;\r\n\t\t\t\tjsonStore.fetch({query:\"[?price<20]\",\r\n\t\t\t\t\tonComplete: function(items, request){\r\n\t\t\t\t\t\tt.is(2, items.length);\r\n\t\t\t\t\t\tt.is(lastQuery, null); // should not be sent to the service\r\n\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.JsonQueryRestStore.error, doh, d)\r\n\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Fetch using a JSONQuery with operator and paging\",\r\n\t\t\ttimeout:\t10000, //10 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of a basic fetch on JsonQueryRestStore of a simple query.\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tlastQuery = null;\r\n\t\t\t\tjsonStore.fetch({query:\"?price<20\",start:1, count:1,\r\n\t\t\t\t\tonComplete: function(items, request){\r\n\t\t\t\t\t\tt.is(1, items.length);\r\n\t\t\t\t\t\tt.is(lastQuery, null); // should not be sent to the service\r\n\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.JsonQueryRestStore.error, doh, d),\r\n\t\t\t\t\tqueryOptions:{cache:true}\r\n\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Sorting\",\r\n\t\t\ttimeout:\t10000, //10 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of a basic fetch on JsonQueryRestStore of a simple query.\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tlastQuery = null;\r\n\t\t\t\tjsonStore.fetch({sort:[{attribute:\"name\", descending: true}],\r\n\t\t\t\t\tonComplete: function(items, request){\r\n\t\t\t\t\t\tt.is(\"Truck\", items[0].name);\r\n\t\t\t\t\t\tt.is(\"Ball\", items[3].name);\r\n\t\t\t\t\t\tt.is(lastQuery, null); // should not be sent to the service\r\n\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.JsonQueryRestStore.error, doh, d)\r\n\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Sorting + Paging\",\r\n\t\t\ttimeout:\t10000, //10 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of a basic fetch on JsonQueryRestStore of a simple query.\r\n\t\t\t\tjsonStore.jsonQueryPagination = true;\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tlastQuery = null;\r\n\t\t\t\tjsonStore.fetch({sort:[{attribute:\"name\", descending: true}],start:1, count:2,\r\n\t\t\t\t\tonBegin: function(count){\r\n\t\t\t\t\t\tt.is(count,4);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonComplete: function(items, request){\r\n\t\t\t\t\t\tt.is(\"Hula Hoop\", items[0].name);\r\n\t\t\t\t\t\tt.is(\"Car\", items[1].name);\r\n\t\t\t\t\t\tt.is(items.length, 2);\r\n\t\t\t\t\t\tt.is(lastQuery, null); // should not be sent to the service\r\n\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.JsonQueryRestStore.error, doh, d)\r\n\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n);\r\n"]}