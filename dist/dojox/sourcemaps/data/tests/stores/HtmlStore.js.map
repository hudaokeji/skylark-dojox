{"version":3,"sources":["data/tests/stores/HtmlStore.js"],"names":["dojo","provide","require","dojox","data","tests","stores","HtmlStore","getBooks3Store","url","toUrl","toString","dataId","getBooks3StoreOnCreate","fetchOnCreate","getBooks2Store","getBooksStore","getBooksStoreWhitespace","trimWhitespace","getBooks3StoreWhitespace","doh","register","t","store","d","Deferred","fetch","query","isbn","onComplete","items","request","assertEqual","length","callback","onError","error","errback","name","dumpFirstFetch","start","count","dumpSecondFetch","dumpThirdFetch","dumpFourthFetch","dumpFifthFetch","dumpSixthFetch","errData","queryOptions","ignoreCase","label","getLabel","assertTrue","labelList","getLabelAttributes","item","hasAttribute","getValue","values","getValues","isItem","store1","store2","item1","item2","containsValue","order","sort","attribute","descending","i","comparatorMap","a","b","ret","parseInt","itemId","isItemLoaded","features","getFeatures","attributes","getAttributes","testStore","readApi","api","Read","passed","console","log","getIdentity","getIdentityAttributes","fetchItemByIdentity","identity","onItem","identityApi","Identity"],"mappings":"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","file":"../../../../data/tests/stores/HtmlStore.js","sourcesContent":["dojo.provide(\"dojox.data.tests.stores.HtmlStore\");\r\ndojo.require(\"dojox.data.HtmlStore\");\r\ndojo.require(\"dojo.data.api.Read\");\r\ndojo.require(\"dojo.data.api.Identity\");\r\n\r\n\r\ndojox.data.tests.stores.HtmlStore.getBooks3Store = function(){\r\n\treturn new dojox.data.HtmlStore({url: require.toUrl(\"dojox/data/tests/stores/books3.html\").toString(), dataId: \"books3\"});\r\n};\r\n\r\ndojox.data.tests.stores.HtmlStore.getBooks3StoreOnCreate = function(){\r\n\treturn new dojox.data.HtmlStore({url: require.toUrl(\"dojox/data/tests/stores/books3.html\").toString(), dataId: \"books3\", fetchOnCreate: true});\r\n};\r\n\r\ndojox.data.tests.stores.HtmlStore.getBooks2Store = function(){\r\n\treturn new dojox.data.HtmlStore({url: require.toUrl(\"dojox/data/tests/stores/books2.html\").toString(), dataId: \"books2\"});\r\n};\r\n\r\ndojox.data.tests.stores.HtmlStore.getBooksStore = function(){\r\n\treturn new dojox.data.HtmlStore({url: require.toUrl(\"dojox/data/tests/stores/books.html\").toString(), dataId: \"books\"});\r\n};\r\n\r\ndojox.data.tests.stores.HtmlStore.getBooksStoreWhitespace = function(){\r\n\treturn new dojox.data.HtmlStore({url: require.toUrl(\"dojox/data/tests/stores/booksWhitespace.html\").toString(), dataId: \"books\", trimWhitespace: true});\r\n};\r\n\r\ndojox.data.tests.stores.HtmlStore.getBooks3StoreWhitespace = function(){\r\n\treturn new dojox.data.HtmlStore({url: require.toUrl(\"dojox/data/tests/stores/books3Whitespace.html\").toString(), dataId: \"books3\", trimWhitespace: true});\r\n};\r\n\r\ndoh.register(\"dojox.data.tests.stores.HtmlStore\",\r\n\t[\r\n/***************************************\r\n     dojo.data.api.Read API\r\n***************************************/\r\n\t\tfunction testReadAPI_fetch_all_table(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching all xml items through an XML element called isbn\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching all xml items through an XML element called isbn\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooksStore();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(20, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"*\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_all_table_Whitespace(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching all table row items through an header called isbn\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching all table row items through an header called isbn\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooksStoreWhitespace();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(20, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"*\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_all_list(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching all xml items through an XML element called isbn\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching all xml items through an XML element called isbn\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooks3Store();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(5, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{name:\"*\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_one_table(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooks2Store();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"A9B574\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_one_table_Whitespace(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching one item through an element called isbn\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching one item through an element called isbn\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooksStoreWhitespace();\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"19\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_one_list(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooks3Store();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{name:\"A9B57C - Title of 1 - Author of 1\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_one_list_oncreate(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooks3StoreOnCreate();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{name:\"A9B57C - Title of 1 - Author of 1\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_one_list_Whitespace(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching one item through an attribute called name\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching one item through an attribute called name\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooks3StoreWhitespace();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{name:\"A9B57C - Title of 1 - Author of 1\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_paging(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooksStore();\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction dumpFirstFetch(items, request){\r\n\t\t\t\tt.assertEqual(5, items.length);\r\n\t\t\t\trequest.start = 3;\r\n\t\t\t\trequest.count = 1;\r\n\t\t\t\trequest.onComplete = dumpSecondFetch;\r\n\t\t\t\tstore.fetch(request);\r\n\t\t\t}\r\n\r\n\t\t\tfunction dumpSecondFetch(items, request){\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\trequest.start = 0;\r\n\t\t\t\trequest.count = 5;\r\n\t\t\t\trequest.onComplete = dumpThirdFetch;\r\n\t\t\t\tstore.fetch(request);\r\n\t\t\t}\r\n\r\n\t\t\tfunction dumpThirdFetch(items, request){\r\n\t\t\t\tt.assertEqual(5, items.length);\r\n\t\t\t\trequest.start = 2;\r\n\t\t\t\trequest.count = 20;\r\n\t\t\t\trequest.onComplete = dumpFourthFetch;\r\n\t\t\t\tstore.fetch(request);\r\n\t\t\t}\r\n\r\n\t\t\tfunction dumpFourthFetch(items, request){\r\n\t\t\t\tt.assertEqual(18, items.length);\r\n\t\t\t\trequest.start = 9;\r\n\t\t\t\trequest.count = 100;\r\n\t\t\t\trequest.onComplete = dumpFifthFetch;\r\n\t\t\t\tstore.fetch(request);\r\n\t\t\t}\r\n\r\n\t\t\tfunction dumpFifthFetch(items, request){\r\n\t\t\t\tt.assertEqual(11, items.length);\r\n\t\t\t\trequest.start = 2;\r\n\t\t\t\trequest.count = 20;\r\n\t\t\t\trequest.onComplete = dumpSixthFetch;\r\n\t\t\t\tstore.fetch(request);\r\n\t\t\t}\r\n\r\n\t\t\tfunction dumpSixthFetch(items, request){\r\n\t\t\t\tt.assertEqual(18, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\r\n\t\t\tfunction completed(items, request){\r\n\t\t\t\tt.assertEqual(20, items.length);\r\n\t\t\t\trequest.start = 1;\r\n\t\t\t\trequest.count = 5;\r\n\t\t\t\trequest.onComplete = dumpFirstFetch;\r\n\t\t\t\tstore.fetch(request);\r\n\t\t\t}\r\n\r\n\t\t\tfunction error(errData, request){\r\n\t\t\t\td.errback(errData);\r\n\t\t\t}\r\n\r\n\t\t\tstore.fetch({onComplete: completed, onError: error});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_pattern0(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn with ? pattern match\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn with ? pattern match\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooks2Store();\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"?9B574\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_pattern1(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn with ? pattern match\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn with ? pattern match\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooks2Store();\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(4, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"A9B57?\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_pattern2(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn with * pattern match\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn with * pattern match\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooks2Store();\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(5, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"A9*\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_pattern_caseInsensitive(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn with ? pattern match and in case insensitive mode.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn with ? pattern match and in case insensitive mode.\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooks2Store();\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"?9b574\"}, queryOptions: {ignoreCase: true}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_pattern_caseSensitive(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn with ? pattern match and in case sensitive mode.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn with ? pattern match and in case sensitive mode.\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooks2Store();\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"?9B574\"}, queryOptions: {ignoreCase: false}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_getLabel_table(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getLabel function against a store set that has a label defined.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getLabel function against a store set that has a label defined.\r\n\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooks2Store();\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(items.length, 1);\r\n\t\t\t\tvar label = store.getLabel(items[0]);\r\n\t\t\t\tt.assertTrue(label !== null);\r\n\t\t\t\tt.assertEqual(\"Item #4\", label);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"A9B574\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d;\r\n\t\t},\r\n\t\tfunction testReadAPI_getLabel_list(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getLabel function against a store set that has a label defined.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getLabel function against a store set that has a label defined.\r\n\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooks3Store();\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(items.length, 1);\r\n\t\t\t\tvar label = store.getLabel(items[0]);\r\n\t\t\t\tt.assertTrue(label !== null);\r\n\t\t\t\tt.assertEqual(\"A9B57C - Title of 1 - Author of 1\", label);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{name:\"A9B57C - Title of 1 - Author of 1\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d;\r\n\t\t},\r\n\t\tfunction testReadAPI_getLabelAttributes(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getLabelAttributes function against a store set that has a label defined.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getLabelAttributes function against a store set that has a label defined.\r\n\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooks2Store();\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(items.length, 1);\r\n\t\t\t\tvar labelList = store.getLabelAttributes(items[0]);\r\n\t\t\t\tt.assertTrue(labelList === null);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"A9B574\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d;\r\n\t\t},\r\n\r\n\t\tfunction testReadAPI_getValue(t){\r\n\t\t\t // summary:\r\n\t\t\t //\t\tSimple test of the getValue API\r\n\t\t\t // description:\r\n\t\t\t //\t\tSimple test of the getValue API\r\n\t\t\t var store = dojox.data.tests.stores.HtmlStore.getBooks2Store();\r\n\r\n\t\t\t var d = new doh.Deferred();\r\n\t\t\t function onComplete(items, request) {\r\n\t\t\t\t t.assertEqual(1, items.length);\r\n\t\t\t\t var item = items[0];\r\n\t\t\t\t t.assertTrue(store.hasAttribute(item,\"isbn\"));\r\n\t\t\t\t t.assertEqual(store.getValue(item,\"isbn\"), \"A9B574\");\r\n\t\t\t\t d.callback(true);\r\n\t\t\t }\r\n\t\t\t function onError(error, request) {\r\n\t\t\t\t d.errback(error);\r\n\t\t\t }\r\n\t\t\t store.fetch({query:{isbn:\"A9B574\"}, onComplete: onComplete, onError: onError});\r\n\t\t\t return d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_getValues(t){\r\n\t\t\t // summary:\r\n\t\t\t //\t\tSimple test of the getValues API\r\n\t\t\t // description:\r\n\t\t\t //\t\tSimple test of the getValues API\r\n\t\t\t var store = dojox.data.tests.stores.HtmlStore.getBooks2Store();\r\n\r\n\t\t\t var d = new doh.Deferred();\r\n\t\t\t function onComplete(items, request) {\r\n\t\t\t\t t.assertEqual(1, items.length);\r\n\t\t\t\t var item = items[0];\r\n\t\t\t\t t.assertTrue(store.hasAttribute(item,\"isbn\"));\r\n\t\t\t\t var values = store.getValues(item,\"isbn\");\r\n\t\t\t\t t.assertEqual(1,values.length);\r\n\t\t\t\t t.assertEqual(\"A9B574\", values[0]);\r\n\t\t\t\t d.callback(true);\r\n\t\t\t }\r\n\t\t\t function onError(error, request) {\r\n\t\t\t\t d.errback(error);\r\n\t\t\t }\r\n\t\t\t store.fetch({query:{isbn:\"A9B574\"}, onComplete: onComplete, onError: onError});\r\n\t\t\t return d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_isItem(t){\r\n\t\t\t // summary:\r\n\t\t\t //\t\tSimple test of the isItem API\r\n\t\t\t // description:\r\n\t\t\t //\t\tSimple test of the isItem API\r\n\t\t\t var store = dojox.data.tests.stores.HtmlStore.getBooks2Store();\r\n\r\n\t\t\t var d = new doh.Deferred();\r\n\t\t\t function onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tt.assertTrue(store.isItem(item));\r\n\t\t\t\tt.assertTrue(!store.isItem({}));\r\n\t\t\t\tt.assertTrue(!store.isItem(\"Foo\"));\r\n\t\t\t\tt.assertTrue(!store.isItem(1));\r\n\t\t\t\td.callback(true);\r\n\t\t\t }\r\n\t\t\t function onError(error, request) {\r\n\t\t\t\t d.errback(error);\r\n\t\t\t }\r\n\t\t\t store.fetch({query:{isbn:\"A9B574\"}, onComplete: onComplete, onError: onError});\r\n\t\t\t return d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_isItem_multistore(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the isItem API across multiple store instances.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the isItem API across multiple store instances.\r\n\t\t\tvar store1 = dojox.data.tests.stores.HtmlStore.getBooksStore();\r\n\t\t\tvar store2 = dojox.data.tests.stores.HtmlStore.getBooks2Store();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete1(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item1 = items[0];\r\n\t\t\t\tt.assertTrue(store1.isItem(item1));\r\n\r\n\t\t\t\tfunction onComplete2(items, request) {\r\n\t\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\t\tvar item2 = items[0];\r\n\t\t\t\t\tt.assertTrue(store2.isItem(item2));\r\n\t\t\t\t\tt.assertTrue(!store1.isItem(item2));\r\n\t\t\t\t\tt.assertTrue(!store2.isItem(item1));\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tstore2.fetch({query:{isbn:\"A9B574\"}, onComplete: onComplete2, onError: onError});\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore1.fetch({query:{isbn:\"1\"}, onComplete: onComplete1, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_hasAttribute(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the hasAttribute API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the hasAttribute API\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooks2Store();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tt.assertTrue(store.hasAttribute(item,\"isbn\"));\r\n\t\t\t\tt.assertTrue(!store.hasAttribute(item,\"bob\"));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"A9B574\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_containsValue(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the containsValue API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the containsValue API\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooks2Store();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tt.assertTrue(store.containsValue(item,\"isbn\", \"A9B574\"));\r\n\t\t\t\tt.assertTrue(!store.containsValue(item,\"isbn\", \"bob\"));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"A9B574\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_sortDescending(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the sorting API in descending order.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the sorting API in descending order.\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooksStore();\r\n\r\n\t\t\t//Comparison is done as a string type (toString comparison), so the order won't be numeric\r\n\t\t\t//So have to compare in 'alphabetic' order.\r\n\t\t\tvar order = [9,8,7,6,5,4,3,20,2,19,18,17,16,15,14,13,12,11,10,1];\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(20, items.length);\r\n\r\n\t\t\t\tfor(var i = 0; i < items.length; i++){\r\n\t\t\t\t\tt.assertEqual(order[i], store.getValue(items[i],\"isbn\").toString());\r\n\t\t\t\t}\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\r\n\t\t\tvar sortAttributes = [{attribute: \"isbn\", descending: true}];\r\n\t\t\tstore.fetch({query:{isbn:\"*\"}, sort: sortAttributes, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_sortAscending(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the sorting API in ascending order.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the sorting API in ascending order.\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooksStore();\r\n\r\n\t\t\t//Comparison is done as a string type (toString comparison), so the order won't be numeric\r\n\t\t\t//So have to compare in 'alphabetic' order.\r\n\t\t\tvar order = [1,10,11,12,13,14,15,16,17,18,19,2,20,3,4,5,6,7,8,9];\r\n\t\t\t\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(20, items.length);\r\n\t\t\t\tvar itemId = 1;\r\n\t\t\t\tfor(var i = 0; i < items.length; i++){\r\n\t\t\t\t\tt.assertEqual(order[i], store.getValue(items[i],\"isbn\").toString());\r\n\t\t\t\t}\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\r\n\t\t\tvar sortAttributes = [{attribute: \"isbn\"}];\r\n\t\t\tstore.fetch({query:{isbn:\"*\"}, sort: sortAttributes, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_sortDescendingNumeric(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the sorting API in descending order using a numeric comparator.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the sorting API in descending order using a numeric comparator.\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooksStore();\r\n\r\n\t\t\t//isbn should be treated as a numeric, not as a string comparison\r\n\t\t\tstore.comparatorMap = {};\r\n\t\t\tstore.comparatorMap[\"isbn\"] = function(a, b){\r\n\t\t\t\tvar ret = 0;\r\n\t\t\t\tif(parseInt(a.toString()) > parseInt(b.toString())){\r\n\t\t\t\t\tret = 1;\r\n\t\t\t\t}else if(parseInt(a.toString()) < parseInt(b.toString())){\r\n\t\t\t\t\tret = -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn ret; //int, {-1,0,1}\r\n\t\t\t};\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n                \t\tt.assertEqual(20, items.length);\r\n                \t\tvar itemId = 20;\r\n\t\t\t\tfor(var i = 0; i < items.length; i++){\r\n\t\t\t\t\tt.assertEqual(itemId, store.getValue(items[i],\"isbn\").toString());\r\n\t\t\t\t\titemId--;\r\n\t\t\t\t}\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\r\n\t\t\tvar sortAttributes = [{attribute: \"isbn\", descending: true}];\r\n\t\t\tstore.fetch({query:{isbn:\"*\"}, sort: sortAttributes, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_sortAscendingNumeric(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the sorting API in ascending order using a numeric comparator.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the sorting API in ascending order using a numeric comparator.\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooksStore();\r\n\r\n\t\t\t//isbn should be treated as a numeric, not as a string comparison\r\n\t\t\tstore.comparatorMap = {};\r\n\t\t\tstore.comparatorMap[\"isbn\"] = function(a, b){\r\n\t\t\t\tvar ret = 0;\r\n\t\t\t\tif(parseInt(a.toString()) > parseInt(b.toString())){\r\n\t\t\t\t\tret = 1;\r\n\t\t\t\t}else if(parseInt(a.toString()) < parseInt(b.toString())){\r\n\t\t\t\t\tret = -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn ret; //int, {-1,0,1}\r\n\t\t\t};\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(20, items.length);\r\n\t\t\t\tvar itemId = 1;\r\n\t\t\t\tfor(var i = 0; i < items.length; i++){\r\n\t\t\t\t\tt.assertEqual(itemId, store.getValue(items[i],\"isbn\").toString());\r\n\t\t\t\t\titemId++;\r\n\t\t\t\t}\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\r\n\t\t\tvar sortAttributes = [{attribute: \"isbn\"}];\r\n\t\t\tstore.fetch({query:{isbn:\"*\"}, sort: sortAttributes, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_isItemLoaded(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the isItemLoaded API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the isItemLoaded API\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooks2Store();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tt.assertTrue(store.isItemLoaded(item));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"A9B574\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_getFeatures(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getFeatures function of the store\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getFeatures function of the store\r\n\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooks2Store();\r\n\t\t\tvar features = store.getFeatures();\r\n\t\t\tvar count = 0;\r\n\t\t\tfor(i in features){\r\n\t\t\t\tt.assertTrue((i === \"dojo.data.api.Read\" || i === \"dojo.data.api.Identity\"));\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t\tt.assertEqual(2, count);\r\n\t\t},\r\n\t\tfunction testReadAPI_getAttributes(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getAttributes API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getAttributes API\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooks2Store();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tvar attributes = store.getAttributes(item);\r\n\t\t\t\tt.assertEqual(3,attributes.length);\r\n\t\t\t\tfor(var i=0; i<attributes.length; i++){\r\n\t\t\t\t\tt.assertTrue((attributes[i] === \"isbn\" || attributes[i] === \"title\" || attributes[i] === \"author\"));\r\n\t\t\t\t}\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"A9B574\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_functionConformance(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test read API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test read API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\r\n\t\t\tvar testStore = dojox.data.tests.stores.HtmlStore.getBooksStore();\r\n\t\t\tvar readApi = new dojo.data.api.Read();\r\n\t\t\tvar passed = true;\r\n\r\n\t\t\tfor(i in readApi){\r\n\t\t\t\tvar member = readApi[i];\r\n\t\t\t\t//Check that all the 'Read' defined functions exist on the test store.\r\n\t\t\t\tif(typeof member === \"function\"){\r\n\t\t\t\t\tvar testStoreMember = testStore[i];\r\n\t\t\t\t\tif(!(typeof testStoreMember === \"function\")){\r\n\t\t\t\t\t\tconsole.log(\"Problem with function: [\" + i + \"]\");\r\n\t\t\t\t\t\tpassed = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tt.assertTrue(passed);\r\n\t\t},\r\n/***************************************\r\n     dojo.data.api.Identity API\r\n***************************************/\r\n\t\tfunction testIdentityAPI_getIdentity_table(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getAttributes API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getAttributes API\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooks2Store();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tt.assertEqual(4,store.getIdentity(item));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"A9B574\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testIdentityAPI_getIdentity_list(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getAttributes API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getAttributes API\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooks3Store();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tt.assertEqual(\"A9B57C - Title of 1 - Author of 1\",store.getIdentity(item));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{name:\"A9B57C - Title of 1 - Author of 1\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testIdentityAPI_getIdentityAttributes(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getAttributes API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getAttributes API\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooks2Store();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\t//Should have none, as it's not a public attribute.\r\n\t\t\t\tvar attributes = store.getIdentityAttributes(item);\r\n\t\t\t\tt.assertEqual(null, attributes);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{isbn:\"A9B574\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testIdentityAPI_fetchItemByIdentity_table(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity API\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooks2Store();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item, request) {\r\n\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\tt.assertTrue(store.isItem(item));\r\n\t\t\t\tt.assertEqual(\"A9B574\", store.getValue(item, \"isbn\"));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetchItemByIdentity({identity: 4, onItem: onItem, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testIdentityAPI_fetchItemByIdentity_list(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity API\r\n\t\t\tvar store = dojox.data.tests.stores.HtmlStore.getBooks3Store();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item, request) {\r\n\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\tt.assertTrue(store.isItem(item));\r\n\t\t\t\tt.assertEqual(\"A9B57C - Title of 1 - Author of 1\", store.getValue(item, \"name\"));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetchItemByIdentity({identity: \"A9B57C - Title of 1 - Author of 1\", onItem: onItem, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testIdentityAPI_functionConformance(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test identity API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test identity API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\r\n\t\t\tvar testStore = dojox.data.tests.stores.HtmlStore.getBooksStore();\r\n\t\t\tvar identityApi = new dojo.data.api.Identity();\r\n\t\t\tvar passed = true;\r\n\r\n\t\t\tfor(i in identityApi){\r\n\t\t\t\tvar member = identityApi[i];\r\n\t\t\t\t//Check that all the 'Read' defined functions exist on the test store.\r\n\t\t\t\tif(typeof member === \"function\"){\r\n\t\t\t\t\tvar testStoreMember = testStore[i];\r\n\t\t\t\t\tif(!(typeof testStoreMember === \"function\")){\r\n\t\t\t\t\t\tconsole.log(\"Problem with function: [\" + i + \"]\");\r\n\t\t\t\t\t\tpassed = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tt.assertTrue(passed);\r\n\t\t}\r\n\t]\r\n);\r\n\r\n//Register the remote tests ... when they work.\r\n//doh.registerUrl(\"dojox.data.tests.stores.HtmlStore.remote\", dojo.moduleUrl(\"dojox.data.tests\", \"ml/test_HtmlStore_declaratively.html\"));"]}