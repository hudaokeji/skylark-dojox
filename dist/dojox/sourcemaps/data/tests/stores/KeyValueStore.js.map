{"version":3,"sources":["data/tests/stores/KeyValueStore.js"],"names":["dojo","provide","require","dojox","data","tests","stores","KeyValueStore","getDatasource","type","dataSource","isBrowser","url","toUrl","toString","keyData","verifyItems","keyStore","items","attribute","compareArray","length","i","getValue","error","t","d","errData","console","log","errback","doh","register","args","Deferred","fetch","onComplete","assertTrue","callback","onError","partial","query","key","request","is","done","e","fetchItemByIdentity","identity","onItem","item","count","onBegin","size","requestObj","isItem","dumpFirstFetch","start","dumpSecondFetch","dumpThirdFetch","dumpFourthFetch","dumpFifthFetch","dumpSixthFetch","assertEqual","label","getLabel","labelList","getLabelAttributes","isArray","names","getValues","getIdentity","getIdentityAttributes","hasAttribute","passed","containsValue","attributes","getAttributes","features","getFeatures","value","queryOptions","ignoreCase","sort","descending","comparatorMap","a","b","ret","lastChar","name","slice","lastCharA","lastCharB","findResult","orderedArray","testStore","readApi","api","Read","charAt","testStoreMember","identityApi","Identity"],"mappings":";;;;;;;AAAAA,KAAKC,QAAQ,yCACbD,KAAKE,QAAQ,4BACbF,KAAKE,QAAQ,sBACbF,KAAKE,QAAQ,0BAEbC,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,cAAgB,SAASC,GAM9D,IAAIC,KAEJ,GAAGV,KAAKW,UACPD,EAAWE,IAAMV,QAAQW,MAAM,yCAAgCC,eAC3D,CAGJ,IAAIC,EAAU,MAEdA,GAAW,sBACXA,GAAW,sBACXA,GAAW,2BACXA,GAAW,mBACXA,GAAW,yBACXA,GAAW,0BACXA,GAAW,yBACXA,GAAW,MACXL,EAAWN,KAAOW,EAEnB,OAAOL,GAGRP,MAAMC,KAAKC,MAAMC,OAAOC,cAAcS,YAAc,SAASC,EAAUC,EAAOC,EAAWC,GAIxF,GAAGF,EAAMG,QAAUD,EAAaC,OAAS,OAAO,EAChD,IAAI,IAAIC,EAAI,EAAGA,EAAIJ,EAAMG,OAAQC,IAChC,GAAKL,EAASM,SAASL,EAAMI,GAAIH,KAAeC,EAAaE,GAC5D,OAAO,EAGT,OAAO,GAGRnB,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAQ,SAASC,EAAGC,EAAGC,GAG5D,IAAKL,KAAKK,EACTC,QAAQC,IAAIF,EAAQL,IAErBI,EAAEI,QAAQH,IAGXI,IAAIC,SAAS,yCAEX,SAA+BP,GAM9B,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,cAAc,wBAC3DS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAExCP,EAAI,IAAIK,IAAIG,SAQhB,OADAjB,EAASkB,OAAQC,WANjB,SAAsBlB,GACrBO,EAAEY,WAA6B,IAAjBnB,EAAMG,QACpBK,EAAEY,UAAS,IAI+BC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KAC1GA,GAER,SAAoDD,GAMnD,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,gBAC7CS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAExCP,EAAI,IAAIK,IAAIG,SAQhB,OADAjB,EAASkB,OAAQC,WANjB,SAAsBlB,GACrBO,EAAEY,WAA6B,IAAjBnB,EAAMG,QACpBK,EAAEY,UAAS,IAI+BC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KAC1GA,GAER,SAA+BD,GAM9B,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,gBAC7CS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAExCP,EAAI,IAAIK,IAAIG,SAShB,OAJAjB,EAASkB,OAASM,OAAQC,IAAK,QAC1BN,WALL,SAAoBlB,EAAOyB,GAC1BlB,EAAEmB,GAAG,EAAG1B,EAAMG,QACdK,EAAEY,UAAS,IAIPC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KAEpEA,GAER,SAAoCD,GAMnC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,gBAC7CS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAExCP,EAAI,IAAIK,IAAIG,SAEZW,IAAQ,GAAO,GAkBnB,IAEC5B,EAASkB,OAASM,OAAQC,IAAK,QAC1BN,WAnBN,SAAuBlB,EAAOyB,GAC7BE,EAAK,IAAK,EACVpB,EAAEmB,GAAG,EAAG1B,EAAMG,QACXwB,EAAK,IAAMA,EAAK,IAClBnB,EAAEY,UAAS,IAgBPC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KAE3ET,EAASkB,OAASM,OAAQC,IAAK,SAC1BN,WAfN,SAAuBlB,EAAOyB,GAC7BE,EAAK,IAAK,EACVpB,EAAEmB,GAAG,EAAG1B,EAAMG,QACXwB,EAAK,IAAMA,EAAK,IAClBnB,EAAEY,UAAS,IAYPC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KAG5E,MAAMoB,GAEL,IAAKxB,KAAKwB,EACTlB,QAAQC,IAAIiB,EAAExB,IAIhB,OAAOI,GAER,SAAyCD,GAMxC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,gBAC7CS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAExCP,EAAI,IAAIK,IAAIG,SAEZW,IAAQ,GAAO,GA0BnB,OANA5B,EAASkB,OAASM,OAAQC,IAAK,OAC1BN,WApBL,SAAoBlB,EAAOyB,GAC1BE,EAAK,IAAK,EACVpB,EAAEmB,GAAG,EAAG1B,EAAMG,QACXwB,EAAK,IAAMA,EAAK,IAClBnB,EAAEY,UAAS,IAiBRC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KAG3ET,EAAS8B,qBAAqBC,SAAU,OAAQC,OAhBhD,SAAgBC,GACfL,EAAK,IAAK,EACVpB,EAAEY,WAAoB,OAATa,GACbzB,EAAEmB,GAAG,OAAQ3B,EAASM,SAAS2B,EAAK,QACpCzB,EAAEmB,GAAG,KAAM3B,EAASM,SAAS2B,EAAK,UAClCzB,EAAEmB,GAAG,KAAM3B,EAASM,SAAS2B,EAAK,SAC/BL,EAAK,IAAMA,EAAK,IAClBnB,EAAEY,UAAS,IASmDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KAC/HA,GAER,SAAyCD,GAMxC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,gBAC7CS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAExCP,EAAI,IAAIK,IAAIG,SAsBhB,OArBAiB,MAAQ,EAgBRlC,EAASkB,OAAQiB,QAdjB,SAAiBC,EAAMC,GACtB7B,EAAEY,WAAoB,IAATgB,IAcTJ,OAZL,SAAgBC,EAAMI,GACrB7B,EAAEY,WAAWpB,EAASsC,OAAOL,IAC7BC,SAWIf,WATL,SAAoBlB,EAAOyB,GAC1BlB,EAAEmB,GAAG,EAAGO,OACR1B,EAAEmB,GAAG,KAAM1B,GACRQ,EAAEY,UAAS,IAOVC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KAEpEA,GAER,SAAkCD,GAMjC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,gBAC7CS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAExCP,EAAI,IAAIK,IAAIG,SAChB,SAASsB,EAAetC,EAAOyB,GAC9BlB,EAAEmB,GAAG,EAAG1B,EAAMG,QACdsB,EAAQc,MAAQ,EAChBd,EAAQQ,MAAQ,EAChBR,EAAQP,WAAasB,EACrBzC,EAASkB,MAAMQ,GAGhB,SAASe,EAAgBxC,EAAOyB,GAC/BlB,EAAEmB,GAAG,EAAG1B,EAAMG,QACdsB,EAAQc,MAAQ,EAChBd,EAAQQ,MAAQ,EAChBR,EAAQP,WAAauB,EACrB1C,EAASkB,MAAMQ,GAGhB,SAASgB,EAAezC,EAAOyB,GAC9BlB,EAAEmB,GAAG,EAAG1B,EAAMG,QACdsB,EAAQc,MAAQ,EAChBd,EAAQQ,MAAQ,GAChBR,EAAQP,WAAawB,EACrB3C,EAASkB,MAAMQ,GAGhB,SAASiB,EAAgB1C,EAAOyB,GAC/BlB,EAAEmB,GAAG,EAAG1B,EAAMG,QACdsB,EAAQc,MAAQ,EAChBd,EAAQQ,MAAQ,IAChBR,EAAQP,WAAayB,EACrB5C,EAASkB,MAAMQ,GAGhB,SAASkB,EAAe3C,EAAOyB,GAC9BlB,EAAEmB,GAAG,EAAG1B,EAAMG,QACdsB,EAAQc,MAAQ,EAChBd,EAAQQ,MAAQ,GAChBR,EAAQP,WAAa0B,EACrB7C,EAASkB,MAAMQ,GAGhB,SAASmB,EAAe5C,EAAOyB,GAC9BlB,EAAEmB,GAAG,EAAG1B,EAAMG,QACXK,EAAEY,UAAS,GAYf,OADArB,EAASkB,OAAOC,WARhB,SAAmBlB,EAAOyB,GACzBlB,EAAEmB,GAAG,EAAG1B,EAAMG,QACdsB,EAAQc,MAAQ,EAChBd,EAAQQ,MAAQ,EAChBR,EAAQP,WAAaoB,EACrBvC,EAASkB,MAAMQ,IAGuBJ,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KACtGA,GAGR,SAA8BD,GAM7B,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,gBAC7CS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAExCP,EAAI,IAAIK,IAAIG,SAYhB,OAJAjB,EAASkB,OAASM,OAAQC,IAAK,QAC1BN,WARL,SAAoBlB,EAAOyB,GAC1BlB,EAAEsC,YAAY7C,EAAMG,OAAQ,GAC5B,IAAI2C,EAAQ/C,EAASgD,SAAS/C,EAAM,IACpCO,EAAEY,WAAqB,OAAV2B,GACbvC,EAAEsC,YAAY,OAAQC,GACtBtC,EAAEY,UAAS,IAIPC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KAEpEA,GAER,SAAwCD,GAMtC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,gBAC7CS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAEzCP,EAAI,IAAIK,IAAIG,SAYhB,OAJAjB,EAASkB,OAASM,OAAQC,IAAK,QAC1BN,WARL,SAAoBlB,EAAOyB,GAC1BlB,EAAEsC,YAAY7C,EAAMG,OAAQ,GAC5B,IAAI6C,EAAYjD,EAASkD,mBAAmBjD,EAAM,IAClDO,EAAEY,WAAWrC,KAAKoE,QAAQF,IAC1BzC,EAAEsC,YAAY,MAAOG,EAAU,IAC/BxC,EAAEY,UAAS,IAIPC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KAEpEA,GAER,SAA8BD,GAM7B,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,cAAc,qBAC3DS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAExCP,EAAI,IAAIK,IAAIG,SAShB,OADAjB,EAAS8B,qBAAqBC,SAAU,OAAQC,OAPhD,SAAgBC,GACfzB,EAAEY,WAAoB,OAATa,GACbzB,EAAEmB,GAAG,OAAQ3B,EAASM,SAAS2B,EAAK,QACpCzB,EAAEmB,GAAG,EAAG3B,EAASM,SAAS2B,EAAK,UAC/BzB,EAAEmB,GAAG,EAAG3B,EAASM,SAAS2B,EAAK,SAC/BxB,EAAEY,UAAS,IAEoDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KAC/HA,GAER,SAAgCD,GAM/B,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,cAAc,qBAC3DS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAExCP,EAAI,IAAIK,IAAIG,SAShB,OADSjB,EAAS8B,qBAAqBC,SAAU,MAAOC,OAPxD,SAAgBC,GACfzB,EAAEY,WAAoB,OAATa,GACbzB,EAAEmB,GAAG,MAAO3B,EAASM,SAAS2B,EAAK,QACnCzB,EAAEmB,GAAG,WAAY3B,EAASM,SAAS2B,EAAK,UACxCzB,EAAEmB,GAAG,WAAY3B,EAASM,SAAS2B,EAAK,QACxCxB,EAAEY,UAAS,IAE4DC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KACvIA,GAER,SAAgCD,GAM/B,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,cAAc,qBAC3DS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAExCP,EAAI,IAAIK,IAAIG,SAShB,OADAjB,EAAS8B,qBAAqBC,SAAU,YAAaC,OAPrD,SAAgBC,GACfzB,EAAEY,WAAoB,OAATa,GACbzB,EAAEmB,GAAG,YAAa3B,EAASM,SAAS2B,EAAK,QACzCzB,EAAEmB,GAAG,IAAK3B,EAASM,SAAS2B,EAAK,UACjCzB,EAAEmB,GAAG,IAAK3B,EAASM,SAAS2B,EAAK,cACjCxB,EAAEY,UAAS,IAEyDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KACpIA,GAER,SAAgCD,GAM/B,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,cAAc,qBAC3DS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAExCP,EAAI,IAAIK,IAAIG,SAShB,OADAjB,EAAS8B,qBAAqBC,SAAU,aAAcC,OAPtD,SAAgBC,GACfzB,EAAEY,WAAoB,OAATa,GACbzB,EAAEmB,GAAG,aAAc3B,EAASM,SAAS2B,EAAK,QAC1CzB,EAAEmB,GAAG,GAAI3B,EAASM,SAAS2B,EAAK,UAChCzB,EAAEmB,GAAG,GAAI3B,EAASM,SAAS2B,EAAK,eAChCxB,EAAEY,UAAS,IAE0DC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KACrIA,GAER,SAA+BD,GAM9B,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,cAAc,qBAC3DS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAExCP,EAAI,IAAIK,IAAIG,SAUhB,OADAjB,EAAS8B,qBAAqBC,SAAU,OAAQC,OARhD,SAAgBC,GACfzB,EAAEY,WAAoB,OAATa,GACb,IAAImB,EAAQpD,EAASqD,UAAUpB,EAAK,QACpCzB,EAAEY,WAAWrC,KAAKoE,QAAQC,IAC1B5C,EAAEmB,GAAG,EAAGyB,EAAMhD,QACdI,EAAEmB,GAAG,KAAMyB,EAAM,IACjB3C,EAAEY,UAAS,IAEoDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KAC/HA,GAER,SAA6CD,GAM5C,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,cAAc,qBAC3DS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAExCP,EAAI,IAAIK,IAAIG,SAMhB,OADAjB,EAAS8B,qBAAqBC,SAAU,OAAQC,OAJhD,SAAgBC,GACfzB,EAAEY,WAAoB,OAATa,GACbxB,EAAEY,UAAS,IAEoDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KAC/HA,GAGR,SAAkDD,GAMjD,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,cAAc,qBAC3DS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAExCP,EAAI,IAAIK,IAAIG,SAMhB,OADAjB,EAAS8B,qBAAqBC,SAAU,OAAQC,OAJhD,SAAgBC,GACfzB,EAAEY,WAAoB,OAATa,GACbxB,EAAEY,UAAS,IAEoDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KAC/HA,GAER,SAAkDD,GAMjD,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,cAAc,qBAC3DS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GACxCP,EAAI,IAAIK,IAAIG,SAMhB,OADAjB,EAAS8B,qBAAqBC,SAAU,KAAMC,OAJ9C,SAAgBC,GACfzB,EAAEY,WAAoB,OAATa,GACbxB,EAAEY,UAAS,IAEkDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KAC7HA,GAER,SAAkDD,GAMjD,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,cAAc,qBAC3DS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GACxCP,EAAI,IAAIK,IAAIG,SAMhB,OADAjB,EAAS8B,qBAAqBC,SAAU,SAAUC,OAJlD,SAAgBC,GACfzB,EAAEY,WAAoB,OAATa,GACbxB,EAAEY,UAAS,IAEsDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KACjIA,GAER,SAAqCD,GAMpC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,cAAc,qBAC3DS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAExCP,EAAI,IAAIK,IAAIG,SAehB,OADAjB,EAASkB,OAAQC,WAbjB,SAAmBlB,EAAOyB,GACzBlB,EAAEmB,GAAG,EAAG1B,EAAMG,QACdI,EAAEmB,GAAG3B,EAASsD,YAAYrD,EAAM,IAAK,QACrCO,EAAEmB,GAAG3B,EAASsD,YAAYrD,EAAM,IAAK,UACrCO,EAAEmB,GAAG3B,EAASsD,YAAYrD,EAAM,IAAK,SACrCO,EAAEmB,GAAG3B,EAASsD,YAAYrD,EAAM,IAAK,QACrCO,EAAEmB,GAAG3B,EAASsD,YAAYrD,EAAM,IAAK,OACrCO,EAAEmB,GAAG3B,EAASsD,YAAYrD,EAAM,IAAK,aACrCO,EAAEmB,GAAG3B,EAASsD,YAAYrD,EAAM,IAAK,cACrCQ,EAAEY,UAAS,IAI4BC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KACvGA,GAER,SAA+CD,GAM9C,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,cAAc,qBAC3DS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAExCP,EAAI,IAAIK,IAAIG,SAOb,OADHjB,EAAS8B,qBAAqBC,SAAU,OAAQC,OALhD,SAAgBC,GACfzB,EAAEY,WAAWpB,EAASsC,OAAOL,IAC7BzB,EAAEsC,YAAY,MAAO9C,EAASuD,sBAAsBtB,IACpDxB,EAAEY,UAAS,IAEoDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KAC5HA,GAEX,SAA4BD,GAM3B,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,cAAc,qBAC3DS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAExCP,EAAI,IAAIK,IAAIG,SAUb,OADHjB,EAAS8B,qBAAqBC,SAAU,OAAQC,OARhD,SAAgBC,GACfzB,EAAEY,WAAWpB,EAASsC,OAAOL,IAC7BzB,EAAEY,YAAYpB,EAASsC,YACvB9B,EAAEY,YAAYpB,EAASsC,QAASL,KAAM,iBACtCzB,EAAEY,YAAYpB,EAASsC,OAAO,gBAC9B9B,EAAEY,YAAYpB,EAASsC,QAAQ,iBAC/B7B,EAAEY,UAAS,IAEoDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KAC5HA,GAEX,SAAkCD,GAMjC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,cAAc,qBAC3DS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAExCP,EAAI,IAAIK,IAAIG,SAqBb,OADHjB,EAAS8B,qBAAqBC,SAAU,OAAQC,OAnBhD,SAAgBC,GACfzB,EAAEY,WAAoB,OAATa,GACbzB,EAAEY,WAAWpB,EAASwD,aAAavB,EAAM,QACzCzB,EAAEY,WAAWpB,EAASwD,aAAavB,EAAM,UACzCzB,EAAEY,WAAWpB,EAASwD,aAAavB,EAAM,SACzCzB,EAAEY,YAAYpB,EAASwD,aAAavB,EAAM,SAC1CzB,EAAEY,YAAYpB,EAASwD,aAAavB,EAAM,YAC1CzB,EAAEY,YAAYpB,EAASwD,aAAavB,EAAM,UAG1C,IAAIwB,GAAS,EACb,IACCzD,EAASwD,aAAavB,EAAM,MAC5B,MAAOJ,GACP4B,GAAS,EAEVjD,EAAEY,WAAWqC,GACbhD,EAAEY,UAAS,IAEoDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KAC5HA,GAEX,SAAmCD,GAMlC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,cAAc,qBAC3DS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAExCP,EAAI,IAAIK,IAAIG,SAqBb,OADHjB,EAAS8B,qBAAqBC,SAAU,OAAQC,OAnBhD,SAAgBC,GACfzB,EAAEY,WAAoB,OAATa,GACbzB,EAAEY,WAAWpB,EAAS0D,cAAczB,EAAM,OAAQ,SAClDzB,EAAEY,WAAWpB,EAAS0D,cAAczB,EAAM,QAAS,SACnDzB,EAAEY,WAAWpB,EAAS0D,cAAczB,EAAM,MAAO,SACjDzB,EAAEY,YAAYpB,EAAS0D,cAAczB,EAAM,QAAS,WACpDzB,EAAEY,YAAYpB,EAAS0D,cAAczB,EAAM,OAAQ,YACnDzB,EAAEY,YAAYpB,EAAS0D,cAAczB,EAAM,QAAS,OAGpD,IAAIwB,GAAS,EACb,IACCzD,EAAS0D,cAAczB,EAAM,KAAM,OACnC,MAAOJ,GACP4B,GAAS,EAEVjD,EAAEY,WAAWqC,GACbhD,EAAEY,UAAS,IAEoDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KAC5HA,GAEX,SAAmCD,GAMlC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,cAAc,qBAC3DS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAExCP,EAAI,IAAIK,IAAIG,SAab,OADHjB,EAAS8B,qBAAqBC,SAAU,OAAQC,OAXhD,SAAgBC,GACfzB,EAAEY,WAAoB,OAATa,GACbzB,EAAEY,WAAWpB,EAASsC,OAAOL,IAE7B,IAAI0B,EAAa3D,EAAS4D,cAAc3B,GACxCzB,EAAEmB,GAAG,EAAGgC,EAAWvD,QACnB,IAAI,IAAIC,EAAI,EAAGA,EAAIsD,EAAWvD,OAAQC,IACrCG,EAAEY,WAA8B,SAAlBuC,EAAWtD,IAAmC,UAAlBsD,EAAWtD,IAAoC,QAAlBsD,EAAWtD,IAEnFI,EAAEY,UAAS,IAEoDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KAC5HA,GAGX,SAA2CD,GAM1C,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,cAAc,qBAC3DS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAExCP,EAAI,IAAIK,IAAIG,SAcb,OADHjB,EAAS8B,qBAAqBC,SAAU,SAAUC,OAZlD,SAAgBC,GAEfzB,EAAEY,WAAoB,OAATa,GACbzB,EAAEY,WAAWpB,EAASsC,OAAOL,IAE7B,IAAI0B,EAAa3D,EAAS4D,cAAc3B,GACxCzB,EAAEY,WAAiC,IAAtBuC,EAAWvD,QACxBI,EAAEY,WAA6B,QAAlBuC,EAAW,IACxBnD,EAAEY,WAA6B,UAAlBuC,EAAW,IACxBnD,EAAEY,WAA6B,WAAlBuC,EAAW,IACxBlD,EAAEY,UAAS,IAEsDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KAC9HA,GAGX,SAAiCD,GAMhC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,cAAc,qBAG3DsE,EAFW,IAAI3E,MAAMC,KAAKG,cAAc0B,GAEpB8C,cACpB5B,EAAQ,EACZ,IAAI7B,KAAKwD,EACRrD,EAAEY,WAAkB,uBAANf,GAAoC,2BAANA,GAC5C6B,IAED1B,EAAEY,WAAqB,IAAVc,IAEd,SAAyC1B,GAMxC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,cAAc,qBAC3DS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAExCP,EAAI,IAAIK,IAAIG,SAShB,OADAjB,EAASkB,OAAOM,OAAQC,IAAK,UAAWN,WAPxC,SAAmBlB,EAAOyB,GACzBlB,EAAEmB,GAAG,EAAG1B,EAAMG,QAEdI,EAAEY,WAAWlC,MAAMC,KAAKC,MAAMC,OAAOC,cAAcS,YAAYC,EAAUC,EAAO,OAD7D,SAAU,WAE7BQ,EAAEY,UAAS,IAGmDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KAC9HA,GAER,SAAyCD,GAMxC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,cAAc,uBAC3DS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAExCP,EAAI,IAAIK,IAAIG,SAShB,OADAjB,EAASkB,OAAOM,OAAQC,IAAK,QAASN,WAPtC,SAAmBlB,EAAOyB,GACzBlB,EAAEY,WAA4B,IAAjBnB,EAAMG,QAEnBI,EAAEY,WAAWlC,MAAMC,KAAKC,MAAMC,OAAOC,cAAcS,YAAYC,EAAUC,EAAO,SAD7D,IAAK,cAExBQ,EAAEY,UAAS,IAGiDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KAC5HA,GAER,SAAyCD,GAMxC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,cAAc,uBAC3DS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAExCP,EAAI,IAAIK,IAAIG,SAWhB,OADAjB,EAASkB,OAAOM,OAAQuC,MAAO,MAAO5C,WATtC,SAAmBlB,EAAOyB,GACzBlB,EAAEmB,GAAG,EAAG1B,EAAMG,QACdI,EAAEY,WAAoD,OAAzCpB,EAASM,SAASL,EAAM,GAAI,UACzCO,EAAEY,WAAkD,WAAvCpB,EAASM,SAASL,EAAM,GAAI,QACzCO,EAAEY,WAAoD,MAAzCpB,EAASM,SAASL,EAAM,GAAI,UACzCO,EAAEY,WAAkD,SAAvCpB,EAASM,SAASL,EAAM,GAAI,QACzCQ,EAAEY,UAAS,IAGiDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KAC5HA,GAER,SAAwDD,GAMvD,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,cAAc,uBAC3DS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAExCP,EAAI,IAAIK,IAAIG,SAQhB,OADAjB,EAASkB,OAAOM,OAAQC,IAAK,SAAUuC,cAAeC,YAAY,GAAO9C,WANzE,SAAmBlB,EAAOyB,GACzBlB,EAAEmB,GAAG,EAAG1B,EAAMG,QACdI,EAAEY,WAAoD,aAAzCpB,EAASM,SAASL,EAAM,GAAI,UACzCQ,EAAEY,UAAS,IAGoFC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KAC/JA,GAER,SAAsDD,GAMrD,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,cAAc,uBAC3DS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAExCP,EAAI,IAAIK,IAAIG,SAOhB,OADAjB,EAASkB,OAAOM,OAAQuC,MAAO,aAAcC,cAAeC,YAAY,GAAQ9C,WALhF,SAAmBlB,EAAOyB,GACzBlB,EAAEmB,GAAG,EAAG1B,EAAMG,QACdK,EAAEY,UAAS,IAG2FC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KACtKA,GAER,SAA0CD,GAMzC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,cAAc,uBAC3DS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAExCP,EAAI,IAAIK,IAAIG,SAWhB,OADAjB,EAASkB,OAAOgD,OADOhE,UAAW,QACIiB,WATtC,SAAmBlB,EAAOyB,GAGzBlB,EAAEmB,GAAG,EAAG1B,EAAMG,QACdI,EAAEY,WAAWlC,MAAMC,KAAKC,MAAMC,OAAOC,cAAcS,YAAYC,EAAUC,EAAO,OAF3D,MAAO,YAAa,QAAS,OAAQ,SAAU,aAAc,UAGlFQ,EAAEY,UAAS,IAIiDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KAC5HA,GAER,SAAoDD,GAMnD,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,cAAc,uBAC3DS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAExCP,EAAI,IAAIK,IAAIG,SAWhB,OADAjB,EAASkB,OAAOgD,OADOhE,UAAW,MAAOiE,YAAY,IACfhD,WATtC,SAAmBlB,EAAOyB,GAGzBlB,EAAEmB,GAAG,EAAG1B,EAAMG,QACdI,EAAEY,WAAWlC,MAAMC,KAAKC,MAAMC,OAAOC,cAAcS,YAAYC,EAAUC,EAAO,OAF3D,OAAQ,aAAc,SAAU,OAAQ,QAAS,YAAa,SAGnFQ,EAAEY,UAAS,IAIiDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KAC5HA,GAER,SAAwCD,GAMvC,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,cAAc,uBAC3DS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAExCP,EAAI,IAAIK,IAAIG,SAuBhB,OADAjB,EAASkB,OAAOgD,OADQhE,UAAW,QAAUA,UAAW,QAASiE,YAAY,IACvChD,WArBtC,SAAmBlB,EAAOyB,GAczBlB,EAAEmB,GAAG,EAAG1B,EAAMG,QACdI,EAAEY,WAAWlC,MAAMC,KAAKC,MAAMC,OAAOC,cAAcS,YAAYC,EAAUC,EAAO,OAH1D,MAAO,YAAa,QAAS,OAAQ,SAAU,aAAc,UAInFO,EAAEY,WAAWlC,MAAMC,KAAKC,MAAMC,OAAOC,cAAcS,YAAYC,EAAUC,EAAO,SAH1D,WAAY,MAAO,WAAY,IAAK,KAAM,KAAM,UAItEQ,EAAEY,UAAS,IAIiDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KAC5HA,GAER,SAAyDD,GAMxD,IAAIQ,EAAO9B,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,cAAc,qBAC3DS,EAAW,IAAId,MAAMC,KAAKG,cAAc0B,GAE5ChB,EAASoE,iBACTpE,EAASoE,cAAmB,IAAI,SAASC,EAAEC,GAC1C,IAAIC,EAAM,EAEV,SAASC,EAASC,GACjB,QAAmB,IAATA,EAEV,OAAOA,EAAKC,MAAMD,EAAKrE,OAAO,GAE/B,IAAIuE,EAAYH,EAASH,GACrBO,EAAYJ,EAASF,GAMzB,OALGK,EAAYC,QAAkC,IAAdD,EAClCJ,EAAM,GACEI,EAAYC,QAAkC,IAAdA,KACxCL,GAAO,GAEDA,GAGR,IAEI9D,EAAI,IAAIK,IAAIG,SAiBhB,OADAjB,EAASkB,OAAOgD,OAlBOhE,UAAW,MAAOiE,YAAY,IAASjE,UAAW,QAASiE,YAAY,IAkBxDhD,WAftC,SAAmBlB,EAAO4E,GACzB,IACIC,GAAiB,MAAO,OAAQ,aAAc,YAAa,OAAQ,QAAS,UAChFtE,EAAEY,WAA4B,IAAjBnB,EAAMG,QAEnB,IADA,IAAIqD,GAAS,EACLpD,EAAI,EAAGA,EAAIJ,EAAMG,OAAQC,IAChC,GAAKL,EAASsD,YAAYrD,EAAMI,MAAQyE,EAAazE,GAAI,CACxDoD,GAAO,EACP,MAGFjD,EAAEY,WAAWqC,GACbhD,EAAEY,UAAS,IAGiDC,QAASvC,KAAKwC,QAAQrC,MAAMC,KAAKC,MAAMC,OAAOC,cAAciB,MAAOC,EAAGC,KAC5HA,GAER,SAAyCD,GAMxC,IAAIuE,EAAY,IAAI7F,MAAMC,KAAKG,cAAcJ,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,cAAc,sBAC7FyF,EAAU,IAAIjG,KAAKI,KAAK8F,IAAIC,KAC5BzB,GAAS,EAEb,IAAIpD,KAAK2E,EAAQ,CAChB,GAA8B,MAA3B3E,EAAER,WAAWsF,OAAO,GAItB,GAAqB,mBAFRH,EAAQ3E,GAEW,CAC/BM,QAAQC,IAAI,yBAA2BP,EAAI,KAC3C,IAAI+E,EAAkBL,EAAU1E,GAChC,GAAgC,mBAApB+E,EAAgC,CAC3CzE,QAAQC,IAAI,2BAA6BP,EAAI,mBAAqB+E,GAClE3B,GAAS,EACT,QAKJjD,EAAEY,WAAWqC,IAEd,SAA6CjD,GAM5C,IAAIuE,EAAY,IAAI7F,MAAMC,KAAKG,cAAcJ,MAAMC,KAAKC,MAAMC,OAAOC,cAAcC,cAAc,sBAC7F8F,EAAc,IAAItG,KAAKI,KAAK8F,IAAIK,SAChC7B,GAAS,EAEb,IAAIpD,KAAKgF,EAAY,CACpB,GAA8B,MAA3BhF,EAAER,WAAWsF,OAAO,GAItB,GAAqB,mBAFRE,EAAYhF,GAKxB,GAFAM,QAAQC,IAAI,yBAA2BP,EAAI,KAEX,mBADV0E,EAAU1E,GACY,CAC3CoD,GAAS,EACT,OAKJjD,EAAEY,WAAWqC","file":"../../../../data/tests/stores/KeyValueStore.js","sourcesContent":["dojo.provide(\"dojox.data.tests.stores.KeyValueStore\");\r\ndojo.require(\"dojox.data.KeyValueStore\");\r\ndojo.require(\"dojo.data.api.Read\");\r\ndojo.require(\"dojo.data.api.Identity\");\r\n\r\ndojox.data.tests.stores.KeyValueStore.getDatasource = function(type){\r\n\t// summary:\r\n\t//\t\tA simple helper function for getting the sample data used in each of the tests.\r\n\t// description:\r\n\t//\t\tA simple helper function for getting the sample data used in each of the tests.\r\n\r\n\tvar dataSource = {};\r\n\tvar filepath = \"stores/properties.js\";\r\n\tif(dojo.isBrowser){\r\n\t\tdataSource.url = require.toUrl(\"dojox/data/tests/\" + filepath).toString();\r\n\t}else{\r\n\t\t// When running tests in Rhino, xhrGet is not available,\r\n\t\t// so we have the file data in the code below.\r\n\t\tvar keyData = \"/*[\";\r\n\t\t// Properties of December 1, 2007\r\n\t\tkeyData += '{ \"year\": \"2007\" },';\r\n\t\tkeyData += '{ \"nmonth\": \"12\" },';\r\n\t\tkeyData += '{ \"month\": \"December\" },';\r\n\t\tkeyData += '{ \"nday\": \"1\" },';\r\n\t\tkeyData += '{ \"day\": \"Saturday\" },';\r\n\t\tkeyData += '{ \"dayOfYear\": \"335\" },';\r\n\t\tkeyData += '{ \"weekOfYear\": \"48\" }';\r\n\t\tkeyData += ']*/';\r\n\t\tdataSource.data = keyData;\r\n\t}\r\n\treturn dataSource; //Object\r\n};\r\n\r\ndojox.data.tests.stores.KeyValueStore.verifyItems = function(keyStore, items, attribute, compareArray){\r\n\t// summary:\r\n\t//\t\tA helper function for validating that the items array is ordered\r\n\t//\t\tthe same as the compareArray\r\n\tif(items.length != compareArray.length){ return false; }\r\n\tfor(var i = 0; i < items.length; i++){\r\n\t\tif(!(keyStore.getValue(items[i], attribute) === compareArray[i])){\r\n\t\t\treturn false; //Boolean\r\n\t\t}\r\n\t}\r\n\treturn true; //Boolean\r\n};\r\n\r\ndojox.data.tests.stores.KeyValueStore.error = function(t, d, errData){\r\n\t// summary:\r\n\t//\t\tThe error callback function to be used for all of the tests.\r\n\tfor (i in errData) {\r\n\t\tconsole.log(errData[i]);\r\n\t}\r\n\td.errback(errData);\r\n};\r\n\r\ndoh.register(\"dojox.data.tests.stores.KeyValueStore\",\r\n\t[\r\n\t\tfunction testReadAPI_fetch_all(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of a basic fetch on KeyValueStore.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of a basic fetch on KeyValueStore.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource(\"stores/properties.js\");\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completedAll(items){\r\n\t\t\t\tt.assertTrue((items.length === 7));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\r\n\t\t\t//Get everything...\r\n\t\t\tkeyStore.fetch({ onComplete: completedAll, onError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_all_withEmptyStringField(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of a basic fetch on KeyValueStore.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of a basic fetch on KeyValueStore.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource();\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completedAll(items){\r\n\t\t\t\tt.assertTrue((items.length === 7));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\r\n\t\t\t//Get everything...\r\n\t\t\tkeyStore.fetch({ onComplete: completedAll, onError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_one(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of a basic fetch on KeyValueStore of a single item.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of a basic fetch on KeyValueStore of a single item.\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource();\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.is(1, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tkeyStore.fetch({ \tquery: {key: \"year\"},\r\n\t\t\t\t\t\t\t\tonComplete: onComplete,\r\n\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)\r\n\t\t\t\t\t\t\t});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_Multiple(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of a basic fetch on KeyValueStore of a single item.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of a basic fetch on KeyValueStore of a single item.\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource();\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\r\n\t\t\tvar done = [false, false];\r\n\r\n\t\t\tfunction onCompleteOne(items, request){\r\n\t\t\t\tdone[0] = true;\r\n\t\t\t\tt.is(1, items.length);\r\n\t\t\t\tif(done[0] && done[1]){\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfunction onCompleteTwo(items, request){\r\n\t\t\t\tdone[1] = true;\r\n\t\t\t\tt.is(1, items.length);\r\n\t\t\t\tif(done[0] && done[1]){\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tkeyStore.fetch({ \tquery: {key: \"year\"},\r\n\t\t\t\t\t\t\t\t\tonComplete: onCompleteOne,\r\n\t\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\tkeyStore.fetch({ \tquery: {key: \"month\"},\r\n\t\t\t\t\t\t\t\t\tonComplete: onCompleteTwo,\r\n\t\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tcatch(e)\r\n\t\t\t{\r\n\t\t\t\tfor (i in e) {\r\n\t\t\t\t\tconsole.log(e[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_MultipleMixed(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of a basic fetch on KeyValueStore of a single item.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of a basic fetch on KeyValueStore of a single item.\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource();\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\r\n\t\t\tvar done = [false, false];\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tdone[0] = true;\r\n\t\t\t\tt.is(1, items.length);\r\n\t\t\t\tif(done[0] && done[1]){\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tdone[1] = true;\r\n\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\tt.is('year', keyStore.getValue(item,\"key\"));\r\n\t\t\t\tt.is(2007, keyStore.getValue(item,\"value\"));\r\n\t\t\t\tt.is(2007, keyStore.getValue(item,\"year\"));\r\n\t\t\t\tif(done[0] && done[1]){\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tkeyStore.fetch({ \tquery: {key: \"day\"},\r\n\t\t\t\t\t\t\t\tonComplete: onComplete,\r\n\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\r\n\t\t\tkeyStore.fetchItemByIdentity({identity: \"year\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_all_streaming(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of a basic fetch on KeyValueStore.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of a basic fetch on KeyValueStore.\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource();\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tcount = 0;\r\n\r\n\t\t\tfunction onBegin(size, requestObj){\r\n\t\t\t\tt.assertTrue(size === 7);\r\n\t\t\t}\r\n\t\t\tfunction onItem(item, requestObj){\r\n\t\t\t\tt.assertTrue(keyStore.isItem(item));\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.is(7, count);\r\n\t\t\t\tt.is(null, items);\r\n\t\t\t    d.callback(true);\r\n\t\t\t}\r\n\r\n\t\t\t//Get everything...\r\n\t\t\tkeyStore.fetch({\tonBegin: onBegin,\r\n\t\t\t\t\t\t\t\tonItem: onItem,\r\n\t\t\t\t\t\t\t\tonComplete: onComplete,\r\n\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)\r\n\t\t\t\t\t\t\t});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_paging(t){\r\n\t\t\t // summary:\r\n\t\t\t //\t\tTest of multiple fetches on a single result.  Paging, if you will.\r\n\t\t\t // description:\r\n\t\t\t //\t\tTest of multiple fetches on a single result.  Paging, if you will.\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource();\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction dumpFirstFetch(items, request){\r\n\t\t\t\tt.is(5, items.length);\r\n\t\t\t\trequest.start = 3;\r\n\t\t\t\trequest.count = 1;\r\n\t\t\t\trequest.onComplete = dumpSecondFetch;\r\n\t\t\t\tkeyStore.fetch(request);\r\n\t\t\t}\r\n\r\n\t\t\tfunction dumpSecondFetch(items, request){\r\n\t\t\t\tt.is(1, items.length);\r\n\t\t\t\trequest.start = 0;\r\n\t\t\t\trequest.count = 5;\r\n\t\t\t\trequest.onComplete = dumpThirdFetch;\r\n\t\t\t\tkeyStore.fetch(request);\r\n\t\t\t}\r\n\r\n\t\t\tfunction dumpThirdFetch(items, request){\r\n\t\t\t\tt.is(5, items.length);\r\n\t\t\t\trequest.start = 2;\r\n\t\t\t\trequest.count = 20;\r\n\t\t\t\trequest.onComplete = dumpFourthFetch;\r\n\t\t\t\tkeyStore.fetch(request);\r\n\t\t\t}\r\n\r\n\t\t\tfunction dumpFourthFetch(items, request){\r\n\t\t\t\tt.is(5, items.length);\r\n\t\t\t\trequest.start = 9;\r\n\t\t\t\trequest.count = 100;\r\n\t\t\t\trequest.onComplete = dumpFifthFetch;\r\n\t\t\t\tkeyStore.fetch(request);\r\n\t\t\t}\r\n\r\n\t\t\tfunction dumpFifthFetch(items, request){\r\n\t\t\t\tt.is(0, items.length);\r\n\t\t\t\trequest.start = 2;\r\n\t\t\t\trequest.count = 20;\r\n\t\t\t\trequest.onComplete = dumpSixthFetch;\r\n\t\t\t\tkeyStore.fetch(request);\r\n\t\t\t}\r\n\r\n\t\t\tfunction dumpSixthFetch(items, request){\r\n\t\t\t\tt.is(5, items.length);\r\n\t\t\t    d.callback(true);\r\n\t\t\t}\r\n\r\n\t\t\tfunction completed(items, request){\r\n\t\t\t\tt.is(7, items.length);\r\n\t\t\t\trequest.start = 1;\r\n\t\t\t\trequest.count = 5;\r\n\t\t\t\trequest.onComplete = dumpFirstFetch;\r\n\t\t\t\tkeyStore.fetch(request);\r\n\t\t\t}\r\n\r\n\t\t\tkeyStore.fetch({onComplete: completed, onError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\t\r\n\t\tfunction testReadAPI_getLabel(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getLabel function against a store set that has a label defined.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getLabel function against a store set that has a label defined.\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource();\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(items.length, 1);\r\n\t\t\t\tvar label = keyStore.getLabel(items[0]);\r\n\t\t\t\tt.assertTrue(label !== null);\r\n\t\t\t\tt.assertEqual(\"year\", label);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tkeyStore.fetch({ \tquery: {key: \"year\"},\r\n\t\t\t\t\t\t\t\tonComplete: onComplete,\r\n\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)\r\n\t\t\t\t\t\t\t});\r\n\t\t\treturn d;\r\n\t\t},\r\n\t\tfunction testReadAPI_getLabelAttributes(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getLabelAttributes function against a store set that has a label defined.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getLabelAttributes function against a store set that has a label defined.\r\n\r\n\t\t\t var args = dojox.data.tests.stores.KeyValueStore.getDatasource();\r\n\t\t\t var keyStore = new dojox.data.KeyValueStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(items.length, 1);\r\n\t\t\t\tvar labelList = keyStore.getLabelAttributes(items[0]);\r\n\t\t\t\tt.assertTrue(dojo.isArray(labelList));\r\n\t\t\t\tt.assertEqual(\"key\", labelList[0]);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tkeyStore.fetch({ \tquery: {key: \"year\"},\r\n\t\t\t\t\t\t\t\tonComplete: onComplete,\r\n\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)\r\n\t\t\t\t\t\t\t});\r\n\t\t\treturn d;\r\n\t\t},\r\n\t\tfunction testReadAPI_getValue(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getValue function of the store.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getValue function of the store.\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\tt.is(\"nday\", keyStore.getValue(item,\"key\"));\r\n\t\t\t\tt.is(1, keyStore.getValue(item,\"value\"));\r\n\t\t\t\tt.is(1, keyStore.getValue(item,\"nday\"));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tkeyStore.fetchItemByIdentity({identity: \"nday\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)});\r\n\t\t\treturn d;\r\n\t\t},\r\n\t\tfunction testReadAPI_getValue_2(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getValue function of the store.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getValue function of the store.\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\tt.is(\"day\", keyStore.getValue(item,\"key\"));\r\n\t\t\t\tt.is(\"Saturday\", keyStore.getValue(item,\"value\"));\r\n\t\t\t\tt.is(\"Saturday\", keyStore.getValue(item,\"day\"));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n            keyStore.fetchItemByIdentity({identity: \"day\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)});\r\n\t\t\treturn d;\r\n\t\t},\r\n\t\tfunction testReadAPI_getValue_3(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getValue function of the store.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getValue function of the store.\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\tt.is(\"dayOfYear\", keyStore.getValue(item,\"key\"));\r\n\t\t\t\tt.is(335, keyStore.getValue(item,\"value\"));\r\n\t\t\t\tt.is(335, keyStore.getValue(item,\"dayOfYear\"));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tkeyStore.fetchItemByIdentity({identity: \"dayOfYear\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)});\r\n\t\t\treturn d;\r\n\t\t},\r\n\t\tfunction testReadAPI_getValue_4(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getValue function of the store.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getValue function of the store.\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\tt.is(\"weekOfYear\", keyStore.getValue(item,\"key\"));\r\n\t\t\t\tt.is(48, keyStore.getValue(item,\"value\"));\r\n\t\t\t\tt.is(48, keyStore.getValue(item,\"weekOfYear\"));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tkeyStore.fetchItemByIdentity({identity: \"weekOfYear\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)});\r\n\t\t\treturn d;\r\n\t\t},\r\n\t\tfunction testReadAPI_getValues(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getValues function of the store.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getValues function of the store.\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\tvar names = keyStore.getValues(item,\"year\");\r\n\t\t\t\tt.assertTrue(dojo.isArray(names));\r\n\t\t\t\tt.is(1, names.length);\r\n\t\t\t\tt.is(2007, names[0]);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tkeyStore.fetchItemByIdentity({identity: \"year\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)});\r\n\t\t\treturn d;\r\n\t\t},\r\n\t\tfunction testIdentityAPI_fetchItemByIdentity(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity function of the store.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity function of the store.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tkeyStore.fetchItemByIdentity({identity: \"year\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)});\r\n\t\t\treturn d;\r\n\t\t},\r\n\r\n\t\tfunction testIdentityAPI_fetchItemByIdentity_bad1(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity function of the store.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity function of the store.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tt.assertTrue(item === null);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tkeyStore.fetchItemByIdentity({identity: \"y3ar\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)});\r\n\t\t\treturn d;\r\n\t\t},\r\n\t\tfunction testIdentityAPI_fetchItemByIdentity_bad2(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity function of the store.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity function of the store.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tt.assertTrue(item === null);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tkeyStore.fetchItemByIdentity({identity: \"-1\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)});\r\n\t\t\treturn d;\r\n\t\t},\r\n\t\tfunction testIdentityAPI_fetchItemByIdentity_bad3(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity function of the store.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity function of the store.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tt.assertTrue(item === null);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tkeyStore.fetchItemByIdentity({identity: \"999999\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)});\r\n\t\t\treturn d;\r\n\t\t},\r\n\t\tfunction testIdentityAPI_getIdentity(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity function of the store.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity function of the store.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completed(items, request){\r\n\t\t\t\tt.is(7, items.length);\r\n\t\t\t\tt.is(keyStore.getIdentity(items[0]), 'year');\r\n\t\t\t\tt.is(keyStore.getIdentity(items[1]), 'nmonth');\r\n\t\t\t\tt.is(keyStore.getIdentity(items[2]), 'month');\r\n\t\t\t\tt.is(keyStore.getIdentity(items[3]), 'nday');\r\n\t\t\t\tt.is(keyStore.getIdentity(items[4]), 'day');\r\n\t\t\t\tt.is(keyStore.getIdentity(items[5]), 'dayOfYear');\r\n\t\t\t\tt.is(keyStore.getIdentity(items[6]), 'weekOfYear');\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//Get everything...\r\n\t\t\tkeyStore.fetch({ onComplete: completed, onError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testIdentityAPI_getIdentityAttributes(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getIdentityAttributes\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the fetchItemByIdentity function of the store.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tt.assertTrue(keyStore.isItem(item));\r\n\t\t\t\tt.assertEqual(\"key\", keyStore.getIdentityAttributes(item));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tkeyStore.fetchItemByIdentity({identity: \"year\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)});\r\n\t\t   \treturn d;\r\n\t\t},\r\n\t\tfunction testReadAPI_isItem(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the isItem function of the store\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the isItem function of the store\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tt.assertTrue(keyStore.isItem(item));\r\n\t\t\t\tt.assertTrue(!keyStore.isItem({}));\r\n\t\t\t\tt.assertTrue(!keyStore.isItem({ item: \"not an item\" }));\r\n\t\t\t\tt.assertTrue(!keyStore.isItem(\"not an item\"));\r\n\t\t\t\tt.assertTrue(!keyStore.isItem([\"not an item\"]));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tkeyStore.fetchItemByIdentity({identity: \"year\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)});\r\n\t\t   \treturn d;\r\n\t\t},\r\n\t\tfunction testReadAPI_hasAttribute(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the hasAttribute function of the store\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the hasAttribute function of the store\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\tt.assertTrue(keyStore.hasAttribute(item, \"key\"));\r\n\t\t\t\tt.assertTrue(keyStore.hasAttribute(item, \"value\"));\r\n\t\t\t\tt.assertTrue(keyStore.hasAttribute(item, \"year\"));\r\n\t\t\t\tt.assertTrue(!keyStore.hasAttribute(item, \"Year\"));\r\n\t\t\t\tt.assertTrue(!keyStore.hasAttribute(item, \"Nothing\"));\r\n\t\t\t\tt.assertTrue(!keyStore.hasAttribute(item, \"Title\"));\r\n\r\n\t\t\t\t//Test that null attributes throw an exception\r\n\t\t\t\tvar passed = false;\r\n\t\t\t\ttry{\r\n\t\t\t\t\tkeyStore.hasAttribute(item, null);\r\n\t\t\t\t}catch (e){\r\n\t\t\t\t\tpassed = true;\r\n\t\t\t\t}\r\n\t\t\t\tt.assertTrue(passed);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tkeyStore.fetchItemByIdentity({identity: \"year\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)});\r\n\t\t   \treturn d;\r\n\t\t},\r\n\t\tfunction testReadAPI_containsValue(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the containsValue function of the store\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the containsValue function of the store\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n \t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\tt.assertTrue(keyStore.containsValue(item, \"year\", \"2007\"));\r\n\t\t\t\tt.assertTrue(keyStore.containsValue(item, \"value\", \"2007\"));\r\n\t\t\t\tt.assertTrue(keyStore.containsValue(item, \"key\", \"year\"));\r\n\t\t\t\tt.assertTrue(!keyStore.containsValue(item, \"Title\", \"Alien2\"));\r\n\t\t\t\tt.assertTrue(!keyStore.containsValue(item, \"Year\", \"1979   \"));\r\n\t\t\t\tt.assertTrue(!keyStore.containsValue(item, \"Title\", null));\r\n\r\n\t\t\t\t//Test that null attributes throw an exception\r\n\t\t\t\tvar passed = false;\r\n\t\t\t\ttry{\r\n\t\t\t\t\tkeyStore.containsValue(item, null, \"foo\");\r\n\t\t\t\t}catch (e){\r\n\t\t\t\t\tpassed = true;\r\n\t\t\t\t}\r\n\t\t\t\tt.assertTrue(passed);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tkeyStore.fetchItemByIdentity({identity: \"year\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)});\r\n\t\t   \treturn d;\r\n\t\t},\r\n\t\tfunction testReadAPI_getAttributes(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getAttributes function of the store\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getAttributes function of the store\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\tt.assertTrue(keyStore.isItem(item));\r\n\r\n\t\t\t\tvar attributes = keyStore.getAttributes(item);\r\n\t\t\t\tt.is(3, attributes.length);\r\n\t\t\t\tfor(var i = 0; i < attributes.length; i++){\r\n\t\t\t\t\tt.assertTrue((attributes[i] === \"year\" || attributes[i] === \"value\" || attributes[i] === \"key\"));\r\n\t\t\t\t}\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tkeyStore.fetchItemByIdentity({identity: \"year\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)});\r\n\t\t   \treturn d;\r\n\t\t},\r\n\r\n\t\tfunction testReadAPI_getAttributes_onlyTwo(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getAttributes function of the store\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getAttributes function of the store\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item){\r\n\t\t\t\t// Test an item that does not have all of the attributes\r\n\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\tt.assertTrue(keyStore.isItem(item));\r\n\r\n\t\t\t\tvar attributes = keyStore.getAttributes(item);\r\n\t\t\t\tt.assertTrue(attributes.length === 3);\r\n\t\t\t\tt.assertTrue(attributes[0] === \"key\");\r\n\t\t\t\tt.assertTrue(attributes[1] === \"value\");\r\n\t\t\t\tt.assertTrue(attributes[2] === \"nmonth\");\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tkeyStore.fetchItemByIdentity({identity: \"nmonth\", onItem: onItem, onError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)});\r\n\t\t   \treturn d;\r\n\t\t},\r\n\r\n\t\tfunction testReadAPI_getFeatures(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getFeatures function of the store\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getFeatures function of the store\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\r\n\t\t\tvar features = keyStore.getFeatures();\r\n\t\t\tvar count = 0;\r\n\t\t\tfor(i in features){\r\n\t\t\t\tt.assertTrue((i === \"dojo.data.api.Read\" || i === \"dojo.data.api.Identity\"));\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t\tt.assertTrue(count === 2);\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_patternMatch0(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to test pattern matching of everything starting with lowercase e\r\n\t\t\t// description:\r\n\t\t\t//\t\tFunction to test pattern matching of everything starting with lowercase e\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completed(items, request){\r\n\t\t\t\tt.is(2, items.length);\r\n\t\t\t\tvar valueArray = [ \"nmonth\", \"month\"];\r\n\t\t\t\tt.assertTrue(dojox.data.tests.stores.KeyValueStore.verifyItems(keyStore, items, \"key\", valueArray));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tkeyStore.fetch({query: {key: \"*month\"}, onComplete: completed, onError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_patternMatch1(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to test pattern matching of everything with $ in it.\r\n\t\t\t// description:\r\n\t\t\t//\t\tFunction to test pattern matching of everything with $ in it.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource(\"stores/patterns.csv\");\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completed(items, request){\r\n\t\t\t\tt.assertTrue(items.length === 2);\r\n\t\t\t\tvar valueArray = [ \"1\", \"Saturday\"];\r\n\t\t\t\tt.assertTrue(dojox.data.tests.stores.KeyValueStore.verifyItems(keyStore, items, \"value\", valueArray));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tkeyStore.fetch({query: {key: \"*day\"}, onComplete: completed, onError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_patternMatch2(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to test exact pattern match\r\n\t\t\t// description:\r\n\t\t\t//\t\tFunction to test exact pattern match\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource(\"stores/patterns.csv\");\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completed(items, request){\r\n\t\t\t\tt.is(2, items.length);\r\n\t\t\t\tt.assertTrue(keyStore.getValue(items[0], \"value\") === \"12\");\r\n\t\t\t\tt.assertTrue(keyStore.getValue(items[0], \"key\") === \"nmonth\");\r\n\t\t\t\tt.assertTrue(keyStore.getValue(items[1], \"value\") === \"1\");\r\n\t\t\t\tt.assertTrue(keyStore.getValue(items[1], \"key\") === \"nday\");\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tkeyStore.fetch({query: {value: \"1*\"}, onComplete: completed, onError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_patternMatch_caseInsensitive(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to test exact pattern match with case insensitivity set.\r\n\t\t\t// description:\r\n\t\t\t//\t\tFunction to test exact pattern match with case insensitivity set.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource(\"stores/patterns.csv\");\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completed(items, request){\r\n\t\t\t\tt.is(1, items.length);\r\n\t\t\t\tt.assertTrue(keyStore.getValue(items[0], \"value\") === \"December\");\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tkeyStore.fetch({query: {key: \"MONth\"}, queryOptions: {ignoreCase: true}, onComplete: completed, onError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_patternMatch_caseSensitive(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to test exact pattern match with case insensitivity set.\r\n\t\t\t// description:\r\n\t\t\t//\t\tFunction to test exact pattern match with case insensitivity set.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource(\"stores/patterns.csv\");\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completed(items, request){\r\n\t\t\t\tt.is(0, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tkeyStore.fetch({query: {value: \"DECEMberO\"}, queryOptions: {ignoreCase: false}, onComplete: completed, onError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_sortAlphabetic(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to test sorting alphabetic ordering.\r\n\t\t\t// description:\r\n\t\t\t//\t\tFunction to test sorting alphabetic ordering.\r\n\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource(\"stores/patterns.csv\");\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completed(items, request){\r\n\t\t\t\t//Output should be in this order...\r\n\t\t\t\tvar orderedArray = [ \"day\", \"dayOfYear\", \"month\", \"nday\", \"nmonth\", \"weekOfYear\", \"year\" ];\r\n\t\t\t\tt.is(7, items.length);\r\n\t\t\t\tt.assertTrue(dojox.data.tests.stores.KeyValueStore.verifyItems(keyStore, items, \"key\", orderedArray));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar sortAttributes = [{attribute: \"key\"}];\r\n\t\t\tkeyStore.fetch({sort: sortAttributes, onComplete: completed, onError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_sortAlphabeticDescending(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to test sorting alphabetic ordering in descending mode.\r\n\t\t\t// description:\r\n\t\t\t//\t\tFunction to test sorting alphabetic ordering in descending mode.\r\n\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource(\"stores/patterns.csv\");\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completed(items, request){\r\n\t\t\t\t//Output should be in this order...\r\n\t\t\t\tvar orderedArray = [ \"year\", \"weekOfYear\", \"nmonth\", \"nday\", \"month\", \"dayOfYear\", \"day\" ];\r\n\t\t\t\tt.is(7, items.length);\r\n\t\t\t\tt.assertTrue(dojox.data.tests.stores.KeyValueStore.verifyItems(keyStore, items, \"key\", orderedArray));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar sortAttributes = [{attribute: \"key\", descending: true}];\r\n\t\t\tkeyStore.fetch({sort: sortAttributes, onComplete: completed, onError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_sortMultiple(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to test sorting on multiple attributes.\r\n\t\t\t// description:\r\n\t\t\t//\t\tFunction to test sorting on multiple attributes.\r\n\t\t\t\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource(\"stores/patterns.csv\");\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completed(items, request){\r\n\t\t\t\tvar orderedArray1 = [\t\"123abc\",\r\n\t\t\t\t\t\t\t\t\t\t\"123abc\",\r\n\t\t\t\t\t\t\t\t\t\t\"123abc\",\r\n\t\t\t\t\t\t\t\t\t\t\"123abcdefg\",\r\n\t\t\t\t\t\t\t\t\t\t\"BaBaMaSaRa***Foo\",\r\n\t\t\t\t\t\t\t\t\t\t\"bar*foo\",\r\n\t\t\t\t\t\t\t\t\t\t\"bit$Bite\",\r\n\t\t\t\t\t\t\t\t\t\t\"foo*bar\",\r\n\t\t\t\t\t\t\t\t\t\t\"jfq4@#!$!@Rf14r14i5u\",\r\n\t\t\t\t\t\t\t\t\t\tundefined\r\n\t\t\t\t\t\t\t\t\t];\r\n\t\t\t\tvar orderedArray0 = [ \"day\", \"dayOfYear\", \"month\", \"nday\", \"nmonth\", \"weekOfYear\", \"year\" ];\r\n\t\t\t\tvar orderedArray1 = [ \"Saturday\", \"335\", \"December\", \"1\", \"12\", \"48\", \"2007\" ];\r\n\t\t\t\tt.is(7, items.length);\r\n\t\t\t\tt.assertTrue(dojox.data.tests.stores.KeyValueStore.verifyItems(keyStore, items, \"key\", orderedArray0));\r\n\t\t\t\tt.assertTrue(dojox.data.tests.stores.KeyValueStore.verifyItems(keyStore, items, \"value\", orderedArray1));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar sortAttributes = [{ attribute: \"key\"}, { attribute: \"value\", descending: true}];\r\n\t\t\tkeyStore.fetch({sort: sortAttributes, onComplete: completed, onError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_sortMultipleSpecialComparator(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to test sorting on multiple attributes with a custom comparator.\r\n\t\t\t// description:\r\n\t\t\t//\t\tFunction to test sorting on multiple attributes with a custom comparator.\r\n\r\n\t\t\tvar args = dojox.data.tests.stores.KeyValueStore.getDatasource(\"stores/movies.csv\");\r\n\t\t\tvar keyStore = new dojox.data.KeyValueStore(args);\r\n\t\t\t\r\n\t\t\tkeyStore.comparatorMap = {};\r\n\t\t\tkeyStore.comparatorMap[\"key\"] = function(a,b){\r\n\t\t\t\tvar ret = 0;\r\n\t\t\t\t// We want to sort keys alphabetical by the last character in the string\r\n\t\t\t\tfunction lastChar(name){\r\n\t\t\t\t\tif(typeof name === \"undefined\"){ return undefined; }\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn name.slice(name.length-1); // Grab the last character in the string.\r\n\t\t\t\t}\r\n\t\t\t\tvar lastCharA = lastChar(a);\r\n\t\t\t\tvar lastCharB = lastChar(b);\r\n\t\t\t\tif(lastCharA > lastCharB || typeof lastCharA === \"undefined\"){\r\n\t\t\t\t\tret = 1;\r\n\t\t\t\t}else if(lastCharA < lastCharB || typeof lastCharB === \"undefined\"){\r\n\t\t\t\t\tret = -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn ret;\r\n\t\t\t};\r\n\t\t\r\n\t\t\tvar sortAttributes = [{attribute: \"key\", descending: true}, { attribute: \"value\", descending: true}];\r\n\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction completed(items, findResult){\r\n\t\t\t\tvar orderedArray = [5,4,0,3,2,1,6];\r\n\t\t\t\tvar orderedArray = [ \"day\", \"nday\", \"weekOfYear\", \"dayOfYear\", \"year\", \"month\", \"nmonth\" ];\r\n\t\t\t\tt.assertTrue(items.length === 7);\r\n\t\t\t\tvar passed = true;\r\n\t\t\t\tfor(var i = 0; i < items.length; i++){\r\n\t\t\t\t\tif(!(keyStore.getIdentity(items[i]) === orderedArray[i])){\r\n\t\t\t\t\t\tpassed=false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tt.assertTrue(passed);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tkeyStore.fetch({sort: sortAttributes, onComplete: completed, onError: dojo.partial(dojox.data.tests.stores.KeyValueStore.error, t, d)});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_functionConformance(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test read API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test read API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\r\n\t\t\tvar testStore = new dojox.data.KeyValueStore(dojox.data.tests.stores.KeyValueStore.getDatasource(\"stores/movies.csv\"));\r\n\t\t\tvar readApi = new dojo.data.api.Read();\r\n\t\t\tvar passed = true;\r\n\r\n\t\t\tfor(i in readApi){\r\n\t\t\t\tif(i.toString().charAt(0) !== '_')\r\n\t\t\t\t{\r\n\t\t\t\t\tvar member = readApi[i];\r\n\t\t\t\t\t//Check that all the 'Read' defined functions exist on the test store.\r\n\t\t\t\t\tif(typeof member === \"function\"){\r\n\t\t\t\t\t\tconsole.log(\"Looking at function: [\" + i + \"]\");\r\n\t\t\t\t\t\tvar testStoreMember = testStore[i];\r\n\t\t\t\t\t\tif(!(typeof testStoreMember === \"function\")){\r\n\t\t\t\t\t\t\tconsole.log(\"Problem with function: [\" + i + \"].   Got value: \" + testStoreMember);\r\n\t\t\t\t\t\t\tpassed = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tt.assertTrue(passed);\r\n\t\t},\r\n\t\tfunction testIdentityAPI_functionConformance(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test identity API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test identity API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\r\n\t\t\tvar testStore = new dojox.data.KeyValueStore(dojox.data.tests.stores.KeyValueStore.getDatasource(\"stores/movies.csv\"));\r\n\t\t\tvar identityApi = new dojo.data.api.Identity();\r\n\t\t\tvar passed = true;\r\n\r\n\t\t\tfor(i in identityApi){\r\n\t\t\t\tif(i.toString().charAt(0) !== '_')\r\n\t\t\t\t{\r\n\t\t\t\t\tvar member = identityApi[i];\r\n\t\t\t\t\t//Check that all the 'Read' defined functions exist on the test store.\r\n\t\t\t\t\tif(typeof member === \"function\"){\r\n\t\t\t\t\t\tconsole.log(\"Looking at function: [\" + i + \"]\");\r\n\t\t\t\t\t\tvar testStoreMember = testStore[i];\r\n\t\t\t\t\t\tif(!(typeof testStoreMember === \"function\")){\r\n\t\t\t\t\t\t\tpassed = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tt.assertTrue(passed);\r\n\t\t}\r\n\t]\r\n);\r\n\r\n"]}