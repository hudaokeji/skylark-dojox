{"version":3,"sources":["data/tests/stores/ServiceStore.js"],"names":["dojo","provide","require","dojox","data","tests","stores","ServiceStore","error","t","d","errData","errback","testServices","rpc","Service","toUrl","jsonStore","service","jsonRestStore","doh","register","name","timeout","runTest","Deferred","fetch","query","onComplete","items","request","is","length","callback","onError","partial","fetchItemByIdentity","identity","onItem","item","getValue","hasAttribute","getValues","isItem","isItemLoaded","containsValue","f","getIdentity","indexOf","getAttributes","lazyItem","_loadObject","this","loadItem","idAttribute","syncMode","id","count","onBegin","requestObj","assertTrue","readApi","api","Read","i","toString","charAt"],"mappings":"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","file":"../../../../data/tests/stores/ServiceStore.js","sourcesContent":["dojo.provide(\"dojox.data.tests.stores.ServiceStore\");\r\ndojo.require(\"dojox.rpc.Service\");\r\ndojo.require(\"dojox.rpc.Rest\");\r\n//dojo.require(\"dojox.data.ClientFilter\");\r\ndojo.require(\"dojox.data.ServiceStore\");\r\ndojo.require(\"dojo.data.api.Read\");\r\ndojox.data.tests.stores.ServiceStore.error = function(t, d, errData){\r\n\t// summary:\r\n\t//\t\tThe error callback function to be used for all of the tests.\r\n\td.errback(errData);\r\n};\r\nvar testServices = new dojox.rpc.Service(require.toUrl(\"dojox/rpc/tests/resources/test.smd\"));\r\nvar jsonStore = new dojox.data.ServiceStore({service:testServices.jsonRestStore});\r\n\r\ndoh.register(\"dojox.data.tests.stores.ServiceStore\",\r\n\t[\r\n\t\t{\r\n\t\t\tname: \"Fetch some items\",\r\n\t\t\ttimeout:\t10000, //10 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of a basic fetch on ServiceStore of a simple query.\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tjsonStore.fetch({query:\"query\",\r\n\t\t\t\t\tonComplete: function(items, request){\r\n\t\t\t\t\t\tt.is(4, items.length);\r\n\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.ServiceStore.error, doh, d)\r\n\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"fetchItemByIdentity, getValue, getValues, hasAttribute,containsValue, getAttributes, getIdentity\",\r\n\t\t\ttimeout:\t10000, //10 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of a basic fetch on ServiceStore of a single item.\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tjsonStore.fetchItemByIdentity({identity:1,\r\n\t\t\t\t\tonItem: function(item, request){\r\n\t\t\t\t\t\tt.is(\"Object 1\", item.name);\r\n\t\t\t\t\t\tt.is(\"Object 1\",jsonStore.getValue(item,\"name\"));\r\n\t\t\t\t\t\tt.t(jsonStore.hasAttribute(item,\"name\"));\r\n\t\t\t\t\t\tt.is(jsonStore.getValues(item,\"name\").length,1);\r\n\t\t\t\t\t\tt.t(jsonStore.isItem(item));\r\n\t\t\t\t\t\tt.t(jsonStore.isItemLoaded(item));\r\n\t\t\t\t\t\tt.t(jsonStore.containsValue(item,\"name\",\"Object 1\"));\r\n\t\t\t\t\t\tt.f(jsonStore.containsValue(item,\"name\",\"Something Else\"));\r\n\t\t\t\t\t\tt.is(jsonStore.getIdentity(item),1);\r\n\t\t\t\t\t\tt.t(dojo.indexOf(jsonStore.getAttributes(item),\"name\")>-1);\r\n\t\t\t\t\t\tt.is(\"default\",jsonStore.getValue(item,\"nothing\",\"default\"));\r\n\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.ServiceStore.error, doh, d)\r\n\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"createLazyItem\",\r\n\t\t\ttimeout:\t10000, //10 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of a basic fetch on ServiceStore of a single item.\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tvar lazyItem = {\r\n\t\t\t\t\t_loadObject: function(callback){\r\n\t\t\t\t\t\tthis.name=\"loaded\";\r\n\t\t\t\t\t\tdelete this._loadObject;\r\n\t\t\t\t\t\tcallback(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tt.f(jsonStore.isItemLoaded(lazyItem));\r\n\t\t\t\tjsonStore.loadItem({item:lazyItem,onItem:function(){\r\n\t\t\t\t\tt.t(jsonStore.isItemLoaded(lazyItem));\r\n\t\t\t\t\tt.is(lazyItem.name,\"loaded\");\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"lazyItem With Fetch\",\r\n\t\t\ttimeout:\t10000, //10 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tjsonStore.idAttribute = \"id\";\r\n\t\t\t\tjsonStore.syncMode = true;\r\n\t\t\t\tjsonStore.fetch({query:\"query\",\r\n\t\t\t\t\tonComplete: function(items, request){\r\n\t\t\t\t\t\titems[0]._loadObject = function(callback){\r\n\t\t\t\t\t\t\tjsonStore.fetch({query:this.id,onComplete:callback});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tt.t(jsonStore.getValue(items[0],\"testArray\").length);\r\n\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.ServiceStore.error, doh, d)\r\n\t\t\t\t});\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"ReadAPI:  Fetch_20_Streaming\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Json can sometimes be slow.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tfetching with paging\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tvar count = 0;\r\n\r\n\t\t\t\tfunction onItem(item, requestObj){\r\n\t\t\t\t  t.assertTrue(typeof item == 'number');\r\n\t\t\t\t  count++;\r\n\t\t\t\t}\r\n\t\t\t\tfunction onComplete(items, request){\r\n\t\t\t\t\tt.is(20, count);\r\n\t\t\t\t\t\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\t//Get everything...\r\n\t\t\t\tjsonStore.fetch({\r\n\t\t\t\t\tquery: \"bigQuery\",\r\n\t\t\t\t\tonBegin: null,\r\n\t\t\t\t\tcount: 20,\r\n\t\t\t\t\tonItem: onItem,\r\n\t\t\t\t\tonComplete: onComplete,\r\n\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.ServiceStore.error, t, d)\r\n\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\tfunction testReadAPI_functionConformance(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test read API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test read API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\r\n\t\t\tvar readApi = new dojo.data.api.Read();\r\n\t\t\tvar passed = true;\r\n\r\n\t\t\tfor(i in readApi){\r\n\t\t\t\tif(i.toString().charAt(0) !== '_')\r\n\t\t\t\t{\r\n\t\t\t\t\tvar member = readApi[i];\r\n\t\t\t\t\t//Check that all the 'Read' defined functions exist on the test store.\r\n\t\t\t\t\tif(typeof member === \"function\"){\r\n\t\t\t\t\t\tvar testStoreMember = jsonStore\t[i];\r\n\t\t\t\t\t\tif(!(typeof testStoreMember === \"function\")){\r\n\t\t\t\t\t\t\tpassed = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n);\r\n\r\n"]}