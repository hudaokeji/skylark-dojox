{"version":3,"sources":["data/tests/stores/FileStore.js"],"names":["dojo","provide","require","dojox","data","tests","stores","FileStore","getGeoStore","url","toUrl","toString","pathAsQueryParam","doh","register","name","timeout","runTest","t","store","d","Deferred","fetch","query","queryOptions","deep","onComplete","items","request","assertEqual","length","callback","onError","error","errback","dumpSixthFetch","dumpFifthFetch","start","count","dumpFourthFetch","dumpThirdFetch","dumpSecondFetch","dumpFirstFetch","errData","ignoreCase","label","getLabel","assertTrue","labelList","getLabelAttributes","item","hasAttribute","getValue","values","getValues","isItem","store1","store2","item1","item2","containsValue","order","sort","attribute","descending","i","reverse","isItemLoaded","features","getFeatures","attributes","getAttributes","testStore","readApi","api","Read","passed","console","log","getIdentity","getIdentityAttributes","fetchItemByIdentity","identity","onItem","identityApi","Identity"],"mappings":"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","file":"../../../../data/tests/stores/FileStore.js","sourcesContent":["dojo.provide(\"dojox.data.tests.stores.FileStore\");\r\ndojo.require(\"dojox.data.FileStore\");\r\ndojo.require(\"dojo.data.api.Read\");\r\ndojo.require(\"dojo.data.api.Identity\");\r\n\r\n\r\ndojox.data.tests.stores.FileStore.getGeoStore = function(){\r\n\treturn new dojox.data.FileStore({url: require.toUrl(\"dojox/data/tests/stores/filestore_dojoxdatageo.php\").toString(), pathAsQueryParam: true});\r\n};\r\n\r\n\r\ndoh.register(\"dojox.data.tests.stores.FileStore\",\r\n\t[\r\n/***************************************\r\n\t dojo.data.api.Read API\r\n***************************************/\r\n\t\t{\r\n\t\t\tname: \"testReadAPI_fetch_all\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Lots of server calls, expect network delay\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of fetching all xml items through an XML element called isbn\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of fetching all xml items through an XML element called isbn\r\n\t\t\t\tvar store = dojox.data.tests.stores.FileStore.getGeoStore();\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\t\tt.assertEqual(49, items.length);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tfunction onError(error, request) {\r\n\t\t\t\t\td.errback(error);\r\n\t\t\t\t}\r\n\t\t\t\tstore.fetch({query:{name:\"*\"}, queryOptions: {deep: true}, onComplete: onComplete, onError: onError});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"testReadAPI_fetch_one\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Lots of server calls, expect network delay\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of fetching one xml items through an XML element called isbn\r\n\t\t\t\tvar store = dojox.data.tests.stores.FileStore.getGeoStore();\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tfunction onError(error, request) {\r\n\t\t\t\t\td.errback(error);\r\n\t\t\t\t}\r\n\t\t\t\tstore.fetch({query:{name:\"Commonwealth of Australia\"}, onComplete: onComplete, onError: onError});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"testReadAPI_fetch_paging\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Lots of server calls, expect network delay\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of fetching a series of pages\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of fetching a series of pages\r\n\t\t\t\tvar store = dojox.data.tests.stores.FileStore.getGeoStore();\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\r\n\t\t\t\tfunction dumpSixthFetch(items, request){\r\n\t\t\t\t\tt.assertEqual(20, items.length);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction dumpFifthFetch(items, request){\r\n\t\t\t\t\tt.assertEqual(40, items.length);\r\n\t\t\t\t\trequest.start = 2;\r\n\t\t\t\t\trequest.count = 20;\r\n\t\t\t\t\trequest.onComplete = dumpSixthFetch;\r\n\t\t\t\t\tstore.fetch(request);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction dumpFourthFetch(items, request){\r\n\t\t\t\t\tt.assertEqual(20, items.length);\r\n\t\t\t\t\trequest.start = 9;\r\n\t\t\t\t\trequest.count = 100;\r\n\t\t\t\t\trequest.onComplete = dumpFifthFetch;\r\n\t\t\t\t\tstore.fetch(request);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction dumpThirdFetch(items, request){\r\n\t\t\t\t\tt.assertEqual(5, items.length);\r\n\t\t\t\t\trequest.start = 2;\r\n\t\t\t\t\trequest.count = 20;\r\n\t\t\t\t\trequest.onComplete = dumpFourthFetch;\r\n\t\t\t\t\tstore.fetch(request);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction dumpSecondFetch(items, request){\r\n\t\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\t\trequest.start = 0;\r\n\t\t\t\t\trequest.count = 5;\r\n\t\t\t\t\trequest.onComplete = dumpThirdFetch;\r\n\t\t\t\t\tstore.fetch(request);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction dumpFirstFetch(items, request){\r\n\t\t\t\t\tt.assertEqual(5, items.length);\r\n\t\t\t\t\trequest.start = 3;\r\n\t\t\t\t\trequest.count = 1;\r\n\t\t\t\t\trequest.onComplete = dumpSecondFetch;\r\n\t\t\t\t\tstore.fetch(request);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction completed(items, request){\r\n\t\t\t\t\tt.assertEqual(49, items.length);\r\n\t\t\t\t\trequest.start = 1;\r\n\t\t\t\t\trequest.count = 5;\r\n\t\t\t\t\trequest.onComplete = dumpFirstFetch;\r\n\t\t\t\t\tstore.fetch(request);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction error(errData, request){\r\n\t\t\t\t\td.errback(errData);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstore.fetch({queryOptions: {deep:true}, onComplete: completed, onError: error});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"testReadAPI_fetch_pattern0\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Lots of server calls, expect network delay\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of fetching a few files based on wildcarded name\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of fetching a few files based on wildcarded name\r\n\t\t\t\tvar store = dojox.data.tests.stores.FileStore.getGeoStore();\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\t\tt.assertEqual(3, items.length);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tfunction onError(error, request) {\r\n\t\t\t\t\td.errback(error);\r\n\t\t\t\t}\r\n\t\t\t\tstore.fetch({query:{name:\"C*\"}, onComplete: onComplete, onError: onError});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"testReadAPI_fetch_pattern1\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Lots of server calls, expect network delay\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of fetching a one files based on wildcarded name\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of fetching a one file based on wildcarded name\r\n\t\t\t\tvar store = dojox.data.tests.stores.FileStore.getGeoStore();\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tfunction onError(error, request) {\r\n\t\t\t\t\td.errback(error);\r\n\t\t\t\t}\r\n\t\t\t\tstore.fetch({query:{name:\"?ussia\"}, onComplete: onComplete, onError: onError});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"testReadAPI_fetch_pattern_caseInsensitive\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Lots of server calls, expect network delay\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of fetching one file item case insensitively\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of fetching one file item case insensitively\r\n\t\t\t\tvar store = dojox.data.tests.stores.FileStore.getGeoStore();\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tfunction onError(error, request) {\r\n\t\t\t\t\td.errback(error);\r\n\t\t\t\t}\r\n\t\t\t\tstore.fetch({query:{name:\"germany\"}, queryOptions: {ignoreCase: true}, onComplete: onComplete, onError: onError});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"testReadAPI_fetch_pattern_caseSensitive\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Lots of server calls, expect network delay\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of fetching one file item case sensitively\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of fetching one file item case sensitively\r\n\t\t\t\tvar store = dojox.data.tests.stores.FileStore.getGeoStore();\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tfunction onError(error, request) {\r\n\t\t\t\t\td.errback(error);\r\n\t\t\t\t}\r\n\t\t\t\tstore.fetch({query:{name:\"Germany\"}, queryOptions: {ignoreCase: false}, onComplete: onComplete, onError: onError});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"testReadAPI_getLabel\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Lots of server calls, expect network delay\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of the getLabel function against a store\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of the getLabel function against a store\r\n\r\n\t\t\t\tvar store = dojox.data.tests.stores.FileStore.getGeoStore();\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items, request){\r\n\t\t\t\t\tt.assertEqual(items.length, 1);\r\n\t\t\t\t\tvar label = store.getLabel(items[0]);\r\n\t\t\t\t\tt.assertTrue(label !== null);\r\n\t\t\t\t\tt.assertEqual(\"China\", label);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tfunction onError(error, request) {\r\n\t\t\t\t\td.errback(error);\r\n\t\t\t\t}\r\n\t\t\t\tstore.fetch({query:{name:\"China\"}, onComplete: onComplete, onError: onError});\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"testReadAPI_getLabelAttributes\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Lots of server calls, expect network delay\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of the getLabelAttributes function against a store set that has a label defined.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of the getLabelAttributes function against a store set that has a label defined.\r\n\r\n\t\t\t\tvar store = dojox.data.tests.stores.FileStore.getGeoStore();\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items, request){\r\n\t\t\t\t\tt.assertEqual(items.length, 1);\r\n\t\t\t\t\tvar labelList = store.getLabelAttributes(items[0]);\r\n\t\t\t\t\tt.assertTrue(labelList !== null);\r\n\t\t\t\t\tt.assertEqual(\"name\", labelList[0]);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tfunction onError(error, request) {\r\n\t\t\t\t\td.errback(error);\r\n\t\t\t\t}\r\n\t\t\t\tstore.fetch({query:{name:\"China\"}, onComplete: onComplete, onError: onError});\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"testReadAPI_getValue\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Lots of server calls, expect network delay\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of the getValue API\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of the getValue API\r\n\t\t\t\tvar store = dojox.data.tests.stores.FileStore.getGeoStore();\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\t\tvar item = items[0];\r\n\t\t\t\t\tt.assertTrue(store.hasAttribute(item,\"name\"));\r\n\t\t\t\t\tt.assertEqual(store.getValue(item,\"name\"), \"Guadalajara\");\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tfunction onError(error, request) {\r\n\t\t\t\t\td.errback(error);\r\n\t\t\t\t}\r\n\t\t\t\tstore.fetch({query:{name:\"Guadalajara\"}, queryOptions: {deep: true}, onComplete: onComplete, onError: onError});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"testReadAPI_getValues\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Lots of server calls, expect network delay\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of the getValues API\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of the getValues API\r\n\t\t\t\tvar store = dojox.data.tests.stores.FileStore.getGeoStore();\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\t\tvar item = items[0];\r\n\t\t\t\t\tt.assertTrue(store.hasAttribute(item,\"name\"));\r\n\t\t\t\t\tvar values = store.getValues(item,\"name\");\r\n\t\t\t\t\tt.assertEqual(1,values.length);\r\n\t\t\t\t\tt.assertEqual(\"Guadalajara\", values[0]);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tfunction onError(error, request) {\r\n\t\t\t\t\td.errback(error);\r\n\t\t\t\t}\r\n\t\t\t\tstore.fetch({query:{name:\"Guadalajara\"}, queryOptions: {deep: true}, onComplete: onComplete, onError: onError});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"testReadAPI_isItem\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Lots of server calls, expect network delay\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of the isItem API\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of the isItem API\r\n\t\t\t\tvar store = dojox.data.tests.stores.FileStore.getGeoStore();\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\t   t.assertEqual(1, items.length);\r\n\t\t\t\t   var item = items[0];\r\n\t\t\t\t   t.assertTrue(store.isItem(item));\r\n\t\t\t\t   t.assertTrue(!store.isItem({}));\r\n\t\t\t\t   t.assertTrue(!store.isItem(\"Foo\"));\r\n\t\t\t\t   t.assertTrue(!store.isItem(1));\r\n\t\t\t\t   d.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tfunction onError(error, request) {\r\n\t\t\t\t\td.errback(error);\r\n\t\t\t\t}\r\n\t\t\t\tstore.fetch({query:{name:\"Guadalajara\"}, queryOptions: {deep: true}, onComplete: onComplete, onError: onError});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"testReadAPI_isItem_multistore\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Lots of server calls, expect network delay\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of the isItem API across multiple store instances.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of the isItem API across multiple store instances.\r\n\t\t\t\tvar store1 = dojox.data.tests.stores.FileStore.getGeoStore();\r\n\t\t\t\tvar store2 = dojox.data.tests.stores.FileStore.getGeoStore();\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\r\n\t\t\t\tfunction onError(error, request) {\r\n\t\t\t\t\td.errback(error);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction onComplete1(items, request) {\r\n\t\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\t\tvar item1 = items[0];\r\n\t\t\t\t\tt.assertTrue(store1.isItem(item1));\r\n\r\n\t\t\t\t\tfunction onComplete2(items, request) {\r\n\t\t\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\t\t\tvar item2 = items[0];\r\n\t\t\t\t\t\tt.assertTrue(store2.isItem(item2));\r\n\t\t\t\t\t\tt.assertTrue(!store1.isItem(item2));\r\n\t\t\t\t\t\tt.assertTrue(!store2.isItem(item1));\r\n\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstore2.fetch({query:{name:\"Guadalajara\"}, queryOptions: {deep: true}, onComplete: onComplete2, onError: onError});\r\n\t\t\t\t}\r\n\t\t\t\tstore1.fetch({query:{name:\"China\"}, onComplete: onComplete1, onError: onError});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"testReadAPI_hasAttribute\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Lots of server calls, expect network delay\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of the hasAttribute API\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of the hasAttribute API\r\n\t\t\t\tvar store = dojox.data.tests.stores.FileStore.getGeoStore();\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\t\tvar item = items[0];\r\n\t\t\t\t\tt.assertTrue(store.hasAttribute(item,\"name\"));\r\n\t\t\t\t\tt.assertTrue(!store.hasAttribute(item,\"bob\"));\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tfunction onError(error, request) {\r\n\t\t\t\t\td.errback(error);\r\n\t\t\t\t}\r\n\t\t\t\tstore.fetch({query:{name:\"China\"}, onComplete: onComplete, onError: onError});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"testReadAPI_containsValue\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Lots of server calls, expect network delay\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of the containsValue API\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of the containsValue API\r\n\t\t\t\tvar store = dojox.data.tests.stores.FileStore.getGeoStore();\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\t\tvar item = items[0];\r\n\t\t\t\t\tt.assertTrue(store.containsValue(item,\"name\", \"China\"));\r\n\t\t\t\t\tt.assertTrue(!store.containsValue(item,\"name\", \"bob\"));\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tfunction onError(error, request) {\r\n\t\t\t\t\td.errback(error);\r\n\t\t\t\t}\r\n\t\t\t\tstore.fetch({query:{name:\"China\"}, onComplete: onComplete, onError: onError});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"testReadAPI_sortDescending\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Lots of server calls, expect network delay\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of the sorting API in descending order.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of the sorting API in descending order.\r\n\t\t\t\tvar store = dojox.data.tests.stores.FileStore.getGeoStore();\r\n\r\n\t\t\t\t//Comparison is done as a string type (toString comparison), so the order won't be numeric\r\n\t\t\t\t//So have to compare in 'alphabetic' order.\r\n\t\t\t\tvar order = [\"root.json\",\"United States of America\",\"Sudan\",\"Spain\",\"Russia\",\"Mongolia\",\"Mexico\",\"Kenya\",\"Italy\",\"India\",\"Germany\",\"France\",\"Egypt\",\"Commonwealth of Australia\",\"China\",\"Canada\",\"Brazil\",\"Argentina\"];\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\t\tt.assertEqual(18, items.length);\r\n\t\t\t\t\tfor(var i = 0; i < items.length; i++){\r\n\t\t\t\t\t\tt.assertEqual(order[i], store.getValue(items[i],\"name\").toString());\r\n\t\t\t\t\t}\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tfunction onError(error, request) {\r\n\t\t\t\t\td.errback(error);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar sortAttributes = [{attribute: \"name\", descending: true}];\r\n\t\t\t\tstore.fetch({query:{name:\"*\"}, sort: sortAttributes, onComplete: onComplete, onError: onError});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"testReadAPI_sortAscending\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Lots of server calls, expect network delay\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of the sorting API in ascending order.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of the sorting API in ascending order.\r\n\t\t\t\tvar store = dojox.data.tests.stores.FileStore.getGeoStore();\r\n\r\n\t\t\t\t//Comparison is done as a string type (toString comparison), so the order won't be numeric\r\n\t\t\t\t//So have to compare in 'alphabetic' order.\r\n\r\n\t\t\t\tvar order = [\"root.json\",\"United States of America\",\"Sudan\",\"Spain\",\"Russia\",\"Mongolia\",\"Mexico\",\"Kenya\",\"Italy\",\"India\",\"Germany\",\"France\",\"Egypt\",\"Commonwealth of Australia\",\"China\",\"Canada\",\"Brazil\",\"Argentina\"].reverse();\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\t\tt.assertEqual(18, items.length);\r\n\t\t\t\t\tfor(var i = 0; i < items.length; i++){\r\n\t\t\t\t\t\tt.assertEqual(order[i], store.getValue(items[i],\"name\").toString());\r\n\t\t\t\t\t}\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tfunction onError(error, request) {\r\n\t\t\t\t\td.errback(error);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar sortAttributes = [{attribute: \"name\"}];\r\n\t\t\t\tstore.fetch({query:{name:\"*\"}, sort: sortAttributes, onComplete: onComplete, onError: onError});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"testReadAPI_isItemLoaded\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Lots of server calls, expect network delay\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of the isItemLoaded API\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of the isItemLoaded API\r\n\t\t\t\tvar store = dojox.data.tests.stores.FileStore.getGeoStore();\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\t\tvar item = items[0];\r\n\t\t\t\t\tt.assertTrue(store.isItemLoaded(item));\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tfunction onError(error, request) {\r\n\t\t\t\t\td.errback(error);\r\n\t\t\t\t}\r\n\t\t\t\tstore.fetch({query:{name:\"China\"}, onComplete: onComplete, onError: onError});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\tfunction testReadAPI_getFeatures(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getFeatures function of the store\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getFeatures function of the store\r\n\r\n\t\t\tvar store = dojox.data.tests.stores.FileStore.getGeoStore();\r\n\t\t\tvar features = store.getFeatures();\r\n\t\t\tvar count = 0;\r\n\t\t\tvar i;\r\n\t\t\tfor(i in features){\r\n\t\t\t\tt.assertTrue((i === \"dojo.data.api.Read\" || i === \"dojo.data.api.Identity\"));\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t\tt.assertEqual(2, count);\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"testReadAPI_getAttributes\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Lots of server calls, expect network delay\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of the getAttributes API\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of the getAttributes API\r\n\t\t\t\tvar store = dojox.data.tests.stores.FileStore.getGeoStore();\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\t\tvar item = items[0];\r\n\t\t\t\t\tvar attributes = store.getAttributes(item);\r\n\t\t\t\t\tt.assertEqual(7,attributes.length);\r\n\t\t\t\t\tfor(var i=0; i<attributes.length; i++){\r\n\t\t\t\t\t\tt.assertTrue((attributes[i] === \"children\" || attributes[i] === \"directory\" || attributes[i] === \"name\" || attributes[i] === \"path\" || attributes[i] === \"modified\" || attributes[i] === \"size\" || attributes[i] === \"parentDir\"));\r\n\t\t\t\t\t}\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tfunction onError(error, request) {\r\n\t\t\t\t\td.errback(error);\r\n\t\t\t\t}\r\n\t\t\t\tstore.fetch({query:{name:\"China\"}, onComplete: onComplete, onError: onError});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\tfunction testReadAPI_functionConformance(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test read API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test read API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\r\n\t\t\tvar testStore = dojox.data.tests.stores.FileStore.getGeoStore();\r\n\t\t\tvar readApi = new dojo.data.api.Read();\r\n\t\t\tvar passed = true;\r\n\r\n\t\t\tvar i;\r\n\t\t\tfor(i in readApi){\r\n\t\t\t\tvar member = readApi[i];\r\n\t\t\t\t//Check that all the 'Read' defined functions exist on the test store.\r\n\t\t\t\tif(typeof member === \"function\"){\r\n\t\t\t\t\tvar testStoreMember = testStore[i];\r\n\t\t\t\t\tif(!(typeof testStoreMember === \"function\")){\r\n\t\t\t\t\t\tconsole.log(\"Problem with function: [\" + i + \"]\");\r\n\t\t\t\t\t\tpassed = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tt.assertTrue(passed);\r\n\t\t},\r\n\r\n/***************************************\r\n dojo.data.api.Identity API\r\n***************************************/\r\n\t\t{\r\n\t\t\tname: \"testIdentityAPI_getIdentity\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Lots of server calls, expect network delay\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of the getAttributes API\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of the getAttributes API\r\n\t\t\t\tvar store = dojox.data.tests.stores.FileStore.getGeoStore();\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\t\tvar item = items[0];\r\n\t\t\t\t\tt.assertEqual(\"./Argentina\",store.getIdentity(item));\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tfunction onError(error, request) {\r\n\t\t\t\t\td.errback(error);\r\n\t\t\t\t}\r\n\t\t\t\tstore.fetch({query:{name:\"Argentina\"}, onComplete: onComplete, onError: onError});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"testIdentityAPI_getIdentityAttributes\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Lots of server calls, expect network delay\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of the getAttributes API\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of the getAttributes API\r\n\t\t\t\tvar store = dojox.data.tests.stores.FileStore.getGeoStore();\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items, request) {\r\n\t\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\t\tvar item = items[0];\r\n\t\t\t\t\t//Should have none, as it's not a public attribute.\r\n\t\t\t\t\tvar attributes = store.getIdentityAttributes(item);\r\n\t\t\t\t\tt.assertEqual(1, attributes.length);\r\n\t\t\t\t\tt.assertEqual(\"path\", attributes[0]);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tfunction onError(error, request) {\r\n\t\t\t\t\td.errback(error);\r\n\t\t\t\t}\r\n\t\t\t\tstore.fetch({query:{name:\"Argentina\"}, onComplete: onComplete, onError: onError});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"testIdentityAPI_fetchItemByIdentity\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Lots of server calls, expect network delay\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of the fetchItemByIdentity API\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of the fetchItemByIdentity API\r\n\t\t\t\tvar store = dojox.data.tests.stores.FileStore.getGeoStore();\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onItem(item, request) {\r\n\t\t\t\t\tt.assertTrue(item !== null);\r\n\t\t\t\t\tt.assertTrue(store.isItem(item));\r\n\t\t\t\t\tt.assertEqual(\"Argentina\", store.getValue(item, \"name\"));\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tfunction onError(error, request) {\r\n\t\t\t\t\td.errback(error);\r\n\t\t\t\t}\r\n\t\t\t\tstore.fetchItemByIdentity({identity: \"./Argentina\", onItem: onItem, onError: onError});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\tfunction testIdentityAPI_functionConformance(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test identity API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test identity API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\r\n\t\t\tvar testStore = dojox.data.tests.stores.FileStore.getGeoStore();\r\n\t\t\tvar identityApi = new dojo.data.api.Identity();\r\n\t\t\tvar passed = true;\r\n\r\n\t\t\tvar i;\r\n\t\t\tfor(i in identityApi){\r\n\t\t\t\tvar member = identityApi[i];\r\n\t\t\t\t//Check that all the 'Read' defined functions exist on the test store.\r\n\t\t\t\tif(typeof member === \"function\"){\r\n\t\t\t\t\tvar testStoreMember = testStore[i];\r\n\t\t\t\t\tif(!(typeof testStoreMember === \"function\")){\r\n\t\t\t\t\t\tconsole.log(\"Problem with function: [\" + i + \"]\");\r\n\t\t\t\t\t\tpassed = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tt.assertTrue(passed);\r\n\t\t}\r\n\t]\r\n);\r\n\r\n"]}