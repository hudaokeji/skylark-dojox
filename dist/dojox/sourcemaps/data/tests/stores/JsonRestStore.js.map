{"version":3,"sources":["data/tests/stores/JsonRestStore.js"],"names":["dojo","provide","require","dojox","data","tests","stores","JsonRestStore","error","t","d","errData","errback","testServices","rpc","Service","toUrl","jsonRestStore","servicePath","jsonStore","service","doh","register","name","timeout","runTest","Deferred","fetch","query","onComplete","items","request","is","length","callback","onError","partial","item","hasAttribute","getValues","isItem","now","Date","getTime","setValue","foo","obj","save","fetchItemByIdentity","identity","onItem","updated","unsetAttribute","getValue","undefined","revert","newItem","directRef","subobject","deleteItem","f","isItemLoaded","loadItem","getIdentity","count","onBegin","requestObj","assertTrue","set","e","console","log","readApi","api","Read","i","toString","charAt","getStore","target","performanceTest","result","ifrs","ItemFileReadStore","identifier","id","wears","pets"],"mappings":"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","file":"../../../../data/tests/stores/JsonRestStore.js","sourcesContent":["dojo.provide(\"dojox.data.tests.stores.JsonRestStore\");\r\ndojo.require(\"dojox.rpc.Service\");\r\n//dojo.require(\"dojox.data.ClientFilter\");\r\ndojo.require(\"dojox.data.JsonRestStore\");\r\ndojo.require(\"dojox.json.schema\");\r\ndojo.require(\"dojo.data.api.Read\");\r\n\r\ndojox.data.tests.stores.JsonRestStore.error = function(t, d, errData){\r\n\t// summary:\r\n\t//\t\tThe error callback function to be used for all of the tests.\r\n\td.errback(errData);\r\n};\r\ntestServices = new dojox.rpc.Service(require.toUrl(\"dojox/rpc/tests/resources/test.smd\"));\r\ntestServices.jsonRestStore.servicePath = \"/jsonRest.Store/\"; // this makes the regex more challenging\r\njsonStore = new dojox.data.JsonRestStore({service:testServices.jsonRestStore});\r\n\r\ndoh.register(\"dojox.data.tests.stores.JsonRestStore\",\r\n\t[\r\n\t\t{\r\n\t\t\tname: \"Fetch some items\",\r\n\t\t\ttimeout:\t10000, //10 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of a basic fetch on JsonRestStore of a simple query.\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tjsonStore.fetch({query:\"query\",\r\n\t\t\t\t\tonComplete: function(items, request){\r\n\t\t\t\t\t\tt.is(4, items.length);\r\n\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.JsonRestStore.error, doh, d)\r\n\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"fetch by id\",\r\n\t\t\ttimeout:\t10000, //10 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of a basic fetch on JsonRestStore of a single item.\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tjsonStore.fetch({query:\"obj1\",\r\n\t\t\t\t\tonComplete: function(item, request){\r\n\t\t\t\t\t\tt.is(\"Object 1\", item.name);\r\n\t\t\t\t\t\tt.t(jsonStore.hasAttribute(item,\"name\"));\r\n\t\t\t\t\t\tt.is(jsonStore.getValues(item,\"name\").length,1);\r\n\t\t\t\t\t\tt.t(jsonStore.isItem(item));\r\n\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.JsonRestStore.error, doh, d)\r\n\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Modify,save, check by id\",\r\n\t\t\ttimeout:\t10000, //10 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tFetch an item from a query, modify and save it, and check to see if it was modified correctly\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tjsonStore.fetch({query:\"query\",\r\n\t\t\t\t\tonComplete: function(items, request){\r\n\t\t\t\t\t\tvar now = new Date().getTime();\r\n\t\t\t\t\t\tjsonStore.setValue(items[0],\"updated\",now);\r\n\t\t\t\t\t\tjsonStore.setValue(items[0],\"obj\",{foo:'bar'});\r\n\t\t\t\t\t\tjsonStore.setValue(items[0],\"obj dup\",items[0].obj);\r\n\t\t\t\t\t\tjsonStore.setValue(items[0],\"testArray\",[1,2,3,4]);\r\n\t\t\t\t\t\tjsonStore.save({onComplete:function(){\r\n\t\t\t\t\t\t\tjsonStore.fetchItemByIdentity({identity:\"obj1\",\r\n\t\t\t\t\t\t\t\tonItem: function(item, request){\r\n\t\t\t\t\t\t\t\t\tt.is(\"Object 1\", item.name);\r\n\t\t\t\t\t\t\t\t\tt.is(now, item.updated);\r\n\t\t\t\t\t\t\t\t\tt.is(\"bar\", item.obj.foo);\r\n\t\t\t\t\t\t\t\t\tt.is(item.obj, item['obj dup']);\r\n\t\t\t\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.JsonRestStore.error, doh, d)\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}});\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.JsonRestStore.error, doh, d)\r\n\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Revert\",\r\n\t\t\ttimeout:\t10000, //10 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tappend/post an item, delete it, sort the lists, resort the list, saving each time.\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tjsonStore.fetch({query:\"obj1\",\r\n\t\t\t\t\tonComplete: function(item, request){\r\n\t\t\t\t\t\tjsonStore.setValue(item,\"name\",\"new name\");\r\n\t\t\t\t\t\tjsonStore.setValue(item,\"newProp\",\"new value\");\r\n\t\t\t\t\t\tjsonStore.unsetAttribute(item,\"updated\");\r\n\t\t\t\t\t\tt.is(jsonStore.getValue(item,\"name\"),\"new name\");\r\n\t\t\t\t\t\tt.is(jsonStore.getValue(item,\"newProp\"),\"new value\");\r\n\t\t\t\t\t\tt.is(jsonStore.getValue(item,\"updated\"),undefined);\r\n\t\t\t\t\t\tjsonStore.revert();\r\n\t\t\t\t\t\tt.is(jsonStore.getValue(item,\"name\"),\"Object 1\");\r\n\t\t\t\t\t\tt.is(jsonStore.getValue(item,\"newProp\"),undefined);\r\n\t\t\t\t\t\tt.t(typeof jsonStore.getValue(item,\"updated\") == 'number');\r\n\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.JsonRestStore.error, doh, d)\r\n\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Delete\",\r\n\t\t\ttimeout:\t10000, //10 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tappend/post an item, delete it, sort the lists, resort the list, saving each time.\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tjsonStore.fetchItemByIdentity({identity:\"obj1\",\r\n\t\t\t\t\tonItem: function(item, request){\r\n\t\t\t\t\t\tvar newItem = jsonStore.newItem({directRef: item, name:\"Foo\"});\r\n\t\t\t\t\t\tjsonStore.setValue(newItem, \"arrayRef\", [1,{subobject:item},item]);\r\n\t\t\t\t\t\tjsonStore.deleteItem(item);\r\n\t\t\t\t\t\tt.is(jsonStore.getValue(newItem, \"directRef\"), undefined);\r\n\t\t\t\t\t\tt.is(jsonStore.getValue(newItem, \"arrayRef\").length, 2);\r\n\t\t\t\t\t\tt.is(jsonStore.getValue(newItem, \"arrayRef\")[1].subobject, undefined);\r\n\t\t\t\t\t\tjsonStore.revert();\r\n\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.JsonRestStore.error, doh, d)\r\n\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Lazy loading\",\r\n\t\t\ttimeout:\t10000, //10 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\ttest lazy loading\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tjsonStore.fetch({query:\"query\",\r\n\t\t\t\t\tonComplete: function(items, request){\r\n\t\t\t\t\t\tvar item = items[2];\r\n\t\t\t\t\t\tt.f(jsonStore.isItemLoaded(item));\r\n\t\t\t\t\t\tjsonStore.getValue(item,\"name\"); // this should trigger the load\r\n\t\t\t\t\t\tt.is(items[2],item);\r\n\t\t\t\t\t\tt.is(item.name,'Object 3');\r\n\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.JsonRestStore.error, doh, d)\r\n\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Lazy loading 2\",\r\n\t\t\ttimeout:\t10000, //10 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\ttest lazy loading\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tjsonStore.fetch({query:\"query\",\r\n\t\t\t\t\tonComplete: function(items, request){\r\n\t\t\t\t\t\tt.f(jsonStore.isItemLoaded(items[3]));\r\n\t\t\t\t\t\tjsonStore.loadItem({item:items[3],onItem:function(item){\r\n\t\t\t\t\t\t\tt.t(jsonStore.isItemLoaded(items[3]));\r\n\t\t\t\t\t\t\tt.is(item,items[3]);\r\n\t\t\t\t\t\t\tt.is(item.name,'Object 4');\r\n\t\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t\t}});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.JsonRestStore.error, doh, d)\r\n\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t/*{\r\n\t\t\tname: \"Load Lazy Value\",\r\n\t\t\ttimeout:\t10000, //10 seconds.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of a basic fetch on ServiceStore of a single item.\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tjsonStore.fetchItemByIdentity({identity:\"obj1\",\r\n\t\t\t\t\tonItem: function(item, request){\r\n\t\t\t\t\t\tt.is(\"Object 1\", item.name);\r\n\t\t\t\t\t\tt.f(jsonStore.isItemLoaded(item.lazyValue));\r\n\t\t\t\t\t\tvar lazyValue = jsonStore.getValue(item,\"lazyValue\");\r\n\t\t\t\t\t\tt.is(\"Finally loaded\",lazyValue);\r\n\t\t\t\t\t\tlazyValue = jsonStore.getValue(item,\"lazyValue\");\r\n\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.JsonRestStore.error, doh, d)\r\n\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},*/\r\n\t\t\r\n\t\t{\r\n\t\t\tname: \"IdentityAPI: fetchItemByIdentity and getIdentity\",\r\n\t\t\ttimeout: 30000,\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tVerify the fetchItemByIdentity method works\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\r\n\t\t\t\tjsonStore.fetchItemByIdentity({identity:\"obj3\",\r\n\t\t\t\t\tonItem: function(item, request){\r\n\t\t\t\t\t\tt.t(jsonStore.isItemLoaded(item));\r\n\t\t\t\t\t\tt.is(jsonStore.getIdentity(item),\"obj3\");\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\r\n\t\t{\r\n\t\t\tname: \"ReadAPI:  Fetch_20_Streaming\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Json can sometimes be slow.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tfetching with paging\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tvar count = 0;\r\n\r\n\t\t\t\tfunction onItem(item, requestObj){\r\n\t\t\t\t  t.assertTrue(typeof item == 'number');\r\n\t\t\t\t  count++;\r\n\t\t\t\t}\r\n\t\t\t\tfunction onComplete(items, request){\r\n\t\t\t\t\tt.is(20, count);\r\n\t\t\t\t\t\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\t//Get everything...\r\n\t\t\t\tjsonStore.fetch({\r\n\t\t\t\t\tquery: \"bigQuery\",\r\n\t\t\t\t\tonBegin: null,\r\n\t\t\t\t\tcount: 20,\r\n\t\t\t\t\tonItem: onItem,\r\n\t\t\t\t\tonComplete: onComplete,\r\n\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.JsonRestStore.error, t, d)\r\n\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\tfunction testSchema(t){\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tjsonStore.fetchItemByIdentity({identity:\"obj3\",\r\n\t\t\t\tonItem: function(item, request){\r\n\t\t\t\t\tvar set = false;\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\tjsonStore.setValue(item,\"name\",333); // should only take a string, so it should throw an exception\r\n\t\t\t\t\t\tset = true;\r\n\t\t\t\t\t}catch(e){\r\n\t\t\t\t\t\tconsole.log(\"Correctly blocked invalid property change by schema:\",e);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\tjsonStore.setValue(item,\"name\",\"a\"); // should be at least three character, so it should throw an execption\r\n\t\t\t\t\t\tset = true;\r\n\t\t\t\t\t}catch(e){\r\n\t\t\t\t\t\tconsole.log(\"Correctly blocked invalid property change by schema:\",e);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tt.f(set);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t},\r\n\t\tfunction testReadAPI_functionConformance(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test read API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test read API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\r\n\t\t\tvar readApi = new dojo.data.api.Read();\r\n\t\t\tvar passed = true;\r\n\r\n\t\t\tfor(i in readApi){\r\n\t\t\t\tif(i.toString().charAt(0) !== '_')\r\n\t\t\t\t{\r\n\t\t\t\t\tvar member = readApi[i];\r\n\t\t\t\t\t//Check that all the 'Read' defined functions exist on the test store.\r\n\t\t\t\t\tif(typeof member === \"function\"){\r\n\t\t\t\t\t\tvar testStoreMember = jsonStore\t[i];\r\n\t\t\t\t\t\tif(!(typeof testStoreMember === \"function\")){\r\n\t\t\t\t\t\t\tpassed = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tfunction tryToLoadSameTarget(t){\r\n\t\t\tt.is(\r\n\t\t\t\tdojox.data.JsonRestStore.getStore({target:\"/something/\"},dojox.data.JsonRestStore),\r\n\t\t\t\tdojox.data.JsonRestStore.getStore({target:\"/something/\"}));\r\n\t\t\t\r\n\t\t}\r\n\t]\r\n);\r\nperformanceTest = function (){\r\n\tdojo.require(\"dojo.data.ItemFileReadStore\");\r\n\tjsonStore.fetch({query:\"obj1\",\r\n\t\tonComplete: function(item){\r\n\t\t\tvar now = new Date().getTime();\r\n\t\t\tvar result;\r\n\t\t\tfor(var i=0;i<100000;i++){\r\n\t\t\t}\r\n\t\t\tconsole.log(\"Just Loop\",new Date().getTime()-now, result);\r\n\t\t\tnow = new Date().getTime();\r\n\t\t\tfor(i=0;i<100000;i++){\r\n\t\t\t\tresult = item.name;\r\n\t\t\t}\r\n\t\t\tconsole.log(\"Direct Access\",new Date().getTime()-now, result);\r\n\t\t\t\r\n\t\t\tnow = new Date().getTime();\r\n\t\t\tfor(i=0;i<100000;i++){\r\n\t\t\t\tresult = jsonStore.getValue(item,\"name\");\r\n\t\t\t}\r\n\t\t\tconsole.log(\"getValue\",new Date().getTime()-now);\r\n\t\t\t\r\n\t\t\tvar ifrs = new dojo.data.ItemFileReadStore({data:{ identifier:'id',items: [\r\n\t\t\t\t{ id:'1',name:'Fozzie Bear', wears:['hat', 'tie']},\r\n\t\t\t\t{ id:'2',name:'Miss Piggy', pets:'Foo-Foo'}\r\n\t\t\t]}});\r\n\t\t\tifrs.fetchItemByIdentity({identity:'1',onItem:function(result){\r\n\t\t\t\titem = result;\r\n\t\t\t}});\r\n\t\t\t\r\n\t\t\tnow = new Date().getTime();\r\n\t\t\tfor(i=0;i<100000;i++){\r\n\t\t\t\tresult = ifrs.getValue(item,\"name\");\r\n\t\t\t}\r\n\t\t\tconsole.log(\"ifrs.getValue\",new Date().getTime()-now,result);\r\n\t\t\t\r\n\t\t}\r\n\t});\r\n\r\n}\r\n"]}