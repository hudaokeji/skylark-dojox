{"version":3,"sources":["data/tests/stores/FlickrStore.js"],"names":["dojo","provide","require","dojox","data","tests","stores","FlickrStore","error","t","d","errData","errback","doh","register","name","timeout","runTest","flickrStore","Deferred","fetch","query","tags","count","onComplete","items","request","is","length","callback","onError","partial","onBegin","size","requestObj","onItem","item","assertTrue","isItem","dumpFirstFetch","start","dumpSecondFetch","dumpThirdFetch","dumpFourthFetch","dumpFifthFetch","dumpSixthFetch","assertEqual","label","getLabel","labelList","getLabelAttributes","isArray","getValue","getValues","Array","i","hasAttribute","passed","e","attributes","getAttributes","features","getFeatures","testStore","readApi","api","Read","toString","charAt"],"mappings":"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","file":"../../../../data/tests/stores/FlickrStore.js","sourcesContent":["dojo.provide(\"dojox.data.tests.stores.FlickrStore\");\r\ndojo.require(\"dojox.data.FlickrStore\");\r\ndojo.require(\"dojo.data.api.Read\");\r\n\r\n\r\ndojox.data.tests.stores.FlickrStore.error = function(t, d, errData){\r\n\t// summary:\r\n\t//\t\tThe error callback function to be used for all of the tests.\r\n\td.errback(errData);\r\n};\r\n\r\ndoh.register(\"dojox.data.tests.stores.FlickrStore\",\r\n\t[\r\n\t\t{\r\n\t\t\tname: \"ReadAPI:  Fetch_One\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Flickr can sometimes be slow.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of a basic fetch on FlickrStore of a single item.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of a basic fetch on FlickrStore of a single item.\r\n\r\n\t\t\t\tvar flickrStore = new dojox.data.FlickrStore();\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items, request){\r\n\t\t\t\t\tt.is(1, items.length);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tflickrStore.fetch({ \tquery: {tags: \"animals\"},\r\n\t\t\t\t\t\t\t\t\tcount: 1,\r\n\t\t\t\t\t\t\t\t\tonComplete: onComplete,\r\n\t\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.FlickrStore.error, doh, d)\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"ReadAPI:  Fetch_20_Streaming\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Flickr can sometimes be slow.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of a basic fetch on FlickrStore.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of a basic fetch on FlickrStore.\r\n\t\t\t\tvar flickrStore = new dojox.data.FlickrStore();\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tcount = 0;\r\n\r\n\t\t\t\tfunction onBegin(size, requestObj){\r\n\t\t\t\t\tt.is(20, size);\r\n\t\t\t\t}\r\n\t\t\t\tfunction onItem(item, requestObj){\r\n\t\t\t\t\tt.assertTrue(flickrStore.isItem(item));\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t}\r\n\t\t\t\tfunction onComplete(items, request){\r\n\t\t\t\t\tt.is(20, count);\r\n\t\t\t\t\tt.is(null, items);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Get everything...\r\n\t\t\t\tflickrStore.fetch({\tonBegin: onBegin,\r\n\t\t\t\t\t\t\t\t\tcount: 20,\r\n\t\t\t\t\t\t\t\t\tonItem: onItem,\r\n\t\t\t\t\t\t\t\t\tonComplete: onComplete,\r\n\t\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.FlickrStore.error, t, d)\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"ReadAPI:  Fetch_Paging\",\r\n\t\t\ttimeout:\t30000, //30 seconds.  Flickr can sometimes be slow.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tTest of multiple fetches on a single result.  Paging, if you will.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tTest of multiple fetches on a single result.  Paging, if you will.\r\n\r\n\t\t\t\tvar flickrStore = new dojox.data.FlickrStore();\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction dumpFirstFetch(items, request){\r\n\t\t\t\t\tt.is(5, items.length);\r\n                    request.start = 3;\r\n\t\t\t\t\trequest.count = 1;\r\n\t\t\t\t\trequest.onComplete = dumpSecondFetch;\r\n\t\t\t\t\tflickrStore.fetch(request);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction dumpSecondFetch(items, request){\r\n\t\t\t\t\tt.is(1, items.length);\r\n\t\t\t\t\trequest.start = 0;\r\n\t\t\t\t\trequest.count = 5;\r\n\t\t\t\t\trequest.onComplete = dumpThirdFetch;\r\n\t\t\t\t\tflickrStore.fetch(request);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction dumpThirdFetch(items, request){\r\n\t\t\t\t\tt.is(5, items.length);\r\n\t\t\t\t\trequest.start = 2;\r\n\t\t\t\t\trequest.count = 20;\r\n\t\t\t\t\trequest.onComplete = dumpFourthFetch;\r\n\t\t\t\t\tflickrStore.fetch(request);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction dumpFourthFetch(items, request){\r\n\t\t\t\t\tt.is(18, items.length);\r\n\t\t\t\t\trequest.start = 9;\r\n\t\t\t\t\trequest.count = 100;\r\n\t\t\t\t\trequest.onComplete = dumpFifthFetch;\r\n\t\t\t\t\tflickrStore.fetch(request);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction dumpFifthFetch(items, request){\r\n\t\t\t\t\tt.is(11, items.length);\r\n\t\t\t\t\trequest.start = 2;\r\n\t\t\t\t\trequest.count = 20;\r\n\t\t\t\t\trequest.onComplete = dumpSixthFetch;\r\n\t\t\t\t\tflickrStore.fetch(request);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction dumpSixthFetch(items, request){\r\n\t\t\t\t\tt.is(18, items.length);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction completed(items, request){\r\n\t\t\t\t\tt.is(7, items.length);\r\n\t\t\t\t\trequest.start = 1;\r\n\t\t\t\t\trequest.count = 5;\r\n\t\t\t\t\trequest.onComplete = dumpFirstFetch;\r\n\t\t\t\t\tflickrStore.fetch(request);\r\n\t\t\t\t}\r\n\t\t\t\tflickrStore.fetch({count: 7, onComplete: completed, onError: dojo.partial(dojox.data.tests.stores.FlickrStore.error, t, d)});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"ReadAPI:  getLabel\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Flickr can sometimes be slow.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of the getLabel function against a store set that has a label defined.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of the getLabel function against a store set that has a label defined.\r\n\r\n\t\t\t\tvar flickrStore = new dojox.data.FlickrStore();\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items, request){\r\n\t\t\t\t\tt.assertEqual(items.length, 1);\r\n\t\t\t\t\tvar label = flickrStore.getLabel(items[0]);\r\n\t\t\t\t\tt.assertTrue(label !== null);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tflickrStore.fetch({ \tquery: {tags: \"animals\"},\r\n\t\t\t\t\t\t\t\t\tcount: 1,\r\n\t\t\t\t\t\t\t\t\tonComplete: onComplete,\r\n\t\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.FlickrStore.error, t, d)\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"ReadAPI:  getLabelAttributes\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Flickr can sometimes be slow.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of the getLabelAttributes function against a store set that has a label defined.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of the getLabelAttributes function against a store set that has a label defined.\r\n\r\n\t\t\t\tvar flickrStore = new dojox.data.FlickrStore();\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items, request){\r\n\t\t\t\t\tt.assertEqual(items.length, 1);\r\n\t\t\t\t\tvar labelList = flickrStore.getLabelAttributes(items[0]);\r\n\t\t\t\t\tt.assertTrue(dojo.isArray(labelList));\r\n\t\t\t\t\tt.assertEqual(\"title\", labelList[0]);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tflickrStore.fetch({ \tquery: {tags: \"animals\"},\r\n\t\t\t\t\t\t\t\t\tcount: 1,\r\n\t\t\t\t\t\t\t\t\tonComplete: onComplete,\r\n\t\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.FlickrStore.error, t, d)\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"ReadAPI:  getValue\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Flickr can sometimes be slow.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of the getValue function of the store.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of the getValue function of the store.\r\n\t\t\t\tvar flickrStore = new dojox.data.FlickrStore();\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction completedAll(items){\r\n\t\t\t\t\tt.is(1, items.length);\r\n\t\t\t\t\tt.assertTrue(flickrStore.getValue(items[0], \"title\") !== null);\r\n\t\t\t\t\tt.assertTrue(flickrStore.getValue(items[0], \"imageUrl\") !== null);\r\n\t\t\t\t\tt.assertTrue(flickrStore.getValue(items[0], \"imageUrlSmall\") !== null);\r\n\t\t\t\t\tt.assertTrue(flickrStore.getValue(items[0], \"imageUrlMedium\") !== null);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Get one item and look at it.\r\n\t\t\t\tflickrStore.fetch({ count: 1, onComplete: completedAll, onError: dojo.partial(dojox.data.tests.stores.FlickrStore.error, t, d)});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"ReadAPI:  getValues\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Flickr can sometimes be slow.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of the getValue function of the store.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of the getValue function of the store.\r\n\t\t\t\tvar flickrStore = new dojox.data.FlickrStore();\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction completedAll(items){\r\n\t\t\t\t\tt.is(1, items.length);\r\n\t\t\t\t\tt.assertTrue(flickrStore.getValues(items[0], \"title\") instanceof Array);\r\n\t\t\t\t\tt.assertTrue(flickrStore.getValues(items[0], \"description\") instanceof Array);\r\n\t\t\t\t\tt.assertTrue(flickrStore.getValues(items[0], \"imageUrl\") instanceof Array);\r\n\t\t\t\t\tt.assertTrue(flickrStore.getValues(items[0], \"imageUrlSmall\") instanceof Array);\r\n\t\t\t\t\tt.assertTrue(flickrStore.getValues(items[0], \"imageUrlMedium\") instanceof Array);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\t//Get one item and look at it.\r\n\t\t\t\tflickrStore.fetch({ count: 1, onComplete: completedAll, onError: dojo.partial(dojox.data.tests.stores.FlickrStore.error, t, d)});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"ReadAPI:  isItem\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Flickr can sometimes be slow.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of the isItem function of the store\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of the isItem function of the store\r\n\t\t\t\tvar flickrStore = new dojox.data.FlickrStore();\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction completedAll(items){\r\n\t\t\t\t\tt.is(5, items.length);\r\n\t\t\t\t\tfor(var i=0; i < items.length; i++){\r\n\t\t\t\t\t\tt.assertTrue(flickrStore.isItem(items[i]));\r\n\t\t\t\t\t}\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Get everything...\r\n\t\t\t\tflickrStore.fetch({ count: 5, onComplete: completedAll, onError: dojo.partial(dojox.data.tests.stores.FlickrStore.error, t, d)});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"ReadAPI:  hasAttribute\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Flickr can sometimes be slow.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of the hasAttribute function of the store\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of the hasAttribute function of the store\r\n\r\n\t\t\t\tvar flickrStore = new dojox.data.FlickrStore();\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items){\r\n\t\t\t\t\tt.is(1, items.length);\r\n\t\t\t\t\tt.assertTrue(items[0] !== null);\r\n\t\t\t\t\tt.assertTrue(flickrStore.hasAttribute(items[0], \"title\"));\r\n\t\t\t\t\tt.assertTrue(flickrStore.hasAttribute(items[0], \"description\"));\r\n\t\t\t\t\tt.assertTrue(flickrStore.hasAttribute(items[0], \"author\"));\r\n\t\t\t\t\tt.assertTrue(!flickrStore.hasAttribute(items[0], \"Nothing\"));\r\n\t\t\t\t\tt.assertTrue(!flickrStore.hasAttribute(items[0], \"Text\"));\r\n\r\n\t\t\t\t\t//Test that null attributes throw an exception\r\n\t\t\t\t\tvar passed = false;\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\tflickrStore.hasAttribute(items[0], null);\r\n\t\t\t\t\t}catch (e){\r\n\t\t\t\t\t\tpassed = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tt.assertTrue(passed);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Get one item...\r\n\t\t\t\tflickrStore.fetch({ \tquery: {tags: \"animals\"},\r\n\t\t\t\t\t\t\t\t\tcount: 1,\r\n\t\t\t\t\t\t\t\t\tonComplete: onComplete,\r\n\t\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.FlickrStore.error, t, d)\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"ReadAPI:  containsValue\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Flickr can sometimes be slow.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of the containsValue function of the store\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of the containsValue function of the store\r\n\r\n\t\t\t\tvar flickrStore = new dojox.data.FlickrStore();\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items){\r\n\t\t\t\t\tt.is(1, items.length);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Get one item...\r\n\t\t\t\tflickrStore.fetch({ \tquery: {tags: \"animals\"},\r\n\t\t\t\t\t\t\t\t\tcount: 1,\r\n\t\t\t\t\t\t\t\t\tonComplete: onComplete,\r\n\t\t\t\t\t\t\t\t\tonError: dojo.partial(dojox.data.tests.stores.FlickrStore.error, t, d)\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"ReadAPI:  getAttributes\",\r\n\t\t\ttimeout:\t10000, //10 seconds.  Flickr can sometimes be slow.\r\n\t\t\trunTest: function(t) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSimple test of the getAttributes function of the store\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tSimple test of the getAttributes function of the store\r\n\r\n\t\t\t\tvar flickrStore = new dojox.data.FlickrStore();\r\n\r\n\t\t\t\tvar d = new doh.Deferred();\r\n\t\t\t\tfunction onComplete(items){\r\n\t\t\t\t\tt.is(1, items.length);\r\n\t\t\t\t\tt.assertTrue(flickrStore.isItem(items[0]));\r\n\r\n\t\t\t\t\tvar attributes = flickrStore.getAttributes(items[0]);\r\n\t\t\t\t\tt.is(10, attributes.length);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Get everything...\r\n\t\t\t\tflickrStore.fetch({ count: 1, onComplete: onComplete, onError: dojo.partial(dojox.data.tests.stores.FlickrStore.error, t, d)});\r\n\t\t\t\treturn d; //Object\r\n\t\t\t}\r\n\t\t},\r\n\t\tfunction testReadAPI_getFeatures(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getFeatures function of the store\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getFeatures function of the store\r\n\r\n\t\t\tvar flickrStore = new dojox.data.FlickrStore();\r\n\r\n\t\t\tvar features = flickrStore.getFeatures();\r\n\t\t\tvar count = 0;\r\n\t\t\tfor(i in features){\r\n\t\t\t\tt.assertTrue((i === \"dojo.data.api.Read\"));\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t\tt.assertTrue(count === 1);\r\n\t\t},\r\n\t\tfunction testReadAPI_functionConformance(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test read API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test read API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\r\n\t\t\tvar testStore = new dojox.data.FlickrStore();\r\n\t\t\tvar readApi = new dojo.data.api.Read();\r\n\t\t\tvar passed = true;\r\n\r\n\t\t\tfor(i in readApi){\r\n\t\t\t\tif(i.toString().charAt(0) !== '_')\r\n\t\t\t\t{\r\n\t\t\t\t\tvar member = readApi[i];\r\n\t\t\t\t\t//Check that all the 'Read' defined functions exist on the test store.\r\n\t\t\t\t\tif(typeof member === \"function\"){\r\n\t\t\t\t\t\tvar testStoreMember = testStore[i];\r\n\t\t\t\t\t\tif(!(typeof testStoreMember === \"function\")){\r\n\t\t\t\t\t\t\tpassed = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tt.assertTrue(passed);\r\n\t\t}\r\n\t]\r\n);\r\n\r\n"]}