{"version":3,"sources":["data/tests/stores/AppStore.js"],"names":["dojo","provide","require","dojox","data","tests","stores","AppStore","getStore","preventCache","url","moduleUrl","toString","urlPreventCache","doh","register","t","store","d","Deferred","fetch","query","title","onComplete","items","request","assertEqual","length","callback","onError","error","errback","dumpFifthFetch","dumpFourthFetch","start","count","dumpThirdFetch","dumpSecondFetch","dumpFirstFetch","errData","queryOptions","ignoreCase","label","getLabel","assertTrue","labelList","getLabelAttributes","isArray","item","hasAttribute","getValue","values","getValues","isItem","store1","store2","item1","item2","containsValue","order","sort","attribute","descending","i","isItemLoaded","features","getFeatures","attributes","getAttributes","newItem","id","content","author","name","deleteItem","setValue","setValues","email","uri","unsetAttribute","isDirty","revert","getIdentity","idAttrs","getIdentityAttributes","fetchItemByIdentity","identity","onItem","testStore","readApi","api","Read","passed","console","log","writeApi","Write","identityApi","Identity"],"mappings":";;;;;;;AAAAA,KAAKC,QAAQ,oCACbD,KAAKE,QAAQ,uBACbF,KAAKE,QAAQ,sBACbF,KAAKE,QAAQ,uBACbF,KAAKE,QAAQ,0BAEbC,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,SAAW,SAASC,GAEpD,OADAA,IAAeA,EACR,IAAIN,MAAMC,KAAKG,UAAUG,IAAKV,KAAKW,UAAU,0BAA2B,sBAAsBC,WAAYC,gBAAiBJ,KAGnIK,IAAIC,SAAS,oCAEX,SAA+BC,GAK9B,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAEzCU,EAAI,IAAIJ,IAAIK,SAShB,OADAF,EAAMG,OAAOC,OAAOC,MAAM,KAAMC,WAPhC,SAAoBC,EAAOC,GAC1BT,EAAEU,YAAY,EAAGF,EAAMG,QACvBT,EAAEU,UAAS,IAK4CC,QAHxD,SAAiBC,EAAOL,GACvBP,EAAEa,QAAQD,MAGJZ,GAER,SAA4CF,GAK3C,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,UAAS,GAElDU,EAAI,IAAIJ,IAAIK,SAShB,OADAF,EAAMG,OAAOC,OAAOC,MAAM,KAAMC,WAPhC,SAAoBC,EAAOC,GAC1BT,EAAEU,YAAY,EAAGF,EAAMG,QACvBT,EAAEU,UAAS,IAK4CC,QAHxD,SAAiBC,EAAOL,GACvBP,EAAEa,QAAQD,MAGJZ,GAER,SAA+BF,GAK9B,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAEzCU,EAAI,IAAIJ,IAAIK,SAShB,OADAF,EAAMG,OAAOC,OAAOC,MAAM,0BAA2BC,WAPrD,SAAoBC,EAAOC,GAC1BT,EAAEU,YAAY,EAAGF,EAAMG,QACvBT,EAAEU,UAAS,IAKiEC,QAH7E,SAAiBC,EAAOL,GACvBP,EAAEa,QAAQD,MAGJZ,GAER,SAAkCF,GAKjC,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAEzCU,EAAI,IAAIJ,IAAIK,SAEhB,SAASa,EAAeR,EAAOC,GAC9BT,EAAEU,YAAY,EAAGF,EAAMG,QACvBT,EAAEU,UAAS,GAGZ,SAASK,EAAgBT,EAAOC,GAC/BT,EAAEU,YAAY,EAAGF,EAAMG,QACvBF,EAAQS,MAAQ,EAChBT,EAAQU,MAAQ,IAChBV,EAAQF,WAAaS,EACrBf,EAAMG,MAAMK,GAGb,SAASW,EAAeZ,EAAOC,GAC9BT,EAAEU,YAAY,EAAGF,EAAMG,QACvBF,EAAQS,MAAQ,EAChBT,EAAQU,MAAQ,GAChBV,EAAQF,WAAaU,EACrBhB,EAAMG,MAAMK,GAGb,SAASY,EAAgBb,EAAOC,GAC/BT,EAAEU,YAAY,EAAGF,EAAMG,QACvBF,EAAQS,MAAQ,EAChBT,EAAQU,MAAQ,EAChBV,EAAQF,WAAaa,EACrBnB,EAAMG,MAAMK,GAGb,SAASa,EAAed,EAAOC,GAC9BT,EAAEU,YAAY,EAAGF,EAAMG,QACvBF,EAAQS,MAAQ,EAChBT,EAAQU,MAAQ,EAChBV,EAAQF,WAAac,EACrBpB,EAAMG,MAAMK,GAgBb,OADAR,EAAMG,OAAOG,WAZb,SAAmBC,EAAOC,GACzBT,EAAEU,YAAY,EAAGF,EAAMG,QACvBF,EAAQS,MAAQ,EAChBT,EAAQU,MAAQ,EAChBV,EAAQF,WAAae,EACrBrB,EAAMG,MAAMK,IAOuBI,QAJpC,SAAeU,EAASd,GACvBP,EAAEa,QAAQQ,MAIJrB,GAER,SAAoCF,GAKnC,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WACzCU,EAAI,IAAIJ,IAAIK,SAShB,OADAF,EAAMG,OAAOC,OAAOC,MAAM,0BAA2BC,WAPrD,SAAoBC,EAAOC,GAC1BT,EAAEU,YAAY,EAAGF,EAAMG,QACvBT,EAAEU,UAAS,IAKiEC,QAH7E,SAAiBC,EAAOL,GACvBP,EAAEa,QAAQD,MAGJZ,GAER,SAAoCF,GAKnC,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WACzCU,EAAI,IAAIJ,IAAIK,SAShB,OADAF,EAAMG,OAAOC,OAAOC,MAAM,UAAWC,WAPrC,SAAoBC,EAAOC,GAC1BT,EAAEU,YAAY,EAAGF,EAAMG,QACvBT,EAAEU,UAAS,IAKiDC,QAH7D,SAAiBC,EAAOL,GACvBP,EAAEa,QAAQD,MAGJZ,GAER,SAAmDF,GAKlD,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WACzCU,EAAI,IAAIJ,IAAIK,SAShB,OADAF,EAAMG,OAAOC,OAAOC,MAAM,UAAWkB,cAAeC,YAAY,GAAOlB,WAPvE,SAAoBC,EAAOC,GAC1BT,EAAEU,YAAY,EAAGF,EAAMG,QACvBT,EAAEU,UAAS,IAKmFC,QAH/F,SAAiBC,EAAOL,GACvBP,EAAEa,QAAQD,MAGJZ,GAGR,SAA8BF,GAM7B,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAEzCU,EAAI,IAAIJ,IAAIK,SAYhB,OADAF,EAAMG,OAAOC,OAAOC,MAAM,0BAA2BC,WAVrD,SAAoBC,EAAOC,GAC1BT,EAAEU,YAAYF,EAAMG,OAAQ,GAC5B,IAAIe,EAAQzB,EAAM0B,SAASnB,EAAM,IACjCR,EAAE4B,WAAqB,OAAVF,GACb1B,EAAEU,YAAY,yBAA0BgB,GACxCxB,EAAEU,UAAS,IAKiEC,QAH7E,SAAiBC,EAAOL,GACvBP,EAAEa,QAAQD,MAGJZ,GAER,SAAwCF,GAMvC,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAEzCU,EAAI,IAAIJ,IAAIK,SAYhB,OADAF,EAAMG,OAAOC,OAAOC,MAAM,0BAA2BC,WAVrD,SAAoBC,EAAOC,GAC1BT,EAAEU,YAAYF,EAAMG,OAAQ,GAC5B,IAAIkB,EAAY5B,EAAM6B,mBAAmBtB,EAAM,IAC/CR,EAAE4B,WAAW5C,KAAK+C,QAAQF,IAC1B7B,EAAEU,YAAY,QAASmB,EAAU,IACjC3B,EAAEU,UAAS,IAKiEC,QAH7E,SAAiBC,EAAOL,GACvBP,EAAEa,QAAQD,MAGJZ,GAGR,SAA8BF,GAK5B,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAEzCU,EAAI,IAAIJ,IAAIK,SAYhB,OADAF,EAAMG,OAAOC,OAAOC,MAAM,0BAA2BC,WAVrD,SAAoBC,EAAOC,GAC1BT,EAAEU,YAAY,EAAGF,EAAMG,QACvB,IAAIqB,EAAOxB,EAAM,GACjBR,EAAE4B,WAAW3B,EAAMgC,aAAaD,EAAK,OACrChC,EAAEU,YAAYT,EAAMiC,SAASF,EAAK,MAAO,kDACzC9B,EAAEU,UAAS,IAKiEC,QAH7E,SAAiBC,EAAOL,GACvBP,EAAEa,QAAQD,MAGJZ,GAET,SAA+BF,GAK7B,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAEzCU,EAAI,IAAIJ,IAAIK,SAchB,OADAF,EAAMG,OAAOC,OAAOC,MAAM,0BAA2BC,WAZrD,SAAoBC,EAAOC,GAC1BT,EAAEU,YAAY,EAAGF,EAAMG,QACvB,IAAIqB,EAAOxB,EAAM,GACjBR,EAAE4B,WAAW3B,EAAMgC,aAAaD,EAAK,OACrC,IAAIG,EAASlC,EAAMmC,UAAUJ,EAAK,MAClChC,EAAEU,YAAY,EAAEyB,EAAOxB,QACvBX,EAAEU,YAAYyB,EAAO,GAAI,kDACzBjC,EAAEU,UAAS,IAKiEC,QAH7E,SAAiBC,EAAOL,GACvBP,EAAEa,QAAQD,MAGJZ,GAET,SAA4BF,GAK1B,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAEzCU,EAAI,IAAIJ,IAAIK,SAchB,OADAF,EAAMG,OAAOC,OAAOC,MAAM,0BAA2BC,WAZrD,SAAoBC,EAAOC,GAC3BT,EAAEU,YAAY,EAAGF,EAAMG,QACvB,IAAIqB,EAAOxB,EAAM,GACjBR,EAAE4B,WAAW3B,EAAMoC,OAAOL,IAC1BhC,EAAE4B,YAAY3B,EAAMoC,YACpBrC,EAAE4B,YAAY3B,EAAMoC,OAAO,QAC3BrC,EAAE4B,YAAY3B,EAAMoC,OAAO,IAC3BnC,EAAEU,UAAS,IAKkEC,QAH7E,SAAiBC,EAAOL,GACvBP,EAAEa,QAAQD,MAGJZ,GAET,SAAuCF,GAKtC,IAAIsC,EAASnD,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAC1C+C,EAASpD,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAE1CU,EAAI,IAAIJ,IAAIK,SAEhB,SAASU,EAAQC,EAAOL,GACvBP,EAAEa,QAAQD,GAmBX,OADAwB,EAAOlC,OAAOC,OAAOC,MAAM,0BAA2BC,WAftD,SAAqBC,EAAOC,GAC3BT,EAAEU,YAAY,EAAGF,EAAMG,QACvB,IAAI6B,EAAQhC,EAAM,GAClBR,EAAE4B,WAAWU,EAAOD,OAAOG,IAU3BD,EAAOnC,OAAOC,OAAOC,MAAM,iBAAkBC,WAR7C,SAAqBC,EAAOC,GAC3BT,EAAEU,YAAY,EAAGF,EAAMG,QACvB,IAAI8B,EAAQjC,EAAM,GAClBR,EAAE4B,WAAWW,EAAOF,OAAOI,IAC3BzC,EAAE4B,YAAYU,EAAOD,OAAOI,IAC5BzC,EAAE4B,YAAYW,EAAOF,OAAOG,IAC5BtC,EAAEU,UAAS,IAE0DC,QAASA,KAEDA,QAASA,IACjFX,GAER,SAAkCF,GAKjC,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAEzCU,EAAI,IAAIJ,IAAIK,SAehB,OADAF,EAAMG,OAAOC,OAAOC,MAAM,0BAA2BC,WARrD,SAAoBC,EAAOC,GAC1BT,EAAEU,YAAY,EAAGF,EAAMG,QACvB,IAAIqB,EAAOxB,EAAM,GACjBR,EAAE4B,WAAW3B,EAAMgC,aAAaD,EAAK,UACrChC,EAAE4B,WAAW3B,EAAMgC,aAAaD,EAAK,YACrChC,EAAE4B,YAAY3B,EAAMgC,aAAaD,EAAK,QACtC9B,EAAEU,UAAS,IAEiEC,QAZ7E,SAAiBC,EAAOL,GACvBP,EAAEa,QAAQD,MAYJZ,GAER,SAAmCF,GAKlC,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAEzCU,EAAI,IAAIJ,IAAIK,SAYhB,OADAF,EAAMG,OAAOC,OAAOC,MAAM,0BAA2BC,WAVrD,SAAoBC,EAAOC,GAC1BT,EAAEU,YAAY,EAAGF,EAAMG,QACvB,IAAIqB,EAAOxB,EAAM,GACjBR,EAAE4B,WAAW3B,EAAMyC,cAAcV,EAAK,QAAS,2BAC/ChC,EAAE4B,YAAY3B,EAAMyC,cAAcV,EAAK,QAAS,QAChD9B,EAAEU,UAAS,IAKiEC,QAH7E,SAAiBC,EAAOL,GACvBP,EAAEa,QAAQD,MAGJZ,GAER,SAAoCF,GAKnC,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAIzCmD,GAAU,gBACV,gBACA,gBACA,gBACA,gBACA,gBACA,yBACA,0BAEAzC,EAAI,IAAIJ,IAAIK,SAehB,OADAF,EAAMG,OAAOC,OAAOC,MAAM,KAAMsC,OADTC,UAAW,QAASC,YAAY,IACDvC,WAbtD,SAAoBC,EAAOC,GAC1BT,EAAEU,YAAY,EAAGF,EAAMG,QAEvB,IAAI,IAAIoC,EAAI,EAAGA,EAAIvC,EAAMG,OAAQoC,IAChC/C,EAAEU,YAAYiC,EAAMI,GAAI9C,EAAMiC,SAAS1B,EAAMuC,GAAG,UAEjD7C,EAAEU,UAAS,IAOkEC,QAL9E,SAAiBC,EAAOL,GACvBP,EAAEa,QAAQD,MAKJZ,GAER,SAAmCF,GAKlC,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAIzCmD,GAAU,yBACV,yBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBAEAzC,EAAI,IAAIJ,IAAIK,SAehB,OADAF,EAAMG,OAAOC,OAAOC,MAAM,KAAMsC,OADTC,UAAW,UACoBtC,WAbtD,SAAoBC,EAAOC,GAC1BT,EAAEU,YAAY,EAAGF,EAAMG,QAEvB,IADA,IACQoC,EAAI,EAAGA,EAAIvC,EAAMG,OAAQoC,IAChC/C,EAAEU,YAAYiC,EAAMI,GAAI9C,EAAMiC,SAAS1B,EAAMuC,GAAG,UAEjD7C,EAAEU,UAAS,IAOkEC,QAL9E,SAAiBC,EAAOL,GACvBP,EAAEa,QAAQD,MAKJZ,GAER,SAAkCF,GAKjC,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAEzCU,EAAI,IAAIJ,IAAIK,SAWhB,OADAF,EAAMG,OAAOC,OAAOC,MAAM,0BAA2BC,WATrD,SAAoBC,EAAOC,GAC1BT,EAAEU,YAAY,EAAGF,EAAMG,QACvB,IAAIqB,EAAOxB,EAAM,GACjBR,EAAE4B,WAAW3B,EAAM+C,aAAahB,IAChC9B,EAAEU,UAAS,IAKiEC,QAH7E,SAAiBC,EAAOL,GACvBP,EAAEa,QAAQD,MAGJZ,GAER,SAAiCF,GAMhC,IACIiD,EADQ9D,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WACxB0D,cACjB/B,EAAQ,EACZ,IAAI,IAAI4B,KAAKE,EACZjD,EAAE4B,WAAmB,uBAANmB,GAAoC,wBAANA,GAAqC,2BAANA,GAC5E5B,IAEDnB,EAAEU,YAAY,EAAGS,IAElB,SAAmCnB,GAKlC,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAEzCU,EAAI,IAAIJ,IAAIK,SAYhB,OADAF,EAAMG,OAAOC,OAAOC,MAAM,0BAA2BC,WAVrD,SAAoBC,EAAOC,GAC1BT,EAAEU,YAAY,EAAGF,EAAMG,QACvB,IAAIqB,EAAOxB,EAAM,GACb2C,EAAalD,EAAMmD,cAAcpB,GACrChC,EAAEU,YAAY,EAAEyC,EAAWxC,QAC3BT,EAAEU,UAAS,IAKiEC,QAH7E,SAAiBC,EAAOL,GACvBP,EAAEa,QAAQD,MAGJZ,GAER,SAA8BF,GAK7B,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAE7CS,EAAMoD,SAAS/C,MAAO,YAAagD,GAAI,QAASC,QAAS,uBAAwBC,QAASC,KAAK,SAE/F,IAAIvD,EAAI,IAAIJ,IAAIK,SAYhB,OADAF,EAAMG,OAAOC,OAAOC,MAAM,aAAcC,WAVxC,SAAoBC,EAAOC,GAC1BT,EAAEU,YAAY,EAAGF,EAAMG,QACvB,IAAIqB,EAAOxB,EAAM,GACjBR,EAAE4B,WAAW3B,EAAMyC,cAAcV,EAAK,QAAS,cAC/ChC,EAAE4B,WAAW3B,EAAMyC,cAAcV,EAAM,UAAW,yBAClD9B,EAAEU,UAAS,IAKoDC,QAHhE,SAAiBC,EAAOL,GACvBP,EAAEa,QAAQD,MAGJZ,GAER,SAAwCF,GAKvC,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAE7CS,EAAMoD,SAAS/C,MAAO,YAAagD,GAAI,QAASC,QAAS,uBAAwBC,QAASC,KAAK,SAE/F,IAAIvD,EAAI,IAAIJ,IAAIK,SAEhB,SAASU,EAAQC,EAAOL,GACvBP,EAAEa,QAAQD,GAqBX,OADAb,EAAMG,OAAOC,OAAOC,MAAM,aAAcC,WAjBxC,SAAoBC,EAAOC,GAC1BT,EAAEU,YAAY,EAAGF,EAAMG,QACvB,IAAIqB,EAAOxB,EAAM,GACjBR,EAAE4B,WAAW3B,EAAMyC,cAAcV,EAAK,QAAS,cAC/ChC,EAAE4B,WAAW3B,EAAMyC,cAAcV,EAAM,UAAW,yBAElD/B,EAAMoD,SAAS/C,MAAO,aAAcgD,GAAI,QAASC,QAAS,uBAAwBC,SAAUC,KAAK,UASjGxD,EAAMG,OAAOC,OAAOC,MAAM,cAAeC,WAPzC,SAAqBC,EAAOC,GAC3BT,EAAEU,YAAY,EAAGF,EAAMG,QACvB,IAAIqB,EAAOxB,EAAM,GACjBR,EAAE4B,WAAW3B,EAAMyC,cAAcV,EAAM,QAAS,eAChD9B,EAAEU,UAAS,IAGsDC,QAASA,KAEZA,QAASA,IAClEX,GAER,SAAiCF,GAKhC,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAEzCU,EAAI,IAAIJ,IAAIK,SAEhB,SAASU,EAAQC,EAAOL,GACvBP,EAAEa,QAAQD,GAgBX,OADAb,EAAMG,OAAOC,OAAOC,MAAM,0BAA2BC,WAZrD,SAAoBC,EAAOC,GAC1BT,EAAEU,YAAY,EAAGF,EAAMG,QACvB,IAAIqB,EAAOxB,EAAM,GACjBR,EAAE4B,WAAW3B,EAAMyC,cAAcV,EAAK,QAAS,2BAC/C/B,EAAMyD,WAAW1B,GAMjB/B,EAAMG,OAAOC,OAAOC,MAAM,0BAA2BC,WAJrD,SAAqBC,EAAOC,GAC3BT,EAAEU,YAAY,EAAGF,EAAMG,QACvBT,EAAEU,UAAS,IAEkEC,QAASA,KAEXA,QAASA,IAC/EX,GAER,SAA+BF,GAK9B,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAEzCU,EAAI,IAAIJ,IAAIK,SAahB,OADAF,EAAMG,OAAOC,OAAOC,MAAM,0BAA2BC,WAXrD,SAAoBC,EAAOC,GAC1BT,EAAEU,YAAY,EAAGF,EAAMG,QACvB,IAAIqB,EAAOxB,EAAM,GACjBR,EAAE4B,WAAW3B,EAAMyC,cAAcV,EAAK,QAAS,2BAC/C/B,EAAM0D,SAAS3B,EAAM,QAAS,gBAC9BhC,EAAEU,YAAYT,EAAMiC,SAASF,EAAK,SAAU,gBAC5C9B,EAAEU,UAAS,IAKiEC,QAH7E,SAAiBC,EAAOL,GACvBP,EAAEa,QAAQD,MAGJZ,GAER,SAAgCF,GAK/B,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAEzCU,EAAI,IAAIJ,IAAIK,SAiBhB,OADAF,EAAMG,OAAOC,OAAOC,MAAM,0BAA2BC,WAfrD,SAAoBC,EAAOC,GAC1BT,EAAEU,YAAY,EAAGF,EAAMG,QACvB,IAAIqB,EAAOxB,EAAM,GACjBR,EAAE4B,WAAW3B,EAAMyC,cAAcV,EAAK,QAAS,2BAC/C/B,EAAM2D,UAAU5B,EAAM,WAAYyB,KAAM,SAAUA,KAAM,OAAQI,MAAM,mBAAoBC,IAAI,6BAC9F,IAAI3B,EAASlC,EAAMmC,UAAUJ,EAAK,UAClChC,EAAEU,YAAYyB,EAAO,GAAGsB,KAAM,QAC9BzD,EAAEU,YAAYyB,EAAO,GAAGsB,KAAM,QAC9BzD,EAAEU,YAAYyB,EAAO,GAAG0B,MAAO,oBAC/B7D,EAAEU,YAAYyB,EAAO,GAAG2B,IAAK,2BAC7B5D,EAAEU,UAAS,IAKiEC,QAH7E,SAAiBC,EAAOL,GACvBP,EAAEa,QAAQD,MAGJZ,GAER,SAAqCF,GAKpC,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAEzCU,EAAI,IAAIJ,IAAIK,SAchB,OADAF,EAAMG,OAAOC,OAAOC,MAAM,0BAA2BC,WAZrD,SAAoBC,EAAOC,GAC1BT,EAAEU,YAAY,EAAGF,EAAMG,QACvB,IAAIqB,EAAOxB,EAAM,GACjBR,EAAE4B,WAAW3B,EAAMyC,cAAcV,EAAK,QAAS,2BAC/C/B,EAAM8D,eAAe/B,EAAK,SAC1BhC,EAAE4B,YAAY3B,EAAMgC,aAAaD,EAAK,UACtChC,EAAE4B,WAAW3B,EAAM+D,QAAQhC,IAC3B9B,EAAEU,UAAS,IAKiEC,QAH7E,SAAiBC,EAAOL,GACvBP,EAAEa,QAAQD,MAGJZ,GAER,SAA8BF,GAK7B,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAEzCU,EAAI,IAAIJ,IAAIK,SAchB,OADAF,EAAMG,OAAOC,OAAOC,MAAM,0BAA2BC,WAZrD,SAAoBC,EAAOC,GAC1BT,EAAEU,YAAY,EAAGF,EAAMG,QACvB,IAAIqB,EAAOxB,EAAM,GACjBR,EAAE4B,WAAW3B,EAAMyC,cAAcV,EAAK,QAAS,2BAC/C/B,EAAM0D,SAAS3B,EAAM,QAAS,gBAC9BhC,EAAEU,YAAYT,EAAMiC,SAASF,EAAK,SAAU,gBAC5ChC,EAAE4B,WAAW3B,EAAM+D,QAAQhC,IAC3B9B,EAAEU,UAAS,IAKiEC,QAH7E,SAAiBC,EAAOL,GACvBP,EAAEa,QAAQD,MAGJZ,GAER,SAA6BF,GAK5B,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAEzCU,EAAI,IAAIJ,IAAIK,SAChB,SAASU,EAAQC,EAAOL,GACvBP,EAAEa,QAAQD,GAsBX,OADAb,EAAMG,OAAOC,OAAOC,MAAM,0BAA2BC,WAnBrD,SAAoBC,EAAOC,GAC1BT,EAAEU,YAAY,EAAGF,EAAMG,QACvB,IAAIqB,EAAOxB,EAAM,GACjBR,EAAE4B,WAAW3B,EAAMyC,cAAcV,EAAK,QAAS,2BAC/ChC,EAAE4B,YAAY3B,EAAM+D,QAAQhC,IAC5B/B,EAAM0D,SAAS3B,EAAM,QAAS,gBAC9BhC,EAAEU,YAAYT,EAAMiC,SAASF,EAAK,SAAU,gBAC5ChC,EAAE4B,WAAW3B,EAAM+D,QAAQhC,IAC3B/B,EAAMgE,SASNhE,EAAMG,OAAOC,OAAOC,MAAM,0BAA2BC,WANrD,SAAqBC,EAAOC,GAC3BT,EAAEU,YAAY,EAAGF,EAAMG,QACvB,IAAIqB,EAAOxB,EAAM,GACjBR,EAAE4B,WAAW3B,EAAMyC,cAAcV,EAAK,QAAS,2BAC/C9B,EAAEU,UAAS,IAEkEC,QAASA,KAEXA,QAASA,IAC/EX,GAER,SAA8BF,GAK7B,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAEzCU,EAAI,IAAIJ,IAAIK,SAChB,SAASU,EAAQC,EAAOL,GACvBP,EAAEa,QAAQD,GA2BX,OADAb,EAAMG,OAAOC,OAAOC,MAAM,0BAA2BC,WAxBrD,SAAoBC,EAAOC,GAC1BT,EAAEU,YAAY,EAAGF,EAAMG,QACvB,IAAIqB,EAAOxB,EAAM,GACjBR,EAAE4B,WAAW3B,EAAMyC,cAAcV,EAAK,QAAS,2BAC/C/B,EAAMyD,WAAW1B,GAkBjB/B,EAAMG,OAAOC,OAAOC,MAAM,KAAMC,WAhBhC,SAAqBC,EAAOC,GAC3BT,EAAEU,YAAY,EAAGF,EAAMG,QACvBV,EAAMoD,SAAS/C,MAAO,YAAagD,GAAI,QAASC,QAAS,uBAAwBC,QAASC,KAAK,SAY/FxD,EAAMG,OAAOC,OAAOC,MAAM,aAAcC,WAVxC,SAAqBC,EAAOC,GAC3BT,EAAEU,YAAY,EAAGF,EAAMG,QACvBV,EAAMgE,SAMNhE,EAAMG,OAAOC,OAAOC,MAAM,aAAcC,WAJxC,SAAqBC,EAAOC,GAC3BT,EAAEU,YAAY,EAAGF,EAAMG,QACvBT,EAAEU,UAAS,IAEqDC,QAASA,KAEVA,QAASA,KAElBA,QAASA,KAEUA,QAASA,IAC/EX,GAGR,SAAiCF,GAKhC,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAEzCU,EAAI,IAAIJ,IAAIK,SAWhB,OADAF,EAAMG,OAAOC,OAAOC,MAAM,0BAA2BC,WATrD,SAAoBC,EAAOC,GAC1BT,EAAEU,YAAY,EAAGF,EAAMG,QACvB,IAAI2C,EAAKrD,EAAMiE,YAAY1D,EAAM,IACjCR,EAAEU,YAAY,iDAAiD4C,GAC/DpD,EAAEU,UAAS,IAKiEC,QAH7E,SAAiBC,EAAOL,GACvBP,EAAEa,QAAQD,MAGJZ,GAGR,SAA2CF,GAK1C,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAEzCU,EAAI,IAAIJ,IAAIK,SAYhB,OADAF,EAAMG,OAAOC,OAAOC,MAAM,0BAA2BC,WAVrD,SAAoBC,EAAOC,GAC1BT,EAAEU,YAAY,EAAGF,EAAMG,QACvB,IAAIwD,EAAUlE,EAAMmE,sBAAsB5D,EAAM,IAChDR,EAAEU,YAAY,EAAGyD,EAAQxD,QACzBX,EAAEU,YAAY,KAAMyD,EAAQ,IAC5BjE,EAAEU,UAAS,IAKiEC,QAH7E,SAAiBC,EAAOL,GACvBP,EAAEa,QAAQD,MAGJZ,GAGR,SAAyCF,GAKxC,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAEzCU,EAAI,IAAIJ,IAAIK,SAUhB,OADAF,EAAMoE,qBAAqBC,SAAU,iDAAkDC,OARvF,SAAgBvC,EAAMvB,GACrB,IAAI6C,EAAKrD,EAAMiE,YAAYlC,GAC3BhC,EAAEU,YAAY,iDAAiD4C,GAC/DpD,EAAEU,UAAS,IAK2FC,QAHvG,SAAiBC,EAAOL,GACvBP,EAAEa,QAAQD,MAGJZ,GAGR,SAA+CF,GAK9C,IAAIC,EAAQd,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAEzCU,EAAI,IAAIJ,IAAIK,SAShB,OADAF,EAAMoE,qBAAqBC,SAAU,sDAAuDC,OAP5F,SAAgBvC,EAAMvB,GACrBT,EAAE4B,WAAoB,OAATI,GACb9B,EAAEU,UAAS,IAKgGC,QAH5G,SAAiBC,EAAOL,GACvBP,EAAEa,QAAQD,MAGJZ,GAGR,SAAyCF,GAKxC,IAAIwE,EAAYrF,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAC7CiF,EAAU,IAAIzF,KAAKI,KAAKsF,IAAIC,KAC5BC,GAAS,EAEb,IAAI,IAAI7B,KAAK0B,EAAQ,CAGpB,GAAqB,mBAFRA,EAAQ1B,GAIpB,GAAgC,mBADVyB,EAAUzB,GACY,CAC3C8B,QAAQC,IAAI,2BAA6B/B,EAAI,KAC7C6B,GAAS,EACT,OAIH5E,EAAE4B,WAAWgD,IAEd,SAA0C5E,GAKzC,IAAIwE,EAAYrF,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAC7CuF,EAAW,IAAI/F,KAAKI,KAAKsF,IAAIM,MAC7BJ,GAAS,EAEb,IAAI,IAAI7B,KAAKgC,EAAS,CAGrB,GAAqB,mBAFRA,EAAShC,GAIrB,GAAgC,mBADVyB,EAAUzB,GACY,CAC3C6B,GAAS,EACT,OAIH5E,EAAE4B,WAAWgD,IAEd,SAA6C5E,GAK5C,IAAIwE,EAAYrF,MAAMC,KAAKC,MAAMC,OAAOC,SAASC,WAC7CyF,EAAc,IAAIjG,KAAKI,KAAKsF,IAAIQ,SAChCN,GAAS,EAEb,IAAI,IAAI7B,KAAKkC,EAAY,CAGxB,GAAqB,mBAFRA,EAAYlC,GAIxB,GAAgC,mBADVyB,EAAUzB,GACY,CAC3C6B,GAAS,EACT,OAIH5E,EAAE4B,WAAWgD","file":"../../../../data/tests/stores/AppStore.js","sourcesContent":["dojo.provide(\"dojox.data.tests.stores.AppStore\");\r\ndojo.require(\"dojox.data.AppStore\");\r\ndojo.require(\"dojo.data.api.Read\");\r\ndojo.require(\"dojo.data.api.Write\");\r\ndojo.require(\"dojo.data.api.Identity\");\r\n\r\ndojox.data.tests.stores.AppStore.getStore = function(preventCache){\r\n\tpreventCache = preventCache?true:false;\r\n\treturn new dojox.data.AppStore({url: dojo.moduleUrl('dojox.atom.tests.widget', 'samplefeedEdit.xml').toString(), urlPreventCache: preventCache});\r\n};\r\n\r\ndoh.register(\"dojox.data.tests.stores.AppStore\",\r\n\t[\r\n\t\tfunction testReadAPI_fetch_all(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching all items\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching all items\r\n\t\t\tvar store = dojox.data.tests.stores.AppStore.getStore();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(8, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request){\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{title:\"*\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_all_preventCache(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching all items\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching all items\r\n\t\t\tvar store = dojox.data.tests.stores.AppStore.getStore(true);\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(8, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request){\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{title:\"*\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_one(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching one item\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching one item\r\n\t\t\tvar store = dojox.data.tests.stores.AppStore.getStore();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request){\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{title:\"Test Editable Entry #1\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_paging(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of paging\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of paging\r\n\t\t\tvar store = dojox.data.tests.stores.AppStore.getStore();\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\r\n\t\t\tfunction dumpFifthFetch(items, request){\r\n\t\t\t\tt.assertEqual(0, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfunction dumpFourthFetch(items, request){\r\n\t\t\t\tt.assertEqual(6, items.length);\r\n\t\t\t\trequest.start = 9;\r\n\t\t\t\trequest.count = 100;\r\n\t\t\t\trequest.onComplete = dumpFifthFetch;\r\n\t\t\t\tstore.fetch(request);\r\n\t\t\t}\r\n\r\n\t\t\tfunction dumpThirdFetch(items, request){\r\n\t\t\t\tt.assertEqual(5, items.length);\r\n\t\t\t\trequest.start = 2;\r\n\t\t\t\trequest.count = 20;\r\n\t\t\t\trequest.onComplete = dumpFourthFetch;\r\n\t\t\t\tstore.fetch(request);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfunction dumpSecondFetch(items, request){\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\trequest.start = 0;\r\n\t\t\t\trequest.count = 5;\r\n\t\t\t\trequest.onComplete = dumpThirdFetch;\r\n\t\t\t\tstore.fetch(request);\r\n\t\t\t}\r\n\r\n\t\t\tfunction dumpFirstFetch(items, request){\r\n\t\t\t\tt.assertEqual(5, items.length);\r\n\t\t\t\trequest.start = 3;\r\n\t\t\t\trequest.count = 1;\r\n\t\t\t\trequest.onComplete = dumpSecondFetch;\r\n\t\t\t\tstore.fetch(request);\r\n\t\t\t}\r\n\r\n\t\t\tfunction completed(items, request){\r\n\t\t\t\tt.assertEqual(8, items.length);\r\n\t\t\t\trequest.start = 1;\r\n\t\t\t\trequest.count = 5;\r\n\t\t\t\trequest.onComplete = dumpFirstFetch;\r\n\t\t\t\tstore.fetch(request);\r\n\t\t\t}\r\n\r\n\t\t\tfunction error(errData, request){\r\n\t\t\t\td.errback(errData);\r\n\t\t\t}\r\n\r\n\t\t\tstore.fetch({onComplete: completed, onError: error});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_pattern0(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching one item with ? pattern match\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching one item with ? pattern match\r\n\t\t\tvar store = dojox.data.tests.stores.AppStore.getStore();\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request){\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{title:\"?est Editable Entry #1\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_pattern1(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching one item with * pattern match\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching one item with * pattern match\r\n\t\t\tvar store = dojox.data.tests.stores.AppStore.getStore();\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(8, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request){\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{title:\"*Test*\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_fetch_pattern_caseInsensitive(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching one item with * pattern match case insensitive\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching one item with * pattern match case insensitive\r\n\t\t\tvar store = dojox.data.tests.stores.AppStore.getStore();\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(8, items.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request){\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{title:\"*test*\"}, queryOptions: {ignoreCase: true}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\r\n\t\tfunction testReadAPI_getLabel(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getLabel function against a store set that has a label defined.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getLabel function against a store set that has a label defined.\r\n\r\n\t\t\tvar store = dojox.data.tests.stores.AppStore.getStore();\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(items.length, 1);\r\n\t\t\t\tvar label = store.getLabel(items[0]);\r\n\t\t\t\tt.assertTrue(label !== null);\r\n\t\t\t\tt.assertEqual(\"Test Editable Entry #1\", label);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request){\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{title:\"Test Editable Entry #1\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d;\r\n\t\t},\r\n\t\tfunction testReadAPI_getLabelAttributes(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getLabelAttributes function against a store set that has a label defined.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getLabelAttributes function against a store set that has a label defined.\r\n\r\n\t\t\tvar store = dojox.data.tests.stores.AppStore.getStore();\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(items.length, 1);\r\n\t\t\t\tvar labelList = store.getLabelAttributes(items[0]);\r\n\t\t\t\tt.assertTrue(dojo.isArray(labelList));\r\n\t\t\t\tt.assertEqual(\"title\", labelList[0]);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request){\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{title:\"Test Editable Entry #1\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d;\r\n\t\t},\r\n\r\n\t\tfunction testReadAPI_getValue(t){\r\n\t\t\t // summary:\r\n\t\t\t //\t\tSimple test of the getValue API\r\n\t\t\t // description:\r\n\t\t\t //\t\tSimple test of the getValue API\r\n\t\t\t var store = dojox.data.tests.stores.AppStore.getStore();\r\n\r\n\t\t\t var d = new doh.Deferred();\r\n\t\t\t function onComplete(items, request){\r\n\t\t\t\t t.assertEqual(1, items.length);\r\n\t\t\t\t var item = items[0];\r\n\t\t\t\t t.assertTrue(store.hasAttribute(item,\"id\"));\r\n\t\t\t\t t.assertEqual(store.getValue(item,\"id\"), \"http://example.com/samplefeedEdit.xml/entry/10\");\r\n\t\t\t\t d.callback(true);\r\n\t\t\t }\r\n\t\t\t function onError(error, request){\r\n\t\t\t\t d.errback(error);\r\n\t\t\t }\r\n\t\t\t store.fetch({query:{title:\"Test Editable Entry #1\"}, onComplete: onComplete, onError: onError});\r\n\t\t\t return d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_getValues(t){\r\n\t\t\t // summary:\r\n\t\t\t //\t\tSimple test of the getValues API\r\n\t\t\t // description:\r\n\t\t\t //\t\tSimple test of the getValues API\r\n\t\t\t var store = dojox.data.tests.stores.AppStore.getStore();\r\n\r\n\t\t\t var d = new doh.Deferred();\r\n\t\t\t function onComplete(items, request){\r\n\t\t\t\t t.assertEqual(1, items.length);\r\n\t\t\t\t var item = items[0];\r\n\t\t\t\t t.assertTrue(store.hasAttribute(item,\"id\"));\r\n\t\t\t\t var values = store.getValues(item,\"id\");\r\n\t\t\t\t t.assertEqual(1,values.length);\r\n\t\t\t\t t.assertEqual(values[0], \"http://example.com/samplefeedEdit.xml/entry/10\");\r\n\t\t\t\t d.callback(true);\r\n\t\t\t }\r\n\t\t\t function onError(error, request){\r\n\t\t\t\t d.errback(error);\r\n\t\t\t }\r\n\t\t\t store.fetch({query:{title:\"Test Editable Entry #1\"}, onComplete: onComplete, onError: onError});\r\n\t\t\t return d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_isItem(t){\r\n\t\t\t // summary:\r\n\t\t\t //\t\tSimple test of the isItem API\r\n\t\t\t // description:\r\n\t\t\t //\t\tSimple test of the isItem API\r\n\t\t\t var store = dojox.data.tests.stores.AppStore.getStore();\r\n\r\n\t\t\t var d = new doh.Deferred();\r\n\t\t\t function onComplete(items, request){\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tt.assertTrue(store.isItem(item));\r\n\t\t\t\tt.assertTrue(!store.isItem({}));\r\n\t\t\t\tt.assertTrue(!store.isItem(\"Foo\"));\r\n\t\t\t\tt.assertTrue(!store.isItem(1));\r\n\t\t\t\td.callback(true);\r\n\t\t\t }\r\n\t\t\t function onError(error, request){\r\n\t\t\t\t d.errback(error);\r\n\t\t\t }\r\n\t\t\t store.fetch({query:{title:\"Test Editable Entry #1\"}, onComplete: onComplete, onError: onError});\r\n\t\t\t return d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_isItem_multistore(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the isItem API across multiple store instances.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the isItem API across multiple store instances.\r\n\t\t\tvar store1 = dojox.data.tests.stores.AppStore.getStore();\r\n\t\t\tvar store2 = dojox.data.tests.stores.AppStore.getStore();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\r\n\t\t\tfunction onError(error, request){\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\r\n\t\t\tfunction onComplete1(items, request){\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item1 = items[0];\r\n\t\t\t\tt.assertTrue(store1.isItem(item1));\r\n\r\n\t\t\t\tfunction onComplete2(items, request){\r\n\t\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\t\tvar item2 = items[0];\r\n\t\t\t\t\tt.assertTrue(store2.isItem(item2));\r\n\t\t\t\t\tt.assertTrue(!store1.isItem(item2));\r\n\t\t\t\t\tt.assertTrue(!store2.isItem(item1));\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tstore2.fetch({query:{title:\"Test Entry #1\"}, onComplete: onComplete2, onError: onError});\r\n\t\t\t}\r\n\t\t\tstore1.fetch({query:{title:\"Test Editable Entry #1\"}, onComplete: onComplete1, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_hasAttribute(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the hasAttribute API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the hasAttribute API\r\n\t\t\tvar store = dojox.data.tests.stores.AppStore.getStore();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\r\n\t\t\tfunction onError(error, request){\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tt.assertTrue(store.hasAttribute(item,\"title\"));\r\n\t\t\t\tt.assertTrue(store.hasAttribute(item,\"summary\"));\r\n\t\t\t\tt.assertTrue(!store.hasAttribute(item,\"bob\"));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{title:\"Test Editable Entry #1\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_containsValue(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the containsValue API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the containsValue API\r\n\t\t\tvar store = dojox.data.tests.stores.AppStore.getStore();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tt.assertTrue(store.containsValue(item,\"title\", \"Test Editable Entry #1\"));\r\n\t\t\t\tt.assertTrue(!store.containsValue(item,\"title\", \"bob\"));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request){\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{title:\"Test Editable Entry #1\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_sortDescending(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the sorting API in descending order.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the sorting API in descending order.\r\n\t\t\tvar store = dojox.data.tests.stores.AppStore.getStore();\r\n\r\n\t\t\t//Comparison is done as a string type (toString comparison), so the order won't be numeric\r\n\t\t\t//So have to compare in 'alphabetic' order.\r\n\t\t\tvar order = [\t\"Test Entry #6\",\r\n\t\t\t\t\t\t\t\"Test Entry #5\",\r\n\t\t\t\t\t\t\t\"Test Entry #4\",\r\n\t\t\t\t\t\t\t\"Test Entry #3\",\r\n\t\t\t\t\t\t\t\"Test Entry #2\",\r\n\t\t\t\t\t\t\t\"Test Entry #1\",\r\n\t\t\t\t\t\t\t\"Test Editable Entry #2\",\r\n\t\t\t\t\t\t\t\"Test Editable Entry #1\"];\r\n\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(8, items.length);\r\n\r\n\t\t\t\tfor(var i = 0; i < items.length; i++){\r\n\t\t\t\t\tt.assertEqual(order[i], store.getValue(items[i],\"title\"));\r\n\t\t\t\t}\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request){\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\r\n\t\t\tvar sortAttributes = [{attribute: \"title\", descending: true}];\r\n\t\t\tstore.fetch({query:{title:\"*\"}, sort: sortAttributes, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_sortAscending(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the sorting API in ascending order.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the sorting API in ascending order.\r\n\t\t\tvar store = dojox.data.tests.stores.AppStore.getStore();\r\n\r\n\t\t\t//Comparison is done as a string type (toString comparison), so the order won't be numeric\r\n\t\t\t//So have to compare in 'alphabetic' order.\r\n\t\t\tvar order = [\t\"Test Editable Entry #1\",\r\n\t\t\t\t\t\t\t\"Test Editable Entry #2\",\r\n\t\t\t\t\t\t\t\"Test Entry #1\",\r\n\t\t\t\t\t\t\t\"Test Entry #2\",\r\n\t\t\t\t\t\t\t\"Test Entry #3\",\r\n\t\t\t\t\t\t\t\"Test Entry #4\",\r\n\t\t\t\t\t\t\t\"Test Entry #5\",\r\n\t\t\t\t\t\t\t\"Test Entry #6\"];\r\n\t\t\t\t\t\t\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(8, items.length);\r\n\t\t\t\tvar itemId = 1;\r\n\t\t\t\tfor(var i = 0; i < items.length; i++){\r\n\t\t\t\t\tt.assertEqual(order[i], store.getValue(items[i],\"title\"));\r\n\t\t\t\t}\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request){\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\r\n\t\t\tvar sortAttributes = [{attribute: \"title\"}];\r\n\t\t\tstore.fetch({query:{title:\"*\"}, sort: sortAttributes, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_isItemLoaded(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the isItemLoaded API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the isItemLoaded API\r\n\t\t\tvar store = dojox.data.tests.stores.AppStore.getStore();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tt.assertTrue(store.isItemLoaded(item));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request){\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{title:\"Test Editable Entry #1\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testReadAPI_getFeatures(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getFeatures function of the store\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getFeatures function of the store\r\n\r\n\t\t\tvar store = dojox.data.tests.stores.AppStore.getStore();\r\n\t\t\tvar features = store.getFeatures();\r\n\t\t\tvar count = 0;\r\n\t\t\tfor(var i in features){\r\n\t\t\t\tt.assertTrue(( i === \"dojo.data.api.Read\" || i === \"dojo.data.api.Write\" || i === \"dojo.data.api.Identity\"));\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t\tt.assertEqual(3, count);\r\n\t\t},\r\n\t\tfunction testReadAPI_getAttributes(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the getAttributes API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the getAttributes API\r\n\t\t\tvar store = dojox.data.tests.stores.AppStore.getStore();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tvar attributes = store.getAttributes(item);\r\n\t\t\t\tt.assertEqual(6,attributes.length);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request){\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{title:\"Test Editable Entry #1\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testWriteAPI_newItem(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the newItem API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the newItem API\r\n\t\t\tvar store = dojox.data.tests.stores.AppStore.getStore();\r\n\r\n\t\t\tstore.newItem({title: \"New entry\", id: \"12345\", content: \"This is test content\", author: {name:\"Bob\"}});\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tt.assertTrue(store.containsValue(item,\"title\", \"New entry\"));\r\n\t\t\t\tt.assertTrue(store.containsValue(item, \"content\", \"This is test content\"));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{title:\"New entry\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testWriteAPI_newItemInCallback(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the newItem API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the newItem API\r\n\t\t\tvar store = dojox.data.tests.stores.AppStore.getStore();\r\n\r\n\t\t\tstore.newItem({title: \"New entry\", id: \"12345\", content: \"This is test content\", author: {name:\"Bob\"}});\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\r\n\t\t\tfunction onError(error, request){\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tt.assertTrue(store.containsValue(item,\"title\", \"New entry\"));\r\n\t\t\t\tt.assertTrue(store.containsValue(item, \"content\", \"This is test content\"));\r\n\r\n\t\t\t\tstore.newItem({title: \"New entry2\", id: \"12346\", content: \"This is test content\", author: [{name:\"Bob\"}]});\r\n\t\t\t\t\r\n\t\t\t\tfunction onComplete1(items, request){\r\n\t\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\t\tvar item = items[0];\r\n\t\t\t\t\tt.assertTrue(store.containsValue(item, \"title\", \"New entry2\"));\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tstore.fetch({query:{title:\"New entry2\"}, onComplete: onComplete1, onError: onError});\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{title:\"New entry\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testWriteAPI_deleteItem(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the deleteItem API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the deleteItem API\r\n\t\t\tvar store = dojox.data.tests.stores.AppStore.getStore();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\r\n\t\t\tfunction onError(error, request){\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tt.assertTrue(store.containsValue(item,\"title\", \"Test Editable Entry #1\"));\r\n\t\t\t\tstore.deleteItem(item);\r\n\t\t\t\t\r\n\t\t\t\tfunction onComplete1(items, request){\r\n\t\t\t\t\tt.assertEqual(0, items.length);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tstore.fetch({query:{title:\"Test Editable Entry #1\"}, onComplete: onComplete1, onError: onError});\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{title:\"Test Editable Entry #1\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testWriteAPI_setValue(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the setValue API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the setValue API\r\n\t\t\tvar store = dojox.data.tests.stores.AppStore.getStore();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tt.assertTrue(store.containsValue(item,\"title\", \"Test Editable Entry #1\"));\r\n\t\t\t\tstore.setValue(item, \"title\", \"Edited title\");\r\n\t\t\t\tt.assertEqual(store.getValue(item,\"title\"), \"Edited title\");\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request){\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{title:\"Test Editable Entry #1\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testWriteAPI_setValues(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the setValues API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the setValues API\r\n\t\t\tvar store = dojox.data.tests.stores.AppStore.getStore();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tt.assertTrue(store.containsValue(item,\"title\", \"Test Editable Entry #1\"));\r\n\t\t\t\tstore.setValues(item, \"author\", [{name: \"John\"}, {name: \"Bill\", email:\"bill@example.com\", uri:\"http://example.com/bill\"}]);\r\n\t\t\t\tvar values = store.getValues(item,\"author\");\r\n\t\t\t\tt.assertEqual(values[0].name, \"John\");\r\n\t\t\t\tt.assertEqual(values[1].name, \"Bill\");\r\n\t\t\t\tt.assertEqual(values[1].email, \"bill@example.com\");\r\n\t\t\t\tt.assertEqual(values[1].uri, \"http://example.com/bill\");\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request){\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{title:\"Test Editable Entry #1\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testWriteAPI_unsetAttribute(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the unsetAttribute API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the unsetAttribute API\r\n\t\t\tvar store = dojox.data.tests.stores.AppStore.getStore();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tt.assertTrue(store.containsValue(item,\"title\", \"Test Editable Entry #1\"));\r\n\t\t\t\tstore.unsetAttribute(item,\"title\");\r\n\t\t\t\tt.assertTrue(!store.hasAttribute(item,\"title\"));\r\n\t\t\t\tt.assertTrue(store.isDirty(item));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request) {\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{title:\"Test Editable Entry #1\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testWriteAPI_isDirty(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the isDirty API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the isDirty API\r\n\t\t\tvar store = dojox.data.tests.stores.AppStore.getStore();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tt.assertTrue(store.containsValue(item,\"title\", \"Test Editable Entry #1\"));\r\n\t\t\t\tstore.setValue(item, \"title\", \"Edited title\");\r\n\t\t\t\tt.assertEqual(store.getValue(item,\"title\"), \"Edited title\");\r\n\t\t\t\tt.assertTrue(store.isDirty(item));\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request){\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{title:\"Test Editable Entry #1\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testWriteAPI_revert(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the isDirty API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the isDirty API\r\n\t\t\tvar store = dojox.data.tests.stores.AppStore.getStore();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onError(error, request){\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tt.assertTrue(store.containsValue(item,\"title\", \"Test Editable Entry #1\"));\r\n\t\t\t\tt.assertTrue(!store.isDirty(item));\r\n\t\t\t\tstore.setValue(item, \"title\", \"Edited title\");\r\n\t\t\t\tt.assertEqual(store.getValue(item,\"title\"), \"Edited title\");\r\n\t\t\t\tt.assertTrue(store.isDirty(item));\r\n\t\t\t\tstore.revert();\r\n\t\t\t\t\r\n\t\t\t\t//Fetch again to see if it reset the state.\r\n\t\t\t\tfunction onComplete1(items, request){\r\n\t\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\t\tvar item = items[0];\r\n\t\t\t\t\tt.assertTrue(store.containsValue(item,\"title\", \"Test Editable Entry #1\"));\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}\r\n\t\t\t\tstore.fetch({query:{title:\"Test Editable Entry #1\"}, onComplete: onComplete1, onError: onError});\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{title:\"Test Editable Entry #1\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\t\tfunction testWriteAPI_revert2(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of the revert API\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of the revert API\r\n\t\t\tvar store = dojox.data.tests.stores.AppStore.getStore();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onError(error, request){\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar item = items[0];\r\n\t\t\t\tt.assertTrue(store.containsValue(item,\"title\", \"Test Editable Entry #1\"));\r\n\t\t\t\tstore.deleteItem(item);\r\n\t\t\t\t\r\n\t\t\t\tfunction onComplete1(items, request){\r\n\t\t\t\t\tt.assertEqual(7, items.length);\r\n\t\t\t\t\tstore.newItem({title: \"New entry\", id: \"12345\", content: \"This is test content\", author: {name:\"Bob\"}});\r\n\t\t\t\t\t\r\n\t\t\t\t\tfunction onComplete2(items, request){\r\n\t\t\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\t\t\tstore.revert();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfunction onComplete3(items, request){\r\n\t\t\t\t\t\t\tt.assertEqual(0, items.length);\r\n\t\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tstore.fetch({query:{title:\"New entry\"}, onComplete: onComplete3, onError: onError});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstore.fetch({query:{title:\"New entry\"}, onComplete: onComplete2, onError: onError});\r\n\t\t\t\t}\r\n\t\t\t\tstore.fetch({query:{title:\"*\"}, onComplete: onComplete1, onError: onError});\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{title:\"Test Editable Entry #1\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\r\n\t\tfunction testReadAPI_getIdentity(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching the identity of an item.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching the identity of an item.\r\n\t\t\tvar store = dojox.data.tests.stores.AppStore.getStore();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar id = store.getIdentity(items[0]);\r\n\t\t\t\tt.assertEqual(\"http://example.com/samplefeedEdit.xml/entry/10\",id);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request){\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{title:\"Test Editable Entry #1\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\r\n\t\tfunction testReadAPI_getIdentityAttributes(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching the identity attributes off an item,\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching the identity attributes off an item,\r\n\t\t\tvar store = dojox.data.tests.stores.AppStore.getStore();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onComplete(items, request){\r\n\t\t\t\tt.assertEqual(1, items.length);\r\n\t\t\t\tvar idAttrs = store.getIdentityAttributes(items[0]);\r\n\t\t\t\tt.assertEqual(1, idAttrs.length);\r\n\t\t\t\tt.assertEqual(\"id\", idAttrs[0]);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request){\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetch({query:{title:\"Test Editable Entry #1\"}, onComplete: onComplete, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\r\n\t\tfunction testReadAPI_fetchItemByIdentity(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching one atom item through its identity\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching one atom item through its identity\r\n\t\t\tvar store = dojox.data.tests.stores.AppStore.getStore();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item, request) {\r\n\t\t\t\tvar id = store.getIdentity(item);\r\n\t\t\t\tt.assertEqual(\"http://example.com/samplefeedEdit.xml/entry/10\",id);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request){\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetchItemByIdentity({identity: \"http://example.com/samplefeedEdit.xml/entry/10\", onItem: onItem, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\r\n\t\tfunction testReadAPI_fetchItemByIdentity_fails(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test of fetching one atom item through its identity fails correctly on no id match\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test of fetching one atom item through its identity fails correctly on no id match\r\n\t\t\tvar store = dojox.data.tests.stores.AppStore.getStore();\r\n\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tfunction onItem(item, request){\r\n\t\t\t\tt.assertTrue(item === null);\r\n\t\t\t\td.callback(true);\r\n\t\t\t}\r\n\t\t\tfunction onError(error, request){\r\n\t\t\t\td.errback(error);\r\n\t\t\t}\r\n\t\t\tstore.fetchItemByIdentity({identity: \"http://example.com/samplefeedEdit.xml/entry/10/none\", onItem: onItem, onError: onError});\r\n\t\t\treturn d; //Object\r\n\t\t},\r\n\r\n\t\tfunction testReadAPI_functionConformance(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test read API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test read API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\t\t\tvar testStore = dojox.data.tests.stores.AppStore.getStore();\r\n\t\t\tvar readApi = new dojo.data.api.Read();\r\n\t\t\tvar passed = true;\r\n\r\n\t\t\tfor(var i in readApi){\r\n\t\t\t\tvar member = readApi[i];\r\n\t\t\t\t//Check that all the 'Read' defined functions exist on the test store.\r\n\t\t\t\tif(typeof member === \"function\"){\r\n\t\t\t\t\tvar testStoreMember = testStore[i];\r\n\t\t\t\t\tif(!(typeof testStoreMember === \"function\")){\r\n\t\t\t\t\t\tconsole.log(\"Problem with function: [\" + i + \"]\");\r\n\t\t\t\t\t\tpassed = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tt.assertTrue(passed);\r\n\t\t},\r\n\t\tfunction testWriteAPI_functionConformance(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test write API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test write API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\t\t\tvar testStore = dojox.data.tests.stores.AppStore.getStore();\r\n\t\t\tvar writeApi = new dojo.data.api.Write();\r\n\t\t\tvar passed = true;\r\n\r\n\t\t\tfor(var i in writeApi){\r\n\t\t\t\tvar member = writeApi[i];\r\n\t\t\t\t//Check that all the 'Write' defined functions exist on the test store.\r\n\t\t\t\tif(typeof member === \"function\"){\r\n\t\t\t\t\tvar testStoreMember = testStore[i];\r\n\t\t\t\t\tif(!(typeof testStoreMember === \"function\")){\r\n\t\t\t\t\t\tpassed = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tt.assertTrue(passed);\r\n\t\t},\r\n\t\tfunction testIdentityAPI_functionConformance(t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSimple test identity API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSimple test identity API conformance.  Checks to see all declared functions are actual functions on the instances.\r\n\t\t\tvar testStore = dojox.data.tests.stores.AppStore.getStore();\r\n\t\t\tvar identityApi = new dojo.data.api.Identity();\r\n\t\t\tvar passed = true;\r\n\r\n\t\t\tfor(var i in identityApi){\r\n\t\t\t\tvar member = identityApi[i];\r\n\t\t\t\t//Check that all the 'Write' defined functions exist on the test store.\r\n\t\t\t\tif(typeof member === \"function\"){\r\n\t\t\t\t\tvar testStoreMember = testStore[i];\r\n\t\t\t\t\tif(!(typeof testStoreMember === \"function\")){\r\n\t\t\t\t\t\tpassed = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tt.assertTrue(passed);\r\n\t\t}\r\n\t]\r\n);\r\n"]}