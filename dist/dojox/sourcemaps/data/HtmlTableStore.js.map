{"version":3,"sources":["data/HtmlTableStore.js"],"names":["define","kernel","declare","lang","dom","array","xhr","has","simpleFetch","filter","xmlParser","HtmlTableStore","constructor","args","deprecated","url","tableId","Error","this","_rootNode","byId","id","_getHeadings","i","rows","length","store","_headings","forEach","tHead","cells","hitch","th","push","textContent","_getAllItems","items","_assertIsItem","item","isItem","_assertIsAttribute","attribute","indexOf","getValue","defaultValue","values","getValues","index","getAttributes","attributes","hasAttribute","containsValue","value","regexp","undefined","patternToRegExp","_containsValue","possibleValue","match","something","isItemLoaded","loadItem","keywordArgs","_fetchItems","request","fetchHandler","errorHandler","_finishFetchItems","getArgs","handleAs","self","getHandler","get","addCallback","data","findNode","node","childNodes","returnNode","d","document","createElement","innerHTML","call","addErrback","error","arrayOfAllItems","query","ignoreCase","queryOptions","key","regexpList","candidateItem","slice","getFeatures","dojo.data.api.Read","dojo.data.api.Identity","close","getLabel","getIdentity","getLabelAttributes","sectionRowIndex","getIdentityAttributes","fetchItemByIdentity","identity","scope","onItem","global","onError","extend"],"mappings":"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","file":"../../data/HtmlTableStore.js","sourcesContent":["define([\"dojo/_base/kernel\", \"dojo/_base/declare\", \"dojo/_base/lang\", \"dojo/dom\", \"dojo/_base/array\",\r\n\t\t\"dojo/_base/xhr\", \"dojo/_base/sniff\", \"dojo/data/util/simpleFetch\",\r\n\t\t\"dojo/data/util/filter\", \"dojox/xml/parser\"], \r\n  function(kernel, declare, lang, dom, array, xhr, has, simpleFetch, filter, xmlParser) {\r\n\r\nvar HtmlTableStore = declare(\"dojox.data.HtmlTableStore\", null, {\r\n\tconstructor: function(/*Object*/args){\r\n\t\tkernel.deprecated(\"dojox.data.HtmlTableStore\", \"Please use dojox.data.HtmlStore\");\r\n\t\t// summary:\r\n\t\t//\t\tInitializer for the HTML table store.\r\n\t\t// description:\r\n\t\t//\t\tThe HtmlTableStore can be created in one of two ways: a) by parsing an existing\r\n\t\t//\t\ttable DOM node on the current page or b) by referencing an external url and giving\r\n\t\t//\t\tthe id of the table in that page.  The remote url will be parsed as an html page.\r\n\t\t//\r\n\t\t//\t\tThe HTML table should be of the following form:\r\n\t\t// |\t\t<table id=\"myTable\">\r\n\t\t// |\t\t\t<thead>\r\n\t\t// |\t\t\t\t<tr>\r\n\t\t// |\t\t\t\t\t<th>Attribute1</th>\r\n\t\t// |\t\t\t\t\t<th>Attribute2</th>\r\n\t\t// |\t\t\t\t</tr>\r\n\t\t// |\t\t\t</thead>\r\n\t\t// |\t\t\t<tbody>\r\n\t\t// |\t\t\t\t<tr>\r\n\t\t// |\t\t\t\t\t<td>Value1.1</td>\r\n\t\t// |\t\t\t\t\t<td>Value1.2</td>\r\n\t\t// |\t\t\t\t</tr>\r\n\t\t// |\t\t\t\t<tr>\r\n\t\t// |\t\t\t\t\t<td>Value2.1</td>\r\n\t\t// |\t\t\t\t\t<td>Value2.2</td>\r\n\t\t// |\t\t\t\t</tr>\r\n\t\t// |\t\t\t</tbody>\r\n\t\t// |\t\t</table>\r\n\t\t// args:\r\n\t\t//\t\tAn anonymous object to initialize properties.  It expects the following values:\r\n\t\t//\r\n\t\t//\t\t- tableId:\tThe id of the HTML table to use.\r\n\t\t//\r\n\t\t//\t\tOR\r\n\t\t//\r\n\t\t//\t\t- url:\t\tThe url of the remote page to load\r\n\t\t//\t\t- tableId:\tThe id of the table element in the remote page\r\n\t\t\r\n\t\tif(args.url){\r\n\t\t\tif(!args.tableId)\r\n\t\t\t\tthrow new Error(\"dojo.data.HtmlTableStore: Cannot instantiate using url without an id!\");\r\n\t\t\tthis.url = args.url;\r\n\t\t\tthis.tableId = args.tableId;\r\n\t\t}else{\r\n\t\t\tif(args.tableId){\r\n\t\t\t\tthis._rootNode = dom.byId(args.tableId);\r\n\t\t\t\tthis.tableId = this._rootNode.id;\r\n\t\t\t}else{\r\n\t\t\t\tthis._rootNode = dom.byId(this.tableId);\r\n\t\t\t}\r\n\t\t\tthis._getHeadings();\r\n\t\t\tfor(var i=0; i<this._rootNode.rows.length; i++){\r\n\t\t\t\tthis._rootNode.rows[i].store = this;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t// url: [public] string\r\n\t//\t\tThe URL from which to load an HTML document for data loading\r\n\turl: \"\",\r\n\t\r\n\t// tableId: [public] string\r\n\t//\t\tThe id of the table to load as store contents.\r\n\ttableId: \"\",\r\n\r\n\t_getHeadings: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to load the attribute names from the table header so that the\r\n\t\t//\t\tattributes (cells in a row), can have a reasonable name.\r\n\t\tthis._headings = [];\r\n\t\tarray.forEach(this._rootNode.tHead.rows[0].cells, lang.hitch(this, function(th){\r\n\t\t\tthis._headings.push(xmlParser.textContent(th));\r\n\t\t}));\r\n\t},\r\n\t\r\n\t_getAllItems: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to return all rows in the table as an array of items.\r\n\t\tvar items = [];\r\n\t\tfor(var i=1; i<this._rootNode.rows.length; i++){\r\n\t\t\titems.push(this._rootNode.rows[i]);\r\n\t\t}\r\n\t\treturn items; //array\r\n\t},\r\n\t\r\n\t_assertIsItem: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tThis function tests whether the item passed in is indeed an item in the store.\r\n\t\t// item:\r\n\t\t//\t\tThe item to test for being contained by the store.\r\n\t\tif(!this.isItem(item)){\r\n\t\t\tthrow new Error(\"dojo.data.HtmlTableStore: a function was passed an item argument that was not an item\");\r\n\t\t}\r\n\t},\r\n\r\n\t_assertIsAttribute: function(/* String */ attribute){\r\n\t\t// summary:\r\n\t\t//\t\tThis function tests whether the item passed in is indeed a valid 'attribute' like type for the store.\r\n\t\t// attribute:\r\n\t\t//\t\tThe attribute to test for being contained by the store.\r\n\t\t// returns:\r\n\t\t//\t\tReturns the index (column) that the attribute resides in the row.\r\n\t\tif(typeof attribute !== \"string\"){\r\n\t\t\tthrow new Error(\"dojo.data.HtmlTableStore: a function was passed an attribute argument that was not an attribute name string\");\r\n\t\t}\r\n\t\treturn array.indexOf(this._headings, attribute); //int\r\n\t},\r\n\r\n/***************************************\r\n     dojo/data/api/Read API\r\n***************************************/\r\n\t\r\n\tgetValue: function(\t/* item */ item,\r\n\t\t\t\t\t\t/* attribute-name-string */ attribute,\r\n\t\t\t\t\t\t/* value? */ defaultValue){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getValue()\r\n\t\tvar values = this.getValues(item, attribute);\r\n\t\treturn (values.length > 0)?values[0]:defaultValue; // Object|Number|Boolean\r\n\t},\r\n\r\n\tgetValues: function(/* item */ item,\r\n\t\t\t\t\t\t/* attribute-name-string */ attribute){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getValues()\r\n\r\n\t\tthis._assertIsItem(item);\r\n\t\tvar index = this._assertIsAttribute(attribute);\r\n\r\n\t\tif(index>-1){\r\n\t\t\treturn [xmlParser.textContent(item.cells[index])] ;\r\n\t\t}\r\n\t\treturn []; //Array\r\n\t},\r\n\r\n\tgetAttributes: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getAttributes()\r\n\t\tthis._assertIsItem(item);\r\n\t\tvar attributes = [];\r\n\t\tfor(var i=0; i<this._headings.length; i++){\r\n\t\t\tif(this.hasAttribute(item, this._headings[i]))\r\n\t\t\t\tattributes.push(this._headings[i]);\r\n\t\t}\r\n\t\treturn attributes; //Array\r\n\t},\r\n\r\n\thasAttribute: function(\t/* item */ item,\r\n\t\t\t\t\t\t\t/* attribute-name-string */ attribute){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.hasAttribute()\r\n\t\treturn this.getValues(item, attribute).length > 0;\r\n\t},\r\n\r\n\tcontainsValue: function(/* item */ item,\r\n\t\t\t\t\t\t\t/* attribute-name-string */ attribute,\r\n\t\t\t\t\t\t\t/* anything */ value){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.containsValue()\r\n\t\tvar regexp = undefined;\r\n\t\tif(typeof value === \"string\"){\r\n\t\t\tregexp = filter.patternToRegExp(value, false);\r\n\t\t}\r\n\t\treturn this._containsValue(item, attribute, value, regexp); //boolean.\r\n\t},\r\n\r\n\t_containsValue: function(\t/* item */ item,\r\n\t\t\t\t\t\t\t\t/* attribute-name-string */ attribute,\r\n\t\t\t\t\t\t\t\t/* anything */ value,\r\n\t\t\t\t\t\t\t\t/* RegExp?*/ regexp){\r\n\t\t// summary:\r\n\t\t//\t\tInternal function for looking at the values contained by the item.\r\n\t\t// description:\r\n\t\t//\t\tInternal function for looking at the values contained by the item.  This\r\n\t\t//\t\tfunction allows for denoting if the comparison should be case sensitive for\r\n\t\t//\t\tstrings or not (for handling filtering cases where string case should not matter)\r\n\t\t// item:\r\n\t\t//\t\tThe data item to examine for attribute values.\r\n\t\t// attribute:\r\n\t\t//\t\tThe attribute to inspect.\r\n\t\t// value:\r\n\t\t//\t\tThe value to match.\r\n\t\t// regexp:\r\n\t\t//\t\tOptional regular expression generated off value if value was of string type to handle wildcarding.\r\n\t\t//\t\tIf present and attribute values are string, then it can be used for comparison instead of 'value'\r\n\t\tvar values = this.getValues(item, attribute);\r\n\t\tfor(var i = 0; i < values.length; ++i){\r\n\t\t\tvar possibleValue = values[i];\r\n\t\t\tif(typeof possibleValue === \"string\" && regexp){\r\n\t\t\t\treturn (possibleValue.match(regexp) !== null);\r\n\t\t\t}else{\r\n\t\t\t\t//Non-string matching.\r\n\t\t\t\tif(value === possibleValue){\r\n\t\t\t\t\treturn true; // Boolean\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false; // Boolean\r\n\t},\r\n\r\n\tisItem: function(/* anything */ something){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.isItem()\r\n\t\tif(something && something.store && something.store === this){\r\n\t\t\treturn true; //boolean\r\n\t\t}\r\n\t\treturn false; //boolean\r\n\t},\r\n\r\n\tisItemLoaded: function(/* anything */ something){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.isItemLoaded()\r\n\t\treturn this.isItem(something);\r\n\t},\r\n\r\n\tloadItem: function(/* Object */ keywordArgs){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.loadItem()\r\n\t\tthis._assertIsItem(keywordArgs.item);\r\n\t},\r\n\t\r\n\t_fetchItems: function(request, fetchHandler, errorHandler){\r\n\t\t// summary:\r\n\t\t//\t\tFetch items (XML elements) that match to a query\r\n\t\t// description:\r\n\t\t//\t\tIf '_fetchUrl' is specified, it is used to load an XML document\r\n\t\t//\t\twith a query string.\r\n\t\t//\t\tOtherwise and if 'url' is specified, the XML document is\r\n\t\t//\t\tloaded and list XML elements that match to a query (set of element\r\n\t\t//\t\tnames and their text attribute values that the items to contain).\r\n\t\t//\t\tA wildcard, \"*\" can be used to query values to match all\r\n\t\t//\t\toccurrences.\r\n\t\t//\t\tIf '_rootItem' is specified, it is used to fetch items.\r\n\t\t// request:\r\n\t\t//\t\tA request object\r\n\t\t// fetchHandler:\r\n\t\t//\t\tA function to call for fetched items\r\n\t\t// errorHandler:\r\n\t\t//\t\tA function to call on error\r\n\t\t\r\n\t\tif(this._rootNode){\r\n\t\t\tthis._finishFetchItems(request, fetchHandler, errorHandler);\r\n\t\t}else{\r\n\t\t\tif(!this.url){\r\n\t\t\t\tthis._rootNode = dom.byId(this.tableId);\r\n\t\t\t\tthis._getHeadings();\r\n\t\t\t\tfor(var i=0; i<this._rootNode.rows.length; i++){\r\n\t\t\t\t\tthis._rootNode.rows[i].store = this;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tvar getArgs = {\r\n\t\t\t\t\t\turl: this.url,\r\n\t\t\t\t\t\thandleAs: \"text\"\r\n\t\t\t\t\t};\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tvar getHandler = xhr.get(getArgs);\r\n\t\t\t\tgetHandler.addCallback(function(data){\r\n\t\t\t\t\tvar findNode = function(node, id){\r\n\t\t\t\t\t\tif(node.id == id){\r\n\t\t\t\t\t\t\treturn node; //object\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(node.childNodes){\r\n\t\t\t\t\t\t\tfor(var i=0; i<node.childNodes.length; i++){\r\n\t\t\t\t\t\t\t\tvar returnNode = findNode(node.childNodes[i], id);\r\n\t\t\t\t\t\t\t\tif(returnNode){\r\n\t\t\t\t\t\t\t\t\treturn returnNode; //object\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn null; //null\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar d = document.createElement(\"div\");\r\n\t\t\t\t\td.innerHTML = data;\r\n\t\t\t\t\tself._rootNode = findNode(d, self.tableId);\r\n\t\t\t\t\tself._getHeadings.call(self);\r\n\t\t\t\t\tfor(var i=0; i<self._rootNode.rows.length; i++){\r\n\t\t\t\t\t\tself._rootNode.rows[i].store = self;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tself._finishFetchItems(request, fetchHandler, errorHandler);\r\n\t\t\t\t});\r\n\t\t\t\tgetHandler.addErrback(function(error){\r\n\t\t\t\t\terrorHandler(error, request);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t_finishFetchItems: function(request, fetchHandler, errorHandler){\r\n\t\t// summary:\r\n\t\t//\t\tInternal function for processing the passed in request and locating the requested items.\r\n\t\tvar items = null;\r\n\t\tvar arrayOfAllItems = this._getAllItems();\r\n\t\tif(request.query){\r\n\t\t\tvar ignoreCase = request.queryOptions ? request.queryOptions.ignoreCase : false;\r\n\t\t\titems = [];\r\n\r\n\t\t\t//See if there are any string values that can be regexp parsed first to avoid multiple regexp gens on the\r\n\t\t\t//same value for each item examined.  Much more efficient.\r\n\t\t\tvar regexpList = {};\r\n\t\t\tvar value;\r\n\t\t\tvar key;\r\n\t\t\tfor(key in request.query){\r\n\t\t\t\tvalue = request.query[key]+'';\r\n\t\t\t\tif(typeof value === \"string\"){\r\n\t\t\t\t\tregexpList[key] = filter.patternToRegExp(value, ignoreCase);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor(var i = 0; i < arrayOfAllItems.length; ++i){\r\n\t\t\t\tvar match = true;\r\n\t\t\t\tvar candidateItem = arrayOfAllItems[i];\r\n\t\t\t\tfor(key in request.query){\r\n\t\t\t\t\tvalue = request.query[key]+'';\r\n\t\t\t\t\tif(!this._containsValue(candidateItem, key, value, regexpList[key])){\r\n\t\t\t\t\t\tmatch = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(match){\r\n\t\t\t\t\titems.push(candidateItem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfetchHandler(items, request);\r\n\t\t}else{\r\n\t\t\t// We want a copy to pass back in case the parent wishes to sort the array.  We shouldn't allow resort\r\n\t\t\t// of the internal list so that multiple callers can get listsand sort without affecting each other.\r\n\t\t\tif(arrayOfAllItems.length> 0){\r\n\t\t\t\titems = arrayOfAllItems.slice(0,arrayOfAllItems.length);\r\n\t\t\t}\r\n\t\t\tfetchHandler(items, request);\r\n\t\t}\r\n\t},\r\n\r\n\tgetFeatures: function(){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getFeatures()\r\n\t\treturn {\r\n\t\t\t'dojo.data.api.Read': true,\r\n\t\t\t'dojo.data.api.Identity': true\r\n\t\t};\r\n\t},\r\n\t\r\n\tclose: function(/*dojo/data/api/Request|Object?*/ request){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.close()\r\n\r\n\t\t// nothing to do here!\r\n\t},\r\n\r\n\tgetLabel: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getLabel()\r\n\t\tif(this.isItem(item))\r\n\t\t\treturn \"Table Row #\" + this.getIdentity(item);\r\n\t\treturn undefined;\r\n\t},\r\n\r\n\tgetLabelAttributes: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Read.getLabelAttributes()\r\n\t\treturn null;\r\n\t},\r\n\r\n/***************************************\r\n     dojo/data/api/Identity API\r\n***************************************/\r\n\r\n\tgetIdentity: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Identity.getIdentity()\r\n\t\tthis._assertIsItem(item);\r\n\t\t//Opera doesn't support the sectionRowIndex,\r\n\t\t//So, have to call the indexOf to locate it.\r\n\t\t//Blah.\r\n\t\tif(!has(\"opera\")){\r\n\t\t\treturn item.sectionRowIndex; // int\r\n\t\t}else{\r\n\t\t\treturn (array.indexOf(this._rootNode.rows, item) - 1) // int\r\n\t\t}\r\n\t},\r\n\r\n\tgetIdentityAttributes: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Identity.getIdentityAttributes()\r\n\r\n\t\t//Identity isn't taken from a public attribute.\r\n\t\treturn null;\r\n\t},\r\n\r\n\tfetchItemByIdentity: function(keywordArgs){\r\n\t\t// summary:\r\n\t\t//\t\tSee dojo/data/api/Identity.fetchItemByIdentity()\r\n\t\tvar identity = keywordArgs.identity;\r\n\t\tvar self = this;\r\n\t\tvar item = null;\r\n\t\tvar scope = null;\r\n\r\n\t\tif(!this._rootNode){\r\n\t\t\tif(!this.url){\r\n\t\t\t\tthis._rootNode = dom.byId(this.tableId);\r\n\t\t\t\tthis._getHeadings();\r\n\t\t\t\tfor(var i=0; i<this._rootNode.rows.length; i++){\r\n\t\t\t\t\tthis._rootNode.rows[i].store = this;\r\n\t\t\t\t}\r\n\t\t\t\titem = this._rootNode.rows[identity+1];\r\n\t\t\t\tif(keywordArgs.onItem){\r\n\t\t\t\t\tscope = keywordArgs.scope?keywordArgs.scope:kernel.global;\r\n\t\t\t\t\tkeywordArgs.onItem.call(scope, item);\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\t\t\t\tvar getArgs = {\r\n\t\t\t\t\t\turl: this.url,\r\n\t\t\t\t\t\thandleAs: \"text\"\r\n\t\t\t\t\t};\r\n\t\t\t\tvar getHandler = xhr.get(getArgs);\r\n\t\t\t\tgetHandler.addCallback(function(data){\r\n\t\t\t\t\tvar findNode = function(node, id){\r\n\t\t\t\t\t\tif(node.id == id){\r\n\t\t\t\t\t\t\treturn node; //object\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(node.childNodes){\r\n\t\t\t\t\t\t\tfor(var i=0; i<node.childNodes.length; i++){\r\n\t\t\t\t\t\t\t\tvar returnNode = findNode(node.childNodes[i], id);\r\n\t\t\t\t\t\t\t\tif(returnNode){\r\n\t\t\t\t\t\t\t\t\treturn returnNode; //object\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn null; //null\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar d = document.createElement(\"div\");\r\n\t\t\t\t\td.innerHTML = data;\r\n\t\t\t\t\tself._rootNode = findNode(d, self.tableId);\r\n\t\t\t\t\tself._getHeadings.call(self);\r\n\t\t\t\t\tfor(var i=0; i<self._rootNode.rows.length; i++){\r\n\t\t\t\t\t\tself._rootNode.rows[i].store = self;\r\n\t\t\t\t\t}\r\n\t\t\t\t\titem = self._rootNode.rows[identity+1];\r\n\t\t\t\t\tif(keywordArgs.onItem){\r\n\t\t\t\t\t\tscope = keywordArgs.scope?keywordArgs.scope:kernel.global;\r\n\t\t\t\t\t\tkeywordArgs.onItem.call(scope, item);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tgetHandler.addErrback(function(error){\r\n\t\t\t\t\tif(keywordArgs.onError){\r\n\t\t\t\t\t\tscope = keywordArgs.scope?keywordArgs.scope:kernel.global;\r\n\t\t\t\t\t\tkeywordArgs.onError.call(scope, error);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(this._rootNode.rows[identity+1]){\r\n\t\t\t\titem = this._rootNode.rows[identity+1];\r\n\t\t\t\tif(keywordArgs.onItem){\r\n\t\t\t\t\tscope = keywordArgs.scope?keywordArgs.scope:kernel.global;\r\n\t\t\t\t\tkeywordArgs.onItem.call(scope, item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\nlang.extend(HtmlTableStore,simpleFetch);\r\n\r\nreturn HtmlTableStore;\r\n});\r\n"]}