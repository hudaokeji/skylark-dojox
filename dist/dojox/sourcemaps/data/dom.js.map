{"version":3,"sources":["data/dom.js"],"names":["define","kernel","lang","xmlParser","dojo","deprecated","dataDom","getObject","createDocument","str","mimetype","parse","e","textContent","node","text","arguments","length","replaceChildren","newChildren","removeChildren","dojox","xml","parser","innerXML"],"mappings":";;;;;;;AAAAA,QAAQ,oBAAqB,kBAAmB,oBAC9C,SAASC,EAAQC,EAAMC,GAmBzBC,KAAKC,WAAW,iBAAkB,gCAAiC,OAEnE,IAAIC,EAAUJ,EAAKK,UAAU,kBAAiB,GA0E9C,OAxEAD,EAAQE,eAAiB,SAAqBC,EAAiBC,GAQ9DN,KAAKC,WAAW,kCAAmC,wCAAyC,OAC5F,IACC,OAAOF,EAAUQ,MAAMF,EAAIC,GAC3B,MAAME,GAEN,OAAO,OAITN,EAAQO,YAAc,SAAiBC,EAAiBC,GAYvD,OADAX,KAAKC,WAAW,+BAAgC,8CAA+C,OAC5FW,UAAUC,OAAQ,EACbd,EAAUU,YAAYC,EAAMC,GAE5BZ,EAAUU,YAAYC,IAI/BR,EAAQY,gBAAkB,SAAoBJ,EAAqBK,GAYlEf,KAAKC,WAAW,mCAAoC,kDAAmD,OACvGF,EAAUe,gBAAgBJ,EAAMK,IAGjCb,EAAQc,eAAiB,SAAoBN,GAQ5C,OADAV,KAAKC,WAAW,kCAAmC,iDAAkD,OAC9FgB,MAAMC,IAAIC,OAAOH,eAAeN,IAGxCR,EAAQkB,SAAW,SAAiBV,GAMnC,OADAV,KAAKC,WAAW,4BAA6B,2CAA4C,OAClFF,EAAUqB,SAASV,IAGpBR","file":"../../data/dom.js","sourcesContent":["define([\"dojo/_base/kernel\", \"dojo/_base/lang\", \"dojox/xml/parser\"], \r\n  function(kernel, lang, xmlParser) {\r\n\r\n//DOM type to int value for reference.\r\n//Ints make for more compact code than full constant names.\r\n//ELEMENT_NODE                  = 1;\r\n//ATTRIBUTE_NODE                = 2;\r\n//TEXT_NODE                     = 3;\r\n//CDATA_SECTION_NODE            = 4;\r\n//ENTITY_REFERENCE_NODE         = 5;\r\n//ENTITY_NODE                   = 6;\r\n//PROCESSING_INSTRUCTION_NODE   = 7;\r\n//COMMENT_NODE                  = 8;\r\n//DOCUMENT_NODE                 = 9;\r\n//DOCUMENT_TYPE_NODE            = 10;\r\n//DOCUMENT_FRAGMENT_NODE        = 11;\r\n//NOTATION_NODE                 = 12;\r\n\r\n//This file contains internal/helper APIs as holders for people who used them.  They have been migrated to\r\n//a better project, dojox.xml and experimental has been removed there.  Please update usage to the new package.\r\ndojo.deprecated(\"dojox.data.dom\", \"Use dojox.xml.parser instead.\", \"2.0\");\r\n\r\nvar dataDom = lang.getObject(\"dojox.data.dom\",true);\r\n\r\ndataDom.createDocument = function(/*string?*/ str, /*string?*/ mimetype){\r\n\t// summary:\r\n\t//\t\tcross-browser implementation of creating an XML document object.\r\n\t// str:\r\n\t//\t\tOptional text to create the document from.  If not provided, an empty XML document will be created.\r\n\t//\t\tIf str is empty string \"\", then a new empty document will be created.\r\n\t// mimetype:\r\n\t//\t\tOptional mimetype of the text.  Typically, this is text/xml.  Will be defaulted to text/xml if not provided.\r\n\tdojo.deprecated(\"dojox.data.dom.createDocument()\", \"Use dojox.xml.parser.parse() instead.\", \"2.0\");\r\n\ttry{\r\n\t\treturn xmlParser.parse(str,mimetype); //DOMDocument.\r\n\t}catch(e){\r\n\t\t/*Squeltch errors like the old parser did.*/\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\ndataDom.textContent = function(/*Node*/node, /*string?*/text){\r\n\t// summary:\r\n\t//\t\tImplementation of the DOM Level 3 attribute; scan node for text\r\n\t// description:\r\n\t//\t\tImplementation of the DOM Level 3 attribute; scan node for text\r\n\t//\t\tThis function can also update the text of a node by replacing all child\r\n\t//\t\tcontent of the node.\r\n\t// node:\r\n\t//\t\tThe node to get the text off of or set the text on.\r\n\t// text:\r\n\t//\t\tOptional argument of the text to apply to the node.\r\n\tdojo.deprecated(\"dojox.data.dom.textContent()\", \"Use dojox.xml.parser.textContent() instead.\", \"2.0\");\r\n\tif(arguments.length> 1){\r\n\t\treturn xmlParser.textContent(node, text); //string\r\n\t}else{\r\n\t\treturn xmlParser.textContent(node); //string\r\n\t}\r\n};\r\n\r\ndataDom.replaceChildren = function(/*Element*/node, /*Node|Array*/ newChildren){\r\n\t// summary:\r\n\t//\t\tRemoves all children of node and appends newChild. All the existing\r\n\t//\t\tchildren will be destroyed.\r\n\t// description:\r\n\t//\t\tRemoves all children of node and appends newChild. All the existing\r\n\t//\t\tchildren will be destroyed.\r\n\t// node:\r\n\t//\t\tThe node to modify the children on\r\n\t// newChildren:\r\n\t//\t\tThe children to add to the node.  It can either be a single Node or an\r\n\t//\t\tarray of Nodes.\r\n\tdojo.deprecated(\"dojox.data.dom.replaceChildren()\", \"Use dojox.xml.parser.replaceChildren() instead.\", \"2.0\");\r\n\txmlParser.replaceChildren(node, newChildren);\r\n};\r\n\r\ndataDom.removeChildren = function(/*Element*/node){\r\n\t// summary:\r\n\t//\t\tremoves all children from node and returns the count of children removed.\r\n\t//\t\tThe children nodes are not destroyed. Be sure to call dojo._destroyElement on them\r\n\t//\t\tafter they are not used anymore.\r\n\t// node:\r\n\t//\t\tThe node to remove all the children from.\r\n\tdojo.deprecated(\"dojox.data.dom.removeChildren()\", \"Use dojox.xml.parser.removeChildren() instead.\", \"2.0\");\r\n\treturn dojox.xml.parser.removeChildren(node); //int\r\n};\r\n\r\ndataDom.innerXML = function(/*Node*/node){\r\n\t// summary:\r\n\t//\t\tImplementation of MS's innerXML function.\r\n\t// node:\r\n\t//\t\tThe node from which to generate the XML text representation.\r\n\tdojo.deprecated(\"dojox.data.dom.innerXML()\", \"Use dojox.xml.parser.innerXML() instead.\", \"2.0\");\r\n\treturn xmlParser.innerXML(node); //string||null\r\n};\r\n\r\nreturn dataDom;\r\n\r\n});\r\n\r\n"]}