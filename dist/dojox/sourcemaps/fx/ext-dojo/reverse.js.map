{"version":3,"sources":["fx/ext-dojo/reverse.js"],"names":["define","baseFx","coreFx","lang","easingUtil","dojoxFx","reverseApi","_reversed","reverse","keepPaused","reverseEase","playing","this","status","pause","nm","d","duration","sofar","_percent","togo","curr","Date","valueOf","cp","curve","_properties","p","properties","_endTime","_startTime","gotoPercent","tmp","start","end","rEase","fEase","easing","found","eName","de","test","replace","console","info","play","extend","Animation"],"mappings":";;;;;;;AAAAA,QAAQ,gBACN,UACA,kBACA,iBACA,YACD,SAASC,EAAQC,EAAQC,EAAMC,EAAYC,GAE5C,IAAIC,GAWHC,WAAW,EACXC,QAAS,SAAoBC,EAA2BC,GAYvD,IAAIC,EAA2B,WAAjBC,KAAKC,SACnBD,KAAKE,QACLF,KAAKL,WAAaK,KAAKL,UACvB,IAMCQ,EANGC,EAAIJ,KAAKK,SACZC,EAAQF,EAAIJ,KAAKO,SACjBC,EAAOJ,EAAIE,EACXG,GAAO,IAAIC,MAAOC,UAClBC,EAAKZ,KAAKa,MAAMC,YAChBC,EAAIf,KAAKgB,WASV,IAAIb,KANJH,KAAKiB,SAAWR,EAAOH,EACvBN,KAAKkB,WAAaT,EAAOD,EAEtBT,GACFC,KAAKmB,YAAYX,EAAOJ,GAEfW,EAAE,CACX,IAAIK,EAAML,EAAEZ,GAAIkB,MAChBN,EAAEZ,GAAIkB,MAAQT,EAAGT,GAAIkB,MAAQN,EAAEZ,GAAImB,IACnCP,EAAEZ,GAAImB,IAAMV,EAAGT,GAAImB,IAAMF,EAG1B,GAAGpB,KAAKL,UAAU,CACjB,IAAIK,KAAKuB,MAER,GADAvB,KAAKwB,MAAQxB,KAAKyB,OACf3B,EACFE,KAAKuB,MAAQzB,MACT,CAEJ,IAAqB4B,EAAOC,EAAxBC,EAAKpC,EACT,IAAIW,KAAMyB,EACT,GAAG5B,KAAKyB,QAAUG,EAAGzB,GAAI,CAExBuB,EAAQvB,EAAI,MAIXuB,GAEC,QAAQG,KAAK1B,KAAQ,UAAU0B,KAAK1B,GACtCH,KAAKuB,MAAQvB,KAAKyB,OAElBE,EADQ,KAAKE,KAAK1B,GACVA,EAAG2B,QAAQ,KAAM,OAEjB3B,EAAG2B,QAAQ,MAAO,MAExBH,IACF3B,KAAKuB,MAAQ/B,EAAWmC,MAIzBI,QAAQC,KAAK,sCACbhC,KAAKuB,MAAQvB,KAAKyB,QAKrBzB,KAAKyB,OAASzB,KAAKuB,WAEnBvB,KAAKyB,OAASzB,KAAKwB,MAMpB,OAJI3B,GAA+B,WAAjBG,KAAKC,UACtBD,KAAKiC,OAGCjC,OAIT,OADAT,EAAK2C,OAAQ7C,EAAO8C,UAAWzC,GACxBL,EAAO8C","file":"../../../fx/ext-dojo/reverse.js","sourcesContent":["define([\"dojo/_base/fx\",\r\n\t\t\"dojo/fx\",\r\n\t\t\"dojo/_base/lang\",\r\n\t\t\"dojo/fx/easing\",\r\n\t\t\"dojox/fx\"],\r\n\tfunction(baseFx, coreFx, lang, easingUtil, dojoxFx){ //\r\n\r\nvar reverseApi = {\r\n\t// summary:\r\n\t//\t\tA dojo.Animation extension that enables an easy reversal.\r\n\t// description:\r\n\t//\t\tTo use, simply require dojox.fx.ext-dojo.reverse and a reverse()\r\n\t//\t\tmethod will be added to all dojo.Animations.\r\n\t//\t\tIt can be used at any time during the animation. It does not\r\n\t//\t\tneed to be called when it ends. It also reverses the easing -\r\n\t//\t\tif dojo.fx.easing.quadIn is used, dojo.fx.easing.quadOut will\r\n\t//\t\tbe used when animating backwards.\r\n\r\n\t_reversed: false,\r\n\treverse: function(/*Boolean*/keepPaused, /*Function ? */reverseEase){\r\n\t\t// summary:\r\n\t\t//\t\tThe key method added to an animation to enable reversal.\r\n\t\t// keepPaused: Boolean\r\n\t\t//\t\tBy default, calling reverse() will play the animation if\r\n\t\t//\t\tit was paused. Pass in true to keep it paused (will have\r\n\t\t//\t\tno effect if reverse is called while animation is playing).\r\n\t\t// reverseEase: Function\r\n\t\t//\t\tA function to use for the reverse easing. This allows for\r\n\t\t//\t\tthe possibility of custom eases that are not in the dojo.fx\r\n\t\t//\t\tlibrary.\r\n\r\n\t\tvar playing = this.status() == \"playing\";\r\n\t\tthis.pause();\r\n\t\tthis._reversed = !this._reversed;\r\n\t\tvar d = this.duration,\r\n\t\t\tsofar = d * this._percent,\r\n\t\t\ttogo = d - sofar,\r\n\t\t\tcurr = new Date().valueOf(),\r\n\t\t\tcp = this.curve._properties,\r\n\t\t\tp = this.properties,\r\n\t\t\tnm\r\n\t\t;\r\n\t\tthis._endTime = curr + sofar;\r\n\t\tthis._startTime = curr - togo;\r\n\r\n\t\tif(playing){\r\n\t\t\tthis.gotoPercent(togo / d)\r\n\t\t}\r\n\t\tfor(nm in p){\r\n\t\t\tvar tmp = p[nm].start;\r\n\t\t\tp[nm].start = cp[nm].start = p[nm].end;\r\n\t\t\tp[nm].end = cp[nm].end = tmp;\r\n\t\t}\r\n\r\n\t\tif(this._reversed){\r\n\t\t\tif(!this.rEase){\r\n\t\t\t\tthis.fEase = this.easing;\r\n\t\t\t\tif(reverseEase){\r\n\t\t\t\t\tthis.rEase = reverseEase;\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// loop through dojo.fx.easing to find the matching ease\r\n\t\t\t\t\tvar de = easingUtil, found, eName;\r\n\t\t\t\t\tfor(nm in de){\r\n\t\t\t\t\t\tif(this.easing == de[nm]){\r\n\t\t\t\t\t\t\t// get ease's name\r\n\t\t\t\t\t\t\tfound = nm; break;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(found){\r\n\t\t\t\t\t\t// find ease's opposite\r\n\t\t\t\t\t\tif(/InOut/.test(nm) || !/In|Out/i.test(nm)){\r\n\t\t\t\t\t\t\tthis.rEase = this.easing;\r\n\t\t\t\t\t\t}else if(/In/.test(nm)){\r\n\t\t\t\t\t\t\teName = nm.replace(\"In\", \"Out\");\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\teName = nm.replace(\"Out\", \"In\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(eName){\r\n\t\t\t\t\t\t\tthis.rEase = easingUtil[eName];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t// default ease, and other's like linear do not have an opposite\r\n\t\t\t\t\t\tconsole.info(\"ease function to reverse not found\");\r\n\t\t\t\t\t\tthis.rEase = this.easing;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\tthis.easing = this.rEase;\r\n\t\t}else{\r\n\t\t\tthis.easing = this.fEase;\r\n\t\t}\r\n\t\tif(!keepPaused && this.status() != \"playing\"){\r\n\t\t\tthis.play();\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n};\r\nlang.extend( baseFx.Animation, reverseApi);\r\nreturn baseFx.Animation;\r\n});"]}