{"version":3,"sources":["fx/ext-dojo/complex.js"],"names":["define","dojo","lang","arrayUtil","declare","connectUtil","Color","baseFx","coreFx","getObject","da","animateProperty","options","ani","connect","p","curve","getValue","r","ret","this","_properties","prop","start","blendColors","end","tempColor","toCss","dojox","fx","_Complex","isArray","units","properties","o","test","PROP","constructor","beg","match","begProps","map","getProps","endProps","strProp","forEach","i","j","replace","makePropObject","u","str","nm","v","b","getNumAndUnits","e","num","substring","length","split","parseFloat","exec","join"],"mappings":"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","file":"../../../fx/ext-dojo/complex.js","sourcesContent":["define([\"dojo/_base/kernel\", \"dojo/_base/lang\", \"dojo/_base/array\",\"dojo/_base/declare\", \"dojo/_base/connect\", \r\n\t\"dojo/_base/Color\", \"dojo/_base/fx\", \"dojo/fx\"], \r\n\tfunction(dojo, lang, arrayUtil, declare, connectUtil, Color, baseFx, coreFx){\r\n\tlang.getObject(\"dojox.fx.ext-dojo.complex\", true);\r\n\r\n\t/*=====\r\n\treturn {\r\n\t\t// summary:\r\n\t\t//\t\tExtends dojo/_base/fx.animateProperty to animate a \"complex property\". The primary example is the\r\n\t\t//\t\tclip style: rect(10px 30px 10px 50px).\r\n\t\t//\t\tNote this can also be used with (and is actually intended for)\r\n\t\t//\t\tCSS3 properties, such as transform:\r\n\t\t//\t\ttransform: rotate(10deg) translateX(0px)\r\n\t\t// description:\r\n\t\t//\t\tThe standard animation doesn't know what to do with something like\r\n\t\t//\t\trect(...). This class identifies complex properties by they being a\r\n\t\t//\t\tstring and having parenthesis. If so, that property is made into a\r\n\t\t//\t\tdojox.fx._Complex object and the getValue() is obtained from\r\n\t\t//\t\tthere.\r\n\t\t// example:\r\n\t\t//\t\t|\tvar ani = dojo.animateProperty({\r\n\t\t//\t\t|\t\tnode:dojo.byId(\"myDiv\"),\r\n\t\t//\t\t|\t\tduration:600,\r\n\t\t//\t\t|\t\tproperties:{\r\n\t\t//\t\t|\t\t\tclip:{start:'rect(0px 50px 50px 0px)', end:'rect(10px 30px 30px 10px)'}\r\n\t\t//\t\t|\t\t}\r\n\t\t//\t\t|\t}).play();\r\n\t};\r\n\t=====*/\r\n\r\n\tvar da = baseFx.animateProperty;\r\n\tdojo.animateProperty = baseFx.animateProperty = function(options){\r\n\t\t// summary:\r\n\t\t//\t\tAn extension of dojo.animateProperty which adds functionality\r\n\t\t//\t\tthat animates a \"complex property\". The primary example is the\r\n\t\t//\t\tclip style: rect(10px 30px 10px 50px).\r\n\t\t//\t\tNote this can also be used with (and is actually intended for)\r\n\t\t//\t\tCSS3 properties, such as transform:\r\n\t\t//\t\ttransform: rotate(10deg) translateX(0px)\r\n\t\t// description:\r\n\t\t//\t\tThe standard animation doesn't know what to do with something like\r\n\t\t//\t\trect(...). This class identifies complex properties by they being a\r\n\t\t//\t\tstring and having parenthesis. If so, that property is made into a\r\n\t\t//\t\tdojox.fx._Complex object and the getValue() is obtained from\r\n\t\t//\t\tthere.\r\n\t\t// example:\r\n\t\t//\t\t|\tvar ani = dojo.animateProperty({\r\n\t\t//\t\t|\t\tnode:dojo.byId(\"myDiv\"),\r\n\t\t//\t\t|\t\tduration:600,\r\n\t\t//\t\t|\t\tproperties:{\r\n\t\t//\t\t|\t\t\tclip:{start:'rect(0px 50px 50px 0px)', end:'rect(10px 30px 30px 10px)'}\r\n\t\t//\t\t|\t\t}\r\n\t\t//\t\t|\t}).play();\r\n\r\n\t\tvar ani = da(options);\r\n\r\n\t\tconnectUtil.connect(ani, \"beforeBegin\", function(){\r\n\t\t\t// dojo.Animate original still invokes and still\r\n\t\t\t// works. We're appending this functionality to\r\n\t\t\t// modify targeted properties.\r\n\t\t\tani.curve.getValue = function(r){\r\n\t\t\t\t// Overwriting dojo.Animate's curve.getValue\r\n\t\t\t\t// This is mostly duplicate code, except it looks\r\n\t\t\t\t// for an instance of dojox.fx._Complex.\r\n\t\t\t\tvar ret = {};\r\n\t\t\t\tfor(var p in this._properties){\r\n\t\t\t\t\tvar prop = this._properties[p],\r\n\t\t\t\t\t\tstart = prop.start;\r\n\t\t\t\t\tif(start instanceof dojo.Color){\r\n\t\t\t\t\t\tret[p] = dojo.blendColors(start, prop.end, r, prop.tempColor).toCss();\r\n\t\t\t\t\t}else if(start instanceof dojox.fx._Complex){\r\n\t\t\t\t\t\tret[p] = start.getValue(r);\r\n\t\t\t\t\t}else if(!dojo.isArray(start)){\r\n\t\t\t\t\t\tret[p] = ((prop.end - start) * r) + start + (p != \"opacity\" ? prop.units || \"px\" : 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn ret;\r\n\t\t\t};\r\n\r\n\t\t\t// this.properties has already been set, as has this.curve._properties.\r\n\t\t\t// We're fixing the props in curve which will have NaN attributes from\r\n\t\t\t// our string property.\r\n\t\t\tvar pm = {};\r\n\t\t\tfor(var p in this.properties){\r\n\t\t\t\tvar o = this.properties[p];\r\n\t\t\t\tif(typeof(o.start) == \"string\" && /\\(/.test(o.start)){\r\n\t\t\t\t\tthis.curve._properties[p].start = new dojox.fx._Complex(o);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t});\r\n\t\treturn ani; // dojo.Animation\r\n\t};\r\n\t/*=====\r\n\t// Hide this override from the doc parser because it obscures the original definition of animateProperty()\r\n\t// TODO: rewrite override as around advice, so we don't need faux-return value above.\r\n\tdojo.animateProperty = baseFx.animateProperty = da;\r\n\t=====*/\r\n\r\n\treturn declare(\"dojox.fx._Complex\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tA class that takes a complex property such as\r\n\t\t//\t\tclip style: rect(10px 30px 10px 50px), and breaks it\r\n\t\t//\t\tinto separate animatable units. The object has a getValue()\r\n\t\t//\t\tthat will return a string with the modified units.\r\n\r\n\t\tPROP: /\\([\\w|,|+|\\-|#|\\.|\\s]*\\)/g,\r\n\t\tconstructor: function(options){\r\n\t\t\tvar beg = options.start.match(this.PROP);\r\n\t\t\tvar end = options.end.match(this.PROP);\r\n\r\n\t\t\tvar begProps = arrayUtil.map(beg, this.getProps, this);\r\n\t\t\tvar endProps = arrayUtil.map(end, this.getProps, this);\r\n\r\n\t\t\tthis._properties = {};\r\n\t\t\tthis.strProp = options.start;\r\n\t\t\tarrayUtil.forEach(begProps, function(prop, i){\r\n\t\t\t\tarrayUtil.forEach(prop, function(p, j){\r\n\t\t\t\t\tthis.strProp = this.strProp.replace(p, \"PROP_\"+i+\"\"+j);\r\n\t\t\t\t\tthis._properties[\"PROP_\"+i+\"\"+j] = this.makePropObject(p, endProps[i][j])\r\n\t\t\t\t},this);\r\n\t\t\t},this);\r\n\t\t},\r\n\r\n\t\tgetValue: function(/*Float*/r){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns a string with teh same integrity as the\r\n\t\t\t//\t\toriginal star and end, but with the modified units.\r\n\t\t\tvar str = this.strProp, u;\r\n\t\t\tfor(var nm in this._properties){\r\n\t\t\t\tvar v, o = this._properties[nm];\r\n\t\t\t\tif(o.units == \"isColor\"){\r\n\t\t\t\t\tv = Color.blendColors(o.beg, o.end, r).toCss(false);\r\n\t\t\t\t\tu = \"\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\tv = ((o.end - o.beg) * r) + o.beg;\r\n\t\t\t\t\tu = o.units;\r\n\t\t\t\t}\r\n\t\t\t\tstr = str.replace(nm, v + u);\r\n\t\t\t}\r\n\r\n\t\t\treturn str; // String\r\n\t\t},\r\n\r\n\t\tmakePropObject: function(/* String */beg, /* String */end){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns an object that stores the numeric value and\r\n\t\t\t//\t\tunits of the beginning and ending properties.\r\n\r\n\t\t\tvar b = this.getNumAndUnits(beg);\r\n\t\t\tvar e = this.getNumAndUnits(end);\r\n\t\t\treturn {\r\n\t\t\t\tbeg:b.num,\r\n\t\t\t\tend:e.num,\r\n\t\t\t\tunits:b.units\r\n\t\t\t}; // Object\r\n\t\t},\r\n\r\n\t\tgetProps: function(/* String */str){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHelper function that splits a stringified set of properties\r\n\t\t\t//\t\tinto individual units.\r\n\r\n\t\t\tstr = str.substring(1, str.length-1);\r\n\t\t\tvar s;\r\n\t\t\tif(/,/.test(str)){\r\n\t\t\t\tstr = str.replace(/\\s/g, \"\");\r\n\t\t\t\ts = str.split(\",\");\r\n\t\t\t}else{\r\n\t\t\t\tstr = str.replace(/\\s{2,}/g, \" \");\r\n\t\t\t\ts = str.split(\" \");\r\n\t\t\t}\r\n\t\t\treturn s; // String\r\n\t\t},\r\n\t\tgetNumAndUnits: function(prop){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHelper function that returns the numeric verion of the string\r\n\t\t\t//\t\tproperty (or dojo.Color object) and the unit in which it was\r\n\t\t\t//\t\tdefined.\r\n\r\n\t\t\tif(!prop){ return {}; }\r\n\t\t\tif(/#/.test(prop)){\r\n\t\t\t\treturn {\r\n\t\t\t\t\tnum: new Color(prop),\r\n\t\t\t\t\tunits:\"isColor\"\r\n\t\t\t\t}; // Object\r\n\t\t\t}\r\n\t\t\tvar o = {\r\n\t\t\t\tnum:parseFloat(/-*[\\d\\.\\d|\\d]{1,}/.exec(prop).join(\"\"))\r\n\t\t\t};\r\n\t\t\to.units = /[a-z]{1,}/.exec(prop);//.join(\"\");\r\n\t\t\to.units = o.units && o.units.length ? o.units.join(\"\") : \"\";\r\n\t\t\treturn o; // Object\r\n\t\t}\r\n\t});\r\n});\r\n"]}