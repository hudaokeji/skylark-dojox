{"version":3,"sources":["fx/_base.js"],"names":["define","arrayUtil","lang","baseFx","coreFx","dom","domStyle","domGeom","connectUtil","htmlUtil","dojoxFx","getObject","mixin","anim","animateProperty","fadeTo","_fade","fadeIn","fadeOut","combine","chain","slideTo","wipeIn","wipeOut","sizeTo","args","node","byId","abs","method","duration","Math","floor","top","newTop","left","newLeft","width","n","height","init","cs","getComputedStyle","pos","position","w","h","offsetTop","parseInt","offsetLeft","ret","coords","y","x","style","anim1","properties","end","start","anim2","slideBy","_anim","connect","crossFade","node1","nodes","op1","node2","highlight","startColor","color","endColor","backgroundColor","wipeTo","s","dir","endVal","props","overflow","visibility","display","now","max"],"mappings":"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","file":"../../fx/_base.js","sourcesContent":["define([\"dojo/_base/array\",\"dojo/_base/lang\", \"dojo/_base/fx\", \"dojo/fx\", \"dojo/dom\", \"dojo/dom-style\",\r\n\t    \"dojo/dom-geometry\", \"dojo/_base/connect\", \"dojo/_base/html\"],\r\n\tfunction(arrayUtil, lang, baseFx, coreFx, dom, domStyle, domGeom, connectUtil, htmlUtil){\r\n\r\n/*=====\r\nreturn {\r\n\t// summary:\r\n\t//\t\tExperimental and extended Animations beyond Dojo Core / Base functionality.\r\n\t//\t\tProvides advanced Lines, Animations, and convenience aliases.\r\n};\r\n=====*/\r\n\r\nvar dojoxFx = lang.getObject(\"dojox.fx\", true);\r\n\r\nlang.mixin(dojoxFx, {\r\n\r\n\t// anim: Function\r\n\t//\t\tAlias of `dojo.anim` - the shorthand `dojo.animateProperty` with auto-play\r\n\tanim: baseFx.anim,\r\n\r\n\t// animateProperty: Function\r\n\t//\t\tAlias of `dojo.animateProperty` - animate any CSS property\r\n\tanimateProperty: baseFx.animateProperty,\r\n\r\n\t// fadeTo: Function\r\n\t//\t\tFade an element from an opacity to an opacity.\r\n\t//\t\tOmit `start:` property to detect. `end:` property is required.\r\n\t//\t\tUltimately an alias to `dojo._fade`\r\n\tfadeTo: baseFx._fade,\r\n\r\n\t// fadeIn: Function\r\n\t//\t\tAlias of `dojo.fadeIn` - Fade a node in.\r\n\tfadeIn: baseFx.fadeIn,\r\n\t\r\n\t// fadeOut: Function\r\n\t//\t\tAlias of `dojo.fadeOut` - Fades a node out.\r\n\tfadeOut: baseFx.fadeOut,\r\n\r\n\t// combine: Function\r\n\t//\t\tAlias of `dojo.fx.combine` - Run an array of animations in parallel\r\n\tcombine: coreFx.combine,\r\n\r\n\t// chain: Function\r\n\t//\t\tAlias of `dojo.fx.chain` - Run an array of animations in sequence\r\n\tchain: coreFx.chain,\r\n\r\n\t// slideTo: Function\r\n\t//\t\tAlias of `dojo.fx.slideTo` - Slide a node to a defined top/left coordinate\r\n\tslideTo: coreFx.slideTo,\r\n\r\n\t// wipeIn: Function\r\n\t//\t\tAlias of `dojo.fx.wipeIn` - Wipe a node to visible\r\n\twipeIn: coreFx.wipeIn,\r\n\r\n\t// wipeOut: Function\r\n\t//\t\tAlias of `dojo.fx.wipeOut` - Wipe a node to non-visible\r\n\twipeOut: coreFx.wipeOut\r\n});\r\n\r\n\r\ndojoxFx.sizeTo = function(/* Object */args){\r\n\t// summary:\r\n\t//\t\tCreates an animation that will size a node\r\n\t//\r\n\t// description:\r\n\t//\t\tReturns an animation that will size the target node\r\n\t//\t\tdefined in args Object about it's center to\r\n\t//\t\ta width and height defined by (args.width, args.height),\r\n\t//\t\tsupporting an optional method: chain||combine mixin\r\n\t//\t\t(defaults to chain).\r\n\t//\r\n\t//\t- works best on absolutely or relatively positioned elements\r\n\t//\r\n\t// example:\r\n\t//\t|\t// size #myNode to 400px x 200px over 1 second\r\n\t//\t|\tdojo.fx.sizeTo({\r\n\t//\t|\t\tnode:'myNode',\r\n\t//\t|\t\tduration: 1000,\r\n\t//\t|\t\twidth: 400,\r\n\t//\t|\t\theight: 200,\r\n\t//\t|\t\tmethod: \"combine\"\r\n\t//\t|\t}).play();\r\n\t//\r\n\r\n\tvar node = args.node = dom.byId(args.node),\r\n\t\tabs = \"absolute\";\r\n\r\n\tvar method = args.method || \"chain\";\r\n\tif(!args.duration){ args.duration = 500; } // default duration needed\r\n\tif(method == \"chain\"){ args.duration = Math.floor(args.duration / 2); }\r\n\t\r\n\tvar top, newTop, left, newLeft, width, height = null;\r\n\r\n\tvar init = (function(n){\r\n\t\treturn function(){\r\n\t\t\tvar cs = domStyle.getComputedStyle(n),\r\n\t\t\t\tpos = cs.position,\r\n\t\t\t\tw = cs.width,\r\n\t\t\t\th = cs.height\r\n\t\t\t;\r\n\t\t\t\r\n\t\t\ttop = (pos == abs ? n.offsetTop : parseInt(cs.top) || 0);\r\n\t\t\tleft = (pos == abs ? n.offsetLeft : parseInt(cs.left) || 0);\r\n\t\t\twidth = (w == \"auto\" ? 0 : parseInt(w));\r\n\t\t\theight = (h == \"auto\" ? 0 : parseInt(h));\r\n\t\t\t\r\n\t\t\tnewLeft = left - Math.floor((args.width - width) / 2);\r\n\t\t\tnewTop = top - Math.floor((args.height - height) / 2);\r\n\r\n\t\t\tif(pos != abs && pos != 'relative'){\r\n\t\t\t\tvar ret = domStyle.coords(n, true);\r\n\t\t\t\ttop = ret.y;\r\n\t\t\t\tleft = ret.x;\r\n\t\t\t\tn.style.position = abs;\r\n\t\t\t\tn.style.top = top + \"px\";\r\n\t\t\t\tn.style.left = left + \"px\";\r\n\t\t\t}\r\n\t\t}\r\n\t})(node);\r\n\r\n\tvar anim1 = baseFx.animateProperty(lang.mixin({\r\n\t\tproperties: {\r\n\t\t\theight: function(){\r\n\t\t\t\tinit();\r\n\t\t\t\treturn { end: args.height || 0, start: height };\r\n\t\t\t},\r\n\t\t\ttop: function(){\r\n\t\t\t\treturn { start: top, end: newTop };\r\n\t\t\t}\r\n\t\t}\r\n\t}, args));\r\n\tvar anim2 = baseFx.animateProperty(lang.mixin({\r\n\t\tproperties: {\r\n\t\t\twidth: function(){\r\n\t\t\t\treturn { start: width, end: args.width || 0 }\r\n\t\t\t},\r\n\t\t\tleft: function(){\r\n\t\t\t\treturn { start: left, end: newLeft }\r\n\t\t\t}\r\n\t\t}\r\n\t}, args));\r\n\r\n\tvar anim = coreFx[(args.method == \"combine\" ? \"combine\" : \"chain\")]([anim1, anim2]);\r\n\treturn anim; // dojo.Animation\r\n\r\n};\r\n\r\ndojoxFx.slideBy = function(/* Object */args){\r\n\t// summary:\r\n\t//\t\tReturns an animation to slide a node by a defined offset.\r\n\t//\r\n\t// description:\r\n\t//\t\tReturns an animation that will slide a node (args.node) from it's\r\n\t//\t\tcurrent position to it's current posision plus the numbers defined\r\n\t//\t\tin args.top and args.left. standard dojo.fx mixin's apply.\r\n\t//\r\n\t// example:\r\n\t//\t|\t// slide domNode 50px down, and 22px left\r\n\t//\t|\tdojox.fx.slideBy({\r\n\t//\t|\t\tnode: domNode, duration:400,\r\n\t//\t|\t\ttop: 50, left: -22\r\n\t//\t|\t}).play();\r\n\r\n\tvar node = args.node = dom.byId(args.node),\r\n\t\ttop, left;\r\n\r\n\tvar init = (function(n){\r\n\t\treturn function(){\r\n\t\t\tvar cs = domStyle.getComputedStyle(n);\r\n\t\t\tvar pos = cs.position;\r\n\t\t\ttop = (pos == 'absolute' ? n.offsetTop : parseInt(cs.top) || 0);\r\n\t\t\tleft = (pos == 'absolute' ? n.offsetLeft : parseInt(cs.left) || 0);\r\n\t\t\tif(pos != 'absolute' && pos != 'relative'){\r\n\t\t\t\tvar ret = domGeom.coords(n, true);\r\n\t\t\t\ttop = ret.y;\r\n\t\t\t\tleft = ret.x;\r\n\t\t\t\tn.style.position = \"absolute\";\r\n\t\t\t\tn.style.top = top + \"px\";\r\n\t\t\t\tn.style.left = left + \"px\";\r\n\t\t\t}\r\n\t\t}\r\n\t})(node);\r\n\tinit();\r\n\t\r\n\tvar _anim = baseFx.animateProperty(lang.mixin({\r\n\t\tproperties: {\r\n\t\t\t// FIXME: is there a way to update the _Line after creation?\r\n\t\t\t// null start values allow chaining to work, animateProperty will\r\n\t\t\t// determine them for us (except in ie6? -- ugh)\r\n\t\t\ttop: top + (args.top || 0),\r\n\t\t\tleft: left + (args.left || 0)\r\n\t\t}\r\n\t}, args));\r\n\tconnectUtil.connect(_anim, \"beforeBegin\", _anim, init);\r\n\treturn _anim; // dojo.Animation\r\n};\r\n\r\ndojoxFx.crossFade = function(/* Object */args){\r\n\t// summary:\r\n\t//\t\tReturns an animation cross fading two element simultaneously\r\n\t// args:\r\n\t//\t\t- args.nodes: Array - two element array of domNodes, or id's\r\n\t//\r\n\t//\t\tall other standard animation args mixins apply. args.node ignored.\r\n\r\n\t// simple check for which node is visible, maybe too simple?\r\n\tvar node1 = args.nodes[0] = dom.byId(args.nodes[0]),\r\n\t\top1 = htmlUtil.style(node1,\"opacity\"),\r\n\t\tnode2 = args.nodes[1] = dom.byId(args.nodes[1]),\r\n\t\top2 = htmlUtil.style(node2, \"opacity\")\r\n\t;\r\n\t\r\n\tvar _anim = coreFx.combine([\r\n\t\tbaseFx[(op1 == 0 ? \"fadeIn\" : \"fadeOut\")](lang.mixin({\r\n\t\t\tnode: node1\r\n\t\t},args)),\r\n\t\tbaseFx[(op1 == 0 ? \"fadeOut\" : \"fadeIn\")](lang.mixin({\r\n\t\t\tnode: node2\r\n\t\t},args))\r\n\t]);\r\n\treturn _anim; // dojo.Animation\r\n};\r\n\r\ndojoxFx.highlight = function(/*Object*/ args){\r\n\t// summary:\r\n\t//\t\tHighlight a node\r\n\t//\r\n\t// description:\r\n\t//\t\tReturns an animation that sets the node background to args.color\r\n\t//\t\tthen gradually fades back the original node background color\r\n\t//\r\n\t// example:\r\n\t//\t|\tdojox.fx.highlight({ node:\"foo\" }).play();\r\n\r\n\tvar node = args.node = dom.byId(args.node);\r\n\r\n\targs.duration = args.duration || 400;\r\n\t\r\n\t// Assign default color light yellow\r\n\tvar startColor = args.color || '#ffff99',\r\n\t\tendColor = htmlUtil.style(node, \"backgroundColor\")\r\n\t;\r\n\r\n\t// safari \"fix\"\r\n\t// safari reports rgba(0, 0, 0, 0) (black) as transparent color, while\r\n\t// other browsers return \"transparent\", rendered as white by default by\r\n\t// dojo.Color; now dojo.Color maps \"transparent\" to\r\n\t// djConfig.transparentColor ([r, g, b]), if present; so we can use\r\n\t// the color behind the effect node\r\n\tif(endColor == \"rgba(0, 0, 0, 0)\"){\r\n\t\tendColor = \"transparent\";\r\n\t}\r\n\r\n\tvar anim = baseFx.animateProperty(lang.mixin({\r\n\t\tproperties: {\r\n\t\t\tbackgroundColor: { start: startColor, end: endColor }\r\n\t\t}\r\n\t}, args));\r\n\r\n\tif(endColor == \"transparent\"){\r\n\t\tconnectUtil.connect(anim, \"onEnd\", anim, function(){\r\n\t\t\tnode.style.backgroundColor = endColor;\r\n\t\t});\r\n\t}\r\n\r\n\treturn anim; // dojo.Animation\r\n};\r\n\r\n \r\ndojoxFx.wipeTo = function(/*Object*/ args){\r\n\t// summary:\r\n\t//\t\tAnimate a node wiping to a specific width or height\r\n\t//\r\n\t// description:\r\n\t//\t\tReturns an animation that will expand the\r\n\t//\t\tnode defined in 'args' object from it's current to\r\n\t//\t\tthe height or width value given by the args object.\r\n\t//\r\n\t//\t\tdefault to height:, so leave height null and specify width:\r\n\t//\t\tto wipeTo a width. note: this may be deprecated by a\r\n\t//\r\n\t//\t\tNote that the final value should not include\r\n\t//\t\tunits and should be an integer.  Thus a valid args object\r\n\t//\t\twould look something like this:\r\n\t//\r\n\t//\t\t|\tdojox.fx.wipeTo({ node: \"nodeId\", height: 200 }).play();\r\n\t//\r\n\t//\t\tNode must have no margin/border/padding, so put another\r\n\t//\t\tnode inside your target node for additional styling.\r\n\r\n\targs.node = dom.byId(args.node);\r\n\tvar node = args.node, s = node.style;\r\n\r\n\tvar dir = (args.width ? \"width\" : \"height\"),\r\n\t\tendVal = args[dir],\r\n\t\tprops = {}\r\n\t;\r\n\r\n\tprops[dir] = {\r\n\t\t// wrapped in functions so we wait till the last second to query (in case value has changed)\r\n\t\tstart: function(){\r\n\t\t\t// start at current [computed] height, but use 1px rather than 0\r\n\t\t\t// because 0 causes IE to display the whole panel\r\n\t\t\ts.overflow = \"hidden\";\r\n\t\t\tif(s.visibility == \"hidden\" || s.display == \"none\"){\r\n\t\t\t\ts[dir] = \"1px\";\r\n\t\t\t\ts.display = \"\";\r\n\t\t\t\ts.visibility = \"\";\r\n\t\t\t\treturn 1;\r\n\t\t\t}else{\r\n\t\t\t\tvar now = htmlUtil.style(node,dir);\r\n\t\t\t\treturn Math.max(now, 1);\r\n\t\t\t}\r\n\t\t},\r\n\t\tend: endVal\r\n\t};\r\n\r\n\tvar anim = baseFx.animateProperty(lang.mixin({ properties: props }, args));\r\n\treturn anim; // dojo.Animation\r\n};\r\n\r\nreturn dojoxFx;\r\n});\r\n"]}