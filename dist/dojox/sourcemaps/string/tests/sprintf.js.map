{"version":3,"sources":["string/tests/sprintf.js"],"names":["dojo","provide","require","tests","register","name","runTest","t","sprintf","dojox","string","is","error","e","message","temperature","crevace","quantity","foo","i","str","Formatter","format"],"mappings":"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","file":"../../../string/tests/sprintf.js","sourcesContent":["dojo.provide(\"dojox.string.tests.sprintf\");\r\n\r\ndojo.require(\"dojox.string.sprintf\");\r\ndojo.require(\"dojo.string\");\r\n\r\n\r\n// Mapping using the %(var) format\r\n\r\n// Flags:\r\n//\t(space): Preceeds a positive number with a blank space\r\n//\t+: Preceeds a positive number with a + sign\r\n//\t0: Pads numbers using zeroes\r\n//\t-: Left justify a number (they're right justified by default)\r\n//\t#: Alternate view for the specifier\r\n\r\ntests.register(\"dojox.string.tests.sprintf\", [\r\n\t{\r\n\t\tname: \"Flag: (space)\",\r\n\t\trunTest: function(t){\r\n\t\t\tvar sprintf = dojox.string.sprintf;\r\n\r\n\t\t\tt.is(\" 42\", sprintf(\"% d\", 42));\r\n\t\t\tt.is(\"-42\", sprintf(\"% d\", -42));\r\n\t\t\tt.is(\"   42\", sprintf(\"% 5d\", 42));\r\n\t\t\tt.is(\"  -42\", sprintf(\"% 5d\", -42));\r\n\t\t\tt.is(\"             42\", sprintf(\"% 15d\", 42));\r\n\t\t\tt.is(\"            -42\", sprintf(\"% 15d\", -42));\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tname: \"Flag: +\",\r\n\t\trunTest: function(t){\r\n\t\t\tvar sprintf = dojox.string.sprintf;\r\n\r\n\t\t\tt.is(\"+42\", sprintf(\"%+d\", 42));\r\n\t\t\tt.is(\"-42\", sprintf(\"%+d\", -42));\r\n\t\t\tt.is(\"  +42\", sprintf(\"%+5d\", 42));\r\n\t\t\tt.is(\"  -42\", sprintf(\"%+5d\", -42));\r\n\t\t\tt.is(\"            +42\", sprintf(\"%+15d\", 42));\r\n\t\t\tt.is(\"            -42\", sprintf(\"%+15d\", -42));\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tname: \"Flag: 0\",\r\n\t\trunTest: function(t){\r\n\t\t\tvar sprintf = dojox.string.sprintf;\r\n\r\n\t\t\tt.is(\"42\", sprintf(\"%0d\", 42));\r\n\t\t\tt.is(\"-42\", sprintf(\"%0d\", -42));\r\n\t\t\tt.is(\"00042\", sprintf(\"%05d\", 42));\r\n\t\t\tt.is(\"00-42\", sprintf(\"%05d\", -42));\r\n\t\t\tt.is(\"000000000000042\", sprintf(\"%015d\", 42));\r\n\t\t\tt.is(\"000000000000-42\", sprintf(\"%015d\", -42));\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tname: \"Flag: -\",\r\n\t\trunTest: function(t){\r\n\t\t\tvar sprintf = dojox.string.sprintf;\r\n\r\n\t\t\tt.is(\"42\", sprintf(\"%-d\", 42));\r\n\t\t\tt.is(\"-42\", sprintf(\"%-d\", -42));\r\n\t\t\tt.is(\"42   \", sprintf(\"%-5d\", 42));\r\n\t\t\tt.is(\"-42  \", sprintf(\"%-5d\", -42));\r\n\t\t\tt.is(\"42             \", sprintf(\"%-15d\", 42));\r\n\t\t\tt.is(\"-42            \", sprintf(\"%-15d\", -42));\r\n\r\n\t\t\tt.is(\"42\", sprintf(\"%-0d\", 42));\r\n\t\t\tt.is(\"-42\", sprintf(\"%-0d\", -42));\r\n\t\t\tt.is(\"42   \", sprintf(\"%-05d\", 42));\r\n\t\t\tt.is(\"-42  \", sprintf(\"%-05d\", -42));\r\n\t\t\tt.is(\"42             \", sprintf(\"%-015d\", 42));\r\n\t\t\tt.is(\"-42            \", sprintf(\"%-015d\", -42));\r\n\r\n\t\t\tt.is(\"42\", sprintf(\"%0-d\", 42));\r\n\t\t\tt.is(\"-42\", sprintf(\"%0-d\", -42));\r\n\t\t\tt.is(\"42   \", sprintf(\"%0-5d\", 42));\r\n\t\t\tt.is(\"-42  \", sprintf(\"%0-5d\", -42));\r\n\t\t\tt.is(\"42             \", sprintf(\"%0-15d\", 42));\r\n\t\t\tt.is(\"-42            \", sprintf(\"%0-15d\", -42));\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tname: \"Precision\",\r\n\t\trunTest: function(t){\r\n\t\t\tvar sprintf = dojox.string.sprintf;\r\n\r\n\t\t\tt.is(\"42\", sprintf(\"%d\", 42.8952));\r\n\t\t\tt.is(\"42\", sprintf(\"%.2d\", 42.8952)); // Note: the %d format is an int\r\n\t\t\tt.is(\"42\", sprintf(\"%.2i\", 42.8952));\r\n\t\t\tt.is(\"42.90\", sprintf(\"%.2f\", 42.8952));\r\n\t\t\tt.is(\"42.90\", sprintf(\"%.2F\", 42.8952));\r\n\t\t\tt.is(\"42.8952000000\", sprintf(\"%.10f\", 42.8952));\r\n\t\t\tt.is(\"42.90\", sprintf(\"%1.2f\", 42.8952));\r\n\t\t\tt.is(\" 42.90\", sprintf(\"%6.2f\", 42.8952));\r\n\t\t\tt.is(\"042.90\", sprintf(\"%06.2f\", 42.8952));\r\n\t\t\tt.is(\"+42.90\", sprintf(\"%+6.2f\", 42.8952));\r\n\t\t\tt.is(\"42.8952000000\", sprintf(\"%5.10f\", 42.8952));\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tname: \"Bases\",\r\n\t\trunTest: function(t){\r\n\t\t\tvar sprintf = dojox.string.sprintf;\r\n\r\n\t\t\tt.is(\"\\x7f\", sprintf(\"%c\", 0x7f));\r\n\r\n\t\t\tvar error = false;\r\n\t\t\ttry {\r\n\t\t\t\tsprintf(\"%c\", -100);\r\n\t\t\t}catch(e){\r\n\t\t\t\tt.is(\"invalid character code passed to %c in sprintf\", e.message);\r\n\t\t\t\terror = true;\r\n\t\t\t}\r\n\t\t\tt.t(error);\r\n\r\n\t\t\terror = false;\r\n\t\t\ttry {\r\n\t\t\t\tsprintf(\"%c\", 0x200000);\r\n\t\t\t}catch(e){\r\n\t\t\t\tt.is(\"invalid character code passed to %c in sprintf\", e.message);\r\n\t\t\t\terror = true;\r\n\t\t\t}\r\n\t\t\tt.t(error);\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tname: \"Mapping\",\r\n\t\trunTest: function(t){\r\n\t\t\tvar sprintf = dojox.string.sprintf;\r\n\r\n\t\t\t// %1$s format\r\n\t\t\tt.is(\"%1$\", sprintf(\"%1$\"));\r\n\t\t\tt.is(\"%0$s\", sprintf(\"%0$s\"));\r\n\t\t\tt.is(\"Hot Pocket\", sprintf(\"%1$s %2$s\", \"Hot\", \"Pocket\"));\r\n\t\t\tt.is(\"12.0 Hot Pockets\", sprintf(\"%1$.1f %2$s %3$ss\", 12, \"Hot\", \"Pocket\"));\r\n\t\t\tt.is(\" 42\", sprintf(\"%1$*.f\", \"42\", 3));\r\n\r\n\t\t\terror = false;\r\n\t\t\ttry {\r\n\t\t\t\tsprintf(\"%2$*s\", \"Hot Pocket\");\r\n\t\t\t}catch(e){\r\n\t\t\t\tt.is(\"got 1 printf arguments, insufficient for '%2$*s'\", e.message);\r\n\t\t\t\terror = true;\r\n\t\t\t}\r\n\t\t\tt.t(error);\r\n\r\n\t\t\t// %(map)s format\r\n\t\t\tt.is(\"%(foo\", sprintf(\"%(foo\", {}));\r\n\t\t\tt.is(\"Hot Pocket\", sprintf(\"%(temperature)s %(crevace)s\", {\r\n\t\t\t\ttemperature: \"Hot\",\r\n\t\t\t\tcrevace: \"Pocket\"\r\n\t\t\t}));\r\n\t\t\tt.is(\"12.0 Hot Pockets\", sprintf(\"%(quantity).1f %(temperature)s %(crevace)ss\", {\r\n\t\t\t\tquantity: 12,\r\n\t\t\t\ttemperature: \"Hot\",\r\n\t\t\t\tcrevace: \"Pocket\"\r\n\t\t\t}));\r\n\r\n\t\t\tvar error = false;\r\n\t\t\ttry {\r\n\t\t\t\tsprintf(\"%(foo)s\", 42);\r\n\t\t\t}catch(e){\r\n\t\t\t\tt.is(\"format requires a mapping\", e.message);\r\n\t\t\t\terror = true;\r\n\t\t\t}\r\n\t\t\tt.t(error);\r\n\r\n\t\t\terror = false;\r\n\t\t\ttry {\r\n\t\t\t\tsprintf(\"%(foo)s %(bar)s\", \"foo\", 42);\r\n\t\t\t}catch(e){\r\n\t\t\t\tt.is(\"format requires a mapping\", e.message);\r\n\t\t\t\terror = true;\r\n\t\t\t}\r\n\t\t\tt.t(error);\r\n\r\n\t\t\terror = false;\r\n\t\t\ttry {\r\n\t\t\t\tsprintf(\"%(foo)*s\", {\r\n\t\t\t\t\tfoo: \"Hot Pocket\"\r\n\t\t\t\t});\r\n\t\t\t}catch(e){\r\n\t\t\t\tt.is(\"* width not supported in mapped formats\", e.message);\r\n\t\t\t\terror = true;\r\n\t\t\t}\r\n\t\t\tt.t(error);\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tname: \"Positionals\",\r\n\t\trunTest: function(t){\r\n\t\t\tvar sprintf = dojox.string.sprintf;\r\n\r\n\t\t\tt.is(\" foo\", sprintf(\"%*s\", \"foo\", 4));\r\n\t\t\tt.is(\"      3.14\", sprintf(\"%*.*f\", 3.14159265, 10, 2));\r\n\t\t\tt.is(\"0000003.14\", sprintf(\"%0*.*f\", 3.14159265, 10, 2));\r\n\t\t\tt.is(\"3.14      \", sprintf(\"%-*.*f\", 3.14159265, 10, 2));\r\n\r\n\t\t\tvar error = false;\r\n\t\t\ttry {\r\n\t\t\t\tsprintf(\"%*s\", \"foo\", \"bar\");\r\n\t\t\t}catch(e){\r\n\t\t\t\tt.is(\"the argument for * width at position 2 is not a number in %*s\", e.message);\r\n\t\t\t\terror = true;\r\n\t\t\t}\r\n\t\t\tt.t(error);\r\n\r\n\t\t\terror = false;\r\n\t\t\ttry {\r\n\t\t\t\tsprintf(\"%10.*f\", \"foo\", 42);\r\n\t\t\t}catch(e){\r\n\t\t\t\tt.is(\"format argument 'foo' not a float; parseFloat returned NaN\", e.message);\r\n\t\t\t\terror = true;\r\n\t\t\t}\r\n\t\t\tt.t(error);\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tname: \"vs. Formatter\",\r\n\t\trunTest: function(t){\r\n\t\t\tvar sprintf = dojox.string.sprintf;\r\n\r\n\t\t\tfor(var i = 0; i < 1000; i++){\r\n\t\t\t\tsprintf(\"%d %s Pockets\", i, \"Hot\");\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tname: \"Formatter\",\r\n\t\trunTest: function(t){\r\n\t\t\tvar Formatter = dojox.string.sprintf.Formatter;\r\n\r\n\t\t\tvar str = new Formatter(\"%d %s Pockets\");\r\n\t\t\tfor(var i = 0; i < 1000; i++){\r\n\t\t\t\tstr.format(i, \"Hot\");\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tname: \"Miscellaneous\",\r\n\t\trunTest: function(t) {\r\n\t\t\tvar sprintf = dojox.string.sprintf;\r\n\r\n\t\t\tt.is(\"+hello+\", sprintf(\"+%s+\", \"hello\"));\r\n\t\t\tt.is(\"+10+\", sprintf(\"+%d+\", 10));\r\n\t\t\tt.is(\"a\", sprintf(\"%c\", \"a\"));\r\n\t\t\tt.is('\"', sprintf(\"%c\", 34));\r\n\t\t\tt.is('$', sprintf(\"%c\", 36));\r\n\t\t\tt.is(\"10\", sprintf(\"%d\", 10));\r\n\r\n\t\t\tvar error = false;\r\n\t\t\ttry {\r\n\t\t\t\tsprintf(\"%s%s\", 42);\r\n\t\t\t}catch(e){\r\n\t\t\t\tt.is(\"got 1 printf arguments, insufficient for '%s%s'\", e.message);\r\n\t\t\t\terror = true;\r\n\t\t\t}\r\n\t\t\tt.t(error);\r\n\r\n\t\t\terror = false;\r\n\t\t\ttry {\r\n\t\t\t\tsprintf(\"%c\");\r\n\t\t\t}catch(e){\r\n\t\t\t\tt.is(\"got 0 printf arguments, insufficient for '%c'\", e.message);\r\n\t\t\t\terror = true;\r\n\t\t\t}\r\n\t\t\tt.t(error);\r\n\r\n\t\t\tt.is(\"%10\", sprintf(\"%10\", 42));\r\n\t\t}\r\n\t}\r\n]);"]}