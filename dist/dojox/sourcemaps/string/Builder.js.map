{"version":3,"sources":["string/Builder.js"],"names":["define","lang","getObject","dojox","Builder","str","b","this","length","append","s","arguments","tmp","i","concat","apply","appendArray","strings","clear","replace","oldStr","newStr","remove","start","len","undefined","substr","insert","index","slice","toString"],"mappings":";;;;;;;AAAAA,QAAQ,mBACN,SAASC,GAmIV,OAlIcA,EAAKC,UAAU,UAAU,EAAMC,OAAOC,QAClD,SAAoBC,GAMrB,IAAIC,EAAI,GAIRC,KAAKC,OAAS,EAEdD,KAAKE,OAAS,SAAwBC,GAGrC,GAAGC,UAAUH,OAAO,EAAE,CAwBrB,IAAII,EAAI,GACR,OADcD,UAAUH,QAEvB,KAAK,EAAGI,EAAI,GAAGD,UAAU,GAAGC,EAC5B,KAAK,EAAGA,EAAI,GAAGD,UAAU,GAAGC,EAC5B,KAAK,EAAGA,EAAI,GAAGD,UAAU,GAAGC,EAC5B,KAAK,EAAGA,EAAI,GAAGD,UAAU,GAAGC,EAC5B,KAAK,EAAGA,EAAI,GAAGD,UAAU,GAAGC,EAC5B,KAAK,EAAGA,EAAI,GAAGD,UAAU,GAAGC,EAC5B,KAAK,EAAGA,EAAI,GAAGD,UAAU,GAAGC,EAC5B,KAAK,EACJN,GAAG,GAAGK,UAAU,GAAGA,UAAU,GAAGC,EAChC,MAED,QAEC,IADA,IAAIC,EAAE,EACAA,EAAEF,UAAUH,QACjBI,GAAOD,UAAUE,KAElBP,GAAKM,QAIPN,GAAKI,EAGN,OADAH,KAAKC,OAASF,EAAEE,OACTD,MAGRA,KAAKO,OAAS,SAAsBJ,GAGnC,OAAOH,KAAKE,OAAOM,MAAMR,KAAMI,YAGhCJ,KAAKS,YAAc,SAAkBC,GAKpC,OAAOV,KAAKE,OAAOM,MAAMR,KAAMU,IAGhCV,KAAKW,MAAQ,WAKZ,OAFAZ,EAAI,GACJC,KAAKC,OAAS,EACPD,MAGRA,KAAKY,QAAU,SAAqBC,EAAqBC,GAKxD,OAFAf,EAAIA,EAAEa,QAAQC,EAAOC,GACrBd,KAAKC,OAASF,EAAEE,OACTD,MAGRA,KAAKe,OAAS,SAAqBC,EAAoBC,GAKtD,YADSC,IAAND,IAAkBA,EAAMlB,EAAEE,QACnB,GAAPgB,EAAkBjB,MACrBD,EAAIA,EAAEoB,OAAO,EAAGH,GAASjB,EAAEoB,OAAOH,EAAMC,GACxCjB,KAAKC,OAASF,EAAEE,OACTD,OAGRA,KAAKoB,OAAS,SAAqBC,EAAmBvB,GASrD,OALCC,EADW,GAATsB,EACEvB,EAAMC,EAENA,EAAEuB,MAAM,EAAGD,GAASvB,EAAMC,EAAEuB,MAAMD,GAEvCrB,KAAKC,OAASF,EAAEE,OACTD,MAGRA,KAAKuB,SAAW,WAGf,OAAOxB,GAILD,GAAME,KAAKE,OAAOJ","file":"../../string/Builder.js","sourcesContent":["define([\"dojo/_base/lang\"], \r\n  function(lang){\r\n\tvar Builder = lang.getObject(\"string\", true, dojox).Builder =\r\n\t  function(/*String?*/str){\r\n\t\t// summary:\r\n\t\t//\t\tA fast buffer for creating large strings.\r\n\r\n\t\t//\tN.B. the public nature of the internal buffer is no longer\r\n\t\t//\tneeded because the IE-specific fork is no longer needed--TRT.\r\n\t\tvar b = \"\";\r\n\r\n\t\t// length: Number\r\n\t\t//\t\tThe current length of the internal string.\r\n\t\tthis.length = 0;\r\n\t\t\r\n\t\tthis.append = function(/* String... */s){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAppend all arguments to the end of the buffer\r\n\t\t\tif(arguments.length>1){\r\n\t\t\t\t/*\r\n\t\t\t\t\tThis is a loop unroll was designed specifically for Firefox;\r\n\t\t\t\t\tit would seem that static index access on an Arguments\r\n\t\t\t\t\tobject is a LOT faster than doing dynamic index access.\r\n\t\t\t\t\tTherefore, we create a buffer string and take advantage\r\n\t\t\t\t\tof JS's switch fallthrough.  The peformance of this method\r\n\t\t\t\t\tcomes very close to straight up string concatenation (+=).\r\n\r\n\t\t\t\t\tIf the arguments object length is greater than 9, we fall\r\n\t\t\t\t\tback to standard dynamic access.\r\n\r\n\t\t\t\t\tThis optimization seems to have no real effect on either\r\n\t\t\t\t\tSafari or Opera, so we just use it for all.\r\n\r\n\t\t\t\t\tIt turns out also that this loop unroll can increase performance\r\n\t\t\t\t\tsignificantly with Internet Explorer, particularly when\r\n\t\t\t\t\tas many arguments are provided as possible.\r\n\r\n\t\t\t\t\tLoop unroll per suggestion from Kris Zyp, implemented by\r\n\t\t\t\t\tTom Trenka.\r\n\r\n\t\t\t\t\tNote: added empty string to force a string cast if needed.\r\n\t\t\t\t */\r\n\t\t\t\tvar tmp=\"\", l=arguments.length;\r\n\t\t\t\tswitch(l){\r\n\t\t\t\t\tcase 9: tmp=\"\"+arguments[8]+tmp;\r\n\t\t\t\t\tcase 8: tmp=\"\"+arguments[7]+tmp;\r\n\t\t\t\t\tcase 7: tmp=\"\"+arguments[6]+tmp;\r\n\t\t\t\t\tcase 6: tmp=\"\"+arguments[5]+tmp;\r\n\t\t\t\t\tcase 5: tmp=\"\"+arguments[4]+tmp;\r\n\t\t\t\t\tcase 4: tmp=\"\"+arguments[3]+tmp;\r\n\t\t\t\t\tcase 3: tmp=\"\"+arguments[2]+tmp;\r\n\t\t\t\t\tcase 2: {\r\n\t\t\t\t\t\tb+=\"\"+arguments[0]+arguments[1]+tmp;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdefault: {\r\n\t\t\t\t\t\tvar i=0;\r\n\t\t\t\t\t\twhile(i<arguments.length){\r\n\t\t\t\t\t\t\ttmp += arguments[i++];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tb += tmp;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tb += s;\r\n\t\t\t}\r\n\t\t\tthis.length = b.length;\r\n\t\t\treturn this;\t//\tdojox.string.Builder\r\n\t\t};\r\n\t\t\r\n\t\tthis.concat = function(/*String...*/s){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAlias for append.\r\n\t\t\treturn this.append.apply(this, arguments);\t//\tdojox.string.Builder\r\n\t\t};\r\n\t\t\r\n\t\tthis.appendArray = function(/*Array*/strings) {\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAppend an array of items to the internal buffer.\r\n\r\n\t\t\t//\tChanged from String.prototype.concat.apply because of IE.\r\n\t\t\treturn this.append.apply(this, strings);\t//\tdojox.string.Builder\r\n\t\t};\r\n\t\t\r\n\t\tthis.clear = function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRemove all characters from the buffer.\r\n\t\t\tb = \"\";\r\n\t\t\tthis.length = 0;\r\n\t\t\treturn this;\t//\tdojox.string.Builder\r\n\t\t};\r\n\t\t\r\n\t\tthis.replace = function(/* String */oldStr, /* String */ newStr){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReplace instances of one string with another in the buffer.\r\n\t\t\tb = b.replace(oldStr,newStr);\r\n\t\t\tthis.length = b.length;\r\n\t\t\treturn this;\t//\tdojox.string.Builder\r\n\t\t};\r\n\t\t\r\n\t\tthis.remove = function(/* Number */start, /* Number? */len){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRemove len characters starting at index start.  If len\r\n\t\t\t//\t\tis not provided, the end of the string is assumed.\r\n\t\t\tif(len===undefined){ len = b.length; }\r\n\t\t\tif(len == 0){ return this; }\r\n\t\t\tb = b.substr(0, start) + b.substr(start+len);\r\n\t\t\tthis.length = b.length;\r\n\t\t\treturn this;\t//\tdojox.string.Builder\r\n\t\t};\r\n\t\t\r\n\t\tthis.insert = function(/* Number */index, /* String */str){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInsert string str starting at index.\r\n\t\t\tif(index == 0){\r\n\t\t\t\tb = str + b;\r\n\t\t\t}else{\r\n\t\t\t\tb = b.slice(0, index) + str + b.slice(index);\r\n\t\t\t}\r\n\t\t\tthis.length = b.length;\r\n\t\t\treturn this;\t//\tdojox.string.Builder\r\n\t\t};\r\n\t\t\r\n\t\tthis.toString = function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn the string representation of the internal buffer.\r\n\t\t\treturn b;\t//\tString\r\n\t\t};\r\n\r\n\t\t//\tinitialize the buffer.\r\n\t\tif(str){ this.append(str); }\r\n\t};\r\n\treturn Builder;\r\n});\r\n"]}