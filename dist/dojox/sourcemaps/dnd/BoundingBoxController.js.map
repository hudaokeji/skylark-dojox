{"version":3,"sources":["dnd/BoundingBoxController.js"],"names":["define","dojo","dojox","declare","_startX","_startY","_endX","_endY","constructor","sources","domNode","this","events","connect","doc","subscriptions","subscribe","forEach","item","selectByBBox","push","byId","style","position","display","destroy","disconnect","unsubscribe","shouldStartDrawingBox","evt","boundingBoxIsViable","_onMouseDown","mouseButtons","isLeft","clientX","clientY","_onMouseMove","_drawBoundingBox","_onMouseUp","publish","_finishSelecting","pop","left","Math","min","top","width","abs","height"],"mappings":";;;;;;;AAAAA,QAAQ,OAAQ,SAAU,SAASC,EAAMC,GAExC,OAAOD,EAAKE,QAAQ,kCAAmC,MAQrDC,QAAS,KACTC,QAAS,KACTC,MAAO,KACPC,MAAO,KAEPC,YAAa,SAASC,EAASC,GAS9BC,KAAKC,QACJX,EAAKY,QAAQZ,EAAKa,IAAK,cAAeH,KAAM,gBAC5CV,EAAKY,QAAQZ,EAAKa,IAAK,YAAaH,KAAM,cAK1CV,EAAKY,QAAQZ,EAAKa,IAAK,WAAYH,KAAM,qBAG1CA,KAAKI,eACJd,EAAKe,UAAU,yBAA0BL,KAAM,qBAEhDV,EAAKgB,QAAQR,EAAS,SAASS,GAG1BA,EAAKC,cACRR,KAAKI,cAAcK,KAAKnB,EAAKe,UAAU,sBAAuBE,EAAM,kBAEnEP,MACHA,KAAKD,QAAUT,EAAKoB,KAAKX,GACzBT,EAAKqB,MAAMX,KAAKD,SACfa,SAAU,WACVC,QAAS,UAIXC,QAAS,WAGRxB,EAAKgB,QAAQN,KAAKC,OAAQX,EAAKyB,YAC/BzB,EAAKgB,QAAQN,KAAKI,cAAed,EAAK0B,aACtChB,KAAKD,QAAU,MAGhBkB,sBAAuB,SAASC,GAO/B,OAAO,GAGRC,oBAAqB,SAASD,GAU7B,OAAO,GAGRE,aAAc,SAASF,GAMlBlB,KAAKiB,sBAAsBC,IAAQ5B,EAAK+B,aAAaC,OAAOJ,KAC3C,MAAhBlB,KAAKP,UACRO,KAAKP,QAAUyB,EAAIK,QACnBvB,KAAKN,QAAUwB,EAAIM,SAEpBxB,KAAKC,OAAOQ,KACXnB,EAAKY,QAAQZ,EAAKa,IAAK,cAAeH,KAAM,mBAK/CyB,aAAc,SAASP,GAQtBlB,KAAKL,MAAQuB,EAAIK,QACjBvB,KAAKJ,MAAQsB,EAAIM,QACjBxB,KAAK0B,oBAGNC,WAAY,SAAST,GAOD,OAAflB,KAAKL,OAAkBK,KAAKmB,oBAAoBD,IAGnD5B,EAAKsC,QAAQ,uBAAwB5B,KAAKP,QAASO,KAAKN,QAASM,KAAKL,MAAOK,KAAKJ,QAEnFI,KAAK6B,oBAGNA,iBAAkB,WAGI,OAAjB7B,KAAKP,UACRH,EAAKyB,WAAWf,KAAKC,OAAO6B,OAC5BxC,EAAKqB,MAAMX,KAAKD,QAAS,UAAW,QACpCC,KAAKP,QAAU,KACfO,KAAKL,MAAQ,OAIf+B,iBAAkB,WAGjBpC,EAAKqB,MAAMX,KAAKD,SACfgC,KAAMC,KAAKC,IAAIjC,KAAKP,QAASO,KAAKL,OAAS,KAC3CuC,IAAKF,KAAKC,IAAIjC,KAAKN,QAASM,KAAKJ,OAAS,KAC1CuC,MAAOH,KAAKI,IAAIpC,KAAKP,QAAUO,KAAKL,OAAS,KAC7C0C,OAAQL,KAAKI,IAAIpC,KAAKN,QAAUM,KAAKJ,OAAS,KAC9CiB,QAAS","file":"../../dnd/BoundingBoxController.js","sourcesContent":["define([\"dojo\", \"dojox\"], function(dojo, dojox) {\r\n\r\n\treturn dojo.declare('dojox.dnd.BoundingBoxController', null, {\r\n\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAllows the user draw bounding boxes around nodes on the page.\r\n\t\t\t//\t\tPublishes to the \"/dojox/dnd/bounding\" topic to tell the selector to check\r\n\t\t\t//\t\tto see whether any dnd items fall within the coordinates of the bounding box\r\n\r\n\t\t\t// x,y start and end coordinates for the bounding box\r\n\t\t\t_startX: null,\r\n\t\t\t_startY: null,\r\n\t\t\t_endX: null,\r\n\t\t\t_endY: null,\r\n\r\n\t\t\tconstructor: function(sources, domNode) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSets mouse handlers for the document to capture when a user\r\n\t\t\t\t//\t\tis trying to draw a bounding box.\r\n\t\t\t\t// sources: dojox/dnd/Selector[]\r\n\t\t\t\t//\t\tan array of dojox.dnd.Selectors which need to be aware of\r\n\t\t\t\t//\t\tthe positioning of the bounding box.\r\n\t\t\t\t// domNode: String|DomNode\r\n\t\t\t\t//\t\tthe DOM node or id which represents the bounding box on the page.\r\n\t\t\t\tthis.events = [\r\n\t\t\t\t\tdojo.connect(dojo.doc, 'onmousedown', this, '_onMouseDown'),\r\n\t\t\t\t\tdojo.connect(dojo.doc, 'onmouseup', this, '_onMouseUp'),\r\n\t\t\t\t\t// cancel text selection and text dragging\r\n\t\t\t\t\t//dojo.connect(dojo.doc, \"ondragstart\",   dojo.stopEvent),\r\n\t\t\t\t\t//dojo.connect(dojo.doc, \"onselectstart\", dojo.stopEvent),\r\n\t\t\t\t\t// when a user is scrolling using a scrollbar, don't draw the bounding box.\r\n\t\t\t\t\tdojo.connect(dojo.doc, 'onscroll', this, '_finishSelecting')\r\n\t\t\t\t];\r\n\t\t\t\t// set up a subscription so the client can easily cancel a user drawing a bounding box.\r\n\t\t\t\tthis.subscriptions = [\r\n\t\t\t\t\tdojo.subscribe('/dojox/bounding/cancel', this, '_finishSelecting')\r\n\t\t\t\t];\r\n\t\t\t\tdojo.forEach(sources, function(item) {\r\n\t\t\t\t\t// listen for \"/dojox/dnd/bounding\" events eminating from the bounding box.\r\n\t\t\t\t\t// for each of the dojox.dnd.selectors passed in args.\r\n\t\t\t\t\tif (item.selectByBBox) {\r\n\t\t\t\t\t\tthis.subscriptions.push(dojo.subscribe('/dojox/dnd/bounding', item, 'selectByBBox'));\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\t\t\t\tthis.domNode = dojo.byId(domNode);\r\n\t\t\t\tdojo.style(this.domNode, {\r\n\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\tdisplay: 'none'\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tdestroy: function() {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tprepares this object to be garbage-collected\r\n\t\t\t\tdojo.forEach(this.events, dojo.disconnect);\r\n\t\t\t\tdojo.forEach(this.subscriptions, dojo.unsubscribe);\r\n\t\t\t\tthis.domNode = null;\r\n\t\t\t},\r\n\r\n\t\t\tshouldStartDrawingBox: function(evt) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tOverride-able by the client as an extra check to ensure that a bounding\r\n\t\t\t\t//\t\tbox should begin to be drawn. If the client has any preconditions to when a\r\n\t\t\t\t//\t\tbounding box should be drawn, they should be included in this method.\r\n\t\t\t\t// evt: Object\r\n\t\t\t\t//\t\tthe mouse event which caused this callback to fire.\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tboundingBoxIsViable: function(evt) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tOverride-able by the client as an extra check to ensure that a bounding\r\n\t\t\t\t//\t\tbox is viable. In some instances, it might not make sense that\r\n\t\t\t\t//\t\ta mouse down -> mouse move -> mouse up interaction represents a bounding box.\r\n\t\t\t\t//\t\tFor example, if a dialog is open the client might want to suppress a bounding\r\n\t\t\t\t//\t\tbox. This function could be used by the client to ensure that a bounding box is only\r\n\t\t\t\t//\t\tdrawn on the document when certain conditions are met.\r\n\t\t\t\t// evt: Object\r\n\t\t\t\t//\t\tthe mouse event which caused this callback to fire.\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\t_onMouseDown: function(evt) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tExecuted when the user mouses down on the document. Resets the\r\n\t\t\t\t//\t\tthis._startX and this._startY member variables.\r\n\t\t\t\t// evt: Object\r\n\t\t\t\t//\t\tthe mouse event which caused this callback to fire.\r\n\t\t\t\tif (this.shouldStartDrawingBox(evt) && dojo.mouseButtons.isLeft(evt)) {\r\n\t\t\t\t\tif (this._startX == null) {\r\n\t\t\t\t\t\tthis._startX = evt.clientX;\r\n\t\t\t\t\t\tthis._startY = evt.clientY;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.events.push(\r\n\t\t\t\t\t\tdojo.connect(dojo.doc, 'onmousemove', this, '_onMouseMove')\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t_onMouseMove: function(evt) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tExecuted when the user moves the mouse over the document. Delegates to\r\n\t\t\t\t//\t\tthis._drawBoundingBox if the user is trying to draw a bounding box.\r\n\t\t\t\t//\t\twhether the user was drawing a bounding box and publishes to the\r\n\t\t\t\t//\t\t\"/dojox/dnd/bounding\" topic if the user is finished drawing their bounding box.\r\n\t\t\t\t// evt: Object\r\n\t\t\t\t//\t\tthe mouse event which caused this callback to fire.\r\n\t\t\t\tthis._endX = evt.clientX;\r\n\t\t\t\tthis._endY = evt.clientY;\r\n\t\t\t\tthis._drawBoundingBox();\r\n\t\t\t},\r\n\r\n\t\t\t_onMouseUp: function(evt) {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tExecuted when the users mouses up on the document. Checks to see\r\n\t\t\t\t//\t\twhether the user was drawing a bounding box and publishes to the\r\n\t\t\t\t//\t\t\"/dojox/dnd/bounding\" topic if the user is finished drawing their bounding box.\r\n\t\t\t\t// evt: Object\r\n\t\t\t\t//\t\tthe mouse event which caused this callback to fire.\r\n\t\t\t\tif (this._endX !== null && this.boundingBoxIsViable(evt)) {\r\n\t\t\t\t\t// the user has moused up ... tell the selector to check to see whether\r\n\t\t\t\t\t// any nodes within the bounding box need to be selected.\r\n\t\t\t\t\tdojo.publish('/dojox/dnd/bounding', [this._startX, this._startY, this._endX, this._endY]);\r\n\t\t\t\t}\r\n\t\t\t\tthis._finishSelecting();\r\n\t\t\t},\r\n\r\n\t\t\t_finishSelecting: function() {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\thide the bounding box and reset for the next time around\r\n\t\t\t\tif (this._startX !== null) {\r\n\t\t\t\t\tdojo.disconnect(this.events.pop());\r\n\t\t\t\t\tdojo.style(this.domNode, 'display', 'none');\r\n\t\t\t\t\tthis._startX = null;\r\n\t\t\t\t\tthis._endX = null;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t_drawBoundingBox: function() {\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tdraws the bounding box over the document.\r\n\t\t\t\tdojo.style(this.domNode, {\r\n\t\t\t\t\tleft: Math.min(this._startX, this._endX) + 'px',\r\n\t\t\t\t\ttop: Math.min(this._startY, this._endY) + 'px',\r\n\t\t\t\t\twidth: Math.abs(this._startX - this._endX) + 'px',\r\n\t\t\t\t\theight: Math.abs(this._startY - this._endY) + 'px',\r\n\t\t\t\t\tdisplay: ''\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n});"]}