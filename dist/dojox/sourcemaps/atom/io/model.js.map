{"version":3,"sources":["atom/io/model.js"],"names":["define","dojo","declare","lang","stamp","parser","model","setObject","_Constants","ATOM_URI","ATOM_NS","PURL_NS","APP_NS","_actions","link","obj","node","links","Link","buildFromDom","push","author","authors","person","Person","contributor","contributors","category","categories","cat","Category","icon","textContent","id","rights","subtitle","cnt","Content","title","updated","util","createDate","issued","modified","published","entry","entries","createEntry","Entry","content","summary","name","email","uri","generator","Generator","fromISOString","trim","escapeHtml","str","replace","unEscapeHtml","getNodename","localName","nodeName","nsSep","indexOf","substring","length","Node","constructor","name_space","attributes","shortNs","this","rawNodes","_objName","nodeType","_saveAttributes","namespaceURI","prefix","x","childNodes","c","n","nodeValue","attrs","hasAttributes","_getAttributeNames","names","attrib","getAttribute","addAttribute","value","i","toString","xml","join","addContent","AtomItem","args","logo","xmlBase","extensions","name_spaces","_accepts","accept","tag","Boolean","_postBuild","item","addNamespace","extensionNode","toLowerCase","fn","fullName","shortName","addAuthor","addContributor","addLink","href","rel","hrefLang","type","removeLink","isArray","count","splice","removeBasicLinks","addCategory","scheme","term","label","getCategories","arr","removeCategories","setTitle","addExtension","shortNS","getExtensions","removeExtensions","destroy","s","tagName","src","xmlLang","HTML","TEXT","XHTML","XML","_useTextContent","firstChild","innerXML","innerHTML","lowerType","hreflang","personType","version","feedUrl","created","xmlbase","amPrimary","toISOString","arrays","y","getEditHref","setEditHref","url","Feed","addEntry","Error","getSelfHref","getFirstEntry","getEntry","entryId","removeEntry","setEntries","arrayOfEntry","copyright","language","tagline","alternateLinks","otherLinks","Service","workspaces","ns","getElementsByTagNameNS","temp","getElementsByTagName","workspace","wkLen","wkspace","Workspace","getCollection","coll","collections","j","len","child","Collection","features","children","memberType","unknownTypeChild"],"mappings":"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","file":"../../../atom/io/model.js","sourcesContent":["define([\r\n\t\"dojo/_base/kernel\",\r\n\t\"dojo/_base/declare\",\r\n\t \"dojo/_base/lang\",\r\n\t\"dojo/date/stamp\",\r\n\t\"dojox/xml/parser\"\r\n], function (dojo, declare, lang, stamp, parser) {\r\n\r\nvar model = {};\r\n\r\ndojo.setObject(\"dojox.atom.io.model\", model);\r\n\r\nmodel._Constants = {\r\n\t// summary:\r\n\t//\t\tContainer for general constants.\r\n\r\n\t\"ATOM_URI\": \"http://www.w3.org/2005/Atom\",\r\n\t\"ATOM_NS\": \"http://www.w3.org/2005/Atom\",\r\n\t\"PURL_NS\": \"http://purl.org/atom/app#\",\r\n\t\"APP_NS\": \"http://www.w3.org/2007/app\"\r\n};\r\n\r\nmodel._actions = {\r\n\t// summary:\r\n\t//\t\tContainer for tag handling functions.\r\n\t// description:\r\n\t//\t\tContainer for tag handling functions.  Each child of this container is\r\n\t//\t\ta handler function for the given type of node. Each accepts two parameters:\r\n\t// obj:  Object.\r\n\t//\t\t  The object to insert data into.\r\n\t// node: DOM Node.\r\n\t//\t\t  The dom node containing the data\r\n\t\"link\": function(obj,node){\r\n\t\tif(obj.links === null){obj.links = [];}\r\n\t\tvar link = new model.Link();\r\n\t\tlink.buildFromDom(node);\r\n\t\tobj.links.push(link);\r\n\t},\r\n\t\"author\": function(obj,node){\r\n\t\tif(obj.authors === null){obj.authors = [];}\r\n\t\tvar person = new model.Person(\"author\");\r\n\t\tperson.buildFromDom(node);\r\n\t\tobj.authors.push(person);\r\n\t},\r\n\t\"contributor\": function(obj,node){\r\n\t\tif(obj.contributors === null){obj.contributors = [];}\r\n\t\tvar person = new model.Person(\"contributor\");\r\n\t\tperson.buildFromDom(node);\r\n\t\tobj.contributors.push(person);\r\n\t},\r\n\t\"category\": function(obj,node){\r\n\t\tif(obj.categories === null){obj.categories = [];}\r\n\t\tvar cat = new model.Category();\r\n\t\tcat.buildFromDom(node);\r\n\t\tobj.categories.push(cat);\r\n\t},\r\n\t\"icon\": function(obj,node){\r\n\t\tobj.icon = parser.textContent(node);\r\n\t},\r\n\t\"id\": function(obj,node){\r\n\t\tobj.id = parser.textContent(node);\r\n\t},\r\n\t\"rights\": function(obj,node){\r\n\t\tobj.rights = parser.textContent(node);\r\n\t},\r\n\t\"subtitle\": function(obj,node){\r\n\t\tvar cnt = new model.Content(\"subtitle\");\r\n\t\tcnt.buildFromDom(node);\r\n\t\tobj.subtitle = cnt;\r\n\t},\r\n\t\"title\": function(obj,node){\r\n\t\tvar cnt = new model.Content(\"title\");\r\n\t\tcnt.buildFromDom(node);\r\n\t\tobj.title = cnt;\r\n\t},\r\n\t\"updated\": function(obj,node){\r\n\t\tobj.updated = model.util.createDate(node);\r\n\t},\r\n\t// Google news\r\n\t\"issued\": function(obj,node){\r\n\t\tobj.issued = model.util.createDate(node);\r\n\t},\r\n\t// Google news\r\n\t\"modified\": function(obj,node){\r\n\t\tobj.modified = model.util.createDate(node);\r\n\t},\r\n\t\"published\": function(obj,node){\r\n\t\tobj.published = model.util.createDate(node);\r\n\t},\r\n\t\"entry\": function(obj,node){\r\n\t\tif(obj.entries === null){obj.entries = [];}\r\n\t\t//The object passed in should be a Feed object, since only feeds can contain Entries\r\n\t\tvar entry = obj.createEntry ? obj.createEntry() : new model.Entry();\r\n\t\tentry.buildFromDom(node);\r\n\t\tobj.entries.push(entry);\r\n\t},\r\n\t\"content\": function(obj, node){\r\n\t\tvar cnt = new model.Content(\"content\");\r\n\t\tcnt.buildFromDom(node);\r\n\t\tobj.content = cnt;\r\n\t},\r\n\t\"summary\": function(obj, node){\r\n\t\tvar summary = new model.Content(\"summary\");\r\n\t\tsummary.buildFromDom(node);\r\n\t\tobj.summary = summary;\r\n\t},\r\n\r\n\t\"name\": function(obj,node){\r\n\t\tobj.name = parser.textContent(node);\r\n\t},\r\n\t\"email\" : function(obj,node){\r\n\t\tobj.email = parser.textContent(node);\r\n\t},\r\n\t\"uri\" : function(obj,node){\r\n\t\tobj.uri = parser.textContent(node);\r\n\t},\r\n\t\"generator\" : function(obj,node){\r\n\t\tobj.generator = new model.Generator();\r\n\t\tobj.generator.buildFromDom(node);\r\n\t}\r\n};\r\n\r\nmodel.util = {\r\n\tcreateDate: function(/*DOMNode*/ node){\r\n\t\t// summary:\r\n\t\t//\t\tUtility function to create a date from a DOM node's text content.\r\n\t\t// node:\r\n\t\t//\t\tThe DOM node to inspect.\r\n\t\t// returns:\r\n\t\t//\t\tDate object from a DOM Node containing a ISO-8610 string.\r\n\t\tvar textContent = parser.textContent(node);\r\n\t\tif(textContent){\r\n\t\t\treturn stamp.fromISOString(lang.trim(textContent));\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\tescapeHtml: function(/*String*/ str){\r\n\t\t// summary:\r\n\t\t//\t\tUtility function to escape XML special characters in an HTML string.\r\n\t\t// str:\r\n\t\t//\t\tThe string to escape\r\n\t\t// returns:\r\n\t\t//\t\tHTML String with special characters (<,>,&, \", etc,) escaped.\r\n\t\treturn str.replace(/&/gm, \"&amp;\").replace(/</gm, \"&lt;\").replace(/>/gm, \"&gt;\").replace(/\"/gm, \"&quot;\")\r\n\t\t\t.replace(/'/gm, \"&#39;\"); // String\r\n\t},\r\n\tunEscapeHtml: function(/*String*/ str){\r\n\t\t// summary:\r\n\t\t//\t\tUtility function to un-escape XML special characters in an HTML string.\r\n\t\t// str:\r\n\t\t//\t\tThe string to un-escape.\r\n\t\t// returns:\r\n\t\t//\t\tHTML String converted back to the normal text (unescaped) characters (<,>,&, \", etc,).\r\n\t\treturn str.replace(/&lt;/gm, \"<\").replace(/&gt;/gm, \">\").replace(/&quot;/gm, \"\\\"\")\r\n\t\t\t.replace(/&#39;/gm, \"'\").replace(/&amp;/gm, \"&\"); // String\r\n\t},\r\n\tgetNodename: function(/*DOMNode*/ node){\r\n\t\t// summary:\r\n\t\t//\t\tUtility function to get a node name and deal with IE's bad handling of namespaces\r\n\t\t//\t\ton tag names.\r\n\t\t// node:\r\n\t\t//\t\tThe DOM node whose name to retrieve.\r\n\t\t// returns: String\r\n\t\t//\t\tThe name without namespace prefixes.\r\n\t\tvar name = null;\r\n\t\tif(node !== null){\r\n\t\t\tname = node.localName ? node.localName: node.nodeName;\r\n\t\t\tif(name !== null){\r\n\t\t\t\tvar nsSep = name.indexOf(\":\");\r\n\t\t\t\tif(nsSep !== -1){\r\n\t\t\t\t\tname = name.substring((nsSep + 1), name.length);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn name;\r\n\t}\r\n};\r\n\r\nmodel.Node = declare(null, {\r\n\tconstructor: function(name_space,name, attributes,content, shortNs){\r\n\t\tthis.name_space = name_space;\r\n\t\tthis.name = name;\r\n\t\tthis.attributes = [];\r\n\t\tif(attributes){\r\n\t\t\tthis.attributes = attributes;\r\n\t\t}\r\n\t\tthis.content = [];\r\n\t\tthis.rawNodes = [];\r\n\t\tthis.textContent = null;\r\n\t\tif(content){\r\n\t\t\tthis.content.push(content);\r\n\t\t}\r\n\t\tthis.shortNs = shortNs;\r\n\t\tthis._objName = \"Node\";//for debugging purposes\r\n\t\tthis.nodeType = \"Node\";\r\n\t},\r\n\tbuildFromDom: function(node){\r\n\t\tthis._saveAttributes(node);\r\n\t\tthis.name_space = node.namespaceURI;\r\n\t\tthis.shortNs = node.prefix;\r\n\t\tthis.name = model.util.getNodename(node);\r\n\t\tfor(var x=0; x < node.childNodes.length; x++){\r\n\t\t\tvar c = node.childNodes[x];\r\n\t\t\tif(model.util.getNodename(c) != \"#text\" ){\r\n\t\t\t\tthis.rawNodes.push(c);\r\n\t\t\t\tvar n = new model.Node();\r\n\t\t\t\tn.buildFromDom(c, true);\r\n\t\t\t\tthis.content.push(n);\r\n\t\t\t}else{\r\n\t\t\t\tthis.content.push(c.nodeValue);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.textContent = parser.textContent(node);\r\n\t},\r\n\t_saveAttributes: function(node){\r\n\t\tif(!this.attributes){this.attributes = [];}\r\n\t\t// Work around lack of hasAttributes() in IE\r\n\t\tvar hasAttributes = function(node){\r\n\t\t\tvar attrs = node.attributes;\r\n\t\t\tif(attrs === null){return false;}\r\n\t\t\treturn (attrs.length !== 0);\r\n\t\t};\r\n\t\r\n\t\tif(hasAttributes(node) && this._getAttributeNames){\r\n\t\t\tvar names = this._getAttributeNames(node);\r\n\t\t\tif(names && names.length > 0){\r\n\t\t\t\tfor(var x in names){\r\n\t\t\t\t\tvar attrib = node.getAttribute(names[x]);\r\n\t\t\t\t\tif(attrib){this.attributes[names[x]] = attrib;}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\taddAttribute: function(name, value){\r\n\t\tthis.attributes[name]=value;\r\n\t},\r\n\tgetAttribute: function(name){\r\n\t\treturn this.attributes[name];\r\n\t},\r\n\t//if child objects want their attributes parsed, they should override\r\n\t//to return an array of attrib names\r\n\t_getAttributeNames: function(node){\r\n\t\tvar names = [];\r\n\t\tfor(var i =0; i<node.attributes.length; i++){\r\n\t\t\tnames.push(node.attributes[i].nodeName);\r\n\t\t}\r\n\t\treturn names;\r\n\t},\r\n\ttoString: function(){\r\n\t\tvar xml = [];\r\n\t\tvar x;\r\n\t\tvar name = (this.shortNs?this.shortNs+\":\":'')+this.name;\r\n\t\tvar cdata = (this.name == \"#cdata-section\");\r\n\t\tif(cdata){\r\n\t\t\txml.push(\"<![CDATA[\");\r\n\t\t\txml.push(this.textContent);\r\n\t\t\txml.push(\"]]>\");\r\n\t\t}else{\r\n\t\t\txml.push(\"<\");\r\n\t\t\txml.push(name);\r\n\t\t\tif(this.name_space){\r\n\t\t\t\txml.push(\" xmlns='\" + this.name_space + \"'\");\r\n\t\t\t}\r\n\t\t\tif(this.attributes){\r\n\t\t\t\tfor(x in this.attributes){\r\n\t\t\t\t\txml.push(\" \" + x + \"='\" + this.attributes[x] + \"'\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(this.content){\r\n\t\t\t\txml.push(\">\");\r\n\t\t\t\tfor(x in this.content){\r\n\t\t\t\t\txml.push(this.content[x]);\r\n\t\t\t\t}\r\n\t\t\t\txml.push(\"</\" + name + \">\\n\");\r\n\t\t\t}else{\r\n\t\t\t\txml.push(\"/>\\n\");\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn xml.join('');\r\n\t},\r\n\taddContent: function(content){\r\n\t\tthis.content.push(content);\r\n\t}\r\n});\r\n//Types are as follows: links: array of Link, authors: array of Person, categories: array of Category\r\n//contributors: array of Person, ico\r\nmodel.AtomItem = declare(model.Node,{\r\n\t// summary:\r\n\t//\t\tClass container for generic Atom items.\r\n\r\n\tconstructor: function(args){\r\n\t\tthis.ATOM_URI = model._Constants.ATOM_URI;\r\n\t\tthis.links = null;\t\t\t\t\t\t//Array of Link\r\n\t\tthis.authors = null;\t\t\t\t\t//Array of Person\r\n\t\tthis.categories = null;\t\t\t\t\t//Array of Category\r\n\t\tthis.contributors = null;\t\t\t\t//Array of Person\r\n\t\tthis.icon = this.id = this.logo = this.xmlBase = this.rights = null; //String\r\n\t\tthis.subtitle = this.title = null;\t\t//Content\r\n\t\tthis.updated = this.published = null;\t//Date\r\n\t\t// Google news\r\n\t\tthis.issued = this.modified = null;\t\t//Date\r\n\t\tthis.content =  null;\t\t\t\t\t//Content\r\n\t\tthis.extensions = null;\t\t\t\t\t//Array of Node, non atom based\r\n\t\tthis.entries = null;\t\t\t\t\t//Array of Entry\r\n\t\tthis.name_spaces = {};\r\n\t\tthis._objName = \"AtomItem\";\t\t\t //for debugging purposes\r\n\t\tthis.nodeType = \"AtomItem\";\r\n\t},\r\n\r\n\t_getAttributeNames: function(){return null;},\r\n\t_accepts: {},\r\n\taccept: function(tag){return Boolean(this._accepts[tag]);},\r\n\t_postBuild: function(){},//child objects can override this if they want to be called after a Dom build\r\n\tbuildFromDom: function(node){\r\n\t\tvar i, c, n;\r\n\t\tfor(i=0; i<node.attributes.length; i++){\r\n\t\t\tc = node.attributes.item(i);\r\n\t\t\tn = model.util.getNodename(c);\r\n\t\t\tif(c.prefix == \"xmlns\" && c.prefix != n){\r\n\t\t\t\tthis.addNamespace(c.nodeValue, n);\r\n\t\t\t}\r\n\t\t}\r\n\t\tc = node.childNodes;\r\n\t\tfor(i = 0; i< c.length; i++){\r\n\t\t\tif(c[i].nodeType == 1) {\r\n\t\t\t\tvar name = model.util.getNodename(c[i]);\r\n\t\t\t\tif(!name){continue;}\r\n\t\t\t\tif(c[i].namespaceURI != model._Constants.ATOM_NS && name != \"#text\"){\r\n\t\t\t\t\tif(!this.extensions){this.extensions = [];}\r\n\t\t\t\t\tvar extensionNode = new model.Node();\r\n\t\t\t\t\textensionNode.buildFromDom(c[i]);\r\n\t\t\t\t\tthis.extensions.push(extensionNode);\r\n\t\t\t\t}\r\n\t\t\t\tif(!this.accept(name.toLowerCase())){\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tvar fn = model._actions[name];\r\n\t\t\t\tif(fn) {\r\n\t\t\t\t\tfn(this,c[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._saveAttributes(node);\r\n\t\tif(this._postBuild){this._postBuild();}\r\n\t},\r\n\taddNamespace: function(fullName, shortName){\r\n\t\tif(fullName && shortName){\r\n\t\t\tthis.name_spaces[shortName] = fullName;\r\n\t\t}\r\n\t},\r\n\taddAuthor: function(/*String*/ name, /*String*/ email, /*String*/ uri){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to add in an author to the list of authors.\r\n\t\t// name:\r\n\t\t//\t\tThe author's name.\r\n\t\t// email:\r\n\t\t//\t\tThe author's e-mail address.\r\n\t\t// uri:\r\n\t\t//\t\tA URI associated with the author.\r\n\t\tif(!this.authors){this.authors = [];}\r\n\t\tthis.authors.push(new model.Person(\"author\",name,email,uri));\r\n\t},\r\n\taddContributor: function(/*String*/ name, /*String*/ email, /*String*/ uri){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to add in an author to the list of authors.\r\n\t\t// name:\r\n\t\t//\t\tThe author's name.\r\n\t\t// email:\r\n\t\t//\t\tThe author's e-mail address.\r\n\t\t// uri:\r\n\t\t//\t\tA URI associated with the author.\r\n\t\tif(!this.contributors){this.contributors = [];}\r\n\t\tthis.contributors.push(new model.Person(\"contributor\",name,email,uri));\r\n\t},\r\n\taddLink: function(/*String*/ href,/*String*/ rel,/*String*/ hrefLang,/*String*/ title,/*String*/ type){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to add in a link to the list of links.\r\n\t\t// title:\r\n\t\t//\t\tA title to associate with the link.\r\n\t\t// type:\r\n\t\t//\t\tThe type of link is is.\r\n\t\tif(!this.links){this.links=[];}\r\n\t\tthis.links.push(new model.Link(href,rel,hrefLang,title,type));\r\n\t},\r\n\tremoveLink: function(/*String*/ href, /*String*/ rel){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to remove a link from the list of links.\r\n\t\t// href:\r\n\t\t//\t\tThe href.\r\n\t\tif(!this.links || !lang.isArray(this.links)){return;}\r\n\t\tvar count = 0;\r\n\t\tfor(var i = 0; i < this.links.length; i++){\r\n\t\t\tif((!href || this.links[i].href === href) && (!rel || this.links[i].rel === rel)){\r\n\t\t\t\tthis.links.splice(i,1); count++;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn count;\r\n\t},\r\n\tremoveBasicLinks: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to remove all basic links from the list of links.\r\n\t\tif(!this.links){return;}\r\n\t\tvar count = 0;\r\n\t\tfor(var i = 0; i < this.links.length; i++){\r\n\t\t\tif(!this.links[i].rel){this.links.splice(i,1); count++; i--;}\r\n\t\t}\r\n\t\treturn count;\r\n\t},\r\n\taddCategory: function(/*String*/ scheme, /*String*/ term, /*String*/ label){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to add in a category to the list of categories.\r\n\r\n\t\tif(!this.categories){this.categories = [];}\r\n\t\tthis.categories.push(new model.Category(scheme,term,label));\r\n\t},\r\n\tgetCategories: function(/*String*/ scheme){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to get all categories that match a particular scheme.\r\n\t\t// scheme:\r\n\t\t//\t\tThe scheme to filter on.\r\n\r\n\t\tif(!scheme){return this.categories;}\r\n\t\t//If categories belonging to a particular scheme are required, then create a new array containing these\r\n\t\tvar arr = [];\r\n\t\tfor(var x in this.categories){\r\n\t\t\tif(this.categories[x].scheme === scheme){arr.push(this.categories[x]);}\r\n\t\t}\r\n\t\treturn arr;\r\n\t},\r\n\tremoveCategories: function(/*String*/ scheme, /*String*/ term){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to remove all categories that match a particular scheme and term.\r\n\t\t// scheme:\r\n\t\t//\t\tThe scheme to filter on.\r\n\t\t// term:\r\n\t\t//\t\tThe term to filter on.\r\n\t\tif(!this.categories){return;}\r\n\t\tvar count = 0;\r\n\t\tfor(var i=0; i<this.categories.length; i++){\r\n\t\t\tif((!scheme || this.categories[i].scheme === scheme) && (!term || this.categories[i].term === term)){\r\n\t\t\t\tthis.categories.splice(i, 1); count++; i--;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn count;\r\n\t},\r\n\tsetTitle: function(/*String*/ str, /*String*/ type){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to set the title of the item.\r\n\t\t// str:\r\n\t\t//\t\tThe title to set.\r\n\t\t// type:\r\n\t\t//\t\tThe type of title format, text, xml, xhtml, etc.\r\n\t\tif(!str){return;}\r\n\t\tthis.title = new model.Content(\"title\");\r\n\t\tthis.title.value = str;\r\n\t\tif(type){this.title.type = type;}\r\n\t},\r\n\taddExtension: function(/*String*/ name_space,/*String*/ name, /*Array*/ attributes, /*String*/ content, /*String*/ shortNS){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to add in an extension namespace into the item.\r\n\t\t// name_space:\r\n\t\t//\t\tThe namespace of the extension.\r\n\t\t// name:\r\n\t\t//\t\tThe name of the extension\r\n\t\t// attributes:\r\n\t\t//\t\tThe attributes associated with the extension.\r\n\t\t// content:\r\n\t\t//\t\tThe content of the extension.\r\n\t\tif(!this.extensions){this.extensions=[];}\r\n\t\tthis.extensions.push(new model.Node(name_space,name,attributes,content, shortNS || \"ns\"+this.extensions.length));\r\n\t},\r\n\tgetExtensions: function(/*String*/ name_space, /*String*/ name){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to get extensions that match a namespace and name.\r\n\t\t// name_space:\r\n\t\t//\t\tThe namespace of the extension.\r\n\t\t// name:\r\n\t\t//\t\tThe name of the extension\r\n\t\tvar arr = [];\r\n\t\tif(!this.extensions){return arr;}\r\n\t\tfor(var x in this.extensions){\r\n\t\t\tif((this.extensions[x].name_space === name_space || this.extensions[x].shortNs === name_space) && (!name || this.extensions[x].name === name)){\r\n\t\t\t\tarr.push(this.extensions[x]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn arr;\r\n\t},\r\n\tremoveExtensions: function(/*String*/ name_space, /*String*/ name){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to remove extensions that match a namespace and name.\r\n\t\t// name_space:\r\n\t\t//\t\tThe namespace of the extension.\r\n\t\t// name:\r\n\t\t//\t\tThe name of the extension\r\n\t\tif(!this.extensions){return;}\r\n\t\tfor(var i=0; i< this.extensions.length; i++){\r\n\t\t\tif((this.extensions[i].name_space == name_space || this.extensions[i].shortNs === name_space) && this.extensions[i].name === name){\r\n\t\t\t\tthis.extensions.splice(i,1);\r\n\t\t\t\ti--;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tdestroy: function() {\r\n\t\tthis.links = null;\r\n\t\tthis.authors = null;\r\n\t\tthis.categories = null;\r\n\t\tthis.contributors = null;\r\n\t\tthis.icon = this.id = this.logo = this.xmlBase = this.rights = null;\r\n\t\tthis.subtitle = this.title = null;\r\n\t\tthis.updated = this.published = null;\r\n\t\t// Google news\r\n\t\tthis.issued = this.modified = null;\r\n\t\tthis.content =  null;\r\n\t\tthis.extensions = null;\r\n\t\tthis.entries = null;\r\n\t}\r\n});\r\n\r\nmodel.Category = declare(model.Node,{\r\n\t// summary:\r\n\t//\t\tClass container for 'Category' types.\r\n\r\n\tconstructor: function(/*String*/ scheme, /*String*/ term, /*String*/ label){\r\n\t\tthis.scheme = scheme; this.term = term; this.label = label;\r\n\t\tthis._objName = \"Category\";//for debugging\r\n\t\tthis.nodeType = \"Category\";\r\n\t},\r\n\t_postBuild: function(){},\r\n\t_getAttributeNames: function(){\r\n\t\treturn [\"label\",\"scheme\",\"term\"];\r\n\t},\r\n\ttoString: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to construct string form of the category tag, which is an XML structure.\r\n\t\tvar s = [];\r\n\t\ts.push('<category ');\r\n\t\tif(this.label){s.push(' label=\"'+this.label+'\" ');}\r\n\t\tif(this.scheme){s.push(' scheme=\"'+this.scheme+'\" ');}\r\n\t\tif(this.term){s.push(' term=\"'+this.term+'\" ');}\r\n\t\ts.push('/>\\n');\r\n\t\treturn s.join('');\r\n\t},\r\n\tbuildFromDom: function(/*DOMNode*/ node){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to do construction of the Category data from the DOM node containing it.\r\n\t\t// node:\r\n\t\t//\t\tThe DOM node to process for content.\r\n\t\tthis._saveAttributes(node);//just get the attributes from the node\r\n\t\tthis.label = this.attributes.label;\r\n\t\tthis.scheme = this.attributes.scheme;\r\n\t\tthis.term = this.attributes.term;\r\n\t\tif(this._postBuild){this._postBuild();}\r\n\t}\r\n});\r\n\r\nmodel.Content = declare(model.Node,{\r\n\t// summary:\r\n\t//\t\tClass container for 'Content' types. Such as summary, content, username, and so on types of data.\r\n\r\n\tconstructor: function(tagName, value, src, type,xmlLang){\r\n\t\tthis.tagName = tagName; this.value = value; this.src = src; this.type=type; this.xmlLang = xmlLang;\r\n\t\tthis.HTML = \"html\"; this.TEXT = \"text\"; this.XHTML = \"xhtml\"; this.XML=\"xml\";\r\n\t\tthis._useTextContent = \"true\";\r\n\t\tthis.nodeType = \"Content\";\r\n\t},\r\n\t_getAttributeNames: function(){return [\"type\",\"src\"];},\r\n\t_postBuild: function(){},\r\n\tbuildFromDom: function(/*DOMNode*/ node){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to do construction of the Content data from the DOM node containing it.\r\n\t\t// node:\r\n\t\t//\t\tThe DOM node to process for content.\r\n\r\n\t\t// Handle checking for XML content as the content type\r\n\t\tvar type = node.getAttribute(\"type\");\r\n\t\tif(type){\r\n\t\t\ttype = type.toLowerCase();\r\n\t\t\tif(type == \"xml\" || \"text/xml\"){\r\n\t\t\t\ttype = this.XML;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\ttype=\"text\";\r\n\t\t}\r\n\t\tif(type === this.XML){\r\n\t\t\tif(node.firstChild){\r\n\t\t\t\tvar i;\r\n\t\t\t\tthis.value = \"\";\r\n\t\t\t\tfor(i = 0; i < node.childNodes.length; i++){\r\n\t\t\t\t\tvar c = node.childNodes[i];\r\n\t\t\t\t\tif(c){\r\n\t\t\t\t\t\tthis.value += parser.innerXML(c);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if(node.innerHTML){\r\n\t\t\tthis.value = node.innerHTML;\r\n\t\t}else{\r\n\t\t\tthis.value = parser.textContent(node);\r\n\t\t}\r\n\r\n\t\tthis._saveAttributes(node);\r\n\r\n\t\tif(this.attributes){\r\n\t\t\tthis.type = this.attributes.type;\r\n\t\t\tthis.scheme = this.attributes.scheme;\r\n\t\t\tthis.term = this.attributes.term;\r\n\t\t}\r\n\t\tif(!this.type){this.type = \"text\";}\r\n\r\n\t\t//We need to unescape the HTML content here so that it can be displayed correctly when the value is fetched.\r\n\t\tvar lowerType = this.type.toLowerCase();\r\n\t\tif(lowerType === \"html\" || lowerType === \"text/html\" || lowerType === \"xhtml\" || lowerType === \"text/xhtml\"){\r\n\t\t\tthis.value = this.value?model.util.unEscapeHtml(this.value):\"\";\r\n\t\t}\r\n\r\n\t\tif(this._postBuild){this._postBuild();}\r\n\t},\r\n\ttoString: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to construct string form of the content tag, which is an XML structure.\r\n\r\n\t\tvar s = [];\r\n\t\ts.push('<'+this.tagName+' ');\r\n\t\tif(!this.type){this.type = \"text\";}\r\n\t\tif(this.type){s.push(' type=\"'+this.type+'\" ');}\r\n\t\tif(this.xmlLang){s.push(' xml:lang=\"'+this.xmlLang+'\" ');}\r\n\t\tif(this.xmlBase){s.push(' xml:base=\"'+this.xmlBase+'\" ');}\r\n\t\t\r\n\t\t//all HTML must be escaped\r\n\t\tif(this.type.toLowerCase() == this.HTML){\r\n\t\t\ts.push('>'+model.util.escapeHtml(this.value)+'</'+this.tagName+'>\\n');\r\n\t\t}else{\r\n\t\t\ts.push('>'+this.value+'</'+this.tagName+'>\\n');\r\n\t\t}\r\n\t\tvar ret = s.join('');\r\n\t\treturn ret;\r\n\t}\r\n});\r\n\r\nmodel.Link = declare(model.Node,{\r\n\t// summary:\r\n\t//\t\tClass container for 'link' types.\r\n\r\n\tconstructor: function(href,rel,hrefLang,title,type){\r\n\t\tthis.href = href; this.hrefLang = hrefLang; this.rel = rel; this.title = title;this.type = type;\r\n\t\tthis.nodeType = \"Link\";\r\n\t},\r\n\t_getAttributeNames: function(){return [\"href\",\"jrefLang\",\"rel\",\"title\",\"type\"];},\r\n\t_postBuild: function(){},\r\n\tbuildFromDom: function(node){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to do construction of the link data from the DOM node containing it.\r\n\t\t// node:\r\n\t\t//\t\tThe DOM node to process for link data.\r\n\t\tthis._saveAttributes(node);//just get the attributes from the node\r\n\t\tthis.href = this.attributes.href;\r\n\t\tthis.hrefLang = this.attributes.hreflang;\r\n\t\tthis.rel = this.attributes.rel;\r\n\t\tthis.title = this.attributes.title;\r\n\t\tthis.type = this.attributes.type;\r\n\t\tif(this._postBuild){this._postBuild();}\r\n\t},\r\n\ttoString: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to construct string form of the link tag, which is an XML structure.\r\n\r\n\t\tvar s = [];\r\n\t\ts.push('<link ');\r\n\t\tif(this.href){s.push(' href=\"'+this.href+'\" ');}\r\n\t\tif(this.hrefLang){s.push(' hrefLang=\"'+this.hrefLang+'\" ');}\r\n\t\tif(this.rel){s.push(' rel=\"'+this.rel+'\" ');}\r\n\t\tif(this.title){s.push(' title=\"'+this.title+'\" ');}\r\n\t\tif(this.type){s.push(' type = \"'+this.type+'\" ');}\r\n\t\ts.push('/>\\n');\r\n\t\treturn s.join('');\r\n\t}\r\n});\r\n\r\nmodel.Person = declare(model.Node,{\r\n\t// summary:\r\n\t//\t\tClass container for 'person' types, such as Author, contributors, and so on.\r\n\r\n\tconstructor: function(personType, name, email, uri){\r\n\t\tthis.author = \"author\";\r\n\t\tthis.contributor = \"contributor\";\r\n\t\tif(!personType){\r\n\t\t\tpersonType = this.author;\r\n\t\t}\r\n\t\tthis.personType = personType;\r\n\t\tthis.name = name || '';\r\n\t\tthis.email = email || '';\r\n\t\tthis.uri = uri || '';\r\n\t\tthis._objName = \"Person\";//for debugging\r\n\t\tthis.nodeType = \"Person\";\r\n\t},\r\n\t_getAttributeNames: function(){return null;},\r\n\t_postBuild: function(){},\r\n\taccept: function(tag){return Boolean(this._accepts[tag]);},\r\n\tbuildFromDom: function(node){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to do construction of the person data from the DOM node containing it.\r\n\t\t// node:\r\n\t\t//\t\tThe DOM node to process for person data.\r\n\t\tvar c = node.childNodes;\r\n\t\tfor(var i = 0; i< c.length; i++){\r\n\t\t\tvar name = model.util.getNodename(c[i]);\r\n\t\t\t\r\n\t\t\tif(!name){continue;}\r\n\r\n\t\t\tif(c[i].namespaceURI != model._Constants.ATOM_NS && name != \"#text\"){\r\n\t\t\t\tif(!this.extensions){this.extensions = [];}\r\n\t\t\t\tvar extensionNode = new model.Node();\r\n\t\t\t\textensionNode.buildFromDom(c[i]);\r\n\t\t\t\tthis.extensions.push(extensionNode);\r\n\t\t\t}\r\n\t\t\tif(!this.accept(name.toLowerCase())){\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tvar fn = model._actions[name];\r\n\t\t\tif(fn) {\r\n\t\t\t\tfn(this,c[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._saveAttributes(node);\r\n\t\tif(this._postBuild){this._postBuild();}\r\n\t},\r\n\t_accepts: {\r\n\t\t'name': true,\r\n\t\t'uri': true,\r\n\t\t'email': true\r\n\t},\r\n\ttoString: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to construct string form of the Person tag, which is an XML structure.\r\n\r\n\t\tvar s = [];\r\n\t\ts.push('<'+this.personType+'>\\n');\r\n\t\tif(this.name){s.push('\\t<name>'+this.name+'</name>\\n');}\r\n\t\tif(this.email){s.push('\\t<email>'+this.email+'</email>\\n');}\r\n\t\tif(this.uri){s.push('\\t<uri>'+this.uri+'</uri>\\n');}\r\n\t\ts.push('</'+this.personType+'>\\n');\r\n\t\treturn s.join('');\r\n\t}\r\n});\r\n\r\nmodel.Generator = declare(model.Node,{\r\n\t// summary:\r\n\t//\t\tClass container for 'Generator' types.\r\n\r\n\tconstructor: function(/*String*/ uri, /*String*/ version, /*String*/ value){\r\n\t\tthis.uri = uri;\r\n\t\tthis.version = version;\r\n\t\tthis.value = value;\r\n\t},\r\n\t_postBuild: function(){},\r\n\tbuildFromDom: function(node){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to do construction of the generator data from the DOM node containing it.\r\n\t\t// node:\r\n\t\t//\t\tThe DOM node to process for link data.\r\n\r\n\t\tthis.value = parser.textContent(node);\r\n\t\tthis._saveAttributes(node);\r\n\r\n\t\tthis.uri = this.attributes.uri;\r\n\t\tthis.version = this.attributes.version;\r\n\r\n\t\tif(this._postBuild){this._postBuild();}\r\n\t},\r\n\ttoString: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to construct string form of the Generator tag, which is an XML structure.\r\n\r\n\t\tvar s = [];\r\n\t\ts.push('<generator ');\r\n\t\tif(this.uri){s.push(' uri=\"'+this.uri+'\" ');}\r\n\t\tif(this.version){s.push(' version=\"'+this.version+'\" ');}\r\n\t\ts.push('>'+this.value+'</generator>\\n');\r\n\t\tvar ret = s.join('');\r\n\t\treturn ret;\r\n\t}\r\n});\r\n\r\nmodel.Entry = declare(model.AtomItem,{\r\n\t// summary:\r\n\t//\t\tClass container for 'Entry' types.\r\n\r\n\tconstructor: function(/*String*/ id){\r\n\t\tthis.id = id; this._objName = \"Entry\"; this.feedUrl = null;\r\n\t},\r\n\t_getAttributeNames: function(){return null;},\r\n\t_accepts: {\r\n\t\t'author': true,\r\n\t\t'content': true,\r\n\t\t'category': true,\r\n\t\t'contributor': true,\r\n\t\t'created': true,\r\n\t\t'id': true,\r\n\t\t'link': true,\r\n\t\t'published': true,\r\n\t\t'rights': true,\r\n\t\t'summary': true,\r\n\t\t'title': true,\r\n\t\t'updated': true,\r\n\t\t'xmlbase': true,\r\n\t\t'issued': true,\r\n\t\t'modified': true\r\n\t},\r\n\ttoString: function(amPrimary){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to construct string form of the entry tag, which is an XML structure.\r\n\r\n\t\tvar s = [];\r\n\t\tvar i;\r\n\t\tif(amPrimary){\r\n\t\t\ts.push(\"<?xml version='1.0' encoding='UTF-8'?>\");\r\n\t\t\ts.push(\"<entry xmlns='\"+model._Constants.ATOM_URI+\"'\");\r\n\t\t}else{s.push(\"<entry\");}\r\n\t\tif(this.xmlBase){s.push(' xml:base=\"'+this.xmlBase+'\" ');}\r\n\t\tfor(i in this.name_spaces){s.push(' xmlns:'+i+'=\"'+this.name_spaces[i]+'\"');}\r\n\t\ts.push('>\\n');\r\n\t\ts.push('<id>' + (this.id ? this.id: '') + '</id>\\n');\r\n\t\tif(this.issued && !this.published){this.published = this.issued;}\r\n\t\tif(this.published){s.push('<published>'+stamp.toISOString(this.published)+'</published>\\n');}\r\n\t\tif(this.created){s.push('<created>'+stamp.toISOString(this.created)+'</created>\\n');}\r\n\t\t//Google News\r\n\t\tif(this.issued){s.push('<issued>'+stamp.toISOString(this.issued)+'</issued>\\n');}\r\n\r\n\t\t//Google News\r\n\t\tif(this.modified){s.push('<modified>'+stamp.toISOString(this.modified)+'</modified>\\n');}\r\n\r\n\t\tif(this.modified && !this.updated){this.updated = this.modified;}\r\n\t\tif(this.updated){s.push('<updated>'+stamp.toISOString(this.updated)+'</updated>\\n');}\r\n\t\tif(this.rights){s.push('<rights>'+this.rights+'</rights>\\n');}\r\n\t\tif(this.title){s.push(this.title.toString());}\r\n\t\tif(this.summary){s.push(this.summary.toString());}\r\n\t\tvar arrays = [this.authors,this.categories,this.links,this.contributors,this.extensions];\r\n\t\tfor(var x in arrays){\r\n\t\t\tif(arrays[x]){\r\n\t\t\t\tfor(var y in arrays[x]){\r\n\t\t\t\t\ts.push(arrays[x][y]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(this.content){s.push(this.content.toString());}\r\n\t\ts.push(\"</entry>\\n\");\r\n\t\treturn s.join(''); //string\r\n\t},\r\n\tgetEditHref: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to get the href that allows editing of this feed entry.\r\n\t\t// returns:\r\n\t\t//\t\tThe href that specifies edit capability.\r\n\t\tif(this.links === null || this.links.length === 0){\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tfor(var x in this.links){\r\n\t\t\tif(this.links[x].rel && this.links[x].rel == \"edit\"){\r\n\t\t\t\treturn this.links[x].href; //string\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\tsetEditHref: function(url){\r\n\t\tif(this.links === null){\r\n\t\t\tthis.links = [];\r\n\t\t}\r\n\t\tfor(var x in this.links){\r\n\t\t\tif(this.links[x].rel && this.links[x].rel == \"edit\"){\r\n\t\t\t\tthis.links[x].href = url;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.addLink(url, 'edit');\r\n\t}\r\n});\r\n\r\nmodel.Feed = declare(model.AtomItem,{\r\n\t// summary:\r\n\t//\t\tClass container for 'Feed' types.\r\n\r\n\t_accepts: {\r\n\t\t'author': true,\r\n\t\t'content': true,\r\n\t\t'category': true,\r\n\t\t'contributor': true,\r\n\t\t'created': true,\r\n\t\t'id': true,\r\n\t\t'link': true,\r\n\t\t'published': true,\r\n\t\t'rights': true,\r\n\t\t'summary': true,\r\n\t\t'title': true,\r\n\t\t'updated': true,\r\n\t\t'xmlbase': true,\r\n\t\t'entry': true,\r\n\t\t'logo': true,\r\n\t\t'issued': true,\r\n\t\t'modified': true,\r\n\t\t'icon': true,\r\n\t\t'subtitle': true\r\n\t},\r\n\taddEntry: function(/*object*/ entry){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to add an entry to this feed.\r\n\t\t// entry:\r\n\t\t//\t\tThe entry object to add.\r\n\t\tif(!entry.id){\r\n\t\t\tthrow new Error(\"The entry object must be assigned an ID attribute.\");\r\n\t\t}\r\n\t\tif(!this.entries){this.entries = [];}\r\n\t\tentry.feedUrl = this.getSelfHref();\r\n\t\tthis.entries.push(entry);\r\n\t},\r\n\tgetFirstEntry: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to get the first entry of the feed.\r\n\t\t// returns:\r\n\t\t//\t\tThe first entry in the feed.\r\n\t\tif(!this.entries || this.entries.length === 0){return null;}\r\n\t\treturn this.entries[0]; //object\r\n\t},\r\n\tgetEntry: function(/*String*/ entryId){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to get an entry by its id.\r\n\t\t// returns:\r\n\t\t//\t\tThe entry desired, or null if none.\r\n\t\tif(!this.entries){return null;}\r\n\t\tfor(var x in this.entries){\r\n\t\t\tif(this.entries[x].id == entryId){\r\n\t\t\t\treturn this.entries[x];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\tremoveEntry: function(/*object*/ entry){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to remove an entry from the list of links.\r\n\t\t// entry:\r\n\t\t//\t\tThe entry.\r\n\t\tif(!this.entries){return;}\r\n\t\tvar count = 0;\r\n\t\tfor(var i = 0; i < this.entries.length; i++){\r\n\t\t\tif(this.entries[i] === entry){\r\n\t\t\t\tthis.entries.splice(i,1);\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn count;\r\n\t},\r\n\tsetEntries: function(/*array*/ arrayOfEntry){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to add a set of entries to the feed.\r\n\t\t// arrayOfEntry:\r\n\t\t//\t\tAn array of entry objects to add to the feed.\r\n\t\tfor(var x in arrayOfEntry){\r\n\t\t\tthis.addEntry(arrayOfEntry[x]);\r\n\t\t}\r\n\t},\r\n\ttoString: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to construct string form of the feed tag, which is an XML structure.\r\n\t\tvar s = [];\r\n\t\tvar i;\r\n\t\ts.push('<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n');\r\n\t\ts.push('<feed xmlns=\"'+model._Constants.ATOM_URI+'\"');\r\n\t\tif(this.xmlBase){s.push(' xml:base=\"'+this.xmlBase+'\"');}\r\n\t\tfor(i in this.name_spaces){s.push(' xmlns:'+i+'=\"'+this.name_spaces[i]+'\"');}\r\n\t\ts.push('>\\n');\r\n\t\ts.push('<id>' + (this.id ? this.id: '') + '</id>\\n');\r\n\t\tif(this.title){s.push(this.title);}\r\n\t\tif(this.copyright && !this.rights){this.rights = this.copyright;}\r\n\t\tif(this.rights){s.push('<rights>' + this.rights + '</rights>\\n');}\r\n\t\t\r\n\t\t// Google news\r\n\t\tif(this.issued){s.push('<issued>'+stamp.toISOString(this.issued)+'</issued>\\n');}\r\n\t\tif(this.modified){s.push('<modified>'+stamp.toISOString(this.modified)+'</modified>\\n');}\r\n\r\n\t\tif(this.modified && !this.updated){this.updated=this.modified;}\r\n\t\tif(this.updated){s.push('<updated>'+stamp.toISOString(this.updated)+'</updated>\\n');}\r\n\t\tif(this.published){s.push('<published>'+stamp.toISOString(this.published)+'</published>\\n');}\r\n\t\tif(this.icon){s.push('<icon>'+this.icon+'</icon>\\n');}\r\n\t\tif(this.language){s.push('<language>'+this.language+'</language>\\n');}\r\n\t\tif(this.logo){s.push('<logo>'+this.logo+'</logo>\\n');}\r\n\t\tif(this.subtitle){s.push(this.subtitle.toString());}\r\n\t\tif(this.tagline){s.push(this.tagline.toString());}\r\n\t\t//TODO: need to figure out what to do with xmlBase\r\n\t\tvar arrays = [this.alternateLinks,this.authors,this.categories,this.contributors,this.otherLinks,this.extensions,this.entries];\r\n\t\tfor(i in arrays){\r\n\t\t\tif(arrays[i]){\r\n\t\t\t\tfor(var x in arrays[i]){\r\n\t\t\t\t\ts.push(arrays[i][x]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\ts.push('</feed>');\r\n\t\treturn s.join('');\r\n\t},\r\n\tcreateEntry: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to Create a new entry object in the feed.\r\n\t\t// returns:\r\n\t\t//\t\tAn empty entry object in the feed.\r\n\t\tvar entry = new model.Entry();\r\n\t\tentry.feedUrl = this.getSelfHref();\r\n\t\treturn entry; //object\r\n\t},\r\n\tgetSelfHref: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to get the href that refers to this feed.\r\n\t\t// returns:\r\n\t\t//\t\tThe href that refers to this feed or null if none.\r\n\t\tif(this.links === null || this.links.length === 0){\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tfor(var x in this.links){\r\n\t\t\tif(this.links[x].rel && this.links[x].rel == \"self\"){\r\n\t\t\t\treturn this.links[x].href; //string\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\nmodel.Service = declare(model.AtomItem,{\r\n\t// summary:\r\n\t//\t\tClass container for 'Feed' types.\r\n\r\n\tconstructor: function(href){\r\n\t\tthis.href = href;\r\n\t},\r\n\t//builds a Service document.  each element of this, except for the namespace, is the href of\r\n\t//a service that the server supports.  Some of the common services are:\r\n\t//\"create-entry\" , \"user-prefs\" , \"search-entries\" , \"edit-template\" , \"categories\"\r\n\tbuildFromDom: function(/*DOMNode*/ node){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to do construction of the Service data from the DOM node containing it.\r\n\t\t// node:\r\n\t\t//\t\tThe DOM node to process for content.\r\n\t\tvar i;\r\n\t\tthis.workspaces = [];\r\n\t\tif(node.tagName != \"service\"){\r\n\t\t\t// FIXME: Need 0.9 DOM util...\r\n\t\t\t//node = dojox.xml.parser.firstElement(node,\"service\");\r\n\t\t\t//if(!node){return;}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(node.namespaceURI != model._Constants.PURL_NS && node.namespaceURI != model._Constants.APP_NS){return;}\r\n\t\tvar ns = node.namespaceURI;\r\n\t\tthis.name_space = node.namespaceURI;\r\n\t\t//find all workspaces, and create them\r\n\t\tvar workspaces ;\r\n\t\tif(typeof(node.getElementsByTagNameNS)!= \"undefined\"){\r\n\t\t\tworkspaces = node.getElementsByTagNameNS(ns,\"workspace\");\r\n\t\t}else{\r\n\t\t\t// This block is IE only, which doesn't have a 'getElementsByTagNameNS' function\r\n\t\t\tworkspaces = [];\r\n\t\t\tvar temp = node.getElementsByTagName('workspace');\r\n\t\t\tfor(i=0; i<temp.length; i++){\r\n\t\t\t\tif(temp[i].namespaceURI == ns){\r\n\t\t\t\t\tworkspaces.push(temp[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(workspaces && workspaces.length > 0){\r\n\t\t\tvar wkLen = 0;\r\n\t\t\tvar workspace;\r\n\t\t\tfor(i = 0; i< workspaces.length; i++){\r\n\t\t\t\tworkspace = (typeof(workspaces.item)===\"undefined\"?workspaces[i]:workspaces.item(i));\r\n\t\t\t\tvar wkspace = new model.Workspace();\r\n\t\t\t\twkspace.buildFromDom(workspace);\r\n\t\t\t\tthis.workspaces[wkLen++] = wkspace;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tgetCollection: function(/*String*/ url){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to collections that match a specific url.\r\n\t\t// url:\r\n\t\t//\t\te URL to match collections against.\r\n\t\tfor(var i=0;i<this.workspaces.length;i++){\r\n\t\t\tvar coll=this.workspaces[i].collections;\r\n\t\t\tfor(var j=0;j<coll.length;j++){\r\n\t\t\t\tif(coll[j].href == url){\r\n\t\t\t\t\treturn coll;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\nmodel.Workspace = declare(model.AtomItem,{\r\n\t// summary:\r\n\t//\t\tClass container for 'Workspace' types.\r\n\tconstructor: function(title){\r\n\t\tthis.title = title;\r\n\t\tthis.collections = [];\r\n\t},\r\n\r\n\tbuildFromDom: function(/*DOMNode*/ node){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to do construction of the Workspace data from the DOM node containing it.\r\n\t\t// node:\r\n\t\t//\t\tThe DOM node to process for content.\r\n\t\tvar name = model.util.getNodename(node);\r\n\t\tif(name != \"workspace\"){return;}\r\n\t\tvar c = node.childNodes;\r\n\t\tvar len = 0;\r\n\t\tfor(var i = 0; i< c.length; i++){\r\n\t\t\tvar child = c[i];\r\n\t\t\tif(child.nodeType === 1){\r\n\t\t\t\tname = model.util.getNodename(child);\r\n\t\t\t\tif(child.namespaceURI == model._Constants.PURL_NS || child.namespaceURI == model._Constants.APP_NS){\r\n\t\t\t\t\tif(name === \"collection\"){\r\n\t\t\t\t\t\tvar coll = new model.Collection();\r\n\t\t\t\t\t\tcoll.buildFromDom(child);\r\n\t\t\t\t\t\tthis.collections[len++] = coll;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else if(child.namespaceURI === model._Constants.ATOM_NS){\r\n\t\t\t\t\tif(name === \"title\"){\r\n\t\t\t\t\t\tthis.title = parser.textContent(child);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//FIXME: Add an extension point so others can impl different namespaces.  For now just\r\n\t\t\t\t//ignore unknown namespace tags.\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\nmodel.Collection = declare(model.AtomItem,{\r\n\t// summary:\r\n\t//\t\tClass container for 'Collection' types.\r\n\r\n\tconstructor: function(href, title){\r\n\t\tthis.href = href;\r\n\t\tthis.title = title;\r\n\t\tthis.attributes = [];\r\n\t\tthis.features = [];\r\n\t\tthis.children = [];\r\n\t\tthis.memberType = null;\r\n\t\tthis.id = null;\r\n\t},\r\n\r\n\tbuildFromDom: function(/*DOMNode*/ node){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to do construction of the Collection data from the DOM node containing it.\r\n\t\t// node:\r\n\t\t//\t\tThe DOM node to process for content.\r\n\t\tthis.href = node.getAttribute(\"href\");\r\n\t\tvar c = node.childNodes;\r\n\t\tfor(var i = 0; i< c.length; i++){\r\n\t\t\tvar child = c[i];\r\n\t\t\tif(child.nodeType === 1){\r\n\t\t\t\tvar name = model.util.getNodename(child);\r\n\t\t\t\tif(child.namespaceURI == model._Constants.PURL_NS || child.namespaceURI == model._Constants.APP_NS){\r\n\t\t\t\t\tif(name === \"member-type\"){\r\n\t\t\t\t\t\tthis.memberType = parser.textContent(child);\r\n\t\t\t\t\t}else if(name == \"feature\"){//this IF stmt might need some more work\r\n\t\t\t\t\t\tif(child.getAttribute(\"id\")){this.features.push(child.getAttribute(\"id\"));}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tvar unknownTypeChild = new model.Node();\r\n\t\t\t\t\t\tunknownTypeChild.buildFromDom(child);\r\n\t\t\t\t\t\tthis.children.push(unknownTypeChild);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else if(child.namespaceURI === model._Constants.ATOM_NS){\r\n\t\t\t\t\tif(name === \"id\"){\r\n\t\t\t\t\t\tthis.id = parser.textContent(child);\r\n\t\t\t\t\t}else if(name === \"title\"){\r\n\t\t\t\t\t\tthis.title = parser.textContent(child);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\nreturn model;\r\n});\r\n"]}