{"version":3,"sources":["atom/widget/FeedEntryEditor.js"],"names":["define","dojo","lang","connect","declare","fx","has","domUtil","domStyle","domConstruct","_Widget","_Templated","_Container","Editor","TextBox","SimpleTextarea","FeedEntryViewer","model","template","peopleEditorTemplate","i18nViewer","i18nEditor","i18nPeople","experimental","FeedEntryEditor","_contentEditor","_oldContent","_setObject","enableEdit","_contentEditorCreator","_editors","entryNewButton","_editable","templateString","postCreate","this","entrySelectionTopic","_subscriptions","subscribe","_nlsResources","displayOptions","innerHTML","feedEntryCheckBoxLabelTitle","title","feedEntryCheckBoxLabelAuthors","authors","feedEntryCheckBoxLabelContributors","contributors","feedEntryCheckBoxLabelId","id","close","feedEntryCheckBoxLabelUpdated","updated","feedEntryCheckBoxLabelSummary","summary","feedEntryCheckBoxLabelContent","content","doNew","edit","save","cancel","setEntry","entry","feed","leaveMenuState","_entry","_editMode","superclass","call","_isEditable","set","entryEditButton","entrySaveCancelButtons","enableMenuFade","entrySaveCancelButton","fadeOut","node","duration","play","_toggleEdit","_feed","_handleEvent","entrySelectionEvent","source","action","retVal","links","x","rel","setTitle","titleAnchorNode","editMode","value","_toLoad","entryTitleSelect","type","editor","_createEditor","name","push","setFieldValidity","setAuthors","authorsAnchorNode","length","_createPeopleEditor","entryAuthorNode","data","setContributors","contributorsAnchorNode","entryContributorNode","setId","idAnchorNode","setUpdated","updatedAnchorNode","setSummary","summaryAnchorNode","entrySummarySelect","setContent","contentAnchorNode","entryContentSelect","anchorNode","multiline","rte","viewNode","box","undefined","attr","indexOf","replace","entryValue","generateEditor","document","createElement","appendChild","_editor","_switchEditor","event","target","parent","srcElement","entryTitleNode","entrySummaryNode","entryContentNode","newEditor","isInstanceOf","destroy","firstChild","hitch","PeopleEditor","saveEdits","i","changed","modifiedEntry","_new","Entry","_enforceXhtml","getValues","email","uri","addAuthor","addContributor","Content","publish","getEntry","currentAuthors","searchAuthors","currentContributors","searchContributors","callback","_handleSave","location","clear","getFeed","cancelEdits","clearEditors","apply","key","html","xhtml","_closeTag","tag","tagStart","tagIndex","tempString","foundTagEnd","c","charAt","_toggleNew","clearNodes","titleHeader","EntryHeader","entryTitleHeader","domNode","authorHeader","entryAuthorHeader","contributorHeader","entryContributorHeader","idHeader","entryIdHeader","entryIdNode","updatedHeader","entryUpdatedHeader","entryUpdatedNode","summaryHeader","entrySummaryHeader","contentHeader","entryContentHeader","_displaySections","isFieldValid","_rows","_index","_numRows","peopleEditorButton","createTextNode","add","_createEditors","key2","index","widgetName","row","peopleEditorEditors","setAttribute","colSpan","hr","className","labelNode","label","_removeEditor","substring","byId","parentNode","removeChild","tagName","toLowerCase","_add","values"],"mappings":"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","file":"../../../atom/widget/FeedEntryEditor.js","sourcesContent":["define([\r\n\t\"dojo/_base/kernel\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/connect\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/fx\",\r\n\t\"dojo/_base/sniff\",\r\n\t\"dojo/dom\",\r\n\t\"dojo/dom-style\",\r\n\t\"dojo/dom-construct\",\r\n\t\"dijit/_Widget\",\r\n\t\"dijit/_Templated\",\r\n\t\"dijit/_Container\",\r\n\t\"dijit/Editor\",\r\n\t\"dijit/form/TextBox\",\r\n\t\"dijit/form/SimpleTextarea\",\r\n\t\"./FeedEntryViewer\",\r\n\t\"../io/model\",\r\n\t\"dojo/text!./templates/FeedEntryEditor.html\",\r\n\t\"dojo/text!./templates/PeopleEditor.html\",\r\n\t\"dojo/i18n!./nls/FeedEntryViewer\",\r\n\t\"dojo/i18n!./nls/FeedEntryEditor\",\r\n\t\"dojo/i18n!./nls/PeopleEditor\"\r\n], function (dojo, lang, connect, declare, fx, has, domUtil, domStyle, domConstruct,\r\n\t\t\t _Widget, _Templated, _Container, Editor, TextBox, SimpleTextarea,\r\n\t\t\t FeedEntryViewer, model, template, peopleEditorTemplate, i18nViewer, i18nEditor, i18nPeople) {\r\ndojo.experimental(\"dojox.atom.widget.FeedEntryEditor\");\r\n\r\n\r\nvar FeedEntryEditor = declare(\"dojox.atom.widget.FeedEntryEditor\", FeedEntryViewer,{\r\n\t// summary:\r\n\t//\t\tAn ATOM feed entry editor that allows viewing of the individual attributes of an entry.\r\n\r\n\t_contentEditor: null,\r\n\t_oldContent: null,\r\n\t_setObject: null,\r\n\tenableEdit: false,\r\n\t_contentEditorCreator: null,\r\n\t_editors: {},\r\n\tentryNewButton: null,\r\n\t_editable: false,\t\t//Flag denoting if the current entry is editable or not.\r\n\r\n\t//Templates for the HTML rendering.  Need to figure these out better, admittedly.\r\n\ttemplateString: template,\r\n\r\n\tpostCreate: function(){\r\n\t\tif(this.entrySelectionTopic !== \"\"){\r\n\t\t\tthis._subscriptions = [dojo.subscribe(this.entrySelectionTopic, this, \"_handleEvent\")];\r\n\t\t}\r\n\t\tvar _nlsResources = i18nViewer;\r\n\t\tthis.displayOptions.innerHTML = _nlsResources.displayOptions;\r\n\t\tthis.feedEntryCheckBoxLabelTitle.innerHTML = _nlsResources.title;\r\n\t\tthis.feedEntryCheckBoxLabelAuthors.innerHTML = _nlsResources.authors;\r\n\t\tthis.feedEntryCheckBoxLabelContributors.innerHTML = _nlsResources.contributors;\r\n\t\tthis.feedEntryCheckBoxLabelId.innerHTML = _nlsResources.id;\r\n\t\tthis.close.innerHTML = _nlsResources.close;\r\n\t\tthis.feedEntryCheckBoxLabelUpdated.innerHTML = _nlsResources.updated;\r\n\t\tthis.feedEntryCheckBoxLabelSummary.innerHTML = _nlsResources.summary;\r\n\t\tthis.feedEntryCheckBoxLabelContent.innerHTML = _nlsResources.content;\r\n\r\n\t\t_nlsResources = i18nEditor;\r\n\t\tthis.doNew.innerHTML = _nlsResources.doNew;\r\n\t\tthis.edit.innerHTML = _nlsResources.edit;\r\n\t\tthis.save.innerHTML = _nlsResources.save;\r\n\t\tthis.cancel.innerHTML = _nlsResources.cancel;\r\n\t},\r\n\t\r\n\tsetEntry: function(/*object*/entry, /*object*/feed, /*boolean*/leaveMenuState){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to set the current entry that is being edited.\r\n\t\t// entry:\r\n\t\t//\t\tInstance of dojox.atom.io.model.Entry to display for reading/editing.\r\n\t\tif(this._entry !== entry){\r\n\t\t\t//If we swap entries, we don't want to keep the menu states and modes.\r\n\t\t\tthis._editMode=false;\r\n\t\t\tleaveMenuState=false;\r\n\t\t}else{\r\n\t\t\tleaveMenuState = true;\r\n\t\t}\r\n\t\tFeedEntryEditor.superclass.setEntry.call(this, entry, feed);\r\n\t\tthis._editable = this._isEditable(entry);\r\n\t\tif(!leaveMenuState && !this._editable){\r\n\t\t\tdomStyle.set(this.entryEditButton, 'display', 'none');\r\n\t\t\tdomStyle.set(this.entrySaveCancelButtons, 'display', 'none');\r\n\t\t}\r\n\t\tif(this._editable && this.enableEdit){\r\n\t\t\tif(!leaveMenuState){\r\n\t\t\t\tdomStyle.set(this.entryEditButton, 'display', '');\r\n\t\t\t\t//TODO double check this &&...\r\n\t\t\t\tif(this.enableMenuFade && this.entrySaveCancelButton){\r\n\t\t\t\t\tfx.fadeOut({node: this.entrySaveCancelButton,duration: 250}).play();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_toggleEdit: function(){\r\n\t\t// summary:\r\n\t\t//\t\tInternal function for toggling/enabling the display of edit mode\r\n\t\t// returns:\r\n\t\t//\t\tNothing.\r\n\t\tif(this._editable && this.enableEdit){\r\n\t\t\tdomStyle.set(this.entryEditButton, 'display', 'none');\r\n\t\t\tdomStyle.set(this.entrySaveCancelButtons, 'display', '');\r\n\t\t\tthis._editMode = true;\r\n\r\n\t\t\t//Rebuild the view using the same entry and feed.\r\n\t\t\tthis.setEntry(this._entry, this._feed, true);\r\n\t\t}\r\n\t},\r\n\r\n\t_handleEvent: function(/*object*/entrySelectionEvent){\r\n\t\t// summary:\r\n\t\t//\t\tInternal function for listening to a topic that will handle entry notification.\r\n\t\t// entrySelectionEvent:\r\n\t\t//\t\tThe topic message containing the entry that was selected for view.\r\n\t\t// returns:\r\n\t\t//\t\tNothing.\r\n\t\tif(entrySelectionEvent.source != this && entrySelectionEvent.action == \"delete\" &&\r\n\t\t\tentrySelectionEvent.entry && entrySelectionEvent.entry == this._entry){\r\n\t\t\t\tdomStyle.set(this.entryEditButton, 'display', 'none');\r\n\t\t}\r\n\t\tFeedEntryEditor.superclass._handleEvent.call(this, entrySelectionEvent);\r\n\t},\r\n\r\n\t_isEditable: function(/*object*/entry){\r\n\t\t// summary:\r\n\t\t//\t\tInternal function for determining of a particular entry is editable.\r\n\t\t// description:\r\n\t\t//\t\tInternal function for determining of a particular entry is editable.\r\n\t\t//\t\tThis is used for determining if the delete action should be displayed or not.\r\n\t\t// entry:\r\n\t\t//\t\tThe dojox.atom.io.model.Entry object to examine\r\n\t\t// returns:\r\n\t\t//\t\tBoolean denoting if the entry seems editable or not..\r\n\t\tvar retVal = false;\r\n\t\tif(entry && entry !== null && entry.links && entry.links !== null){\r\n\t\t\tfor(var x in entry.links){\r\n\t\t\t\tif(entry.links[x].rel && entry.links[x].rel == \"edit\"){\r\n\t\t\t\t\tretVal = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn retVal;\r\n\t},\r\n\t\r\n\t// The following set<Attribute> functions override the corresponding functions in FeedEntryViewer.  These handle\r\n\t// the editMode flag by inserting appropriate editor widgets inside of just splashing the content in the page.\r\n\tsetTitle: function(/*DOM node*/titleAnchorNode, /*boolean*/editMode, /*object*/entry){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to set the contents of the title node in the template to some value from the entry.\r\n\t\t// description:\r\n\t\t//\t\tFunction to set the contents of the title node in the template to some value from the entry.\r\n\t\t//\t\tThis exists specifically so users can over-ride how the title data is filled out from an entry.\r\n\t\t// titleAnchorNode:\r\n\t\t//\t\tThe DOM node to attach the title data to.\r\n\t\t// editMode:\r\n\t\t//\t\tBoolean to indicate if the display should be in edit mode or not.\r\n\t\t// entry:\r\n\t\t//\t\tThe Feed Entry to work with.\r\n\r\n\t\tif(!editMode){\r\n\t\t\tFeedEntryEditor.superclass.setTitle.call(this, titleAnchorNode, editMode, entry);\r\n\t\t\tif(entry.title && entry.title.value && entry.title.value !== null){\r\n\t\t\t\tthis.setFieldValidity(\"title\", true);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(entry.title && entry.title.value && entry.title.value !== null){\r\n\t\t\t\tif(!this._toLoad){\r\n\t\t\t\t\tthis._toLoad = [];\r\n\t\t\t\t}\r\n\t\t\t\tthis.entryTitleSelect.value = entry.title.type;\r\n\t\t\t\t\r\n\t\t\t\tvar editor = this._createEditor(titleAnchorNode, entry.title, true, entry.title.type === \"html\" || entry.title.type === \"xhtml\");\r\n\t\t\t\teditor.name = \"title\";\r\n\t\t\t\tthis._toLoad.push(editor);\r\n\t\t\t\tthis.setFieldValidity(\"titleedit\",true);\r\n\t\t\t\tthis.setFieldValidity(\"title\",true);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tsetAuthors: function(/*DOM node*/authorsAnchorNode, /*boolean*/editMode, /*object*/entry){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to set the contents of the author node in the template to some value from the entry.\r\n\t\t// description:\r\n\t\t//\t\tFunction to set the contents of the author node in the template to some value from the entry.\r\n\t\t//\t\tThis exists specifically so users can over-ride how the title data is filled out from an entry.\r\n\t\t// authorsAnchorNode:\r\n\t\t//\t\tThe DOM node to attach the author data to.\r\n\t\t// editMode:\r\n\t\t//\t\tBoolean to indicate if the display should be in edit mode or not.\r\n\t\t// entry:\r\n\t\t//\t\tThe Feed Entry to work with.\r\n\t\tif(!editMode){\r\n\t\t\tFeedEntryEditor.superclass.setAuthors.call(this, authorsAnchorNode, editMode, entry);\r\n\t\t\tif(entry.authors && entry.authors.length > 0){\r\n\t\t\t\tthis.setFieldValidity(\"authors\", true);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(entry.authors && entry.authors.length > 0){\r\n\t\t\t\tthis._editors.authors = this._createPeopleEditor(this.entryAuthorNode, {data: entry.authors, name: \"Author\"});\r\n\t\t\t\tthis.setFieldValidity(\"authors\", true);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tsetContributors: function(/*DOM node*/contributorsAnchorNode, /*boolean*/editMode, /*object*/entry){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to set the contents of the contributor node in the template to some value from the entry.\r\n\t\t// description:\r\n\t\t//\t\tFunction to set the contents of the contributor node in the template to some value from the entry.\r\n\t\t//\t\tThis exists specifically so users can over-ride how the title data is filled out from an entry.\r\n\t\t// contributorsAnchorNode:\r\n\t\t//\t\tThe DOM node to attach the contributor data to.\r\n\t\t// editMode:\r\n\t\t//\t\tBoolean to indicate if the display should be in edit mode or not.\r\n\t\t// entry:\r\n\t\t//\t\tThe Feed Entry to work with.\r\n\t\tif(!editMode){\r\n\t\t\tFeedEntryEditor.superclass.setContributors.call(this, contributorsAnchorNode, editMode, entry);\r\n\t\t\tif(entry.contributors && entry.contributors.length > 0){\r\n\t\t\t\tthis.setFieldValidity(\"contributors\", true);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(entry.contributors && entry.contributors.length > 0){\r\n\t\t\t\tthis._editors.contributors = this._createPeopleEditor(this.entryContributorNode, {data: entry.contributors, name: \"Contributor\"});\r\n\t\t\t\tthis.setFieldValidity(\"contributors\", true);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tsetId: function(/*DOM node*/idAnchorNode, /*boolean*/editMode, /*object*/entry){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to set the contents of the ID  node in the template to some value from the entry.\r\n\t\t// description:\r\n\t\t//\t\tFunction to set the contents of the ID node in the template to some value from the entry.\r\n\t\t//\t\tThis exists specifically so users can over-ride how the title data is filled out from an entry.\r\n\t\t// idAnchorNode:\r\n\t\t//\t\tThe DOM node to attach the ID data to.\r\n\t\t// editMode:\r\n\t\t//\t\tBoolean to indicate if the display should be in edit mode or not.\r\n\t\t// entry:\r\n\t\t//\t\tThe Feed Entry to work with.\r\n\t\tif(!editMode){\r\n\t\t\tFeedEntryEditor.superclass.setId.call(this, idAnchorNode, editMode, entry);\r\n\t\t\tif(entry.id && entry.id !== null){\r\n\t\t\t\tthis.setFieldValidity(\"id\", true);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(entry.id && entry.id !== null){\r\n\t\t\t\tthis._editors.id = this._createEditor(idAnchorNode, entry.id);\r\n\t\t\t\tthis.setFieldValidity(\"id\",true);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tsetUpdated: function(/*DOM node*/updatedAnchorNode, /*boolean*/editMode, /*object*/entry){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to set the contents of the updated  node in the template to some value from the entry.\r\n\t\t// description:\r\n\t\t//\t\tFunction to set the contents of the updated node in the template to some value from the entry.\r\n\t\t//\t\tThis exists specifically so users can over-ride how the title data is filled out from an entry.\r\n\t\t// updatedAnchorNode:\r\n\t\t//\t\tThe DOM node to attach the updated data to.\r\n\t\t// editMode:\r\n\t\t//\t\tBoolean to indicate if the display should be in edit mode or not.\r\n\t\t// entry:\r\n\t\t//\t\tThe Feed Entry to work with.\r\n\t\tif(!editMode){\r\n\t\t\tFeedEntryEditor.superclass.setUpdated.call(this, updatedAnchorNode, editMode, entry);\r\n\t\t\tif(entry.updated && entry.updated !== null){\r\n\t\t\t\tthis.setFieldValidity(\"updated\", true);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(entry.updated && entry.updated !== null){\r\n\t\t\t\tthis._editors.updated = this._createEditor(updatedAnchorNode, entry.updated);\r\n\t\t\t\tthis.setFieldValidity(\"updated\",true);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tsetSummary: function(/*DOM node*/summaryAnchorNode, /*boolean*/editMode, /*object*/entry){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to set the contents of the summary  node in the template to some value from the entry.\r\n\t\t// description:\r\n\t\t//\t\tFunction to set the contents of the summary node in the template to some value from the entry.\r\n\t\t//\t\tThis exists specifically so users can over-ride how the title data is filled out from an entry.\r\n\t\t// summaryAnchorNode:\r\n\t\t//\t\tThe DOM node to attach the summary data to.\r\n\t\t// editMode:\r\n\t\t//\t\tBoolean to indicate if the display should be in edit mode or not.\r\n\t\t// entry:\r\n\t\t//\t\tThe Feed Entry to work with.\r\n\t\tif(!editMode){\r\n\t\t\tFeedEntryEditor.superclass.setSummary.call(this, summaryAnchorNode, editMode, entry);\r\n\t\t\tif(entry.summary && entry.summary.value && entry.summary.value !== null){\r\n\t\t\t\tthis.setFieldValidity(\"summary\", true);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(entry.summary && entry.summary.value && entry.summary.value !== null){\r\n\t\t\t\tif(!this._toLoad){\r\n\t\t\t\t\tthis._toLoad = [];\r\n\t\t\t\t}\r\n\t\t\t\tthis.entrySummarySelect.value = entry.summary.type;\r\n\t\t\t\t\r\n\t\t\t\tvar editor = this._createEditor(summaryAnchorNode, entry.summary, true, entry.summary.type === \"html\" || entry.summary.type === \"xhtml\");\r\n\t\t\t\teditor.name = \"summary\";\r\n\t\t\t\tthis._toLoad.push(editor);\r\n\t\t\t\tthis.setFieldValidity(\"summaryedit\",true);\r\n\t\t\t\tthis.setFieldValidity(\"summary\",true);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tsetContent: function(/*DOM node*/contentAnchorNode, /*boolean*/editMode, /*object*/entry){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to set the contents of the content node in the template to some value from the entry.\r\n\t\t// description:\r\n\t\t//\t\tFunction to set the contents of the content node in the template to some value from the entry.\r\n\t\t//\t\tThis exists specifically so users can over-ride how the title data is filled out from an entry.\r\n\t\t// summaryAnchorNode:\r\n\t\t//\t\tThe DOM node to attach the content data to.\r\n\t\t// editMode:\r\n\t\t//\t\tBoolean to indicate if the display should be in edit mode or not.\r\n\t\t// entry:\r\n\t\t//\t\tThe Feed Entry to work with.\r\n\t\tif(!editMode){\r\n\t\t\tFeedEntryEditor.superclass.setContent.call(this, contentAnchorNode, editMode, entry);\r\n\t\t\tif(entry.content && entry.content.value && entry.content.value !== null){\r\n\t\t\t\tthis.setFieldValidity(\"content\",true);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(entry.content && entry.content.value && entry.content.value !== null){\r\n\t\t\t\tif(!this._toLoad){\r\n\t\t\t\t\tthis._toLoad = [];\r\n\t\t\t\t}\r\n\t\t\t\tthis.entryContentSelect.value = entry.content.type;\r\n\t\t\t\tvar editor = this._createEditor(contentAnchorNode, entry.content, true, entry.content.type === \"html\" || entry.content.type === \"xhtml\");\r\n\t\t\t\teditor.name = \"content\";\r\n\t\t\t\tthis._toLoad.push(editor);\r\n\t\t\t\tthis.setFieldValidity(\"contentedit\",true);\r\n\t\t\t\tthis.setFieldValidity(\"content\",true);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t_createEditor: function(/*DOM node*/anchorNode, /*DOM node*/node, /*boolean*/multiline, /*object*/rte){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to create an appropriate text editor widget based on the given parameters.\r\n\t\t// anchorNode:\r\n\t\t//\t\tThe DOM node to attach the editor widget to.\r\n\t\t// node:\r\n\t\t//\t\tAn object containing the value to be put into the editor.  This ranges from an anonymous object\r\n\t\t//\t\twith a value parameter to a dojox.atom.io.model.Content object.\r\n\t\t// multiline:\r\n\t\t//\t\tA boolean indicating whether the content should be multiline (such as a textarea) instead of a\r\n\t\t//\t\tsingle line (such as a textbox).\r\n\t\t// rte:\r\n\t\t//\t\tA boolean indicating whether the content should be a rich text editor widget.\r\n\t\t// returns:\r\n\t\t//\t\tEither a widget (for textarea or textbox widgets) or an anonymous object to be used to create a\r\n\t\t//\t\trich text area widget.\r\n\t\tvar viewNode;\r\n\t\tvar box;\r\n\t\tif(!node){\r\n\t\t\tif(rte){\r\n\t\t\t\t// Returns an anonymous object which would then be loaded later, after the containing element\r\n\t\t\t\t// exists on the page.\r\n\t\t\t\treturn {anchorNode: anchorNode,\r\n\t\t\t\t\t\tentryValue: \"\",\r\n\t\t\t\t\t\teditor: null,\r\n\t\t\t\t\t\tgenerateEditor: function(){\r\n\t\t\t\t\t\t\t// The only way I found I could get the editor to behave consistently was to\r\n\t\t\t\t\t\t\t// create the content on a span, and allow the content editor to replace it.\r\n\t\t\t\t\t\t\t// This gets around the dynamic/delayed way in which content editors get created.\r\n\t\t\t\t\t\t\tvar node = document.createElement(\"div\");\r\n\t\t\t\t\t\t\tnode.innerHTML = this.entryValue;\r\n\t\t\t\t\t\t\tthis.anchorNode.appendChild(node);\r\n\t\t\t\t\t\t\tvar _editor = new Editor({}, node);\r\n\t\t\t\t\t\t\tthis.editor = _editor;\r\n\t\t\t\t\t\t\treturn _editor;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tif(multiline){\r\n\t\t\t\t// If multiline, create a textarea\r\n\t\t\t\tviewNode = document.createElement(\"textarea\");\r\n\t\t\t\tanchorNode.appendChild(viewNode);\r\n\t\t\t\tdomStyle.set(viewNode, 'width', '90%');\r\n\t\t\t\tbox = new SimpleTextarea({},viewNode);\r\n\t\t\t}else{\r\n\t\t\t\t// If single line, create a textbox.\r\n\t\t\t\tviewNode = document.createElement(\"input\");\r\n\t\t\t\tanchorNode.appendChild(viewNode);\r\n\t\t\t\tdomStyle.set(viewNode, 'width', '95%');\r\n\t\t\t\tbox = new TextBox({},viewNode);\r\n\t\t\t}\r\n\t\t\tbox.attr('value', '');\r\n\t\t\treturn box;\r\n\t\t}\r\n\r\n\t\t// Check through the node parameter to get the value to be used.\r\n\t\tvar value;\r\n\t\tif(node.value !== undefined){\r\n\t\t\tvalue = node.value;\r\n\t\t}else if(node.attr){\r\n\t\t\tvalue = node.attr('value');\r\n\t\t}else{\r\n\t\t\tvalue = node;\r\n\t\t}\r\n\t\tif(rte){\r\n\t\t\t// Returns an anonymous object which would then be loaded later, after the containing element\r\n\t\t\t// exists on the page.\r\n\t\t\tif(value.indexOf(\"<\") != -1){\r\n\t\t\t\tvalue = value.replace(/</g, \"&lt;\");\r\n\t\t\t}\r\n\t\t\treturn {anchorNode: anchorNode,\r\n\t\t\t\t\tentryValue: value,\r\n\t\t\t\t\teditor: null,\r\n\t\t\t\t\tgenerateEditor: function(){\r\n\t\t\t\t\t\t// The only way I found I could get the editor to behave consistently was to\r\n\t\t\t\t\t\t// create the content on a span, and allow the content editor to replace it.\r\n\t\t\t\t\t\t// This gets around the dynamic/delayed way in which content editors get created.\r\n\t\t\t\t\t\tvar node = document.createElement(\"div\");\r\n\t\t\t\t\t\tnode.innerHTML = this.entryValue;\r\n\t\t\t\t\t\tthis.anchorNode.appendChild(node);\r\n\t\t\t\t\t\tvar _editor = new Editor({}, node);\r\n\t\t\t\t\t\tthis.editor = _editor;\r\n\t\t\t\t\t\treturn _editor;\r\n\t\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t\tif(multiline){\r\n\t\t\t// If multiline, create a textarea\r\n\t\t\tviewNode = document.createElement(\"textarea\");\r\n\t\t\tanchorNode.appendChild(viewNode);\r\n\t\t\tdomStyle.set(viewNode, 'width', '90%');\r\n\t\t\tbox = new SimpleTextarea({},viewNode);\r\n\t\t}else{\r\n\t\t\t// If single line, create a textbox.\r\n\t\t\tviewNode = document.createElement(\"input\");\r\n\t\t\tanchorNode.appendChild(viewNode);\r\n\t\t\tdomStyle.set(viewNode, 'width', '95%');\r\n\t\t\tbox = new TextBox({},viewNode);\r\n\t\t}\r\n\t\tbox.attr('value', value);\r\n\t\treturn box;\r\n\t},\r\n\t\r\n\t_switchEditor: function(/*object*/event){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to switch between editor types.\r\n\t\t// description:\r\n\t\t//\t\tFunction to switch between a rich text editor and a textarea widget.  Used for title, summary,\r\n\t\t//\t\tAnd content when switching between text and html/xhtml content.\r\n\t\t// event:\r\n\t\t//\t\tThe event generated by the change in the select box on the page.\r\n\t\tvar type = null;\r\n\t\tvar target = null;\r\n\t\tvar parent = null;\r\n\t\t\r\n\t\t// Determine the source/target of this event (to determine which editor we're switching)\r\n\t\tif(has(\"ie\")){\r\n\t\t\ttarget = event.srcElement;\r\n\t\t}else{\r\n\t\t\ttarget = event.target;\r\n\t\t}\r\n\t\t\t\r\n\t\t// Determine which editor (title, summary, or content)\r\n\t\tif(target === this.entryTitleSelect){\r\n\t\t\tparent = this.entryTitleNode;\r\n\t\t\ttype = \"title\";\r\n\t\t} else if(target === this.entrySummarySelect){\r\n\t\t\tparent = this.entrySummaryNode;\r\n\t\t\ttype = \"summary\";\r\n\t\t}else{\r\n\t\t\tparent = this.entryContentNode;\r\n\t\t\ttype = \"content\";\r\n\t\t}\r\n\r\n\t\t// Grab the existing editor.\r\n\t\tvar editor = this._editors[type];\r\n\t\tvar newEditor;\r\n\t\tvar value;\r\n\t\t\r\n\t\tif(target.value === \"text\"){\r\n\t\t\tif(editor.isInstanceOf(Editor)){\r\n\t\t\t\t// If we're changing the type to text and our existing editor is a rich text editor, we need to destroy\r\n\t\t\t\t// it and switch to a multiline editor.\r\n\t\t\t\tvalue = editor.attr('value', false);\r\n\t\t\t\teditor.close(false,true);\r\n\t\t\t\teditor.destroy();\r\n\t\t\t\twhile(parent.firstChild){\r\n\t\t\t\t\tdomConstruct.destroy(parent.firstChild);\r\n\t\t\t\t}\r\n\t\t\t\tnewEditor = this._createEditor(parent, {value: value}, true, false);\r\n\t\t\t\tthis._editors[type] = newEditor;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(!editor.isInstanceOf(Editor)){\r\n\t\t\t\t// Otherwise, we're switching to a html or xhtml type, but we currently have a textarea widget.  We need\r\n\t\t\t\t// to destroy the existing RTE and create a multiline textarea widget.\r\n\t\t\t\tvalue = editor.attr('value');\r\n\t\t\t\teditor.destroy();\r\n\t\t\t\twhile(parent.firstChild){\r\n\t\t\t\t\tdomConstruct.destroy(parent.firstChild);\r\n\t\t\t\t}\r\n\t\t\t\tnewEditor = this._createEditor(parent, {value: value}, true, true);\r\n\t\t\t\tnewEditor = lang.hitch(newEditor, newEditor.generateEditor)();\r\n\t\t\t\tthis._editors[type] = newEditor;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t_createPeopleEditor: function(/*DOM node*/anchorNode, /*DOM node*/node){\r\n\t\t// summary:\r\n\t\t//\t\tCreates a People Editor widget, sets its value, and returns it.\r\n\t\t// anchorNode:\r\n\t\t//\t\tThe node to attach the editor to.\r\n\t\t// node:\r\n\t\t//\t\tAn object containing the value to be put into the editor. Typically, this is an\r\n\t\t//\t\tdojox.atom.io.model.Person object.\r\n\t\t// returns:\r\n\t\t//\t\tA new People Editor object.\r\n\t\tvar viewNode = document.createElement(\"div\");\r\n\t\tanchorNode.appendChild(viewNode);\r\n\t\treturn new PeopleEditor(node,viewNode);\r\n\t},\r\n\r\n\tsaveEdits: function(){\r\n\t\t// summary:\r\n\t\t//\t\tSaves edits submitted when the 'save' button is pressed.\r\n\t\t// description:\r\n\t\t//\t\tSaves edits submitted when the 'save' button is pressed.  Distinguishes between new and existing\r\n\t\t//\t\tentries and saves appropriately.  Fetches the values of the editors, and, if existing, compares them to\r\n\t\t//\t\tthe existing values and submits the updates, otherwise creates a new entry and posts it as a new entry.\r\n\t\t// returns:\r\n\t\t//\t\tNothing.\r\n\t\tdomStyle.set(this.entrySaveCancelButtons, 'display', 'none');\r\n\t\tdomStyle.set(this.entryEditButton, 'display', '');\r\n\t\tdomStyle.set(this.entryNewButton, 'display', '');\r\n\t\tvar modifiedEntry = false;\r\n\t\tvar value;\r\n\t\tvar i;\r\n\t\tvar changed;\r\n\t\tvar entry;\r\n\t\tvar authors;\r\n\t\tvar contributors;\r\n\t\tif(!this._new){\r\n\t\t\tentry = this.getEntry();\r\n\t\t\tif(this._editors.title && (this._editors.title.attr('value') != entry.title.value || this.entryTitleSelect.value != entry.title.type)){\r\n\t\t\t\tvalue = this._editors.title.attr('value');\r\n\t\t\t\tif(this.entryTitleSelect.value === \"xhtml\"){\r\n\t\t\t\t\tvalue = this._enforceXhtml(value);\r\n\t\t\t\t\tif(value.indexOf('<div xmlns=\"http://www.w3.org/1999/xhtml\">') !== 0){\r\n\t\t\t\t\t\tvalue = '<div xmlns=\"http://www.w3.org/1999/xhtml\">' + value + '</div>';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tentry.title = new model.Content(\"title\", value, null, this.entryTitleSelect.value);\r\n\t\t\t\tmodifiedEntry = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this._editors.id.attr('value') != entry.id){\r\n\t\t\t\tentry.id = this._editors.id.attr('value');\r\n\t\t\t\tmodifiedEntry = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this._editors.summary && (this._editors.summary.attr('value') != entry.summary.value || this.entrySummarySelect.value != entry.summary.type)){\r\n\t\t\t\tvalue = this._editors.summary.attr('value');\r\n\t\t\t\tif(this.entrySummarySelect.value === \"xhtml\"){\r\n\t\t\t\t\tvalue = this._enforceXhtml(value);\r\n\t\t\t\t\tif(value.indexOf('<div xmlns=\"http://www.w3.org/1999/xhtml\">') !== 0){\r\n\t\t\t\t\t\tvalue = '<div xmlns=\"http://www.w3.org/1999/xhtml\">' + value + '</div>';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tentry.summary = new model.Content(\"summary\", value, null, this.entrySummarySelect.value);\r\n\t\t\t\tmodifiedEntry = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this._editors.content && (this._editors.content.attr('value') != entry.content.value || this.entryContentSelect.value != entry.content.type)){\r\n\t\t\t\tvalue = this._editors.content.attr('value');\r\n\t\t\t\tif(this.entryContentSelect.value === \"xhtml\"){\r\n\t\t\t\t\tvalue = this._enforceXhtml(value);\r\n\t\t\t\t\tif(value.indexOf('<div xmlns=\"http://www.w3.org/1999/xhtml\">') !== 0){\r\n\t\t\t\t\t\tvalue = '<div xmlns=\"http://www.w3.org/1999/xhtml\">' + value + '</div>';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tentry.content = new model.Content(\"content\", value, null, this.entryContentSelect.value);\r\n\t\t\t\tmodifiedEntry = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this._editors.authors){\r\n\t\t\t\tif(modifiedEntry){\r\n\t\t\t\t\tentry.authors = [];\r\n\t\t\t\t\tauthors = this._editors.authors.getValues();\r\n\t\t\t\t\tfor(i in authors){\r\n\t\t\t\t\t\tif(authors[i].name || authors[i].email || authors[i].uri){\r\n\t\t\t\t\t\t\tentry.addAuthor(authors[i].name, authors[i].email, authors[i].uri);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar currentAuthors = entry.authors;\r\n\t\t\t\t\tvar searchAuthors = function(name, email, uri){\r\n\t\t\t\t\t\tfor(i in currentAuthors){\r\n\t\t\t\t\t\t\tif(currentAuthors[i].name === name && currentAuthors[i].email === email && currentAuthors[i].uri === uri){\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tauthors = this._editors.authors.getValues();\r\n\t\t\t\t\tchanged = false;\r\n\t\t\t\t\tfor(i in authors){\r\n\t\t\t\t\t\tif(!searchAuthors(authors[i].name, authors[i].email, authors[i].uri)){\r\n\t\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(changed){\r\n\t\t\t\t\t\tentry.authors = [];\r\n\t\t\t\t\t\tfor(i in authors){\r\n\t\t\t\t\t\t\tif(authors[i].name || authors[i].email || authors[i].uri){\r\n\t\t\t\t\t\t\t\tentry.addAuthor(authors[i].name, authors[i].email, authors[i].uri);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmodifiedEntry = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this._editors.contributors){\r\n    \t\t\tif(modifiedEntry){\r\n\t\t\t\t\tentry.contributors = [];\r\n\t\t\t\t\tcontributors = this._editors.contributors.getValues();\r\n\t\t\t\t\tfor(i in contributors){\r\n\t\t\t\t\t\tif(contributors[i].name || contributors[i].email || contributors[i].uri){\r\n\t\t\t\t\t\t\tentry.addAuthor(contributors[i].name, contributors[i].email, contributors[i].uri);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar currentContributors = entry.contributors;\r\n\t\t\t\t\tvar searchContributors = function(name, email, uri){\r\n\t\t\t\t\t\tfor(i in currentContributors){\r\n\t\t\t\t\t\t\tif(currentContributors[i].name === name && currentContributors[i].email === email && currentContributors[i].uri === uri){\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tcontributors = this._editors.contributors.getValues();\r\n\t\t\t\t\tchanged = false;\r\n\t\t\t\t\tfor(i in contributors){\r\n\t\t\t\t\t\tif(searchContributors(contributors[i].name, contributors[i].email, contributors[i].uri)){\r\n\t\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(changed){\r\n\t\t\t\t\t\tentry.contributors = [];\r\n\t\t\t\t\t\tfor(i in contributors){\r\n\t\t\t\t\t\t\tif(contributors[i].name || contributors[i].email || contributors[i].uri){\r\n\t\t\t\t\t\t\t\tentry.addContributor(contributors[i].name, contributors[i].email, contributors[i].uri);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmodifiedEntry = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(modifiedEntry){\r\n\t\t\t\tdojo.publish(this.entrySelectionTopic, [{action: \"update\", source: this, entry: entry, callback: this._handleSave }]);\r\n\t\t\t\t//TODO: REMOVE BELOW\r\n\t\t\t\t//var atomIO = new dojox.atom.io.Connection();\r\n\t\t\t\t//atomIO.updateEntry(entry, dojo.hitch(this,this._handleSave));\r\n\t\t\t\t//WARNING: Use above when testing with SimpleProxy (or any other servlet which\r\n\t\t\t\t//\t\t\tdoesn't actually create a new entry and return it properly)\r\n\t\t\t\t//atomIO.updateEntry(entry, dojo.hitch(this,this._handleSave), true);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis._new = false;\r\n\t\t\tentry = new model.Entry();\r\n\t\t\t\r\n\t\t\tvalue = this._editors.title.attr('value');\r\n\t\t\tif(this.entryTitleSelect.value === \"xhtml\"){\r\n\t\t\t\tvalue = this._enforceXhtml(value);\r\n\t\t\t\tvalue = '<div xmlns=\"http://www.w3.org/1999/xhtml\">' + value + '</div>';\r\n\t\t\t}\r\n\t\t\tentry.setTitle(value, this.entryTitleSelect.value);\r\n\t\t\tentry.id = this._editors.id.attr('value');\r\n\t\t\t\r\n\t\t\tauthors = this._editors.authors.getValues();\r\n\t\t\tfor(i in authors){\r\n\t\t\t\tif(authors[i].name || authors[i].email || authors[i].uri){\r\n\t\t\t\t\tentry.addAuthor(authors[i].name, authors[i].email, authors[i].uri);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\tcontributors = this._editors.contributors.getValues();\r\n\t\t\tfor(i in contributors){\r\n\t\t\t\tif(contributors[i].name || contributors[i].email || contributors[i].uri){\r\n\t\t\t\t\tentry.addContributor(contributors[i].name, contributors[i].email, contributors[i].uri);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t\r\n\t\t\tvalue = this._editors.summary.attr('value');\r\n\t\t\tif(this.entrySummarySelect.value === \"xhtml\"){\r\n\t\t\t\tvalue = this._enforceXhtml(value);\r\n\t\t\t\tvalue = '<div xmlns=\"http://www.w3.org/1999/xhtml\">' + value + '</div>';\r\n\t\t\t}\r\n\t\t\tentry.summary = new model.Content(\"summary\", value, null, this.entrySummarySelect.value);\r\n\r\n\t\t\tvalue = this._editors.content.attr('value');\r\n\t\t\tif(this.entryContentSelect.value === \"xhtml\"){\r\n\t\t\t\tvalue = this._enforceXhtml(value);\r\n\t\t\t\tvalue = '<div xmlns=\"http://www.w3.org/1999/xhtml\">' + value + '</div>';\r\n\t\t\t}\r\n\t\t\tentry.content = new model.Content(\"content\", value, null, this.entryContentSelect.value);\r\n\r\n\t\t\tdomStyle.set(this.entryNewButton, 'display', '');\r\n\t\t\tdojo.publish(this.entrySelectionTopic, [{action: \"post\", source: this, entry: entry }]);\r\n\t\t}\r\n\t\tthis._editMode = false;\r\n\t\t\r\n\t\t//Rebuild the view using the same entry and feed.\r\n\t\tthis.setEntry(entry, this._feed, true);\r\n\t},\r\n\t\r\n\t_handleSave: function(/*object*/entry, /*string*/ location){\r\n\t\t// summary:\r\n\t\t//\t\tFunction for handling the save of an entry, cleaning up the display after the edit is completed.\r\n\t\t// entry: dojox.atom.io.model.Entry object\r\n\t\t//\t\tThe entry that was saved.\r\n\t\t// Location: String\r\n\t\t//\t\tA URL to be used, not used here, but part of the call back from the AtomIO\r\n\t\t// returns: Nothing\r\n\r\n\t\t//Close the editor and revert out.\r\n\t\tthis._editMode = false;\r\n\t\t\r\n\t\t//Rebuild the view using the same entry and feed.\r\n\t\tthis.clear();\r\n\t\tthis.setEntry(entry, this.getFeed(), true);\r\n\t},\r\n\r\n\tcancelEdits: function(){\r\n\t\t// summary:\r\n\t\t//\t\tCancels edits and reverts the editor to its previous state (display mode)\r\n\t\t// returns:\r\n\t\t//\t\tNothing.\r\n\t\tthis._new = false;\r\n\t\tdomStyle.set(this.entrySaveCancelButtons, 'display', 'none');\r\n\t\tif(this._editable){\r\n\t\t\tdomStyle.set(this.entryEditButton, 'display', '');\r\n\t\t}\r\n\t\tdomStyle.set(this.entryNewButton, 'display', '');\r\n\t\tthis._editMode = false;\r\n\t\t\r\n\t\t//Rebuild the view using the same entry and feed.\r\n\t\tthis.clearEditors();\r\n\t\tthis.setEntry(this.getEntry(), this.getFeed(), true);\r\n\t},\r\n\r\n\tclear: function(){\r\n\t\t// summary:\r\n\t\t//\t\tClears the editor, destroys all editors, leaving the editor completely clear\r\n\t\tthis._editable=false;\r\n\t\tthis.clearEditors();\r\n\t\tFeedEntryEditor.superclass.clear.apply(this);\r\n\t\tif(this._contentEditor){\r\n\t\t\t// Note that the superclass clear destroys the widget since it's in the child widget list,\r\n\t\t\t// so this is just ref clearing.\r\n\t\t\tthis._contentEditor = this._setObject = this._oldContent = this._contentEditorCreator = null;\r\n\t\t\tthis._editors = {};\r\n\t\t}\r\n\t},\r\n\t\r\n\tclearEditors: function(){\r\n\t\tfor(var key in this._editors){\r\n\t\t\tif(this._editors[key].isInstanceOf(Editor)){\r\n\t\t\t\tthis._editors[key].close(false, true);\r\n\t\t\t}\r\n\t\t\tthis._editors[key].destroy();\r\n\t\t}\r\n\t\tthis._editors = {};\r\n\t},\r\n\r\n\t_enforceXhtml: function(/*string*/html){\r\n\t\t// summary:\r\n\t\t//\t\tFunction for cleaning up/enforcing the XHTML standard in HTML returned from the editor2 widget.\r\n\t\t// html:\r\n\t\t//\t\tHTML string to be enforced as xhtml.\r\n\t\t// returns:\r\n\t\t//\t\tstring of cleaned up HTML.\r\n\t\tvar xhtml = null;\r\n\t\tif(html){\r\n\t\t\t//Handle <BR>\r\n\t\t\tvar brRegExp = /<br>/g;\r\n\t\t\txhtml = html.replace(brRegExp, \"<br/>\");\r\n\r\n\t\t\t//Handle <HR>\r\n\t\t\txhtml = this._closeTag(xhtml, \"hr\");\r\n\r\n\t\t\t//Handle <img>\r\n\t\t\txhtml = this._closeTag(xhtml, \"img\");\r\n\t\t}\r\n\t\treturn xhtml;\r\n\t},\r\n\r\n\t_closeTag: function(/*string*/xhtml, /*string*/tag){\r\n\t\t// summary:\r\n\t\t//\t\tFunction for closing tags in a text of HTML/XHTML\r\n\t\t// xhtml: String\r\n\t\t//\t\tXHTML string which needs the closing tag.\r\n\t\t// tag:\r\n\t\t//\t\tThe tag to close.\r\n\t\t// returns:\r\n\t\t//\t\tstring of cleaned up HTML.\r\n\r\n\t\t// NOTE:  Probably should redo this function in a more efficient way.  This could get expensive.\r\n\t\tvar tagStart = \"<\" + tag;\r\n\t\tvar tagIndex = xhtml.indexOf(tagStart);\r\n\t\tif(tagIndex !== -1){\r\n\t\t\twhile (tagIndex !== -1){\r\n\t\t\t\tvar tempString = \"\";\r\n\t\t\t\tvar foundTagEnd = false;\r\n\t\t\t\tfor (var i = 0; i < xhtml.length; i++){\r\n\t\t\t\t\tvar c = xhtml.charAt(i);\r\n\t\t\t\t\tif(i <= tagIndex ||foundTagEnd){\r\n\t\t\t\t\t\ttempString += c;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(c === '>'){\r\n\t\t\t\t\t\t\ttempString += \"/\";\r\n\t\t\t\t\t\t\tfoundTagEnd = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttempString +=c;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\txhtml = tempString;\r\n\t\t\t\ttagIndex = xhtml.indexOf(tagStart, tagIndex + 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn xhtml;\r\n\t},\r\n\t\r\n\t_toggleNew: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to put the editor into a state to create a new entry.\r\n\r\n\t\t// Hide the edit/new buttons and show the save/cancel buttons.\r\n\t\tdomStyle.set(this.entryNewButton, 'display', 'none');\r\n\t\tdomStyle.set(this.entryEditButton, 'display', 'none');\r\n\t\tdomStyle.set(this.entrySaveCancelButtons, 'display', '');\r\n\t\t\r\n\t\t// Reset the type select boxes to text.\r\n\t\tthis.entrySummarySelect.value = \"text\";\r\n\t\tthis.entryContentSelect.value = \"text\";\r\n\t\tthis.entryTitleSelect.value = \"text\";\r\n\t\t\r\n\t\t// Clear all nodes.\r\n\t\tthis.clearNodes();\r\n\t\tthis._new = true;\r\n\t\t\r\n\t\tvar _nlsResources = i18nViewer;\r\n\t\t// Create all headers and editors.\r\n\t\tvar titleHeader = new FeedEntryViewer.EntryHeader({title: _nlsResources.title});\r\n\t\tthis.entryTitleHeader.appendChild(titleHeader.domNode);\r\n\t\t\r\n\t\tthis._editors.title = this._createEditor(this.entryTitleNode, null);\r\n\t\tthis.setFieldValidity(\"title\",true);\r\n\t\t\r\n\t\tvar authorHeader = new FeedEntryViewer.EntryHeader({title: _nlsResources.authors});\r\n\t\tthis.entryAuthorHeader.appendChild(authorHeader.domNode);\r\n\r\n\t\tthis._editors.authors = this._createPeopleEditor(this.entryAuthorNode, {name: \"Author\"});\r\n\t\tthis.setFieldValidity(\"authors\", true);\r\n\t\t\r\n\t\tvar contributorHeader = new FeedEntryViewer.EntryHeader({title: _nlsResources.contributors});\r\n\t\tthis.entryContributorHeader.appendChild(contributorHeader.domNode);\r\n\r\n\t\tthis._editors.contributors = this._createPeopleEditor(this.entryContributorNode, {name: \"Contributor\"});\r\n\t\tthis.setFieldValidity(\"contributors\", true);\r\n\t\t\r\n\t\tvar idHeader = new FeedEntryViewer.EntryHeader({title: _nlsResources.id});\r\n\t\tthis.entryIdHeader.appendChild(idHeader.domNode);\r\n\t\t\r\n\t\tthis._editors.id = this._createEditor(this.entryIdNode, null);\r\n\t\tthis.setFieldValidity(\"id\",true);\r\n\r\n\t\tvar updatedHeader = new FeedEntryViewer.EntryHeader({title: _nlsResources.updated});\r\n\t\tthis.entryUpdatedHeader.appendChild(updatedHeader.domNode);\r\n\t\t\r\n\t\tthis._editors.updated = this._createEditor(this.entryUpdatedNode, null);\r\n\t\tthis.setFieldValidity(\"updated\",true);\r\n\r\n\t\tvar summaryHeader = new FeedEntryViewer.EntryHeader({title: _nlsResources.summary});\r\n\t\tthis.entrySummaryHeader.appendChild(summaryHeader.domNode);\r\n\t\t\r\n\t\tthis._editors.summary = this._createEditor(this.entrySummaryNode, null, true);\r\n\t\tthis.setFieldValidity(\"summaryedit\",true);\r\n\t\tthis.setFieldValidity(\"summary\",true);\r\n\r\n\t\tvar contentHeader = new FeedEntryViewer.EntryHeader({title: _nlsResources.content});\r\n\t\tthis.entryContentHeader.appendChild(contentHeader.domNode);\r\n\t\t\r\n\t\tthis._editors.content = this._createEditor(this.entryContentNode, null, true);\r\n\t\tthis.setFieldValidity(\"contentedit\",true);\r\n\t\tthis.setFieldValidity(\"content\",true);\r\n\r\n\t\t// Show the sections.\r\n\t\tthis._displaySections();\r\n\t},\r\n\t\r\n\t_displaySections: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to display the appropriate sections based on validity.\r\n\r\n\t\t// Hide select boxes.\r\n\t\tdomStyle.set(this.entrySummarySelect, 'display', 'none');\r\n\t\tdomStyle.set(this.entryContentSelect, 'display', 'none');\r\n\t\tdomStyle.set(this.entryTitleSelect, 'display', 'none');\r\n\r\n\t\t// Show select boxes if the flags are set.\r\n\t\tif(this.isFieldValid(\"contentedit\")){\r\n\t\t\tdomStyle.set(this.entryContentSelect, 'display', '');\r\n\t\t}\r\n\t\tif(this.isFieldValid(\"summaryedit\")){\r\n\t\t\tdomStyle.set(this.entrySummarySelect, 'display', '');\r\n\t\t}\r\n\t\tif(this.isFieldValid(\"titleedit\")){\r\n\t\t\tdomStyle.set(this.entryTitleSelect, 'display', '');\r\n\t\t}\r\n\t\t// Call super's _displaySections.\r\n\t\tFeedEntryEditor.superclass._displaySections.apply(this);\r\n\t\t\r\n\t\t// If we have editors to load after the nodes are created on the page, execute those now.\r\n\t\tif(this._toLoad){\r\n\t\t\tfor(var i in this._toLoad){\r\n\t\t\t\tvar editor;\r\n\t\t\t\tif(this._toLoad[i].generateEditor){\r\n\t\t\t\t\teditor = lang.hitch(this._toLoad[i], this._toLoad[i].generateEditor)();\r\n\t\t\t\t}else{\r\n\t\t\t\t\teditor = this._toLoad[i];\r\n\t\t\t\t}\r\n\t\t\t\tthis._editors[this._toLoad[i].name] = editor;\r\n\t\t\t\tthis._toLoad[i] = null;\r\n\t\t\t}\r\n\t\t\tthis._toLoad = null;\r\n\t\t}\r\n\t}\r\n});\r\n\r\nvar PeopleEditor = declare(\"dojox.atom.widget.PeopleEditor\", [_Widget, _Templated, _Container],{\r\n\t\t// summary:\r\n\t\t//\t\tAn editor for dojox.atom.io.model.Person objects.\r\n\t\t// description:\r\n\t\t//\t\tAn editor for dojox.atom.io.model.Person objects.  Displays multiple rows for the respective arrays\r\n\t\t//\t\tof people.  Can add/remove rows on the fly.\r\n\t\ttemplateString: peopleEditorTemplate,\r\n\r\n\t\t_rows: [],\r\n\t\t_editors: [],\r\n\t\t_index: 0,\r\n\t\t_numRows: 0,\r\n\t\t\r\n\t\tpostCreate: function(){\r\n\t\t\t// Initializer function for the PeopleEditor widget.\r\n\t\t\tvar _nlsResources = i18nPeople;\r\n\t\t\tif(this.name){\r\n\t\t\t\tif(this.name == \"Author\"){\r\n\t\t\t\t\tthis.peopleEditorButton.appendChild(document.createTextNode(\"[\"+_nlsResources.addAuthor+\"]\"));\r\n\t\t\t\t}else if(this.name == \"Contributor\"){\r\n\t\t\t\t\tthis.peopleEditorButton.appendChild(document.createTextNode(\"[\"+_nlsResources.addContributor+\"]\"));\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.peopleEditorButton.appendChild(document.createTextNode(\"[\"+_nlsResources.add+\"]\"));\r\n\t\t\t}\r\n\t\t\tthis._editors = [];\r\n\r\n\t\t\tif(!this.data || this.data.length===0){\r\n\t\t\t\tthis._createEditors(null, null, null, 0, this.name);\r\n\t\t\t\tthis._index = 1;\r\n\t\t\t}else{\r\n\t\t\t\tfor(var i in this.data){\r\n\t\t\t\t\tthis._createEditors(this.data[i].name, this.data[i].email, this.data[i].uri, i);\r\n\t\t\t\t\tthis._index++;\r\n\t\t\t\t\tthis._numRows++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tdestroy: function(){\r\n\t\t\tfor(var key in this._editors){\r\n\t\t\t\tfor(var key2 in this._editors[key]){\r\n\t\t\t\t\tthis._editors[key][key2].destroy();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._editors = [];\r\n\t\t},\r\n\t\t\r\n\t\t_createEditors: function(/*string*/name, /*string*/email, /*string*/uri, /*int*/index, /*string*/widgetName){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreates editor boxes (textbox widgets) for the individual values of a Person.\r\n\t\t\t// name:\r\n\t\t\t//\t\tThe name of this Person.\r\n\t\t\t// email:\r\n\t\t\t//\t\tThe email of this Person.\r\n\t\t\t// uri:\r\n\t\t\t//\t\tThe Person's URI.\r\n\t\t\t// index:\r\n\t\t\t//\t\tThe row index to use for this Person.\r\n\t\t\tvar row = document.createElement(\"tr\");\r\n\t\t\tthis.peopleEditorEditors.appendChild(row);\r\n\t\t\trow.id = \"removeRow\"+index;\r\n\t\t\t\r\n\t\t\tvar node = document.createElement(\"td\");\r\n\t\t\tnode.setAttribute('align', 'right');\r\n\t\t\trow.appendChild(node);\r\n\t\t\tnode.colSpan = 2;\r\n\t\t\t\r\n\t\t\tif(this._numRows>0){\r\n\t\t\t\tvar hr = document.createElement(\"hr\");\r\n\t\t\t\tnode.appendChild(hr);\r\n\t\t\t\thr.id = \"hr\"+index;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\trow = document.createElement(\"span\");\r\n\t\t\tnode.appendChild(row);\r\n\t\t\trow.className = \"peopleEditorButton\";\r\n\t\t\tdomStyle.set(row, 'font-size', 'x-small');\r\n\t\t\tconnect.connect(row, \"onclick\", this, \"_removeEditor\");\r\n\t\t\trow.id = \"remove\"+index;\r\n\t\t\t\r\n\t\t\tnode = document.createTextNode(\"[X]\");\r\n\t\t\trow.appendChild(node);\r\n\t\t\t\r\n\t\t\trow = document.createElement(\"tr\");\r\n\t\t\tthis.peopleEditorEditors.appendChild(row);\r\n\t\t\trow.id = \"editorsRow\"+index;\r\n\t\t\t\r\n\t\t\tvar labelNode = document.createElement(\"td\");\r\n\t\t\trow.appendChild(labelNode);\r\n\t\t\tdomStyle.set(labelNode, 'width', '20%');\r\n\t\t\t\r\n\t\t\tnode = document.createElement(\"td\");\r\n\t\t\trow.appendChild(node);\r\n\t\t\t\r\n\t\t\trow = document.createElement(\"table\");\r\n\t\t\tlabelNode.appendChild(row);\r\n\t\t\tdomStyle.set(row, 'width', '100%');\r\n\t\t\t\r\n\t\t\tlabelNode = document.createElement(\"tbody\");\r\n\t\t\trow.appendChild(labelNode);\r\n\t\t\t\r\n\t\t\trow = document.createElement(\"table\");\r\n\t\t\tnode.appendChild(row);\r\n\t\t\tdomStyle.set(row, 'width', '100%');\r\n\t\t\t\r\n\t\t\tnode = document.createElement(\"tbody\");\r\n\t\t\trow.appendChild(node);\r\n\r\n\t\t\tthis._editors[index] = [];\r\n\t\t\tthis._editors[index].push(this._createEditor(name, widgetName+'name'+index, 'Name:', labelNode, node));\r\n\t\t\tthis._editors[index].push(this._createEditor(email, widgetName+'email'+index, 'Email:', labelNode, node));\r\n\t\t\tthis._editors[index].push(this._createEditor(uri, widgetName+'uri'+index, 'URI:', labelNode, node));\r\n\t\t},\r\n\t\t\r\n\t\t_createEditor: function(/*string*/value, /*string*/id, /*string*/name, /*DOM node*/labelNode, /*DOM node*/node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates an individual editor widget (textbox) for a value.\r\n\t\t\t// value:\r\n\t\t\t//\t\tThe initial value of the textbox\r\n\t\t\t// id:\r\n\t\t\t//\t\tThe id the textbox should have.\r\n\t\t\t// name:\r\n\t\t\t//\t\tThe text to put in the label element for this textbox.\r\n\t\t\t// labelNode:\r\n\t\t\t//\t\tThe node to attach the label to.\r\n\t\t\t// node:\r\n\t\t\t//\t\tThe node to attach the editor rows to.\r\n\t\t\t// returns:\r\n\t\t\t//\t\tEditor widget.\r\n\t\t\tvar row = document.createElement(\"tr\");\r\n\t\t\tlabelNode.appendChild(row);\r\n\t\t\t\r\n\t\t\tvar label = document.createElement(\"label\");\r\n\t\t\tlabel.setAttribute('for', id);\r\n\t\t\tlabel.appendChild(document.createTextNode(name));\r\n\t\t\tlabelNode = document.createElement(\"td\");\r\n\t\t\tlabelNode.appendChild(label);\r\n\t\t\trow.appendChild(labelNode);\r\n\t\t\t\r\n\t\t\trow = document.createElement(\"tr\");\r\n\t\t\tnode.appendChild(row);\r\n\t\t\t\t\r\n\t\t\tnode = document.createElement(\"td\");\r\n\t\t\trow.appendChild(node);\r\n\t\t\t\r\n\t\t\tvar viewNode = document.createElement(\"input\");\r\n\t\t\tviewNode.setAttribute('id', id);\r\n\t\t\tnode.appendChild(viewNode);\r\n\t\t\tdomStyle.set(viewNode, 'width', '95%');\r\n\t\t\t\r\n\t\t\tvar box = new TextBox({},viewNode);\r\n\t\t\tbox.attr('value', value);\r\n\t\t\treturn box;\r\n\t\t},\r\n\t\t\r\n\t\t_removeEditor: function(/*object*/event){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRemoves a Person from our list of editors.\r\n\t\t\t// description:\r\n\t\t\t//\t\tRemoves a Person from our list of editors by removing the block of editors that\r\n\t\t\t//\t\tmake up that Person.\r\n\t\t\t// event:\r\n\t\t\t//\t\tThe event generated when the remove button is pressed on the page.\r\n\t\t\tvar target = null;\r\n\t\t\r\n\t\t\tif(has(\"ie\")){\r\n\t\t\t\ttarget = event.srcElement;\r\n\t\t\t}else{\r\n\t\t\t\ttarget = event.target;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tvar id = target.id;\r\n\t\t\tid = id.substring(6);\r\n\t\t\tfor(var key in this._editors[id]){\r\n\t\t\t\tthis._editors[id][key].destroy();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar node = domUtil.byId(\"editorsRow\"+id);\r\n\t\t\tvar parent = node.parentNode;\r\n\t\t\tparent.removeChild(node);\r\n\t\t\t\r\n\t\t\tnode = domUtil.byId(\"removeRow\"+id);\r\n\t\t\tparent = node.parentNode;\r\n\t\t\tparent.removeChild(node);\r\n\r\n\t\t\tthis._numRows--;\r\n\t\t\tif(this._numRows === 1 && parent.firstChild.firstChild.firstChild.tagName.toLowerCase() === \"hr\"){\r\n\t\t\t\tnode = parent.firstChild.firstChild;\r\n\t\t\t\tnode.removeChild(node.firstChild);\r\n\t\t\t}\r\n\t\t\tthis._editors[id] = null;\r\n\t\t},\r\n\t\t\r\n\t\t_add: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdds a new block of blank editors to represent a Person.\r\n\t\t\tthis._createEditors(null, null, null, this._index);\r\n\t\t\tthis._index++;\r\n\t\t\tthis._numRows++;\r\n\t\t},\r\n\t\t\r\n\t\tgetValues: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGets the values of this editor in an array.\r\n\t\t\t// description:\r\n\t\t\t//\t\tGets the values of this editor in an array, with each Person as an object within the array.\r\n\t\t\t// returns:\r\n\t\t\t//\t\tAn array of anonymous objects representing dojox.atom.io.model.Persons.\r\n\t\t\tvar values = [];\r\n\t\t\tfor(var i in this._editors){\r\n\t\t\t\tif(this._editors[i]){\r\n\t\t\t\t\tvalues.push({name: this._editors[i][0].attr('value'), email: this._editors[i][1].attr('value'), uri: this._editors[i][2].attr('value')});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn values;\r\n\t\t}\r\n});\r\n\r\nreturn FeedEntryEditor;\r\n});\r\n"]}