{"version":3,"sources":["atom/tests/io/module.js"],"names":["dojo","provide","require","doh","register","t","node","document","createElement","date","stamp","fromISOString","innerHTML","dateWithSpaces","dojox","atom","io","model","util","createDate","res","compare","escaped","escapeHtml","is","unescaped","unEscapeHtml","getNodename","toLowerCase","data","dom","createDocument","firstChild","n","forEach","name","removeChild","runTest","d","Deferred","Connection","getFeed","moduleUrl","toString","feed","i","title","value","setTitle","subtitle","rights","id","updated","addNamespace","name_spaces","test","authors","addAuthor","isArray","length","contributors","addContributor","links","removeLink","addLink","removeBasicLinks","categories","addCategory","c","getCategories","removeCategories","extensions","getExtensions","addExtension","removeExtensions","accept","f","e","getFirstEntry","entries","removeEntry","getEntry","Entry","Error","addEntry","push","setEntries","getSelfHref","createEntry","feedUrl","str","toISOString","callback","console","debug","errback","getEditHref","content","trim","indexOf","err","error","args","status","entry","getService","service","domNode","collection","getCollection","href","timeout","atomio","setEditHref","updateEntry","Content","url","deleteEntry","result"],"mappings":"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","file":"../../../../atom/tests/io/module.js","sourcesContent":["dojo.provide(\"dojox.atom.tests.io.module\");\r\ndojo.require(\"dojox.atom.io.model\");\r\ndojo.require(\"dojox.atom.io.Connection\");\r\ndojo.require(\"dojox.data.dom\");\r\ndojo.require(\"dojo.date.stamp\");\r\ndojo.require(\"dojo.date\");\r\n\r\ndoh.register(\"dojox.atom.tests.io.module\", [\r\n\t// Public utility functions\r\n\t// dojox.atom.io.model.util.createDate\r\n\tfunction checkCreateDate(t){\r\n\t\tvar node = document.createElement(\"div\");\r\n\t\tvar knownDate = \"2007-08-06T20:00:00-04:00\";\r\n\t\tvar date = dojo.date.stamp.fromISOString(knownDate);\r\n\r\n\t\t//Make sure this function handles creating dates right with spaces and such in the text.\r\n\t\tnode.innerHTML = \"  \" + knownDate + \"  \";\r\n\t\tvar dateWithSpaces = dojox.atom.io.model.util.createDate(node);\r\n\r\n\t\tvar res = dojo.date.compare(dateWithSpaces, date);\r\n\t\tt.t(res === 0);\r\n\t},\r\n\r\n\t// dojox.atom.io.model.util.escapeHtml\r\n\tfunction checkEscapeHTML(t){\r\n\t\tvar original = \"<html><head><title>This is a \\\"Test Title\\\"</title></head><body class=\\\"tundra\\\">Woo hoo, this is an awesome & exciting test case!</body></html>\";\r\n\t\tvar escaped = dojox.atom.io.model.util.escapeHtml(original);\r\n\t\tvar expected = \"&lt;html&gt;&lt;head&gt;&lt;title&gt;This is a &quot;Test Title&quot;&lt;/title&gt;&lt;/head&gt;&lt;body class=&quot;tundra&quot;&gt;Woo hoo, this is an awesome &amp; exciting test case!&lt;/body&gt;&lt;/html&gt;\";\r\n\t\tt.is(expected, escaped);\r\n\t},\r\n\t\r\n\t// dojox.atom.io.model.util.unEscapeHtml\r\n\tfunction checkUnEscapeHtml(t){\r\n\t\tvar original = \"&lt;html&gt;&lt;head&gt;&lt;title&gt;This is a &quot;Test Title&quot;&lt;/title&gt;&lt;/head&gt;&lt;body class=&quot;tundra&quot;&gt;Woo hoo, this is an awesome &amp; exciting test case!&lt;/body&gt;&lt;/html&gt;\";\r\n\t\tvar unescaped = dojox.atom.io.model.util.unEscapeHtml(original);\r\n\t\tvar expected = \"<html><head><title>This is a \\\"Test Title\\\"</title></head><body class=\\\"tundra\\\">Woo hoo, this is an awesome & exciting test case!</body></html>\";\r\n\t\tt.is(expected, unescaped);\r\n\t\tt.is(\"&lt;\", dojox.atom.io.model.util.unEscapeHtml(\"&amp;lt;\"));\r\n\t},\r\n\r\n\t// dojox.atom.io.model.util.getNodename\r\n\tfunction checkGetNodename(t){\r\n\t\tvar node = document.createElement(\"div\");\r\n\t\tt.is(\"div\", dojox.atom.io.model.util.getNodename(node).toLowerCase());\r\n\t\t\r\n\t\tnode = dojox.data.dom.createDocument(\"<root><first/><second/><third/></root>\").firstChild;\r\n\t\tt.is(\"root\", dojox.atom.io.model.util.getNodename(node));\r\n\t\tvar n = node.firstChild;\r\n\t\tdojo.forEach([\"first\", \"second\", \"third\"], function(name){\r\n\t\t\tt.is(name, dojox.atom.io.model.util.getNodename(n));\r\n\t\t\tnode.removeChild(n);\r\n\t\t\tn = node.firstChild;\r\n\t\t});\r\n\t},\r\n\r\n\t// Feed parsing, feed attributes (title, id, etc.) and functions, including all generic AtomItem methods\r\n\t// Incidently, also tests AtomIO.getFeed success, as well as all members of the Category, Content, Link,\r\n\t// and Person classes.\r\n\t{\r\n\t\tname: \"checkFeed\",\r\n\t\trunTest: function(t){\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tvar atomio = new dojox.atom.io.Connection();\r\n\t\t\tatomio.getFeed(dojo.moduleUrl('dojox.atom.tests.widget', 'samplefeed.xml').toString(), function(feed){\r\n\t\t\t\tvar i;\r\n\t\t\t\t// regular callback\r\n\t\t\t\t// Feed variables\r\n\t\t\t\tt.is('Example.com', feed.title.value);\r\n\t\t\t\tfeed.setTitle('Example.com Atom Feed', 'text');\r\n\t\t\t\tt.is('Example.com Atom Feed', feed.title.value);\r\n\t\t\t\tt.is('Example.com\\'s Sample Feed', feed.subtitle.value);\r\n\t\t\t\tt.is('Copyright Example.com', feed.rights);\r\n\t\t\t\tt.is('http://example.com/samplefeed.xml', feed.id);\r\n\t\t\t\tt.is(dojo.date.stamp.fromISOString('2007-08-07T20:00:00-05:00'), feed.updated);\r\n\r\n\t\t\t\t// AtomItem methods\r\n\t\t\t\tfeed.addNamespace('http://www.test.com');\r\n\t\t\t\tt.is({}, feed.name_spaces);\r\n\t\t\t\tfeed.addNamespace('', 'test');\r\n\t\t\t\tt.is({}, feed.name_spaces);\r\n\t\t\t\tfeed.addNamespace('http://www.test.com', 'test');\r\n\t\t\t\tt.is({'test': 'http://www.test.com'}, feed.name_spaces);\r\n\r\n\t\t\t\tt.is(null, feed.authors);\r\n\t\t\t\tfeed.addAuthor('John');\r\n\t\t\t\tfeed.addAuthor('Matt', 'matt@example.com');\r\n\t\t\t\tfeed.addAuthor('Joe', 'joe@example.com', 'http://joe.example.com');\r\n\t\t\t\tt.t(dojo.isArray(feed.authors));\r\n\t\t\t\tt.t(feed.authors.length === 3);\r\n\r\n\t\t\t\tt.is(null, feed.contributors);\r\n\t\t\t\tfeed.addContributor('Sam');\r\n\t\t\t\tfeed.addContributor('Dave', 'Dave@example.com');\r\n\t\t\t\tfeed.addContributor('Harry', 'harry@example.com', 'http://harry.example.com');\r\n\t\t\t\tt.t(dojo.isArray(feed.contributors));\r\n\t\t\t\tt.t(feed.contributors.length === 3);\r\n\r\n\t\t\t\tt.t(dojo.isArray(feed.links));\r\n\t\t\t\tt.t(feed.links.length === 2);\r\n\t\t\t\tfeed.removeLink('http://example.com/', 'alternate');\r\n\t\t\t\tt.t(feed.links.length === 1);\r\n\t\t\t\tfeed.addLink('http://www.example.com/', 'alternate', 'en', 'Example.com', 'text/html');\r\n\t\t\t\tt.t(feed.links.length === 2);\r\n\t\t\t\tfeed.addLink('http://test.example.com/', '', 'en', 'Example.com', 'text/html');\r\n\t\t\t\tt.t(feed.links.length === 3);\r\n\t\t\t\tfeed.removeBasicLinks();\r\n\t\t\t\tt.t(feed.links.length === 2);\r\n\r\n\t\t\t\tt.is(null, feed.categories);\r\n\t\t\t\tfeed.addCategory(\"scheme\", \"term\", \"label\");\r\n\t\t\t\tfeed.addCategory(\"scheme\", \"term2\", \"label2\");\r\n\t\t\t\tfeed.addCategory(\"scheme2\", \"term\", \"label\");\r\n\t\t\t\tt.t(dojo.isArray(feed.categories));\r\n\t\t\t\tt.t(feed.categories.length === 3);\r\n\t\t\t\tvar c = feed.getCategories(\"scheme\");\r\n\t\t\t\tt.t(c.length === 2);\r\n\t\t\t\tc = feed.getCategories(\"scheme2\");\r\n\t\t\t\tt.t(c.length === 1);\r\n\t\t\t\tfeed.removeCategories(\"scheme\", \"term2\");\r\n\t\t\t\tt.t(feed.categories.length === 2);\r\n\t\t\t\tfeed.removeCategories(\"scheme\", \"term\");\r\n\t\t\t\tt.t(feed.categories.length === 1);\r\n\t\t\t\tfeed.removeCategories(\"scheme2\", \"term\");\r\n\t\t\t\tt.t(feed.categories.length === 0);\r\n\r\n\t\t\t\tt.is(null, feed.extensions);\r\n\t\t\t\tt.is([], feed.getExtensions());\r\n\t\t\t\tfeed.addExtension('nameSpace', 'element', [], 'A Test Element', 'sns');\r\n\t\t\t\tfeed.addExtension('nameSpace', 'element2', [], 'Another Test Element', 'sns');\r\n\t\t\t\tfeed.addExtension('anotherNameSpace', 'element', [], 'A Test Element', 'asns');\r\n\t\t\t\tt.t(feed.extensions.length === 3);\r\n\t\t\t\tt.t(feed.getExtensions('nameSpace').length === 2);\r\n\t\t\t\tt.t(feed.getExtensions('nameSpace', 'element').length === 1);\r\n\t\t\t\tt.t(feed.getExtensions('anotherNameSpace', 'element').length === 1);\r\n\t\t\t\tt.t(feed.getExtensions('sns').length === 2);\r\n\t\t\t\tfeed.removeExtensions('anotherNameSpace', 'element');\r\n\t\t\t\tfeed.removeExtensions('sns', 'element2');\r\n\t\t\t\tt.t(feed.getExtensions('anotherNameSpace').length === 0);\r\n\t\t\t\tt.t(feed.getExtensions('sns').length === 1);\r\n\r\n\t\t\t\t// Feed methods\r\n\t\t\t\tt.t(feed.accept('title'));\r\n\t\t\t\tt.t(feed.accept('entry'));\r\n\t\t\t\tt.f(feed.accept('workspace'));\r\n\r\n\t\t\t\tvar e = feed.getFirstEntry();\r\n\t\t\t\tt.f(e === null);\r\n\t\t\t\tt.t(e.id === 'http://example.com/samplefeed.xml/entry/1');\r\n\t\t\t\tt.t(feed.entries.length === 6);\r\n\t\t\t\tfeed.removeEntry(e);\r\n\t\t\t\tt.t(feed.entries.length === 5);\r\n\t\t\t\tt.t(feed.getEntry('http://example.com/samplefeed.xml/entry/1') === null);\r\n\t\t\t\te = feed.getFirstEntry();\r\n\t\t\t\tt.t(e.id === 'http://example.com/samplefeed.xml/entry/2');\r\n\t\t\t\te = feed.getEntry('http://example.com/samplefeed.xml/entry/4');\r\n\t\t\t\tt.f(e === null);\r\n\t\t\t\tt.t(e.title.value === 'Test Entry #4');\r\n\t\t\t\te = new dojox.atom.io.model.Entry();\r\n\t\t\t\tt.e(Error, feed, 'addEntry', [e]);\r\n\t\t\t\tt.t(feed.entries.length === 5);\r\n\t\t\t\te.id = 'http://example.com/samplefeed.xml/newentry/1';\r\n\t\t\t\tfeed.addEntry(e);\r\n\t\t\t\tt.t(feed.entries.length === 6);\r\n\t\t\t\tvar entries = [];\r\n\t\t\t\tfor(i=2; i<5; i++){\r\n\t\t\t\t\te = new dojox.atom.io.model.Entry();\r\n\t\t\t\t\te.id = 'http://example.com/samplefeed.xml/newentry/'+i;\r\n\t\t\t\t\tentries.push(e);\r\n\t\t\t\t}\r\n\t\t\t\tfeed.setEntries(entries);\r\n\t\t\t\tt.t(feed.entries.length === 9);\r\n\t\t\t\t\r\n\t\t\t\te = feed.getSelfHref();\r\n\t\t\t\tt.t(e === 'http://www.example.com/samplefeed.xml');\r\n\t\t\t\te = feed.createEntry();\r\n\t\t\t\tt.t(e.feedUrl === 'http://www.example.com/samplefeed.xml');\r\n\t\t\t\t\r\n\r\n\t\t\t\tfor(i=2; i<7; i++){\r\n\t\t\t\t\te = feed.getEntry('http://example.com/samplefeed.xml/entry/'+i);\r\n\t\t\t\t\tfeed.removeEntry(e);\r\n\t\t\t\t}\r\n\t\t\t\tt.t(feed.entries.length === 4);\r\n\r\n\t\t\t\t//Make this test work in different timezones.\r\n\t\t\t\tvar isoString = dojo.date.stamp.toISOString(dojo.date.stamp.fromISOString('2007-08-07T20:00:00-05:00'));\r\n\t\t\t\tvar str = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n<feed xmlns=\\\"http://www.w3.org/2005/Atom\\\" xmlns:test=\\\"http://www.test.com\\\">\\n<id>http://example.com/samplefeed.xml</id>\\n<title  type=\\\"text\\\" >Example.com Atom Feed</title>\\n<rights>Copyright Example.com</rights>\\n\"\r\n\t\t\t\tstr +=\"<updated>\" + isoString + \"</updated>\\n<subtitle  type=\\\"text\\\" >Example.com's Sample Feed</subtitle>\\n<author>\\n\\t<name>John</name>\\n</author>\\n<author>\\n\\t<name>Matt</name>\\n\\t<email>matt@example.com</email>\\n</author>\\n<author>\\n\\t<name>Joe</name>\\n\\t<email>joe@example.com</email>\\n\\t<uri>http://joe.example.com</uri>\\n</author>\\n<contributor>\\n\\t<name>Sam</name>\\n</contributor>\\n<contributor>\\n\\t<name>Dave</name>\\n\\t<email>Dave@example.com</email>\\n</contributor>\\n<contributor>\\n\\t<name>Harry</name>\\n\\t<email>harry@example.com</email>\\n\\t<uri>http://harry.example.com</uri>\\n</contributor>\\n<sns:element xmlns='nameSpace'>A Test Element</sns:element>\\n<entry>\\n<id>http://example.com/samplefeed.xml/newentry/1</id>\\n</entry>\\n<entry>\\n<id>http://example.com/samplefeed.xml/newentry/2</id>\\n</entry>\\n<entry>\\n<id>http://example.com/samplefeed.xml/newentry/3</id>\\n</entry>\\n<entry>\\n<id>http://example.com/samplefeed.xml/newentry/4</id>\\n</entry>\\n</feed>\";\r\n\t\t\t\tt.t(feed.toString() == str);\r\n\r\n\t\t\t\td.callback(true);\r\n\t\t\t}, function(e){\r\n\t\t\t\t// error callback\r\n\t\t\t\tconsole.debug(e);\r\n\t\t\t\td.errback(\"Feed fetching failed\");\r\n\t\t\t});\r\n\t\t\treturn d;\r\n\t\t}\r\n\t},\r\n\r\n\t// Entry parsing, entry functions that are unique (not AtomItem)\r\n\t// Incidently, also tests success of AtomIO.getEntry\r\n\t{\r\n\t\tname: \"checkEntry\",\r\n\t\trunTest: function(t){\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tvar atomio = new dojox.atom.io.Connection();\r\n\t\t\tatomio.getFeed(dojo.moduleUrl('dojox.atom.tests.widget', 'samplefeedEdit.xml').toString(), function(feed){\r\n\t\t\t\tt.is('Example.com', feed.title.value);\r\n\t\t\t\tvar e = feed.createEntry();\r\n\t\t\t\tvar str = e.getEditHref();\r\n\t\t\t\tt.t(str === null);\r\n\r\n\t\t\t\te = feed.getFirstEntry();\r\n\t\t\t\tstr = e.getEditHref();\r\n\t\t\t\tt.t(str === null);\r\n\r\n\t\t\t\te = feed.getEntry('http://example.com/samplefeedEdit.xml/entry/10');\r\n\t\t\t\tstr = e.getEditHref();\r\n\t\t\t\tt.t(str === 'http://example.com/samplefeedEdit.xml/entry/edit/10');\r\n\r\n\t\t\t\td.callback(true);\r\n\t\t\t}, function(){\r\n\t\t\t\t// error callback\r\n\t\t\t\td.errback(\"Feed fetching failed\");\r\n\t\t\t});\r\n\t\t\treturn d;\r\n\t\t}\r\n\t},\r\n\r\n\t// Entry parsing, entry functions that are unique (not AtomItem)\r\n\t// Incidently, also tests success of AtomIO.getEntry\r\n\t{\r\n\t\tname: \"checkXmlEntry\",\r\n\t\trunTest: function(t){\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tvar atomio = new dojox.atom.io.Connection();\r\n\t\t\tatomio.getFeed(dojo.moduleUrl('dojox.atom.tests.io', 'sampleFeedXMLContent.xml'), function(feed){\r\n\t\t\t\ttry{\r\n\t\t\t\t\tt.is('Example.com', feed.title.value);\r\n\t\t\t\t\tvar e = feed.getFirstEntry();\r\n\t\t\t\t\tt.t(e.title.value == \"Test Entry #1\");\r\n\t\t\t\t\tvar c = e.content.value;\r\n\t\t\t\t\tc = dojo.trim(c);\r\n\t\t\t\t\tt.t(c.indexOf(\"<rootNode \") === 0);\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}catch(err){\r\n\t\t\t\t\td.errback(err);\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\t// error callback\r\n\t\t\t\td.errback(\"Feed fetching failed\");\r\n\t\t\t});\r\n\t\t\treturn d;\r\n\t\t}\r\n\t},\r\n\r\n\t{\r\n\t\tname: \"checkEntry_preventCache\",\r\n\t\trunTest: function(t){\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tvar atomio = new dojox.atom.io.Connection(false, true);\r\n\t\t\tatomio.getFeed(dojo.moduleUrl('dojox.atom.tests.widget', 'samplefeedEdit.xml').toString(), function(feed){\r\n\t\t\t\tt.is('Example.com', feed.title.value);\r\n\t\t\t\tvar e = feed.createEntry();\r\n\t\t\t\tvar str = e.getEditHref();\r\n\t\t\t\tt.t(str === null);\r\n\r\n\t\t\t\te = feed.getFirstEntry();\r\n\t\t\t\tstr = e.getEditHref();\r\n\t\t\t\tt.t(str === null);\r\n\r\n\t\t\t\te = feed.getEntry('http://example.com/samplefeedEdit.xml/entry/10');\r\n\t\t\t\tstr = e.getEditHref();\r\n\t\t\t\tt.t(str === 'http://example.com/samplefeedEdit.xml/entry/edit/10');\r\n\r\n\t\t\t\td.callback(true);\r\n\t\t\t}, function(){\r\n                                // error callback\r\n\t\t\td.errback(\"Feed fetching failed\");\r\n\t\t\t});\r\n\t\t\treturn d;\r\n\t\t}\r\n\t},\r\n\r\n\t// AtomIO tests\r\n\t{\r\n\t\tname: \"checkAtomIOGetFeedFail\",\r\n\t\trunTest: function(t){\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tvar atomio = new dojox.atom.io.Connection();\r\n\t\t\tatomio.getFeed(dojo.moduleUrl('dojox.atom.tests.widget', 'samplefee.xml').toString(), function(feed){\r\n\t\t\t\td.errback(\"Feed fetching succeeded when it should've failed\");\r\n\t\t\t}, function(error, args){\r\n\t\t\t\t// error callback\r\n\t\t\t\tt.t(error.name === 'Error');\r\n\t\t\t\tt.t(error.status === 404);\r\n\t\t\t\td.callback(true);\r\n\t\t\t});\r\n\t\t\treturn d;\r\n\t\t}\r\n\t},{\r\n\t\tname: \"checkAtomIOGetFeedSuccess\",\r\n\t\trunTest: function(t){\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tvar atomio = new dojox.atom.io.Connection();\r\n\t\t\tatomio.getFeed(dojo.moduleUrl('dojox.atom.tests.widget', 'samplefeed.xml').toString(), function(feed){\r\n\t\t\t\t// Feed Fetching succeeded\r\n\t\t\t\tt.t(feed.title.value === 'Example.com');\r\n\t\t\t\td.callback(true);\r\n\t\t\t}, function(error, args){\r\n\t\t\t\t// error callback\r\n\t\t\t\td.errback(\"Feed fetching failed\");\r\n\t\t\t});\r\n\t\t\treturn d;\r\n\t\t}\r\n\t},{\r\n\t\tname: \"checkAtomIOGetEntryFail\",\r\n\t\trunTest: function(t){\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tvar atomio = new dojox.atom.io.Connection();\r\n\t\t\tatomio.getEntry(dojo.moduleUrl('dojox.atom.tests.io', 'sampleEntr.xml').toString(), function(entry){\r\n\t\t\t\td.errback(\"Feed fetching succeeded when it should've failed\");\r\n\t\t\t}, function(error, args){\r\n\t\t\t\t// error callback\r\n\t\t\t\tt.t(error.name === 'Error');\r\n\t\t\t\tt.t(error.status === 404);\r\n\t\t\t\td.callback(true);\r\n\t\t\t});\r\n\t\t\treturn d;\r\n\t\t}\r\n\t},{\r\n\t\tname: \"checkAtomIOGetEntrySuccess\",\r\n\t\trunTest: function(t){\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tvar atomio = new dojox.atom.io.Connection();\r\n\t\t\tatomio.getEntry(dojo.moduleUrl('dojox.atom.tests.io', 'sampleEntry.xml').toString(), function(entry){\r\n\t\t\t\tt.t(entry.title.value === 'Test Entry #1');\r\n\t\t\t\tt.t(entry.id === 'http://example.com/sampleEntry.xml/entry/1');\r\n\t\t\t\td.callback(true);\r\n\t\t\t}, function(error, args){\r\n\t\t\t\t// error callback\r\n\t\t\t\td.errback(\"Feed fetching failed\");\r\n\t\t\t});\r\n\t\t\treturn d;\r\n\t\t}\r\n\t},{\r\n\t\tname: \"checkAtomIOGetEntryFeedSuccess\",\r\n\t\trunTest: function(t){\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tvar atomio = new dojox.atom.io.Connection();\r\n\t\t\tatomio.getEntry(dojo.moduleUrl('dojox.atom.tests.widget', 'samplefeed.xml').toString(), function(entry){\r\n\t\t\t\t// Using getEntry on a Feed URL yields the first Entry in the Feed.\r\n\t\t\t\tt.t(entry.title.value === 'Test Entry #1');\r\n\t\t\t\tt.t(entry.id === 'http://example.com/samplefeed.xml/entry/1');\r\n\t\t\t\td.callback(true);\r\n\t\t\t}, function(error, args){\r\n\t\t\t\t// error callback\r\n\t\t\t\td.errback(\"Feed fetching failed\");\r\n\t\t\t});\r\n\t\t\treturn d;\r\n\t\t}\r\n\t},{\r\n\t\tname: \"checkGetService\",\r\n\t\trunTest: function(t){\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tvar atomio = new dojox.atom.io.Connection();\r\n\t\t\tatomio.getService(dojo.moduleUrl('dojox.atom.tests.io', 'service.xml').toString(), function(service, domNode){\r\n\t\t\t\tvar collection = service.getCollection(\"http://example.com/feed\");\r\n\t\t\t\tt.t(collection[0].href === 'http://example.com/feed');\r\n\t\t\t\tt.t(collection[0].title === 'Test Collection');\r\n\t\t\t\td.callback(true);\r\n\t\t\t}, function(error, args){\r\n\t\t\t\t// error callback\r\n\t\t\t\td.errback(\"Service fetching failed\");\r\n\t\t\t});\r\n\t\t\treturn d;\r\n\t\t}\r\n\t},{\r\n\t\tname: \"checkAtomIOUpdateEntrySuccess\",\r\n\t\ttimeout: 5000,\r\n\t\trunTest: function(t){\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tvar atomio = new dojox.atom.io.Connection();\r\n\t\t\tatomio.getEntry(dojo.moduleUrl('dojox.atom.tests.widget', 'samplefeed.xml').toString(), function(entry){\r\n\t\t\t\t// Using getEntry on a Feed URL yields the first Entry in the Feed.\r\n\t\t\t\tt.t(entry.title.value === 'Test Entry #1');\r\n\t\t\t\tt.t(entry.id === 'http://example.com/samplefeed.xml/entry/1');\r\n\t\t\t\tentry.setEditHref(dojo.moduleUrl('dojox.atom.tests.io', 'app.php'));\r\n\t\t\t\tentry.setTitle('<h1>New Editable Title!</h1>', 'xhtml');\r\n\t\t\t\tatomio.updateEntry(entry, function(e, dom, args){\r\n\t\t\t\t\tt.t(e.title.value === '<h1>New Editable Title!</h1>');\r\n\t\t\t\t\tt.t(e.id === 'http://example.com/samplefeed.xml/entry/1');\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t}, function(error, args){\r\n\t\t\t\t\td.errback(\"Updating entry failed\");\r\n\t\t\t\t});\r\n\t\t\t}, function(error, args){\r\n\t\t\t\t// error callback\r\n\t\t\t\td.errback(\"Feed fetching failed\");\r\n\t\t\t});\r\n\t\t\treturn d;\r\n\t\t}\r\n\t},{\r\n\t\tname: \"checkAtomIOUpdateEntryFail\",\r\n\t\ttimeout: 5000,\r\n\t\trunTest: function(t){\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tvar atomio = new dojox.atom.io.Connection();\r\n\t\t\tatomio.getEntry(dojo.moduleUrl('dojox.atom.tests.widget', 'samplefeed.xml').toString(), function(entry){\r\n\t\t\t\t// Using getEntry on a Feed URL yields the first Entry in the Feed.\r\n\t\t\t\tt.t(entry.title.value === 'Test Entry #1');\r\n\t\t\t\tt.t(entry.id === 'http://example.com/samplefeed.xml/entry/1');\r\n\t\t\t\tentry.setEditHref(dojo.moduleUrl('dojox.atom.tests.io', 'appFail.php'));\r\n\t\t\t\tentry.setTitle('<h1>New Editable Title!</h1>', 'xhtml');\r\n\t\t\t\tatomio.updateEntry(entry, function(e, dom, args){\r\n\t\t\t\t\td.errback(\"Updating entry succeeded\");\r\n\t\t\t\t}, function(error, args){\r\n\t\t\t\t\td.callback(true);\r\n\t\t\t\t});\r\n\t\t\t}, function(error, args){\r\n\t\t\t\t// error callback\r\n\t\t\t\td.errback(\"Updating entry failed.\");\r\n\t\t\t});\r\n\t\t\treturn d;\r\n\t\t}\r\n\t},{\r\n\t\tname: \"checkAtomIOAddEntrySuccess\",\r\n\t\ttimeout: 5000,\r\n\t\trunTest: function(t){\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tvar entry = new dojox.atom.io.model.Entry();\r\n\t\t\tentry.setTitle('Test Editable Entry #1', 'text');\r\n\t\t\tentry.addAuthor('Test Person', 'test@example.com');\r\n\t\t\tentry.content = new dojox.atom.io.model.Content('content', 'This is the content of my test new entry!', null, 'text');\r\n\t\t\tvar atomio = new dojox.atom.io.Connection();\r\n\t\t\tatomio.addEntry(entry, dojo.moduleUrl('dojox.atom.tests.io', 'app.php').toString(), function(entry, url){\r\n\t\t\t\tt.t(entry.title.value === 'Test Editable Entry #1');\r\n\t\t\t\tt.t(url === 'http://example.com/samplefeed.xml/entry/10');\r\n\t\t\t\td.callback(true);\r\n\t\t\t}, function(error, args){\r\n\t\t\t\t// error callback\r\n\t\t\t\td.errback(\"Adding entry failed.\");\r\n\t\t\t});\r\n\t\t\treturn d;\r\n\t\t}\r\n\t},{\r\n\t\tname: \"checkAtomIOAddEntryFail\",\r\n\t\ttimeout: 5000,\r\n\t\trunTest: function(t){\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tvar entry = new dojox.atom.io.model.Entry();\r\n\t\t\t// Missing title, author\r\n\t\t\tentry.content = new dojox.atom.io.model.Content('content', 'This is the content of my test new entry!', null, 'text');\r\n\t\t\tvar atomio = new dojox.atom.io.Connection();\r\n\t\t\tatomio.addEntry(entry, dojo.moduleUrl('dojox.atom.tests.io', 'appFail.php').toString(), function(entry, url){\r\n\t\t\t\t// error callback\r\n\t\t\t\td.errback(\"Adding entry succeeded when it shouldn't!\");\r\n\t\t\t}, function(error, args){\r\n\t\t\t\td.callback(true);\r\n\t\t\t});\r\n\t\t\treturn d;\r\n\t\t}\r\n\t},{\r\n\t\tname: \"checkAtomIODeleteEntrySuccess\",\r\n\t\ttimeout: 5000,\r\n\t\trunTest: function(t){\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tvar atomio = new dojox.atom.io.Connection();\r\n\t\t\tatomio.getEntry(dojo.moduleUrl('dojox.atom.tests.widget', 'samplefeed.xml').toString(), function(entry){\r\n\t\t\t\t// Using getEntry on a Feed URL yields the first Entry in the Feed.\r\n\t\t\t\tt.t(entry.title.value === 'Test Entry #1');\r\n\t\t\t\tt.t(entry.id === 'http://example.com/samplefeed.xml/entry/1');\r\n\t\t\t\tentry.setEditHref(dojo.moduleUrl('dojox.atom.tests.io', 'app.php'));\r\n\t\t\t\tatomio.deleteEntry(entry, function(result){\r\n\t\t\t\t\tif (result) {\r\n\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\td.errback(\"Deleting entry failed\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}, function(error, args){\r\n\t\t\t\t\td.errback(\"Deleting entry failed\");\r\n\t\t\t\t});\r\n\t\t\t}, function(error, args){\r\n\t\t\t\t// error callback\r\n\t\t\t\td.errback(\"Retrieving the entry failed.\");\r\n\t\t\t});\r\n\t\t\treturn d;\r\n\t\t}\r\n\t},{\r\n\t\tname: \"checkAtomIODeleteEntryFail\",\r\n\t\ttimeout: 5000,\r\n\t\trunTest: function(t){\r\n\t\t\tvar d = new doh.Deferred();\r\n\t\t\tvar atomio = new dojox.atom.io.Connection();\r\n\t\t\tatomio.getEntry(dojo.moduleUrl('dojox.atom.tests.widget', 'samplefeed.xml').toString(), function(entry){\r\n\t\t\t\t// Using getEntry on a Feed URL yields the first Entry in the Feed.\r\n\t\t\t\tt.t(entry.title.value === 'Test Entry #1');\r\n\t\t\t\tt.t(entry.id === 'http://example.com/samplefeed.xml/entry/1');\r\n\t\t\t\tentry.setEditHref(dojo.moduleUrl('dojox.atom.tests.io', 'appFail.php'));\r\n\t\t\t\tatomio.deleteEntry(entry, function(result){\r\n\t\t\t\t\tif (result) {\r\n\t\t\t\t\t\td.errback(\"Deleting entry succeeded but it shouldn't have\");\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\td.errback(\"The callback was called but it shouldn't have\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}, function(error, args){\r\n\t\t\t\t\t\td.callback(true);\r\n\t\t\t\t});\r\n\t\t\t}, function(error, args){\r\n\t\t\t\t// error callback\r\n\t\t\t\td.errback(\"Retrieving the entry failed.\");\r\n\t\t\t});\r\n\t\t\treturn d;\r\n\t\t}\r\n\t}\r\n]);\r\n"]}