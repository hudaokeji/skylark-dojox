{"version":3,"sources":["form/MonthTextBox.js"],"names":["define","kernel","lang","MonthlyCalendar","TextBox","DateTextBox","declare","experimental","popupClass","selector","postMixInProperties","this","inherited","arguments","constraints","datePattern","format","value","getMonth","Number","parse","serialize","String","validator","num","isInt","test","_setValueAttr","priorityChange","formattedValue","prototype","call","openDropDown","dropDown","onValueSelected","hitch","focus","setTimeout"],"mappings":";;;;;;;AAAAA,QACC,oBACA,kBACA,+BACA,qBACA,gBACA,sBACG,SAASC,EAAQC,EAAMC,EAAiBC,EAASC,EAAaC,GAEhE,OADAL,EAAOM,aAAa,0BACbD,EAAS,0BAA2BD,GAO1CG,WAAYL,EAEZM,SAAU,OAEVC,oBAAqB,WACpBC,KAAKC,UAAUC,WACfF,KAAKG,YAAYC,YAAc,MAGhCC,OAAQ,SAASC,GAChB,OAAIA,GAAmB,IAAVA,EAGVA,EAAMC,SACDD,EAAMC,WAAa,EAEpBC,OAAOF,GAAS,EALf,GAQTG,MAAO,SAASH,EAAOH,GACtB,OAAOK,OAAOF,GAAS,GAGxBI,UAAW,SAASJ,EAAOH,GAC1B,OAAOQ,OAAOL,IAGfM,UAAW,SAASN,GACnB,IAAIO,EAAML,OAAOF,GACbQ,EAAQ,cAAcC,KAAKJ,OAAOL,IACtC,MAAgB,IAATA,GAAwB,MAATA,GAAkBQ,GAASD,GAAO,GAAKA,GAAO,IAGrEG,cAAe,SAASV,EAAOW,EAAgBC,GAC3CZ,GACCA,EAAMC,WACRD,EAAQA,EAAMC,YAGhBd,EAAQ0B,UAAUH,cAAcI,KAAKpB,KAAMM,EAAOW,EAAgBC,IAGnEG,aAAc,WACbrB,KAAKC,UAAUC,WAEfF,KAAKsB,SAASC,gBAAkBhC,EAAKiC,MAAMxB,KAAM,SAASM,GACzDN,KAAKyB,QACLC,WAAWnC,EAAKiC,MAAMxB,KAAM,iBAAkB,GAC9CP,EAAQ0B,UAAUH,cAAcI,KAAKpB,KAAMM,GAAO,EAAMA","file":"../../form/MonthTextBox.js","sourcesContent":["define([\r\n\t\"dojo/_base/kernel\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojox/widget/MonthlyCalendar\",\r\n\t\"dijit/form/TextBox\",\r\n\t\"./DateTextBox\",\r\n\t\"dojo/_base/declare\"\r\n\t], function(kernel, lang, MonthlyCalendar, TextBox, DateTextBox, declare){\r\n\t\tkernel.experimental(\"dojox/form/DateTextBox\");\r\n\t\treturn declare( \"dojox.form.MonthTextBox\", DateTextBox,\r\n\t\t{\r\n\t\t\t// summary:\r\n\t\t\t//\t\tA validating, serializable, range-bound date text box with a popup calendar that contains only months\r\n\r\n\t\t\t// popupClass: String\r\n\t\t\t//\t\tThe popup widget to use. In this case, a calendar with just a Month view.\r\n\t\t\tpopupClass: MonthlyCalendar,\r\n\r\n\t\t\tselector: \"date\",\r\n\r\n\t\t\tpostMixInProperties: function(){\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t\tthis.constraints.datePattern = \"MM\";\r\n\t\t\t},\r\n\r\n\t\t\tformat: function(value){\r\n\t\t\t\tif(!value && value !== 0){\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t\tif(value.getMonth){\r\n\t\t\t\t\treturn value.getMonth() + 1;\r\n\t\t\t\t}\r\n\t\t\t\treturn Number(value) + 1;\r\n\t\t\t},\r\n\r\n\t\t\tparse: function(value, constraints){\r\n\t\t\t\treturn Number(value) - 1;\r\n\t\t\t},\r\n\r\n\t\t\tserialize: function(value, constraints){\r\n\t\t\t\treturn String(value);\r\n\t\t\t},\r\n\r\n\t\t\tvalidator: function(value){\r\n\t\t\t\tvar num = Number(value);\r\n\t\t\t\tvar isInt = /(^-?\\d\\d*$)/.test(String(value));\r\n\t\t\t\treturn value == \"\" || value == null || (isInt && num >= 1 && num <= 12);\r\n\t\t\t},\r\n\r\n\t\t\t_setValueAttr: function(value, priorityChange, formattedValue){\r\n\t\t\t\tif(value){\r\n\t\t\t\t\tif(value.getMonth){\r\n\t\t\t\t\t\tvalue = value.getMonth();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tTextBox.prototype._setValueAttr.call(this, value, priorityChange, formattedValue);\r\n\t\t\t},\r\n\r\n\t\t\topenDropDown: function(){\r\n\t\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t\tthis.dropDown.onValueSelected = lang.hitch(this, function(value){\r\n\t\t\t\t\tthis.focus(); // focus the textbox before the popup closes to avoid reopening the popup\r\n\t\t\t\t\tsetTimeout(lang.hitch(this, \"closeDropDown\"), 1); // allow focus time to take\r\n\t\t\t\t\tTextBox.prototype._setValueAttr.call(this, value, true, value);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n});"]}