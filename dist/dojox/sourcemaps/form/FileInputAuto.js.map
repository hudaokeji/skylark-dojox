{"version":3,"sources":["form/FileInputAuto.js"],"names":["define","declare","lang","fx","win","domStyle","has","template","FileInput","ioIframe","FileInputAuto","url","blurDelay","duration","uploadMessage","triggerEvent","_sent","templateString","onBeforeSend","startup","this","_blurListener","connect","fileInput","_focusListener","inherited","arguments","_onFocus","_blurTimer","clearTimeout","_onBlur","setTimeout","hitch","setMessage","title","overlay","removeChild","firstChild","appendChild","document","createTextNode","_sendFile","e","_newForm","_sending","value","set","fakeNodeHolder","opacity","display","fadeIn","node","play","createElement","encoding","setAttribute","body","send","form","handleAs","handle","content","_handleSend","data","ioArgs","border","background","style","backgroundImage","disconnect","args","onComplete","reset","widgetRef","_off","get","inputNode","_fixPosition"],"mappings":"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","file":"../../form/FileInputAuto.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/fx\",\r\n\t\"dojo/_base/window\",\r\n\t\"dojo/dom-style\",\r\n\t\"dojo/_base/sniff\",\r\n\t\"dojo/text!./resources/FileInputAuto.html\",\r\n\t\"dojox/form/FileInput\",\r\n\t\"dojo/io/iframe\"\r\n], \r\nfunction(declare, lang, fx, win, domStyle, has, template, FileInput, ioIframe){\r\n\r\nvar FileInputAuto = declare(\"dojox.form.FileInputAuto\", FileInput, \r\n\t{\r\n\t// summary:\r\n\t//\t\tAn extension on FileInput providing background upload progress\r\n\t//\r\n\t// description:\r\n\t//\t\tAn extended version of FileInput - when the user focuses away from the input\r\n\t//\t\tthe selected file is posted via ioIframe to the url. example implementation\r\n\t//\t\tcomes with PHP solution for handling upload, and returning required data.\r\n\t//\r\n\t//\t\tnotes: the return data from the io.iframe is used to populate the input element with\r\n\t//\t\tdata regarding the results. it will be a JSON object, like:\r\n\t//\r\n\t//\t|\tresults = { size: \"1024\", filename: \"file.txt\" }\r\n\t//\r\n\t//\t\tall the parameters allowed to FileInput apply\r\n\r\n\t// url: String\r\n\t//\t\tthe URL where our background FileUpload will be sent\r\n\turl: \"\",\r\n\r\n\t// blurDelay: Integer\r\n\t//\t\ttime in ms before an un-focused widget will wait before uploading the file to the url=\"\" specified\r\n\t//\t\tdefault: 2 seconds\r\n\tblurDelay: 2000,\r\n\r\n\t// duration: Integer\r\n\t//\t\tThe time in ms to use as the generic timing mechanism for the animations\r\n\t//\t\tset to 1 or 0 for \"immediate response\"\r\n\tduration: 500,\r\n\r\n\t// uploadMessage: String\r\n\t//\t\tFIXME: i18n somehow?\r\n\tuploadMessage: \"Uploading ...\",\r\n\t\r\n\t// triggerEvent: String\r\n\t//\t\tEvent which triggers the upload. Defaults to onblur, sending the file selected\r\n\t//\t\t'blurDelay' milliseconds after losing focus. Set to \"onchange\" with a low blurDelay\r\n\t//\t\tto send files immediately after uploading.\r\n\ttriggerEvent: \"onblur\",\r\n\t\r\n\t_sent: false,\r\n\t\r\n\t// small template changes, new attachpoint: overlay\r\n\ttemplateString: template,\r\n\t\r\n\tonBeforeSend: function(){\r\n\t\t// summary:\r\n\t\t//\t\tCalled immediately before a FileInput sends it's file via io.iframe.send.\r\n\t\t//\t\tThe return of this function is passed as the `content` member in the io.iframe IOArgs\r\n\t\t//\t\tobject.\r\n\t\treturn {};\r\n\t},\r\n\t\r\n\tstartup: function(){\r\n\t\t// summary:\r\n\t\t//\t\tadd our extra blur listeners\r\n\t\tthis._blurListener = this.connect(this.fileInput, this.triggerEvent, \"_onBlur\");\r\n\t\tthis._focusListener = this.connect(this.fileInput, \"onfocus\", \"_onFocus\");\r\n\t\tthis.inherited(arguments);\r\n\t},\r\n\r\n\t_onFocus: function(){\r\n\t\t// summary:\r\n\t\t//\t\tclear the upload timer\r\n\t\tif(this._blurTimer){ clearTimeout(this._blurTimer); }\r\n\t},\r\n\r\n\t_onBlur: function(){\r\n\t\t// summary:\r\n\t\t//\t\tstart the upload timer\r\n\t\tif(this._blurTimer){ clearTimeout(this._blurTimer); }\r\n\t\tif(!this._sent){\r\n\t\t\tthis._blurTimer = setTimeout(lang.hitch(this,\"_sendFile\"),this.blurDelay);\r\n\t\t}\r\n\t},\r\n\r\n\tsetMessage: function(/*String*/ title){\r\n\t\t// summary:\r\n\t\t//\t\tset the text of the progressbar\r\n\t\t\r\n\t\t// innerHTML throws errors in IE! so use DOM manipulation instead\r\n\t\t//this.overlay.innerHTML = title;\r\n\t\tthis.overlay.removeChild(this.overlay.firstChild);\r\n\t\tthis.overlay.appendChild(document.createTextNode(title));\r\n\t},\r\n\t\r\n\t_sendFile: function(/*Event*/ e){\r\n\t\t// summary:\r\n\t\t//\t\ttriggers the chain of events needed to upload a file in the background.\r\n\t\tif(this._sent || this._sending || !this.fileInput.value){ return; }\r\n\r\n\t\tthis._sending = true;\r\n\r\n\t\tdomStyle.set(this.fakeNodeHolder,\"display\",\"none\");\r\n\t\tdomStyle.set(this.overlay,{\r\n\t\t\topacity:0,\r\n\t\t\tdisplay:\"block\"\r\n\t\t});\r\n\r\n\t\tthis.setMessage(this.uploadMessage);\r\n\r\n\t\tfx.fadeIn({ node: this.overlay, duration:this.duration }).play();\r\n\r\n\t\tvar _newForm;\r\n\t\tif(has('ie') < 9 || (has('ie') && has('quirks'))){\r\n\t\t\t// just to reiterate, IE is a steaming pile of code.\r\n\t\t\t_newForm = document.createElement('<form enctype=\"multipart/form-data\" method=\"post\">');\r\n\t\t\t_newForm.encoding = \"multipart/form-data\";\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\t// this is how all other sane browsers do it\r\n\t\t\t_newForm = document.createElement('form');\r\n\t\t\t_newForm.setAttribute(\"enctype\",\"multipart/form-data\");\r\n                        _newForm.setAttribute(\"method\",\"post\");\r\n\t\t}\r\n\t\t_newForm.appendChild(this.fileInput);\r\n\t\twin.body().appendChild(_newForm);\r\n\t\r\n\t\tioIframe.send({\r\n\t\t\turl: this.url,\r\n\t\t\tform: _newForm,\r\n\t\t\thandleAs: \"json\",\r\n\t\t\thandle: lang.hitch(this,\"_handleSend\"),\r\n\t\t\tcontent: this.onBeforeSend()\r\n\t\t});\r\n\t},\r\n\t\r\n\t_handleSend: function(data,ioArgs){\r\n\t\t// summary:\r\n\t\t//\t\tThe callback to toggle the progressbar, and fire the user-defined callback\r\n\r\n\t\t// innerHTML throws errors in IE! so use DOM manipulation instead\r\n\t\tthis.overlay.removeChild(this.overlay.firstChild);\r\n\t\t\r\n\t\tthis._sent = true;\r\n\t\tthis._sending = false;\r\n\t\tdomStyle.set(this.overlay,{\r\n\t\t\topacity:0,\r\n\t\t\tborder:\"none\",\r\n\t\t\tbackground:\"none\"\r\n\t\t});\r\n\r\n\t\tthis.overlay.style.backgroundImage = \"none\";\r\n\t\tthis.fileInput.style.display = \"none\";\r\n\t\tthis.fakeNodeHolder.style.display = \"none\";\r\n\t\tfx.fadeIn({ node:this.overlay, duration:this.duration }).play(250);\r\n\r\n\t\tthis.disconnect(this._blurListener);\r\n\t\tthis.disconnect(this._focusListener);\r\n\r\n\t\t//remove the form used to send the request\r\n\t\twin.body().removeChild(ioArgs.args.form);\r\n\t\tthis.fileInput = null;\r\n\r\n\t\tthis.onComplete(data,ioArgs,this);\r\n\t},\r\n\r\n\treset: function(e){\r\n\t\t// summary:\r\n\t\t//\t\taccommodate our extra focusListeners\r\n\t\tif(this._blurTimer){ clearTimeout(this._blurTimer); }\r\n\r\n\t\tthis.disconnect(this._blurListener);\r\n\t\tthis.disconnect(this._focusListener);\r\n\r\n\t\tthis.overlay.style.display = \"none\";\r\n\t\tthis.fakeNodeHolder.style.display = \"\";\r\n\t\tthis.inherited(arguments);\r\n\t\tthis._sent = false;\r\n\t\tthis._sending = false;\r\n\t\tthis._blurListener = this.connect(this.fileInput, this.triggerEvent,\"_onBlur\");\r\n\t\tthis._focusListener = this.connect(this.fileInput,\"onfocus\",\"_onFocus\");\r\n\t},\r\n\r\n\tonComplete: function(data,ioArgs,widgetRef){\r\n\t\t// summary:\r\n\t\t//\t\tstub function fired when an upload has finished.\r\n\t\t// data:\r\n\t\t//\t\tthe raw data found in the first [TEXTAREA] tag of the post url\r\n\t\t// ioArgs:\r\n\t\t//\t\tthe Deferred data being passed from the handle: callback\r\n\t\t// widgetRef:\r\n\t\t//\t\tthis widget pointer, so you can set this.overlay to a completed/error message easily\r\n\t}\r\n});\r\n\r\ndeclare(\"dojox.form.FileInputBlind\", FileInputAuto, {\r\n\t// summary:\r\n\t//\t\tAn extended version of dojox.form.FileInputAuto\r\n\t//\t\tthat does not display an input node, but rather only a button\r\n\t//\t\tand otherwise behaves just like FileInputAuto\r\n\t\r\n\tstartup: function(){\r\n\t\t// summary:\r\n\t\t//\t\thide our fileInput input field\r\n\t\tthis.inherited(arguments);\r\n\t\tthis._off = domStyle.get(this.inputNode,\"width\");\r\n\t\tthis.inputNode.style.display = \"none\";\r\n\t\tthis._fixPosition();\r\n\t},\r\n\t\r\n\t_fixPosition: function(){\r\n\t\t// summary:\r\n\t\t//\t\tin this case, set the button under where the visible button is\r\n\t\tif(has('ie')){\r\n\t\t\tdomStyle.set(this.fileInput,\"width\",\"1px\");\r\n\t\t}else{\r\n\t\t\tdomStyle.set(this.fileInput,\"left\",\"-\"+(this._off)+\"px\");\r\n\t\t}\r\n\t},\r\n\r\n\treset: function(e){\r\n\t\t// summary:\r\n\t\t//\t\tonclick, we need to reposition our newly created input type=\"file\"\r\n\t\tthis.inherited(arguments);\r\n\t\tthis._fixPosition();\r\n\t}\r\n});\r\n\r\nreturn FileInputAuto;\r\n});\r\n"]}