{"version":3,"sources":["form/ListInput.js"],"names":["define","kernel","lang","array","jsonUtil","fx","win","connect","domClass","domStyle","domConstruct","domGeometry","keys","Widget","TemplatedMixin","FormValueWidget","ValidationTextBox","InlineEditBox","i18nCommon","declare","experimental","ListInput","constructor","this","_items","isArray","delimiter","r","join","regExp","inputClass","inputHandler","inputProperties","minWidth","submitOnlyValidValue","useOnBlur","readOnlyInput","maxItems","showCloseButtonWhenValid","showCloseButtonWhenInvalid","constraints","baseClass","type","value","templateString","_setNameAttr","useAnim","duration","easingIn","easingOut","readOnlyItem","useArrowForEdit","_lastAddedItem","_currentItem","_input","_count","postCreate","inherited","arguments","_createInputBox","_setReadOnlyInputAttr","_started","_setReadOnlyItemAttr","i","set","toggle","_inputNode","console","warn","isString","split","fromJson","input","getObject","regExpGen","startup","appendChild","domNode","forEach","handler","trim","compare","val1","val2","add","values","_lastValueReported","_getValues","RegExp","_ListInputInputItem","index","length","_testItem","onClose","hitch","onChange","onEdit","onKeyDown","opacity","display","_placeItem","fadeIn","node","easing","play","_onChangeActive","intermediateChanges","_updateValues","_setReadOnlyWhenMaxItemsReached","_setSelectNode","_selectNode","options","get","item","Option","place","_getCursorPos","selectionStart","focus","e","range","createTextRange","moveToBookmark","doc","selection","createRange","getBookmark","moveEnd","text","_onItemClose","disabled","fadeOut","onEnd","_destroyItem","_onItemKeyDown","keyCode","LEFT_ARROW","target","_editBefore","RIGHT_ARROW","_editAfter","_getPreviousItem","edit","_getNextItem","_focusInput","_onItemChange","_onItemEdit","remove","re","match","_getValueAttr","_setValueAttr","newValue","_destroyAllItems","_parseValue","_setDisabledAttr","_onHandler","parsedValue","_onClick","_inputOnKeyDown","val","BACKSPACE","ENTER","focusNode","_inputOnBlur","_getMatchedValueAttr","_matchValidator","_getMismatchedValueAttr","_mismatchValidator","validator","_nullValidator","itemValue","push","_getLastItemAttr","_getSomeItem","position","lastItem","stop","updateValue","destroy","closeButtonNode","_editBox","_handleKeyDown","attributeMap","postMixInProperties","_nlsResources","mixin","create","class","title","itemClose","onclick","onmouseenter","onmouseleave","innerHTML","_createInlineEditBox","editor","editorParams","labelNode","_onCloseEdit","disconnect","_onEdit","editWidget","_onCloseEnter","_onCloseLeave","onClick","_sizer","style","left","top","body","w","getContentBox","setContentSize"],"mappings":"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","file":"../../form/ListInput.js","sourcesContent":["define([\r\n\t\"dojo/_base/kernel\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/json\",\r\n\t\"dojo/_base/fx\",\r\n\t\"dojo/_base/window\",\r\n\t\"dojo/_base/connect\",\r\n\t\"dojo/dom-class\",\r\n\t\"dojo/dom-style\",\r\n\t\"dojo/dom-construct\",\r\n\t\"dojo/dom-geometry\",\r\n\t\"dojo/keys\",\r\n\t\"dijit/_Widget\",\r\n\t\"dijit/_TemplatedMixin\",\r\n\t\"dijit/form/_FormValueWidget\",\r\n\t\"dijit/form/ValidationTextBox\",\r\n\t\"dijit/InlineEditBox\",\r\n\t\"dojo/i18n!dijit/nls/common\",\r\n\t\"dojo/_base/declare\"\r\n], function(kernel, lang, array, jsonUtil, fx, win, connect, domClass, domStyle, domConstruct, domGeometry, keys, Widget, TemplatedMixin, FormValueWidget, ValidationTextBox, InlineEditBox, i18nCommon, declare){\r\nkernel.experimental(\"dojox.form.ListInput\");\r\n\r\n/*=====\r\nvar __Constraints = {\r\n\t // locale: String\r\n\t //\t\tlocale used for validation, picks up value from this widget's lang attribute\r\n\t // _flags_: anything\r\n\t //\t\tvarious flags passed to pattern function\r\n};\r\n=====*/\r\n\r\nvar ListInput = declare(\"dojox.form.ListInput\", [FormValueWidget],\r\n\t{\r\n\t// summary:\r\n\t//\t\tAn automatic list maker\r\n\t// description:\r\n\t//\t\tyou can add value to list with add method.\r\n\t//\t\tyou can only remove by clicking close button\r\n\r\n\tconstructor: function(){\r\n\t\tthis._items = [];\r\n\r\n\r\n\t\tif(!lang.isArray(this.delimiter)){\r\n\t\t\tthis.delimiter=[this.delimiter];\r\n\t\t}\r\n\t\tvar r=\"(\"+this.delimiter.join(\"|\")+\")?\";\r\n\t\tthis.regExp=\"^\"+this.regExp+r+\"$\";\r\n\t},\r\n\r\n\t// inputClass: String\r\n\t//\t\tClass which will be used to create the input box. You can implements yours.\r\n\t//\t\tIt must be a widget, focusNode or domNode must have \"onkeydown\" event\r\n\t//\t\tIt must have .attr(\"value\") to get value\r\n\t//\t\tIt also must implement an (or more) handler for the \"onChange\" method\r\n\tinputClass: \"dojox.form._ListInputInputBox\",\r\n\r\n\t// inputHandler: String|Array\r\n\t//\t\tThe widget will connect on all handler to check input value\r\n\t//\t\tYou can use comma separated list\r\n\tinputHandler: \"onChange\",\r\n\r\n\t// inputProperties: String|Object\r\n\t//\t\tProperties used to create input box\r\n\t//\t\tIf String, it must be a valid JSON\r\n\tinputProperties: {\r\n\t\tminWidth:50\r\n\t},\r\n\r\n\t// submitOnlyValidValue: Boolean\r\n\t//\t\tIf true, only valid value will be submitted with form\r\n\tsubmitOnlyValidValue:true,\r\n\r\n\t// useOnBlur: Boolean\r\n\t//\t\tIf true, onBlur event do a validate (like pressing ENTER)\r\n\tuseOnBlur:true,\r\n\r\n\t// readOnlyInput: Boolean\r\n\t//\t\tif false, the list will be editable\r\n\t//\t\tCan only be set when instantiate\r\n\treadOnlyInput: false,\r\n\r\n\t// maxItems: Int\r\n\t//\t\tSpecify max item the list can have\r\n\t//\t\tnull = infinity\r\n\tmaxItems: null,\r\n\r\n\t// showCloseButtonWhenValid: Boolean\r\n\t//\t\tif true, a close button will be added on valid item\r\n\tshowCloseButtonWhenValid: true,\r\n\r\n\t// showCloseButtonWhenInvalid: Boolean\r\n\t//\t\tif true, a close button will be added on invalid item\r\n\tshowCloseButtonWhenInvalid: true,\r\n\r\n\t// regExp: [extension protected] String\r\n\t//\t\tregular expression string used to validate the input\r\n\t//\t\tDo not specify both regExp and regExpGen\r\n\tregExp: \".*\", //\"[a-zA-Z.-_]+@[a-zA-Z.-_]+.[a-zA-Z]+\",\r\n\r\n\t// delimiter: String|Array\r\n\t//\t\tdelimiter for the string. Every match will be splitted.\r\n\t//\t\tThe string can contain only one delimiter.\r\n\tdelimiter: \",\",\r\n\r\n\t// constraints: __Constraints\r\n\t//\t\tuser-defined object needed to pass parameters to the validator functions\r\n\tconstraints: {},\r\n\r\n\tbaseClass:\"dojoxListInput\",\r\n\r\n\ttype: \"select\",\r\n\r\n\tvalue: \"\",\r\n\r\n\ttemplateString: \"<div dojoAttachPoint=\\\"focusNode\\\" class=\\\"dijit dijitReset dijitLeft dojoxListInput\\\"><select dojoAttachpoint=\\\"_selectNode\\\" multiple=\\\"multiple\\\" class=\\\"dijitHidden\\\" ${!nameAttrSetting}></select><ul dojoAttachPoint=\\\"_listInput\\\"><li dojoAttachEvent=\\\"onclick: _onClick\\\" class=\\\"dijitInputField dojoxListInputNode dijitHidden\\\" dojoAttachPoint=\\\"_inputNode\\\"></li></ul></div>\",\r\n\r\n\t_setNameAttr: \"_selectNode\",\r\n\r\n\t// useAnim: Boolean\r\n\t//\t\tIf true, then item will use an animation to show hide itself\r\n\tuseAnim: true,\r\n\r\n\t// duration: Integer\r\n\t//\t\tAnimation duration\r\n\tduration: 500,\r\n\r\n\t// easingIn: function\r\n\t//\t\tfunction used to easing on fadeIn end\r\n\teasingIn: null,\r\n\r\n\t// easingOut: function\r\n\t//\t\tfunction used to easing on fadeOut end\r\n\teasingOut: null,\r\n\r\n\t// readOnlyItem: Boolean\r\n\t//\t\tIf true, items can be edited\r\n\t//\t\tCan only be set when instantiate\r\n\treadOnlyItem: false,\r\n\r\n\t// useArrowForEdit: Boolean\r\n\t//\t\tIf true, arraow left and right can be used for editing\r\n\t//\t\tCan only be set when instantiate\r\n\tuseArrowForEdit: true,\r\n\r\n\t// _items: Array\r\n\t//\t\tArray of widget.\r\n\t//\t\tContain all reference to _ListInputInputItem\r\n\t_items: null,\r\n\r\n\t// _lastAddedItem: Widget\r\n\t//\t\tContain a reference to the last created item\r\n\t_lastAddedItem: null,\r\n\r\n\t// _currentItem: Widget\r\n\t//\t\tWidget currently in edition\r\n\t_currentItem: null,\r\n\r\n\t// _input: Widget\r\n\t//\t\tWidget use for input box\r\n\t_input: null,\r\n\r\n\t// _count: Int\r\n\t//\t\tCount items\r\n\t_count: 0,\r\n\r\n\tpostCreate: function(){\r\n\t\t// summary:\r\n\t\t//\t\tIf closeButton is used, add a class\r\n\t\tthis.inherited(arguments);\r\n\t\tthis._createInputBox();\r\n\t},\r\n\r\n\t_setReadOnlyInputAttr: function(/*Boolean*/ value){\r\n\t\t// summary:\r\n\t\t//\t\tChange status and if needed, create the inputbox\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tif(!this._started){ return this._createInputBox(); }\r\n\t\tthis.readOnlyInput = value;\r\n\t\tthis._createInputBox();\r\n\t},\r\n\r\n\t_setReadOnlyItemAttr: function(/*Boolean*/ value){\r\n\t\t// summary:\r\n\t\t//\t\tset read only items\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tif(!this._started){ return; }\r\n\t\tfor(var i in this._items){\r\n\t\t\tthis._items[i].set(\"readOnlyItem\", value);\r\n\t\t}\r\n\t},\r\n\r\n\t_createInputBox: function(){\r\n\t\t// summary:\r\n\t\t//\t\tCreate the input box\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tdomClass.toggle(this._inputNode, \"dijitHidden\", this.readOnlyInput);\r\n\t\tif(this.readOnlyInput){ return; }\r\n\t\tif(this._input){ return; }\r\n\r\n\t\tif(this.inputHandler === null){\r\n\t\t\tconsole.warn(\"you must add some handler to connect to input field\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif(lang.isString(this.inputHandler)){\r\n\t\t\tthis.inputHandler = this.inputHandler.split(\",\");\r\n\t\t}\r\n\t\tif(lang.isString(this.inputProperties)){\r\n\t\t\tthis.inputProperties = jsonUtil.fromJson(this.inputProperties);\r\n\t\t}\r\n\r\n\r\n\t\tvar input = lang.getObject(this.inputClass, false);\r\n\r\n\t\tthis.inputProperties.regExp = this.regExpGen(this.constraints);\r\n\r\n\t\tthis._input = new input(this.inputProperties);\r\n\t\tthis._input.startup();\r\n\t\tthis._inputNode.appendChild(this._input.domNode);\r\n\t\tarray.forEach(this.inputHandler, function(handler){\r\n\t\t\tthis.connect(this._input,lang.trim(handler),\"_onHandler\");\r\n\t\t},this);\r\n\r\n\t\tthis.connect(this._input, \"onKeyDown\", \"_inputOnKeyDown\");\r\n\t\tthis.connect(this._input, \"onBlur\", \"_inputOnBlur\");\r\n\t},\r\n\r\n\tcompare: function(/*Array*/ val1, /*Array*/ val2){\r\n\t\t// summary:\r\n\t\t//\t\tCompare 2 values (as returned by attr('value') for this widget).\r\n\t\t// tags:\r\n\t\t//\t\tprotected\r\n\t\tval1 = val1.join(\",\");\r\n\t\tval2 = val2.join(\",\");\r\n\t\tif(val1 > val2){\r\n\t\t\treturn 1;\r\n\t\t}else if(val1 < val2){\r\n\t\t\treturn -1;\r\n\t\t}else{\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t},\r\n\r\n\tadd: function(/*String|Array*/ values){\r\n\t\t// summary:\r\n\t\t//\t\tCreate new list element\r\n\t\tif(this._count>=this.maxItems && this.maxItems !== null){return;}\r\n\t\tthis._lastValueReported = this._getValues();\r\n\r\n\t\tif(!lang.isArray(values)){\r\n\t\t\tvalues = [values];\r\n\t\t}\r\n\r\n\t\tfor(var i in values){\r\n\t\t\tvar value=values[i];\r\n\t\t\tif(value === \"\" || typeof value != \"string\"){\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tthis._count++;\r\n\t\t\tvar re = new RegExp(this.regExpGen(this.constraints));\r\n\r\n\t\t\tthis._lastAddedItem = new _ListInputInputItem({\r\n\t\t\t\t\"index\" : this._items.length,\r\n\t\t\t\treadOnlyItem : this.readOnlyItem,\r\n\t\t\t\tvalue : value,\r\n\t\t\t\tregExp: this.regExpGen(this.constraints)\r\n\t\t\t});\r\n\t\t\tthis._lastAddedItem.startup();\r\n\r\n\t\t\tthis._testItem(this._lastAddedItem,value);\r\n\r\n\t\t\tthis._lastAddedItem.onClose = lang.hitch(this,\"_onItemClose\",this._lastAddedItem);\r\n\t\t\tthis._lastAddedItem.onChange = lang.hitch(this,\"_onItemChange\",this._lastAddedItem);\r\n\t\t\tthis._lastAddedItem.onEdit = lang.hitch(this,\"_onItemEdit\",this._lastAddedItem);\r\n\t\t\tthis._lastAddedItem.onKeyDown = lang.hitch(this,\"_onItemKeyDown\",this._lastAddedItem);\r\n\r\n\t\t\tif(this.useAnim){\r\n\t\t\t\tdomStyle.set(this._lastAddedItem.domNode, {opacity:0, display:\"\"});\r\n\t\t\t}\r\n\r\n\t\t\tthis._placeItem(this._lastAddedItem.domNode);\r\n\r\n\t\t\tif(this.useAnim){\r\n\t\t\t\tvar anim = fx.fadeIn({\r\n\t\t\t\t\tnode : this._lastAddedItem.domNode,\r\n\t\t\t\t\tduration : this.duration,\r\n\t\t\t\t\teasing : this.easingIn\r\n\t\t\t\t}).play();\r\n\t\t\t}\r\n\r\n\t\t\tthis._items[this._lastAddedItem.index] = this._lastAddedItem;\r\n\r\n\t\t\tif(this._onChangeActive && this.intermediateChanges){ this.onChange(value); }\r\n\r\n\t\t\tif(this._count>=this.maxItems && this.maxItems !== null){\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._updateValues();\r\n\t\tif(this._lastValueReported.length==0){\r\n\t\t\tthis._lastValueReported = this.value;\r\n\t\t}\r\n\r\n\t\tif(!this.readOnlyInput){\r\n\t\t\tthis._input.set(\"value\", \"\");\r\n\t\t}\r\n\r\n\t\tif(this._onChangeActive){ this.onChange(this.value); }\r\n\r\n\t\tthis._setReadOnlyWhenMaxItemsReached();\r\n\t},\r\n\r\n\t_setReadOnlyWhenMaxItemsReached: function(){\r\n\t\t// summary:\r\n\t\t//\t\tset input to readonly when max is reached\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tthis.set(\"readOnlyInput\",(this._count>=this.maxItems && this.maxItems !== null));\r\n\t},\r\n\r\n\t_setSelectNode: function(){\r\n\t\t// summary:\r\n\t\t//\t\tput all item in the select (for a submit)\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tthis._selectNode.options.length = 0;\r\n\r\n\t\tvar values=this.submitOnlyValidValue?this.get(\"MatchedValue\"):this.value;\r\n\r\n\t\tif(!lang.isArray(values)){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tarray.forEach(values,function(item){\r\n\t\t\tthis._selectNode.options[this._selectNode.options.length]=new Option(item,item,true,true);\r\n\t\t},this);\r\n\t},\r\n\r\n\t_placeItem: function(/*DomNode*/ node){\r\n\t\t// summary:\r\n\t\t//\t\tPlace item in the list\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tdomConstruct.place(node,this._inputNode, \"before\");\r\n\t},\r\n\r\n\t_getCursorPos: function(/*DomNode*/ node){\r\n\t\t// summary:\r\n\t\t//\t\tget current cursor pos\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tif(typeof node.selectionStart != 'undefined'){\r\n\t\t\treturn node.selectionStart;\r\n\t\t}\r\n\r\n\t\t// IE Support\r\n\t\ttry{ node.focus(); }catch(e){}\r\n\t\tvar range = node.createTextRange();\r\n\t\trange.moveToBookmark(win.doc.selection.createRange().getBookmark());\r\n\t\trange.moveEnd('character', node.value.length);\r\n\t\ttry{\r\n\t\t\treturn node.value.length - range.text.length;\r\n\t\t}finally{ range=null; }\r\n\t},\r\n\r\n\t_onItemClose: function(/*dijit/_Widget*/ item){\r\n\t\t// summary:\r\n\t\t//\t\tDestroy a list element when close button is clicked\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tif(this.disabled){ return; }\r\n\r\n\t\tif(this.useAnim){\r\n\t\t\tvar anim = fx.fadeOut({\r\n\t\t\t\tnode : item.domNode,\r\n\t\t\t\tduration : this.duration,\r\n\t\t\t\teasing : this.easingOut,\r\n\t\t\t\tonEnd : lang.hitch(this, \"_destroyItem\", item)\r\n\t\t\t}).play();\r\n\t\t}else{\r\n\t\t\tthis._destroyItem(item);\r\n\t\t}\r\n\t},\r\n\r\n\t_onItemKeyDown:  function(/*dijit/_Widget*/ item, /*Event*/ e){\r\n\t\t// summary:\r\n\t\t//\t\tCall when item get a keypress\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tif(this.readOnlyItem || !this.useArrowForEdit){ return; }\r\n\r\n\t\tif(e.keyCode == keys.LEFT_ARROW && this._getCursorPos(e.target)==0){\r\n\t\t\tthis._editBefore(item);\r\n\t\t}else if(e.keyCode == keys.RIGHT_ARROW && this._getCursorPos(e.target)==e.target.value.length){\r\n\t\t\tthis._editAfter(item);\r\n\t\t}\r\n\t},\r\n\r\n\t_editBefore: function(/*widget*/ item){\r\n\t\t// summary:\r\n\t\t//\t\tmove trough items\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tthis._currentItem = this._getPreviousItem(item);\r\n\t\tif(this._currentItem !== null){\r\n\t\t\tthis._currentItem.edit();\r\n\t\t}\r\n\t},\r\n\t_editAfter: function(/*widget*/ item){\r\n\t\t// summary:\r\n\t\t//\t\tmove trough items\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tthis._currentItem = this._getNextItem(item);\r\n\t\tif(this._currentItem !== null){\r\n\t\t\tthis._currentItem.edit();\r\n\t\t}\r\n\r\n\t\tif(!this.readOnlyInput){\r\n\t\t\tif(this._currentItem === null){\r\n\t\t\t\t//no more item ?\r\n\t\t\t\t//so edit input (if available)\r\n\t\t\t\tthis._focusInput();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_onItemChange: function(/*dijit/_Widget*/ item, /*String*/ value){\r\n\t\t// summary:\r\n\t\t//\t\tCall when item value change\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\r\n\t\tvalue = value || item.get(\"value\");\r\n\r\n\t\t//revalidate content\r\n\t\tthis._testItem(item,value);\r\n\r\n\t\t//update value\r\n\t\tthis._updateValues();\r\n\t},\r\n\r\n\t_onItemEdit: function(/*dijit/_Widget*/ item){\r\n\t\t// summary:\r\n\t\t//\t\tCall when item is edited\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tdomClass.remove(item.domNode,[\"dijitError\", this.baseClass + \"Match\", this.baseClass + \"Mismatch\"]);\r\n\t},\r\n\r\n\t_testItem: function(/*Object*/ item, /*String*/ value){\r\n\t\t// summary:\r\n\t\t//\t\tChange class of item (match, mismatch)\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar re = new RegExp(this.regExpGen(this.constraints));\r\n\t\tvar match = ('' + value).match(re);\r\n\r\n\t\tdomClass.remove(item.domNode, this.baseClass + (!match ? \"Match\" : \"Mismatch\"));\r\n\t\tdomClass.add(item.domNode, this.baseClass + (match ? \"Match\" : \"Mismatch\"));\r\n\t\tdomClass.toggle(item.domNode, \"dijitError\", !match);\r\n\r\n\t\tif((this.showCloseButtonWhenValid && match) ||\r\n\t\t\t(this.showCloseButtonWhenInvalid && !match)){\r\n\t\t\tdomClass.add(item.domNode,this.baseClass+\"Closable\");\r\n\t\t}else {\r\n\t\t\tdomClass.remove(item.domNode,this.baseClass+\"Closable\");\r\n\t\t}\r\n\t},\r\n\r\n\t_getValueAttr: function(){\r\n\t\t// summary:\r\n\t\t//\t\tget all value in then list and return an array\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\treturn this.value;\r\n\t},\r\n\r\n\t_setValueAttr: function(/*Array|String*/ newValue){\r\n\t\t// summary:\r\n\t\t//\t\tHook so attr('value', value) works.\r\n\t\t// description:\r\n\t\t//\t\tSets the value of the widget.\r\n\t\t//\t\tIf the value has changed, then fire onChange event, unless priorityChange\r\n\t\t//\t\tis specified as null (or false?)\r\n\t\tthis._destroyAllItems();\r\n\r\n\t\tthis.add(this._parseValue(newValue));\r\n\t},\r\n\r\n\t_parseValue: function(/*String*/ newValue){\r\n\t\t// summary:\r\n\t\t//\t\tsearch for delimiters and split if needed\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tif(typeof newValue == \"string\"){\r\n\t\t\tif(lang.isString(this.delimiter)){\r\n\t\t\t\tthis.delimiter = [this.delimiter];\r\n\t\t\t}\r\n\t\t\tvar re = new RegExp(\"^.*(\"+this.delimiter.join(\"|\")+\").*\");\r\n\t\t\tif(newValue.match(re)){\r\n\t\t\t\tre = new RegExp(this.delimiter.join(\"|\"));\r\n\t\t\t\treturn newValue.split(re);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn newValue;\r\n\t},\r\n\r\n\tregExpGen: function(/*__Constraints*/ constraints){\r\n\t\t// summary:\r\n\t\t//\t\tOverridable function used to generate regExp when dependent on constraints.\r\n\t\t//\t\tDo not specify both regExp and regExpGen.\r\n\t\t// tags:\r\n\t\t//\t\textension protected\r\n\t\treturn this.regExp;     // String\r\n\t},\r\n\r\n\t_setDisabledAttr: function(/*Boolean*/ value){\r\n\t\t// summary:\r\n\t\t//\t\talso enable/disable editable items\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tif(!this.readOnlyItem){\r\n\t\t\tfor(var i in this._items){\r\n\t\t\t\tthis._items[i].set(\"disabled\", value);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!this.readOnlyInput){\r\n\t\t\tthis._input.set(\"disabled\", value);\r\n\t\t}\r\n\t\tthis.inherited(arguments);\r\n\t},\r\n\r\n\t_onHandler: function(/*String*/ value){\r\n\t\t// summary:\r\n\t\t//\t\tWhen handlers of input are fired, this method check input value and (if needed) modify it\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar parsedValue = this._parseValue(value);\r\n\t\tif(lang.isArray(parsedValue)){\r\n\t\t\tthis.add(parsedValue);\r\n\t\t}\r\n\t},\r\n\r\n\t_onClick:  function(/*Event*/ e){\r\n\t\t// summary:\r\n\t\t//\t\tgive focus to inputbox\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tthis._focusInput();\r\n\t},\r\n\r\n\t_focusInput: function(){\r\n\t\t// summary:\r\n\t\t//\t\tgive focus to input\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tif(!this.readOnlyInput && this._input.focus){\r\n\t\t\tthis._input.focus();\r\n\t\t}\r\n\t},\r\n\r\n\t_inputOnKeyDown: function(/*Event*/ e){\r\n\t\t// summary:\r\n\t\t//\t\tUsed to add keyboard interactivity\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tthis._currentItem = null;\r\n\t\tvar val = this._input.get(\"value\");\r\n\r\n\t\tif(e.keyCode == keys.BACKSPACE && val == \"\" && this.get(\"lastItem\")){\r\n\t\t\tthis._destroyItem(this.get(\"lastItem\"));\r\n\t\t}else if(e.keyCode == keys.ENTER && val != \"\"){\r\n\t\t\tthis.add(val);\r\n\t\t}else if(e.keyCode == keys.LEFT_ARROW && this._getCursorPos(this._input.focusNode) == 0 &&\r\n\t\t\t!this.readOnlyItem && this.useArrowForEdit){\r\n\t\t\t\tthis._editBefore();\r\n\t\t}\r\n\t},\r\n\r\n\t_inputOnBlur: function(){\r\n\t\t// summary:\r\n\t\t//\t\tRemove focus class and act like pressing ENTER key\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar val = this._input.get('value');\r\n\t\tif(this.useOnBlur && val != \"\"){\r\n\t\t\tthis.add(val);\r\n\t\t}\r\n\t},\r\n\r\n\t_getMatchedValueAttr: function(){\r\n\t\t// summary:\r\n\t\t//\t\tget value that match regexp in then list and return an array\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\treturn this._getValues(lang.hitch(this,this._matchValidator));\r\n\t},\r\n\r\n\t_getMismatchedValueAttr: function(){\r\n\t\t// summary:\r\n\t\t//\t\tget value that mismatch regexp in then list and return an array\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\treturn this._getValues(lang.hitch(this,this._mismatchValidator));\r\n\t},\r\n\r\n\t_getValues: function(/*Function*/ validator){\r\n\t\t// summary:\r\n\t\t//\t\treturn values with comparator constraint\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar value = [];\r\n\t\tvalidator = validator||this._nullValidator;\r\n\t\tfor(var i in this._items){\r\n\t\t\tvar item = this._items[i];\r\n\t\t\tif(item === null){\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tvar itemValue = item.get(\"value\");\r\n\t\t\tif(validator(itemValue)){\r\n\t\t\t\tvalue.push(itemValue);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t},\r\n\r\n\t_nullValidator: function(/*String*/ itemValue){\r\n\t\t// summary:\r\n\t\t//\t\treturn true or false\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\treturn true;\r\n\t},\r\n\t_matchValidator: function(/*String*/ itemValue){\r\n\t\t// summary:\r\n\t\t//\t\treturn true or false\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar re = new RegExp(this.regExpGen(this.constraints));\r\n\t\treturn itemValue.match(re);\r\n\t},\r\n\t_mismatchValidator: function(/*String*/ itemValue){\r\n\t\t// summary:\r\n\t\t//\t\treturn true or false\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar re = new RegExp(this.regExpGen(this.constraints));\r\n\t\treturn !(itemValue.match(re));\r\n\t},\r\n\r\n\t_getLastItemAttr: function(){\r\n\t\t// summary:\r\n\t\t//\t\treturn the last item in list\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\treturn this._getSomeItem();\r\n\t},\r\n\t_getSomeItem: function(/*dijit/_Widget*/ item, /*String*/ position){\r\n\t\t// summary:\r\n\t\t//\t\treturn the item before the one in params\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\titem=item||false;\r\n\t\tposition=position||\"last\";\r\n\r\n\t\tvar lastItem = null;\r\n\t\tvar stop=-1;\r\n\t\tfor(var i in this._items){\r\n\t\t\tif(this._items[i] === null){ continue; }\r\n\r\n\t\t\tif(position==\"before\" && this._items[i] === item){\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tlastItem = this._items[i];\r\n\r\n\t\t\tif(position==\"first\" ||stop==0){\r\n\t\t\t\tstop=1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(position==\"after\" && this._items[i] === item){\r\n\t\t\t\tstop=0;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(position==\"after\" && stop==0){\r\n\t\t\tlastItem = null;\r\n\t\t}\r\n\t\treturn lastItem;\r\n\t},\r\n\t_getPreviousItem: function(/*dijit/_Widget*/ item){\r\n\t\t// summary:\r\n\t\t//\t\treturn the item before the one in params\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\treturn this._getSomeItem(item,\"before\");\r\n\t},\r\n\t_getNextItem: function(/*dijit._Widget*/ item){\r\n\t\t// summary:\r\n\t\t//\t\treturn the item before the one in params\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\treturn this._getSomeItem(item,\"after\");\r\n\t},\r\n\r\n\t_destroyItem: function(/*dijit/_Widget*/ item, /*Boolean?*/ updateValue){\r\n\t\t// summary:\r\n\t\t//\t\tdestroy an item\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tthis._items[item.index] = null;\r\n\t\titem.destroy();\r\n\t\tthis._count--;\r\n\t\tif(updateValue!==false){\r\n\t\t\tthis._updateValues();\r\n\t\t\tthis._setReadOnlyWhenMaxItemsReached();\r\n\t\t}\r\n\t},\r\n\r\n\t_updateValues: function(){\r\n\t\t// summary:\r\n\t\t//\t\tupdate this.value and the select node\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tthis.value = this._getValues();\r\n\t\tthis._setSelectNode();\r\n\t},\r\n\r\n\t_destroyAllItems: function(){\r\n\t\t// summary:\r\n\t\t//\t\tdestroy all items\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tfor(var i in this._items){\r\n\t\t\tif(this._items[i]==null){ continue; }\r\n\t\t\tthis._destroyItem(this._items[i],false);\r\n\t\t}\r\n\t\tthis._items = [];\r\n\t\tthis._count = 0;\r\n\t\tthis.value = null;\r\n\t\tthis._setSelectNode();\r\n\t\tthis._setReadOnlyWhenMaxItemsReached();\r\n\t},\r\n\r\n\tdestroy: function(){\r\n\t\t// summary:\r\n\t\t//\t\tDestroy all widget\r\n\t\tthis._destroyAllItems();\r\n\t\tthis._lastAddedItem = null;\r\n\r\n\t\tif(!this._input){\r\n\t\t\tthis._input.destroy();\r\n\t\t}\r\n\r\n\t\tthis.inherited(arguments);\r\n\t}\r\n});\r\n\r\nvar _ListInputInputItem = declare(\"dojox.form._ListInputInputItem\", [Widget, TemplatedMixin],\r\n\t{\r\n\t// summary:\r\n\t//\t\tItem created by ListInputInput when delimiter is found\r\n\t// description:\r\n\t//\t\tSimple `<li>` with close button added to ListInputInput when delimiter is found\r\n\r\n\ttemplateString: \"<li class=\\\"dijit dijitReset dijitLeft dojoxListInputItem\\\" dojoAttachEvent=\\\"onclick: onClick\\\" ><span dojoAttachPoint=\\\"labelNode\\\"></span></li>\",\r\n\r\n\t// closeButtonNode: domNode\r\n\t//\t\tref to the close button node\r\n\tcloseButtonNode: null,\r\n\r\n\t// readOnlyItem: Boolean\r\n\t//\t\tif true, item is editable\r\n\treadOnlyItem: true,\r\n\r\n\tbaseClass:\"dojoxListInputItem\",\r\n\r\n\t// value: String\r\n\t//\t\tvalue of item\r\n\tvalue: \"\",\r\n\r\n\t// regExp: [extension protected] String\r\n\t//\t\tregular expression string used to validate the input\r\n\t//\t\tDo not specify both regExp and regExpGen\r\n\tregExp: \".*\",\r\n\r\n\t// _editBox: Widget\r\n\t//\t\tinline edit box\r\n\t_editBox: null,\r\n\r\n\t// _handleKeyDown: handle\r\n\t//\t\thandle for the keyDown connect\r\n\t_handleKeyDown: null,\r\n\r\n\tattributeMap: {\r\n\t\tvalue: { node: \"labelNode\", type: \"innerHTML\" }\r\n\t},\r\n\r\n\tpostMixInProperties: function(){\r\n\t\tvar _nlsResources = i18nCommon;\r\n\t\tlang.mixin(this, _nlsResources);\r\n\t\tthis.inherited(arguments);\r\n\t},\r\n\r\n\tpostCreate: function(){\r\n\t\t// summary:\r\n\t\t//\t\tCreate the close button if needed\r\n\t\tthis.inherited(arguments);\r\n\r\n\t\tthis.closeButtonNode = domConstruct.create(\"span\",{\r\n\t\t\t\"class\" : \"dijitButtonNode dijitDialogCloseIcon\",\r\n\t\t\ttitle : this.itemClose,\r\n\t\t\tonclick: lang.hitch(this, \"onClose\"),\r\n\t\t\tonmouseenter: lang.hitch(this, \"_onCloseEnter\"),\r\n\t\t\tonmouseleave: lang.hitch(this, \"_onCloseLeave\")\r\n\t\t}, this.domNode);\r\n\r\n\t\tdomConstruct.create(\"span\",{\r\n\t\t\t\"class\" : \"closeText\",\r\n\t\t\ttitle : this.itemClose,\r\n\t\t\tinnerHTML : \"x\"\r\n\t\t}, this.closeButtonNode);\r\n\t},\r\n\r\n\tstartup: function(){\r\n\t\t// summary:\r\n\t\t//\t\tadd the edit box\r\n\t\tthis.inherited(arguments);\r\n\t\tthis._createInlineEditBox();\r\n\t},\r\n\r\n\t_setReadOnlyItemAttr: function(/*Boolean*/ value){\r\n\t\t// summary:\r\n\t\t//\t\tchange the readonly state\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tthis.readOnlyItem = value;\r\n\t\tif(!value){\r\n\t\t\tthis._createInlineEditBox();\r\n\t\t}else if(this._editBox){\r\n\t\t\tthis._editBox.set(\"disabled\", true);\r\n\t\t}\r\n\t},\r\n\r\n\t_createInlineEditBox: function(){\r\n\t\t// summary:\r\n\t\t//\t\tcreate the inline editbox if needed\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tif(this.readOnlyItem){ return; }\r\n\t\tif(!this._started){ return; }\r\n\t\tif(this._editBox){\r\n\t\t\tthis._editBox.set(\"disabled\",false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._editBox = new InlineEditBox({\r\n\t\t\tvalue:this.value,\r\n\t\t\teditor: \"dijit.form.ValidationTextBox\",\r\n\t\t\teditorParams:{\r\n\t\t\t\tregExp:this.regExp\r\n\t\t\t}\r\n\t\t},this.labelNode);\r\n\t\tthis.connect(this._editBox,\"edit\",\"_onEdit\");\r\n\t\tthis.connect(this._editBox,\"onChange\",\"_onCloseEdit\");\r\n\t\tthis.connect(this._editBox,\"onCancel\",\"_onCloseEdit\");\r\n\t},\r\n\r\n\tedit: function(){\r\n\t\t// summary:\r\n\t\t//\t\tenter inline editbox in edit mode\r\n\t\tif(!this.readOnlyItem){\r\n\t\t\tthis._editBox.edit();\r\n\t\t}\r\n\t},\r\n\r\n\t_onCloseEdit: function(/*String*/ value){\r\n\t\t// summary:\r\n\t\t//\t\tcall when inline editor close himself\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tdomClass.remove(this.closeButtonNode,this.baseClass + \"Edited\");\r\n\t\tconnect.disconnect(this._handleKeyDown);\r\n\t\tthis.onChange(value);\r\n\t},\r\n\r\n\t_onEdit: function(){\r\n\t\t// summary:\r\n\t\t//\t\tcall when inline editor start editing\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tdomClass.add(this.closeButtonNode,this.baseClass + \"Edited\");\r\n\t\tthis._handleKeyDown = connect.connect(this._editBox.editWidget,\"_onKeyPress\",this,\"onKeyDown\");\r\n\t\tthis.onEdit();\r\n\t},\r\n\r\n\t_setDisabledAttr: function(/*Boolean*/ value){\r\n\t\t// summary:\r\n\t\t//\t\tdisable inline edit box\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tif(!this.readOnlyItem){\r\n\t\t\tthis._editBox.set(\"disabled\", value);\r\n\t\t}\r\n\t},\r\n\r\n\t_getValueAttr: function(){\r\n\t\t// summary:\r\n\t\t//\t\treturn value\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\treturn (!this.readOnlyItem && this._started ? this._editBox.get(\"value\") : this.value);\r\n\t},\r\n\r\n\tdestroy: function(){\r\n\t\t// summary:\r\n\t\t//\t\tDestroy the inline editbox\r\n\t\tif(this._editBox){\r\n\t\t\tthis._editBox.destroy();\r\n\t\t}\r\n\t\tthis.inherited(arguments);\r\n\t},\r\n\r\n\t_onCloseEnter: function(){\r\n\t\t// summary:\r\n\t\t//\t\tCalled when user hovers over close icon\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tdomClass.add(this.closeButtonNode, \"dijitDialogCloseIcon-hover\");\r\n\t},\r\n\r\n\t_onCloseLeave: function(){\r\n\t\t// summary:\r\n\t\t//\t\tCalled when user stops hovering over close icon\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tdomClass.remove(this.closeButtonNode, \"dijitDialogCloseIcon-hover\");\r\n\t},\r\n\r\n\tonClose: function(){\r\n\t\t// summary:\r\n\t\t//\t\tcallback when close button is clicked\r\n\t},\r\n\r\n\tonEdit: function(){\r\n\t\t// summary:\r\n\t\t//\t\tcallback when widget come in edition\r\n\t},\r\n\r\n\tonClick: function(){\r\n\t\t// summary:\r\n\t\t//\t\tcallback when widget is click\r\n\t},\r\n\r\n\tonChange: function(/*String*/ value){\r\n\t\t// summary:\r\n\t\t//\t\tcallback when widget change its content\r\n\t},\r\n\r\n\r\n\tonKeyDown: function(/*String*/ value){\r\n\t\t// summary:\r\n\t\t//\t\tcallback when widget get a KeyDown\r\n\t}\r\n});\r\nvar _ListInputInputBox = declare(\"dojox.form._ListInputInputBox\", [ValidationTextBox],\r\n\t{\r\n\t// summary:\r\n\t//\t\tauto-sized text box\r\n\t// description:\r\n\t//\t\tAuto sized textbox based on dijit.form.TextBox\r\n\r\n\t// minWidth: Integer\r\n\t//\t\tMin width of the input box\r\n\tminWidth:50,\r\n\r\n\t// intermediateChanges: Boolean\r\n\t//\t\tFires onChange for each value change or only on demand\r\n\t//\t\tForce to true in order to get onChanged called\r\n\tintermediateChanges:true,\r\n\r\n\t// regExp: [extension protected] String\r\n\t//\t\tregular expression string used to validate the input\r\n\t//\t\tDo not specify both regExp and regExpGen\r\n\tregExp: \".*\",\r\n\r\n\t// _sizer: DomNode\r\n\t//\t\tUsed to get size of textbox content\r\n\t_sizer:null,\r\n\r\n\tonChange: function(/*String*/ value){\r\n\t\t// summary:\r\n\t\t//\t\tcompute content width\r\n\t\tthis.inherited(arguments);\r\n\t\tif(this._sizer === null){\r\n\t\t\tthis._sizer = domConstruct.create(\"div\",{\r\n\t\t\t\tstyle : {\r\n\t\t\t\t\tposition : \"absolute\",\r\n\t\t\t\t\tleft : \"-10000px\",\r\n\t\t\t\t\ttop : \"-10000px\"\r\n\t\t\t\t}\r\n\t\t\t},win.body());\r\n\t\t}\r\n\t\tthis._sizer.innerHTML = value;\r\n\t\tvar w = domGeometry.getContentBox(this._sizer).w + this.minWidth;\r\n\t\tdomGeometry.setContentSize(this.domNode,{ w : w });\r\n\t},\r\n\r\n\tdestroy: function(){\r\n\t\t// summary:\r\n\t\t//\t\tdestroy the widget\r\n\t\tdomConstruct.destroy(this._sizer);\r\n\t\tthis.inherited(arguments);\r\n\t}\r\n});\r\nreturn ListInput;\r\n});\r\n"]}