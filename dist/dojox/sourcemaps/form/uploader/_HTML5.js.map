{"version":3,"sources":["form/uploader/_HTML5.js"],"names":["define","declare","lang","arrayUtil","dojo","errMsg","uploadType","postMixInProperties","this","inherited","arguments","postCreate","connectForm","uploadOnSelect","connect","data","upload","_drop","e","stopEvent","dt","dataTransfer","_files","files","onChange","getFileList","formData","onBegin","uploadWithFormData","addDropTarget","node","onlyConnectDrop","getUrl","fd","FormData","fieldName","_getFileFieldName","forEach","f","i","append","nm","createXhr","send","console","error","_xhrProgress","evt","lengthComputable","o","bytesLoaded","loaded","bytesTotal","total","type","timeStamp","percent","decimal","Math","ceil","onProgress","timer","xhr","XMLHttpRequest","addEventListener","hitch","onError","clearInterval","onAbort","onreadystatechange","readyState","onComplete","JSON","parse","responseText","replace","msg","open","setRequestHeader","setInterval"],"mappings":";;;;;;;AAAAA,QACC,qBACA,kBACA,mBACA,QACC,SAASC,EAASC,EAAMC,EAAWC,GAEpC,OAAOH,EAAQ,iCAWdI,OAAO,kDAGPC,WAAW,QAEXC,oBAAqB,WACpBC,KAAKC,UAAUC,WACZF,KAAKF,YAGTK,WAAY,WACXH,KAAKI,cACLJ,KAAKC,UAAUC,WACZF,KAAKK,gBACPL,KAAKM,QAAQN,KAAM,WAAY,SAASO,GACvCP,KAAKQ,OAAOD,EAAK,OAKpBE,MAAO,SAASC,GACfd,EAAKe,UAAUD,GACf,IAAIE,EAAKF,EAAEG,aACXb,KAAKc,OAASF,EAAGG,MACjBf,KAAKgB,SAAShB,KAAKiB,gBAMpBT,OAAQ,SAAuBU,GAI9BlB,KAAKmB,QAAQnB,KAAKiB,eAClBjB,KAAKoB,mBAAmBF,IAGzBG,cAAe,SAASC,EAAmBC,GAUtCA,IACHvB,KAAKM,QAAQgB,EAAM,YAAa1B,EAAKe,WACrCX,KAAKM,QAAQgB,EAAM,WAAY1B,EAAKe,WACpCX,KAAKM,QAAQgB,EAAM,YAAa1B,EAAKe,YAEtCX,KAAKM,QAAQgB,EAAM,OAAQ,UAG5BF,mBAAoB,SAAoBb,GAOvC,GAAIP,KAAKwB,SAAT,CAGA,IAAIC,EAAK,IAAIC,SAAYC,EAAU3B,KAAK4B,oBAKxC,GAJAjC,EAAUkC,QAAQ7B,KAAKc,OAAQ,SAASgB,EAAGC,GAC1CN,EAAGO,OAAOL,EAAWG,IACnB9B,MAEAO,EAEF,IAAI,IAAI0B,KADR1B,EAAKT,WAAaE,KAAKF,WACTS,EACbkB,EAAGO,OAAOC,EAAI1B,EAAK0B,IAIXjC,KAAKkC,YACXC,KAAKV,QAfRW,QAAQC,MAAM,uBAAwBrC,OAkBxCsC,aAAc,SAASC,GACtB,GAAGA,EAAIC,iBAAiB,CACvB,IAAIC,GACHC,YAAYH,EAAII,OAChBC,WAAWL,EAAIM,MACfC,KAAKP,EAAIO,KACTC,UAAUR,EAAIQ,WAEA,QAAZR,EAAIO,MAENL,EAAEO,QAAU,OACZP,EAAEQ,QAAU,IAEZR,EAAEQ,QAAUV,EAAII,OAASJ,EAAIM,MAC7BJ,EAAEO,QAAUE,KAAKC,KAAMZ,EAAII,OAASJ,EAAIM,MAAO,KAAK,KAErD7C,KAAKoD,WAAWX,KAIlBP,UAAW,WACV,IACImB,EADAC,EAAM,IAAIC,eAsCd,OApCAD,EAAI9C,OAAOgD,iBAAiB,WAAY9D,EAAK+D,MAAMzD,KAAM,iBAAiB,GAC1EsD,EAAIE,iBAAiB,OAAQ9D,EAAK+D,MAAMzD,KAAM,iBAAiB,GAC/DsD,EAAIE,iBAAiB,QAAS9D,EAAK+D,MAAMzD,KAAM,SAASuC,GACvDvC,KAAK0D,QAAQnB,GACboB,cAAcN,MACX,GACJC,EAAIE,iBAAiB,QAAS9D,EAAK+D,MAAMzD,KAAM,SAASuC,GACvDvC,KAAK4D,QAAQrB,GACboB,cAAcN,MACX,GACJC,EAAIO,mBAAqBnE,EAAK+D,MAAMzD,KAAM,WACzC,GAAsB,IAAnBsD,EAAIQ,WAAiB,CAEvBH,cAAcN,GACd,IACCrD,KAAK+D,WAAWC,KAAKC,MAAMX,EAAIY,aAAaC,QAAQ,UAAU,MAC9D,MAAMzD,GACN,IAAI0D,EAAM,+BACVhC,QAAQC,MAAM+B,EAAK1D,GACnB0B,QAAQC,MAAMiB,EAAIY,cAClBlE,KAAK0D,QAAQU,EAAK1D,OAIrB4C,EAAIe,KAAK,OAAQrE,KAAKwB,UACtB8B,EAAIgB,iBAAiB,SAAS,oBAE9BjB,EAAQkB,YAAY7E,EAAK+D,MAAMzD,KAAM,WACpC,IACWsD,EAAc,WAArB,EACH,MAAM5C,GAENiD,cAAcN,MAEb,KAEIC","file":"../../../form/uploader/_HTML5.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/array\",\r\n\t\"dojo\"\r\n],function(declare, lang, arrayUtil, dojo){\r\n\r\n\treturn declare(\"dojox.form.uploader._HTML5\", [], {\r\n\t\t// summary:\r\n\t\t//\t\tA mixin for dojox/form/Uploader that adds HTML5 multiple-file upload capabilities and\r\n\t\t//\t\tprogress events.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tNote that this does not add these capabilities to browsers that don't support them.\r\n\t\t//\t\tFor IE8 or older browsers, _IFrame or _Flash mixins will be used.\r\n\t\t//\r\n\t\t\r\n\t\t// debug message:\r\n\t\terrMsg:\"Error uploading files. Try checking permissions\",\r\n\t\r\n\t\t// Overwrites \"form\" and could possibly be overwritten again by iframe or flash plugin.\r\n\t\tuploadType:\"html5\",\r\n\t\t\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(this.uploadType === \"html5\"){ }\r\n\t\t},\r\n\t\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.connectForm();\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(this.uploadOnSelect){\r\n\t\t\t\tthis.connect(this, \"onChange\", function(data){\r\n\t\t\t\t\tthis.upload(data[0]);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t_drop: function(e){\r\n\t\t\tdojo.stopEvent(e);\r\n\t\t\tvar dt = e.dataTransfer;\r\n\t\t\tthis._files = dt.files;\r\n\t\t\tthis.onChange(this.getFileList());\r\n\t\t},\r\n\t\t/*************************\r\n\t\t *\t   Public Methods\t *\r\n\t\t *************************/\r\n\t\r\n\t\tupload: function(/*Object ? */ formData){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSee: dojox.form.Uploader.upload\r\n\t\t\t\t\r\n\t\t\tthis.onBegin(this.getFileList());\r\n\t\t\tthis.uploadWithFormData(formData);\r\n\t\t},\r\n\t\r\n\t\taddDropTarget: function(node, /*Boolean?*/ onlyConnectDrop){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdd a dom node which will act as the drop target area so user\r\n\t\t\t//\t\tcan drop files to this node.\r\n\t\t\t// description:\r\n\t\t\t//\t\tIf onlyConnectDrop is true, dragenter/dragover/dragleave events\r\n\t\t\t//\t\twon't be connected to dojo.stopEvent, and they need to be\r\n\t\t\t//\t\tcanceled by user code to allow DnD files to happen.\r\n\t\t\t//\t\tThis API is only available in HTML5 plugin (only HTML5 allows\r\n\t\t\t//\t\tDnD files).\r\n\t\t\tif(!onlyConnectDrop){\r\n\t\t\t\tthis.connect(node, 'dragenter', dojo.stopEvent);\r\n\t\t\t\tthis.connect(node, 'dragover', dojo.stopEvent);\r\n\t\t\t\tthis.connect(node, 'dragleave', dojo.stopEvent);\r\n\t\t\t}\r\n\t\t\tthis.connect(node, 'drop', '_drop');\r\n\t\t},\r\n\t\t\r\n\t\tuploadWithFormData: function(/*Object*/ data){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUsed with WebKit and Firefox 4+\r\n\t\t\t//\t\tUpload files using the much friendlier FormData browser object.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\r\n\t\t\tif(!this.getUrl()){\r\n\t\t\t\tconsole.error(\"No upload url found.\", this); return;\r\n\t\t\t}\r\n\t\t\tvar fd = new FormData(), fieldName=this._getFileFieldName();\r\n\t\t\tarrayUtil.forEach(this._files, function(f, i){\r\n\t\t\t\tfd.append(fieldName, f);\r\n\t\t\t}, this);\r\n\t\r\n\t\t\tif(data){\r\n\t\t\t\tdata.uploadType = this.uploadType;\r\n\t\t\t\tfor(var nm in data){\r\n\t\t\t\t\tfd.append(nm, data[nm]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\tvar xhr = this.createXhr();\r\n\t\t\txhr.send(fd);\r\n\t\t},\r\n\t\r\n\t\t_xhrProgress: function(evt){\r\n\t\t\tif(evt.lengthComputable){\r\n\t\t\t\tvar o = {\r\n\t\t\t\t\tbytesLoaded:evt.loaded,\r\n\t\t\t\t\tbytesTotal:evt.total,\r\n\t\t\t\t\ttype:evt.type,\r\n\t\t\t\t\ttimeStamp:evt.timeStamp\r\n\t\t\t\t};\r\n\t\t\t\tif(evt.type == \"load\"){\r\n\t\t\t\t\t// 100%\r\n\t\t\t\t\to.percent = \"100%\";\r\n\t\t\t\t\to.decimal = 1;\r\n\t\t\t\t}else{\r\n\t\t\t\t\to.decimal = evt.loaded / evt.total;\r\n\t\t\t\t\to.percent = Math.ceil((evt.loaded / evt.total)*100)+\"%\";\r\n\t\t\t\t}\r\n\t\t\t\tthis.onProgress(o);\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\tcreateXhr: function(){\r\n\t\t\tvar xhr = new XMLHttpRequest();\r\n\t\t\tvar timer;\r\n\t\t\txhr.upload.addEventListener(\"progress\", lang.hitch(this, \"_xhrProgress\"), false);\r\n\t\t\txhr.addEventListener(\"load\", lang.hitch(this, \"_xhrProgress\"), false);\r\n\t\t\txhr.addEventListener(\"error\", lang.hitch(this, function(evt){\r\n\t\t\t\tthis.onError(evt);\r\n\t\t\t\tclearInterval(timer);\r\n\t\t\t}), false);\r\n\t\t\txhr.addEventListener(\"abort\", lang.hitch(this, function(evt){\r\n\t\t\t\tthis.onAbort(evt);\r\n\t\t\t\tclearInterval(timer);\r\n\t\t\t}), false);\r\n\t\t\txhr.onreadystatechange = lang.hitch(this, function(){\r\n\t\t\t\tif(xhr.readyState === 4){\r\n\t//\t\t\t\tconsole.info(\"COMPLETE\")\r\n\t\t\t\t\tclearInterval(timer);\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\tthis.onComplete(JSON.parse(xhr.responseText.replace(/^\\{\\}&&/,'')));\r\n\t\t\t\t\t}catch(e){\r\n\t\t\t\t\t\tvar msg = \"Error parsing server result:\";\r\n\t\t\t\t\t\tconsole.error(msg, e);\r\n\t\t\t\t\t\tconsole.error(xhr.responseText);\r\n\t\t\t\t\t\tthis.onError(msg, e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\txhr.open(\"POST\", this.getUrl());\r\n\t\t\txhr.setRequestHeader(\"Accept\",\"application/json\");\r\n\t\t\t\r\n\t\t\ttimer = setInterval(lang.hitch(this, function(){\r\n\t\t\t\ttry{\r\n\t\t\t\t\tif(typeof(xhr.statusText)){} // accessing this error throws an error. Awesomeness.\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\t//this.onError(\"Error uploading file.\"); // not always an error.\r\n\t\t\t\t\tclearInterval(timer);\r\n\t\t\t\t}\r\n\t\t\t}),250);\r\n\t\r\n\t\t\treturn xhr;\r\n\t\t}\r\n\t\r\n\t});\r\n\r\n});\r\n"]}