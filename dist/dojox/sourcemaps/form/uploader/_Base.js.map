{"version":3,"sources":["form/uploader/_Base.js"],"names":["define","domForm","domStyle","domConstruct","domAttr","has","declare","event","Widget","TemplatedMixin","WidgetsInTemplateMixin","add","window","FormData","xhr","XMLHttpRequest","sendAsBinary","true","false","get","document","createElement","type","getForm","this","form","n","domNode","tagName","body","toLowerCase","parentNode","getUrl","uploadUrl","url","action","connectForm","_fcon","connect","evt","console","log","stop","submit","supports","what","force","getMimeType","getFileType","name","substring","lastIndexOf","toUpperCase","convertBytes","bytes","kb","Math","round","mb","gb","value","toFixed"],"mappings":";;;;;;;AAAAA,QACC,gBACA,iBACA,qBACA,gBACA,WACA,qBACA,mBACA,gBACA,wBACA,iCACC,SAASC,EAASC,EAAUC,EAAcC,EAASC,EAAKC,EAASC,EAAOC,EAAQC,EAAgBC,GAOlG,OALAL,EAAIM,IAAI,WAAY,WAAW,QAASC,OAAOC,WAC/CR,EAAIM,IAAI,mBAAoB,WAAW,IAAIG,EAAIF,OAAOG,gBAAkB,IAAIH,OAAOG,eAAkB,OAAOD,KAASA,EAAIE,eACzHX,EAAIM,IAAI,gBAAiB,WAAW,SAAWM,KAAO,EAAEC,MAAQ,GAAGd,EAAQe,IAAIC,SAASC,cAAc,SAASC,KAAK,SAAU,eAGvHhB,EAAQ,6BAA8BE,EAAQC,EAAgBC,IAMpEa,QAAS,WAIR,IAAIC,KAAKC,KAER,IADA,IAAIC,EAAIF,KAAKG,QACPD,GAAKA,EAAEE,SAAWF,IAAMN,SAASS,MAAK,CAC3C,GAA8B,QAA3BH,EAAEE,QAAQE,cAAwB,CACpCN,KAAKC,KAAOC,EACZ,MAEDA,EAAIA,EAAEK,WAGR,OAAOP,KAAKC,MAGbO,OAAQ,WAMP,OADGR,KAAKS,YAAWT,KAAKU,IAAMV,KAAKS,WAChCT,KAAKU,IAAYV,KAAKU,KACtBV,KAAKD,YAAWC,KAAKU,IAAMV,KAAKC,KAAKU,QACjCX,KAAKU,MAIbE,YAAa,WAIZZ,KAAKU,IAAMV,KAAKQ,UACZR,KAAKa,OAAWb,KAAKD,YACxBC,KAAKa,OAAQ,EACbb,KAAKc,QAAQd,KAAKC,KAAM,WAAY,SAASc,GAC5CC,QAAQC,IAAI,UACZlC,EAAMmC,KAAKH,GACXf,KAAKmB,OAAOnB,KAAKC,UAKpBmB,SAAU,SAASC,GAIlB,OAAOA,GACN,IAAK,WACJ,MAAiB,SAAdrB,KAAKsB,OAAkC,UAAdtB,KAAKsB,OAC1BzC,EAAI,iBACZ,IAAK,WACJ,OAAOA,EAAIwC,GACZ,IAAK,eACJ,OAAOxC,EAAI,oBAEb,OAAO,GAER0C,YAAa,WAIZ,MAAO,4BAERC,YAAa,SAAoBC,GAGhC,OAAOA,EAAKC,UAAUD,EAAKE,YAAY,KAAK,GAAGC,eAEhDC,aAAc,SAASC,GAKtB,IAAIC,EAAKC,KAAKC,MAAMH,EAAM,KAAK,KAAQ,IACnCI,EAAKF,KAAKC,MAAMH,EAAM,QAAQ,KAAQ,IACtCK,EAAKH,KAAKC,MAAMH,EAAM,WAAW,KAAQ,IACzCM,EAAQN,EAIZ,OAHGC,EAAG,IAAGK,EAAQL,EAAGM,QAAQ,GAAG,OAC5BH,EAAG,IAAGE,EAAQF,EAAGG,QAAQ,GAAG,OAC5BF,EAAG,IAAGC,EAAQD,EAAGE,QAAQ,GAAG,QAE9BN,GAAGA,EACHG,GAAGA,EACHC,GAAGA,EACHL,MAAMA,EACNM,MAAOA","file":"../../../form/uploader/_Base.js","sourcesContent":["define([\r\n\t\"dojo/dom-form\",\r\n\t\"dojo/dom-style\",\r\n\t\"dojo/dom-construct\",\r\n\t\"dojo/dom-attr\",\r\n\t\"dojo/has\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/event\",\r\n\t\"dijit/_Widget\",\r\n\t\"dijit/_TemplatedMixin\",\r\n\t\"dijit/_WidgetsInTemplateMixin\"\r\n],function(domForm, domStyle, domConstruct, domAttr, has, declare, event, Widget, TemplatedMixin, WidgetsInTemplateMixin){\r\n\r\nhas.add('FormData', function(){return !!window.FormData;});\r\nhas.add('xhr-sendAsBinary', function(){var xhr=window.XMLHttpRequest && new window.XMLHttpRequest(); return xhr && !!xhr.sendAsBinary;});\r\nhas.add('file-multiple', function(){return !!({'true':1,'false':1}[domAttr.get(document.createElement('input',{type:\"file\"}), 'multiple')]);});\r\n\r\n\r\nreturn declare(\"dojox.form.uploader._Base\", [Widget, TemplatedMixin, WidgetsInTemplateMixin], {\r\n\t// summary:\r\n\t//\t\tThe Base class used for dojox/form/Uploader and dojox/form/uploader/FileList.\r\n\t//\r\n\t//\t\tShould not be used as a standalone. To be mixed in with other classes.\r\n\t//\r\n\tgetForm: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFinds the parent form of the Uploader, if it exists.\r\n\r\n\t\tif(!this.form){\r\n\t\t\tvar n = this.domNode;\r\n\t\t\twhile(n && n.tagName && n !== document.body){\r\n\t\t\t\tif(n.tagName.toLowerCase() == \"form\"){\r\n\t\t\t\t\tthis.form = n;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tn = n.parentNode;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.form // Node;\r\n\t},\r\n\r\n\tgetUrl: function(){\r\n\t\t// summary:\r\n\t\t//\t\tFinds the URL to upload to, whether it be the action in the parent form, this.url or\r\n\t\t//\t\tthis.uploadUrl\r\n\r\n\t\tif(this.uploadUrl) this.url = this.uploadUrl;\r\n\t\tif(this.url) return this.url;\r\n\t\tif(this.getForm()) this.url = this.form.action;\r\n\t\treturn this.url; // String\r\n\t},\r\n\r\n\r\n\tconnectForm: function(){\r\n\t\t// summary:\r\n\t\t//\t\tInternal. Connects to form if there is one.\r\n\r\n\t\tthis.url = this.getUrl();\r\n\t\tif(!this._fcon && !!this.getForm()){\r\n\t\t\tthis._fcon = true;\r\n\t\t\tthis.connect(this.form, \"onsubmit\", function(evt){\r\n\t\t\t\tconsole.log('SUBMIT')\r\n\t\t\t\tevent.stop(evt);\r\n\t\t\t\tthis.submit(this.form);\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\tsupports: function(what){\r\n\t\t// summary:\r\n\t\t//\t\tDoes feature testing for uploader capabilities. (No browser sniffing - yay)\r\n\r\n\t\tswitch(what){\r\n\t\t\tcase \"multiple\":\r\n\t\t\t\tif(this.force == \"flash\" || this.force == \"iframe\") return false;\r\n\t\t\t\treturn has(\"file-multiple\");\r\n\t\t\tcase \"FormData\":\r\n\t\t\t\treturn has(what);\r\n\t\t\tcase \"sendAsBinary\":\r\n\t\t\t\treturn has(\"xhr-sendAsBinary\");\r\n\t\t}\r\n\t\treturn false; // Boolean\r\n\t},\r\n\tgetMimeType: function(){\r\n\t\t// summary:\r\n\t\t//\t\tReturns the mime type that should be used in an HTML5 upload form. Return result\r\n\t\t//\t\tmay change as the current use is very generic.\r\n\t\treturn \"application/octet-stream\"; //image/gif\r\n\t},\r\n\tgetFileType: function(/*String*/ name){\r\n\t\t// summary:\r\n\t\t//\t\tGets the extension of a file\r\n\t\treturn name.substring(name.lastIndexOf(\".\")+1).toUpperCase(); // String\r\n\t},\r\n\tconvertBytes: function(bytes){\r\n\t\t// summary:\r\n\t\t//\t\tConverts bytes. Returns an object with all conversions. The \"value\" property is\r\n\t\t//\t\tconsidered the most likely desired result.\r\n\r\n\t\tvar kb = Math.round(bytes/1024*100000)/100000;\r\n\t\tvar mb = Math.round(bytes/1048576*100000)/100000;\r\n\t\tvar gb = Math.round(bytes/1073741824*100000)/100000;\r\n\t\tvar value = bytes;\r\n\t\tif(kb>1) value = kb.toFixed(1)+\" kb\";\r\n\t\tif(mb>1) value = mb.toFixed(1)+\" mb\";\r\n\t\tif(gb>1) value = gb.toFixed(1)+\" gb\";\r\n\t\treturn {\r\n\t\t\tkb:kb,\r\n\t\t\tmb:mb,\r\n\t\t\tgb:gb,\r\n\t\t\tbytes:bytes,\r\n\t\t\tvalue: value\r\n\t\t}; // Object\r\n\t}\r\n});\r\n});\r\n"]}