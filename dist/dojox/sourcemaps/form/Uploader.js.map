{"version":3,"sources":["form/Uploader.js"],"names":["define","kernel","declare","lang","array","connect","win","domStyle","domClass","domGeometry","domAttr","domConstruct","domForm","dijit","Button","Base","HTML5","IFrame","Flash","res","template","uploadOnSelect","tabIndex","multiple","label","url","name","flashFieldName","force","uploadType","showInput","focusedClass","_nameIndex","templateString","baseClass","prototype","postMixInProperties","this","_inputs","_cons","toLowerCase","supports","inherited","arguments","buildRendering","set","domNode","overflow","position","_buildDisplay","titleNode","displayInput","create","class","autocomplete","role","containerNode","_attachPoints","push","files","f","i","r","length","value","join","startup","_buildInitialized","_getButtonStyle","_setButtonStyle","onChange","fileArray","onBegin","dataArray","onProgress","customEvent","onComplete","reset","onCancel","onAbort","onError","evtObject","upload","formData","submit","form","tagName","getForm","data","toObject","_files","_disconnectButton","forEach","destroy","_createInput","getFileList","index","size","type","n","substring","lastIndexOf","_getValueAttr","_setValueAttr","disabled","console","error","_setDisabledAttr","inputNode","node","btnSize","w","get","h","inputNodeFontSize","Math","max","ceil","_getFileFieldName","top","focusNode","aria-labelledby","id","fontSize","right","opacity","_connectButton","evt","add","remove","disconnect","splice"],"mappings":"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","file":"../../form/Uploader.js","sourcesContent":["define([\r\n\t\"dojo/_base/kernel\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/connect\",\r\n\t\"dojo/_base/window\",\r\n\t\"dojo/dom-style\",\r\n\t\"dojo/dom-class\",\r\n\t\"dojo/dom-geometry\",\r\n\t\"dojo/dom-attr\",\r\n\t\"dojo/dom-construct\",\r\n\t\"dojo/dom-form\",\r\n\t\"dijit\",\r\n\t\"dijit/form/Button\",\r\n\t\"./uploader/_Base\",\r\n\t\"./uploader/_HTML5\",\r\n\t\"./uploader/_IFrame\",\r\n\t\"./uploader/_Flash\",\r\n\t\"dojo/i18n!./nls/Uploader\",\r\n\t\"dojo/text!./resources/Uploader.html\"\r\n],function(kernel, declare, lang, array, connect, win, domStyle, domClass, domGeometry, domAttr, domConstruct,\r\n\t\t   domForm, dijit, Button, Base, HTML5, IFrame, Flash, res, template){\r\n\r\n\t// TODO:\r\n\t//\t\ti18n\r\n\t//\t\tlabel via innerHTML\r\n\t//\t\tDoc and or test what can be extended.\r\n\t//\t\tDoc custom file events\r\n\t//\t\tUse new FileReader() for thumbnails\r\n\t//\t\tflashFieldName should default to Flash\r\n\t//\t\tget('value'); and set warning\r\n\t//\t\tMake it so URL can change (current set to Flash on build)\r\n\t//\r\n\r\n\treturn declare(\"dojox.form.Uploader\", [Base, Button, HTML5, IFrame, Flash], {\r\n\t\t// summary:\r\n\t\t//\t\tA widget that creates a stylable file-input button, with optional multi-file selection,\r\n\t\t//\t\tusing only HTML elements. Non-HTML5 browsers have fallback options of Flash or an iframe.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tA bare-bones, stylable file-input button, with optional multi-file selection. The list\r\n\t\t//\t\tof files is not displayed, that is for you to handle by connecting to the onChange\r\n\t\t//\t\tevent, or use the dojox.form.uploader.FileList.\r\n\t\t//\r\n\t\t//\t\tUploader without plugins does not have any ability to upload - it is for use in forms\r\n\t\t//\t\twhere you handle the upload either by a standard POST or with Ajax using an iFrame. This\r\n\t\t//\t\tclass is for convenience of multiple files only. No progress events are available.\r\n\t\t//\r\n\t\t//\t\tIf the browser supports a file-input with the \"multiple\" attribute, that will be used.\r\n\t\t//\t\tIf the browser does not support \"multiple\" (ergo, IE) multiple inputs are used,\r\n\t\t//\t\tone for each selection.\r\n\t\t//\r\n\t\t//\t\tVersion: 1.6\r\n\t\r\n\t\r\n\t\t// uploadOnSelect: Boolean\r\n\t\t//\t\tIf true, uploads immediately after a file has been selected. If false,\r\n\t\t//\t\twaits for upload() to be called.\r\n\t\tuploadOnSelect:false,\r\n\t\r\n\t\t// tabIndex: Number|String\r\n\t\t//\t\tThe tab order in the DOM.\r\n\t\ttabIndex:0,\r\n\t\r\n\t\t// multiple: Boolean\r\n\t\t//\t\tIf true and flash mode, multiple files may be selected from the dialog.\r\n\t\tmultiple:false,\r\n\t\r\n\t\t// label: String\r\n\t\t//\t\tThe text used in the button that when clicked, opens a system Browse Dialog.\r\n\t\tlabel:res.label,\r\n\t\r\n\t\t// url: String\r\n\t\t//\t\tThe url targeted for upload. An absolute URL is preferred. Relative URLs are\r\n\t\t//\t\tchanged to absolute.\r\n\t\turl:\"\",\r\n\t\r\n\t\t// name: String\r\n\t\t//\t\tThe name attribute needs to end with square brackets: [] as this is the standard way\r\n\t\t//\t\tof handling an attribute \"array\". This requires a slightly different technique on the\r\n\t\t//\t\tserver.\r\n\t\tname:\"uploadedfile\",\r\n\t\r\n\t\t// flashFieldName: String\r\n\t\t//\t\tIf set, this will be the name of the field of the flash uploaded files that the server\r\n\t\t//\t\tis expecting. If not set, \"Flash\" is appended to the \"name\" property.\r\n\t\tflashFieldName:\"\",\r\n\t\t\r\n\t\t//\tforce: String\r\n\t\t//\t\toptions: form, html5, iframe, flash\r\n\t\t//\t\tEmpty string defaults to html5 if available, and iframe if not.\r\n\t\t// \t\tUse \"flash\" to always use Flash (and hopefully force the user to download the plugin\r\n\t\t//\t\tif they don't have it).\r\n\t\t//\t\tUse \"iframe\" to always use an iframe, and never flash nor html5. Sometimes preferred\r\n\t\t//\t\tfor consistent results.\r\n\t\t//\t\tUse \"form\" to not use ajax and post to a page.\r\n\t\tforce:\"\",\r\n\t\r\n\t\t// uploadType: String [readonly]\r\n\t\t//\t\tThe type of uploader being used. As an alternative to determining the upload type on the\r\n\t\t//\t\tserver based on the fieldName, this property could be sent to the server to help\r\n\t\t//\t\tdetermine what type of parsing should be used.\r\n\t\t//\t\tThis is set based on the force property and what features are available in the browser.\r\n\t\tuploadType:\"\",\r\n\t\r\n\t\t// showInput: String [const]\r\n\t\t//\t\tPosition to show an input which shows selected filename(s). Possible\r\n\t\t//\t\tvalues are \"before\", \"after\", which specifies where the input should\r\n\t\t//\t\tbe placed with reference to the containerNode which contains the\r\n\t\t//\t\tlabel). By default, this is empty string (no such input will be\r\n\t\t//\t\tshown). Specify showInput=\"before\" to mimic the look&feel of a\r\n\t\t//\t\tnative file input element.\r\n\t\tshowInput: \"\",\r\n\t\t\r\n\t\t//\tfocusedClass: String\r\n\t\t//\t\tThe class applied to the button when it is focused (via TAB key)\r\n\t\tfocusedClass:\"dijitButtonHover\",\r\n\t\r\n\t\t_nameIndex:0,\r\n\t\r\n\t\ttemplateString: template,\r\n\t\r\n\t\tbaseClass: 'dijitUploader '+Button.prototype.baseClass,\r\n\t\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tthis._inputs = [];\r\n\t\t\tthis._cons = [];\r\n\t\t\tthis.force = this.force.toLowerCase();\r\n\t\t\tif(this.supports(\"multiple\")){\r\n\t\t\t\tthis.uploadType = this.force === 'form' ? 'form' : 'html5';\r\n\t\t\t}else{\r\n\t\t\t\tthis.uploadType = this.force === 'flash' ? 'flash' : 'iframe';\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tdomStyle.set(this.domNode, {\r\n\t\t\t\toverflow:\"hidden\",\r\n\t\t\t\tposition:\"relative\"\r\n\t\t\t});\r\n\t\t\tthis._buildDisplay();\r\n\t\t\t//change the button node not occupy tabIndex: the real file input\r\n\t\t\t//will have tabIndex set\r\n\t\t\tdomAttr.set(this.titleNode, 'tabIndex', -1);\r\n\t\t},\r\n\t\t_buildDisplay: function(){\r\n\t\t\tif(this.showInput){\r\n\t\t\t\tthis.displayInput = domConstruct.create('input', {\r\n\t\t\t\t\t  'class':'dijitUploadDisplayInput',\r\n\t\t\t\t\t  'tabIndex':-1, 'autocomplete':'off',\r\n\t\t\t\t\t  'role':'presentation'},\r\n\t\t\t\t\tthis.containerNode, this.showInput);\r\n\t\t\t\t//schedule the attachpoint to be cleaned up on destroy\r\n\t\t\t\tthis._attachPoints.push('displayInput');\r\n\t\t\t\tthis.connect(this,'onChange', function(files){\r\n\t\t\t\t\tvar i=0,l=files.length, f, r=[];\r\n\t\t\t\t\twhile((f=files[i++])){\r\n\t\t\t\t\t\tif(f && f.name){\r\n\t\t\t\t\t\t\tr.push(f.name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.displayInput.value = r.join(', ');\r\n\t\t\t\t});\r\n\t\t\t\tthis.connect(this,'reset', function(){\r\n\t\t\t\t\tthis.displayInput.value = '';\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\tstartup: function(){\r\n\t\t\tif(this._buildInitialized){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._buildInitialized = true;\r\n\t\t\tthis._getButtonStyle(this.domNode);\r\n\t\t\tthis._setButtonStyle();\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\t\r\n\t\t/*************************\r\n\t\t *\t   Public Events\t *\r\n\t\t *************************/\r\n\t\r\n\t\tonChange: function(/*Array*/ fileArray){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tstub to connect\r\n\t\t\t//\t\tFires when files are selected\r\n\t\t\t//\t\tEvent is an array of last files selected\r\n\t\t},\r\n\t\r\n\t\tonBegin: function(/*Array*/ dataArray){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFires when upload begins\r\n\t\t},\r\n\t\r\n\t\tonProgress: function(/*Object*/ customEvent){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStub to connect\r\n\t\t\t//\t\tFires on upload progress. Event is a normalized object of common properties\r\n\t\t\t//\t\tfrom HTML5 uploaders and the Flash uploader. Will not fire for IFrame.\r\n\t\t\t// customEvent:\r\n\t\t\t//\t\t- bytesLoaded: Number:\r\n\t\t\t//\t\t\tAmount of bytes uploaded so far of entire payload (all files)\r\n\t\t\t//\t\t- bytesTotal: Number:\r\n\t\t\t//\t\t\tAmount of bytes of entire payload (all files)\r\n\t\t\t//\t\t- type: String:\r\n\t\t\t//\t\t\tType of event (progress or load)\r\n\t\t\t//\t\t- timeStamp: Number:\r\n\t\t\t//\t\t\tTimestamp of when event occurred\r\n\t\t},\r\n\t\r\n\t\tonComplete: function(/*Object*/ customEvent){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tstub to connect\r\n\t\t\t//\t\tFires when all files have uploaded\r\n\t\t\t//\t\tEvent is an array of all files\r\n\t\t\tthis.reset();\r\n\t\t},\r\n\t\r\n\t\tonCancel: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStub to connect\r\n\t\t\t//\t\tFires when dialog box has been closed\r\n\t\t\t//\t\twithout a file selection\r\n\t\t},\r\n\t\r\n\t\tonAbort: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStub to connect\r\n\t\t\t//\t\tFires when upload in progress was canceled\r\n\t\t},\r\n\t\r\n\t\tonError: function(/*Object or String*/ evtObject){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFires on errors\r\n\t\r\n\t\t\t// FIXME: Unsure of a standard form of error events\r\n\t\t},\r\n\t\r\n\t\t/*************************\r\n\t\t *\t   Public Methods\t *\r\n\t\t *************************/\r\n\t\r\n\t\tupload: function(/*Object?*/ formData){\t\t\t\t\r\n\t\t\t// summary:\r\n\t\t\t//\t\tWhen called, begins file upload. Only supported with plugins.\r\n\t\t\tformData = formData || {};\r\n\t\t\tformData.uploadType = this.uploadType;\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\t\r\n\t\tsubmit: function(/*form Node?*/ form){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tIf Uploader is in a form, and other data should be sent along with the files, use\r\n\t\t\t//\t\tthis instead of form submit.\r\n\t\t\tform = !!form ? form.tagName ? form : this.getForm() : this.getForm();\r\n\t\t\tvar data = domForm.toObject(form);\r\n\t\t\tdata.uploadType = this.uploadType;\r\n\t\t\tthis.upload(data);\r\n\t\t},\r\n\t\r\n\t\treset: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tResets entire input, clearing all files.\r\n\t\t\t//\t\tNOTE:\r\n\t\t\t//\t\tRemoving individual files is not yet supported, because the HTML5 uploaders can't\r\n\t\t\t//\t\tbe edited.\r\n\t\t\t//\t\tTODO:\r\n\t\t\t//\t\tAdd this ability by effectively, not uploading them\r\n\t\t\t//\r\n\t\t\tdelete this._files;\r\n\t\t\tthis._disconnectButton();\r\n\t\t\tarray.forEach(this._inputs, domConstruct.destroy);\r\n\t\t\tthis._inputs = [];\r\n\t\t\tthis._nameIndex = 0;\r\n\t\t\tthis._createInput();\r\n\t\t},\r\n\t\r\n\t\tgetFileList: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns a list of selected files.\r\n\t\r\n\t\t\tvar fileArray = [];\r\n\t\t\tif(this.supports(\"multiple\")){\r\n\t\t\t\tarray.forEach(this._files, function(f, i){\r\n\t\t\t\t\tfileArray.push({\r\n\t\t\t\t\t\tindex:i,\r\n\t\t\t\t\t\tname:f.name,\r\n\t\t\t\t\t\tsize:f.size,\r\n\t\t\t\t\t\ttype:f.type\r\n\t\t\t\t\t});\r\n\t\t\t\t}, this);\r\n\t\t\t}else{\r\n\t\t\t\tarray.forEach(this._inputs, function(n, i){\r\n\t\t\t\t\tif(n.value){\r\n\t\t\t\t\t\tfileArray.push({\r\n\t\t\t\t\t\t\tindex:i,\r\n\t\t\t\t\t\t\tname:n.value.substring(n.value.lastIndexOf(\"\\\\\")+1),\r\n\t\t\t\t\t\t\tsize:0,\r\n\t\t\t\t\t\t\ttype:n.value.substring(n.value.lastIndexOf(\".\")+1)\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\t\r\n\t\t\t}\r\n\t\t\treturn fileArray; // Array\r\n\t\t},\r\n\t\r\n\t\t/*********************************************\r\n\t\t *\t   Private Property. Get off my lawn.\t *\r\n\t\t *********************************************/\r\n\t\r\n\t\t_getValueAttr: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal. To get disabled use: uploader.get(\"disabled\");\r\n\t\t\treturn this.getFileList();\r\n\t\t},\r\n\t\r\n\t\t_setValueAttr: function(disabled){\r\n\t\t\tconsole.error(\"Uploader value is read only\");\r\n\t\t},\r\n\t\r\n\t\t_setDisabledAttr: function(disabled){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal. To set disabled use: uploader.set(\"disabled\", true);\r\n\t\t\tif(this.disabled == disabled || !this.inputNode){ return; }\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tdomStyle.set(this.inputNode, \"display\", disabled ? \"none\" : \"\");\r\n\t\t},\r\n\t\r\n\t\t_getButtonStyle: function(node){\r\n\t\t\tthis.btnSize = {w:domStyle.get(node,'width'), h:domStyle.get(node,'height')};\r\n\t\t},\r\n\t\r\n\t\t_setButtonStyle: function(){\r\n\t\t\tthis.inputNodeFontSize = Math.max(2, Math.max(Math.ceil(this.btnSize.w / 60), Math.ceil(this.btnSize.h / 15)));\r\n\t\t\tthis._createInput();\r\n\t\t},\r\n\t\r\n\t\t_getFileFieldName: function(){\r\n\t\t\tvar name;\r\n\t\t\tif(this.supports(\"multiple\") && this.multiple){\r\n\t\t\t\tname = this.name+\"s[]\";\r\n\t\t\t}else{\r\n\t\t\t\t// <=IE8\r\n\t\t\t\tname = this.name + (this.multiple ? this._nameIndex : \"\");\r\n\t\t\t}\r\n\t\t\treturn name;\r\n\t\t},\r\n\t\r\n\t\t_createInput: function(){\r\n\t\t\tif(this._inputs.length){\r\n\t\t\t\tdomStyle.set(this.inputNode, {\r\n\t\t\t\t\ttop:\"500px\"\r\n\t\t\t\t});\r\n\t\t\t\tthis._disconnectButton();\r\n\t\t\t\tthis._nameIndex++;\r\n\t\t\t}\r\n\t\t\tvar name = this._getFileFieldName();\r\n\t\t\t// reset focusNode to the inputNode, so when the button is clicked,\r\n\t\t\t// the focus is properly moved to the input element\r\n\t\t\tthis.focusNode = this.inputNode = domConstruct.create(\"input\", {type:\"file\", name:name, \"aria-labelledby\":this.id+\"_label\"}, this.domNode, \"first\");\r\n\t\t\tif(this.supports(\"multiple\") && this.multiple){\r\n\t\t\t\tdomAttr.set(this.inputNode, \"multiple\", true);\r\n\t\t\t}\r\n\t\t\tthis._inputs.push(this.inputNode);\r\n\t\r\n\t\t\tdomStyle.set(this.inputNode, {\r\n\t\t\t\tposition:\"absolute\",\r\n\t\t\t\tfontSize:this.inputNodeFontSize+\"em\",\r\n\t\t\t\ttop:\"-3px\",\r\n\t\t\t\tright:\"-3px\",\r\n\t\t\t\topacity:0\r\n\t\t\t});\r\n\t\t\tthis._connectButton();\r\n\t\t},\r\n\t\r\n\t\t_connectButton: function(){\r\n\t\t\tthis._cons.push(connect.connect(this.inputNode, \"change\", this, function(evt){\r\n\t\t\t\tthis._files = this.inputNode.files;\r\n\t\t\t\tthis.onChange(this.getFileList(evt));\r\n\t\t\t\tif(!this.supports(\"multiple\") && this.multiple) this._createInput();\r\n\t\t\t}));\r\n\t\r\n\t\t\tif(this.tabIndex > -1){\r\n\t\t\t\tthis.inputNode.tabIndex = this.tabIndex;\r\n\t\r\n\t\t\t\tthis._cons.push(connect.connect(this.inputNode, \"focus\", this, function(){\r\n\t\t\t\t\tdomClass.add(this.domNode, this.focusedClass);\r\n\t\t\t\t}));\r\n\t\t\t\tthis._cons.push(connect.connect(this.inputNode, \"blur\", this, function(){\r\n\t\t\t\t\tdomClass.remove(this.domNode, this.focusedClass);\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t_disconnectButton: function(){\r\n\t\t\tarray.forEach(this._cons, connect.disconnect);\r\n\t\t\tthis._cons.splice(0,this._cons.length);\r\n\t\t}\r\n\t});\r\n\r\n});\r\n"]}