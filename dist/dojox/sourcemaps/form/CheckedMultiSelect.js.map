{"version":3,"sources":["form/CheckedMultiSelect.js"],"names":["define","declare","lang","array","event","domGeometry","domClass","domConstruct","i18n","Widget","TemplatedMixin","WidgetsInTemplateMixin","registry","Menu","MenuItem","Tooltip","FormSelectWidget","ComboButton","CheckedMultiSelectMenuItem","CheckedMultiSelectItem","CheckedMultiSelect","nlsCheckedMultiSelect","formCheckedMultiSelectItem","templateString","baseClass","option","parent","disabled","readOnly","postMixInProperties","this","_type","multiple","type","inherited","arguments","postCreate","labelNode","innerHTML","label","_changeBox","get","selected","checkBox","set","value","_updateSelection","focus","_onClick","e","stop","_updateBox","_setDisabledAttr","toggle","domNode","_setReadOnlyAttr","formCheckedMultiSelectMenu","buildRendering","o","menuTableNode","n","create","style","overflowX","overflowY","parentNode","replaceChild","remove","className","setAttribute","appendChild","resize","mb","setMarginBox","width","onClose","onItemClick","item","evt","isShowingNow","_markActive","focusChild","onExecute","onClick","formCheckedMultiSelectMenuItem","iconClass","_iconClass","checked","onChange","inputNode","forEach","getChildren","required","invalidMessage","_message","dropDown","labelText","tooltipPosition","_nlsResources","getLocalization","_fillContent","options","length","srcNodeRef","si","selectedIndex","selectNode","dropDownMenu","id","hitch","startup","dropDownButton","maxHeight","comboButtonNode","_onMouseDown","preventDefault","validator","some","getOptions","opt","toString","validate","isFocused","hide","isValid","displayMessage","getErrorMessage","message","show","onAfterAddOptionItem","_addOptionItem","addChild","wrapperDiv","_refreshState","focused","newValue","reset","_handleOnChange","_getChildren","empty","containerNode","self","place","i","replace","multiSelectLabelText","num","map","childNodes","byNode","invertSelection","node","attributeMap","uninitialize","child","destroyRecursive"],"mappings":"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","file":"../../form/CheckedMultiSelect.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/event\",\r\n\t\"dojo/dom-geometry\",\r\n\t\"dojo/dom-class\",\r\n\t\"dojo/dom-construct\",\r\n\t\"dojo/i18n\",\r\n\t\"dijit/_WidgetBase\",\r\n\t\"dijit/_TemplatedMixin\",\r\n\t\"dijit/_WidgetsInTemplateMixin\",\r\n\t\"dijit/registry\",\r\n\t\"dijit/Menu\",\r\n\t\"dijit/MenuItem\",\r\n\t\"dijit/Tooltip\",\r\n\t\"dijit/form/_FormSelectWidget\",\r\n\t\"dijit/form/ComboButton\",\r\n\t\"dojo/text!dojox/form/resources/_CheckedMultiSelectMenuItem.html\",\r\n\t\"dojo/text!dojox/form/resources/_CheckedMultiSelectItem.html\",\r\n\t\"dojo/text!dojox/form/resources/CheckedMultiSelect.html\",\r\n\t\"dojo/i18n!dojox/form/nls/CheckedMultiSelect\",\r\n\t\"dijit/form/CheckBox\" // template\r\n], function(declare, lang, array, event, domGeometry, domClass, domConstruct, i18n, Widget, TemplatedMixin, WidgetsInTemplateMixin, registry, Menu, MenuItem, Tooltip, FormSelectWidget, ComboButton, CheckedMultiSelectMenuItem, CheckedMultiSelectItem, CheckedMultiSelect, nlsCheckedMultiSelect){\r\n \r\n// module:\r\n//\t\tdojox/form/CheckedMultiSelect\r\n// summary:\r\n//\t\tExtends the core dojox.form.CheckedMultiSelect to provide a \"checkbox\" selector\r\n\r\n\r\nvar formCheckedMultiSelectItem = declare(\"dojox.form._CheckedMultiSelectItem\", [Widget, TemplatedMixin, WidgetsInTemplateMixin], {\r\n\t// summary:\r\n\t//\t\tThe individual items for a CheckedMultiSelect\r\n\r\n\ttemplateString: CheckedMultiSelectItem,\r\n\r\n\tbaseClass: \"dojoxMultiSelectItem\",\r\n\r\n\t// option: dojox.form.__SelectOption\r\n\t//\t\tThe option that is associated with this item\r\n\toption: null,\r\n\tparent: null,\r\n\r\n\t// disabled: boolean\r\n\t//\t\tWhether or not this widget is disabled\r\n\tdisabled: false,\r\n\r\n\t// readOnly: boolean\r\n\t//\t\tWhether or not this widget is readOnly\r\n\treadOnly: false,\r\n\r\n\tpostMixInProperties: function(){\r\n\t\t// summary:\r\n\t\t//\t\tSet the appropriate _subClass value - based on if we are multi-\r\n\t\t//\t\tor single-select\r\n\t\tthis._type = this.parent.multiple ?\r\n\t\t\t{type: \"checkbox\", baseClass: \"dijitCheckBox\"} :\r\n\t\t\t{type: \"radio\", baseClass: \"dijitRadio\"};\r\n\t\t// use global disabled/readOnly if set to true, otherwise use per-option setting\r\n\t\tif(!this.disabled){\r\n\t\t\tthis.disabled = this.option.disabled = this.option.disabled||false;\r\n\t\t}\r\n\t\tif(!this.readOnly){\r\n\t\t\tthis.readOnly = this.option.readOnly = this.option.readOnly||false;\r\n\t\t}\r\n\t\tthis.inherited(arguments);\r\n\t},\r\n\r\n\tpostCreate: function(){\r\n\t\t// summary:\r\n\t\t//\t\tSet innerHTML here - since the template gets messed up sometimes\r\n\t\t//\t\twith rich text\r\n\t\tthis.inherited(arguments);\r\n\t\tthis.labelNode.innerHTML = this.option.label;\r\n\t},\r\n\r\n\t_changeBox: function(){\r\n\t\t// summary:\r\n\t\t//\t\tCalled to force the select to match the state of the check box\r\n\t\t//\t\t(only on click of the checkbox)\t Radio-based calls _setValueAttr\r\n\t\t//\t\tinstead.\r\n\t\tif(this.get(\"disabled\") || this.get(\"readOnly\")){ return; }\r\n\t\tif(this.parent.multiple){\r\n\t\t\tthis.option.selected = this.checkBox.get('value') && true;\r\n\t\t}else{\r\n\t\t\tthis.parent.set('value', this.option.value);\r\n\t\t}\r\n\t\t// fire the parent's change\r\n\t\tthis.parent._updateSelection();\r\n\r\n\t\t// refocus the parent\r\n\t\tthis.parent.focus();\r\n\t},\r\n\r\n\t_onClick: function(e){\r\n\t\t// summary:\r\n\t\t//\t\tSets the click state (passes through to the check box)\r\n\t\tif(this.get(\"disabled\") || this.get(\"readOnly\")){\r\n\t\t\tevent.stop(e);\r\n\t\t}else{\r\n\t\t\tthis.checkBox._onClick(e);\r\n\t\t}\r\n\t},\r\n\r\n\t_updateBox: function(){\r\n\t\t// summary:\r\n\t\t//\t\tCalled to force the box to match the state of the select\r\n\t\tthis.checkBox.set('value', this.option.selected);\r\n\t},\r\n\r\n\t_setDisabledAttr: function(value){\r\n\t\t// summary:\r\n\t\t//\t\tDisables (or enables) all the children as well\r\n\t\tthis.disabled = value||this.option.disabled;\r\n\t\tthis.checkBox.set(\"disabled\", this.disabled);\r\n\t\tdomClass.toggle(this.domNode, \"dojoxMultiSelectDisabled\", this.disabled);\r\n\t},\r\n\r\n\t_setReadOnlyAttr: function(value){\r\n\t\t// summary:\r\n\t\t//\t\tSets read only (or unsets) all the children as well\r\n\t\tthis.checkBox.set(\"readOnly\", value);\r\n\t\tthis.readOnly = value;\r\n\t}\r\n});\r\n\r\nvar formCheckedMultiSelectMenu = declare(\"dojox.form._CheckedMultiSelectMenu\", Menu, {\r\n\t// summary:\r\n\t//\t\tAn internally-used menu for dropdown that allows us a vertical scrollbar\r\n\r\n\tmultiple: false,\r\n\r\n\tbuildRendering: function(){\r\n\t\t// summary:\r\n\t\t//\t\tStub in our own changes, so that our domNode is not a table\r\n\t\t//\t\totherwise, we won't respond correctly to heights/overflows\r\n\t\tthis.inherited(arguments);\r\n\t\tvar o = (this.menuTableNode = this.domNode),\r\n\t\tn = (this.domNode = domConstruct.create(\"div\", {style: {overflowX: \"hidden\", overflowY: \"scroll\"}}));\r\n\t\tif(o.parentNode){\r\n\t\t\to.parentNode.replaceChild(n, o);\r\n\t\t}\r\n\t\tdomClass.remove(o, \"dijitMenuTable\");\r\n\t\tn.className = o.className + \" dojoxCheckedMultiSelectMenu\";\r\n\t\to.className = \"dijitReset dijitMenuTable\";\r\n\t\to.setAttribute(\"role\", \"listbox\");\r\n\t\tn.setAttribute(\"role\", \"presentation\");\r\n\t\tn.appendChild(o);\r\n\t},\r\n\r\n\tresize: function(/*Object*/ mb){\r\n\t\t// summary:\r\n\t\t//\t\tOverridden so that we are able to handle resizing our\r\n\t\t//\t\tinternal widget.  Note that this is not a \"full\" resize\r\n\t\t//\t\timplementation - it only works correctly if you pass it a\r\n\t\t//\t\tmarginBox.\r\n\t\t//\r\n\t\t// mb: Object\r\n\t\t//\t\tThe margin box to set this dropdown to.\r\n\t\tif(mb){\r\n\t\t\tdomGeometry.setMarginBox(this.domNode, mb);\r\n\t\t\tif(\"w\" in mb){\r\n\t\t\t\t// We've explicitly set the wrapper <div>'s width, so set <table> width to match.\r\n\t\t\t\t// 100% is safer than a pixel value because there may be a scroll bar with\r\n\t\t\t\t// browser/OS specific width.\r\n\t\t\t\tthis.menuTableNode.style.width = \"100%\";\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tonClose: function(){\r\n\t\tthis.inherited(arguments);\r\n\t\tif(this.menuTableNode){\r\n\t\t\t// Erase possible width: 100% setting from _SelectMenu.resize().\r\n\t\t\t// Leaving it would interfere with the next openDropDown() call, which\r\n\t\t\t// queries the natural size of the drop down.\r\n\t\t\tthis.menuTableNode.style.width = \"\";\r\n\t\t}\r\n\t},\r\n\r\n\tonItemClick: function(/*dijit._Widget*/ item, /*Event*/ evt){\r\n\t\t// summary:\r\n\t\t//\t\tHandle clicks on an item.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\t\r\n\t\t// this can't be done in _onFocus since the _onFocus events occurs asynchronously\r\n\t\tif(typeof this.isShowingNow == 'undefined'){ // non-popup menu\r\n\t\t\tthis._markActive();\r\n\t\t}\r\n\r\n\t\tthis.focusChild(item);\r\n\r\n\t\tif(item.disabled || item.readOnly){ return false; }\r\n\r\n\t\tif(!this.multiple){\r\n\t\t\t// before calling user defined handler, close hierarchy of menus\r\n\t\t\t// and restore focus to place it was when menu was opened\r\n\t\t\tthis.onExecute();\r\n\t\t}\r\n\t\t// user defined handler for click\r\n\t\titem.onClick(evt);\r\n\t}\r\n});\r\n\r\nvar formCheckedMultiSelectMenuItem = declare(\"dojox.form._CheckedMultiSelectMenuItem\", MenuItem, {\r\n\t// summary:\r\n\t//\t\tA checkbox-like menu item for toggling on and off\r\n\r\n\ttemplateString: CheckedMultiSelectMenuItem,\r\n\r\n\t// option: dojox.form.__SelectOption\r\n\t//\t\tThe option that is associated with this item\r\n\toption: null,\r\n\r\n\t// reference of dojox.form._CheckedMultiSelectMenu\r\n\tparent: null,\r\n\r\n\t// icon of the checkbox/radio button\r\n\ticonClass: \"\",\r\n\r\n\tpostMixInProperties: function(){\r\n\t\t// summary:\r\n\t\t//\t\tSet the appropriate _subClass value - based on if we are multi-\r\n\t\t//\t\tor single-select\r\n\t\tif(this.parent.multiple){\r\n\t\t\tthis._iconClass = \"dojoxCheckedMultiSelectMenuCheckBoxItemIcon\";\r\n\t\t\tthis._type = {type: \"checkbox\"};\r\n\t\t}else{\r\n\t\t\tthis._iconClass = \"\";\r\n\t\t\tthis._type = {type: \"hidden\"};\r\n\t\t}\r\n\t\tthis.disabled = this.option.disabled;\r\n\t\tthis.checked = this.option.selected;\r\n\t\tthis.label = this.option.label;\r\n\t\tthis.readOnly = this.option.readOnly;\r\n\t\tthis.inherited(arguments);\r\n\t},\r\n\r\n\tonChange: function(/*Boolean*/ checked){\r\n\t\t// summary:\r\n\t\t//\t\tUser defined function to handle check/uncheck events\r\n\t\t// tags:\r\n\t\t//\t\tcallback\r\n\t},\r\n\r\n\t_updateBox: function(){\r\n\t\t// summary:\r\n\t\t//\t\tCalled to force the box to match the state of the select\r\n\t\tdomClass.toggle(this.domNode, \"dojoxCheckedMultiSelectMenuItemChecked\", !!this.option.selected);\r\n\t\tthis.domNode.setAttribute(\"aria-checked\", this.option.selected);\r\n\t\tthis.inputNode.checked = this.option.selected;\r\n\t\tif(!this.parent.multiple){\r\n\t\t\tdomClass.toggle(this.domNode, \"dijitSelectSelectedOption\", !!this.option.selected);\r\n\t\t}\r\n\t},\r\n\r\n\t_onClick: function(/*Event*/ e){\r\n\t\t// summary:\r\n\t\t//\t\tClicking this item just toggles its state\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tif(!this.disabled && !this.readOnly){\r\n\t\t\tif(this.parent.multiple){\r\n\t\t\t\tthis.option.selected = !this.option.selected;\r\n\t\t\t\tthis.parent.onChange();\r\n\t\t\t\tthis.onChange(this.option.selected);\r\n\t\t\t}else{\r\n\t\t\t\tif(!this.option.selected){\r\n\t\t\t\t\tarray.forEach(this.parent.getChildren(), function(item){\r\n\t\t\t\t\t\titem.option.selected = false;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.option.selected = true;\r\n\t\t\t\t\tthis.parent.onChange();\r\n\t\t\t\t\tthis.onChange(this.option.selected);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.inherited(arguments);\r\n\t}\r\n});\r\n\r\nvar formCheckedMultiSelect = declare(\"dojox.form.CheckedMultiSelect\", FormSelectWidget, {\r\n\t// summary:\r\n\t//\t\tExtends the core dijit MultiSelect to provide a \"checkbox\" selector\r\n\r\n\ttemplateString: CheckedMultiSelect,\r\n\r\n\tbaseClass: \"dojoxCheckedMultiSelect\",\r\n\r\n\t// required: Boolean\r\n\t//\t\tUser is required to check at least one item.\r\n\trequired: false,\r\n\r\n\t// invalidMessage: String\r\n\t//\t\tThe message to display if value is invalid.\r\n\tinvalidMessage: \"$_unset_$\",\r\n\r\n\t// _message: String\r\n\t//\t\tCurrently displayed message\r\n\t_message: \"\",\r\n\r\n\t// dropDown: Boolean\r\n\t//\t\tDrop down version or not\r\n\tdropDown: false,\r\n\r\n\t// labelText: String\r\n\t//\t\tLabel of the drop down button\r\n\tlabelText: \"\",\r\n\r\n\t// tooltipPosition: String[]\r\n\t//\t\tSee description of `Tooltip.defaultPosition` for details on this parameter.\r\n\ttooltipPosition: [],\r\n\r\n\tpostMixInProperties: function(){\r\n\t\tthis.inherited(arguments);\r\n\t\tthis._nlsResources = i18n.getLocalization(\"dojox.form\", \"CheckedMultiSelect\", this.lang);\r\n\t\tif(this.invalidMessage == \"$_unset_$\"){ this.invalidMessage = this._nlsResources.invalidMessage; }\r\n\t},\r\n\r\n\t_fillContent: function(){\r\n\t\t// summary:\r\n\t\t//\t\tSet the value to be the first, or the selected index\r\n\t\tthis.inherited(arguments);\r\n\r\n\t\t// set value from selected option\r\n\t\tif(this.options.length && !this.value && this.srcNodeRef){\r\n\t\t\tvar si = this.srcNodeRef.selectedIndex || 0; // || 0 needed for when srcNodeRef is not a SELECT\r\n\t\t\tthis.value = this.options[si >= 0 ? si : 0].value;\r\n\t\t}\r\n\t\tif(this.dropDown){\r\n\t\t\tdomClass.toggle(this.selectNode, \"dojoxCheckedMultiSelectHidden\");\r\n\t\t\tthis.dropDownMenu = new formCheckedMultiSelectMenu({\r\n\t\t\t\tid: this.id + \"_menu\",\r\n\t\t\t\tstyle: \"display: none;\",\r\n\t\t\t\tmultiple: this.multiple,\r\n\t\t\t\tonChange: lang.hitch(this, \"_updateSelection\")\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\tstartup: function(){\r\n\t\t// summary:\r\n\t\t//\t\tSet the value to be the first, or the selected index\r\n\t\tif(this.dropDown){\r\n\t\t\tthis.dropDownButton = new ComboButton({\r\n\t\t\t\tlabel: this.labelText,\r\n\t\t\t\tdropDown: this.dropDownMenu,\r\n\t\t\t\tbaseClass: \"dojoxCheckedMultiSelectButton\",\r\n\t\t\t\tmaxHeight: this.maxHeight\r\n\t\t\t}, this.comboButtonNode);\r\n\t\t}\r\n\t\tthis.inherited(arguments);\r\n\t},\r\n\r\n\t_onMouseDown: function(e){\r\n\t\t// summary:\r\n\t\t//\t\tCancels the mousedown event to prevent others from stealing\r\n\t\t//\t\tfocus\r\n\t\te.preventDefault();\r\n\t},\r\n\r\n\tvalidator: function(){\r\n\t\t// summary:\r\n\t\t//\t\tOverridable function used to validate that an item is selected if required =\r\n\t\t//\t\ttrue.\r\n\t\t// tags:\r\n\t\t//\t\tprotected\r\n\t\tif(!this.required){ return true; }\r\n\t\treturn array.some(this.getOptions(), function(opt){\r\n\t\t\treturn opt.selected && opt.value != null && opt.value.toString().length != 0;\r\n\t\t});\r\n\t},\r\n\r\n\tvalidate: function(isFocused){\r\n\t\tTooltip.hide(this.domNode);\r\n\t\tvar isValid = this.isValid(isFocused);\r\n\t\tif(!isValid){ this.displayMessage(this.invalidMessage); }\r\n\t\treturn isValid;\r\n\t},\r\n\r\n\tisValid: function(/*Boolean*/ isFocused){\r\n\t\t// summary:\r\n\t\t//\t\tTests if the required items are selected.\r\n\t\t//\t\tCan override with your own routine in a subclass.\r\n\t\t// tags:\r\n\t\t//\t\tprotected\r\n\t\treturn this.validator();\r\n\t},\r\n\r\n\tgetErrorMessage: function(/*Boolean*/ isFocused){\r\n\t\t// summary:\r\n\t\t//\t\tReturn an error message to show if appropriate\r\n\t\t// tags:\r\n\t\t//\t\tprotected\r\n\t\treturn this.invalidMessage;\r\n\t},\r\n\r\n\tdisplayMessage: function(/*String*/ message){\r\n\t\t// summary:\r\n\t\t//\t\tOverridable method to display validation errors/hints.\r\n\t\t//\t\tBy default uses a tooltip.\r\n\t\t// tags:\r\n\t\t//\t\textension\r\n\t\tTooltip.hide(this.domNode);\r\n\t\tif(message){\r\n\t\t\tTooltip.show(message, this.domNode, this.tooltipPosition);\r\n\t\t}\r\n\t},\r\n\r\n\tonAfterAddOptionItem: function(item, option){\r\n\t\t// summary:\r\n\t\t//\t\ta function that can be connected to in order to receive a\r\n\t\t//\t\tnotification that an item as been added to this dijit.\r\n\t},\r\n\r\n\t_addOptionItem: function(/*dojox.form.__SelectOption*/ option){\r\n\t\tvar item;\r\n\t\tif(this.dropDown){\r\n\t\t\titem = new formCheckedMultiSelectMenuItem({\r\n\t\t\t\toption: option,\r\n\t\t\t\tparent: this.dropDownMenu\r\n\t\t\t});\r\n\t\t\tthis.dropDownMenu.addChild(item);\r\n\t\t}else{\r\n\t\t\titem = new formCheckedMultiSelectItem({\r\n\t\t\t\toption: option,\r\n\t\t\t\tparent: this,\r\n\t\t\t\tdisabled: this.disabled,\r\n\t\t\t\treadOnly: this.readOnly\r\n\t\t\t});\r\n\t\t\tthis.wrapperDiv.appendChild(item.domNode);\r\n\t\t}\r\n\t\tthis.onAfterAddOptionItem(item, option);\r\n\t},\r\n\r\n\t_refreshState: function(){\r\n\t\t// summary:\r\n\t\t//\t\tValidate if selection changes.\r\n\t\tthis.validate(this.focused);\r\n\t},\r\n\r\n\tonChange: function(newValue){\r\n\t\t// summary:\r\n\t\t//\t\tValidate if selection changes.\r\n\t\tthis._refreshState();\r\n\t},\r\n\r\n\treset: function(){\r\n\t\t// Overridden so that the state will be cleared.\r\n\t\tthis.inherited(arguments);\r\n\t\tTooltip.hide(this.domNode);\r\n\t},\r\n\r\n\t_updateSelection: function(){\r\n\t\tthis.inherited(arguments);\r\n\t\tthis._handleOnChange(this.value);\r\n\t\tarray.forEach(this._getChildren(), function(item){\r\n\t\t\titem._updateBox();\r\n\t\t});\r\n\t\tdomConstruct.empty(this.containerNode);\r\n\t\tvar self = this;\r\n\t\tarray.forEach(this.value, function(item){\r\n\t\t\tvar opt = domConstruct.create(\"option\", {\r\n\t\t\t\t\"value\": item,\r\n\t\t\t\t\"label\": item,\r\n\t\t\t\t\"selected\": \"selected\"\r\n\t\t\t});\r\n\t\t\tdomConstruct.place(opt, self.containerNode);\r\n\t\t});\r\n\t\tif(this.dropDown && this.dropDownButton){\r\n\t\t\tvar i = 0, label = \"\";\r\n\t\t\tarray.forEach(this.options, function(option){\r\n\t\t\t\tif(option.selected){\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tlabel = option.label;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.dropDownButton.set(\"label\", this.multiple ?\r\n\t\t\t\tlang.replace(this._nlsResources.multiSelectLabelText, {num: i}) :\r\n\t\t\t\tlabel);\r\n\t\t}\r\n\t},\r\n\r\n\t_getChildren: function(){\r\n\t\tif(this.dropDown){\r\n\t\t\treturn this.dropDownMenu.getChildren();\r\n\t\t}else{\r\n\t\t\treturn array.map(this.wrapperDiv.childNodes, function(n){\r\n\t\t\t\treturn registry.byNode(n);\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\tinvertSelection: function(onChange){\r\n\t\t// summary:\r\n\t\t//\t\tInvert the selection\r\n\t\t// onChange: Boolean\r\n\t\t//\t\tIf null, onChange is not fired.\r\n\t\tif(this.multiple){\r\n\t\t\tarray.forEach(this.options, function(i){\r\n\t\t\t\ti.selected = !i.selected;\r\n\t\t\t});\r\n\t\t\tthis._updateSelection();\r\n\t\t}\r\n\t},\r\n\r\n\t_setDisabledAttr: function(value){\r\n\t\t// summary:\r\n\t\t//\t\tDisable (or enable) all the children as well\r\n\t\tthis.inherited(arguments);\r\n\t\tif(this.dropDown){\r\n\t\t\tthis.dropDownButton.set(\"disabled\", value);\r\n\t\t}\r\n\t\tarray.forEach(this._getChildren(), function(node){\r\n\t\t\tif(node && node.set){\r\n\t\t\t\tnode.set(\"disabled\", value);\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\t_setReadOnlyAttr: function(value){\r\n\t\t// summary:\r\n\t\t//\t\tSets read only (or unsets) all the children as well\r\n\t\tthis.inherited(arguments);\r\n\t\tif(\"readOnly\" in this.attributeMap){\r\n\t\t\tthis[this.attributeMap.readOnly].setAttribute(\"readonly\", value);\r\n\t\t}\r\n\t\tthis.readOnly = value;\r\n\t\tarray.forEach(this._getChildren(), function(node){\r\n\t\t\tif(node && node.set){\r\n\t\t\t\tnode.set(\"readOnly\", value);\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tuninitialize: function(){\r\n\t\tTooltip.hide(this.domNode);\r\n\t\t// Make sure these children are destroyed\r\n\t\tarray.forEach(this._getChildren(), function(child){\r\n\t\t\tchild.destroyRecursive();\r\n\t\t});\r\n\t\tthis.inherited(arguments);\r\n\t}\r\n});\r\n\r\nreturn formCheckedMultiSelect;\r\n});\r\n"]}