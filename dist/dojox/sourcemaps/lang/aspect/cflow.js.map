{"version":3,"sources":["lang/aspect/cflow.js"],"names":["dojo","provide","aop","dojox","lang","aspect","cflow","instance","method","arguments","length","Array","contextStack","getContextStack","i","c","n","joinPoint","targetName","j","m","RegExp","test"],"mappings":";;;;;;;AAAAA,KAAKC,QAAQ,2BAGb,WACC,IAAIC,EAAMC,MAAMC,KAAKC,OAErBH,EAAII,MAAQ,SAAoBC,EAAmCC,GAc/DC,UAAUC,OAAS,KAAOF,aAAkBG,SAC9CH,GAAUA,IAIX,IADA,IAAII,EAAeV,EAAIW,kBACfC,EAAIF,EAAaF,OAAS,EAAGI,GAAK,IAAKA,EAAE,CAChD,IAAIC,EAAIH,EAAaE,GAErB,IAAGP,GAAYQ,EAAER,UAAYA,EAA7B,CACA,IAAIC,EAAS,OAAO,EAEpB,IADA,IAAIQ,EAAID,EAAEE,UAAUC,WACZC,EAAIX,EAAOE,OAAS,EAAGS,GAAK,IAAKA,EAAE,CAC1C,IAAIC,EAAIZ,EAAOW,GACf,GAAGC,aAAaC,QACf,GAAGD,EAAEE,KAAKN,GAAK,OAAO,OAEtB,GAAGA,GAAKI,EAAI,OAAO,IAItB,OAAO,GArCT","file":"../../../lang/aspect/cflow.js","sourcesContent":["dojo.provide(\"dojox.lang.aspect.cflow\");\r\n\r\n\r\n(function(){\r\n\tvar aop = dojox.lang.aspect;\r\n\t\r\n\taop.cflow = function(/*Object*/ instance, /*String|RegExp|Array?*/ method){\r\n\t\t// summary:\r\n\t\t//\t\tReturns true if the context stack contains a context for a given\r\n\t\t//\t\tinstance that satisfies a given method name criteria.\r\n\t\t//\r\n\t\t// instance:\r\n\t\t//\t\tAn instance to be matched. If null, any context will be examined.\r\n\t\t//\t\tOtherwise the context should belong to this instance.\r\n\t\t//\r\n\t\t// method:\r\n\t\t//\t\tAn optional pattern to be matched against a method name. Can be a string,\r\n\t\t//\t\ta RegExp object or an array of strings and RegExp objects.\r\n\t\t//\t\tIf it is omitted, any name will satisfy the criteria.\r\n\t\r\n\t\tif(arguments.length > 1 && !(method instanceof Array)){\r\n\t\t\tmethod = [method];\r\n\t\t}\r\n\t\r\n\t\tvar contextStack = aop.getContextStack();\r\n\t\tfor(var i = contextStack.length - 1; i >= 0; --i){\r\n\t\t\tvar c = contextStack[i];\r\n\t\t\t// check if instance matches\r\n\t\t\tif(instance && c.instance != instance){ continue; }\r\n\t\t\tif(!method){ return true; }\r\n\t\t\tvar n = c.joinPoint.targetName;\r\n\t\t\tfor(var j = method.length - 1; j >= 0; --j){\r\n\t\t\t\tvar m = method[j];\r\n\t\t\t\tif(m instanceof RegExp){\r\n\t\t\t\t\tif(m.test(n)){ return true; }\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(n == m){ return true; }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\t// Boolean\r\n\t};\r\n})();"]}