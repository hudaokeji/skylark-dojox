{"version":3,"sources":["lang/aspect/tracer.js"],"names":["dojo","provide","aop","dojox","lang","aspect","Tracer","grouping","this","method","after","_after","extend","before","context","getContext","joinPoint","args","Array","prototype","join","call","arguments","console","instance","targetName","afterReturning","retVal","log","afterThrowing","excp","groupEnd","tracer"],"mappings":";;;;;;;AAAAA,KAAKC,QAAQ,4BAEb,WACC,IAAIC,EAAMC,MAAMC,KAAKC,OAEjBC,EAAS,SAAqBC,GACjCC,KAAKC,OAAWF,EAAW,QAAU,MAClCA,IACFC,KAAKE,MAAQF,KAAKG,SAGpBX,KAAKY,OAAON,GACXO,OAAQ,WACP,IAAIC,EAAUZ,EAAIa,aAAcC,EAAYF,EAAQE,UACnDC,EAAOC,MAAMC,UAAUC,KAAKC,KAAKC,UAAW,MAC7CC,QAAQf,KAAKC,QAAQK,EAAQU,SAAU,KAAMR,EAAUS,WAAa,IAAMR,EAAO,MAElFS,eAAgB,SAASC,GACxB,IAAIX,EAAYd,EAAIa,aAAaC,eACb,IAAVW,EACTJ,QAAQK,IAAIZ,EAAUS,WAAa,cAAeE,GAElDJ,QAAQK,IAAIZ,EAAUS,WAAa,eAGrCI,cAAe,SAASC,GACvBP,QAAQK,IAAI1B,EAAIa,aAAaC,UAAUS,WAAa,aAAcK,IAEnEnB,OAAQ,SAASmB,GAChBP,QAAQQ,cAIV7B,EAAI8B,OAAS,SAAqBzB,GAQjC,OAAO,IAAID,EAAOC,IAvCpB","file":"../../../lang/aspect/tracer.js","sourcesContent":["dojo.provide(\"dojox.lang.aspect.tracer\");\r\n\r\n(function(){\r\n\tvar aop = dojox.lang.aspect;\r\n\t\r\n\tvar Tracer = function(/*Boolean*/ grouping){\r\n\t\tthis.method   = grouping ? \"group\" : \"log\";\r\n\t\tif(grouping){\r\n\t\t\tthis.after = this._after;\r\n\t\t}\r\n\t};\r\n\tdojo.extend(Tracer, {\r\n\t\tbefore: function(/*arguments*/){\r\n\t\t\tvar context = aop.getContext(), joinPoint = context.joinPoint,\r\n\t\t\t\targs = Array.prototype.join.call(arguments, \", \");\r\n\t\t\tconsole[this.method](context.instance, \"=>\", joinPoint.targetName + \"(\" + args + \")\");\r\n\t\t},\r\n\t\tafterReturning: function(retVal){\r\n\t\t\tvar joinPoint = aop.getContext().joinPoint;\r\n\t\t\tif(typeof retVal != \"undefined\"){\r\n\t\t\t\tconsole.log(joinPoint.targetName + \"() returns:\", retVal);\r\n\t\t\t}else{\r\n\t\t\t\tconsole.log(joinPoint.targetName + \"() returns\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tafterThrowing: function(excp){\r\n\t\t\tconsole.log(aop.getContext().joinPoint.targetName + \"() throws:\", excp);\r\n\t\t},\r\n\t\t_after: function(excp){\r\n\t\t\tconsole.groupEnd();\r\n\t\t}\r\n\t});\r\n\t\r\n\taop.tracer = function(/*Boolean*/ grouping){\r\n\t\t// summary:\r\n\t\t//\t\tReturns an object, which can be used to trace calls with Firebug's console.\r\n\t\t//\t\tPrints argument, a return value, or an exception.\r\n\t\t//\r\n\t\t// grouping:\r\n\t\t//\t\tThe flag to group output. If true, indents embedded console messages.\r\n\t\r\n\t\treturn new Tracer(grouping);\t// Object\r\n\t};\r\n})();"]}