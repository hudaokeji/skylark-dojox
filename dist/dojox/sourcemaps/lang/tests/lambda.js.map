{"version":3,"sources":["lang/tests/lambda.js"],"names":["dojo","provide","require","df","dojox","lang","functional","tests","register","t","assertEqual","repeat","n"],"mappings":";;;;;;;AAAAA,KAAKC,QAAQ,2BAEbD,KAAKE,QAAQ,yBACbF,KAAKE,QAAQ,kCAEb,WACC,IAAIC,EAAKC,MAAMC,KAAKC,WACpBC,MAAMC,SAAS,2BACd,SAAqBC,GAAIA,EAAEC,YAAYP,EAAGQ,OAAO,EAAG,KAAM,IAAK,EAAG,EAAG,KACrE,SAAqBF,GAAIA,EAAEC,YAAYP,EAAGQ,OAAO,EAAG,KAAM,IAAK,EAAG,EAAG,KACrE,SAAqBF,GAAIA,EAAEC,YAAYP,EAAGQ,OAAO,EAAG,MAAO,IAAK,EAAG,EAAG,KACtE,SAAqBF,GAAIA,EAAEC,YAAYP,EAAGQ,OAAO,EAAG,MAAO,IAAK,EAAG,EAAG,KACtE,SAAqBF,GAAIA,EAAEC,YAAYP,EAAGQ,OAAO,EAAG,SAAU,IAAK,EAAG,EAAG,KACzE,SAAqBF,GAAIA,EAAEC,YAAYP,EAAGQ,OAAO,EAAG,MAAO,IAAK,EAAG,EAAG,KACtE,SAAqBF,GAAIA,EAAEC,YAAYP,EAAGQ,OAAO,EAAG,MAAO,IAAK,EAAG,EAAG,KACtE,SAAqBF,GAAIA,EAAEC,YAAYP,EAAGQ,OAAO,EAAG,MAAO,IAAK,EAAG,EAAG,KACtE,SAAqBF,GAAIA,EAAEC,YAAYP,EAAGQ,OAAO,EAAG,SAASC,GAAI,OAAW,EAAJA,GAAU,IAAK,EAAG,EAAG,KAC7F,SAAsBH,GAAIA,EAAEC,YAAYP,EAAGQ,OAAO,GAAI,OAAQ,OAAQ,IAAK,EAAG,EAAG,OAZnF","file":"../../../lang/tests/lambda.js","sourcesContent":["dojo.provide(\"dojox.lang.tests.lambda\");\r\n\r\ndojo.require(\"dojox.lang.functional\");\r\ndojo.require(\"dojox.lang.functional.sequence\");\r\n\r\n(function(){\r\n\tvar df = dojox.lang.functional;\r\n\ttests.register(\"dojox.lang.tests.lambda\", [\r\n\t\tfunction testLambda1(t){ t.assertEqual(df.repeat(3, \"3*\", 1), [1, 3, 9]); },\r\n\t\tfunction testLambda2(t){ t.assertEqual(df.repeat(3, \"*3\", 1), [1, 3, 9]); },\r\n\t\tfunction testLambda3(t){ t.assertEqual(df.repeat(3, \"_*3\", 1), [1, 3, 9]); },\r\n\t\tfunction testLambda4(t){ t.assertEqual(df.repeat(3, \"3*_\", 1), [1, 3, 9]); },\r\n\t\tfunction testLambda5(t){ t.assertEqual(df.repeat(3, \"n->n*3\", 1), [1, 3, 9]); },\r\n\t\tfunction testLambda6(t){ t.assertEqual(df.repeat(3, \"n*3\", 1), [1, 3, 9]); },\r\n\t\tfunction testLambda7(t){ t.assertEqual(df.repeat(3, \"3*m\", 1), [1, 3, 9]); },\r\n\t\tfunction testLambda8(t){ t.assertEqual(df.repeat(3, \"->1\", 1), [1, 1, 1]); },\r\n\t\tfunction testLambda9(t){ t.assertEqual(df.repeat(3, function(n){ return n * 3; }, 1), [1, 3, 9]); },\r\n\t\tfunction testLambda10(t){ t.assertEqual(df.repeat(3, [\"_-1\", [\"*3\"]], 1), [1, 2, 5]); }\r\n\t]);\r\n})();\r\n"]}