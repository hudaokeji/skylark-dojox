{"version":3,"sources":["lang/functional/scan.js"],"names":["define","kernel","lang","df","empty","mixin","scanl","a","f","z","o","t","n","i","split","global","lambda","isArray","Array","length","call","hasNext","next","push","scanl1","first","scanr","scanr1"],"mappings":";;;;;;;AAAAA,QAAQ,oBAAqB,kBAAmB,YAAa,SAASC,EAAQC,EAAMC,GAenF,IAAIC,KAEJF,EAAKG,MAAMF,GAEVG,MAAO,SAAiCC,EAA6BC,EAAcC,EAAeC,GAOjG,IAAIC,EAAGC,EAAGC,EACV,GAHe,iBAALN,IAAgBA,EAAIA,EAAEO,MAAM,KACtCJ,EAAIA,GAAKT,EAAOc,OAAQP,EAAIL,EAAGa,OAAOR,GAEnCN,EAAKe,QAAQV,GAIf,KAFAI,EAAI,IAAIO,OAAON,EAAIL,EAAEY,QAAU,IAC7B,GAAKV,EACHI,EAAI,EAAGA,EAAID,EAAGH,EAAID,EAAEY,KAAKV,EAAGD,EAAGF,EAAEM,GAAIA,EAAGN,GAAII,IAAIE,GAAKJ,QACpD,GAAuB,mBAAbF,EAAEc,SAA0C,mBAAVd,EAAEe,KAGnD,IADAX,GAAKF,GACDI,EAAI,EAAGN,EAAEc,UAAWV,EAAEY,KAAKd,EAAID,EAAEY,KAAKV,EAAGD,EAAGF,EAAEe,OAAQT,IAAKN,UAI/D,IAAIM,KADJF,GAAKF,GACIF,EACHM,KAAKT,GACTO,EAAEY,KAAKd,EAAID,EAAEY,KAAKV,EAAGD,EAAGF,EAAEM,GAAIA,EAAGN,IAIpC,OAAOI,GAERa,OAAQ,SAAiCjB,EAA6BC,EAAeE,GAKrE,iBAALH,IAAgBA,EAAIA,EAAEO,MAAM,KACtCJ,EAAIA,GAAKT,EAAOc,OAAQP,EAAIL,EAAGa,OAAOR,GACtC,IAAIG,EAAGC,EAAGH,EAAGgB,GAAQ,EACrB,GAAGvB,EAAKe,QAAQV,GAAG,EAElBI,EAAI,IAAIO,MAAMN,EAAIL,EAAEY,SAClB,GAAKV,EAAIF,EAAE,GACb,IAAI,IAAIM,EAAI,EAAGA,EAAID,EAAGD,EAAEE,GAAKJ,EAAID,EAAEY,KAAKV,EAAGD,EAAGF,EAAEM,GAAIA,EAAGN,KAAMM,SACxD,GAAuB,mBAAbN,EAAEc,SAA0C,mBAAVd,EAAEe,MAEnD,GAAGf,EAAEc,UAEJ,IADAV,GAAKF,EAAIF,EAAEe,QACPT,EAAI,EAAGN,EAAEc,UAAWV,EAAEY,KAAKd,EAAID,EAAEY,KAAKV,EAAGD,EAAGF,EAAEe,OAAQT,IAAKN,WAIhE,IAAIM,KAAKN,EACHM,KAAKT,IACNqB,GACFd,GAAKF,EAAIF,EAAEM,IACXY,GAAQ,GAERd,EAAEY,KAAKd,EAAID,EAAEY,KAAKV,EAAGD,EAAGF,EAAEM,GAAIA,EAAGN,KAKrC,OAAOI,GAERe,MAAO,SAA0BnB,EAA6BC,EAAcC,EAAeC,GAK3E,iBAALH,IAAgBA,EAAIA,EAAEO,MAAM,KACtCJ,EAAIA,GAAKT,EAAOc,OAAQP,EAAIL,EAAGa,OAAOR,GACtC,IAAII,EAAIL,EAAEY,OAAQR,EAAI,IAAIO,MAAMN,EAAI,GAAIC,EAAID,EAE5C,IADAD,EAAEC,GAAKH,EACDI,EAAI,IAAKA,EAAGJ,EAAID,EAAEY,KAAKV,EAAGD,EAAGF,EAAEM,GAAIA,EAAGN,GAAII,EAAEE,GAAKJ,GACvD,OAAOE,GAERgB,OAAQ,SAA0BpB,EAA6BC,EAAeE,GAK9D,iBAALH,IAAgBA,EAAIA,EAAEO,MAAM,KACtCJ,EAAIA,GAAKT,EAAOc,OAAQP,EAAIL,EAAGa,OAAOR,GACtC,IAAII,EAAIL,EAAEY,OAAQR,EAAI,IAAIO,MAAMN,GAAIH,EAAIF,EAAEK,EAAI,GAAIC,EAAID,EAAI,EAE1D,IADAD,EAAEE,GAAKJ,EACDI,EAAI,IAAKA,EAAGJ,EAAID,EAAEY,KAAKV,EAAGD,EAAGF,EAAEM,GAAIA,EAAGN,GAAII,EAAEE,GAAKJ,GACvD,OAAOE","file":"../../../lang/functional/scan.js","sourcesContent":["define([\"dojo/_base/kernel\", \"dojo/_base/lang\", \"./lambda\"], function(kernel, lang, df){\r\n\r\n// This module adds high-level functions and related constructs:\r\n//\t- \"scan\" family of functions\r\n\r\n// Notes:\r\n//\t- missing high-level functions are provided with the compatible API:\r\n//\t\tscanl, scanl1, scanr, scanr1\r\n\r\n// Defined methods:\r\n//\t- take any valid lambda argument as the functional argument\r\n//\t- operate on dense arrays\r\n//\t- take a string as the array argument\r\n//\t- take an iterator objects as the array argument (only scanl, and scanl1)\r\n\r\n\tvar empty = {};\r\n\r\n\tlang.mixin(df, {\r\n\t\t// classic reduce-class functions\r\n\t\tscanl: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object*/ z, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\trepeatedly applies a binary function to an array from left\r\n\t\t\t//\t\tto right using a seed value as a starting point; returns an array\r\n\t\t\t//\t\tof values produced by foldl() at that point.\r\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tvar t, n, i;\r\n\t\t\tif(lang.isArray(a)){\r\n\t\t\t\t// array\r\n\t\t\t\tt = new Array((n = a.length) + 1);\r\n\t\t\t\tt[0] = z;\r\n\t\t\t\tfor(i = 0; i < n; z = f.call(o, z, a[i], i, a), t[++i] = z);\r\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\r\n\t\t\t\t// iterator\r\n\t\t\t\tt = [z];\r\n\t\t\t\tfor(i = 0; a.hasNext(); t.push(z = f.call(o, z, a.next(), i++, a)));\r\n\t\t\t}else{\r\n\t\t\t\t// object/dictionary\r\n\t\t\t\tt = [z];\r\n\t\t\t\tfor(i in a){\r\n\t\t\t\t\tif(!(i in empty)){\r\n\t\t\t\t\t\tt.push(z = f.call(o, z, a[i], i, a));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn t;\t// Array\r\n\t\t},\r\n\t\tscanl1: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\trepeatedly applies a binary function to an array from left\r\n\t\t\t//\t\tto right; returns an array of values produced by foldl1() at that\r\n\t\t\t//\t\tpoint.\r\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tvar t, n, z, first = true;\r\n\t\t\tif(lang.isArray(a)){\r\n\t\t\t\t// array\r\n\t\t\t\tt = new Array(n = a.length);\r\n\t\t\t\tt[0] = z = a[0];\r\n\t\t\t\tfor(var i = 1; i < n; t[i] = z = f.call(o, z, a[i], i, a), ++i);\r\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\r\n\t\t\t\t// iterator\r\n\t\t\t\tif(a.hasNext()){\r\n\t\t\t\t\tt = [z = a.next()];\r\n\t\t\t\t\tfor(i = 1; a.hasNext(); t.push(z = f.call(o, z, a.next(), i++, a)));\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// object/dictionary\r\n\t\t\t\tfor(i in a){\r\n\t\t\t\t\tif(!(i in empty)){\r\n\t\t\t\t\t\tif(first){\r\n\t\t\t\t\t\t\tt = [z = a[i]];\r\n\t\t\t\t\t\t\tfirst = false;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tt.push(z = f.call(o, z, a[i], i, a));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn t;\t// Array\r\n\t\t},\r\n\t\tscanr: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object*/ z, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\trepeatedly applies a binary function to an array from right\r\n\t\t\t//\t\tto left using a seed value as a starting point; returns an array\r\n\t\t\t//\t\tof values produced by foldr() at that point.\r\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tvar n = a.length, t = new Array(n + 1), i = n;\r\n\t\t\tt[n] = z;\r\n\t\t\tfor(; i > 0; --i, z = f.call(o, z, a[i], i, a), t[i] = z);\r\n\t\t\treturn t;\t// Array\r\n\t\t},\r\n\t\tscanr1: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\trepeatedly applies a binary function to an array from right\r\n\t\t\t//\t\tto left; returns an array of values produced by foldr1() at that\r\n\t\t\t//\t\tpoint.\r\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tvar n = a.length, t = new Array(n), z = a[n - 1], i = n - 1;\r\n\t\t\tt[i] = z;\r\n\t\t\tfor(; i > 0; --i, z = f.call(o, z, a[i], i, a), t[i] = z);\r\n\t\t\treturn t;\t// Array\r\n\t\t}\r\n\t});\r\n});\r\n"]}