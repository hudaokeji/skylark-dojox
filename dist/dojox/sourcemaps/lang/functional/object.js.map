{"version":3,"sources":["lang/functional/object.js"],"names":["define","kernel","lang","df","empty","mixin","keys","obj","t","i","push","values","filterIn","f","o","global","lambda","v","call","forIn","mapIn"],"mappings":";;;;;;;AAAAA,QAAQ,oBAAqB,kBAAmB,YAAa,SAASC,EAAQC,EAAMC,GAUnF,IAAIC,KAkEJ,OAhEAF,EAAKG,MAAMF,GAEVG,KAAM,SAAoBC,GAGzB,IAAIC,KACJ,IAAI,IAAIC,KAAKF,EACPE,KAAKL,GACTI,EAAEE,KAAKD,GAGT,OAAOD,GAERG,OAAQ,SAAoBJ,GAG3B,IAAIC,KACJ,IAAI,IAAIC,KAAKF,EACPE,KAAKL,GACTI,EAAEE,KAAKH,EAAIE,IAGb,OAAOD,GAERI,SAAU,SAAoBL,EAA+BM,EAAeC,GAI3EA,EAAIA,GAAKb,EAAOc,OAAQF,EAAIV,EAAGa,OAAOH,GACtC,IAAYI,EAAGR,EAAXD,KACJ,IAAIC,KAAKF,EACHE,KAAKL,IACTa,EAAIV,EAAIE,GACLI,EAAEK,KAAKJ,EAAGG,EAAGR,EAAGF,KAAOC,EAAEC,GAAKQ,IAGnC,OAAOT,GAERW,MAAO,SAAoBZ,EAA+BM,EAAeC,GAIxE,IAAI,IAAIL,KADRK,EAAIA,GAAKb,EAAOc,OAAQF,EAAIV,EAAGa,OAAOH,GACzBN,EACPE,KAAKL,GACTS,EAAEK,KAAKJ,EAAGP,EAAIE,GAAIA,EAAGF,GAGvB,OAAOO,GAERM,MAAO,SAAoBb,EAA+BM,EAAeC,GAIxEA,EAAIA,GAAKb,EAAOc,OAAQF,EAAIV,EAAGa,OAAOH,GACtC,IAAYJ,EAARD,KACJ,IAAIC,KAAKF,EACHE,KAAKL,IACTI,EAAEC,GAAKI,EAAEK,KAAKJ,EAAGP,EAAIE,GAAIA,EAAGF,IAG9B,OAAOC,KAIFL","file":"../../../lang/functional/object.js","sourcesContent":["define([\"dojo/_base/kernel\", \"dojo/_base/lang\", \"./lambda\"], function(kernel, lang, df){\r\n\r\n// This module adds high-level functions and related constructs:\r\n//\t- object/dictionary helpers\r\n\r\n// Defined methods:\r\n//\t- take any valid lambda argument as the functional argument\r\n//\t- skip all attributes that are present in the empty object\r\n//\t\t(IE and/or 3rd-party libraries).\r\n\r\n\tvar empty = {};\r\n\r\n\tlang.mixin(df, {\r\n\t\t// object helpers\r\n\t\tkeys: function(/*Object*/ obj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns an array of all keys in the object\r\n\t\t\tvar t = [];\r\n\t\t\tfor(var i in obj){\r\n\t\t\t\tif(!(i in empty)){\r\n\t\t\t\t\tt.push(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn\tt; // Array\r\n\t\t},\r\n\t\tvalues: function(/*Object*/ obj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns an array of all values in the object\r\n\t\t\tvar t = [];\r\n\t\t\tfor(var i in obj){\r\n\t\t\t\tif(!(i in empty)){\r\n\t\t\t\t\tt.push(obj[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn\tt; // Array\r\n\t\t},\r\n\t\tfilterIn: function(/*Object*/ obj, /*Function|String|Array*/ f, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreates new object with all attributes that pass the test\r\n\t\t\t//\t\timplemented by the provided function.\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tvar t = {}, v, i;\r\n\t\t\tfor(i in obj){\r\n\t\t\t\tif(!(i in empty)){\r\n\t\t\t\t\tv = obj[i];\r\n\t\t\t\t\tif(f.call(o, v, i, obj)){ t[i] = v; }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn t;\t// Object\r\n\t\t},\r\n\t\tforIn: function(/*Object*/ obj, /*Function|String|Array*/ f, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\titerates over all object attributes.\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tfor(var i in obj){\r\n\t\t\t\tif(!(i in empty)){\r\n\t\t\t\t\tf.call(o, obj[i], i, obj);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn o;\t// Object\r\n\t\t},\r\n\t\tmapIn: function(/*Object*/ obj, /*Function|String|Array*/ f, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreates new object with the results of calling\r\n\t\t\t//\t\ta provided function on every attribute in this object.\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tvar t = {}, i;\r\n\t\t\tfor(i in obj){\r\n\t\t\t\tif(!(i in empty)){\r\n\t\t\t\t\tt[i] = f.call(o, obj[i], i, obj);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn t;\t// Object\r\n\t\t}\r\n\t});\r\n\t\r\n\treturn df;\r\n});\r\n"]}