{"version":3,"sources":["lang/functional/array.js"],"names":["define","kernel","lang","arr","df","empty","mixin","filter","a","f","o","split","global","lambda","v","i","n","t","isArray","length","call","push","hasNext","next","forEach","map","Array","every","some"],"mappings":"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","file":"../../../lang/functional/array.js","sourcesContent":["define([\"dojo/_base/kernel\", \"dojo/_base/lang\", \"dojo/_base/array\", \"./lambda\"],\r\n\tfunction(kernel, lang, arr, df){\r\n\r\n// This module adds high-level functions and related constructs:\r\n//\t- array-processing functions similar to standard JS functions\r\n\r\n// Notes:\r\n//\t- this module provides JS standard methods similar to high-level functions in dojo/_base/array.js:\r\n//\t\tforEach, map, filter, every, some\r\n\r\n// Defined methods:\r\n//\t- take any valid lambda argument as the functional argument\r\n//\t- operate on dense arrays\r\n//\t- take a string as the array argument\r\n//\t- take an iterator objects as the array argument\r\n\r\n\tvar empty = {};\r\n\r\n\tlang.mixin(df, {\r\n\t\t// JS 1.6 standard array functions, which can take a lambda as a parameter.\r\n\t\t// Consider using dojo._base.array functions, if you don't need the lambda support.\r\n\t\tfilter: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreates a new array with all elements that pass the test\r\n\t\t\t//\t\timplemented by the provided function.\r\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tvar t = [], v, i, n;\r\n\t\t\tif(lang.isArray(a)){\r\n\t\t\t\t// array\r\n\t\t\t\tfor(i = 0, n = a.length; i < n; ++i){\r\n\t\t\t\t\tv = a[i];\r\n\t\t\t\t\tif(f.call(o, v, i, a)){ t.push(v); }\r\n\t\t\t\t}\r\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\r\n\t\t\t\t// iterator\r\n\t\t\t\tfor(i = 0; a.hasNext();){\r\n\t\t\t\t\tv = a.next();\r\n\t\t\t\t\tif(f.call(o, v, i++, a)){ t.push(v); }\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// object/dictionary\r\n\t\t\t\tfor(i in a){\r\n\t\t\t\t\tif(!(i in empty)){\r\n\t\t\t\t\t\tv = a[i];\r\n\t\t\t\t\t\tif(f.call(o, v, i, a)){ t.push(v); }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn t;\t// Array\r\n\t\t},\r\n\t\tforEach: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\texecutes a provided function once per array element.\r\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tvar i, n;\r\n\t\t\tif(lang.isArray(a)){\r\n\t\t\t\t// array\r\n\t\t\t\tfor(i = 0, n = a.length; i < n; f.call(o, a[i], i, a), ++i);\r\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\r\n\t\t\t\t// iterator\r\n\t\t\t\tfor(i = 0; a.hasNext(); f.call(o, a.next(), i++, a));\r\n\t\t\t}else{\r\n\t\t\t\t// object/dictionary\r\n\t\t\t\tfor(i in a){\r\n\t\t\t\t\tif(!(i in empty)){\r\n\t\t\t\t\t\tf.call(o, a[i], i, a);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn o;\t// Object\r\n\t\t},\r\n\t\tmap: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreates a new array with the results of calling\r\n\t\t\t//\t\ta provided function on every element in this array.\r\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tvar t, n, i;\r\n\t\t\tif(lang.isArray(a)){\r\n\t\t\t\t// array\r\n\t\t\t\tt = new Array(n = a.length);\r\n\t\t\t\tfor(i = 0; i < n; t[i] = f.call(o, a[i], i, a), ++i);\r\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\r\n\t\t\t\t// iterator\r\n\t\t\t\tt = [];\r\n\t\t\t\tfor(i = 0; a.hasNext(); t.push(f.call(o, a.next(), i++, a)));\r\n\t\t\t}else{\r\n\t\t\t\t// object/dictionary\r\n\t\t\t\tt = [];\r\n\t\t\t\tfor(i in a){\r\n\t\t\t\t\tif(!(i in empty)){\r\n\t\t\t\t\t\tt.push(f.call(o, a[i], i, a));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn t;\t// Array\r\n\t\t},\r\n\t\tevery: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\ttests whether all elements in the array pass the test\r\n\t\t\t//\t\timplemented by the provided function.\r\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tvar i, n;\r\n\t\t\tif(lang.isArray(a)){\r\n\t\t\t\t// array\r\n\t\t\t\tfor(i = 0, n = a.length; i < n; ++i){\r\n\t\t\t\t\tif(!f.call(o, a[i], i, a)){\r\n\t\t\t\t\t\treturn false;\t// Boolean\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\r\n\t\t\t\t// iterator\r\n\t\t\t\tfor(i = 0; a.hasNext();){\r\n\t\t\t\t\tif(!f.call(o, a.next(), i++, a)){\r\n\t\t\t\t\t\treturn false;\t// Boolean\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// object/dictionary\r\n\t\t\t\tfor(i in a){\r\n\t\t\t\t\tif(!(i in empty)){\r\n\t\t\t\t\t\tif(!f.call(o, a[i], i, a)){\r\n\t\t\t\t\t\t\treturn false;\t// Boolean\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\t// Boolean\r\n\t\t},\r\n\t\tsome: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\ttests whether some element in the array passes the test\r\n\t\t\t//\t\timplemented by the provided function.\r\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tvar i, n;\r\n\t\t\tif(lang.isArray(a)){\r\n\t\t\t\t// array\r\n\t\t\t\tfor(i = 0, n = a.length; i < n; ++i){\r\n\t\t\t\t\tif(f.call(o, a[i], i, a)){\r\n\t\t\t\t\t\treturn true;\t// Boolean\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\r\n\t\t\t\t// iterator\r\n\t\t\t\tfor(i = 0; a.hasNext();){\r\n\t\t\t\t\tif(f.call(o, a.next(), i++, a)){\r\n\t\t\t\t\t\treturn true;\t// Boolean\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// object/dictionary\r\n\t\t\t\tfor(i in a){\r\n\t\t\t\t\tif(!(i in empty)){\r\n\t\t\t\t\t\tif(f.call(o, a[i], i, a)){\r\n\t\t\t\t\t\t\treturn true;\t// Boolean\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\t// Boolean\r\n\t\t}\r\n\t});\r\n\t\r\n\treturn df;\r\n});\r\n"]}