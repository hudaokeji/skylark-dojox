{"version":3,"sources":["lang/oo/aop.js"],"names":["dojo","provide","require","oo","dojox","lang","md","makeDecorator","oog","general","ooa","aop","isF","isFunction","before","around","wrap","afterReturning","name","newValue","oldValue","ret","apply","this","arguments","call","afterThrowing","e","after"],"mappings":";;;;;;;AAAAA,KAAKC,QAAQ,qBAEbD,KAAKE,QAAQ,2BACbF,KAAKE,QAAQ,yBAEb,WACC,IAAIC,EAAKC,MAAMC,KAAKF,GAAIG,EAAKH,EAAGI,cAAeC,EAAML,EAAGM,QAASC,EAAMP,EAAGQ,IACzEC,EAAMZ,KAAKa,WAKZH,EAAII,OAASN,EAAIM,OACjBJ,EAAIK,OAASP,EAAIQ,KAsBjBN,EAAIO,eAAiBX,EAAG,SAASY,EAAMC,EAAUC,GAIhD,OAAOR,EAAIQ,GACV,WACC,IAAIC,EAAMD,EAASE,MAAMC,KAAMC,WAE/B,OADAL,EAASM,KAAKF,KAAMF,GACbA,GACJ,WAAYF,EAASM,KAAKF,SAGhCb,EAAIgB,cAAgBpB,EAAG,SAASY,EAAMC,EAAUC,GAI/C,OAAOR,EAAIQ,GACV,WACC,IAAIC,EACJ,IACCA,EAAMD,EAASE,MAAMC,KAAMC,WAC3B,MAAMG,GAEN,MADAR,EAASM,KAAKF,KAAMI,GACdA,EAEP,OAAON,GACJD,IAGNV,EAAIkB,MAAQtB,EAAG,SAASY,EAAMC,EAAUC,GAIvC,OAAOR,EAAIQ,GACV,WACC,IAAIC,EACJ,IACCA,EAAMD,EAASE,MAAMC,KAAMC,WAC3B,QACAL,EAASM,KAAKF,MAEf,OAAOF,GACJ,WAAYF,EAASM,KAAKF,SAxEjC","file":"../../../lang/oo/aop.js","sourcesContent":["dojo.provide(\"dojox.lang.oo.aop\");\r\n\r\ndojo.require(\"dojox.lang.oo.Decorator\");\r\ndojo.require(\"dojox.lang.oo.general\");\r\n\r\n(function(){\r\n\tvar oo = dojox.lang.oo, md = oo.makeDecorator, oog = oo.general, ooa = oo.aop,\r\n\t\tisF = dojo.isFunction;\r\n\r\n\t// five decorators implementing light-weight AOP weaving\r\n\r\n\t// reuse existing decorators\r\n\tooa.before = oog.before;\r\n\tooa.around = oog.wrap;\r\n\r\n\t/*=====\r\n\tooa.before = md(function(name, newValue, oldValue){\r\n\t\t// summary:\r\n\t\t//\t\tcreates a \"before\" advise, by calling new function\r\n\t\t//\t\tbefore the old one\r\n\r\n\t\t// dummy body\r\n\t});\r\n\r\n\tooa.around = md(function(name, newValue, oldValue){\r\n\t\t// summary:\r\n\t\t//\t\tcreates an \"around\" advise,\r\n\t\t//\t\tthe previous value is passed as a first argument and can be null,\r\n\t\t//\t\targuments are passed as a second argument\r\n\r\n\t\t// dummy body\r\n\t});\r\n\t=====*/\r\n\r\n\r\n\tooa.afterReturning = md(function(name, newValue, oldValue){\r\n\t\t// summary:\r\n\t\t//\t\tcreates an \"afterReturning\" advise,\r\n\t\t//\t\tthe returned value is passed as the only argument\r\n\t\treturn isF(oldValue) ?\r\n\t\t\tfunction(){\r\n\t\t\t\tvar ret = oldValue.apply(this, arguments);\r\n\t\t\t\tnewValue.call(this, ret);\r\n\t\t\t\treturn ret;\r\n\t\t\t} : function(){ newValue.call(this); };\r\n\t});\r\n\r\n\tooa.afterThrowing = md(function(name, newValue, oldValue){\r\n\t\t// summary:\r\n\t\t//\t\tcreates an \"afterThrowing\" advise,\r\n\t\t//\t\tthe exception is passed as the only argument\r\n\t\treturn isF(oldValue) ?\r\n\t\t\tfunction(){\r\n\t\t\t\tvar ret;\r\n\t\t\t\ttry{\r\n\t\t\t\t\tret = oldValue.apply(this, arguments);\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\tnewValue.call(this, e);\r\n\t\t\t\t\tthrow e;\r\n\t\t\t\t}\r\n\t\t\t\treturn ret;\r\n\t\t\t} : oldValue;\r\n\t});\r\n\r\n\tooa.after = md(function(name, newValue, oldValue){\r\n\t\t// summary:\r\n\t\t//\t\tcreates an \"after\" advise,\r\n\t\t//\t\tit takes no arguments\r\n\t\treturn isF(oldValue) ?\r\n\t\t\tfunction(){\r\n\t\t\t\tvar ret;\r\n\t\t\t\ttry{\r\n\t\t\t\t\tret = oldValue.apply(this, arguments);\r\n\t\t\t\t}finally{\r\n\t\t\t\t\tnewValue.call(this);\r\n\t\t\t\t}\r\n\t\t\t\treturn ret;\r\n\t\t\t} : function(){ newValue.call(this); }\r\n\t});\r\n})();\r\n"]}