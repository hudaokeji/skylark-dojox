{"version":3,"sources":["lang/oo/rearrange.js"],"names":["dojo","provide","extraNames","_extraNames","extraLen","length","opts","Object","prototype","toString","empty","dojox","lang","oo","rearrange","bag","map","name","newName","prop","i","call","undefined"],"mappings":";;;;;;;AAAAA,KAAKC,QAAQ,2BAEb,WACC,IAAIC,EAAaF,KAAKG,YAAaC,EAAWF,EAAWG,OACxDC,EAAOC,OAAOC,UAAUC,SAAUC,KAEnCC,MAAMC,KAAKC,GAAGC,UAAY,SAASC,EAAKC,GAkBxC,IAAIC,EAAMC,EAASC,EAAMC,EAExB,IAAIH,KAAQD,GACXE,EAAUF,EAAIC,KACuB,mBAAtBX,EAAKe,KAAKH,KACxBC,EAAOJ,EAAIE,GACNA,KAAQP,GAAUA,EAAMO,KAAUE,WAC1BJ,EAAIE,KAEfF,EAAIE,QAAQK,GAEVJ,IACFH,EAAIG,GAAWC,KAKnB,GAAGf,EACF,IAAIgB,EAAI,EAAGA,EAAIhB,IAAYgB,GAG1BF,EAAUF,EAFVC,EAAOf,EAAWkB,MAGmB,mBAAtBd,EAAKe,KAAKH,KACxBC,EAAOJ,EAAIE,GACNA,KAAQP,GAAUA,EAAMO,KAAUE,WAC1BJ,EAAIE,KAEfF,EAAIE,QAAQK,GAEVJ,IACFH,EAAIG,GAAWC,KAOpB,OAAOJ,GA3DT","file":"../../../lang/oo/rearrange.js","sourcesContent":["dojo.provide(\"dojox.lang.oo.rearrange\");\r\n\r\n(function(){\r\n\tvar extraNames = dojo._extraNames, extraLen = extraNames.length,\r\n\t\topts = Object.prototype.toString, empty = {};\r\n\r\n\tdojox.lang.oo.rearrange = function(bag, map){\r\n\t\t// summary:\r\n\t\t//\t\tProcess properties in place by removing and renaming them.\r\n\t\t// description:\r\n\t\t//\t\tProperties of an object are to be renamed or removed specified\r\n\t\t//\t\tby \"map\" argument. Only own properties of \"map\" are processed.\r\n\t\t// example:\r\n\t\t//\t|\too.rearrange(bag, {\r\n\t\t//\t|\t\tabc: \"def\",\t// rename \"abc\" attribute to \"def\"\r\n\t\t//\t|\t\tghi: null\t// remove/hide \"ghi\" attribute\r\n\t\t//\t|\t});\r\n\t\t// bag: Object\r\n\t\t//\t\tthe object to be processed\r\n\t\t// map: Object\r\n\t\t//\t\tthe dictionary for renaming (false value indicates removal of the named property)\r\n\t\t// returns: Object\r\n\t\t//\t\tthe original object\r\n\r\n\tvar name, newName, prop, i, t;\r\n\r\n\t\tfor(name in map){\r\n\t\t\tnewName = map[name];\r\n\t\t\tif(!newName || opts.call(newName) == \"[object String]\"){\r\n\t\t\t\tprop = bag[name];\r\n\t\t\t\tif(!(name in empty) || empty[name] !== prop){\r\n\t\t\t\t\tif(!(delete bag[name])){\r\n\t\t\t\t\t\t// can't delete => hide it\r\n\t\t\t\t\t\tbag[name] = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(newName){\r\n\t\t\t\t\t\tbag[newName] = prop;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(extraLen){\r\n\t\t\tfor(i = 0; i < extraLen; ++i){\r\n\t\t\t\tname = extraNames[i];\r\n\t\t\t\t// repeating the body above\r\n\t\t\t\tnewName = map[name];\r\n\t\t\t\tif(!newName || opts.call(newName) == \"[object String]\"){\r\n\t\t\t\t\tprop = bag[name];\r\n\t\t\t\t\tif(!(name in empty) || empty[name] !== prop){\r\n\t\t\t\t\t\tif(!(delete bag[name])){\r\n\t\t\t\t\t\t\t// can't delete => hide it\r\n\t\t\t\t\t\t\tbag[name] = undefined;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(newName){\r\n\t\t\t\t\t\t\tbag[newName] = prop;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn bag;\t// Object\r\n\t};\r\n})();\r\n"]}