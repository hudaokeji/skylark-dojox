{"version":3,"sources":["encoding/ascii85.js"],"names":["define","lang","ascii85","getObject","c","input","length","result","i","j","n","b","Math","floor","push","String","fromCharCode","encode","reminder","t","slice","x","pop","substr","join","decode","y","d","r","charAt","charCodeAt"],"mappings":";;;;;;;AAAAA,QAAQ,mBAAoB,SAASC,GAEpC,IAAIC,EAAUD,EAAKE,UAAU,0BAA0B,GAEnDC,EAAI,SAASC,EAAOC,EAAQC,GAC/B,IAAIC,EAAGC,EAAGC,EAAGC,GAAK,EAAG,EAAG,EAAG,EAAG,GAC9B,IAAIH,EAAI,EAAGA,EAAIF,EAAQE,GAAK,EAAE,CAE7B,GADAE,EAAyD,KAApB,KAApB,IAAXL,EAAMG,GAAWH,EAAMG,EAAE,IAAYH,EAAMG,EAAE,IAAYH,EAAMG,EAAE,GAItE,IAAIC,EAAI,EAAGA,EAAI,EAAGE,EAAEF,KAAOC,EAAI,GAAK,GAAIA,EAAIE,KAAKC,MAAMH,EAAI,UAF3DH,EAAOO,KAAK,KAIbP,EAAOO,KAAKC,OAAOC,aAAaL,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,OAmD5D,OA/CAT,EAAQe,OAAS,SAASZ,GAKzB,IAAIE,KAAaW,EAAWb,EAAMC,OAAS,EAAGA,EAASD,EAAMC,OAASY,EAEtE,GADAd,EAAEC,EAAOC,EAAQC,GACdW,EAAS,CAEX,IADA,IAAIC,EAAId,EAAMe,MAAMd,GACda,EAAEb,OAAS,GAAIa,EAAEL,KAAK,GAC5BV,EAAEe,EAAG,EAAGZ,GACR,IAAIc,EAAId,EAAOe,MACP,KAALD,IAAWA,EAAI,SAClBd,EAAOO,KAAKO,EAAEE,OAAO,EAAGL,EAAW,IAEpC,OAAOX,EAAOiB,KAAK,KAGpBtB,EAAQuB,OAAS,SAASpB,GAKzB,IAAmDG,EAAGC,EAAGU,EAAGE,EAAGK,EAAGC,EAA9DjB,EAAIL,EAAMC,OAAQsB,KAAQjB,GAAK,EAAG,EAAG,EAAG,EAAG,GAC/C,IAAIH,EAAI,EAAGA,EAAIE,IAAKF,EACnB,GAAsB,KAAnBH,EAAMwB,OAAOrB,GAAhB,CAIA,IAAIC,EAAI,EAAGA,EAAI,IAAKA,EAAIE,EAAEF,GAAKJ,EAAMyB,WAAWtB,EAAIC,GAAK,GAEzD,IADAkB,EAAIjB,EAAIF,GACD,EAAE,CACR,IAAIC,EAAIkB,EAAGlB,EAAI,EAAGE,IAAIF,GAAK,GAC3BE,EAAEgB,GAAK,GAQR,IALAN,EAAQ,KADRF,EAAqD,IAAb,IAAb,IAAb,GAAPR,EAAE,GAAUA,EAAE,IAAWA,EAAE,IAAWA,EAAE,IAAWA,EAAE,IAG5De,EAAQ,KADRP,KAAO,GAEPA,KAAO,EACPS,EAAEd,KAAKK,IAAM,EAAO,IAAJA,EAASO,EAAGL,GACxBZ,EAAIkB,EAAGlB,EAAI,IAAKA,EAAGmB,EAAEN,OACzBd,GAAK,OAhBJoB,EAAEd,KAAK,EAAG,EAAG,EAAG,GAkBlB,OAAOc,GAGD1B","file":"../../encoding/ascii85.js","sourcesContent":["define([\"dojo/_base/lang\"], function(lang) {\r\n\r\n\tvar ascii85 = lang.getObject(\"dojox.encoding.ascii85\", true);\r\n\r\n\tvar c = function(input, length, result){\r\n\t\tvar i, j, n, b = [0, 0, 0, 0, 0];\r\n\t\tfor(i = 0; i < length; i += 4){\r\n\t\t\tn = ((input[i] * 256 + input[i+1]) * 256 + input[i+2]) * 256 + input[i+3];\r\n\t\t\tif(!n){\r\n\t\t\t\tresult.push(\"z\");\r\n\t\t\t}else{\r\n\t\t\t\tfor(j = 0; j < 5; b[j++] = n % 85 + 33, n = Math.floor(n / 85));\r\n\t\t\t}\r\n\t\t\tresult.push(String.fromCharCode(b[4], b[3], b[2], b[1], b[0]));\r\n\t\t}\r\n\t};\r\n\r\n\tascii85.encode = function(input){\r\n\t\t// summary:\r\n\t\t//\t\tencodes input data in ascii85 string\r\n\t\t// input: Array\r\n\t\t//\t\tan array of numbers (0-255) to encode\r\n\t\tvar result = [], reminder = input.length % 4, length = input.length - reminder;\r\n\t\tc(input, length, result);\r\n\t\tif(reminder){\r\n\t\t\tvar t = input.slice(length);\r\n\t\t\twhile(t.length < 4){ t.push(0); }\r\n\t\t\tc(t, 4, result);\r\n\t\t\tvar x = result.pop();\r\n\t\t\tif(x == \"z\"){ x = \"!!!!!\"; }\r\n\t\t\tresult.push(x.substr(0, reminder + 1));\r\n\t\t}\r\n\t\treturn result.join(\"\");\t// String\r\n\t};\r\n\r\n\tascii85.decode = function(input){\r\n\t\t// summary:\r\n\t\t//\t\tdecodes the input string back to array of numbers\r\n\t\t// input: String\r\n\t\t//\t\tthe input string to decode\r\n\t\tvar n = input.length, r = [], b = [0, 0, 0, 0, 0], i, j, t, x, y, d;\r\n\t\tfor(i = 0; i < n; ++i){\r\n\t\t\tif(input.charAt(i) == \"z\"){\r\n\t\t\t\tr.push(0, 0, 0, 0);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tfor(j = 0; j < 5; ++j){ b[j] = input.charCodeAt(i + j) - 33; }\r\n\t\t\td = n - i;\r\n\t\t\tif(d < 5){\r\n\t\t\t\tfor(j = d; j < 4; b[++j] = 0);\r\n\t\t\t\tb[d] = 85;\r\n\t\t\t}\r\n\t\t\tt = (((b[0] * 85 + b[1]) * 85 + b[2]) * 85 + b[3]) * 85 + b[4];\r\n\t\t\tx = t & 255;\r\n\t\t\tt >>>= 8;\r\n\t\t\ty = t & 255;\r\n\t\t\tt >>>= 8;\r\n\t\t\tr.push(t >>> 8, t & 255, y, x);\r\n\t\t\tfor(j = d; j < 5; ++j, r.pop());\r\n\t\t\ti += 4;\r\n\t\t}\r\n\t\treturn r;\r\n\t};\r\n\r\n\treturn ascii85;\r\n});\r\n"]}