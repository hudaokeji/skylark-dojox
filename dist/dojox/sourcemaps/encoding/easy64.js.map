{"version":3,"sources":["encoding/easy64.js"],"names":["define","lang","easy64","getObject","c","input","length","result","i","push","String","fromCharCode","encode","reminder","t","slice","pop","join","decode","j","d","n","r","b","charCodeAt"],"mappings":";;;;;;;AAAAA,QAAQ,mBAAoB,SAASC,GACpC,IAAIC,EAASD,EAAKE,UAAU,yBAAyB,GACjDC,EAAI,SAASC,EAAOC,EAAQC,GAC/B,IAAI,IAAIC,EAAI,EAAGA,EAAIF,EAAQE,GAAK,EAC/BD,EAAOE,KACNC,OAAOC,aAAgC,IAAlBN,EAAMG,KAAO,IAClCE,OAAOC,eAA0B,EAAXN,EAAMG,KAAW,IAAMH,EAAMG,EAAI,KAAO,GAAK,IACnEE,OAAOC,eAA8B,GAAfN,EAAMG,EAAI,KAAY,IAAMH,EAAMG,EAAI,KAAO,GAAK,IACxEE,OAAOC,aAAmC,IAAN,GAAfN,EAAMG,EAAI,OAyClC,OApCAN,EAAOU,OAAS,SAASP,GAKxB,IAAIE,KAAaM,EAAWR,EAAMC,OAAS,EAAGA,EAASD,EAAMC,OAASO,EAEtE,GADAT,EAAEC,EAAOC,EAAQC,GACdM,EAAS,CAEX,IADA,IAAIC,EAAIT,EAAMU,MAAMT,GACdQ,EAAER,OAAS,GAAIQ,EAAEL,KAAK,GAC5BL,EAAEU,EAAG,EAAGP,GACR,IAAI,IAAIC,EAAI,EAAGA,EAAIK,EAAUN,EAAOS,QAASR,IAE9C,OAAOD,EAAOU,KAAK,KAGpBf,EAAOgB,OAAS,SAASb,GAKxB,IAAgDG,EAAGW,EAAGC,EAAlDC,EAAIhB,EAAMC,OAAQgB,KAAQC,GAAK,EAAG,EAAG,EAAG,GAC5C,IAAIf,EAAI,EAAGA,EAAIa,EAAGb,GAAK,EAAE,CACxB,IAAIW,EAAI,EAAGA,EAAI,IAAKA,EAAII,EAAEJ,GAAKd,EAAMmB,WAAWhB,EAAIW,GAAK,GAEzD,IAAIA,EADJC,EAAIC,EAAIb,EACGW,EAAI,EAAGI,IAAIJ,GAAK,GAM3B,IALAG,EAAEb,MACAc,EAAE,IAAM,IAAMA,EAAE,KAAO,KACf,GAAPA,EAAE,KAAY,IAAMA,EAAE,KAAO,KACtB,EAAPA,EAAE,KAAW,GAAKA,EAAE,IAEnBJ,EAAIC,EAAGD,EAAI,IAAKA,EAAGG,EAAEN,QAE1B,OAAOM,GAGDpB","file":"../../encoding/easy64.js","sourcesContent":["define([\"dojo/_base/lang\"], function(lang) {\r\n\tvar easy64 = lang.getObject(\"dojox.encoding.easy64\", true);\r\n\tvar c = function(input, length, result){\r\n\t\tfor(var i = 0; i < length; i += 3){\r\n\t\t\tresult.push(\r\n\t\t\t\tString.fromCharCode((input[i] >>> 2) + 33),\r\n\t\t\t\tString.fromCharCode(((input[i] & 3) << 4) + (input[i + 1] >>> 4) + 33),\r\n\t\t\t\tString.fromCharCode(((input[i + 1] & 15) << 2) + (input[i + 2] >>> 6) + 33),\r\n\t\t\t\tString.fromCharCode((input[i + 2] & 63) + 33)\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\teasy64.encode = function(input){\r\n\t\t// summary:\r\n\t\t//\t\tencodes input data in easy64 string\r\n\t\t// input: Array\r\n\t\t//\t\tan array of numbers (0-255) to encode\r\n\t\tvar result = [], reminder = input.length % 3, length = input.length - reminder;\r\n\t\tc(input, length, result);\r\n\t\tif(reminder){\r\n\t\t\tvar t = input.slice(length);\r\n\t\t\twhile(t.length < 3){ t.push(0); }\r\n\t\t\tc(t, 3, result);\r\n\t\t\tfor(var i = 3; i > reminder; result.pop(), --i);\r\n\t\t}\r\n\t\treturn result.join(\"\");\t// String\r\n\t};\r\n\r\n\teasy64.decode = function(input){\r\n\t\t// summary:\r\n\t\t//\t\tdecodes the input string back to array of numbers\r\n\t\t// input: String\r\n\t\t//\t\tthe input string to decode\r\n\t\tvar n = input.length, r = [], b = [0, 0, 0, 0], i, j, d;\r\n\t\tfor(i = 0; i < n; i += 4){\r\n\t\t\tfor(j = 0; j < 4; ++j){ b[j] = input.charCodeAt(i + j) - 33; }\r\n\t\t\td = n - i;\r\n\t\t\tfor(j = d; j < 4; b[++j] = 0);\r\n\t\t\tr.push(\r\n\t\t\t\t(b[0] << 2) + (b[1] >>> 4),\r\n\t\t\t\t((b[1] & 15) << 4) + (b[2] >>> 2),\r\n\t\t\t\t((b[2] & 3) << 6) + b[3]\r\n\t\t\t);\r\n\t\t\tfor(j = d; j < 4; ++j, r.pop());\r\n\t\t}\r\n\t\treturn r;\r\n\t};\r\n\r\n\treturn easy64;\r\n});\r\n"]}