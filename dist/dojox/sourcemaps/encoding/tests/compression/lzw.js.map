{"version":3,"sources":["encoding/tests/compression/lzw.js"],"names":["define","doh","dcl","dcb","msg1","msg2","msg3","msg4","encode","msg","x","OutputStream","encoder","Encoder","dojo","forEach","s","b","i","length","push","charCodeAt","s2b","v","flush","console","debug","getWidth","getBuffer","decode","n","buf","InputStream","decoder","Decoder","t","w","join","register","assertEqual"],"mappings":";;;;;;;AAAAA,QAAQ,MAAO,wBAAyB,cAAe,SAASC,EAAKC,EAAKC,GACzE,IAAIC,EAAO,+CACPC,EAAO,gDACPC,EAAO,iDACPC,EAAO,kDAgBPC,EAAS,SAASC,GACrB,IAAIC,EAAI,IAAIP,EAAIQ,aAAgBC,EAAU,IAAIV,EAAIW,QAAQ,KAI1D,OAHAC,KAAKC,QAhBI,SAASC,GAElB,IADA,IAAIC,KACIC,EAAI,EAAGA,EAAIF,EAAEG,SAAUD,EAC9BD,EAAEG,KAAKJ,EAAEK,WAAWH,IAErB,OAAOD,EAWMK,CAAIb,GAAM,SAASc,GAAIX,EAAQJ,OAAOe,EAAGb,KACtDE,EAAQY,MAAMd,GACde,QAAQC,MAAM,SAAUhB,EAAEiB,YACnBjB,EAAEkB,aAGNC,EAAS,SAASC,EAAGC,GAExB,IADA,IAAIrB,EAAI,IAAIP,EAAI6B,YAAYD,EAAkB,EAAbA,EAAIZ,QAAac,EAAU,IAAI/B,EAAIgC,QAAQ,KAAMC,KAAQC,EAAI,EACxFA,EAAIN,GAAE,CACX,IAAIP,EAAIU,EAAQJ,OAAOnB,GACvByB,EAAEf,KAAKG,GACPa,GAAKb,EAAEJ,OAER,OAAOgB,EAAEE,KAAK,KAGfpC,EAAIqC,SAAS,wCACZ,SAAqBH,GAAIA,EAAEI,YAAYnC,EAAMyB,EAAOzB,EAAKe,OAAQX,EAAOJ,MACxE,SAAqB+B,GAAIA,EAAEI,YAAYlC,EAAMwB,EAAOxB,EAAKc,OAAQX,EAAOH,MACxE,SAAqB8B,GAAIA,EAAEI,YAAYjC,EAAMuB,EAAOvB,EAAKa,OAAQX,EAAOF,MACxE,SAAqB6B,GAAIA,EAAEI,YAAYhC,EAAMsB,EAAOtB,EAAKY,OAAQX,EAAOD","file":"../../../../encoding/tests/compression/lzw.js","sourcesContent":["define(['doh', '../../compression/lzw', '../../bits'], function(doh, dcl, dcb){\r\n\tvar msg1 = \"The rain in Spain falls mainly on the plain.\";\r\n\tvar msg2 = \"The rain in Spain falls mainly on the plain.1\";\r\n\tvar msg3 = \"The rain in Spain falls mainly on the plain.ab\";\r\n\tvar msg4 = \"The rain in Spain falls mainly on the plain.!@#\";\r\n\t\r\n\tvar s2b = function(s){\r\n\t\tvar b = [];\r\n\t\tfor(var i = 0; i < s.length; ++i){\r\n\t\t\tb.push(s.charCodeAt(i));\r\n\t\t}\r\n\t\treturn b;\r\n\t};\r\n\r\n\tvar b2s = function(b){\r\n\t\tvar s = [];\r\n\t\tdojo.forEach(b, function(c){ s.push(String.fromCharCode(c)); });\r\n\t\treturn s.join(\"\");\r\n\t};\r\n\t\r\n\tvar encode = function(msg){\r\n\t\tvar x = new dcb.OutputStream(), encoder = new dcl.Encoder(128);\r\n\t\tdojo.forEach(s2b(msg), function(v){ encoder.encode(v, x); });\r\n\t\tencoder.flush(x);\r\n\t\tconsole.debug(\"bits =\", x.getWidth());\r\n\t\treturn x.getBuffer();\r\n\t};\r\n\t\r\n\tvar decode = function(n, buf){\r\n\t\tvar x = new dcb.InputStream(buf, buf.length * 8), decoder = new dcl.Decoder(128), t = [], w = 0;\r\n\t\twhile(w < n){\r\n\t\t\tvar v = decoder.decode(x);\r\n\t\t\tt.push(v);\r\n\t\t\tw += v.length;\r\n\t\t}\r\n\t\treturn t.join(\"\");\r\n\t};\r\n\r\n\tdoh.register(\"dojox.encoding.tests.compression.lzw\", [\r\n\t\tfunction testLzwMsg1(t){ t.assertEqual(msg1, decode(msg1.length, encode(msg1))); },\r\n\t\tfunction testLzwMsg2(t){ t.assertEqual(msg2, decode(msg2.length, encode(msg2))); },\r\n\t\tfunction testLzwMsg3(t){ t.assertEqual(msg3, decode(msg3.length, encode(msg3))); },\r\n\t\tfunction testLzwMsg4(t){ t.assertEqual(msg4, decode(msg4.length, encode(msg4))); }\r\n\t]);\r\n});\r\n"]}