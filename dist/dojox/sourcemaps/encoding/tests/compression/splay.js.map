{"version":3,"sources":["encoding/tests/compression/splay.js"],"names":["define","doh","Splay","dcb","msg1","msg2","msg3","msg4","encode","msg","x","OutputStream","encoder","dojo","forEach","s","b","i","length","push","charCodeAt","s2b","v","console","debug","getWidth","getBuffer","decode","n","buf","InputStream","decoder","t","c","String","fromCharCode","join","register","assertEqual"],"mappings":";;;;;;;AAAAA,QAAQ,MAAO,0BAA2B,cAAe,SAASC,EAAKC,EAAOC,GAC7E,IAAIC,EAAO,+CACPC,EAAO,gDACPC,EAAO,iDACPC,EAAO,kDAgBPC,EAAS,SAASC,GACrB,IAAIC,EAAI,IAAIP,EAAIQ,aAAgBC,EAAU,IAAIV,EAAM,KAGpD,OAFAW,KAAKC,QAhBI,SAASC,GAElB,IADA,IAAIC,KACIC,EAAI,EAAGA,EAAIF,EAAEG,SAAUD,EAC9BD,EAAEG,KAAKJ,EAAEK,WAAWH,IAErB,OAAOD,EAWMK,CAAIZ,GAAM,SAASa,GAAIV,EAAQJ,OAAOc,EAAGZ,KACtDa,QAAQC,MAAM,SAAUd,EAAEe,YACnBf,EAAEgB,aAGNC,EAAS,SAASC,EAAGC,GAExB,IADA,IAdkBb,EACdD,EAaAL,EAAI,IAAIP,EAAI2B,YAAYD,EAAkB,EAAbA,EAAIX,QAAaa,EAAU,IAAI7B,EAAM,KAAM8B,KACpEf,EAAI,EAAGA,EAAIW,IAAKX,EAAIe,EAAEb,KAAKY,EAAQJ,OAAOjB,IAClD,OAhBkBM,EAgBPgB,EAfPjB,KACJF,KAAKC,QAAQE,EAAG,SAASiB,GAAIlB,EAAEI,KAAKe,OAAOC,aAAaF,MACjDlB,EAAEqB,KAAK,KAgBfnC,EAAIoC,SAAS,0CACZ,SAAuBL,GAAIA,EAAEM,YAAYlC,EAAMuB,EAAOvB,EAAKc,OAAQV,EAAOJ,MAC1E,SAAuB4B,GAAIA,EAAEM,YAAYjC,EAAMsB,EAAOtB,EAAKa,OAAQV,EAAOH,MAC1E,SAAuB2B,GAAIA,EAAEM,YAAYhC,EAAMqB,EAAOrB,EAAKY,OAAQV,EAAOF,MAC1E,SAAuB0B,GAAIA,EAAEM,YAAY/B,EAAMoB,EAAOpB,EAAKW,OAAQV,EAAOD","file":"../../../../encoding/tests/compression/splay.js","sourcesContent":["define(['doh', '../../compression/splay', '../../bits'], function(doh, Splay, dcb){\r\n\tvar msg1 = \"The rain in Spain falls mainly on the plain.\";\r\n\tvar msg2 = \"The rain in Spain falls mainly on the plain.1\";\r\n\tvar msg3 = \"The rain in Spain falls mainly on the plain.ab\";\r\n\tvar msg4 = \"The rain in Spain falls mainly on the plain.!@#\";\r\n\t\r\n\tvar s2b = function(s){\r\n\t\tvar b = [];\r\n\t\tfor(var i = 0; i < s.length; ++i){\r\n\t\t\tb.push(s.charCodeAt(i));\r\n\t\t}\r\n\t\treturn b;\r\n\t};\r\n\r\n\tvar b2s = function(b){\r\n\t\tvar s = [];\r\n\t\tdojo.forEach(b, function(c){ s.push(String.fromCharCode(c)); });\r\n\t\treturn s.join(\"\");\r\n\t};\r\n\t\r\n\tvar encode = function(msg){\r\n\t\tvar x = new dcb.OutputStream(), encoder = new Splay(256);\r\n\t\tdojo.forEach(s2b(msg), function(v){ encoder.encode(v, x); });\r\n\t\tconsole.debug(\"bits =\", x.getWidth());\r\n\t\treturn x.getBuffer();\r\n\t};\r\n\t\r\n\tvar decode = function(n, buf){\r\n\t\tvar x = new dcb.InputStream(buf, buf.length * 8), decoder = new Splay(256), t = [];\r\n\t\tfor(var i = 0; i < n; ++i){ t.push(decoder.decode(x)); }\r\n\t\treturn b2s(t);\r\n\t};\r\n\r\n\tdoh.register(\"dojox.encoding.tests.compression.splay\", [\r\n\t\tfunction testSplayMsg1(t){ t.assertEqual(msg1, decode(msg1.length, encode(msg1))); },\r\n\t\tfunction testSplayMsg2(t){ t.assertEqual(msg2, decode(msg2.length, encode(msg2))); },\r\n\t\tfunction testSplayMsg3(t){ t.assertEqual(msg3, decode(msg3.length, encode(msg3))); },\r\n\t\tfunction testSplayMsg4(t){ t.assertEqual(msg4, decode(msg4.length, encode(msg4))); }\r\n\t]);\r\n});\r\n"]}