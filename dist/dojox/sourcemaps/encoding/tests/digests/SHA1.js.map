{"version":3,"sources":["encoding/tests/digests/SHA1.js"],"names":["define","doh","ded","SHA1","register","t","assertEqual","outputTypes","Hex","String"],"mappings":";;;;;;;AAAAA,QAAQ,MAAO,sBAAuB,sBAAuB,SAASC,EAAKC,EAAKC,GAM/EF,EAAIG,SAAS,qCACZ,SAA2BC,GAC1BA,EAAEC,YANO,+BAMaH,EAPZ,SASX,SAAwBE,GACvBA,EAAEC,YARI,2CAQaH,EAVT,MAUuBD,EAAIK,YAAYC,OAElD,SAA2BH,GAC1BA,EAAEC,YAVE,uBAUaH,EAbP,MAaqBD,EAAIK,YAAYE","file":"../../../../encoding/tests/digests/SHA1.js","sourcesContent":["define(['doh', '../../digests/_base', '../../digests/SHA1'], function(doh, ded, SHA1){\r\n\tvar message=\"abc\";\r\n\tvar base64=\"qZk+NkcGgWq6PiVxeFDCbJzQ2J0=\";\r\n\tvar hex=\"a9993e364706816aba3e25717850c26c9cd0d89d\";\r\n\tvar s=\"\\251\\231\\76\\66\\107\\6\\201\\152\\272\\76\\45\\161\\170\\120\\302\\154\\234\\320\\330\\235\";\r\n\r\n\tdoh.register(\"dojox.encoding.tests.digests.SHA1\", [\r\n\t\tfunction testBase64Compute(t){\r\n\t\t\tt.assertEqual(base64, SHA1(message));\r\n\t\t},\r\n\t\tfunction testHexCompute(t){\r\n\t\t\tt.assertEqual(hex, SHA1(message, ded.outputTypes.Hex));\r\n\t\t},\r\n\t\tfunction testStringCompute(t){\r\n\t\t\tt.assertEqual(s, SHA1(message, ded.outputTypes.String));\r\n\t\t}\r\n\t]);\r\n});\r\n"]}