{"version":3,"sources":["encoding/compression/splay.js"],"names":["define","lang","bits","compression","getObject","Splay","n","this","up","Array","left","right","reset","extend","i","length","Math","floor","splay","a","c","d","b","encode","value","stream","s","push","l","putBits","pop","decode","getBits"],"mappings":";;;;;;;AAAAA,QACC,kBACA,WACE,SAASC,EAAMC,GACjB,IAAIC,EAAcF,EAAKG,UAAU,8BAA8B,GA6D/D,OA3DAD,EAAYE,MAAQ,SAASC,GAC5BC,KAAKC,GAAK,IAAIC,MAAM,EAAIH,EAAI,GAC5BC,KAAKG,KAAO,IAAID,MAAMH,GACtBC,KAAKI,MAAQ,IAAIF,MAAMH,GACvBC,KAAKK,SAGNX,EAAKY,OAAOV,EAAYE,OACvBO,MAAO,WACN,IAAI,IAAIE,EAAI,EAAGA,EAAIP,KAAKC,GAAGO,OAAQR,KAAKC,GAAGM,GAAKE,KAAKC,OAAOH,EAAI,GAAK,KAAMA,GAC3E,IAAQA,EAAI,EAAGA,EAAIP,KAAKG,KAAKK,OAAQR,KAAKG,KAAKI,GAAK,EAAIA,EAAI,EAAGP,KAAKI,MAAMG,GAAK,EAAIA,EAAI,IAAKA,KAE7FI,MAAO,SAASJ,GACf,IAAIK,EAAIL,EAAIP,KAAKG,KAAKK,OACtB,EAAE,CACD,IAAIK,EAAIb,KAAKC,GAAGW,GAChB,GAAGC,EAAE,CAEJ,IAAIC,EAAId,KAAKC,GAAGY,GAEZE,EAAIf,KAAKG,KAAKW,GACfD,GAAKE,GACPA,EAAIf,KAAKI,MAAMU,GACfd,KAAKI,MAAMU,GAAKF,GAEhBZ,KAAKG,KAAKW,GAAKF,EAEhBZ,KAAKY,GAAKZ,KAAKG,KAAKU,GAAK,OAAS,SAASA,GAAKE,EAChDf,KAAKC,GAAGW,GAAKE,EACbd,KAAKC,GAAGc,GAAKF,EACbD,EAAIE,OAEJF,EAAIC,QAECD,IAERI,OAAQ,SAASC,EAAOC,GACvB,IAAIC,KAAQP,EAAIK,EAAQjB,KAAKG,KAAKK,OAClC,GACCW,EAAEC,KAAKpB,KAAKI,MAAMJ,KAAKC,GAAGW,KAAOA,GACjCA,EAAIZ,KAAKC,GAAGW,SACNA,GACPZ,KAAKW,MAAMM,GAEX,IADA,IAAII,EAAIF,EAAEX,OACJW,EAAEX,QAASU,EAAOI,QAAQH,EAAEI,MAAQ,EAAI,EAAG,GACjD,OAAOF,GAERG,OAAQ,SAASN,GAChB,IAAIN,EAAI,EACR,GACCA,EAAIZ,KAAKkB,EAAOO,QAAQ,GAAK,QAAU,QAAQb,SACzCA,EAAIZ,KAAKG,KAAKK,QAGrB,OAFAI,GAAKZ,KAAKG,KAAKK,OACfR,KAAKW,MAAMC,GACJA,KAKFhB,EAAYE","file":"../../../encoding/compression/splay.js","sourcesContent":["define([\r\n\t\"dojo/_base/lang\",\t// dojo.extend\r\n\t\"../bits\"\r\n], function(lang, bits) {\r\n\tvar compression = lang.getObject(\"dojox.encoding.compression\", true);\r\n\r\n\tcompression.Splay = function(n){\r\n\t\tthis.up = new Array(2 * n + 1);\r\n\t\tthis.left = new Array(n);\r\n\t\tthis.right = new Array(n);\r\n\t\tthis.reset();\r\n\t};\r\n\r\n\tlang.extend(compression.Splay, {\r\n\t\treset: function(){\r\n\t\t\tfor(var i = 1; i < this.up.length; this.up[i] = Math.floor((i - 1) / 2), ++i);\r\n\t\t\tfor(var i = 0; i < this.left.length; this.left[i] = 2 * i + 1, this.right[i] = 2 * i + 2, ++i);\r\n\t\t},\r\n\t\tsplay: function(i){\r\n\t\t\tvar a = i + this.left.length;\r\n\t\t\tdo{\r\n\t\t\t\tvar c = this.up[a];\r\n\t\t\t\tif(c){\t// root\r\n\t\t\t\t\t// rotated pair\r\n\t\t\t\t\tvar d = this.up[c];\r\n\t\t\t\t\t// swap descendants\r\n\t\t\t\t\tvar b = this.left[d];\r\n\t\t\t\t\tif(c == b){\r\n\t\t\t\t\t\tb = this.right[d];\r\n\t\t\t\t\t\tthis.right[d] = a;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.left[d] = a;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis[a == this.left[c] ? \"left\" : \"right\"][c] = b;\r\n\t\t\t\t\tthis.up[a] = d;\r\n\t\t\t\t\tthis.up[b] = c;\r\n\t\t\t\t\ta = d;\r\n\t\t\t\t}else{\r\n\t\t\t\t\ta = c;\r\n\t\t\t\t}\r\n\t\t\t}while(a);\t// root\r\n\t\t},\r\n\t\tencode: function(value, stream){\r\n\t\t\tvar s = [], a = value + this.left.length;\r\n\t\t\tdo{\r\n\t\t\t\ts.push(this.right[this.up[a]] == a);\r\n\t\t\t\ta = this.up[a];\r\n\t\t\t}while(a);\t// root\r\n\t\t\tthis.splay(value);\r\n\t\t\tvar l = s.length;\r\n\t\t\twhile(s.length){ stream.putBits(s.pop() ? 1 : 0, 1); }\r\n\t\t\treturn\tl;\r\n\t\t},\r\n\t\tdecode: function(stream){\r\n\t\t\tvar a = 0;\t// root;\r\n\t\t\tdo{\r\n\t\t\t\ta = this[stream.getBits(1) ? \"right\" : \"left\"][a];\r\n\t\t\t}while(a < this.left.length);\r\n\t\t\ta -= this.left.length;\r\n\t\t\tthis.splay(a);\r\n\t\t\treturn\ta;\r\n\t\t}\r\n\t});\r\n\r\n\r\n\treturn compression.Splay;\r\n});\r\n"]}