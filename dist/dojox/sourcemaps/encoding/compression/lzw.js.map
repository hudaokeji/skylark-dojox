{"version":3,"sources":["encoding/compression/lzw.js"],"names":["define","lang","bits","lzw","getObject","_bits","x","w","v","Encoder","n","this","size","init","extend","dict","i","String","fromCharCode","width","code","p","encode","value","stream","c","r","putBits","flush","length","Decoder","codes","Array","decode","getBits","push","substr"],"mappings":";;;;;;;AAAAA,QACC,kBACA,WACE,SAASC,EAAMC,GAEjB,IAAIC,EAAMF,EAAKG,UAAU,kCAAkC,GAEvDC,EAAQ,SAASC,GAEpB,IADA,IAAIC,EAAI,EACAC,EAAI,EAAGF,GAAKE,EAAGA,IAAM,IAAKD,GAClC,OAAOA,GAgFR,OA7EAJ,EAAIM,QAAU,SAASC,GACtBC,KAAKC,KAAOF,EACZC,KAAKE,QAGNZ,EAAKa,OAAOX,EAAIM,SACfI,KAAM,WACLF,KAAKI,QACL,IAAI,IAAIC,EAAI,EAAGA,EAAIL,KAAKC,OAAQI,EAC/BL,KAAKI,KAAKE,OAAOC,aAAaF,IAAMA,EAErCL,KAAKQ,MAAQd,EAAMM,KAAKS,KAAOT,KAAKC,MACpCD,KAAKU,EAAI,IAEVC,OAAQ,SAASC,EAAOC,GACvB,IAAIC,EAAIR,OAAOC,aAAaK,GAAQF,EAAIV,KAAKU,EAAII,EAAGC,EAAI,EAExD,OAAGL,KAAKV,KAAKI,MACZJ,KAAKU,EAAIA,EACFK,IAERF,EAAOG,QAAQhB,KAAKI,KAAKJ,KAAKU,GAAIV,KAAKQ,OAEH,IAAhCR,KAAKS,KAAQT,KAAKS,KAAO,IAC5BI,EAAOG,QAAQhB,KAAKS,OAAQM,EAAIf,KAAKQ,SAGtCR,KAAKI,KAAKM,GAAKV,KAAKS,OACpBT,KAAKU,EAAII,EACFC,EAAIf,KAAKQ,QAEjBS,MAAO,SAASJ,GACf,OAAoB,GAAjBb,KAAKU,EAAEQ,OACF,GAERL,EAAOG,QAAQhB,KAAKI,KAAKJ,KAAKU,GAAIV,KAAKQ,OACvCR,KAAKU,EAAI,GACFV,KAAKQ,UAIdhB,EAAI2B,QAAU,SAASpB,GACtBC,KAAKC,KAAOF,EACZC,KAAKE,QAGNZ,EAAKa,OAAOX,EAAI2B,SACfjB,KAAM,WACLF,KAAKoB,MAAQ,IAAIC,MAAMrB,KAAKC,MAC5B,IAAI,IAAII,EAAI,EAAGA,EAAIL,KAAKC,OAAQI,EAC/BL,KAAKoB,MAAMf,GAAKC,OAAOC,aAAaF,GAErCL,KAAKQ,MAAQd,EAAMM,KAAKC,MACxBD,KAAKU,GAAK,GAEXY,OAAQ,SAAST,GAChB,IAAoChB,EAAhCiB,EAAID,EAAOU,QAAQvB,KAAKQ,OAC5B,GAAGM,EAAId,KAAKoB,MAAMF,OACjBrB,EAAIG,KAAKoB,MAAMN,GACZd,KAAKU,GAAK,GACZV,KAAKoB,MAAMI,KAAKxB,KAAKoB,MAAMpB,KAAKU,GAAKb,EAAE4B,OAAO,EAAG,QAE9C,CACJ,GAAoB,IAAhBX,EAAKA,EAAI,GAGZ,OAFAd,KAAKoB,MAAMI,KAAK,MACdxB,KAAKQ,MACA,GAER,IAAIb,EAAIK,KAAKoB,MAAMpB,KAAKU,GACxBb,EAAIF,EAAIA,EAAE8B,OAAO,EAAG,GACpBzB,KAAKoB,MAAMI,KAAK3B,GAGjB,OADAG,KAAKU,EAAII,EACFjB,KAIFL","file":"../../../encoding/compression/lzw.js","sourcesContent":["define([\r\n\t\"dojo/_base/lang\",\t// dojo.extend\r\n\t\"../bits\"\r\n], function(lang, bits) {\r\n\r\n\tvar lzw = lang.getObject(\"dojox.encoding.compression.lzw\", true);\r\n\r\n\tvar _bits = function(x){\r\n\t\tvar w = 1;\r\n\t\tfor(var v = 2; x >= v; v <<= 1, ++w);\r\n\t\treturn w;\r\n\t};\r\n\r\n\tlzw.Encoder = function(n){\r\n\t\tthis.size = n;\r\n\t\tthis.init();\r\n\t};\r\n\r\n\tlang.extend(lzw.Encoder, {\r\n\t\tinit: function(){\r\n\t\t\tthis.dict = {};\r\n\t\t\tfor(var i = 0; i < this.size; ++i){\r\n\t\t\t\tthis.dict[String.fromCharCode(i)] = i;\r\n\t\t\t}\r\n\t\t\tthis.width = _bits(this.code = this.size);\r\n\t\t\tthis.p = \"\";\r\n\t\t},\r\n\t\tencode: function(value, stream){\r\n\t\t\tvar c = String.fromCharCode(value), p = this.p + c, r = 0;\r\n\t\t\t// if already in the dictionary\r\n\t\t\tif(p in this.dict){\r\n\t\t\t\tthis.p = p;\r\n\t\t\t\treturn r;\r\n\t\t\t}\r\n\t\t\tstream.putBits(this.dict[this.p], this.width);\r\n\t\t\t// if we need to increase the code length\r\n\t\t\tif((this.code & (this.code + 1)) == 0){\r\n\t\t\t\tstream.putBits(this.code++, r = this.width++);\r\n\t\t\t}\r\n\t\t\t// add new string\r\n\t\t\tthis.dict[p] = this.code++;\r\n\t\t\tthis.p = c;\r\n\t\t\treturn r + this.width;\r\n\t\t},\r\n\t\tflush: function(stream){\r\n\t\t\tif(this.p.length == 0){\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tstream.putBits(this.dict[this.p], this.width);\r\n\t\t\tthis.p = \"\";\r\n\t\t\treturn this.width;\r\n\t\t}\r\n\t});\r\n\r\n\tlzw.Decoder = function(n){\r\n\t\tthis.size = n;\r\n\t\tthis.init();\r\n\t};\r\n\r\n\tlang.extend(lzw.Decoder, {\r\n\t\tinit: function(){\r\n\t\t\tthis.codes = new Array(this.size);\r\n\t\t\tfor(var i = 0; i < this.size; ++i){\r\n\t\t\t\tthis.codes[i] = String.fromCharCode(i);\r\n\t\t\t}\r\n\t\t\tthis.width = _bits(this.size);\r\n\t\t\tthis.p = -1;\r\n\t\t},\r\n\t\tdecode: function(stream){\r\n\t\t\tvar c = stream.getBits(this.width), v;\r\n\t\t\tif(c < this.codes.length){\r\n\t\t\t\tv = this.codes[c];\r\n\t\t\t\tif(this.p >= 0){\r\n\t\t\t\t\tthis.codes.push(this.codes[this.p] + v.substr(0, 1));\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif((c & (c + 1)) == 0){\r\n\t\t\t\t\tthis.codes.push(\"\");\r\n\t\t\t\t\t++this.width;\r\n\t\t\t\t\treturn \"\";\r\n\t\t\t\t}\r\n\t\t\t\tvar x = this.codes[this.p];\r\n\t\t\t\tv = x + x.substr(0, 1);\r\n\t\t\t\tthis.codes.push(v);\r\n\t\t\t}\r\n\t\t\tthis.p = c;\r\n\t\t\treturn v;\r\n\t\t}\r\n\t});\r\n\r\n\treturn lzw;\r\n});\r\n"]}