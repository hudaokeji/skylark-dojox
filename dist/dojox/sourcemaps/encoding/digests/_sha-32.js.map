{"version":3,"sources":["encoding/digests/_sha-32.js"],"names":["define","base","tmp","o","prototype","S","X","n","R","Ch","x","y","z","Maj","Sigma0256","Sigma1256","Gamma0256","toWord","s","wa","Array","length","i","charCodeAt","toHex","h","l","push","charAt","join","toBase64","t","j","_toString","String","fromCharCode","add","addWords","K","digest","msg","hash","depth","slice","a","b","c","d","e","f","g","T1","T2","w","pop"],"mappings":"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","file":"../../../encoding/digests/_sha-32.js","sourcesContent":["define([\"./_base\"], function(base){\r\n\t//\tbasic functions for 32-bit word based SHA-2 processing.\r\n\r\n\t//\tcreate a new object that uses a delegated base.\r\n\tvar o = (function(b){\r\n\t\tvar tmp = function(){};\r\n\t\ttmp.prototype = b;\r\n\t\tvar ret = new tmp();\r\n\t\treturn ret;\r\n\t})(base);\r\n\r\n\t//\texpose the output type conversion functions\r\n\to.toWord = function(s){\r\n\t\tvar wa = Array(s.length >> 2);\r\n\t\tfor(var i=0; i<wa.length; i++) wa[i] = 0;\r\n\t\tfor(var i=0; i<s.length*8; i+=8)\r\n\t\t\twa[i>>5] |= (s.charCodeAt(i/8)&0xFF)<<(24-i%32);\r\n\t\treturn wa;\r\n\t};\r\n\r\n\to.toHex = function(wa){\r\n\t\tvar h=\"0123456789abcdef\", s=[];\r\n\t\tfor(var i=0, l=wa.length*4; i<l; i++){\r\n\t\t\ts.push(h.charAt((wa[i>>2]>>((3-i%4)*8+4))&0xF), h.charAt((wa[i>>2]>>((3-i%4)*8))&0xF));\r\n\t\t}\r\n\t\treturn s.join(\"\");\t//\tstring\r\n\t};\r\n\r\n\to.toBase64 = function(wa){\r\n\t\tvar p=\"=\", tab=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\", s=[];\r\n\t\tfor(var i=0, l=wa.length*4; i<l; i+=3){\r\n\t\t\tvar t=(((wa[i>>2]>>8*(3-i%4))&0xFF)<<16)|(((wa[i+1>>2]>>8*(3-(i+1)%4))&0xFF)<<8)|((wa[i+2>>2]>>8*(3-(i+2)%4))&0xFF);\r\n\t\t\tfor(var j=0; j<4; j++){\r\n\t\t\t\tif(i*8+j*6>wa.length*32){\r\n\t\t\t\t\ts.push(p);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ts.push(tab.charAt((t>>6*(3-j))&0x3F));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn s.join(\"\");\t//\tstring\r\n\t};\r\n\r\n\to._toString = function(wa){\r\n\t\tvar s = \"\";\r\n\t\tfor(var i=0; i<wa.length*32; i+=8)\r\n\t\t\ts += String.fromCharCode((wa[i>>5]>>>(24-i%32))&0xFF);\r\n\t\treturn s;\r\n\t};\r\n\r\n\t//\tthe encoding functions\r\n\tfunction S (X, n) {return ( X >>> n ) | (X << (32 - n));}\r\n\tfunction R (X, n) {return ( X >>> n );}\r\n\tfunction Ch(x, y, z) {return ((x & y) ^ ((~x) & z));}\r\n\tfunction Maj(x, y, z) {return ((x & y) ^ (x & z) ^ (y & z));}\r\n\tfunction Sigma0256(x) {return (S(x, 2) ^ S(x, 13) ^ S(x, 22));}\r\n\tfunction Sigma1256(x) {return (S(x, 6) ^ S(x, 11) ^ S(x, 25));}\r\n\tfunction Gamma0256(x) {return (S(x, 7) ^ S(x, 18) ^ R(x, 3));}\r\n\tfunction Gamma1256(x) {return (S(x, 17) ^ S(x, 19) ^ R(x, 10));}\r\n\tfunction Sigma0512(x) {return (S(x, 28) ^ S(x, 34) ^ S(x, 39));}\r\n\tfunction Sigma1512(x) {return (S(x, 14) ^ S(x, 18) ^ S(x, 41));}\r\n\tfunction Gamma0512(x) {return (S(x, 1)  ^ S(x, 8) ^ R(x, 7));}\r\n\tfunction Gamma1512(x) {return (S(x, 19) ^ S(x, 61) ^ R(x, 6));}\r\n\r\n\t//\tmath alias\r\n\tvar add = base.addWords;\r\n\r\n\t//\tconstant K array\r\n\tvar K = [\r\n\t\t0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\r\n\t\t0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\r\n\t\t0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\r\n\t\t0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\r\n\t\t0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\r\n\t\t0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\r\n\t\t0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\r\n\t\t0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\r\n\t];\r\n\r\n\t//\tthe exposed function, used internally by SHA-224 and SHA-256\r\n\to.digest = function(msg, length, hash, depth){\r\n\t\t//\tclone the hash\r\n\t\thash = hash.slice(0);\r\n\r\n\t\tvar w = new Array(64);\r\n\t\tvar a, b, c, d, e, f, g, h;\r\n\t\tvar i, j, T1, T2;\r\n\r\n\t\t//\tappend padding\r\n\t\tmsg[length >> 5] |= 0x80 << (24 - length % 32);\r\n\t\tmsg[((length + 64 >> 9) << 4) + 15] = length;\r\n\r\n\t\t//\tdo the digest\r\n\t\tfor(i = 0; i < msg.length; i += 16){\r\n\t\t\ta = hash[0];\r\n\t\t\tb = hash[1];\r\n\t\t\tc = hash[2];\r\n\t\t\td = hash[3];\r\n\t\t\te = hash[4];\r\n\t\t\tf = hash[5];\r\n\t\t\tg = hash[6];\r\n\t\t\th = hash[7];\r\n\r\n\t\t\tfor(j = 0; j < 64; j++) {\r\n\t\t\t\tif (j < 16){\r\n\t\t\t\t\tw[j] = msg[j + i];\r\n\t\t\t\t} else { \r\n\t\t\t\t\tw[j] = add(add(add(Gamma1256(w[j - 2]), w[j - 7]), Gamma0256(w[j - 15])), w[j - 16]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tT1 = add(add(add(add(h, Sigma1256(e)), Ch(e, f, g)), K[j]), w[j]);\r\n\t\t\t\tT2 = add(Sigma0256(a), Maj(a, b, c));\r\n\t\t\t\th = g;\r\n\t\t\t\tg = f;\r\n\t\t\t\tf = e;\r\n\t\t\t\te = add(d, T1);\r\n\t\t\t\td = c;\r\n\t\t\t\tc = b;\r\n\t\t\t\tb = a;\r\n\t\t\t\ta = add(T1, T2);\r\n\t\t\t}\r\n\r\n\t\t\thash[0] = add(a, hash[0]);\r\n\t\t\thash[1] = add(b, hash[1]);\r\n\t\t\thash[2] = add(c, hash[2]);\r\n\t\t\thash[3] = add(d, hash[3]);\r\n\t\t\thash[4] = add(e, hash[4]);\r\n\t\t\thash[5] = add(f, hash[5]);\r\n\t\t\thash[6] = add(g, hash[6]);\r\n\t\t\thash[7] = add(h, hash[7]);\r\n\t\t}\r\n\t\tif(depth == 224){\r\n\t\t\thash.pop();\t//\ttake off the last word\r\n\t\t}\r\n\t\treturn hash;\r\n\t}\r\n\treturn o;\r\n});\r\n"]}