{"version":3,"sources":["encoding/digests/_sha-64.js"],"names":["define","sha32","int64","h","l","copy","dst","src","rrot","x","shift","revrrot","shr","add","y","w0","w1","w2","w3","add4","a","b","c","d","add5","e","K","o","outputTypes","stringToUtf8","s","toWord","toHex","wa","toBase64","_toString","digest","msg","length","hash","depth","HASH","i","push","j","T1","T2","f","g","s0","s1","Ch","Maj","r1","r2","r3","w","Array","ret"],"mappings":"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","file":"../../../encoding/digests/_sha-64.js","sourcesContent":["define([\"./_sha-32\"], function(sha32){\r\n\t//\tbasic functions for 64-bit word based SHA-2 processing.  Includes\r\n\t//\ta constructor for int64.  Relies on the sha32 base for encoding functions,\r\n\t//\tbut provides its own, making it easier for the user to not worry about 64-bit\r\n\t//\tword handling.\r\n\r\n\tvar int64 = function(h, l){ return { h: h, l: l }; };\r\n\r\n\t//\t64-bit math functions\r\n\tfunction copy(dst, src){\r\n\t\tdst.h = src.h;\r\n\t\tdst.l = src.l;\r\n\t}\r\n\r\n\t//Right-rotates a 64-bit number by shift\r\n\tfunction rrot(dst, x, shift){\r\n\t\tdst.l = (x.l >>> shift) | (x.h << (32-shift));\r\n\t\tdst.h = (x.h >>> shift) | (x.l << (32-shift));\r\n\t}\r\n\r\n\t//Reverses the dwords of the source and then rotates right by shift.\r\n\tfunction revrrot(dst, x, shift){\r\n\t\tdst.l = (x.h >>> shift) | (x.l << (32-shift));\r\n\t\tdst.h = (x.l >>> shift) | (x.h << (32-shift));\r\n\t}\r\n\r\n\t//Bitwise-shifts right a 64-bit number by shift\r\n\tfunction shr(dst, x, shift){\r\n\t\tdst.l = (x.l >>> shift) | (x.h << (32-shift));\r\n\t\tdst.h = (x.h >>> shift);\r\n\t}\r\n\r\n\t//Adds two 64-bit numbers\r\n\tfunction add(dst, x, y){\r\n\t\tvar w0 = (x.l & 0xffff) + (y.l & 0xffff);\r\n\t\tvar w1 = (x.l >>> 16) + (y.l >>> 16) + (w0 >>> 16);\r\n\t\tvar w2 = (x.h & 0xffff) + (y.h & 0xffff) + (w1 >>> 16);\r\n\t\tvar w3 = (x.h >>> 16) + (y.h >>> 16) + (w2 >>> 16);\r\n\t\tdst.l = (w0 & 0xffff) | (w1 << 16);\r\n\t\tdst.h = (w2 & 0xffff) | (w3 << 16);\r\n\t}\r\n\r\n\t//Same, except with 4 addends. Works faster than adding them one by one.\r\n\tfunction add4(dst, a, b, c, d){\r\n\t\tvar w0 = (a.l & 0xffff) + (b.l & 0xffff) + (c.l & 0xffff) + (d.l & 0xffff);\r\n\t\tvar w1 = (a.l >>> 16) + (b.l >>> 16) + (c.l >>> 16) + (d.l >>> 16) + (w0 >>> 16);\r\n\t\tvar w2 = (a.h & 0xffff) + (b.h & 0xffff) + (c.h & 0xffff) + (d.h & 0xffff) + (w1 >>> 16);\r\n\t\tvar w3 = (a.h >>> 16) + (b.h >>> 16) + (c.h >>> 16) + (d.h >>> 16) + (w2 >>> 16);\r\n\t\tdst.l = (w0 & 0xffff) | (w1 << 16);\r\n\t\tdst.h = (w2 & 0xffff) | (w3 << 16);\r\n\t}\r\n\r\n\t//Same, except with 5 addends\r\n\tfunction add5(dst, a, b, c, d, e){\r\n\t\tvar w0 = (a.l & 0xffff) + (b.l & 0xffff) + (c.l & 0xffff) + (d.l & 0xffff) + (e.l & 0xffff);\r\n\t\tvar w1 = (a.l >>> 16) + (b.l >>> 16) + (c.l >>> 16) + (d.l >>> 16) + (e.l >>> 16) + (w0 >>> 16);\r\n\t\tvar w2 = (a.h & 0xffff) + (b.h & 0xffff) + (c.h & 0xffff) + (d.h & 0xffff) + (e.h & 0xffff) + (w1 >>> 16);\r\n\t\tvar w3 = (a.h >>> 16) + (b.h >>> 16) + (c.h >>> 16) + (d.h >>> 16) + (e.h >>> 16) + (w2 >>> 16);\r\n\t\tdst.l = (w0 & 0xffff) | (w1 << 16);\r\n\t\tdst.h = (w2 & 0xffff) | (w3 << 16);\r\n\t}\r\n\r\n\t//\tconstants\r\n\tvar K = [\r\n\t\tint64(0x428a2f98, 0xd728ae22), int64(0x71374491, 0x23ef65cd), int64(0xb5c0fbcf, 0xec4d3b2f), int64(0xe9b5dba5, 0x8189dbbc), \r\n\t\tint64(0x3956c25b, 0xf348b538), int64(0x59f111f1, 0xb605d019), int64(0x923f82a4, 0xaf194f9b), int64(0xab1c5ed5, 0xda6d8118), \r\n\t\tint64(0xd807aa98, 0xa3030242), int64(0x12835b01, 0x45706fbe), int64(0x243185be, 0x4ee4b28c), int64(0x550c7dc3, 0xd5ffb4e2), \r\n\t\tint64(0x72be5d74, 0xf27b896f), int64(0x80deb1fe, 0x3b1696b1), int64(0x9bdc06a7, 0x25c71235), int64(0xc19bf174, 0xcf692694), \r\n\t\tint64(0xe49b69c1, 0x9ef14ad2), int64(0xefbe4786, 0x384f25e3), int64(0x0fc19dc6, 0x8b8cd5b5), int64(0x240ca1cc, 0x77ac9c65), \r\n\t\tint64(0x2de92c6f, 0x592b0275), int64(0x4a7484aa, 0x6ea6e483), int64(0x5cb0a9dc, 0xbd41fbd4), int64(0x76f988da, 0x831153b5), \r\n\t\tint64(0x983e5152, 0xee66dfab), int64(0xa831c66d, 0x2db43210), int64(0xb00327c8, 0x98fb213f), int64(0xbf597fc7, 0xbeef0ee4), \r\n\t\tint64(0xc6e00bf3, 0x3da88fc2), int64(0xd5a79147, 0x930aa725), int64(0x06ca6351, 0xe003826f), int64(0x14292967, 0x0a0e6e70), \r\n\t\tint64(0x27b70a85, 0x46d22ffc), int64(0x2e1b2138, 0x5c26c926), int64(0x4d2c6dfc, 0x5ac42aed), int64(0x53380d13, 0x9d95b3df), \r\n\t\tint64(0x650a7354, 0x8baf63de), int64(0x766a0abb, 0x3c77b2a8), int64(0x81c2c92e, 0x47edaee6), int64(0x92722c85, 0x1482353b), \r\n\t\tint64(0xa2bfe8a1, 0x4cf10364), int64(0xa81a664b, 0xbc423001), int64(0xc24b8b70, 0xd0f89791), int64(0xc76c51a3, 0x0654be30), \r\n\t\tint64(0xd192e819, 0xd6ef5218), int64(0xd6990624, 0x5565a910), int64(0xf40e3585, 0x5771202a), int64(0x106aa070, 0x32bbd1b8), \r\n\t\tint64(0x19a4c116, 0xb8d2d0c8), int64(0x1e376c08, 0x5141ab53), int64(0x2748774c, 0xdf8eeb99), int64(0x34b0bcb5, 0xe19b48a8), \r\n\t\tint64(0x391c0cb3, 0xc5c95a63), int64(0x4ed8aa4a, 0xe3418acb), int64(0x5b9cca4f, 0x7763e373), int64(0x682e6ff3, 0xd6b2b8a3), \r\n\t\tint64(0x748f82ee, 0x5defb2fc), int64(0x78a5636f, 0x43172f60), int64(0x84c87814, 0xa1f0ab72), int64(0x8cc70208, 0x1a6439ec), \r\n\t\tint64(0x90befffa, 0x23631e28), int64(0xa4506ceb, 0xde82bde9), int64(0xbef9a3f7, 0xb2c67915), int64(0xc67178f2, 0xe372532b), \r\n\t\tint64(0xca273ece, 0xea26619c), int64(0xd186b8c7, 0x21c0c207), int64(0xeada7dd6, 0xcde0eb1e), int64(0xf57d4f7f, 0xee6ed178), \r\n\t\tint64(0x06f067aa, 0x72176fba), int64(0x0a637dc5, 0xa2c898a6), int64(0x113f9804, 0xbef90dae), int64(0x1b710b35, 0x131c471b), \r\n\t\tint64(0x28db77f5, 0x23047d84), int64(0x32caab7b, 0x40c72493), int64(0x3c9ebe0a, 0x15c9bebc), int64(0x431d67c4, 0x9c100d4c), \r\n\t\tint64(0x4cc5d4be, 0xcb3e42b6), int64(0x597f299c, 0xfc657e2a), int64(0x5fcb6fab, 0x3ad6faec), int64(0x6c44198c, 0x4a475817)\r\n\t];\r\n\r\n\t//\tour return object\r\n\tvar o = {\r\n\t\toutputTypes: sha32.outputTypes,\r\n\t\tstringToUtf8: function(s){ return sha32.stringToUtf8(s); },\r\n\t\ttoWord: function(s){ return sha32.toWord(s); },\r\n\t\ttoHex: function(wa){ return sha32.toHex(wa); },\r\n\t\ttoBase64: function(wa){ return sha32.toBase64(wa); },\r\n\t\t_toString: function(wa){ return sha32._toString(wa); }\r\n\t};\r\n\r\n\t//\tthe main function\r\n\to.digest = function(msg, length, hash, depth){\r\n\t\t//\tprep the hash\r\n\t\tvar HASH = [];\r\n\t\tfor(var i=0, l=hash.length; i<l; i+=2){\r\n\t\t\tHASH.push(int64(hash[i], hash[i+1]));\r\n\t\t}\r\n\r\n\t\t//\tinitialize our variables\r\n\t\tvar T1 = int64(0,0),\r\n\t\t\tT2 = int64(0,0),\r\n\t\t\ta = int64(0,0),\r\n\t\t\tb = int64(0,0),\r\n\t\t\tc = int64(0,0),\r\n\t\t\td = int64(0,0),\r\n\t\t\te = int64(0,0),\r\n\t\t\tf = int64(0,0),\r\n\t\t\tg = int64(0,0),\r\n\t\t\th = int64(0,0),\r\n\t\t\ts0 = int64(0,0),\r\n\t\t\ts1 = int64(0,0),\r\n\t\t\tCh = int64(0,0),\r\n\t\t\tMaj = int64(0,0),\r\n\t\t\tr1 = int64(0,0),\r\n\t\t\tr2 = int64(0,0),\r\n\t\t\tr3 = int64(0,0);\r\n\t\tvar j, i;\r\n\t\tvar w = new Array(80);\r\n\t\tfor(i=0; i<80; i++) w[i] = int64(0, 0);\r\n\r\n\t\t// append padding to the source string.\r\n\t\tmsg[length >> 5] |= 0x80 << (24 - (length & 0x1f));\r\n\t\tmsg[((length + 128 >> 10)<< 5) + 31] = length;\r\n\r\n\t\tfor(i=0; i<msg.length; i+=32){\r\n\t\t\tcopy(a, HASH[0]);\r\n\t\t\tcopy(b, HASH[1]);\r\n\t\t\tcopy(c, HASH[2]);\r\n\t\t\tcopy(d, HASH[3]);\r\n\t\t\tcopy(e, HASH[4]);\r\n\t\t\tcopy(f, HASH[5]);\r\n\t\t\tcopy(g, HASH[6]);\r\n\t\t\tcopy(h, HASH[7]);\r\n\r\n\t\t\tfor(j=0; j<16; j++){\r\n\t\t\t\tw[j].h = msg[i + 2*j];\r\n\t\t\t\tw[j].l = msg[i + 2*j + 1];\r\n\t\t\t}\r\n\r\n\t\t\tfor(j=16; j<80; j++){\r\n\t\t\t\t//sigma1\r\n\t\t\t\trrot(r1, w[j-2], 19);\r\n\t\t\t\trevrrot(r2, w[j-2], 29);\r\n\t\t\t\tshr(r3, w[j-2], 6);\r\n\t\t\t\ts1.l = r1.l ^ r2.l ^ r3.l;\r\n\t\t\t\ts1.h = r1.h ^ r2.h ^ r3.h;\r\n\r\n\t\t\t\t//sigma0\r\n\t\t\t\trrot(r1, w[j-15], 1);\r\n\t\t\t\trrot(r2, w[j-15], 8);\r\n\t\t\t\tshr(r3, w[j-15], 7);\r\n\t\t\t\ts0.l = r1.l ^ r2.l ^ r3.l;\r\n\t\t\t\ts0.h = r1.h ^ r2.h ^ r3.h;\r\n\r\n\t\t\t\tadd4(w[j], s1, w[j-7], s0, w[j-16]);\r\n\t\t\t}\r\n\r\n\t\t\tfor(j = 0; j < 80; j++){\r\n\t\t\t\t//Ch\r\n\t\t\t\tCh.l = (e.l & f.l) ^ (~e.l & g.l);\r\n\t\t\t\tCh.h = (e.h & f.h) ^ (~e.h & g.h);\r\n\r\n\t\t\t\t//Sigma1\r\n\t\t\t\trrot(r1, e, 14);\r\n\t\t\t\trrot(r2, e, 18);\r\n\t\t\t\trevrrot(r3, e, 9);\r\n\t\t\t\ts1.l = r1.l ^ r2.l ^ r3.l;\r\n\t\t\t\ts1.h = r1.h ^ r2.h ^ r3.h;\r\n\r\n\t\t\t\t//Sigma0\r\n\t\t\t\trrot(r1, a, 28);\r\n\t\t\t\trevrrot(r2, a, 2);\r\n\t\t\t\trevrrot(r3, a, 7);\r\n\t\t\t\ts0.l = r1.l ^ r2.l ^ r3.l;\r\n\t\t\t\ts0.h = r1.h ^ r2.h ^ r3.h;\r\n\r\n\t\t\t\t//Maj\r\n\t\t\t\tMaj.l = (a.l & b.l) ^ (a.l & c.l) ^ (b.l & c.l);\r\n\t\t\t\tMaj.h = (a.h & b.h) ^ (a.h & c.h) ^ (b.h & c.h);\r\n\r\n\t\t\t\tadd5(T1, h, s1, Ch, K[j], w[j]);\r\n\t\t\t\tadd(T2, s0, Maj);\r\n\r\n\t\t\t\tcopy(h, g);\r\n\t\t\t\tcopy(g, f);\r\n\t\t\t\tcopy(f, e);\r\n\t\t\t\tadd(e, d, T1);\r\n\t\t\t\tcopy(d, c);\r\n\t\t\t\tcopy(c, b);\r\n\t\t\t\tcopy(b, a);\r\n\t\t\t\tadd(a, T1, T2);\r\n\t\t\t}\r\n\r\n\t\t\tadd(HASH[0], HASH[0], a);\r\n\t\t\tadd(HASH[1], HASH[1], b);\r\n\t\t\tadd(HASH[2], HASH[2], c);\r\n\t\t\tadd(HASH[3], HASH[3], d);\r\n\t\t\tadd(HASH[4], HASH[4], e);\r\n\t\t\tadd(HASH[5], HASH[5], f);\r\n\t\t\tadd(HASH[6], HASH[6], g);\r\n\t\t\tadd(HASH[7], HASH[7], h);\r\n\t\t}\r\n\t\t\r\n\t\t//\tconvert the final hash back to 32-bit words\r\n\t\tvar ret = [];\r\n\t\tif(depth == 384){ HASH.length = 6; }\r\n\t\tfor(var i=0, l=HASH.length; i<l; i++){\r\n\t\t\tret[i*2] = HASH[i].h;\r\n\t\t\tret[i*2+1] = HASH[i].l;\r\n\t\t}\r\n\t\treturn ret;\r\n\t};\r\n\r\n\treturn o;\r\n});\r\n"]}