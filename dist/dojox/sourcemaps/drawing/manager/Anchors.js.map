{"version":3,"sources":["drawing/manager/Anchors.js"],"names":["define","dojo","oo","defaults","Anchor","declare","options","this","copy","mouse","point","pointIdx","util","id","uid","org","mixin","stencil","anchorPositionCheck","hitch","anchorConstrain","_zCon","connect","render","connectMouse","y_anchor","x_anchor","shape","removeShape","d","anchors","z","zoom","b","width","s","size","p","line","style","color","cap","_r","x","y","height","container","createRect","setStroke","setFill","fill","setTransform","dx","dy","attr","onRenderStencil","anchor","onTransformPoint","onAnchorDown","obj","selected","onAnchorUp","onTransformEnd","onAnchorDrag","getTransform","conL","conR","conT","conB","pmx","getParent","marginZero","orgx","orgy","minSize","chk","console","warn","applyTransform","Infinity","constrained","linkedAnchor","setPoint","mx","_mouseHandle","register","disconnectMouse","unregister","reset","destroy","disconnect","undo","drawing","items","onAddAnchor","onReset","st","byId","stencils","onDeselect","onSelect","nm","forEach","a","moveToFront","item","pts","i","anchorType","push","t","length","setPoints","onTransform","onChangeStyle","add","points","noAnchor","log","type","shortType","_cons","f","l","remove"],"mappings":"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","file":"../../../drawing/manager/Anchors.js","sourcesContent":["define([\"dojo\", \"../util/oo\", \"../defaults\"], \r\nfunction(dojo, oo, defaults){\r\n\r\nvar Anchor = oo.declare(\r\n\tfunction(/* Object */ options){\r\n\t\t// summary:\r\n\t\t//\t\tconstructor.\r\n\t\t// options:\r\n\t\t//\t\tdojox.__stencilArgs plus some additional\r\n\t\t//\t\tdata, like which point this is (pointIdx)\r\n\r\n\t\tthis.defaults = defaults.copy();\r\n\t\tthis.mouse = options.mouse;\r\n\t\tthis.point = options.point;\r\n\t\tthis.pointIdx = options.pointIdx;\r\n\t\tthis.util = options.util;\r\n\t\tthis.id = options.id || this.util.uid(\"anchor\");\r\n\t\tthis.org = dojo.mixin({}, this.point);\r\n\t\tthis.stencil = options.stencil;\r\n\t\tif(this.stencil.anchorPositionCheck){\r\n\t\t\tthis.anchorPositionCheck = dojo.hitch(this.stencil, this.stencil.anchorPositionCheck);\r\n\t\t}\r\n\t\tif(this.stencil.anchorConstrain){\r\n\t\t\tthis.anchorConstrain = dojo.hitch(this.stencil, this.stencil.anchorConstrain);\r\n\t\t}\r\n\t\tthis._zCon = dojo.connect(this.mouse, \"setZoom\", this, \"render\");\r\n\t\tthis.render();\r\n\t\tthis.connectMouse();\r\n\t},\r\n\t{\r\n\t\t// summary:\r\n\t\t//\t\tAn anchor point that is attached to (usually) one of the\r\n\t\t//\t\tcorners of a Stencil.\r\n\t\t//\t\tUsed internally.\r\n\r\n\t\ty_anchor:null,\r\n\t\tx_anchor:null,\r\n\t\trender: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates the anchor point. Unlike most render methods\r\n\t\t\t//\t\tin Drawing, this is only called once.\r\n\r\n\t\t\tthis.shape && this.shape.removeShape();\r\n\t\t\tvar d = this.defaults.anchors,\r\n\t\t\t\tz = this.mouse.zoom,\r\n\t\t\t\tb = d.width * z,\r\n\t\t\t\ts = d.size * z,\r\n\t\t\t\tp = s/2,\r\n\t\t\t\tline = {\r\n\t\t\t\t\twidth:b,\r\n\t\t\t\t\tstyle:d.style,\r\n\t\t\t\t\tcolor:d.color,\r\n\t\t\t\t\tcap:d.cap\r\n\t\t\t\t};\r\n\t\t\t\r\n\t\r\n\t\t\tvar _r = {\r\n\t\t\t\tx: this.point.x-p,\r\n\t\t\t\ty: this.point.y-p,\r\n\t\t\t\twidth: s,\r\n\t\t\t\theight: s\r\n\t\t\t};\r\n\t\t\tthis.shape = this.stencil.container.createRect(_r)\r\n\t\t\t\t.setStroke(line)\r\n\t\t\t\t.setFill(d.fill);\r\n\t\t\t\r\n\t\t\tthis.shape.setTransform({dx:0, dy:0});\r\n\t\t\tthis.util.attr(this, \"drawingType\", \"anchor\");\r\n\t\t\tthis.util.attr(this, \"id\", this.id);\r\n\t\t},\r\n\t\tonRenderStencil: function(/*Anchor*/anchor){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEvent fires when an anchor calls a Stencil's render method\r\n\t\t},\r\n\t\tonTransformPoint: function(/*Anchor*/anchor){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEvent fires when an anchor changes the points of a Stencil\r\n\t\t},\r\n\t\tonAnchorDown: function(/*Mouse.EventObject*/obj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEvent fires for mousedown on anchor\r\n\t\t\tthis.selected = obj.id == this.id;\r\n\t\t},\r\n\t\tonAnchorUp: function(/*Mouse.EventObject*/obj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEvent fires for mouseup on anchor\r\n\t\t\tthis.selected = false;\r\n\t\t\tthis.stencil.onTransformEnd(this);\r\n\t\t},\r\n\t\t\r\n\t\tonAnchorDrag: function(/*Mouse.EventObject*/obj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEvent fires for on dragging of an anchor\r\n\t\t\tif(this.selected){\r\n\t\t\t\t// mx is the original transform from when the anchor\r\n\t\t\t\t// was created. It does not change\r\n\t\t\t\tvar mx = this.shape.getTransform();\r\n\t\t\t\t\r\n\t\t\t\tvar pmx = this.shape.getParent().getParent().getTransform();\r\n\t\t\t\t\r\n\t\t\t\tvar marginZero = this.defaults.anchors.marginZero;\r\n\t\t\t\t\r\n\t\t\t\tvar orgx = pmx.dx + this.org.x,\r\n\t\t\t\t\torgy = pmx.dy + this.org.y,\r\n\t\t\t\t\tx = obj.x - orgx,\r\n\t\t\t\t\ty = obj.y - orgy,\r\n\t\t\t\t\ts = this.defaults.anchors.minSize;\r\n\t\t\t\t\r\n\t\t\t\tvar conL, conR, conT, conB;\r\n\t\t\t\t\r\n\t\t\t\tvar chk = this.anchorPositionCheck(x, y, this);\r\n\t\t\t\tif(chk.x<0){\r\n\t\t\t\t\tconsole.warn(\"X<0 Shift\");\r\n\t\t\t\t\twhile(this.anchorPositionCheck(x, y, this).x<0){\r\n\t\t\t\t\t\tthis.shape.getParent().getParent().applyTransform({dx:2, dy:0});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(chk.y<0){\r\n\t\t\t\t\tconsole.warn(\"Y<0 Shift\");\r\n\t\t\t\t\twhile(this.anchorPositionCheck(x, y, this).y<0){\r\n\t\t\t\t\t\tthis.shape.getParent().getParent().applyTransform({dx:0, dy:2});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(this.y_anchor){\r\n\t\t\t\t\t// prevent y overlap of opposite anchor\r\n\t\t\t\t\tif(this.org.y > this.y_anchor.org.y){\r\n\t\t\t\t\t\t// bottom anchor\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconT = this.y_anchor.point.y + s - this.org.y;\r\n\t\t\t\t\t\tconB = Infinity;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(y < conT){\r\n\t\t\t\t\t\t\t// overlapping other anchor\r\n\t\t\t\t\t\t\ty = conT;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t// top anchor\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconT = -orgy + marginZero;\r\n\t\t\t\t\t\tconB = this.y_anchor.point.y - s - this.org.y;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(y < conT){\r\n\t\t\t\t\t\t\t// less than zero\r\n\t\t\t\t\t\t\ty = conT;\r\n\t\t\t\t\t\t}else if(y > conB){\r\n\t\t\t\t\t\t\t// overlapping other anchor\r\n\t\t\t\t\t\t\ty = conB;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// Lines - check for zero\r\n\t\t\t\t\tconT = -orgy + marginZero;\r\n\t\t\t\t\tif(y < conT){\r\n\t\t\t\t\t\t// less than zero\r\n\t\t\t\t\t\ty = conT;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(this.x_anchor){\r\n\t\t\t\t\t// prevent x overlap of opposite anchor\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(this.org.x>this.x_anchor.org.x){\r\n\t\t\t\t\t\t// right anchor\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconL = this.x_anchor.point.x + s - this.org.x;\r\n\t\t\t\t\t\tconR = Infinity;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(x < conL){\r\n\t\t\t\t\t\t\t// overlapping other anchor\r\n\t\t\t\t\t\t\tx = conL;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t// left anchor\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconL = -orgx + marginZero;\r\n\t\t\t\t\t\tconR = this.x_anchor.point.x - s - this.org.x;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(x < conL){\r\n\t\t\t\t\t\t\tx = conL;\r\n\t\t\t\t\t\t}else if(x > conR){\r\n\t\t\t\t\t\t\t// overlapping other anchor\r\n\t\t\t\t\t\t\tx = conR;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// Lines check for zero\r\n\t\t\t\t\tconL = -orgx + marginZero;\r\n\t\t\t\t\tif(x < conL){\r\n\t\t\t\t\t\tx = conL;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//Constrains anchor point, returns null if not overwritten by stencil\r\n\t\t\t\tvar constrained = this.anchorConstrain(x, y);\r\n\t\t\t\tif(constrained != null){\r\n\t\t\t\t\tx=constrained.x;\r\n\t\t\t\t\ty=constrained.y;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.shape.setTransform({\r\n\t\t\t\t\tdx:x,\r\n\t\t\t\t\tdy:y\r\n\t\t\t\t});\r\n\t\t\t\tif(this.linkedAnchor){\r\n\t\t\t\t\t// first and last points of a closed-curve-path\r\n\t\t\t\t\tthis.linkedAnchor.shape.setTransform({\r\n\t\t\t\t\t\tdx:x,\r\n\t\t\t\t\t\tdy:y\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tthis.onTransformPoint(this);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tanchorConstrain: function(/* Number */x,/* Number */ y){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTo be over written by tool!\r\n\t\t\t//\t\tAdd an anchorConstrain method to the tool\r\n\t\t\t//\t\tand it will automatically overwrite this stub.\r\n\t\t\t//\t\tShould return a constrained x & y value.\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\t\r\n\t\tanchorPositionCheck: function(/* Number */x,/* Number */ y, /* Anchor */anchor){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTo be over written by tool!\r\n\t\t\t//\t\tAdd a anchorPositionCheck method to the tool\r\n\t\t\t//\t\tand it will automatically overwrite this stub.\r\n\t\t\t//\t\tShould return x and y coords. Success is both\r\n\t\t\t//\t\tbeing greater than zero, fail is if one or both\r\n\t\t\t//\t\tare less than zero.\r\n\t\t\treturn {x:1, y:1};\r\n\t\t},\r\n\t\t\r\n\t\tsetPoint: function(mx){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal. Sets the Stencil's point\r\n\t\t\tthis.shape.applyTransform(mx);\r\n\t\t},\r\n\t\t\r\n\t\tconnectMouse: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal. Connects anchor to manager.mouse\r\n\t\t\tthis._mouseHandle = this.mouse.register(this);\r\n\t\t},\r\n\t\t\r\n\t\tdisconnectMouse: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal. Disconnects anchor to manager.mouse\r\n\t\t\tthis.mouse.unregister(this._mouseHandle);\r\n\t\t},\r\n\t\t\r\n\t\treset: function(stencil){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled (usually) from a Stencil when that Stencil\r\n\t\t\t//\t\tneeded to make modifications to the position of the\r\n\t\t\t//\t\tpoint. Basically used when teh anchor causes a\r\n\t\t\t//\t\tless than zero condition.\r\n\t\t},\r\n\t\t\r\n\t\tdestroy: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDestroys anchor.\r\n\t\t\tdojo.disconnect(this._zCon);\r\n\t\t\tthis.disconnectMouse();\r\n\t\t\tthis.shape.removeShape();\r\n\t\t}\r\n\t}\r\n);\r\n\r\n//dojox.drawing.manager.Anchors = \r\nreturn oo.declare(\r\n\t// summary:\r\n\t//\t\tCreates and manages the anchor points that are attached to\r\n\t//\t\t(usually) the corners of a Stencil.\r\n\t// description:\r\n\t//\t\tUsed internally, but there are some things that should be known:\r\n\t//\t\tAnchors attach to a Stencil's 'points' (See stencil.points)\r\n\t//\t\tTo not display an anchor on a certain point, add noAnchor:true\r\n\t//\t\tto the point.\r\n\t\r\n\tfunction(/* dojox.__stencilArgs */options){\r\n\t\tthis.mouse = options.mouse;\r\n\t\tthis.undo = options.undo;\r\n\t\tthis.util = options.util;\r\n\t\tthis.drawing = options.drawing;\r\n\t\tthis.items = {};\r\n\t},\r\n\t{\r\n\t\tonAddAnchor: function(/*Anchor*/anchor){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEvent fires when anchor is created\r\n\t\t},\r\n\t\t\r\n\t\t\r\n\t\tonReset: function(/*Stencil*/stencil){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEvent fires when an anchor's reset method is called\r\n\r\n\t\t\t// a desperate hack in order to get the anchor point to reset.\r\n\t\t\t// FIXME: Is this still used? I think its item.deselect();item.select();\r\n\t\t\tvar st = this.util.byId(\"drawing\").stencils;\r\n\t\t\tst.onDeselect(stencil);\r\n\t\t\tst.onSelect(stencil);\r\n\t\t},\r\n\t\t\r\n\t\tonRenderStencil: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEvent fires when an anchor calls a Stencil's render method\r\n\r\n\t\t\tfor(var nm in this.items){\r\n\t\t\t\tdojo.forEach(this.items[nm].anchors, function(a){\r\n\t\t\t\t\ta.shape.moveToFront();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tonTransformPoint: function(/*Anchor*/anchor){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEvent fired on anchor drag\r\n\r\n\t\t\t// If anchors are a \"group\", it's corresponding anchor\r\n\t\t\t// is set. All anchors then moved to front.\r\n\t\t\tvar anchors = this.items[anchor.stencil.id].anchors;\r\n\t\t\tvar item = this.items[anchor.stencil.id].item;\r\n\t\t\tvar pts = [];\r\n\t\t\tdojo.forEach(anchors, function(a, i){\r\n\t\t\t\tif(anchor.id == a.id || anchor.stencil.anchorType!=\"group\"){\r\n\t\t\t\t\t// nothing\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(anchor.org.y == a.org.y){\r\n\t\t\t\t\t\ta.setPoint({\r\n\t\t\t\t\t\t\tdx: 0,\r\n\t\t\t\t\t\t\tdy: anchor.shape.getTransform().dy - a.shape.getTransform().dy\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}else if(anchor.org.x == a.org.x){\r\n\t\t\t\t\t\ta.setPoint({\r\n\t\t\t\t\t\t\tdx: anchor.shape.getTransform().dx - a.shape.getTransform().dx,\r\n\t\t\t\t\t\t\tdy: 0\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\ta.shape.moveToFront();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar mx = a.shape.getTransform();\r\n\t\t\t\tpts.push({x:mx.dx + a.org.x, y:mx.dy+ a.org.y});\r\n\t\t\t\t\r\n\t\t\t\tif(a.point.t){\r\n\t\t\t\t\tpts[pts.length-1].t = a.point.t;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}, this);\r\n\t\t\titem.setPoints(pts);\r\n\t\t\titem.onTransform(anchor);\r\n\t\t\tthis.onRenderStencil();\r\n\t\t},\r\n\t\t\r\n\t\tonAnchorUp: function(/*Anchor*/anchor){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEvent fired on anchor mouseup\r\n\t\t},\r\n\t\t\r\n\t\tonAnchorDown: function(/*Anchor*/anchor){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEvent fired on anchor mousedown\r\n\t\t},\r\n\t\t\r\n\t\tonAnchorDrag: function(/*Anchor*/anchor){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEvent fired when anchor is moved\r\n\t\t},\r\n\t\t\r\n\t\tonChangeStyle: function(/*Object*/stencil){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tif the Stencil changes color while were's selected\r\n\t\t\t//\t\tthis moves the anchors to the back. Fix it.\r\n\t\t\t\r\n\t\t\tfor(var nm in this.items){\r\n\t\t\t\tdojo.forEach(this.items[nm].anchors, function(a){\r\n\t\t\t\t\ta.shape.moveToFront();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tadd: function(/*Stencil*/item){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates anchor points on a Stencil, based on the\r\n\t\t\t//\t\tStencil's points.\r\n\r\n\t\t\tthis.items[item.id] = {\r\n\t\t\t\titem:item,\r\n\t\t\t\tanchors:[]\r\n\t\t\t};\r\n\t\t\tif(item.anchorType==\"none\"){ return; }\r\n\t\t\tvar pts = item.points;\r\n\t\t\tdojo.forEach(pts, function(p, i){\r\n\t\t\t\tif(p.noAnchor){ return; }\r\n\t\t\t\tif(i==0 || i == item.points.length-1){\r\n\t\t\t\t\tconsole.log(\"ITEM TYPE:\", item.type, item.shortType);\r\n\t\t\t\t}\r\n\t\t\t\tvar a = new Anchor({stencil:item, point:p, pointIdx:i, mouse:this.mouse, util:this.util});\r\n\t\t\t\tthis.items[item.id]._cons = [\r\n\t\t\t\t\tdojo.connect(a, \"onRenderStencil\", this, \"onRenderStencil\"),\r\n\t\t\t\t\tdojo.connect(a, \"reset\", this, \"onReset\"),\r\n\t\t\t\t\tdojo.connect(a, \"onAnchorUp\", this, \"onAnchorUp\"),\r\n\t\t\t\t\tdojo.connect(a, \"onAnchorDown\", this, \"onAnchorDown\"),\r\n\t\t\t\t\tdojo.connect(a, \"onAnchorDrag\", this, \"onAnchorDrag\"),\r\n\t\t\t\t\tdojo.connect(a, \"onTransformPoint\", this, \"onTransformPoint\"),\r\n\t\t\t\t\t// FIXME: this will fire for each anchor. yech.\r\n\t\t\t\t\tdojo.connect(item, \"onChangeStyle\", this, \"onChangeStyle\")\r\n\t\t\t\t];\r\n\t\t\t\t\r\n\t\t\t\tthis.items[item.id].anchors.push(a);\r\n\t\t\t\tthis.onAddAnchor(a);\r\n\t\t\t}, this);\r\n\t\t\t\r\n\t\t\tif(item.shortType==\"path\"){\r\n\t\t\t\t// check if we have a double-point of a closed-curve-path\r\n\t\t\t\tvar f = pts[0], l = pts[pts.length-1], a = this.items[item.id].anchors;\r\n\t\t\t\tif(f.x ==l.x && f.y==l.y){\r\n\t\t\t\t\tconsole.warn(\"LINK ANVHROS\", a[0], a[a.length-1]);\r\n\t\t\t\t\ta[0].linkedAnchor = a[a.length-1];\r\n\t\t\t\t\ta[a.length-1].linkedAnchor = a[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(item.anchorType==\"group\"){\r\n\t\t\t\tdojo.forEach(this.items[item.id].anchors, function(anchor){\r\n\t\t\t\t\tdojo.forEach(this.items[item.id].anchors, function(a){\r\n\t\t\t\t\t\tif(anchor.id != a.id){\r\n\t\t\t\t\t\t\tif(anchor.org.y == a.org.y){\r\n\t\t\t\t\t\t\t\tanchor.x_anchor = a;\r\n\t\t\t\t\t\t\t}else if(anchor.org.x == a.org.x){\r\n\t\t\t\t\t\t\t\tanchor.y_anchor = a;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},this);\r\n\t\t\t\t},this);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tremove: function(/*Stencil*/item){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDestroys the anchor points for a Stencil.\r\n\r\n\t\t\tif(!this.items[item.id]){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tdojo.forEach(this.items[item.id].anchors, function(a){\r\n\t\t\t\ta.destroy();\r\n\t\t\t});\r\n\t\t\tdojo.forEach(this.items[item.id]._cons, dojo.disconnect, dojo);\r\n\t\t\tthis.items[item.id].anchors = null;\r\n\t\t\tdelete this.items[item.id];\r\n\t\t}\r\n\t}\r\n);\r\n\r\n});\r\n"]}