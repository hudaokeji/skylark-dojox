{"version":3,"sources":["drawing/manager/keys.js"],"names":["define","dojo","utilCommon","isEdit","enabled","keys","arrowIncrement","arrowShiftIncrement","shift","ctrl","alt","cmmd","meta","onDelete","evt","onEsc","onEnter","onArrow","onKeyDown","onKeyUp","listeners","register","options","_handle","uid","this","push","handle","scope","window","callback","keyCode","_getLetter","charAt","_mixin","letter","editMode","_isedit","enable","_enabled","scanForFields","_fieldCons","forEach","disconnect","query","n","a","connect","b","init","setTimeout","hitch","document","stopEvent","_stop","console","warn","inc","altOrOption","x","y","addOnLoad"],"mappings":"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","file":"../../../drawing/manager/keys.js","sourcesContent":["define([\"dojo\", \"../util/common\"], \r\nfunction(dojo, utilCommon){\r\n\t\r\n\t// Ref: isEdit allows events to happen in Drawing, like TextBlocks\r\n\tvar isEdit = false;\r\n\t\r\n\t// Ref: enabled = false allows inputs outside of drawing to function\r\n\tvar enabled = true;\r\n\t\r\n\tvar alphabet = \"abcdefghijklmnopqrstuvwxyz\";\r\n\t\r\n\t//dojox.drawing.manager.keys = \r\n\tvar keys = {\r\n\t\t// summary:\r\n\t\t//\t\tA singleton, master object that detects\r\n\t\t//\t\tkeyboard keys and events\r\n\t\t//\t\tConnect to it like:\r\n\t\t//\t|\tdojo.connect(this.keys, \"onEnter\", ....);\r\n\r\n\t\t// arrowIncrement: Number\r\n\t\t//\t\tThe amount, in pixels, a selected Stencil will\r\n\t\t//\t\tmove on an arrow key event\r\n\t\tarrowIncrement:1,\r\n\r\n\t\t// arrowShiftIncrement: Number\r\n\t\t//\t\tThe amount, in pixels, a selected Stencil will\r\n\t\t//\t\tmove on an arrow key + SHIFT event\r\n\t\tarrowShiftIncrement:10,\r\n\r\n\t\t// shift: [readonly] Boolean\r\n\t\t//\t\tIndicates whether the Shift key is currently pressed\r\n\t\tshift:false,\r\n\r\n\t\t// ctrl: [readonly] Boolean\r\n\t\t//\t\tIndicates whether the Control key is currently pressed\r\n\t\tctrl:false,\r\n\r\n\t\t// alt: [readonly] Boolean\r\n\t\t//\t\tIndicates whether the Alt or Option key is currently pressed\r\n\t\talt:false,\r\n\r\n\t\t// cmmd: [readonly] Boolean\r\n\t\t//\t\tIndicates whether the Apple Command key is currently pressed\r\n\t\tcmmd:false, // apple key\r\n\r\n\t\t// meta: [readonly] Boolean\r\n\t\t//\t\tIndicates whether any 'meta' key is currently pressed:\r\n\t\t//\t\tshift || ctrl || cmd || alt\r\n\t\tmeta:false, // any meta key\r\n\t\t\r\n\t\tonDelete: function(/* Event */evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEvent fires when Delete key is released\r\n\t\t},\r\n\t\tonEsc: function(/* Event */evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEvent fires when ESC key is released\r\n\t\t},\r\n\t\tonEnter: function(/* Event */evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEvent fires when Enter key is released\r\n\t\t},\r\n\t\tonArrow: function(/* Event */evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEvent fires when an Arrow key is released\r\n\t\t\t//\t\tYou will have to further check if evt.keyCode\r\n\t\t\t//\t\tis 37,38,39, or 40\r\n\t\t},\r\n\t\tonKeyDown: function(/* Event */evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEvent fires when any key is pressed\r\n\t\t},\r\n\t\tonKeyUp: function(/* Event */evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEvent fires when any key is released\r\n\t\t},\r\n\t\t\r\n\t\tlisteners:[],\r\n\t\tregister: function(options){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRegister an object and callback to be notified\r\n\t\t\t//\t\tof events.\r\n\t\t\t//\t\tNOTE: Not really used in code, but should work.\r\n\t\t\t//\t\tSee manager.mouse for similar usage\r\n\r\n\t\t\tvar _handle = utilCommon.uid(\"listener\");\r\n\t\t\tthis.listeners.push({\r\n\t\t\t\thandle:_handle,\r\n\t\t\t\tscope: options.scope || window,\r\n\t\t\t\tcallback:options.callback,\r\n\t\t\t\tkeyCode:options.keyCode\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\t_getLetter: function(evt){\r\n\t\t\tif(!evt.meta && evt.keyCode>=65 && evt.keyCode<=90){\r\n\t\t\t\treturn alphabet.charAt(evt.keyCode-65);\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\t\r\n\t\t_mixin: function(evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal. Mixes in key events.\r\n\t\t\tevt.meta = this.meta;\r\n\t\t\tevt.shift = this.shift;\r\n\t\t\tevt.alt = this.alt;\r\n\t\t\tevt.cmmd = this.cmmd;\r\n\t\t\tevt.ctrl = this.ctrl;\r\n\t\t\tevt.letter = this._getLetter(evt);\r\n\t\t\treturn evt;\r\n\t\t},\r\n\t\t\r\n\t\teditMode: function(_isedit){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRelinquishes control of events to another portion\r\n\t\t\t//\t\tof Drawing; namely the TextBlock.\r\n\t\t\tisEdit = _isedit;\r\n\t\t},\r\n\t\t\r\n\t\tenable: function(_enabled){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEnables or disables key events, to relinquish\r\n\t\t\t//\t\tcontrol to something outside of Drawing; input\r\n\t\t\t//\t\tfields for example.\r\n\t\t\t//\t\tYou may need to call this directly if you are\r\n\t\t\t//\t\tusing textareas or contenteditables.\r\n\t\t\t//\t\tNOTE: See scanForFields\r\n\t\t\tenabled = _enabled;\r\n\t\t},\r\n\t\t\r\n\t\tscanForFields: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tScans the document for inputs\r\n\t\t\t//\t\tand calls this automatically. However you may need\r\n\t\t\t//\t\tto call this if you create inputs after the fact.\r\n\r\n\t\t\tif(this._fieldCons){\r\n\t\t\t\tdojo.forEach(this._fieldCons, dojo.disconnect, dojo);\r\n\t\t\t}\r\n\t\t\tthis._fieldCons = [];\r\n\t\t\tdojo.query(\"input\").forEach(function(n){\r\n\t\t\t\tvar a = dojo.connect(n, \"focus\", this, function(evt){\r\n\t\t\t\t\tthis.enable(false);\r\n\t\t\t\t});\r\n\t\t\t\tvar b = dojo.connect(n, \"blur\", this, function(evt){\r\n\t\t\t\t\tthis.enable(true);\r\n\t\t\t\t});\r\n\t\t\t\tthis._fieldCons.push(a);\r\n\t\t\t\tthis._fieldCons.push(b);\r\n\t\t\t}, this);\r\n\t\t\r\n\t\t},\r\n\t\t\r\n\t\tinit: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInitialize the keys object\r\n\r\n\t\t\t// a little extra time is needed in some browsers\r\n\t\t\tsetTimeout(dojo.hitch(this, \"scanForFields\"), 500);\r\n\t\t\t\r\n\t\t\tdojo.connect(document, \"blur\", this, function(evt){\r\n\t\t\t\t// when command tabbing to another application, the key \"sticks\"\r\n\t\t\t\t// this clears any key used for such activity\r\n\t\t\t\tthis.meta = this.shift = this.ctrl = this.cmmd = this.alt = false;\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tdojo.connect(document, \"keydown\", this, function(evt){\r\n\t\t\t\tif(!enabled){ return; }\r\n\t\t\t\tif(evt.keyCode==16){\r\n\t\t\t\t\tthis.shift = true;\r\n\t\t\t\t}\r\n\t\t\t\tif(evt.keyCode==17){\r\n\t\t\t\t\tthis.ctrl = true;\r\n\t\t\t\t}\r\n\t\t\t\tif(evt.keyCode==18){\r\n\t\t\t\t\tthis.alt = true;\r\n\t\t\t\t}\r\n\t\t\t\tif(evt.keyCode==224){\r\n\t\t\t\t\tthis.cmmd = true;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.meta = this.shift || this.ctrl || this.cmmd || this.alt;\r\n\t\t\t\t\r\n\t\t\t\tif(!isEdit){\r\n\t\t\t\t\tthis.onKeyDown(this._mixin(evt));\r\n\t\t\t\t\tif(evt.keyCode==8 || evt.keyCode==46){\r\n\t\t\t\t\t\tdojo.stopEvent(evt);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tdojo.connect(document, \"keyup\", this, function(evt){\r\n\t\t\t\tif(!enabled){ return; }\r\n\t\t\t\t//console.log(\"KEY UP:\", evt.keyCode);\r\n\t\t\t\tvar _stop = false;\r\n\t\t\t\tif(evt.keyCode==16){\r\n\t\t\t\t\tthis.shift = false;\r\n\t\t\t\t}\r\n\t\t\t\tif(evt.keyCode==17){\r\n\t\t\t\t\tthis.ctrl = false;\r\n\t\t\t\t}\r\n\t\t\t\tif(evt.keyCode==18){\r\n\t\t\t\t\tthis.alt = false;\r\n\t\t\t\t}\r\n\t\t\t\tif(evt.keyCode==224){\r\n\t\t\t\t\tthis.cmmd = false;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.meta = this.shift || this.ctrl || this.cmmd || this.alt;\r\n\t\t\t\t\r\n\t\t\t\t!isEdit && this.onKeyUp(this._mixin(evt));\r\n\t\t\t\t\r\n\t\t\t\tif(evt.keyCode==13){\r\n\t\t\t\t\tconsole.warn(\"KEY ENTER\");\r\n\t\t\t\t\tthis.onEnter(evt);\r\n\t\t\t\t\t_stop = true;\r\n\t\t\t\t}\r\n\t\t\t\tif(evt.keyCode==27){\r\n\t\t\t\t\tthis.onEsc(evt);\r\n\t\t\t\t\t_stop = true;\r\n\t\t\t\t}\r\n\t\t\t\tif(evt.keyCode==8 || evt.keyCode==46){\r\n\t\t\t\t\tthis.onDelete(evt);\r\n\t\t\t\t\t_stop = true;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(_stop && !isEdit){\r\n\t\t\t\t\tdojo.stopEvent(evt);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tdojo.connect(document, \"keypress\", this, function(evt){\r\n\t\t\t\tif(!enabled){ return; }\r\n\t\t\t\tvar inc = this.shift ? this.arrowIncrement*this.arrowShiftIncrement : this.arrowIncrement,\r\n\t\t\t\t\taltOrOption = evt.alt || this.cmmd;\r\n\t\t\t\t\r\n\t\t\t\tvar x =0, y =0;\r\n\t\t\t\tif(evt.keyCode==32 && !isEdit){ //space\r\n\t\t\t\t\tdojo.stopEvent(evt);\r\n\t\t\t\t}\r\n\t\t\t\tif(evt.keyCode==37 && !altOrOption){ //left\r\n\t\t\t\t\tx = -inc;\r\n\t\t\t\t}\r\n\t\t\t\tif(evt.keyCode==38 && !altOrOption){ //up\r\n\t\t\t\t\ty = -inc;\r\n\t\t\t\t}\r\n\t\t\t\tif(evt.keyCode==39 && !altOrOption){ //right\r\n\t\t\t\t\tx = inc;\r\n\t\t\t\t}\r\n\t\t\t\tif(evt.keyCode==40 && !altOrOption){ //down\r\n\t\t\t\t\ty = inc;\r\n\t\t\t\t}\r\n\t\t\t\tif(x || y){\r\n\t\t\t\t\tevt.x = x;\r\n\t\t\t\t\tevt.y = y;\r\n\t\t\t\t\tevt.shift = this.shift;\r\n\t\t\t\t\tif(!isEdit){\r\n\t\t\t\t\t\tthis.onArrow(evt);\r\n\t\t\t\t\t\tdojo.stopEvent(evt);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tdojo.addOnLoad(keys, \"init\");\r\n\treturn keys;\r\n});\r\n"]}