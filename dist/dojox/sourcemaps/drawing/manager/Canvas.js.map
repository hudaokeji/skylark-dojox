{"version":3,"sources":["drawing/manager/Canvas.js"],"names":["define","dojo","oo","gfx","declare","options","mixin","this","dim","contentBox","srcRefNode","height","parentHeight","h","width","parentWidth","w","domNode","create","id","style","setSelectable","util","uid","console","info","gfxSurface","createSurface","whenLoaded","setTimeout","hitch","surfaceReady","isIE","renderer","firstChild","underlay","createGroup","surface","overlay","setTransform","dx","dy","xx","yy","getDimensions","callback","_mouseHandle","mouse","register","zoom","useScrollbars","baseClass","resize","setDimensions","scrollx","scrolly","sw","getScrollWidth","Math","max","parentNode","scrollTop","scrollLeft","overflowY","overflowX","setZoom","onScroll","getScrollOffset","top","left","p","innerHTML","div","body","appendChild","noscroll","scrollWidth","destroy"],"mappings":"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","file":"../../../drawing/manager/Canvas.js","sourcesContent":["define([\"dojo\", \"../util/oo\", \"dojox/gfx\"], \r\nfunction(dojo, oo, gfx){\r\n\r\n\t//dojox.drawing.manager.Canvas = \r\n\treturn oo.declare(\r\n\t\tfunction(/*Object*/options){\r\n\t\t\tdojo.mixin(this, options);\r\n\t\t\t\r\n\t\t\tvar dim = dojo.contentBox(this.srcRefNode);\r\n\t\t\tthis.height = this.parentHeight = options.height || dim.h;\r\n\t\t\tthis.width = this.parentWidth = options.width || dim.w;\r\n\t\t\tthis.domNode = dojo.create(\"div\", {id:\"canvasNode\"}, this.srcRefNode);\r\n\t\t\tdojo.style(this.domNode, {\r\n\t\t\t\twidth:this.width,\r\n\t\t\t\theight:\"auto\"\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tdojo.setSelectable(this.domNode, false);\r\n\t\t\t\r\n\t\t\tthis.id = this.id || this.util.uid(\"surface\");\r\n\t\t\t\r\n\t\t\tconsole.info(\"create canvas\");\r\n\t\t\tthis.gfxSurface = gfx.createSurface(this.domNode, this.width, this.height);\r\n\t\t\tthis.gfxSurface.whenLoaded(this, function(){\r\n\t\t\t\tsetTimeout(dojo.hitch(this, function(){\r\n\t\t\t\t\tthis.surfaceReady = true;\r\n\t\t\t\t\tif(dojo.isIE){\r\n\t\t\t\t\t\t//this.gfxSurface.rawNode.parentNode.id = this.id;\r\n\t\t\t\t\t}else if(gfx.renderer == \"silverlight\"){\r\n\t\t\t\t\t\tthis.id = this.domNode.firstChild.id\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t//this.gfxSurface.rawNode.id = this.id;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.underlay = this.gfxSurface.createGroup();\r\n\t\t\t\t\tthis.surface = this.gfxSurface.createGroup();\r\n\t\t\t\t\tthis.overlay = this.gfxSurface.createGroup();\r\n\t\t\t\t\tthis.surface.setTransform({dx:0, dy:0,xx:1,yy:1});\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.gfxSurface.getDimensions = dojo.hitch(this.gfxSurface, \"getDimensions\");\r\n\t\t\t\t\tif(options.callback){\r\n\t\t\t\t\t\toptions.callback(this.domNode);\r\n\t\t\t\t\t}\r\n\t\t\t\t}),500);\r\n\t\t\t});\r\n\t\t\tthis._mouseHandle = this.mouse.register(this);\r\n\t\t},\r\n\t\t{\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates a dojox.gfx.surface to be used for Drawing. Note that\r\n\t\t\t//\t\tThe 'surface' that Drawing uses is actually a dojox.gfx.group.\r\n\t\t\t//\t\tThis allows for more versatility.\r\n\t\t\t//\r\n\t\t\t//\t\tCalled internally from a dojox.Drawing.\r\n\t\t\t//\r\n\t\t\t//\t\tNote: Surface creation is asynchronous. Connect to\r\n\t\t\t//\t\tonSurfaceReady in Drawing.\r\n\r\n\t\t\t// zoom: [readonly] Number\r\n\t\t\t//\t\tThe amount the canvas is zoomed\r\n\t\t\tzoom:1,\r\n\t\t\t\t\t\t\r\n\t\t\tuseScrollbars: true,\r\n\t\t\tbaseClass:\"drawingCanvas\",\r\n\t\t\t\r\n\t\t\tresize: function(width, height){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tMethod used to change size of canvas. Potentially\r\n\t\t\t\t//\t\tcalled from a container like ContentPane. May be\r\n\t\t\t\t//\t\tcalled directly.\r\n\r\n\t\t\t\tthis.parentWidth = width;\r\n\t\t\t\tthis.parentHeight = height;\r\n\t\t\t\tthis.setDimensions(width, height);\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tsetDimensions: function(width, height, scrollx, scrolly){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tInternal. Changes canvas size and sets scroll position.\r\n\t\t\t\t//\t\tDo not call this, use resize().\r\n\r\n\t\t\t\t// changing the size of the surface and setting scroll\r\n\t\t\t\t// if items are off screen\r\n\t\t\t\tvar sw = this.getScrollWidth(); //+ 10;\r\n\t\t\t\tthis.width = Math.max(width, this.parentWidth);\r\n\t\t\t\tthis.height = Math.max(height, this.parentHeight);\r\n\t\t\t\t\r\n\t\t\t\tif(this.height>this.parentHeight){\r\n\t\t\t\t\tthis.width -= sw;\r\n\t\t\t\t}\r\n\t\t\t\tif(this.width>this.parentWidth){\r\n\t\t\t\t\tthis.height -= sw;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.mouse.resize(this.width,this.height);\r\n\t\t\t\tthis.gfxSurface.setDimensions(this.width, this.height);\r\n\r\n\t\t\t\r\n\t\t\t\tthis.domNode.parentNode.scrollTop = scrolly || 0;\r\n\t\t\t\tthis.domNode.parentNode.scrollLeft = scrollx || 0;\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tif(this.useScrollbars){\r\n\t\t\t\t\t//console.info(\"Set Canvas Scroll\", (this.height > this.parentHeight), this.height, this.parentHeight)\r\n\t\t\t\t\tdojo.style(this.domNode.parentNode, {\r\n\t\t\t\t\t\toverflowY: this.height > this.parentHeight ? \"scroll\" : \"hidden\",\r\n\t\t\t\t\t\toverflowX: this.width > this.parentWidth ? \"scroll\" : \"hidden\"\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdojo.style(this.domNode.parentNode, {\r\n\t\t\t\t\t\toverflowY: \"hidden\",\r\n\t\t\t\t\t\toverflowX: \"hidden\"\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tsetZoom: function(zoom){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tInternal. Zooms canvas in and out.\r\n\t\t\t\tthis.zoom = zoom;\r\n\t\t\t\tthis.surface.setTransform({xx:zoom, yy:zoom});\r\n\t\t\t\tthis.setDimensions(this.width*zoom, this.height*zoom)\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tonScroll: function(){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tEvent fires on scroll.NOT IMPLEMENTED\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tgetScrollOffset: function(){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tGet the scroll position of the canvas\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttop:this.domNode.parentNode.scrollTop,\r\n\t\t\t\t\tleft:this.domNode.parentNode.scrollLeft\r\n\t\t\t\t}; // Object\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tgetScrollWidth: function(){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSpecial method used to detect the width (and height)\r\n\t\t\t\t//\t\tof the browser scrollbars. Becomes memoized.\r\n\r\n\t\t\t\tvar p = dojo.create('div');\r\n\t\t\t\tp.innerHTML = '<div style=\"width:50px;height:50px;overflow:hidden;position:absolute;top:0;left:-1000px;\"><div style=\"height:100px;\"></div>';\r\n\t\t\t\tvar div = p.firstChild;\r\n\t\t\t\tdojo.body().appendChild(div);\r\n\t\t\t\tvar noscroll = dojo.contentBox(div).h;\r\n\t\t\t\tdojo.style(div, \"overflow\", \"scroll\");\r\n\t\t\t\tvar scrollWidth = noscroll - dojo.contentBox(div).h;\r\n\t\t\t\tdojo.destroy(div);\r\n\t\t\t\tthis.getScrollWidth = function(){\r\n\t\t\t\t\treturn scrollWidth;\r\n\t\t\t\t};\r\n\t\t\t\treturn scrollWidth; // Object\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n\t\r\n});\r\n"]}