{"version":3,"sources":["drawing/manager/Stencil.js"],"names":["define","dojo","oo","defaults","surface","declare","options","this","canvas","undo","mouse","keys","anchors","stencils","selectedStencils","_mouseHandle","register","connect","_dragBegun","_wasDragged","_secondClick","_isBusy","setRecentStencil","stencil","recent","getRecentStencil","console","log","id","isText","editMode","deleteEmptyCreate","getText","warn","destroy","execText","_text","selectItem","deleteEmptyModify","deleteItem","selectOnExec","isSelected","deselectItem","unregister","selected","onDeselect","onArrow","evt","hasSelected","saveThrottledState","group","applyTransform","dx","x","dy","y","_throttleVrl","_throttle","throttleTime","_lastmxx","_lastmxy","saveMoveState","mx","getTransform","add","before","hitch","clearTimeout","clearInterval","setTimeout","unDelete","s","render","onSelect","onDelete","noundo","after","withSelected","m","remove","sids","push","deselect","forEach","removeAll","selectAll","setSelectionGroup","removeShape","createGroup","setTransform","container","select","setConstraint","t","Infinity","l","o","getBounds","Math","min","y1","x1","constrain","keepObject","error","idOrItem","moveToFront","onLabelDoubleClick","obj","info","onStencilDoubleClick","edit","onAnchorUp","onStencilDown","meta","isMac","cmmd","_offx","_offy","orgx","orgy","onLabelDown","onStencilUp","onLabelUp","onStencilDrag","last","c","mz","marginZero","onBeginDrag","onLabelDrag","onDragEnd","onDown","onStencilOver","style","onStencilOut","exporter","items","enabled","listStencils","toSelected","func","args","Array","prototype","slice","call","arguments","splice","item","apply","f","withUnselected","withStencils","ln"],"mappings":";;;;;;;AAAAA,QAAQ,OAAQ,aAAc,eAC9B,SAASC,EAAMC,EAAIC,GAElB,IAAIC,EAEJ,OAAOF,EAAGG,QACT,SAASC,GAIRF,EAAUE,EAAQF,QAClBG,KAAKC,OAASF,EAAQE,OAGtBD,KAAKE,KAAOH,EAAQG,KACpBF,KAAKG,MAAQJ,EAAQI,MACrBH,KAAKI,KAAOL,EAAQK,KACpBJ,KAAKK,QAAUN,EAAQM,QACvBL,KAAKM,YACLN,KAAKO,oBACLP,KAAKQ,aAAeR,KAAKG,MAAMM,SAAST,MAExCN,EAAKgB,QAAQV,KAAKI,KAAM,UAAWJ,KAAM,WACzCN,EAAKgB,QAAQV,KAAKI,KAAM,QAASJ,KAAM,YACvCN,EAAKgB,QAAQV,KAAKI,KAAM,WAAYJ,KAAM,cAY1CW,YAAY,EACZC,aAAY,EACZC,cAAa,EACbC,SAAQ,EAERC,iBAAkB,SAASC,GAI1BhB,KAAKiB,OAASD,GAGfE,iBAAkB,WAIjB,OAAOlB,KAAKiB,QAGbR,SAAU,SAAmBO,GAQ5B,OADAG,QAAQC,IAAI,4BAA6BJ,EAAQK,IAC9CL,EAAQM,SAAWN,EAAQO,UAAYP,EAAQQ,oBAAsBR,EAAQS,WAG/EN,QAAQO,KAAK,sBAAuBV,GACpCA,EAAQW,WACD,IAGR3B,KAAKM,SAASU,EAAQK,IAAML,EAC5BhB,KAAKe,iBAAiBC,GAEnBA,EAAQY,WACPZ,EAAQa,QAAUb,EAAQO,WAC5BJ,QAAQC,IAAI,eACZpB,KAAK8B,WAAWd,IAEjBA,EAAQN,QAAQ,WAAYV,KAAM,WAC9BgB,EAAQM,QAAUN,EAAQe,oBAAsBf,EAAQS,WAC1DN,QAAQO,KAAK,mBAAoBV,GAGjChB,KAAKgC,WAAWhB,IACRA,EAAQiB,cAChBjC,KAAK8B,WAAWd,MAKnBA,EAAQN,QAAQ,WAAYV,KAAM,YAC7BA,KAAKc,SAAWd,KAAKkC,WAAWlB,IAEnChB,KAAKmC,aAAanB,KAIpBA,EAAQN,QAAQ,SAAUV,KAAM,WAC3BA,KAAKc,SAAYd,KAAKkC,WAAWlB,IAEpChB,KAAK8B,WAAWd,KAIXA,IAERoB,WAAY,SAAmBpB,GAM9BG,QAAQC,IAAI,8BAA+BJ,EAAQK,GAAI,OAAQL,EAAQqB,UACpErB,IACFA,EAAQqB,UAAYrC,KAAKsC,WAAWtB,UAC7BhB,KAAKM,SAASU,EAAQK,MAI/BkB,QAAS,SAAsBC,GAK3BxC,KAAKyC,gBACPzC,KAAK0C,qBACL1C,KAAK2C,MAAMC,gBAAgBC,GAAGL,EAAIM,EAAGC,GAAIP,EAAIQ,MAI/CC,aAAa,KACbC,WAAW,EACXC,aAAa,IACbC,UAAU,EACVC,UAAU,EACVC,cAAe,WAKd,IAAIC,EAAKvD,KAAK2C,MAAMa,eACjBD,EAAGV,IAAM7C,KAAKoD,UAAYG,EAAGR,IAAM/C,KAAKqD,WAC3CrD,KAAKoD,SAAWG,EAAGV,GACnB7C,KAAKqD,SAAWE,EAAGR,GAEnB/C,KAAKE,KAAKuD,KACTC,OAAOhE,EAAKiE,MAAM3D,KAAK2C,MAAO,eAAgBY,OAIhDb,mBAAoB,WAMnBkB,aAAa5D,KAAKiD,cAClBY,cAAc7D,KAAKiD,cACnBjD,KAAKiD,aAAea,WAAWpE,EAAKiE,MAAM3D,KAAM,WAC/CA,KAAKkD,WAAY,EACjBlD,KAAKsD,kBACFtD,KAAKmD,cACNnD,KAAKkD,YACRlD,KAAKkD,WAAY,EAEjBlD,KAAKsD,kBAGNS,SAAU,SAAkBzD,GAK3B,IAAI,IAAI0D,KADR7C,QAAQC,IAAI,YAAad,GACZA,EACZA,EAAS0D,GAAGC,SACZjE,KAAKkE,SAAS5D,EAAS0D,KAGzBG,SAAU,SAAoBC,GAI7BjD,QAAQC,IAAI,mBAAoBgD,IACpB,IAATA,GACFpE,KAAKE,KAAKuD,KACTC,OAAOhE,EAAKiE,MAAM3D,KAAM,WAAYA,KAAKO,kBACzC8D,MAAM3E,EAAKiE,MAAM3D,KAAM,YAAY,KAGrCA,KAAKsE,aAAa,SAASC,GAC1BvE,KAAKK,QAAQmE,OAAOD,GACpB,IAAIlD,EAAKkD,EAAElD,GACXF,QAAQC,IAAI,UAAWmD,GACvBA,EAAE5C,iBACK3B,KAAKM,SAASe,KAEtBrB,KAAKO,qBAGNyB,WAAY,SAAmBhB,GAM9B,GAAGhB,KAAKyC,cAAc,CAErB,IAAIgC,KACJ,IAAI,IAAIF,KAAKvE,KAAKO,iBACjB,GAAGP,KAAKO,iBAAiBc,IAAML,EAAQK,IACtC,GAAuB,GAApBrB,KAAKyC,cAGP,YADAzC,KAAKmE,gBAINM,EAAKC,KAAK1E,KAAKO,iBAAiBc,IAIlCrB,KAAK2E,WACL3E,KAAK8B,WAAWd,GAChBhB,KAAKmE,WACLzE,EAAKkF,QAAQH,EAAM,SAASpD,GAC3BrB,KAAK8B,WAAWT,IACdrB,WAGHA,KAAK8B,WAAWd,GAEhBhB,KAAKmE,YAIPU,UAAW,WAIV7E,KAAK8E,YACL9E,KAAKc,SAAU,EACfd,KAAKmE,WACLnE,KAAKM,YACLN,KAAKc,SAAU,GAGhBiE,kBAAmB,WAKlB/E,KAAKsE,aAAa,SAASC,GAC1BvE,KAAKsC,WAAWiC,GAAG,KAGjBvE,KAAK2C,QACP9C,EAAQ2E,OAAOxE,KAAK2C,OACpB3C,KAAK2C,MAAMqC,eAEZhF,KAAK2C,MAAQ9C,EAAQoF,cACrBjF,KAAK2C,MAAMuC,cAAcrC,GAAG,EAAGE,GAAI,IAEnC/C,KAAKsE,aAAa,SAASC,GAC1BvE,KAAK2C,MAAMc,IAAIc,EAAEY,WACjBZ,EAAEa,YAIJC,cAAe,WAMd,IAAIC,EAAIC,EAAAA,EAAUC,EAAID,EAAAA,EACtBvF,KAAKsE,aAAa,SAASC,GAC1B,IAAIkB,EAAIlB,EAAEmB,YACVJ,EAAIK,KAAKC,IAAIH,EAAEI,GAAIP,GACnBE,EAAIG,KAAKC,IAAIH,EAAEK,GAAIN,KAEpBxF,KAAK+F,WAAaP,GAAGA,EAAGF,GAAGA,IAK5BhD,WAAY,SAAStB,EAASgF,GAIzBA,UACIhG,KAAKO,iBAAiBS,EAAQK,IAItCrB,KAAKK,QAAQmE,OAAOxD,GAEpBnB,EAAQ4D,IAAIzC,EAAQmE,WACpBnE,EAAQqB,UAAYrB,EAAQ2D,WAC5B3D,EAAQ4B,eAAe5C,KAAK2C,MAAMa,iBAGnCrB,aAAc,SAAmBnB,GAKhChB,KAAKsC,WAAWtB,IAGjB2D,SAAU,WAIT3E,KAAKsE,aAAa,SAASC,GAC1BvE,KAAKsC,WAAWiC,KAEjBvE,KAAKW,YAAa,EAClBX,KAAKY,aAAc,GAGpBsD,SAAU,SAAmBlD,GAKxBA,GACHG,QAAQ8E,MAAM,gCAAiCjG,KAAKM,UAElDN,KAAKO,iBAAiBS,EAAQK,MACjCrB,KAAKO,iBAAiBS,EAAQK,IAAML,EACpChB,KAAK2C,MAAMc,IAAIzC,EAAQmE,WACvBnE,EAAQoE,SACe,GAApBpF,KAAKyC,eACPzC,KAAKK,QAAQoD,IAAIzC,EAAShB,KAAK2C,SAIjCmC,UAAW,WAIV,IAAI,IAAIP,KADRvE,KAAKc,SAAU,EACFd,KAAKM,SAEhBN,KAAK8B,WAAWyC,GAGlBvE,KAAKc,SAAU,GAGhBgB,WAAY,SAA2BoE,GAItC,IAAI7E,EAAuB,iBAAZ,EAAuB6E,EAAWA,EAAS7E,GACtDL,EAAUhB,KAAKM,SAASe,GAC5BrB,KAAK+E,oBACL/E,KAAKkE,SAASlD,GACdhB,KAAK2C,MAAMwD,cACXnG,KAAKqF,iBAGNe,mBAAoB,SAAwBC,GAI3ClF,QAAQmF,KAAK,0BAA2BD,GACrCrG,KAAKO,iBAAiB8F,EAAIhF,KAC5BrB,KAAK2E,YAIP4B,qBAAsB,SAAwBF,GAK7C,GADAlF,QAAQmF,KAAK,4BAA6BD,GACvCrG,KAAKO,iBAAiB8F,EAAIhF,KACzBrB,KAAKO,iBAAiB8F,EAAIhF,IAAImF,KAAK,CACrCrF,QAAQmF,KAAK,uBAAwBtG,KAAKO,iBAAiB8F,EAAIhF,KAC/D,IAAIkD,EAAIvE,KAAKO,iBAAiB8F,EAAIhF,IAGlCkD,EAAEhD,UAAW,EACbvB,KAAK2E,WACLJ,EAAEiC,SAMLC,WAAY,WAGXzG,KAAKqF,iBAGNqB,cAAe,SAAwBL,EAAK7D,GAK3C,GADArB,QAAQmF,KAAK,sBAAuBD,EAAIhF,GAAIrB,KAAKI,KAAKuG,MAClD3G,KAAKM,SAAS+F,EAAIhF,IAAtB,CAKA,GAJArB,KAAKe,iBAAiBf,KAAKM,SAAS+F,EAAIhF,KACxCrB,KAAKc,SAAU,EAGZd,KAAKO,iBAAiB8F,EAAIhF,KAAOrB,KAAKI,KAAKuG,KAc7C,OAbGjH,EAAKkH,OAAS5G,KAAKI,KAAKyG,KAI3B1F,QAAQC,IAAI,oBACZpB,KAAKsC,WAAWtC,KAAKO,iBAAiB8F,EAAIhF,KACnB,GAApBrB,KAAKyC,eACPzC,KAAKsE,aAAa,SAASC,GAC1BvE,KAAKK,QAAQoD,IAAIc,EAAGvE,KAAK2C,SAG3B3C,KAAK2C,MAAMwD,mBACXnG,KAAKqF,gBAGA,GAAGrF,KAAKO,iBAAiB8F,EAAIhF,IAAI,CACtCF,QAAQC,IAAI,2BAGZ,IAAImC,EAAKvD,KAAK2C,MAAMa,eAGpB,OAFAxD,KAAK8G,MAAQT,EAAIvD,EAAIS,EAAGV,QACxB7C,KAAK+G,MAAQV,EAAIrD,EAAIO,EAAGR,IAGf/C,KAAKI,KAAKuG,OAEnBxF,QAAQC,IAAI,oBACZpB,KAAK2E,YAMNxD,QAAQC,IAAI,gCAEZpB,KAAK8B,WAAWuE,EAAIhF,IAEpBkC,EAAKvD,KAAK2C,MAAMa,eAChBxD,KAAK8G,MAAQT,EAAIvD,EAAIS,EAAGV,GACxB7C,KAAK+G,MAAQV,EAAIrD,EAAIO,EAAGV,GAExB7C,KAAKgH,KAAOX,EAAIvD,EAChB9C,KAAKiH,KAAOZ,EAAIrD,EAEhBhD,KAAKc,SAAU,EAMfd,KAAKE,KAAKuD,KACTC,OAAO,aAGPW,MAAO,iBAMT6C,YAAa,SAAwBb,EAAK7D,GAOzCxC,KAAK0G,cAAcL,EAAI7D,IAGxB2E,YAAa,SAAwBd,KAMrCe,UAAW,SAAwBf,GAClCrG,KAAKmH,YAAYd,IAGlBgB,cAAe,SAAwBhB,GAItC,GAAIrG,KAAKW,WAKJ,CACJX,KAAK0C,qBAEL,IAAII,EAAIuD,EAAIvD,EAAIuD,EAAIiB,KAAKxE,EACxBE,EAAIqD,EAAIrD,EAAIqD,EAAIiB,KAAKtE,EACrBuE,EAAIvH,KAAK+F,UACTyB,EAAK5H,EAASS,QAAQoH,WAGvB3E,EAAIuD,EAAIvD,EAAI9C,KAAK8G,MACjB9D,EAAIqD,EAAIrD,EAAIhD,KAAK+G,MAEdjE,EAAIyE,EAAE/B,EAAIgC,IACZ1E,EAAIyE,EAAE/B,EAAIgC,GAERxE,EAAIuE,EAAEjC,EAAIkC,IACZxE,EAAIuE,EAAEjC,EAAIkC,GAGXxH,KAAK2C,MAAMuC,cACVrC,GAAIC,EACJC,GAAIC,SAvBLhD,KAAK0H,YAAYrB,GACjBrG,KAAKW,YAAa,GA6BpBgH,YAAa,SAAwBtB,GACpCrG,KAAKqH,cAAchB,IAGpBuB,UAAW,SAAwBvB,GAIlCrG,KAAKW,YAAa,GAEnB+G,YAAa,SAAwBrB,GAIpCrG,KAAKY,aAAc,GAGpBiH,OAAQ,SAAwBxB,GAI/BrG,KAAK2E,YAINmD,cAAe,SAASzB,GAMvB3G,EAAKqI,MAAM1B,EAAIhF,GAAI,SAAU,SAG9B2G,aAAc,SAAS3B,GAKtB3G,EAAKqI,MAAM1B,EAAIhF,GAAI,SAAU,cAG9B4G,SAAU,WAIT,IAAIC,KACJ,IAAI,IAAI3D,KAAKvE,KAAKM,SACjBN,KAAKM,SAASiE,GAAG4D,SAAWD,EAAMxD,KAAK1E,KAAKM,SAASiE,GAAG0D,YAEzD,OAAOC,GAGRE,aAAc,WACb,OAAOpI,KAAKM,UAGb+H,WAAY,SAAmBC,GAI9B,IAAIC,EAAOC,MAAMC,UAAUC,MAAMC,KAAKC,WAAWC,OAAO,GACxD,IAAI,IAAItE,KAAKvE,KAAKO,iBAAiB,CAClC,IAAIuI,EAAO9I,KAAKO,iBAAiBgE,GACjCuE,EAAKR,GAAMS,MAAMD,EAAMP,KAIzBjE,aAAc,SAAqBgE,GAIlC,IAAIU,EAAItJ,EAAKiE,MAAM3D,KAAMsI,GACzB,IAAI,IAAI/D,KAAKvE,KAAKO,iBACjByI,EAAEhJ,KAAKO,iBAAiBgE,KAI1B0E,eAAgB,SAAqBX,GAIpC,IAAIU,EAAItJ,EAAKiE,MAAM3D,KAAMsI,GACzB,IAAI,IAAI/D,KAAKvE,KAAKM,UAChBN,KAAKM,SAASiE,GAAGlC,UAAY2G,EAAEhJ,KAAKM,SAASiE,KAIhD2E,aAAc,SAAqBZ,GAIlC,IAAIU,EAAItJ,EAAKiE,MAAM3D,KAAMsI,GACzB,IAAI,IAAI/D,KAAKvE,KAAKM,SACjB0I,EAAEhJ,KAAKM,SAASiE,KAIlB9B,YAAa,WAMZ,IAAI0G,EAAK,EACT,IAAI,IAAI5E,KAAKvE,KAAKO,iBAAmB4I,IACrC,OAAOA,GAGRjH,WAAY,SAAmBlB,GAK9B,QAAShB,KAAKO,iBAAiBS,EAAQK","file":"../../../drawing/manager/Stencil.js","sourcesContent":["define([\"dojo\", \"../util/oo\", \"../defaults\"], \r\nfunction(dojo, oo, defaults){\r\n\r\n\tvar surface, surfaceNode;\r\n\t//dojox.drawing.manager.Stencil = \r\n\treturn oo.declare(\r\n\t\tfunction(options){\r\n\r\n\t\t\t// TODO: mixin props\r\n\r\n\t\t\tsurface = options.surface;\r\n\t\t\tthis.canvas = options.canvas;\r\n\t\t\t\r\n\t\t\t//this.defaults = defaults.copy();\r\n\t\t\tthis.undo = options.undo;\r\n\t\t\tthis.mouse = options.mouse;\r\n\t\t\tthis.keys = options.keys;\r\n\t\t\tthis.anchors = options.anchors;\r\n\t\t\tthis.stencils = {};\r\n\t\t\tthis.selectedStencils = {};\r\n\t\t\tthis._mouseHandle = this.mouse.register(this);\r\n\t\t\t\r\n\t\t\tdojo.connect(this.keys, \"onArrow\", this, \"onArrow\");\r\n\t\t\tdojo.connect(this.keys, \"onEsc\", this, \"deselect\");\r\n\t\t\tdojo.connect(this.keys, \"onDelete\", this, \"onDelete\");\r\n\t\t\t\r\n\t\t},\r\n\t\t{\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThe main class for tracking Stencils that are cretaed, added,\r\n\t\t\t//\t\tselected, or deleted. Also handles selections, multiple\r\n\t\t\t//\t\tselections, adding and removing from selections, and dragging\r\n\t\t\t//\t\tselections. It's this class that triggers the anchors to\r\n\t\t\t//\t\tappear on a Stencil and whther there are anchor on a multiple\r\n\t\t\t//\t\tselect or not (currently not)\r\n\r\n\t\t\t_dragBegun: false,\r\n\t\t\t_wasDragged:false,\r\n\t\t\t_secondClick:false,\r\n\t\t\t_isBusy:false,\r\n\t\t\t\r\n\t\t\tsetRecentStencil: function(stencil){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tKeeps track of the most recent stencil interacted\r\n\t\t\t\t//\t\twith, whether created or selected.\r\n\t\t\t\tthis.recent = stencil;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tgetRecentStencil: function(){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tReturns the stencil most recently interacted\r\n\t\t\t\t//\t\twith whether it's last created or last selected\r\n\t\t\t\treturn this.recent;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tregister: function(/*Object*/stencil){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tKey method for adding Stencils. Stencils\r\n\t\t\t\t//\t\tcan be added to the canvas without adding\r\n\t\t\t\t//\t\tthem to this, but they won't have selection\r\n\t\t\t\t//\t\tor drag ability.\r\n\r\n\t\t\t\tconsole.log(\"Selection.register ::::::\", stencil.id);\r\n\t\t\t\tif(stencil.isText && !stencil.editMode && stencil.deleteEmptyCreate && !stencil.getText()){\r\n\t\t\t\t\t// created empty text field\r\n\t\t\t\t\t// defaults say to delete\r\n\t\t\t\t\tconsole.warn(\"EMPTY CREATE DELETE\", stencil);\r\n\t\t\t\t\tstencil.destroy();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.stencils[stencil.id] = stencil;\r\n\t\t\t\tthis.setRecentStencil(stencil);\r\n\t\t\t\t\r\n\t\t\t\tif(stencil.execText){\r\n\t\t\t\t\tif(stencil._text && !stencil.editMode){\r\n\t\t\t\t\t\tconsole.log(\"select text\");\r\n\t\t\t\t\t\tthis.selectItem(stencil);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstencil.connect(\"execText\", this, function(){\r\n\t\t\t\t\t\tif(stencil.isText && stencil.deleteEmptyModify && !stencil.getText()){\r\n\t\t\t\t\t\t\tconsole.warn(\"EMPTY MOD DELETE\", stencil);\r\n\t\t\t\t\t\t\t// text deleted\r\n\t\t\t\t\t\t\t// defaults say to delete\r\n\t\t\t\t\t\t\tthis.deleteItem(stencil);\r\n\t\t\t\t\t\t}else if(stencil.selectOnExec){\r\n\t\t\t\t\t\t\tthis.selectItem(stencil);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tstencil.connect(\"deselect\", this, function(){\r\n\t\t\t\t\tif(!this._isBusy && this.isSelected(stencil)){\r\n\t\t\t\t\t\t// called from within stencil. do action.\r\n\t\t\t\t\t\tthis.deselectItem(stencil);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tstencil.connect(\"select\", this, function(){\r\n\t\t\t\t\tif(!this._isBusy && !this.isSelected(stencil)){\r\n\t\t\t\t\t\t// called from within stencil. do action.\r\n\t\t\t\t\t\tthis.selectItem(stencil);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\treturn stencil;\r\n\t\t\t},\r\n\t\t\tunregister: function(/*Object*/stencil){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tMethod for removing Stencils from the manager.\r\n\t\t\t\t//\t\tThis doesn't delete them, only removes them from\r\n\t\t\t\t//\t\tthe list.\r\n\r\n\t\t\t\tconsole.log(\"Selection.unregister ::::::\", stencil.id, \"sel:\", stencil.selected);\r\n\t\t\t\tif(stencil){\r\n\t\t\t\t\tstencil.selected && this.onDeselect(stencil);\r\n\t\t\t\t\tdelete this.stencils[stencil.id];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tonArrow: function(/*Key Event*/evt){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tMoves selection based on keyboard arrow keys\r\n\r\n\t\t\t\t// FIXME: Check constraints\r\n\t\t\t\tif(this.hasSelected()){\r\n\t\t\t\t\tthis.saveThrottledState();\r\n\t\t\t\t\tthis.group.applyTransform({dx:evt.x, dy: evt.y});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t_throttleVrl:null,\r\n\t\t\t_throttle: false,\r\n\t\t\tthrottleTime:400,\r\n\t\t\t_lastmxx:-1,\r\n\t\t\t_lastmxy:-1,\r\n\t\t\tsaveMoveState: function(){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tInternal. Used for the prototype undo stack.\r\n\t\t\t\t//\t\tSaves selection position.\r\n\r\n\t\t\t\tvar mx = this.group.getTransform();\r\n\t\t\t\tif(mx.dx == this._lastmxx && mx.dy == this._lastmxy){ return; }\r\n\t\t\t\tthis._lastmxx = mx.dx;\r\n\t\t\t\tthis._lastmxy = mx.dy;\r\n\t\t\t\t//console.warn(\"SAVE MOVE!\", mx.dx, mx.dy);\r\n\t\t\t\tthis.undo.add({\r\n\t\t\t\t\tbefore:dojo.hitch(this.group, \"setTransform\", mx)\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tsaveThrottledState: function(){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tInternal. Used for the prototype undo stack.\r\n\t\t\t\t//\t\tPrevents an undo point on every mouse move.\r\n\t\t\t\t//\t\tOnly does a point when the mouse hesitates.\r\n\r\n\t\t\t\tclearTimeout(this._throttleVrl);\r\n\t\t\t\tclearInterval(this._throttleVrl);\r\n\t\t\t\tthis._throttleVrl = setTimeout(dojo.hitch(this, function(){\r\n\t\t\t\t\tthis._throttle = false;\r\n\t\t\t\t\tthis.saveMoveState();\r\n\t\t\t\t}), this.throttleTime);\r\n\t\t\t\tif(this._throttle){ return; }\r\n\t\t\t\tthis._throttle = true;\r\n\t\t\t\t\r\n\t\t\t\tthis.saveMoveState();\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tunDelete: function(/*Array*/stencils){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tUndeletes a stencil. Used in undo stack.\r\n\r\n\t\t\t\tconsole.log(\"unDelete:\", stencils);\r\n\t\t\t\tfor(var s in stencils){\r\n\t\t\t\t\tstencils[s].render();\r\n\t\t\t\t\tthis.onSelect(stencils[s]);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonDelete: function(/*Boolean*/noundo){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tEvent fired on deletion of a stencil\r\n\r\n\t\t\t\tconsole.log(\"Stencil onDelete\", noundo);\r\n\t\t\t\tif(noundo!==true){\r\n\t\t\t\t\tthis.undo.add({\r\n\t\t\t\t\t\tbefore:dojo.hitch(this, \"unDelete\", this.selectedStencils),\r\n\t\t\t\t\t\tafter:dojo.hitch(this, \"onDelete\", true)\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tthis.withSelected(function(m){\r\n\t\t\t\t\tthis.anchors.remove(m);\r\n\t\t\t\t\tvar id = m.id;\r\n\t\t\t\t\tconsole.log(\"delete:\", m);\r\n\t\t\t\t\tm.destroy();\r\n\t\t\t\t\tdelete this.stencils[id];\r\n\t\t\t\t});\r\n\t\t\t\tthis.selectedStencils = {};\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tdeleteItem: function(/*Object*/stencil){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tDeletes a stencil.\r\n\t\t\t\t//\t\tNOTE: supports limited undo.\r\n\r\n\t\t\t\t// manipulating the selection to fire onDelete properly\r\n\t\t\t\tif(this.hasSelected()){\r\n\t\t\t\t\t// there is a selection\r\n\t\t\t\t\tvar sids = [];\r\n\t\t\t\t\tfor(var m in this.selectedStencils){\r\n\t\t\t\t\t\tif(this.selectedStencils.id == stencil.id){\r\n\t\t\t\t\t\t\tif(this.hasSelected()==1){\r\n\t\t\t\t\t\t\t\t// the deleting stencil is the only one selected\r\n\t\t\t\t\t\t\t\tthis.onDelete();\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tsids.push(this.selectedStencils.id);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// remove selection, delete, restore selection\r\n\t\t\t\t\tthis.deselect();\r\n\t\t\t\t\tthis.selectItem(stencil);\r\n\t\t\t\t\tthis.onDelete();\r\n\t\t\t\t\tdojo.forEach(sids, function(id){\r\n\t\t\t\t\t\tthis.selectItem(id);\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// there is not a selection. select it, delete it\r\n\t\t\t\t\tthis.selectItem(stencil);\r\n\t\t\t\t\t// now delete selection\r\n\t\t\t\t\tthis.onDelete();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tremoveAll: function(){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tDeletes all Stencils on the canvas.\r\n\t\t\t\t\r\n\t\t\t\tthis.selectAll();\r\n\t\t\t\tthis._isBusy = true;\r\n\t\t\t\tthis.onDelete();\r\n\t\t\t\tthis.stencils = {};\r\n\t\t\t\tthis._isBusy = false;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tsetSelectionGroup: function(){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tInternal. Creates a new selection group\r\n\t\t\t\t//\t\tused to hold selected stencils.\r\n\r\n\t\t\t\tthis.withSelected(function(m){\r\n\t\t\t\t\tthis.onDeselect(m, true);\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tif(this.group){\r\n\t\t\t\t\tsurface.remove(this.group);\r\n\t\t\t\t\tthis.group.removeShape();\r\n\t\t\t\t}\r\n\t\t\t\tthis.group = surface.createGroup();\r\n\t\t\t\tthis.group.setTransform({dx:0, dy: 0});\r\n\t\t\t\t\r\n\t\t\t\tthis.withSelected(function(m){\r\n\t\t\t\t\tthis.group.add(m.container);\r\n\t\t\t\t\tm.select();\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tsetConstraint: function(){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tInternal. Gets all selected stencils' coordinates\r\n\t\t\t\t//\t\tand determines how far left and up the selection\r\n\t\t\t\t//\t\tcan go without going below zero\r\n\r\n\t\t\t\tvar t = Infinity, l = Infinity;\r\n\t\t\t\tthis.withSelected(function(m){\r\n\t\t\t\t\tvar o = m.getBounds();\r\n\t\t\t\t\tt = Math.min(o.y1, t);\r\n\t\t\t\t\tl = Math.min(o.x1, l);\r\n\t\t\t\t});\r\n\t\t\t\tthis.constrain = {l:-l, t:-t};\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tonDeselect: function(stencil, keepObject){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tEvent fired on deselection of a stencil\r\n\r\n\t\t\t\tif(!keepObject){\r\n\t\t\t\t\tdelete this.selectedStencils[stencil.id];\r\n\t\t\t\t}\r\n\t\t\t\t//console.log('onDeselect, keep:', keepObject, \"stencil:\", stencil.type)\r\n\t\t\t\t\r\n\t\t\t\tthis.anchors.remove(stencil);\r\n\t\t\t\t\r\n\t\t\t\tsurface.add(stencil.container);\r\n\t\t\t\tstencil.selected && stencil.deselect();\r\n\t\t\t\tstencil.applyTransform(this.group.getTransform());\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tdeselectItem: function(/*Object*/stencil){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tDeselect passed stencil\r\n\r\n\t\t\t\t// note: just keeping with standardized methods\r\n\t\t\t\tthis.onDeselect(stencil);\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tdeselect: function(){ // all stencils\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tDeselect all stencils\r\n\r\n\t\t\t\tthis.withSelected(function(m){\r\n\t\t\t\t\tthis.onDeselect(m);\r\n\t\t\t\t});\r\n\t\t\t\tthis._dragBegun = false;\r\n\t\t\t\tthis._wasDragged = false;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tonSelect: function(/*Object*/stencil){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tEvent fired on selection of a stencil\r\n\r\n\t\t\t\t//console.log(\"stencil.onSelect\", stencil);\r\n\t\t\t\tif(!stencil){\r\n\t\t\t\t\tconsole.error(\"null stencil is not selected:\", this.stencils)\r\n\t\t\t\t}\r\n\t\t\t\tif(this.selectedStencils[stencil.id]){ return; }\r\n\t\t\t\tthis.selectedStencils[stencil.id] = stencil;\r\n\t\t\t\tthis.group.add(stencil.container);\r\n\t\t\t\tstencil.select();\r\n\t\t\t\tif(this.hasSelected()==1){\r\n\t\t\t\t\tthis.anchors.add(stencil, this.group);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tselectAll: function(){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSelects all items\r\n\t\t\t\tthis._isBusy = true;\r\n\t\t\t\tfor(var m in this.stencils){\r\n\t\t\t\t\t//if(!this.stencils[m].selected){\r\n\t\t\t\t\t\tthis.selectItem(m);\r\n\t\t\t\t\t//}\r\n\t\t\t\t}\r\n\t\t\t\tthis._isBusy = false;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tselectItem: function(/*String|Object*/ idOrItem){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tMethod used to select a stencil.\r\n\r\n\t\t\t\tvar id = typeof(idOrItem)==\"string\" ? idOrItem : idOrItem.id;\r\n\t\t\t\tvar stencil = this.stencils[id];\r\n\t\t\t\tthis.setSelectionGroup();\r\n\t\t\t\tthis.onSelect(stencil);\r\n\t\t\t\tthis.group.moveToFront();\r\n\t\t\t\tthis.setConstraint();\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tonLabelDoubleClick: function(/*EventObject*/obj){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tEvent to connect a textbox to\r\n\t\t\t\t//\t\tfor label edits\r\n\t\t\t\tconsole.info(\"mgr.onLabelDoubleClick:\", obj);\r\n\t\t\t\tif(this.selectedStencils[obj.id]){\r\n\t\t\t\t\tthis.deselect();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tonStencilDoubleClick: function(/*EventObject*/obj){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tEvent fired on the double-click of a stencil\r\n\r\n\t\t\t\tconsole.info(\"mgr.onStencilDoubleClick:\", obj);\r\n\t\t\t\tif(this.selectedStencils[obj.id]){\r\n\t\t\t\t\tif(this.selectedStencils[obj.id].edit){\r\n\t\t\t\t\t\tconsole.info(\"Mgr Stencil Edit -> \", this.selectedStencils[obj.id]);\r\n\t\t\t\t\t\tvar m = this.selectedStencils[obj.id];\r\n\t\t\t\t\t\t// deselect must happen first to set the transform\r\n\t\t\t\t\t\t// then edit knows where to set the text box\r\n\t\t\t\t\t\tm.editMode = true;\r\n\t\t\t\t\t\tthis.deselect();\r\n\t\t\t\t\t\tm.edit();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tonAnchorUp: function(){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tEvent fire on mouseup off of an anchor point\r\n\t\t\t\tthis.setConstraint();\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tonStencilDown: function(/*EventObject*/obj, evt){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tEvent fired on mousedown on a stencil\r\n\r\n\t\t\t\tconsole.info(\" >>> onStencilDown:\", obj.id, this.keys.meta);\r\n\t\t\t\tif(!this.stencils[obj.id]){ return; }\r\n\t\t\t\tthis.setRecentStencil(this.stencils[obj.id]);\r\n\t\t\t\tthis._isBusy = true;\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tif(this.selectedStencils[obj.id] && this.keys.meta){\r\n\t\t\t\t\tif(dojo.isMac && this.keys.cmmd){\r\n\t\t\t\t\t\t// block context menu\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconsole.log(\"    shift remove\");\r\n\t\t\t\t\tthis.onDeselect(this.selectedStencils[obj.id]);\r\n\t\t\t\t\tif(this.hasSelected()==1){\r\n\t\t\t\t\t\tthis.withSelected(function(m){\r\n\t\t\t\t\t\t\tthis.anchors.add(m, this.group);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.group.moveToFront();\r\n\t\t\t\t\tthis.setConstraint();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t\r\n\t\t\t\t}else if(this.selectedStencils[obj.id]){\r\n\t\t\t\t\tconsole.log(\"    clicked on selected\");\r\n\t\t\t\t\t// clicking on same selected item(s)\r\n\t\t\t\t\t// RESET OFFSETS\r\n\t\t\t\t\tvar mx = this.group.getTransform();\r\n\t\t\t\t\tthis._offx = obj.x - mx.dx;\r\n\t\t\t\t\tthis._offy = obj.y - mx.dy;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t\r\n\t\t\t\t}else if(!this.keys.meta){\r\n\t\t\t\t\t\r\n\t\t\t\t\tconsole.log(\"    deselect all\");\r\n\t\t\t\t\tthis.deselect();\r\n\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// meta-key add\r\n\t\t\t\t\t//console.log(\"reset sel and add stencil\")\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(\"    add stencil to selection\");\r\n\t\t\t\t// add a stencil\r\n\t\t\t\tthis.selectItem(obj.id);\r\n\t\t\t\t\r\n\t\t\t\tmx = this.group.getTransform();\r\n\t\t\t\tthis._offx = obj.x - mx.dx;\r\n\t\t\t\tthis._offy = obj.y - mx.dx;\r\n\t\t\t\t\r\n\t\t\t\tthis.orgx = obj.x;\r\n\t\t\t\tthis.orgy = obj.y;\r\n\t\t\t\t\r\n\t\t\t\tthis._isBusy = false;\r\n\t\t\t\t\r\n\t\t\t\t// TODO:\r\n\t\t\t\t//\tdojo.style(surfaceNode, \"cursor\", \"pointer\");\r\n\t\t\t\t\r\n\t\t\t\t// TODO:\r\n\t\t\t\tthis.undo.add({\r\n\t\t\t\t\tbefore:function(){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t},\r\n\t\t\t\t\tafter: function(){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tonLabelDown: function(/*EventObject*/obj, evt){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tEvent fired on mousedown of a stencil's label\r\n\t\t\t\t//\t\tBecause it's an annotation the id will be the\r\n\t\t\t\t//\t\tmaster stencil.\r\n\t\t\t\t\r\n\t\t\t\t//console.info(\"===============>>>Label click: \",obj, \" evt: \",evt);\r\n\t\t\t\tthis.onStencilDown(obj,evt);\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tonStencilUp: function(/*EventObject*/obj){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tEvent fired on mouseup off of a stencil\r\n\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tonLabelUp: function(/*EventObject*/obj){\r\n\t\t\t\tthis.onStencilUp(obj);\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tonStencilDrag: function(/*EventObject*/obj){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tEvent fired on every mousemove of a stencil drag\r\n\r\n\t\t\t\tif(!this._dragBegun){\r\n\t\t\t\t\t// bug, in FF anyway - first mouse move shows x=0\r\n\t\t\t\t\t// the 'else' fixes it\r\n\t\t\t\t\tthis.onBeginDrag(obj);\r\n\t\t\t\t\tthis._dragBegun = true;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.saveThrottledState();\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar x = obj.x - obj.last.x,\r\n\t\t\t\t\t\ty = obj.y - obj.last.y,\r\n\t\t\t\t\t\tc = this.constrain,\r\n\t\t\t\t\t\tmz = defaults.anchors.marginZero;\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tx = obj.x - this._offx;\r\n\t\t\t\t\ty = obj.y - this._offy;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(x < c.l + mz){\r\n\t\t\t\t\t\tx = c.l + mz;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(y < c.t + mz){\r\n\t\t\t\t\t\ty = c.t + mz;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.group.setTransform({\r\n\t\t\t\t\t\tdx: x,\r\n\t\t\t\t\t\tdy: y\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tonLabelDrag: function(/*EventObject*/obj){\r\n\t\t\t\tthis.onStencilDrag(obj);\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tonDragEnd: function(/*EventObject*/obj){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tEvent fired at the end of a stencil drag\r\n\r\n\t\t\t\tthis._dragBegun = false;\r\n\t\t\t},\r\n\t\t\tonBeginDrag: function(/*EventObject*/obj){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tEvent fired at the beginning of a stencil drag\r\n\r\n\t\t\t\tthis._wasDragged = true;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tonDown: function(/*EventObject*/obj){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tEvent fired on mousedown on the canvas\r\n\r\n\t\t\t\tthis.deselect();\r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\t\r\n\t\t\tonStencilOver: function(obj){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tThis changes the cursor when hovering over\r\n\t\t\t\t//\t\ta selectable stencil.\r\n\t\t\t\t\r\n\t\t\t\t//console.log(\"OVER\")\r\n\t\t\t\tdojo.style(obj.id, \"cursor\", \"move\");\r\n\t\t\t},\r\n\r\n\t\t\tonStencilOut: function(obj){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tThis restores the cursor.\r\n\t\t\t\t\r\n\t\t\t\t//console.log(\"OUT\")\r\n\t\t\t\tdojo.style(obj.id, \"cursor\", \"crosshair\");\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\texporter: function(){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tCollects all Stencil data and returns an\r\n\t\t\t\t//\t\tArray of objects.\r\n\t\t\t\tvar items = [];\r\n\t\t\t\tfor(var m in this.stencils){\r\n\t\t\t\t\tthis.stencils[m].enabled && items.push(this.stencils[m].exporter());\r\n\t\t\t\t}\r\n\t\t\t\treturn items; // Array\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tlistStencils: function(){\r\n\t\t\t\treturn this.stencils;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\ttoSelected: function(/*String*/func){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tConvenience function calls function *within*\r\n\t\t\t\t//\t\tall selected stencils\r\n\t\t\t\tvar args = Array.prototype.slice.call(arguments).splice(1);\r\n\t\t\t\tfor(var m in this.selectedStencils){\r\n\t\t\t\t\tvar item = this.selectedStencils[m];\r\n\t\t\t\t\titem[func].apply(item, args);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\twithSelected: function(/*Function*/func){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tConvenience function calls function on\r\n\t\t\t\t//\t\tall selected stencils\r\n\t\t\t\tvar f = dojo.hitch(this, func);\r\n\t\t\t\tfor(var m in this.selectedStencils){\r\n\t\t\t\t\tf(this.selectedStencils[m]);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\twithUnselected: function(/*Function*/func){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tConvenience function calls function on\r\n\t\t\t\t//\t\tall stencils that are not selected\r\n\t\t\t\tvar f = dojo.hitch(this, func);\r\n\t\t\t\tfor(var m in this.stencils){\r\n\t\t\t\t\t!this.stencils[m].selected && f(this.stencils[m]);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\twithStencils: function(/*Function*/func){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tConvenience function calls function on\r\n\t\t\t\t//\t\tall stencils\r\n\t\t\t\tvar f = dojo.hitch(this, func);\r\n\t\t\t\tfor(var m in this.stencils){\r\n\t\t\t\t\tf(this.stencils[m]);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\thasSelected: function(){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tReturns number of selected (generally used\r\n\t\t\t\t//\t\tas truthy or falsey)\r\n\r\n\t\t\t\t// FIXME: should be areSelected?\r\n\t\t\t\tvar ln = 0;\r\n\t\t\t\tfor(var m in this.selectedStencils){ ln++; }\r\n\t\t\t\treturn ln; // Number\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tisSelected: function(/*Object*/stencil){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tReturns if passed stencil is selected or not\r\n\t\t\t\t//\t\tbased on internal collection, not on stencil\r\n\t\t\t\t//\t\tboolean\r\n\t\t\t\treturn !!this.selectedStencils[stencil.id]; // Boolean\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t);\r\n});\r\n"]}