{"version":3,"sources":["drawing/stencil/_Base.js"],"names":["define","dojo","easing","oo","BoxShadow","Angle","LabelExports","defaults","Base","declare","options","mixin","this","style","copy","stencil","util","mouse","container","shortType","abbr","type","isText","test","isLine","renderHit","renderHitLayer","renderHitLines","useSelectedStyle","nm","selCopy","clone","selected","norm","undefined","textSelected","text","color","fill","angleSnap","marginZero","anchors","id","uid","_cons","annotation","subShape","attr","connect","_offX","origin","x","_offY","y","align","valign","data","makeFit","textObj","width","textSize","size","_lineHeight","box","h","parseInt","deleteEmptyCreate","deleteEmptyModify","noBaseRender","points","closePath","setPoints","baseRender","enabled","render","label","setLabel","shadow","addShadow","minWidth","height","setData","draws","connectMouse","_postRenderCon","showAngle","angleLabel","disable","moveToBack","minimumSize","drawingType","dataToPoints","pointsToData","onDelete","console","info","onBeforeRender","onModify","onChangeData","onChangeText","value","onRender","created","disconnectMouse","shape","superClass","_setNodeAtts","onChangeStyle","_isBeingModified","current","currentHit","hitNorm","currentText","disabled","textDisabled","hitSelected","highlighted","hitHighlighted","animate","create","warn","sp","ep","d","duration","ms","ease","linear","ts","steps","Date","getTime","cnt","isArray","start","end","isObject","v","setInterval","hitch","t","p","clearInterval","pnts","forEach","pt","i","o","push","key","n","styleWas","toJson","textWas","coords","r","radius","angle","propChange","getAngle","getRadius","setText","borderWidth","getBounds","mx","dx","dy","transformPoints","x1","y1","log","Math","max","cosphi","zAxis","exporter","substring","lastIndexOf","charAt","toLowerCase","getText","lbl","getLabel","enable","select","deselect","useDelay","setTimeout","_toggleSelected","highlight","unhighlight","moveToFront","onTransformBegin","anchor","onTransformEnd","onTransform","backup","abort","error","applyTransform","setTransform","getTransform","getParent","args","removeShadow","destroy","_label","Label","labelPosition","obj","x2","y2","line","length","absolute","w","preventNegativePos","minY","minX","min","_onPostRender","editMode","_prevData","att","destroyed","disconnect","remove","hit","a","arguments","removeShape","connectMult","apply","ar","e","s","m","once","c","evt","handles","_mouseHandle","register","unregister","onDown","_downOnCanvas","onMove","onDrag","onUp","setObject"],"mappings":";;;;;;;AAAAA,QAAQ,OAAQ,iBAAkB,aAAc,2BAC9C,uBAAwB,uBAAwB,eAClD,SAASC,EAAMC,EAAQC,EAAIC,EAAWC,EAAOC,EAAcC,GA2I3D,IAAIC,EAAOL,EAAGM,QACb,SAASC,GAGRT,EAAKU,MAAMC,KAAMF,GACjBE,KAAKC,MAAQH,EAAQG,OAASN,EAASO,OACpCJ,EAAQK,UACVH,KAAKG,QAAUL,EAAQK,QACvBH,KAAKI,KAAON,EAAQK,QAAQC,KAC5BJ,KAAKK,MAAQP,EAAQK,QAAQE,MAC7BL,KAAKM,UAAYR,EAAQK,QAAQG,UACjCN,KAAKC,MAAQH,EAAQK,QAAQF,OAgB9B,GARAD,KAAKO,UAAYP,KAAKI,KAAKI,KAAKR,KAAKS,MACrCT,KAAKU,OAHW,OAGQC,KAAKX,KAAKS,MAClCT,KAAKY,OALW,yBAKQD,KAAKX,KAAKS,MAElCT,KAAKa,UAAYb,KAAKC,MAAMa,gBACxBd,KAAKa,WAAab,KAAKC,MAAMc,gBAAkBf,KAAKY,SACvDZ,KAAKa,WAAY,IAEdb,KAAKa,WAAab,KAAKC,MAAMe,iBAAiB,CAGjD,IAAI,IAAIC,KAFRjB,KAAKgB,kBAAmB,EACxBhB,KAAKkB,QAAU7B,EAAK8B,MAAMnB,KAAKC,MAAMmB,UACvBpB,KAAKC,MAAMoB,UACKC,IAA1BtB,KAAKC,MAAMmB,SAASH,KACtBjB,KAAKC,MAAMmB,SAASH,GAAMjB,KAAKC,MAAMoB,KAAKJ,IAG5CjB,KAAKuB,aAAelC,EAAK8B,MAAMnB,KAAKC,MAAMuB,MAC1CxB,KAAKuB,aAAaE,MAAQzB,KAAKC,MAAMmB,SAASM,KAoB/C,GAfA1B,KAAK2B,UAAY3B,KAAKC,MAAM0B,WAAa,EAEzC3B,KAAK4B,WAAa9B,EAAQ8B,YAAc5B,KAAKC,MAAM4B,QAAQD,WAC3D5B,KAAK8B,GAAKhC,EAAQgC,IAAM9B,KAAKI,KAAK2B,IAAI/B,KAAKS,MAC3CT,KAAKgC,SAEDhC,KAAKiC,YAAejC,KAAKkC,UAC5BlC,KAAKI,KAAK+B,KAAKnC,KAAKM,UAAW,KAAMN,KAAK8B,IAG3C9B,KAAKoC,QAAQpC,KAAM,iBAAkB,sBAErCA,KAAKqC,MAAQrC,KAAKK,MAAMiC,OAAOC,EAC/BvC,KAAKwC,MAAQxC,KAAKK,MAAMiC,OAAOG,EAE5BzC,KAAKU,OAAO,CAGd,GAFAV,KAAK0C,MAAQ5C,EAAQ4C,OAAS1C,KAAK0C,MACnC1C,KAAK2C,OAAS7C,EAAQ6C,QAAU3C,KAAK2C,OAClC7C,EAAQ8C,MAAQ9C,EAAQ8C,KAAKC,QAAQ,CACvC,IAAIC,EAAU9C,KAAK6C,QAAQ/C,EAAQ8C,KAAKpB,KAAM1B,EAAQ8C,KAAKG,OAC3D/C,KAAKgD,SAAWhD,KAAKC,MAAMuB,KAAKyB,KAAOH,EAAQG,KAC/CjD,KAAKkD,YAAcJ,EAAQK,IAAIC,OAE/BpD,KAAKgD,SAAWK,SAASrD,KAAKC,MAAMuB,KAAKyB,KAAM,IAC/CjD,KAAKkD,YAA8B,IAAhBlD,KAAKgD,SAQzBhD,KAAKsD,uBAAgDhC,IAA5BxB,EAAQwD,kBAAgCxD,EAAQwD,kBAAoBtD,KAAKC,MAAMuB,KAAK8B,kBAC7GtD,KAAKuD,uBAAgDjC,IAA5BxB,EAAQyD,kBAAgCzD,EAAQyD,kBAAoBvD,KAAKC,MAAMuB,KAAK+B,kBAK9GvD,KAAKmC,KAAKrC,EAAQ8C,MAMf5C,KAAKwD,eAML1D,EAAQ2D,QAEP3D,EAAQ8C,OAAiC,IAAzB9C,EAAQ8C,KAAKc,YAC/B1D,KAAK0D,WAAY,GAElB1D,KAAK2D,UAAU7D,EAAQ2D,QACvBzD,KAAKoC,QAAQpC,KAAM,SAAUA,KAAM,YAAY,GAC/CA,KAAK4D,YAAc5D,KAAK6D,SAAW7D,KAAK8D,SACxChE,EAAQiE,OAAS/D,KAAKgE,SAASlE,EAAQiE,OACvCjE,EAAQmE,QAAUjE,KAAKkE,UAAUpE,EAAQmE,SAEjCnE,EAAQ8C,MAEhB9C,EAAQ8C,KAAKG,MAAQjD,EAAQ8C,KAAKG,MAAQjD,EAAQ8C,KAAKG,MAAQ/C,KAAKC,MAAMuB,KAAK2C,SAC/ErE,EAAQ8C,KAAKwB,OAAStE,EAAQ8C,KAAKwB,OAAStE,EAAQ8C,KAAKwB,OAASpE,KAAKkD,YACvElD,KAAKqE,QAAQvE,EAAQ8C,MACrB5C,KAAKoC,QAAQpC,KAAM,SAAUA,KAAM,YAAY,GAC/CA,KAAK4D,YAAc5D,KAAK6D,SAAW7D,KAAK8D,OAAOhE,EAAQ8C,KAAKpB,MAC5DxB,KAAK4D,YAAc9D,EAAQiE,OAAS/D,KAAKgE,SAASlE,EAAQiE,OAC1D/D,KAAK4D,YAAc9D,EAAQmE,QAAUjE,KAAKkE,UAAUpE,EAAQmE,SAEpDjE,KAAKsE,QAEbtE,KAAKyD,UACLzD,KAAK4C,QACL5C,KAAKuE,eACLvE,KAAKwE,eAAiBnF,EAAK+C,QAAQpC,KAAM,SAAUA,KAAM,kBAEvDA,KAAKyE,YACPzE,KAAK0E,WAAa,IAAIjF,GAAOU,QAAQH,QAGlCA,KAAK6D,UACR7D,KAAK2E,UACL3E,KAAK4E,aAEL5E,KAAK8D,OAAOhE,EAAQ8C,KAAKpB,UAe1Bf,KAAK,wBAKLoE,YAAY,GAIZhB,SAAQ,EAGRiB,YAAY,UAIZT,QAAS,SAAwBzB,GAKhC5C,KAAK4C,KAAOA,EACZ5C,KAAKyD,OAASzD,KAAK+E,gBAGpBpB,UAAW,SAA0BF,GAKpCzD,KAAKyD,OAASA,EAEXzD,KAAKgF,eACPhF,KAAK4C,KAAO5C,KAAKgF,iBAInBC,SAAU,SAAuB9E,GAGhC+E,QAAQC,KAAK,WAAYnF,KAAK8B,KAG/BsD,eAAgB,SAAoBjF,KAKpCkF,SAAU,SAAmBlF,KAO7BmF,aAAc,SAAoBnF,KAMlCoF,aAAc,SAASC,KAMvBC,SAAU,SAAoBtF,GAgB7BH,KAAKwE,eAAiBnF,EAAK+C,QAAQpC,KAAM,SAAUA,KAAM,iBACzDA,KAAK0F,SAAU,EACf1F,KAAK2F,kBAGF3F,KAAK4F,MACP5F,KAAK4F,MAAMC,WAAa7F,KAExBA,KAAKM,UAAUuF,WAAa7F,KAE7BA,KAAK8F,aAAa9F,OAInB+F,cAAe,SAAmB5F,GAIjCH,KAAKgG,kBAAmB,EACpBhG,KAAK6D,SAMR7D,KAAKC,MAAMgG,QAAUjG,KAAKC,MAAMoB,KAChCrB,KAAKC,MAAMiG,WAAalG,KAAKC,MAAMkG,QACnCnG,KAAKC,MAAMmG,YAAcpG,KAAKC,MAAMuB,OAPpCxB,KAAKC,MAAMgG,QAAUjG,KAAKC,MAAMoG,SAChCrG,KAAKC,MAAMmG,YAAcpG,KAAKC,MAAMqG,aACpCtG,KAAKC,MAAMiG,WAAalG,KAAKC,MAAMkG,SAQjCnG,KAAKoB,UACJpB,KAAKgB,mBACPhB,KAAKC,MAAMgG,QAAUjG,KAAKC,MAAMmB,SAChCpB,KAAKC,MAAMmG,YAAcpG,KAAKuB,cAE/BvB,KAAKC,MAAMiG,WAAalG,KAAKC,MAAMsG,aAE3BvG,KAAKwG,cAEbxG,KAAKC,MAAMiG,WAAalG,KAAKC,MAAMwG,gBAMpCzG,KAAK8D,UAGN4C,QAAS,SAAS5G,EAAS6G,GAC1BzB,QAAQ0B,KAAK,qCACb,IAQIC,EAAIC,EARJC,EAAKjH,EAAQiH,GAAKjH,EAAQkH,UAAY,IACtCC,EAAMnH,EAAQmH,IAAM,GACpBC,EAAQpH,EAAQoH,MAAQ5H,EAAO6H,OAE/BC,GADQtH,EAAQuH,OACV,IAAIC,MAAOC,WAEjBC,EAAO,EACPC,GAAU,EAGXpI,EAAKoI,QAAQ3H,EAAQ4H,QACvBb,EAAK/G,EAAQ4H,MACbZ,EAAMhH,EAAQ6H,KAENtI,EAAKuI,SAAS9H,EAAQ4H,QAC9Bb,EAAK/G,EAAQ4H,MACbZ,EAAMhH,EAAQ6H,IACdF,GAAW,GAGXvC,QAAQ0B,KAAK,+BAGd,IAAIiB,EAAIC,YAAYzI,EAAK0I,MAAM/H,KAAM,WACpC,IAAIgI,GAAI,IAAIV,MAAOC,UAAYH,EAC3Ba,EAAIf,EAAK,EAAEc,EAAEjB,GACjB,GAAGiB,EAAIjB,GAAKS,IAAQ,IACnBU,cAAcL,QAIf,GAAGJ,EAAQ,CACV,IAAIU,KACJ9I,EAAK+I,QAAQvB,EAAI,SAASwB,EAAIC,GAE7B,IAAIC,GACHhG,GAAIuE,EAAGwB,GAAG/F,EAAEsE,EAAGyB,GAAG/F,GAAG0F,EAAIpB,EAAGyB,GAAG/F,EAC/BE,GAAIqE,EAAGwB,GAAG7F,EAAEoE,EAAGyB,GAAG7F,GAAGwF,EAAIpB,EAAGyB,GAAG7F,GAEhC0F,EAAKK,KAAKD,KAEXvI,KAAK2D,UAAUwE,GACfnI,KAAK8D,aAED,CAEJ,IAAIyE,KACJ,IAAI,IAAItH,KAAM4F,EACb0B,EAAEtH,IAAO6F,EAAG7F,GAAM4F,EAAG5F,IAAOgH,EAAIpB,EAAG5F,GAGpCjB,KAAKmC,KAAKoG,MAURtB,IAGL9E,KAAM,SAA2BsG,EAAuBjD,GAcvD,IAGC+C,EACAtH,EACA8B,EALG2F,EAAI1I,KAAK6D,QAAQ7D,KAAKC,MAAMoB,KAAKrB,KAAKC,MAAMoG,SAC5C2B,EAAIhI,KAAK6D,QAAQ7D,KAAKC,MAAMuB,KAAKxB,KAAKC,MAAMqG,aAC5Cc,EAAKpH,KAAKuB,iBAIboH,EAAWtJ,EAAKuJ,OAAOF,GACvBG,EAAUxJ,EAAKuJ,OAAOZ,GAEnBc,GACHvG,GAAE,EACFE,GAAE,EACFsG,GAAE,EACF3E,QAAO,EACPrB,OAAM,EACNiG,QAAO,EACPC,OAAM,GAEHC,GAAa,EAiBjB,IAAIjI,IAhBY,iBAAP,GACRsH,MACEE,GAAOjD,EAGT+C,EAAIlJ,EAAK8B,MAAMsH,GAGbF,EAAExF,QAIJA,EAAQwF,EAAExF,aACHwF,EAAExF,OAGAwF,EACNtH,KAAMyH,IAAIA,EAAEzH,GAAMsH,EAAEtH,IACpBA,KAAM+G,IAAIA,EAAE/G,GAAMsH,EAAEtH,IACpBA,KAAMmG,IAAKA,EAAGnG,GAAMsH,EAAEtH,IAEtBA,KAAM6H,IACRA,EAAO7H,GAAMsH,EAAEtH,GACfiI,GAAa,EACJ,UAANjI,QAA4BK,IAAViH,EAAEU,MACtBV,EAAEU,MAAQH,EAAOG,MAAQjJ,KAAKmJ,WAChB,SAANlI,QAA4BK,IAAXiH,EAAES,SAC3BT,EAAES,OAASF,EAAOE,OAAShJ,KAAKoJ,cAIzB,QAANnI,GACFjB,KAAKqJ,QAAQd,EAAE/G,MAEP,SAANP,GACFjB,KAAKgE,SAASuE,EAAExE,OAOlB,QAJmBzC,IAAhBiH,EAAEe,cACJZ,EAAE3F,MAAQwF,EAAEe,aAGVtJ,KAAKgB,iBAAiB,CAGxB,IAAIC,KAAMjB,KAAKC,MAAMoB,UACEC,IAAnBtB,KAAKkB,QAAQD,KACfjB,KAAKC,MAAMmB,SAASH,GAAMjB,KAAKC,MAAMoB,KAAKJ,IAG5CjB,KAAKuB,aAAaE,MAAQzB,KAAKC,MAAMmB,SAASK,MAI/C,GAAIzB,KAAK0F,QAAT,CAKA,QAASpE,IAANiH,EAAEhG,QAAuBjB,IAANiH,EAAE9F,EAAc,CACrC,IAAIU,EAAMnD,KAAKuJ,WAAU,GACrBC,GAAOC,GAAG,EAAGC,GAAG,GACpB,IAAIzI,KAAMsH,EACF,KAAJtH,GAAgB,KAALA,GAAiB,KAALA,IACzBuI,EAAG,IAAIvI,GAAMsH,EAAEtH,GAAMkC,EAAIlC,IAG3BjB,KAAK2J,gBAAgBH,GAItB,IAAIvB,EAAIjI,KAAKyD,YACAnC,IAAViH,EAAEU,MACJjJ,KAAK+E,cACJxC,EAAEvC,KAAK4C,KAAKgH,GACZnH,EAAEzC,KAAK4C,KAAKiH,GACZZ,MAAMV,EAAEU,MACRD,OAAOT,EAAES,cAGO1H,IAARyB,IACTkF,EAAE,GAAG1F,EAAI0F,EAAE,GAAG1F,EAAI0F,EAAE,GAAG1F,EAAIQ,EAC3B/C,KAAKgF,aAAaiD,SAGL3G,IAAXiH,EAAEnE,aAAgC9C,IAAViH,EAAEU,QAC7B/D,QAAQ4E,IAAI,eACX7B,EAAE,GAAGxF,EAAIwF,EAAE,GAAGxF,EAAIwF,EAAE,GAAGxF,EAAI8F,EAAEnE,OAC7BpE,KAAKgF,aAAaiD,SAGV3G,IAANiH,EAAEQ,IACJ/I,KAAK4C,KAAKmG,EAAIgB,KAAKC,IAAI,EAAGzB,EAAEQ,KAI1BG,GAAcL,GAASxJ,EAAKuJ,OAAOZ,IAAMW,GAAYtJ,EAAKuJ,OAAOF,KAGnE1I,KAAK+F,cAAc/F,MAEpBuI,EAAExF,MAAQA,OAEGzB,GAAViH,EAAE0B,SACHjK,KAAK4C,KAAsC5C,KAAK4C,KAAKqH,OAAS1B,EAAE0B,OAArDjK,KAAK4C,MAAQqH,OAAO1B,EAAE0B,QAClCjK,KAAKC,MAAMiK,MAAkB,GAAV3B,EAAE0B,UAIvBE,SAAU,WAIT,IAAI1J,EAAOT,KAAKS,KAAK2J,UAAUpK,KAAKS,KAAK4J,YAAY,KAAK,GAAGC,OAAO,GAAGC,cACpEvK,KAAKS,KAAK2J,UAAUpK,KAAKS,KAAK4J,YAAY,KAAK,GAC9C9B,EAAIlJ,EAAK8B,MAAMnB,KAAKC,MAAMoB,MAC9BkH,EAAEe,YAAcf,EAAExF,aACXwF,EAAExF,MACA,QAANtC,EACF8H,EAAE9E,OAASzD,KAAKyD,OAEhB8E,EAAIlJ,EAAKU,MAAMwI,EAAGvI,KAAK4C,MAExB2F,EAAE9H,KAAOA,EACNT,KAAKU,SACP6H,EAAE/G,KAAOxB,KAAKwK,iBACdjC,EAAIlJ,EAAKU,MAAMwI,EAAGvI,KAAKC,MAAMuB,OACpB2C,gBACFoE,EAAEjF,yBACFiF,EAAEhF,mBAEV,IAAIkH,EAAMzK,KAAK0K,WAIf,OAHGD,IACFlC,EAAExE,MAAQ0G,GAEJlC,GAQR5D,QAAS,WAIR3E,KAAK6D,SAAU,EACf7D,KAAKa,WAAY,EACjBb,KAAK+F,cAAc/F,OAGpB2K,OAAQ,WAKP3K,KAAK6D,SAAU,EACf7D,KAAKa,WAAY,EACjBb,KAAK+F,cAAc/F,OAGpB4K,OAAQ,WAQP5K,KAAKoB,UAAW,EAChBpB,KAAK+F,cAAc/F,OAGpB6K,SAAU,SAAoBC,GAa1BA,EACFC,WAAW1L,EAAK0I,MAAM/H,KAAM,WAC3BA,KAAKoB,UAAW,EAChBpB,KAAK+F,cAAc/F,QACjB,MAEHA,KAAKoB,UAAW,EAChBpB,KAAK+F,cAAc/F,QAGrBgL,gBAAiB,WACZhL,KAAKoB,WACTpB,KAAK6K,WACLE,WAAW1L,EAAK0I,MAAM/H,KAAM,UAAW,KAGxCiL,UAAW,WAGVjL,KAAKwG,aAAc,EACnBxG,KAAK+F,cAAc/F,OAGpBkL,YAAa,WAGZlL,KAAKwG,aAAc,EACnBxG,KAAK+F,cAAc/F,OAGpBmL,YAAa,WAIZnL,KAAKM,WAAaN,KAAKM,UAAU6K,eAGlCvG,WAAY,WAIX5E,KAAKM,WAAaN,KAAKM,UAAUsE,cAGlCwG,iBAAkB,SAA+BC,GAKhDrL,KAAKgG,kBAAmB,GAGzBsF,eAAgB,SAA6BD,GAG5CrL,KAAKgG,kBAAmB,EACxBhG,KAAKqF,SAASrF,OAGfuL,YAAa,SAA+BF,GAIvCrL,KAAKgG,kBACRhG,KAAKoL,mBAINpL,KAAK2D,UAAU3D,KAAKyD,QACpBzD,KAAK8D,UAGN6F,gBAAiB,SAASH,GAQzB,GAAIA,EAAGC,IAAOD,EAAGE,GAAjB,CAIA,IAAI8B,EAASnM,EAAK8B,MAAMnB,KAAKyD,QAASgI,GAAQ,EAQ9C,GAPApM,EAAK+I,QAAQpI,KAAKyD,OAAQ,SAAS8E,GAClCA,EAAEhG,GAAKiH,EAAGC,GACVlB,EAAE9F,GAAK+G,EAAGE,IACPnB,EAAEhG,EAAEvC,KAAK4B,YAAc2G,EAAE9F,EAAEzC,KAAK4B,cAClC6J,GAAQ,KAGPA,EAGF,OAFAzL,KAAKyD,OAAS+H,OACdtG,QAAQwG,MAAM,0BAA0B1L,KAAK8B,GAAG,wBAGjD9B,KAAKuL,cACLvL,KAAKsL,mBAGNK,eAAgB,SAASnC,GAKxBxJ,KAAK2J,gBAAgBH,IAGtBoC,aAAc,SAAmBpC,GAKhCxJ,KAAKmC,MACJI,EAAEiH,EAAGC,GACLhH,EAAE+G,EAAGE,MAIPmC,aAAc,WAIb,OAAO7L,KAAKoB,SAAWpB,KAAKM,UAAUwL,YAAYD,gBAAkBpC,GAAG,EAAGC,GAAG,IAG9ExF,UAAW,SAAmB6H,IAC7BA,GAAc,IAAPA,KAAmBA,GACrB5L,QAAUH,KACfA,KAAKiE,OAAS,IAAIzE,EAAUuM,IAG7BC,aAAc,WACbhM,KAAKiE,OAAOgI,WAGbjI,SAAU,SAAmBxC,GAQxBxB,KAAKkM,YAUM5K,GAANE,GACRxB,KAAKkM,OAAOlI,SAASxC,GAVrBxB,KAAKkM,OAAS,IAAIxM,EAAayM,OAC9B3K,KAAKA,EACLpB,KAAKJ,KAAKI,KACVC,MAAML,KAAKK,MACXF,QAAQH,KACRiC,YAAW,EACX3B,UAAUN,KAAKM,UACf8L,cAAcpM,KAAKoM,iBAOtB1B,SAAU,WAGT,OAAG1K,KAAKkM,OACAlM,KAAKkM,OAAO1B,UAEb,MAGRrB,SAAU,WAKT,IAAIpC,EAAI/G,KAAKgF,eACTqH,GACH3E,OACCnF,EAAEwE,EAAE6C,GACJnH,EAAEsE,EAAE8C,IAELtH,EAAEwE,EAAEuF,GACJ7J,EAAEsE,EAAEwF,IAEDtD,EAAQjJ,KAAKI,KAAK6I,MAAMoD,EAAKrM,KAAK2B,WAGtC,OADAsH,EAAM,IAAIA,EAAQ,IAAMA,GACjBA,GAERG,UAAW,WAMV,IAAIjG,EAAMnD,KAAKuJ,WAAU,GACrBiD,GAAQ9E,OAAOnF,EAAEY,EAAIyG,GAAInH,EAAEU,EAAI0G,IAAKtH,EAAEY,EAAImJ,GAAI7J,EAAEU,EAAIoJ,IACxD,OAAOvM,KAAKI,KAAKqM,OAAOD,IAEzBjD,UAAW,SAAuBmD,GAcjC,IAAqB9C,EAAIC,EAAIyC,EAAIC,EAA7BtE,EAAIjI,KAAKyD,OACb,OAAa,GAAVwE,EAAEwE,QACDC,GACF9C,EAAK3B,EAAE,GAAG1F,EACVsH,EAAK5B,EAAE,GAAGxF,EACV6J,EAAKrE,EAAE,GAAG1F,EACVgK,EAAKtE,EAAE,GAAGxF,IAEVmH,EAAK3B,EAAE,GAAG1F,EAAI0F,EAAE,GAAG1F,EAAI0F,EAAE,GAAG1F,EAAI0F,EAAE,GAAG1F,EACrCsH,EAAK5B,EAAE,GAAGxF,EAAIwF,EAAE,GAAGxF,EAAIwF,EAAE,GAAGxF,EAAIwF,EAAE,GAAGxF,EACrC6J,EAAKrE,EAAE,GAAG1F,EAAI0F,EAAE,GAAG1F,EAAI0F,EAAE,GAAG1F,EAAI0F,EAAE,GAAG1F,EACrCgK,EAAKtE,EAAE,GAAGxF,EAAIwF,EAAE,GAAGxF,EAAIwF,EAAE,GAAGxF,EAAIwF,EAAE,GAAGxF,IAGrCmH,GAAGA,EACHC,GAAGA,EACHyC,GAAGA,EACHC,GAAGA,EACHhK,EAAEqH,EACFnH,EAAEoH,EACF8C,EAAEL,EAAG1C,EACLxG,EAAEmJ,EAAG1C,KAILD,GAAG3B,EAAE,GAAG1F,EACRsH,GAAG5B,EAAE,GAAGxF,EACR6J,GAAGrE,EAAE,GAAG1F,EACRgK,GAAGtE,EAAE,GAAGxF,EACRF,EAAE0F,EAAE,GAAG1F,EACPE,EAAEwF,EAAE,GAAGxF,EACPkK,EAAE1E,EAAE,GAAG1F,EAAI0F,EAAE,GAAG1F,EAChBa,EAAE6E,EAAE,GAAGxF,EAAIwF,EAAE,GAAGxF,IAMnBmK,mBAAoB,WAMnB,IAAG5M,KAAKgG,kBAEJhG,KAAKyD,QAAWzD,KAAKyD,OAAOgJ,OAAhC,CAEA,GAAc,mCAAXzM,KAAKS,KAAwC,CAE/C,IAAIoM,EAAO7M,KAAK4B,WAAYkL,EAAO9M,KAAK4B,WACxCvC,EAAK+I,QAAQpI,KAAKyD,OAAQ,SAASwE,GAAI4E,EAAO9C,KAAKgD,IAAI9E,EAAExF,EAAGoK,KAC5DxN,EAAK+I,QAAQpI,KAAKyD,OAAQ,SAASwE,GAAI6E,EAAO/C,KAAKgD,IAAI9E,EAAE1F,EAAGuK,KAEzDD,EAAK7M,KAAK4B,YACZvC,EAAK+I,QAAQpI,KAAKyD,OAAQ,SAASwE,EAAGK,GACrCL,EAAExF,EAAIwF,EAAExF,GAAKzC,KAAK4B,WAAWiL,IAC3B7M,MAED8M,EAAK9M,KAAK4B,YACZvC,EAAK+I,QAAQpI,KAAKyD,OAAQ,SAASwE,GAClCA,EAAE1F,GAAMvC,KAAK4B,WAAWkL,GACtB9M,WAKJX,EAAK+I,QAAQpI,KAAKyD,OAAQ,SAASwE,GAClCA,EAAE1F,EAAI0F,EAAE1F,EAAI,EAAIvC,KAAK4B,WAAaqG,EAAE1F,EACpC0F,EAAExF,EAAIwF,EAAExF,EAAI,EAAIzC,KAAK4B,WAAaqG,EAAExF,IAGtCzC,KAAK2D,UAAU3D,KAAKyD,UAGrBuJ,cAAe,SAAmBpK,GAU9B5C,KAAKgG,kBACPhG,KAAKqF,SAASrF,MACdA,KAAKgG,kBAAmB,GACfhG,KAAK0F,QAKX1F,KAAKiN,UAAajN,KAAKoB,WAAYpB,KAAKkN,WAAa7N,EAAKuJ,OAAO5I,KAAKkN,YAAc7N,EAAKuJ,OAAO5I,KAAK4C,MAK/F5C,KAAKkN,WAAelN,KAAKU,SAAUV,KAAKwK,YAEjDxK,KAAKkN,UAAY7N,EAAK8B,MAAMnB,KAAK4C,QALjC5C,KAAKsF,aAAatF,MAClBA,KAAKkN,UAAY7N,EAAK8B,MAAMnB,KAAK4C,QAUnCkD,aAAc,SAASF,GAWtB,IAAIuH,GAAMnN,KAAK6D,SAAa7D,KAAKiC,YAAgC,SAAlBjC,KAAK8E,YAA2C,GAAnB9E,KAAK8E,YACjF9E,KAAKI,KAAK+B,KAAKyD,EAAO,cAAeuH,IAItClB,QAAS,WASLjM,KAAKoN,aACLpN,KAAK4C,MAAQ5C,KAAKyD,QAAUzD,KAAKyD,OAAOgJ,SAC1CzM,KAAKiF,SAASjF,MAGfA,KAAK2F,kBACL3F,KAAKqN,WAAWrN,KAAKgC,OACrB3C,EAAKgO,WAAWrN,KAAKwE,gBACrBxE,KAAKsN,OAAOtN,KAAK4F,MAAO5F,KAAKuN,KAC7BvN,KAAKoN,WAAY,IAGlBE,OAAQ,WAQP,IAAIE,EAAIC,UACR,IAAID,EAAEf,OAAO,CACZ,IAAIzM,KAAK4F,MAAQ,OACjB4H,GAAKxN,KAAK4F,OAEX,IAAI,IAAI0C,EAAE,EAAEA,EAAEkF,EAAEf,OAAOnE,IACnBkF,EAAElF,IACJkF,EAAElF,GAAGoF,eAKRC,YAAa,WAMTF,UAAUhB,OAAO,EAEnBzM,KAAKgC,MAAMwG,KAAKxI,KAAKoC,QAAQwL,MAAM5N,KAAMyN,YACjCpO,EAAKoI,QAAQgG,UAAU,GAAG,IAElCpO,EAAK+I,QAAQqF,UAAU,GAAI,SAASI,GACnC7N,KAAKgC,MAAMwG,KAAKxI,KAAKoC,QAAQwL,MAAM5N,KAAM6N,KACvC7N,MAGHA,KAAKgC,MAAMwG,KAAKxI,KAAKoC,QAAQwL,MAAM5N,KAAMyN,UAAU,MAMrDrL,QAAS,SAASmG,EAAGuF,EAAGC,EAAGC,EAAeC,GAUzC,IAAIC,EACJ,GAAc,iBAAL,EACLH,GAEFC,EAAID,EAAGA,EAAID,EAAGA,EAAEvF,EAAGA,EAAIvI,OAGvBgO,EAAIF,EAAGA,EAAIvF,EAAGA,EAAIwF,EAAI/N,WAElB,GAAIgO,GAGJ,GAAGC,EAOR,OALAC,EAAI7O,EAAK+C,QAAQmG,EAAGuF,EAAG,SAASK,GAC/B9O,EAAK0I,MAAMgG,EAAGC,EAAd3O,CAAiB8O,GACjB9O,EAAKgO,WAAWa,KAEjBlO,KAAKgC,MAAMwG,KAAK0F,GACTA,OARPF,EAAID,EAAGA,EAAI/N,KAcZ,OAFAkO,EAAI7O,EAAK+C,QAAQmG,EAAGuF,EAAGC,EAAGC,GAC1BhO,KAAKgC,MAAMwG,KAAK0F,GACTA,GAGRb,WAAY,SAAyBe,GAIhCA,IACA/O,EAAKoI,QAAQ2G,KAAWA,GAASA,IACrC/O,EAAK+I,QAAQgG,EAAS/O,EAAKgO,WAAYhO,KAGxCkF,aAAc,WAIbvE,KAAKqO,aAAerO,KAAKK,MAAMiO,SAAStO,OAEzC2F,gBAAiB,WAIhB3F,KAAKK,MAAMkO,WAAWvO,KAAKqO,eAI5BvK,OAAQ,aAMRiB,aAAc,SAAmBnC,KAIjCoC,aAAc,SAAkBvB,KAIhC+K,OAAQ,SAAwBnC,GAQ/BrM,KAAKyO,eAAgB,EACrBpP,EAAKgO,WAAWrN,KAAKwE,gBACrBxE,KAAKwE,eAAiB,MAEvBkK,OAAQ,SAAwBrC,KAMhCsC,OAAQ,SAAwBtC,KAKhCuC,KAAM,SAAwBvC,OAOhC,OADAhN,EAAKwP,UAAU,8BAA+BjP,GACvCA","file":"../../../drawing/stencil/_Base.js","sourcesContent":["define([\"dojo\", \"dojo/fx/easing\", \"../util/oo\", \"../annotations/BoxShadow\", \r\n  \"../annotations/Angle\", \"../annotations/Label\", \"../defaults\"], \r\nfunction(dojo, easing, oo, BoxShadow, Angle, LabelExports, defaults){\r\n\r\n/*=====\r\nvar StencilArgs = {\r\n// container: [readonly] dojo.gfx.group\r\n//\t\tThe parent shape that contains all\r\n//\t\tshapes used in a Stencil\r\ncontainer:null,\r\n\r\n// anchorType: String\r\n//\t\tOptionally blank or 'group'. 'group' tells\r\n//\t\tan anchor point that it must constrain\r\n//\t\titself to other anchor points.\r\nanchorType:\"\",\r\n\r\n// isText: Boolean\r\n//\t\tWhether this is a text object or not\r\n//\t\t(either stencil.text or tools.TextBlock)\r\nisText:false,\r\n\r\n// shortType: String\r\n//\t\tThe type of stencil that corresponds with the types and\r\n//\t\tconstructors used in Drawing.registerTool\r\nshortType:\"\",\r\n\r\n// annotation: Boolean\r\n//\t\tA Stencil used within a Stencil. An annotation\r\n//\t\tis not selectable or clickable. A Label would\r\n//\t\tbe one example.\r\nannotation:false,\r\n\r\n// subShape: Boolean\r\n//\t\tA Stencil used within a Stencil. A subShape\r\n//\t\tis clickable. An arrow head would be an example.\r\nsubShape:false,\r\n\r\n// style: Object\r\n//\t\tAn instance of the styles and defaults used within\r\n//\t\tthe Stencil.\r\nstyle:null,\r\n\r\n// util: Object\r\n//\t\tPointer to util.common\r\nutil:null,\r\n\r\n// mouse: Object\r\n//\t\tPointer to the mouse instance\r\nmouse:null,\r\n\r\n// keys: Object\r\n//\t\tPointer to the keys class\r\nkeys:null,\r\n\r\n// points: StencilPoints\r\n//\t\tPoints is an array of objects that make up the\r\n//\t\tdescription of a Stencil. The points to a Rect\r\n//\t\tthat is 100x100 and at x:10 and y:10 would look like:\r\n//\t\t[{x:10,y:10}, {x:110, y:10}, {x:110, y:110}, {x:10, y:110}]\r\n//\t\tPoints go clockwise from the top left. In the case of Paths,\r\n//\t\tthey would go in the order that the Stencil would be drawn.\r\n//\t\tAlways when the points Array is set, a data Object is created\r\n//\t\tas well. So never set points directly, always use setPoints().\r\n//\r\n//\t\tSee: setPoints()\r\npoints:[],\r\n\r\n// data: StencilData\r\n//\t\tA data object typically (but not always) resembles the data\r\n//\t\tthat is used to create the dojox.gfx Shape. The same Rect\r\n//\t\texample shown in points above would look like:\r\n//\t\t{x:10, y:10, width:100, height:100}\r\n//\t\tAnd an Ellipse with the same coordinates:\r\n//\t\t{cx:55, cy:55, rx:50, ry:50}\r\n//\t\tThe only Stencil that does not support data (at this time)\r\n//\t\tis the Path. While x1,x2,x3... culd be used in a data object\r\n//\t\tit doesn't provide much benefit.\r\n//\t\tAlways when a data object is set, a set of points is created\r\n//\t\tas well. So never set data directly, always use setData().\r\n//\r\n//\t\tSee: setData()\r\ndata:null,\r\n\r\n// marginZero [readonly] Number\r\n//\t\tHow closely shape can get to y:0 or x:0. Less than zero has\r\n//\t\tbugs in VML. This is set with defaults, and should be equal\r\n//\t\tto half the size of an anchor point (5 px)\r\nmarginZero:0,\r\n\r\n// created: [readonly] Boolean\r\n//\t\tWhether the Stencil has been rendered for the first time or\r\n//\t\tnot.\r\ncreated: false,\r\n\r\n// highlighted: [readonly] Boolean\r\n//\t\tWhether the Stencil is highlighted or not.\r\nhighlighted:false,\r\n\r\n// selected: [readonly] Boolean\r\n//\t\tWhether the Stencil is selected or not.\r\nselected:false,\r\n\r\n// draws: [readonly] Boolean\r\n//\t\tWhether the Stencil can draw with a mouse drag or can just\r\n//\t\tbe created programmtically. If the Stencil comes from the\r\n//\t\tstencil package, it should be draw:false. If it comes from\r\n//\t\tthe tools package it should be draw:true.\r\ndraws:false\r\n};\r\n\r\nvar StencilPoint = {\r\n// summary:\r\n//\t\tOne point Object in the points Array\r\n// x: Number\r\n//\t\tx position of point\r\n// y: Number\r\n//\t\ty position of point\r\n};\r\n\r\nvar ToolsSetup = {\r\n// summary:\r\n//\t\tAn object attached to a Tool's constructor\r\n//\t\tused to inform the toolbar of its information\r\n//\t\tand properties.\r\n// description:\r\n//\t\tThis object is inserted into the *function* of\r\n//\t\ta tool (not a stencil). Like: function.ToolsSetup\r\n//\t\tIt must be attached after constructr creation, so\r\n//\t\tthis object is found at the bottom of the file.\r\n\r\n// name: String\r\n//\t\tFully qualified name of constructor\r\n// tooltip: String\r\n//\t\tText to display on toolbar button hover\r\n// iconClass: String\r\n//\t\tCSS class with icon information to attach\r\n//\t\tto toolbar button.\r\n};\r\n=====*/\r\n\r\nvar Base = oo.declare(\r\n\tfunction(options){\r\n\t\t//console.log(\"______Base\", this.type, options)\r\n\t\t// clone style so changes are reflected in future shapes\r\n\t\tdojo.mixin(this, options);\r\n\t\tthis.style = options.style || defaults.copy();\r\n\t\tif(options.stencil){\r\n\t\t\tthis.stencil = options.stencil;\r\n\t\t\tthis.util = options.stencil.util;\r\n\t\t\tthis.mouse = options.stencil.mouse;\r\n\t\t\tthis.container = options.stencil.container;\r\n\t\t\tthis.style = options.stencil.style;\r\n\t\t}\r\n\r\n\t\t// don't use the 'g' on these, it affects\r\n\t\t// the global RegExp\r\n\t\tvar lineTypes = /Line|Vector|Axes|Arrow/;\r\n\t\tvar textTypes = /Text/;\r\n\r\n\t\tthis.shortType = this.util.abbr(this.type);\r\n\t\tthis.isText = textTypes.test(this.type);\r\n\t\tthis.isLine = lineTypes.test(this.type);\r\n\r\n\t\tthis.renderHit = this.style.renderHitLayer;\r\n\t\tif(!this.renderHit && this.style.renderHitLines && this.isLine){\r\n\t\t\tthis.renderHit = true;\r\n\t\t}\r\n\t\tif(!this.renderHit && this.style.useSelectedStyle){\r\n\t\t\tthis.useSelectedStyle = true;\r\n\t\t\tthis.selCopy = dojo.clone(this.style.selected);\r\n\t\t\tfor(var nm in this.style.norm){\r\n\t\t\t\tif(this.style.selected[nm]===undefined){\r\n\t\t\t\t\tthis.style.selected[nm] = this.style.norm[nm];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.textSelected = dojo.clone(this.style.text);\r\n\t\t\tthis.textSelected.color = this.style.selected.fill;\r\n\r\n\t\t}\r\n\r\n\r\n\t\tthis.angleSnap = this.style.angleSnap || 1;\r\n\r\n\t\tthis.marginZero = options.marginZero || this.style.anchors.marginZero;\r\n\t\tthis.id = options.id || this.util.uid(this.type);\r\n\t\tthis._cons = [];\r\n\r\n\t\tif(!this.annotation && !this.subShape){\r\n\t\t\tthis.util.attr(this.container, \"id\", this.id);\r\n\t\t}\r\n\r\n\t\tthis.connect(this, \"onBeforeRender\", \"preventNegativePos\");\r\n\r\n\t\tthis._offX = this.mouse.origin.x;\r\n\t\tthis._offY = this.mouse.origin.y;\r\n\r\n\t\tif(this.isText){\r\n\t\t\tthis.align = options.align || this.align;\r\n\t\t\tthis.valign = options.valign || this.valign;\r\n\t\t\tif(options.data && options.data.makeFit){\r\n\t\t\t\tvar textObj = this.makeFit(options.data.text, options.data.width);\r\n\t\t\t\tthis.textSize = this.style.text.size = textObj.size;\r\n\t\t\t\tthis._lineHeight = textObj.box.h;\r\n\t\t\t}else{\r\n\t\t\t\tthis.textSize = parseInt(this.style.text.size, 10);\r\n\t\t\t\tthis._lineHeight = this.textSize * 1.4;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// TODO: thinner text selection\r\n\t\t\t//this.style.hitSelected.width *= 0.5;\r\n\r\n\t\t\t// ouch. how verbose. My mixin is weak....\r\n\t\t\tthis.deleteEmptyCreate = options.deleteEmptyCreate!==undefined ? options.deleteEmptyCreate : this.style.text.deleteEmptyCreate;\r\n\t\t\tthis.deleteEmptyModify = options.deleteEmptyModify!==undefined ? options.deleteEmptyModify : this.style.text.deleteEmptyModify;\r\n\t\t}\r\n\r\n\t\t//this.drawingType\r\n\r\n\t\tthis.attr(options.data);\r\n\r\n\t\t// make truthy\r\n\t\t// add to renders below\r\n\t\t// this.baseRender && render()\r\n\t\t//if(this.type == \"dojox.drawing.tools.TextBlock\"){\r\n\t\tif(this.noBaseRender){\r\n\t\t\t// TextBlock will handle rendering itself\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//console.log(\"BASE OPTS:\", options)\r\n\t\tif(options.points){\r\n\t\t\t//console.log(\"__________Base.constr >>>> \", this.type, \"points\", options.points)\r\n\t\t\tif(options.data && options.data.closePath===false){\r\n\t\t\t\tthis.closePath = false;\r\n\t\t\t}\r\n\t\t\tthis.setPoints(options.points);\r\n\t\t\tthis.connect(this, \"render\", this, \"onRender\", true);\r\n\t\t\tthis.baseRender && this.enabled && this.render();\r\n\t\t\toptions.label && this.setLabel(options.label);\r\n\t\t\toptions.shadow && this.addShadow(options.shadow);\r\n\r\n\t\t}else if(options.data){\r\n\t\t\t//console.log(\"___________Base.constr\", this.type, \"options data\", options.data)\r\n\t\t\toptions.data.width = options.data.width ? options.data.width : this.style.text.minWidth;\r\n\t\t\toptions.data.height = options.data.height ? options.data.height : this._lineHeight;\r\n\t\t\tthis.setData(options.data);\r\n\t\t\tthis.connect(this, \"render\", this, \"onRender\", true);\r\n\t\t\tthis.baseRender && this.enabled && this.render(options.data.text);\r\n\t\t\tthis.baseRender && options.label && this.setLabel(options.label);\r\n\t\t\tthis.baseRender && options.shadow && this.addShadow(options.shadow);\r\n\r\n\t\t}else if(this.draws){\r\n\t\t\t//console.log(\"_____________Base.constr\", this.type, \"draws\")\r\n\t\t\tthis.points = [];\r\n\t\t\tthis.data = {};\r\n\t\t\tthis.connectMouse();\r\n\t\t\tthis._postRenderCon = dojo.connect(this, \"render\", this, \"_onPostRender\");\r\n\t\t}\r\n\t\tif(this.showAngle){\r\n\t\t\tthis.angleLabel = new Angle({stencil:this});\r\n\t\t}\r\n\r\n\t\tif(!this.enabled){\r\n\t\t\tthis.disable();\r\n\t\t\tthis.moveToBack();\r\n\t\t\t// some things render some don't...\r\n\t\t\tthis.render(options.data.text);\r\n\t\t}\r\n\r\n\t},\r\n\t{\r\n\t\t// summary:\r\n\t\t//\t\tThe base class used for all Stencils.\r\n\t\t// description:\r\n\t\t//\t\tAll stencils extend this base class.\r\n\t\t//\t\tMost methods and events can be found here.\r\n\r\n\t\t// type: String\r\n\t\t//\t\tThe type of Stencil this is. Should be overridden\r\n\t\t//\t\tby extending classes.\r\n\t\t//\t\tFIXME: should this be declaredClass?\r\n\t\ttype:\"dojox.drawing.stencil\",\r\n\r\n\t\t// minimumSize: Number\r\n\t\t//\t\tThe minimum size allowed for a render. If the size\r\n\t\t//\t\tis less, the shape is destroyed.\r\n\t\tminimumSize:10,\r\n\r\n\t\t// enabled: [readonly] Boolean\r\n\t\t//\t\tWhether the Stencil is enabled or not.\r\n\t\tenabled:true,\r\n\r\n\r\n\t\tdrawingType:\"stencil\",\r\n\r\n\t\t//points:[],\r\n\r\n\t\tsetData: function(/*StencilData*/data){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSetter for Stencil data; also converts\r\n\t\t\t//\t\tdata to points. See individual Stencils\r\n\t\t\t//\t\tfor specific data properties.\r\n\t\t\tthis.data = data;\r\n\t\t\tthis.points = this.dataToPoints();\r\n\t\t},\r\n\r\n\t\tsetPoints: function(/*StencilPoints*/points){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSetter for Stencil points; also converts\r\n\t\t\t//\t\tpoints to data. See individual Stencils\r\n\t\t\t//\t\tfor specific points properties.\r\n\t\t\tthis.points = points;\r\n\t\t\t// Path doesn't do data\r\n\t\t\tif(this.pointsToData){\r\n\t\t\t\tthis.data = this.pointsToData();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonDelete: function(/* Stencil */ stencil){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStub - fires before this is destroyed\r\n\t\t\tconsole.info(\"onDelete\", this.id);\r\n\t\t},\r\n\r\n\t\tonBeforeRender: function(/*Object*/ stencil){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStub - Fires before render occurs.\r\n\t\t},\r\n\r\n\t\tonModify: function(/*Object*/stencil){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStub - fires on change of any property,\r\n\t\t\t//\t\tincluding style properties\r\n\r\n\t\t},\r\n\r\n\t\tonChangeData: function(/*Object*/ stencil){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStub - fires on change of dimensional\r\n\t\t\t//\t\tproperties or a text change\r\n\t\t},\r\n\r\n\t\tonChangeText: function(value){ // value or 'this' ?\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStub - fires on change of text in a\r\n\t\t\t//\t\tTextBlock tool only\r\n\t\t},\r\n\r\n\t\tonRender: function(/*Object*/ stencil){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStub - Fires on creation.\r\n\t\t\t//\t\tDrawing connects to this (once!) to be\r\n\t\t\t//\t\tnotified of drag completion. But only if it\r\n\t\t\t//\t\twas registered as a Tool. Creating Stencil in and of\r\n\t\t\t//\t\titself does not register it.\r\n\t\t\t//\r\n\t\t\t//\t\tThis should fire\r\n\t\t\t//\t\tat the *end* of creation (not during drag)\r\n\r\n\t\t\t//\tFIXME:\r\n\t\t\t//\t\tThis should probably be onCreate. It should\r\n\t\t\t//\t\tonly fire once. But the mechanism for determining\r\n\t\t\t//\t\tthis is more complicated than it sounds.\r\n\r\n\t\t\tthis._postRenderCon = dojo.connect(this, \"render\", this, \"_onPostRender\");\r\n\t\t\tthis.created = true;\r\n\t\t\tthis.disconnectMouse();\r\n\r\n\t\t\t// for Silverlight\r\n\t\t\tif(this.shape){\r\n\t\t\t\tthis.shape.superClass = this;\r\n\t\t\t}else{\r\n\t\t\t\tthis.container.superClass = this;\r\n\t\t\t}\r\n\t\t\tthis._setNodeAtts(this);\r\n\t\t\t//console.warn(\"ONRENDER\", this.id, this)\r\n\t\t},\r\n\r\n\t\tonChangeStyle: function(/*Object*/stencil){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFires when styles of shape has changed\r\n\r\n\t\t\tthis._isBeingModified = true; // need this to prevent onRender\r\n\t\t\tif(!this.enabled){\r\n\t\t\t\tthis.style.current = this.style.disabled;\r\n\t\t\t\tthis.style.currentText = this.style.textDisabled;\r\n\t\t\t\tthis.style.currentHit = this.style.hitNorm;\r\n\r\n\t\t\t}else{\r\n\t\t\t\tthis.style.current = this.style.norm;\r\n\t\t\t\tthis.style.currentHit = this.style.hitNorm;\r\n\t\t\t\tthis.style.currentText = this.style.text;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.selected){\r\n\t\t\t\tif(this.useSelectedStyle){\r\n\t\t\t\t\tthis.style.current = this.style.selected;\r\n\t\t\t\t\tthis.style.currentText = this.textSelected;\r\n\t\t\t\t}\r\n\t\t\t\tthis.style.currentHit = this.style.hitSelected;\r\n\r\n\t\t\t}else if(this.highlighted){\r\n\t\t\t\t//this.style.current = this.style.highlighted;\r\n\t\t\t\tthis.style.currentHit = this.style.hitHighlighted;\r\n\t\t\t\t//this.style.currentText = this.style.textHighlighted;\r\n\t\t\t}\r\n\r\n\t\t\t// NOTE: Can't just change props like setStroke\r\n\t\t\t// because Silverlight throws error\r\n\t\t\tthis.render();\r\n\t\t},\r\n\r\n\t\tanimate: function(options, create){\r\n\t\t\tconsole.warn(\"ANIMATE..........................\")\r\n\t\t\tvar d = \toptions.d || options.duration || 1000;\r\n\t\t\tvar ms = \toptions.ms || 20;\r\n\t\t\tvar ease = \toptions.ease || easing.linear;\r\n\t\t\tvar steps = options.steps;\r\n\t\t\tvar ts = \tnew Date().getTime();\r\n\t\t\tvar w = \t100;\r\n\t\t\tvar cnt = \t0;\r\n\t\t\tvar isArray = true;\r\n\t\t\tvar sp, ep;\r\n\r\n\t\t\tif(dojo.isArray(options.start)){\r\n\t\t\t\tsp =\toptions.start;\r\n\t\t\t\tep = \toptions.end;\r\n\r\n\t\t\t}else if(dojo.isObject(options.start)){\r\n\t\t\t\tsp =\toptions.start;\r\n\t\t\t\tep = \toptions.end;\r\n\t\t\t\tisArray = \tfalse;\r\n\t\t\t}else{\r\n\r\n\t\t\t\tconsole.warn(\"No data provided to animate\")\r\n\t\t\t}\r\n\r\n\t\t\tvar v = setInterval(dojo.hitch(this, function(){\r\n\t\t\t\tvar t = new Date().getTime() - ts;\r\n\t\t\t\tvar p = ease(1-t/d);\r\n\t\t\t\tif(t > d || cnt++ > 100){\r\n\t\t\t\t\tclearInterval(v);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(isArray){\r\n\t\t\t\t\tvar pnts = [];\r\n\t\t\t\t\tdojo.forEach(sp, function(pt, i){\r\n\r\n\t\t\t\t\t\tvar o = {\r\n\t\t\t\t\t\t\tx: (ep[i].x-sp[i].x)*p + sp[i].x,\r\n\t\t\t\t\t\t\ty: (ep[i].y-sp[i].y)*p + sp[i].y\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tpnts.push(o);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.setPoints(pnts);\r\n\t\t\t\t\tthis.render();\r\n\r\n\t\t\t\t}else{\r\n\r\n\t\t\t\t\tvar o = {};\r\n\t\t\t\t\tfor(var nm in sp){\r\n\t\t\t\t\t\to[nm] = (ep[nm] - sp[nm]) * p + sp[nm];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.attr(o);\r\n\r\n\t\t\t\t}\r\n\t\t\t\t//console.dir(pnts)\r\n\r\n\r\n\t\t\t\t//this.attr(\"height\", w);\r\n\t\t\t\t////console.log(\"W:\", w)\r\n\t\t\t\t//w += 5;\r\n\r\n\t\t\t}), ms);\r\n\t\t},\r\n\r\n\t\tattr: function(/*String|Object*/ key, /*String|Number?*/value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tChanges properties in the style or disabled styles,\r\n\t\t\t//\t\tdepending on whether the object is enabled.\r\n\t\t\t//\t\tAlso can be used to change most position and size props.\r\n\r\n\t\t\t// NOTE: JUST A SETTER!! TODO!\r\n\r\n\t\t\t// WARNING:\r\n\t\t\t//\tNot doing any Stencil-type checking here. Setting a height\r\n\t\t\t//\ton a line or an angle on a rectangle will just not render.\r\n\r\n\t\t\t// FIXME\r\n\t\t\t// 'width' attr is used for line width. How to change the width of a stencil?\r\n\t\t\tvar n = this.enabled?this.style.norm:this.style.disabled;\r\n\t\t\tvar t = this.enabled?this.style.text:this.style.textDisabled;\r\n\t\t\tvar ts = this.textSelected || {},\r\n\t\t\t\to,\r\n\t\t\t\tnm,\r\n\t\t\t\twidth,\r\n\t\t\t\tstyleWas = dojo.toJson(n),\r\n\t\t\t\ttextWas = dojo.toJson(t);\r\n\r\n\t\t\tvar coords = {\r\n\t\t\t\tx:true,\r\n\t\t\t\ty:true,\r\n\t\t\t\tr:true,\r\n\t\t\t\theight:true,\r\n\t\t\t\twidth:true,\r\n\t\t\t\tradius:true,\r\n\t\t\t\tangle:true\r\n\t\t\t};\r\n\t\t\tvar propChange = false;\r\n\t\t\tif(typeof(key)!=\"object\"){\r\n\t\t\t\to = {};\r\n\t\t\t\to[key] = value;\r\n\t\t\t}else{\r\n\t\t\t\t// prevent changing actual data\r\n\t\t\t\to = dojo.clone(key);\r\n\t\t\t}\r\n\r\n\t\t\tif(o.width){\r\n\t\t\t\t// using width for size,\r\n\t\t\t\t// borderWidth should be used\r\n\t\t\t\t// for line thickness\r\n\t\t\t\twidth = o.width;\r\n\t\t\t\tdelete o.width;\r\n\t\t\t}\r\n\r\n\t\t\tfor(nm in o){\r\n\t\t\t\tif(nm in n){ n[nm] = o[nm]; }\r\n\t\t\t\tif(nm in t){ t[nm] = o[nm]; }\r\n\t\t\t\tif(nm in ts){ ts[nm] = o[nm]; }\r\n\r\n\t\t\t\tif(nm in coords){\r\n\t\t\t\t\tcoords[nm] = o[nm];\r\n\t\t\t\t\tpropChange = true;\r\n\t\t\t\t\tif(nm == \"radius\" && o.angle===undefined){\r\n\t\t\t\t\t\to.angle = coords.angle = this.getAngle();\r\n\t\t\t\t\t}else if(nm == \"angle\" && o.radius===undefined){\r\n\t\t\t\t\t\to.radius = coords.radius = this.getRadius();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif(nm == \"text\"){\r\n\t\t\t\t\tthis.setText(o.text);\r\n\t\t\t\t}\r\n\t\t\t\tif(nm == \"label\"){\r\n\t\t\t\t\tthis.setLabel(o.label);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(o.borderWidth!==undefined){\r\n\t\t\t\tn.width = o.borderWidth;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this.useSelectedStyle){\r\n\t\t\t\t// using the original selected style copy as\r\n\t\t\t\t// a reference map of what props to copy\r\n\t\t\t\tfor(nm in this.style.norm){\r\n\t\t\t\t\tif(this.selCopy[nm]===undefined){\r\n\t\t\t\t\t\tthis.style.selected[nm] = this.style.norm[nm];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.textSelected.color = this.style.selected.color;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif(!this.created){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// basic transform\r\n\t\t\tif(o.x!==undefined || o.y!==undefined){\r\n\t\t\t\tvar box = this.getBounds(true);\r\n\t\t\t\tvar mx = { dx:0, dy:0 };\r\n\t\t\t\tfor(nm in o){\r\n\t\t\t\t\tif(nm==\"x\" || nm ==\"y\" || nm ==\"r\"){\r\n\t\t\t\t\t\tmx[\"d\"+nm] = o[nm] - box[nm];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.transformPoints(mx);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar p = this.points;\r\n\t\t\tif(o.angle!==undefined){\r\n\t\t\t\tthis.dataToPoints({\r\n\t\t\t\t\tx:this.data.x1,\r\n\t\t\t\t\ty:this.data.y1,\r\n\t\t\t\t\tangle:o.angle,\r\n\t\t\t\t\tradius:o.radius\r\n\t\t\t\t});\r\n\r\n\t\t\t} else if(width!==undefined){\r\n\t\t\t\tp[1].x = p[2].x = p[0].x + width;\r\n\t\t\t\tthis.pointsToData(p);\r\n\t\t\t}\r\n\r\n\t\t\tif(o.height!==undefined && o.angle===undefined){\r\n\t\t\tconsole.log(\"Doing P2D-2\");\r\n\t\t\t\tp[2].y = p[3].y = p[0].y + o.height;\r\n\t\t\t\tthis.pointsToData(p);\r\n\t\t\t}\r\n\r\n\t\t\tif(o.r!==undefined){\r\n\t\t\t\tthis.data.r = Math.max(0, o.r);\r\n\t\t\t}\r\n\r\n\t\t\t//console.dir(this.data);\r\n\t\t\tif(propChange || textWas!=dojo.toJson(t) || styleWas != dojo.toJson(n)){\r\n\t\t\t\t// to trigger the render\r\n\t\t\t\t// other events will be called post render\r\n\t\t\t\tthis.onChangeStyle(this);\r\n\t\t\t}\r\n\t\t\to.width = width;\r\n\t\t\t\r\n\t\t\tif(o.cosphi!=undefined){\r\n\t\t\t\t!this.data? this.data = {cosphi:o.cosphi} : this.data.cosphi = o.cosphi;\r\n\t\t\t\tthis.style.zAxis = o.cosphi!=0 ? true : false;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\texporter: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tExports Stencil data\r\n\r\n\t\t\tvar type = this.type.substring(this.type.lastIndexOf(\".\")+1).charAt(0).toLowerCase()\r\n\t\t\t\t+ this.type.substring(this.type.lastIndexOf(\".\")+2);\r\n\t\t\tvar o = dojo.clone(this.style.norm);\r\n\t\t\to.borderWidth = o.width;\r\n\t\t\tdelete o.width;\r\n\t\t\tif(type==\"path\"){\r\n\t\t\t\to.points = this.points;\r\n\t\t\t}else{\r\n\t\t\t\to = dojo.mixin(o, this.data);\r\n\t\t\t}\r\n\t\t\to.type = type;\r\n\t\t\tif(this.isText){\r\n\t\t\t\to.text = this.getText();\r\n\t\t\t\to = dojo.mixin(o, this.style.text);\r\n\t\t\t\tdelete o.minWidth;\r\n\t\t\t\tdelete o.deleteEmptyCreate;\r\n\t\t\t\tdelete o.deleteEmptyModify;\r\n\t\t\t}\r\n\t\t\tvar lbl = this.getLabel();\r\n\t\t\tif(lbl){\r\n\t\t\t\to.label = lbl;\r\n\t\t\t}\r\n\t\t\treturn o;\r\n\t\t},\r\n\r\n\r\n\t\t//\tTODO:\r\n\t\t//\t\tMakes these all called by att()\r\n\t\t//\t\tShould points and data be?\r\n\r\n\t\tdisable: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDisables Stencil so it is not selectable.\r\n\t\t\t//\t\tChanges the color to the disabled style.\r\n\t\t\tthis.enabled = false;\r\n\t\t\tthis.renderHit = false;\r\n\t\t\tthis.onChangeStyle(this);\r\n\t\t},\r\n\r\n\t\tenable: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEnables Stencil so it is not selectable (if\r\n\t\t\t//\t\tit was selectable to begin with). Changes the\r\n\t\t\t//\t\tcolor to the current style.\r\n\t\t\tthis.enabled = true;\r\n\t\t\tthis.renderHit = true;\r\n\t\t\tthis.onChangeStyle(this);\r\n\t\t},\r\n\r\n\t\tselect: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the Stencil is selected.\r\n\t\t\t//\t\tNOTE: Calling this will not select the Stencil\r\n\t\t\t//\t\tcalling this just sets the style to the 'selected'\r\n\t\t\t//\t\ttheme. 'manager.Stencil' should be used for selecting\r\n\t\t\t//\t\tStencils.\r\n\r\n\t\t\tthis.selected = true;\r\n\t\t\tthis.onChangeStyle(this);\r\n\t\t},\r\n\r\n\t\tdeselect: function(/*Boolean*/useDelay){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the Stencil is deselected.\r\n\t\t\t//\t\tNOTE: Calling this will not deselect the Stencil\r\n\t\t\t//\t\tcalling this just sets the style to the current\r\n\t\t\t//\t\ttheme. 'manager.Stencil' should be used for selecting\r\n\t\t\t//\t\tand deselecting Stencils.\r\n\t\t\t// useDelay: Boolean\r\n\t\t\t//\t\tAdds  slight delay before the style is set.\r\n\r\n\t\t\t// should not have to render here because the deselection\r\n\t\t\t// re-renders after the transform\r\n\t\t\t// but... oh well.\r\n\t\t\tif(useDelay){\r\n\t\t\t\tsetTimeout(dojo.hitch(this, function(){\r\n\t\t\t\t\tthis.selected = false;\r\n\t\t\t\t\tthis.onChangeStyle(this);\r\n\t\t\t\t}),200);\r\n\t\t\t}else{\r\n\t\t\t\tthis.selected = false;\r\n\t\t\t\tthis.onChangeStyle(this);\r\n\t\t\t}\r\n\t\t},\r\n\t\t_toggleSelected: function(){\r\n\t\t\tif(!this.selected){ return; }\r\n\t\t\tthis.deselect();\r\n\t\t\tsetTimeout(dojo.hitch(this, \"select\"), 0);\r\n\t\t},\r\n\r\n\t\thighlight: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tChanges style to the highlight theme.\r\n\t\t\tthis.highlighted = true;\r\n\t\t\tthis.onChangeStyle(this);\r\n\t\t},\r\n\r\n\t\tunhighlight: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tChanges style to the current theme.\r\n\t\t\tthis.highlighted = false;\r\n\t\t\tthis.onChangeStyle(this);\r\n\t\t},\r\n\r\n\t\tmoveToFront: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMoves Stencil to the front of all other items\r\n\t\t\t//\t\ton the canvas.\r\n\t\t\tthis.container && this.container.moveToFront();\r\n\t\t},\r\n\r\n\t\tmoveToBack: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMoves Stencil to the back of all other items\r\n\t\t\t//\t\ton the canvas.\r\n\t\t\tthis.container && this.container.moveToBack();\r\n\t\t},\r\n\r\n\t\tonTransformBegin: function(/* ? manager.Anchor */anchor){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFired at the start of a transform. This would be\r\n\t\t\t//\t\tan anchor drag or a selection.\r\n\r\n\t\t\tthis._isBeingModified = true;\r\n\t\t},\r\n\r\n\t\tonTransformEnd: function(/* manager.Anchor */anchor){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled from anchor point up mouse up\r\n\t\t\tthis._isBeingModified = false;\r\n\t\t\tthis.onModify(this);\r\n\t\t},\r\n\r\n\t\tonTransform: function(/* ? manager.Anchor */anchor){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled from anchor point mouse drag\r\n\t\t\t//\t\talso called from plugins.Pan.checkBounds\r\n\t\t\tif(!this._isBeingModified){\r\n\t\t\t\tthis.onTransformBegin();\r\n\t\t\t}\r\n\t\t\t// this is not needed for anchor moves, but it\r\n\t\t\t// is for stencil move:\r\n\t\t\tthis.setPoints(this.points);\r\n\t\t\tthis.render();\r\n\t\t},\r\n\r\n\t\ttransformPoints: function(mx){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMoves object to a new X Y location\r\n\t\t\t//\t\tmx is additive. So mx.dx=1 will move the stencil\r\n\t\t\t//\t\t1 pixel to the right from wherever it was.\r\n\r\n\t\t\t// An attempt is made to prevent < 0 errors, but\r\n\t\t\t// this won't work on all shapes (like Axes)\r\n\t\t\tif(!mx.dx && !mx.dy){\r\n\t\t\t\t// no change\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar backup = dojo.clone(this.points), abort = false;\r\n\t\t\tdojo.forEach(this.points, function(o){\r\n\t\t\t\to.x += mx.dx;\r\n\t\t\t\to.y += mx.dy;\r\n\t\t\t\tif(o.x<this.marginZero || o.y<this.marginZero){\r\n\t\t\t\t\tabort = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif(abort){\r\n\t\t\t\tthis.points = backup;\r\n\t\t\t\tconsole.error(\"Attempt to set object '\"+this.id+\"' to less than zero.\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.onTransform();\r\n\t\t\tthis.onTransformEnd();\r\n\t\t},\r\n\r\n\t\tapplyTransform: function(mx){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tApplies the transform to the stencil\r\n\t\t\t//\r\n\t\t\t//\t\tNOTE: PARTIALLY IMPLEMENTED.  Only applies x y coords.\r\n\t\t\tthis.transformPoints(mx);\r\n\t\t},\r\n\r\n\t\tsetTransform: function(/*Object*/mx){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets the transform to the stencil\r\n\t\t\t//\r\n\t\t\t//\t\tNOTE: PARTIALLY IMPLEMENTED.  Only applies x y coords.\r\n\t\t\tthis.attr({\r\n\t\t\t\tx:mx.dx,\r\n\t\t\t\ty:mx.dy\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tgetTransform: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the current transform (position) of the Stencil's\r\n\t\t\t//\t\tcontainer\r\n\t\t\treturn this.selected ? this.container.getParent().getTransform() : {dx:0, dy:0}; // Object\r\n\t\t},\r\n\r\n\t\taddShadow: function(/*Object*/args){\r\n\t\t\targs = args===true ? {} : args;\r\n\t\t\targs.stencil = this;\r\n\t\t\tthis.shadow = new BoxShadow(args);\r\n\t\t},\r\n\r\n\t\tremoveShadow: function(){\r\n\t\t\tthis.shadow.destroy();\r\n\t\t},\r\n\r\n\t\tsetLabel: function(/*String*/text){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates and sets a label annotation for the Stencil.\r\n\t\t\t//\t\tIf Stencil contains a labelPosition method, that will\r\n\t\t\t//\t\tbe used for positioning. Otherwise\r\n\t\t\t//\t\tdojox.drawing.util.positioning.label is used.\r\n\t\t\t// text: String\r\n\t\t\t//\t\tThe text to set as the label.\r\n\t\t\tif(!this._label){\r\n\t\t\t\tthis._label = new LabelExports.Label({\r\n\t\t\t\t\ttext:text,\r\n\t\t\t\t\tutil:this.util,\r\n\t\t\t\t\tmouse:this.mouse,\r\n\t\t\t\t\tstencil:this,\r\n\t\t\t\t\tannotation:true,\r\n\t\t\t\t\tcontainer:this.container,\r\n\t\t\t\t\tlabelPosition:this.labelPosition\r\n\t\t\t\t});\r\n\t\t\t}else if(text!=undefined){\r\n\t\t\t\tthis._label.setLabel(text);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tgetLabel: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet the text of the label.\r\n\t\t\tif(this._label){\r\n\t\t\t\treturn this._label.getText(); // String\r\n\t\t\t}\r\n\t\t\treturn null; //null\r\n\t\t},\r\n\r\n\t\tgetAngle: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGets angle of Stencil\r\n\t\t\t//\t\tNOTE: Only works for Lines, Arrows, Vectors and Axes\r\n\t\t\t//\t\t(works on points, not transforms)\r\n\t\t\tvar d = this.pointsToData();\r\n\t\t\tvar obj = {\r\n\t\t\t\tstart:{\r\n\t\t\t\t\tx:d.x1,\r\n\t\t\t\t\ty:d.y1\r\n\t\t\t\t},\r\n\t\t\t\tx:d.x2,\r\n\t\t\t\ty:d.y2\r\n\t\t\t};\r\n\t\t\tvar angle = this.util.angle(obj, this.angleSnap);\r\n\t\t\t// converting the angle for display: -180 -> 180, -90 -> 270\r\n\t\t\tangle<0 ? angle = 360 + angle : angle;\r\n\t\t\treturn angle;\r\n\t\t},\r\n\t\tgetRadius: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGets radius (length) of Stencil.\r\n\t\t\t//\r\n\t\t\t//\t\tNOTE: Only works for Lines, Arrows and Vectors\r\n\t\t\t//\t\t(not for Ellipse, Axes has its own version)\r\n\t\t\tvar box = this.getBounds(true);\r\n\t\t\tvar line = {start:{x:box.x1, y:box.y1}, x:box.x2, y:box.y2};\r\n\t\t\treturn this.util.length(line);\r\n\t\t},\r\n\t\tgetBounds: function(/* ? Boolean*/absolute){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the coordinates of the Stencil. This is often\r\n\t\t\t//\t\tdifferent than the data or the points.\r\n\t\t\t//\r\n\t\t\t//\t\tNOTE: Won't work for paths or annotations (labels, Axes, arrow tips)\r\n\t\t\t//\t\tThey should overwrite.\r\n\t\t\t//\r\n\t\t\t//\t\tNOTE: Primarily used for checking for if shape is off\r\n\t\t\t//\t\tcanvas. Therefore Lines could get flipped. Use absolute\r\n\t\t\t//\t\tto prevent this.\r\n\t\t\t// absolute: Boolean\r\n\t\t\t//\t\tKeeps lines from flipping (see note).\r\n\r\n\t\t\tvar p = this.points, x1, y1, x2, y2;\r\n\t\t\tif(p.length==2){\r\n\t\t\t\tif(absolute){\r\n\t\t\t\t\tx1 = p[0].x;\r\n\t\t\t\t\ty1 = p[0].y;\r\n\t\t\t\t\tx2 = p[1].x;\r\n\t\t\t\t\ty2 = p[1].y\r\n\t\t\t\t}else{\r\n\t\t\t\t\tx1 = p[0].x < p[1].x ? p[0].x : p[1].x;\r\n\t\t\t\t\ty1 = p[0].y < p[1].y ? p[0].y : p[1].y;\r\n\t\t\t\t\tx2 = p[0].x < p[1].x ? p[1].x : p[0].x;\r\n\t\t\t\t\ty2 = p[0].y < p[1].y ? p[1].y : p[0].y;\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tx1:x1,\r\n\t\t\t\t\ty1:y1,\r\n\t\t\t\t\tx2:x2,\r\n\t\t\t\t\ty2:y2,\r\n\t\t\t\t\tx:x1,\r\n\t\t\t\t\ty:y1,\r\n\t\t\t\t\tw:x2-x1,\r\n\t\t\t\t\th:y2-y1\r\n\t\t\t\t}; // Object\r\n\t\t\t}else{\r\n\t\t\t\treturn {\r\n\t\t\t\t\tx1:p[0].x,\r\n\t\t\t\t\ty1:p[0].y,\r\n\t\t\t\t\tx2:p[2].x,\r\n\t\t\t\t\ty2:p[2].y,\r\n\t\t\t\t\tx:p[0].x,\r\n\t\t\t\t\ty:p[0].y,\r\n\t\t\t\t\tw:p[2].x - p[0].x,\r\n\t\t\t\t\th:p[2].y - p[0].y\r\n\t\t\t\t}; // Object\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\tpreventNegativePos: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal. Prevent item from being drawn/rendered less\r\n\t\t\t//\t\tthan zero on the X or Y.\r\n\r\n\t\t\t// if being modified anchors will prevent less than zero.\r\n\t\t\tif(this._isBeingModified){ return; }\r\n\t\t\t// FIXME: why is this sometimes empty?\r\n\t\t\tif(!this.points || !this.points.length){ return; }\r\n\r\n\t\t\tif(this.type==\"dojox.drawing.tools.custom.Axes\"){\r\n\t\t\t\t// this scenario moves all points if < 0\r\n\t\t\t\tvar minY = this.marginZero, minX = this.marginZero;\r\n\t\t\t\tdojo.forEach(this.points, function(p){ minY = Math.min(p.y, minY); });\r\n\t\t\t\tdojo.forEach(this.points, function(p){ minX = Math.min(p.x, minX); });\r\n\r\n\t\t\t\tif(minY<this.marginZero){\r\n\t\t\t\t\tdojo.forEach(this.points, function(p, i){\r\n\t\t\t\t\t\tp.y = p.y + (this.marginZero-minY)\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t}\r\n\t\t\t\tif(minX<this.marginZero){\r\n\t\t\t\t\tdojo.forEach(this.points, function(p){\r\n\t\t\t\t\t\tp.x += (this.marginZero-minX)\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\t\t\t\t// this scenario moves just the one point that is < 0\r\n\t\t\t\tdojo.forEach(this.points, function(p){\r\n\t\t\t\t\tp.x = p.x < 0 ? this.marginZero : p.x;\r\n\t\t\t\t\tp.y = p.y < 0 ? this.marginZero : p.y;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tthis.setPoints(this.points);\r\n\t\t},\r\n\r\n\t\t_onPostRender: function(/*Object*/data){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDrag-create or programmatic create calls onRender\r\n\t\t\t//\t\tand afterwards, _onPostRender is called and\r\n\t\t\t//\t\tmanages further events.\r\n\r\n\t\t\t// TODO: can this be onModify? Is that more clear?\r\n\t\t\t//\r\n\t\t\t//console.info(\"...........post render.....\");\r\n\r\n\t\t\tif(this._isBeingModified){\r\n\t\t\t\tthis.onModify(this);\r\n\t\t\t\tthis._isBeingModified = false;\r\n\t\t\t}else if(!this.created){\r\n\t\t\t\t//this.onCreate(this);\r\n\t\t\t\t//this.onRender(this);\r\n\t\t\t}\r\n\r\n\t\t\tif(!this.editMode && !this.selected && this._prevData && dojo.toJson(this._prevData) != dojo.toJson(this.data)){\r\n\t\t\t\t//console.info(\"_Base data changed ----> : this.editMode:\", this.editMode)\r\n\t\t\t\tthis.onChangeData(this);\r\n\t\t\t\tthis._prevData = dojo.clone(this.data);\r\n\r\n\t\t\t}else if(!this._prevData && (!this.isText || this.getText())){\r\n\t\t\t\t//console.info(\"_Base no prevData..........................\");\r\n\t\t\t\tthis._prevData = dojo.clone(this.data);\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t_setNodeAtts: function(shape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal. Sets the rawNode attribute. (Or in Silverlight\r\n\t\t\t//\t\tan \"object attribute\". \"stencil\" is\r\n\t\t\t//\t\tused by the application to determine if\r\n\t\t\t//\t\tsomething is selectable or not. This also\r\n\t\t\t//\t\tsets the mouse custom events like:\r\n\t\t\t//\t\t\"onStencilUp\". To disable the selectability,\r\n\t\t\t//\t\tmake the att \"\", which causes a standard\r\n\t\t\t//\t\tmouse event.\r\n\t\t\t//\t\tLabels are special and used to select master stencils.\r\n\t\t\tvar att = this.enabled && (!this.annotation || this.drawingType==\"label\") ? this.drawingType : \"\";\r\n\t\t\tthis.util.attr(shape, \"drawingType\", att);\r\n\t\t},\r\n\r\n\r\n\t\tdestroy: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDestroys this Stencil\r\n\r\n\t\t\t// Note:\r\n\t\t\t//\t\tCan connect to this, but it's better to\r\n\t\t\t//\t\tconnect to onDelete\r\n\r\n\t\t\t// prevent loops:\r\n\t\t\tif(this.destroyed){ return; }\r\n\t\t\tif(this.data || this.points && this.points.length){\r\n\t\t\t\tthis.onDelete(this);\r\n\t\t\t}\r\n\r\n\t\t\tthis.disconnectMouse();\r\n\t\t\tthis.disconnect(this._cons);\r\n\t\t\tdojo.disconnect(this._postRenderCon);\r\n\t\t\tthis.remove(this.shape, this.hit);\r\n\t\t\tthis.destroyed = true;\r\n\t\t},\r\n\r\n\t\tremove: function(/*Shape...*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRemoves shape(s), typically before a re-render\r\n\t\t\t//\t\tNo args defaults to this.shape\r\n\t\t\t//\t\tPass in multiple args to remove multiple shapes\r\n\r\n\t\t\t// FIXME: Use an Array of all shapes\r\n\r\n\t\t\tvar a = arguments;\r\n\t\t\tif(!a.length){\r\n\t\t\t\tif(!this.shape){ return; }\r\n\t\t\t\ta = [this.shape];\r\n\t\t\t}\r\n\t\t\tfor(var i=0;i<a.length;i++){\r\n\t\t\t\tif(a[i]){\r\n\t\t\t\t\ta[i].removeShape();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tconnectMult: function(/*dojo.connect args */){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConvenience method for batches of quick connects\r\n\t\t\t//\t\tHandles are not returned and therefore cannot be\r\n\t\t\t//\t\tdisconnected until Shape destroy time\r\n\r\n\t\t\tif(arguments.length>1){\r\n\t\t\t\t// arguments are the connect params\r\n\t\t\t\tthis._cons.push(this.connect.apply(this, arguments));\r\n\t\t\t}else if(dojo.isArray(arguments[0][0])){\r\n\t\t\t\t// an array of arrays of params\r\n\t\t\t\tdojo.forEach(arguments[0], function(ar){\r\n\t\t\t\t\tthis._cons.push(this.connect.apply(this, ar));\r\n\t\t\t\t}, this);\r\n\t\t\t}else{\r\n\t\t\t\t//one array of params\r\n\t\t\t\tthis._cons.push(this.connect.apply(this, arguments[0]));\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t// TODO: connect to a Shape event from outside class\r\n\t\tconnect: function(o, e, s, m, /* Boolean*/once){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConvenience method for quick connects\r\n\t\t\t//\t\tSee comments below for possiblities\r\n\t\t\t//\t\tfunctions can be strings\r\n\t\t\t// once:\r\n\t\t\t//\t\tIf true, the connection happens only\r\n\t\t\t//\t\tonce then disconnects. Five args are required\r\n\t\t\t//\t\tfor this functionality.\r\n\r\n\t\t\tvar c;\r\n\t\t\tif(typeof(o)!=\"object\"){\r\n\t\t\t\tif(s){\r\n\t\t\t\t\t// ** function object function **\r\n\t\t\t\t\tm = s; s = e; e=o; o = this;\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// ** function function **\r\n\t\t\t\t\tm = e; e = o; o = s = this;\r\n\t\t\t\t}\r\n\t\t\t}else if(!m){\r\n\t\t\t\t// ** object function function **\r\n\t\t\t\tm = s; s = this;\r\n\t\t\t}else if(once){\r\n\t\t\t\t// ** object function object function Boolean **\r\n\t\t\t\tc = dojo.connect(o, e, function(evt){\r\n\t\t\t\t\tdojo.hitch(s, m)(evt);\r\n\t\t\t\t\tdojo.disconnect(c);\r\n\t\t\t\t});\r\n\t\t\t\tthis._cons.push(c);\r\n\t\t\t\treturn c;\r\n\t\t\t}else{\r\n\t\t\t\t// ** object function object function **\r\n\t\t\t}\r\n\t\t\tc = dojo.connect(o, e, s, m);\r\n\t\t\tthis._cons.push(c);\r\n\t\t\treturn c;\r\n\t\t},\r\n\r\n\t\tdisconnect: function(/*Handle|Array*/handles){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRemoves connections based on passed\r\n\t\t\t//\t\thandles arguments\r\n\t\t\tif(!handles){ return }\r\n\t\t\tif(!dojo.isArray(handles)){ handles=[handles]; }\r\n\t\t\tdojo.forEach(handles, dojo.disconnect, dojo);\r\n\t\t},\r\n\r\n\t\tconnectMouse: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal. Registers this Stencil to receive\r\n\t\t\t//\t\tmouse events.\r\n\t\t\tthis._mouseHandle = this.mouse.register(this);\r\n\t\t},\r\n\t\tdisconnectMouse: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal. Unregisters this Stencil from receiving\r\n\t\t\t//\t\tmouse events.\r\n\t\t\tthis.mouse.unregister(this._mouseHandle);\r\n\t\t},\r\n\r\n\t\t// Should be overwritten by sub class:\r\n\t\trender: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis Stencil's render description. Often\r\n\t\t\t//\t\tcalls 'sub render' methods.\r\n\t\t},\r\n\t\t//renderOutline: function(){},\r\n\t\tdataToPoints: function(/*Object*/data){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConverts data to points.\r\n\t\t},\r\n\t\tpointsToData: function(/*Array*/points){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConverts points to data\r\n\t\t},\r\n\t\tonDown: function(/*EventObject*/obj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMouse event, fired on mousedown on canvas\r\n\r\n\t\t\t// by default, object is ready to accept data\r\n\t\t\t// turn this off for dragging or onRender will\r\n\t\t\t// keep firing and register the shape\r\n\t\t\t// NOTE: Not needed for all stencils. Axes needs it.\r\n\t\t\tthis._downOnCanvas = true;\r\n\t\t\tdojo.disconnect(this._postRenderCon);\r\n\t\t\tthis._postRenderCon = null;\r\n\t\t},\r\n\t\tonMove: function(/*EventObject*/obj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMouse event, fired on mousemove while mouse\r\n\t\t\t//\t\tis not down.\r\n\t\t\t//\t\tNOTE: Not currently implemented\r\n\t\t},\r\n\t\tonDrag: function(/*EventObject*/obj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMouse event, fired on mousemove while mouse\r\n\t\t\t//\t\tis down on canvas\r\n\t\t},\r\n\t\tonUp: function(/*EventObject*/obj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMouse event, fired on mouseup\r\n\t\t}\r\n\t}\r\n);\r\ndojo.setObject(\"dojox.drawing.stencil._Base\", Base);\r\nreturn Base;\r\n});\r\n"]}