{"version":3,"sources":["drawing/stencil/Path.js"],"names":["define","lang","array","oo","Base","registry","Path","declare","options","type","closePath","baseRender","closeRadius","closeColor","r","g","b","a","_create","shp","sty","this","remove","points","length","dojox","gfx","renderer","strAr","forEach","o","i","skip","push","x","y","cmd","t","undefined","stringPath","join","container","createPath","setStroke","setFill","fill","moveTo","lineTo","_setNodeAtts","render","onBeforeRender","renderHit","style","currentHit","current","getBounds","absolute","minx","miny","maxx","maxy","p","isNaN","Math","min","max","x1","y1","x2","y2","w","h","checkClosePoint","firstPt","currPt","dist","util","distance","closeGuide","c","cx","cy","rx","ry","createEllipse","setObject","register","name"],"mappings":"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","file":"../../../drawing/stencil/Path.js","sourcesContent":["define([\"dojo\", \"dojo/_base/array\", \"../util/oo\", \"./_Base\", \"../manager/_registry\"], \r\nfunction(lang, array, oo, Base, registry){\r\n//console.log('base is', lang.isFunction(Base));\r\nvar Path = oo.declare(\r\n\tBase,\r\n\tfunction(options){\r\n\t},\r\n\t{\r\n\t\t// summary:\r\n\t\t//\t\tCreates a dojox.gfx Path based on points provided.\r\n\r\n\t\ttype:\"dojox.drawing.stencil.Path\",\r\n\t\tclosePath: true,\r\n\t\tbaseRender:true,\r\n\t\tcloseRadius:10,\r\n\t\tcloseColor:{r:255,g:255,b:0,a:.5},\r\n\t\t\r\n/*=====\r\nStencilData: {\r\n\t// NOT SUPPORTED FOR PATH\r\n},\r\n\r\nStencilPoints: [\r\n\t// summary:\r\n\t//\t\tAn Array of StencilPoint objects that describe the Stencil\r\n],\r\n=====*/\r\n\t\t\r\n\t\t_create: function(/*String*/shp, /*Object*/sty){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates a dojox.gfx.shape based on passed arguments.\r\n\t\t\t//\t\tCan be called many times by implementation to create\r\n\t\t\t//\t\tmultiple shapes in one stencil.\r\n\r\n\t\t\tthis.remove(this[shp]);\r\n\t\t\tif(!this.points.length){ return; }\r\n\t\r\n\t\t\tif(dojox.gfx.renderer==\"svg\"){\r\n\t\t\t\t// NOTE:\r\n\t\t\t\t// In order to avoid the Safari d=\"\" errors,\r\n\t\t\t\t// we'll need to build a string and set that.\r\n\t\t\t\tvar strAr = [];\r\n\t\t\t\tarray.forEach(this.points, function(o, i){\r\n\t\t\t\t\tif(!o.skip){\r\n\t\t\t\t\t\tif(i==0){\r\n\t\t\t\t\t\t\tstrAr.push(\"M \" + o.x +\" \"+ o.y);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tvar cmd = (o.t || \"\") + \" \";\r\n\t\t\t\t\t\t\tif(o.x===undefined){// Z + undefined works here, but checking anyway\r\n\t\t\t\t\t\t\t\tstrAr.push(cmd);\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tstrAr.push(cmd + o.x +\" \"+ o.y);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\t\t\t\tif(this.closePath){\r\n\t\t\t\t\tstrAr.push(\"Z\");\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.stringPath = strAr.join(\" \");\r\n\t\t\t\t\r\n\t\t\t\tthis[shp] = this.container.createPath(strAr.join(\" \")).setStroke(sty);\r\n\t\t\t\tthis.closePath && this[shp].setFill(sty.fill);\r\n\t\t\t\t\r\n\t\t\t}else{\r\n\t\t\t\t// Leaving this code for VML. It seems slightly faster but times vary.\r\n\t\t\t\tthis[shp] = this.container.createPath({}).setStroke(sty);\r\n\t\t\t\t\r\n\t\t\t\tthis.closePath && this[shp].setFill(sty.fill);\r\n\t\t\t\t\r\n\t\t\t\tarray.forEach(this.points, function(o, i){\r\n\t\t\t\t\tif(!o.skip){\r\n\t\t\t\t\t\tif(i==0 || o.t==\"M\"){\r\n\t\t\t\t\t\t\tthis[shp].moveTo(o.x, o.y);\r\n\t\t\t\t\t\t}else if(o.t==\"Z\"){\r\n\t\t\t\t\t\t\tthis.closePath && this[shp].closePath();\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis[shp].lineTo(o.x, o.y);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\t\t\t\t\r\n\t\t\t\tthis.closePath && this[shp].closePath();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._setNodeAtts(this[shp]);\r\n\t\t},\r\n\t\t\r\n\t\trender: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRenders the 'hit' object (the shape used for an expanded\r\n\t\t\t//\t\thit area and for highlighting) and the'shape' (the actual\r\n\t\t\t//\t\tdisplay object).\r\n\r\n\t\t\tthis.onBeforeRender(this);\r\n\t\t\tthis.renderHit && this._create(\"hit\", this.style.currentHit);\r\n\t\t\tthis._create(\"shape\", this.style.current);\r\n\t\t\t//console.log(\"path render\")\r\n\t\t\t\r\n\t\t\t\r\n\t\t//console.log(\"---------------------rend hit\", this.renderHit, this.id)\r\n\t\t},\r\n\t\tgetBounds: function(/* ? Boolean*/absolute){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverwriting _Base.getBounds. Not sure how absolute should\r\n\t\t\t//\t\twork for a path.\r\n\t\t\tvar minx = 10000, miny = 10000, maxx = 0, maxy = 0;\r\n\t\t\tarray.forEach(this.points, function(p){\r\n\t\t\t\tif(p.x!==undefined && !isNaN(p.x)){\r\n\t\t\t\t\tminx = Math.min(minx, p.x);\r\n\t\t\t\t\tminy = Math.min(miny, p.y);\r\n\t\t\t\t\tmaxx = Math.max(maxx, p.x);\r\n\t\t\t\t\tmaxy = Math.max(maxy, p.y);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\treturn {\r\n\t\t\t\tx1:minx,\r\n\t\t\t\ty1:miny,\r\n\t\t\t\tx2:maxx,\r\n\t\t\t\ty2:maxy,\r\n\t\t\t\tx:minx,\r\n\t\t\t\ty:miny,\r\n\t\t\t\tw:maxx-minx,\r\n\t\t\t\th:maxy-miny\r\n\t\t\t};\r\n\t\t},\r\n\t\t\r\n\t\tcheckClosePoint: function(/*Object*/firstPt, /*Object*/currPt, /*Boolean*/remove){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tChecks if points are close enough to indicate that\r\n\t\t\t//\t\tpath should be close. Provides a visual cue.\r\n\t\t\t// description:\r\n\t\t\t//\t\tNot actually used in stencil.path - this is used for\r\n\t\t\t//\t\tdrawable tools that extend it. Note that those tools\r\n\t\t\t//\t\tneed to remove the shape created: this.closeGuide, or\r\n\t\t\t//\t\tadd arg: remove\r\n\r\n\t\t\tvar dist = this.util.distance(firstPt.x, firstPt.y, currPt.x, currPt.y);\r\n\t\t\tif(this.points.length>1){\r\n\t\t\t\tif(dist<this.closeRadius && !this.closeGuide && !remove){\r\n\t\t\t\t\tvar c = {\r\n\t\t\t\t\t\tcx:firstPt.x,\r\n\t\t\t\t\t\tcy:firstPt.y,\r\n\t\t\t\t\t\trx:this.closeRadius,\r\n\t\t\t\t\t\try:this.closeRadius\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.closeGuide = this.container.createEllipse(c)\r\n\t\t\t\t\t\t.setFill(this.closeColor);\r\n\t\t\t\t\t\t\r\n\t\t\t\t}else if(remove || dist > this.closeRadius && this.closeGuide){\r\n\t\t\t\t\tthis.remove(this.closeGuide);\r\n\t\t\t\t\tthis.closeGuide = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// return if we are within close distance\r\n\t\t\treturn dist < this.closeRadius; // Boolean\r\n\t\t}\r\n\t}\r\n);\r\n\r\nlang.setObject(\"dojox.drawing.stencil.Path\", Path);\r\nregistry.register({\r\n\tname:\"dojox.drawing.stencil.Path\"\r\n}, \"stencil\");\r\n\r\nreturn Path;\r\n});\r\n"]}