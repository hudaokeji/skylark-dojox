{"version":3,"sources":["drawing/ui/Toolbar.js"],"names":["define","dojo","icons","utilCommon","Drawing","registry","declare","constructor","props","node","drawing","this","toolDrawing","width","height","strSelected","selected","strTools","tools","strPlugs","plugs","_mixprops","addBack","orient","box","marginBox","w","h","attr","mode","horizontal","console","log","ready","makeButtons","defaults","clickMode","mouse","setCursor","connect","disconnect","c","getRegistered","padding","margin","size","radius","toolPlugGap","buttons","plugins","x","y","r","g","sym","s","place","mult","toolAr","toolMap","nm","tool","abbr","push","details","secondary","name","toolTmp","split","forEach","trim","t","indexOf","prim","substring","sec","label","funct","setup","hitch","btn","addUI","data","toolType","text","shadow","scope","callback","postSetup","icon","register","select","setTool","plugAr","plugMap","map","p","button","addPlug","stencilTypeMap","options","addPlugin","onRenderStencil","stencil","deselect","addTool","fill","borderWidth","onToolClick","b","id","onPlugClick","objNode","tagName","undefined"],"mappings":"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","file":"../../../drawing/ui/Toolbar.js","sourcesContent":["define([\"dojo\", \"../library/icons\", \"../util/common\", \"../Drawing\", \"../manager/_registry\"], \r\nfunction(dojo, icons, utilCommon, Drawing, registry){\r\n\r\nreturn dojo.declare(\"dojox.drawing.ui.Toolbar\", [], {\r\n\t// summary:\r\n\t//\t\tA Toolbar used for holding buttons; typically representing the Stencils\r\n\t//\t\tused for a DojoX Drawing.\r\n\t// description:\r\n\t//\t\tCreates a GFX-based toolbar that holds GFX-based buttons. Can be either created\r\n\t//\t\twithin the actual drawing or within a separate DOM element. When within the\r\n\t//\t\tdrawing, the toolbar will cover a portion of the drawing; hence the option.\r\n\t//\r\n\t//\t\tA Toolbar can be created programmatically or in markup. Currently markup is as\r\n\t//\t\ta separate DOM element and programmatic is within the drawing.\r\n\t// example:\r\n\t//\t\t|\tdojo.connect(myDrawing, \"onSurfaceReady\", function(){\r\n\t//\t\t|\t\tnew dojox.drawing.ui.Toolbar({\r\n\t//\t\t|\t\t\tdrawing:myDrawing,\r\n\t//\t\t|\t\t\ttools:\"all\",\r\n\t//\t\t|\t\t\tplugs:\"all\",\r\n\t//\t\t|\t\t\tselected:\"ellipse\"\r\n\t//\t\t|\t\t});\r\n\t//\t\t|\t});\r\n\t//\r\n\t//\t\t| <div dojoType=\"dojox.drawing.ui.Toolbar\" id=\"gfxToolbarNode\" drawingId=\"drawingNode\"\r\n\t//\t\t|\t\tclass=\"gfxToolbar\" tools=\"all\" plugs=\"all\" selected=\"ellipse\" orient=\"H\"></div>\r\n\r\n\r\n\tconstructor: function(props, node){\r\n\t\t//console.warn(\"GFX Toolbar:\", props, node)\r\n\t\t\r\n\t\t// no mixin. painful.\r\n\t\tif(props.drawing){\r\n\t\t\t// programmatic\r\n\t\t\tthis.toolDrawing = props.drawing;\r\n\t\t\tthis.drawing = this.toolDrawing;\r\n\t\t\tthis.width = this.toolDrawing.width;\r\n\t\t\tthis.height = this.toolDrawing.height;\r\n\t\t\tthis.strSelected = props.selected;\r\n\t\t\tthis.strTools = props.tools;\r\n\t\t\tthis.strPlugs = props.plugs;\r\n\t\t\tthis._mixprops([\"padding\", \"margin\", \"size\", \"radius\"], props);\r\n\t\t\tthis.addBack();\r\n\t\t\tthis.orient = props.orient ? props.orient : false;\r\n\t\t}else{\r\n\t\t\t// markup\r\n\t\t\tvar box = dojo.marginBox(node);\r\n\t\t\tthis.width = box.w;\r\n\t\t\tthis.height = box.h;\r\n\t\t\tthis.strSelected = dojo.attr(node, \"selected\");\r\n\t\t\tthis.strTools = dojo.attr(node, \"tools\");\r\n\t\t\tthis.strPlugs = dojo.attr(node, \"plugs\");\r\n\t\t\tthis._mixprops([\"padding\", \"margin\", \"size\", \"radius\"], node);\r\n\t\t\tthis.toolDrawing = new Drawing({mode:\"ui\"}, node);\r\n\t\t\tthis.orient = dojo.attr(node, \"orient\");\r\n\t\t}\r\n\t\t\r\n\t\tthis.horizontal = this.orient ? this.orient == \"H\" : this.width > this.height;\r\n\t\tconsole.log(\"this.hor: \",this.horizontal,\" orient: \",this.orient);\r\n\t\tif(this.toolDrawing.ready){\r\n\t\t\tthis.makeButtons();\r\n\t\t\tif(!this.strSelected && this.drawing.defaults.clickMode){ this.drawing.mouse.setCursor('default'); };\r\n\t\t}else{\r\n\t\t\tvar c = dojo.connect(this.toolDrawing, \"onSurfaceReady\", this, function(){\r\n\t\t\t\t//console.log(\"TB built\")\r\n\t\t\t\tdojo.disconnect(c);\r\n\t\t\t\tthis.drawing = registry.getRegistered(\"drawing\", dojo.attr(node, \"drawingId\"));\r\n\t\t\t\tthis.makeButtons();\r\n\t\t\t\tif(!this.strSelected && this.drawing.defaults.clickMode){\r\n\t\t\t\t\tvar c = dojo.connect(this.drawing, \"onSurfaceReady\", this, function(){\r\n\t\t\t\t\tdojo.disconnect(c);\r\n\t\t\t\t\tthis.drawing.mouse.setCursor('default');\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t},\r\n\t\r\n\t// padding:Number\r\n\t//\t\tThe amount of spce between the top and left of the toolbar and the buttons.\r\n\tpadding:10,\r\n\t// margin: Number\r\n\t//\t\tThe space between each button.\r\n\tmargin:5,\r\n\t// size: Number\r\n\t//\t\tThe width and height of the button\r\n\tsize:30,\r\n\t// radius: Number\r\n\t//\t\tThe size of the button's rounded corner\r\n\tradius:3,\r\n\r\n\t// toolPlugGap: number\r\n\t//\t\tThe distance between the tool buttons and plug buttons\r\n\ttoolPlugGap:20,\r\n\t\r\n\t// strSelected: String\r\n\t//\t\tThe button that should be selected at startup.\r\n\tstrSelected:\"\",\r\n\r\n\t// strTools: String\r\n\t//\t\tA comma delineated list of the Stencil-tools to include in the Toolbar.\r\n\t//\t\tIf \"all\" is used, all registered tools are included.\r\n\tstrTools:\"\",\r\n\r\n\t// strPlugs: String\r\n\t//\t\tA comma delineated list of the plugins to include in the Toolbar.\r\n\t//\t\tIf \"all\" is used, all registered plugins are included.\r\n\tstrPlugs:\"\",\r\n\t\r\n\tmakeButtons: function(){\r\n\t\t// summary:\r\n\t\t//\t\tInternal. create buttons.\r\n\t\tthis.buttons = [];\r\n\t\tthis.plugins = [];\r\n\t\r\n\t\tvar x = this.padding, y = this.padding, w = this.size, h = this.size, r = this.radius, g = this.margin,\r\n\t\t\t\t sym = icons,\r\n\t\t\t\t s = {place:\"BR\", size:2, mult:4};\r\n\t\t\t\t \r\n\t\tif(this.strTools){\r\n\t\t\tvar toolAr = [];\r\n\t\t\tvar tools = registry.getRegistered(\"tool\");\r\n\t\t\tvar toolMap = {};\r\n\t\t\tfor(var nm in tools){\r\n\t\t\t\tvar tool = utilCommon.abbr(nm);\r\n\t\t\t\ttoolMap[tool] = tools[nm];\r\n\t\t\t\tif(this.strTools==\"all\"){\r\n\t\t\t\t\ttoolAr.push(tool);\r\n\t\t\t\t\tvar details = registry.getRegistered(\"tool\",nm);\r\n\t\t\t\t\tif(details.secondary){\r\n\t\t\t\t\t\ttoolAr.push(details.secondary.name);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(this.strTools!=\"all\"){\r\n\t\t\t\tvar toolTmp = this.strTools.split(\",\");\r\n\t\t\t\tdojo.forEach(toolTmp, function(tool){\r\n\t\t\t\t\ttool = dojo.trim(tool);\r\n\t\t\t\t\ttoolAr.push(tool);\r\n\t\t\t\t\tvar details = registry.getRegistered(\"tool\",toolMap[tool].name);\r\n\t\t\t\t\tif(details.secondary){\r\n\t\t\t\t\t\ttoolAr.push(details.secondary.name);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\t\t\t\t//dojo.map(toolAr, function(t){ return dojo.trim(t); });\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tdojo.forEach(toolAr, function(t){\r\n\t\t\t\tt = dojo.trim(t);\r\n\t\t\t\tvar secondary = false;\r\n\t\t\t\tif(t.indexOf(\"Secondary\")>-1){\r\n\t\t\t\t\tvar prim = t.substring(0,t.indexOf(\"Secondary\"));\r\n\t\t\t\t\tvar sec = registry.getRegistered(\"tool\",toolMap[prim].name).secondary;\r\n\t\t\t\t\tvar label = sec.label;\r\n\t\t\t\t\tthis[t] = sec.funct;\r\n\t\t\t\t\tif(sec.setup){ dojo.hitch(this, sec.setup)(); };\r\n\t\t\t\t\tvar btn = this.toolDrawing.addUI(\"button\", {data:{x:x, y:y, width:w, height:h/2, r:r}, toolType:t, secondary:true, text:label, shadow:s, scope:this, callback:this[t]});\r\n\t\t\t\t\tif(sec.postSetup){ dojo.hitch(this, sec.postSetup, btn)(); };\r\n\t\t\t\t\tsecondary = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar btn = this.toolDrawing.addUI(\"button\", {data:{x:x, y:y, width:w, height:h, r:r}, toolType:t, icon:sym[t], shadow:s, scope:this, callback:\"onToolClick\"});\r\n\t\t\t\t}\r\n\t\t\t\tregistry.register(btn, \"button\");\r\n\t\t\t\tthis.buttons.push(btn);\r\n\t\t\t\tif(this.strSelected==t){\r\n\t\t\t\t\tbtn.select();\r\n\t\t\t\t\tthis.selected = btn;\r\n\t\t\t\t\tthis.drawing.setTool(btn.toolType);\r\n\t\t\t\t}\r\n\t\t\t\tif(this.horizontal){\r\n\t\t\t\t\tx += h + g;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar space = secondary ? h/2 + g : h + g;\r\n\t\t\t\t\ty += space;\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t}\r\n\t\t\r\n\t\tif(this.horizontal){\r\n\t\t\tx += this.toolPlugGap;\r\n\t\t}else{\r\n\t\t\ty += this.toolPlugGap;\r\n\t\t}\r\n\t\t\r\n\t\tif(this.strPlugs){\r\n\t\t\tvar plugAr = [];\r\n\t\t\tvar plugs = registry.getRegistered(\"plugin\");\r\n\t\t\tvar plugMap = {};\r\n\t\t\tfor(var nm in plugs){\r\n\t\t\t\tvar abbr = utilCommon.abbr(nm);\r\n\t\t\t\tplugMap[abbr] = plugs[nm];\r\n\t\t\t\tif(this.strPlugs==\"all\"){ plugAr.push(abbr); }\r\n\t\t\t}\r\n\t\t\tif(this.strPlugs!=\"all\"){\r\n\t\t\t\tplugAr = this.strPlugs.split(\",\");\r\n\t\t\t\tdojo.map(plugAr, function(p){ return dojo.trim(p); });\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tdojo.forEach(plugAr, function(p){\r\n\t\t\t\tvar t = dojo.trim(p);\r\n\t\t\t\t//console.log(\"   plugin:\", p);\r\n\t\t\t\tif(plugMap[p].button != false){\r\n\t\t\t\t\tvar btn = this.toolDrawing.addUI(\"button\", {data:{x:x, y:y, width:w, height:h, r:r}, toolType:t, icon:sym[t], shadow:s, scope:this, callback:\"onPlugClick\"});\r\n\t\t\t\t\tregistry.register(btn, \"button\");\r\n\t\t\t\t\tthis.plugins.push(btn);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(this.horizontal){\r\n\t\t\t\t\t\tx += h + g;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\ty += h + g;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar addPlug = {}\r\n\t\t\t\tplugMap[p].button == false ? addPlug = {name:this.drawing.stencilTypeMap[p]} : addPlug = {name:this.drawing.stencilTypeMap[p], options:{button:btn}};\r\n\t\t\t\tthis.drawing.addPlugin(addPlug);\r\n\t\t\t}, this);\r\n\t\t}\r\n\t\t\r\n\t\tdojo.connect(this.drawing, \"onRenderStencil\", this, \"onRenderStencil\");\r\n\t},\r\n\t\r\n\tonRenderStencil: function(/* Object */stencil){\r\n\t\t// summary:\r\n\t\t//\t\tStencil render event.\r\n\t\tif(this.drawing.defaults.clickMode){\r\n\t\t\tthis.drawing.mouse.setCursor(\"default\");\r\n\t\t\tthis.selected && this.selected.deselect();\r\n\t\t\tthis.selected = null;\r\n\t\t}\r\n\r\n\t},\r\n\t\r\n\taddTool: function(){\r\n\t\t// TODO: add button here\r\n\t},\r\n\t\r\n\taddPlugin: function(){\r\n\t\t// TODO: add button here\r\n\t},\r\n\t\r\n\taddBack: function(){\r\n\t\t// summary:\r\n\t\t//\t\tInternal. Adds the back, behind the toolbar.\r\n\t\tthis.toolDrawing.addUI(\"rect\", {data:{x:0, y:0, width:this.width, height:this.size + (this.padding*2), fill:\"#ffffff\", borderWidth:0}});\r\n\t},\r\n\t\r\n\tonToolClick: function(/*Object*/button){\r\n\t\t// summary:\r\n\t\t//\t\tTool click event. May be connected to.\r\n\r\n\t\tif(this.drawing.defaults.clickMode){ this.drawing.mouse.setCursor(\"crosshair\"); }\r\n\t\tdojo.forEach(this.buttons, function(b){\r\n\t\t\tif(b.id==button.id){\r\n\t\t\t\tb.select();\r\n\t\t\t\tthis.selected = b;\r\n\t\t\t\tthis.drawing.setTool(button.toolType)\r\n\t\t\t}else{\r\n\t\t\t\tif(!b.secondary){ b.deselect(); }\r\n\t\t\t}\r\n\t\t},this)\r\n\t},\r\n\t\r\n\tonPlugClick: function(/*Object*/button){\r\n\t\t// summary:\r\n\t\t//\t\tPlugin click event. May be connected to.\r\n\t},\r\n\t\r\n\t_mixprops: function(/*Array*/ props, /*Object|Node*/ objNode){\r\n\t\t// summary:\r\n\t\t//\t\tInternally used for mixing in props from an object or\r\n\t\t//\t\tfrom a dom node.\r\n\t\tdojo.forEach(props, function(p){\r\n\t\t\tthis[p] = objNode.tagName\r\n\t\t\t\t? dojo.attr(objNode, p)===null ? this[p] : dojo.attr(objNode, p)\r\n\t\t\t\t: objNode[p]===undefined ? this[p] : objNode[p];\r\n\t\t}, this);\r\n\t}\r\n\t\r\n});\r\n});\r\n"]}