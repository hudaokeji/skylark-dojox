{"version":3,"sources":["drawing/ui/dom/Pan.js"],"names":["define","dojo","oo","Plugin","registry","deprecated","Pan","declare","options","_scrollTimeout","this","domNode","node","connect","keys","anchors","stencils","canvas","_blockScroll","clearTimeout","setTimeout","hitch","_mouseHandle","mouse","register","selected","type","onKeyUp","evt","keyCode","onSetPan","onKeyDown","bool","removeClass","addClass","setEventMode","onPanDrag","obj","x","last","y","parentNode","scrollTop","move","scrollLeft","onScroll","onStencilUp","checkBounds","onStencilDrag","t","Infinity","r","b","l","sx","sy","mx","group","getTransform","dx","dy","sc","scrollOffset","ch","left","top","height","cw","width","z","zoom","pch","parentHeight","pcw","parentWidth","withSelected","m","o","getBounds","Math","min","y1","max","x2","y2","x1","withUnselected","xscroll","yscroll","getScrollWidth","applyTransform","transformPoints","setDimensions","setObject","setup","name","tooltip","iconClass"],"mappings":"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","file":"../../../../drawing/ui/dom/Pan.js","sourcesContent":["define([\"dojo\", \"../../util/oo\", \"../../plugins/_Plugin\", \"../../manager/_registry\"], \r\nfunction(dojo, oo, Plugin, registry){\r\ndojo.deprecated(\"dojox.drawing.ui.dom.Pan\", \"It may not even make it to the 1.4 release.\", 1.4);\r\n\r\nvar Pan = oo.declare(\r\n\t// NOTE:\r\n\t//\t\tdojox.drawing.ui.dom.Pan is DEPRECATED.\r\n\t//\t\tThis was a temporary DOM solution. Use the non-dom\r\n\t//\t\ttools for Toolbar and Plugins.\r\n\r\n\t// summary:\r\n\t//\t\tA plugin that allows for a scrolling canvas. An action\r\n\t//\t\ttool is added to the toolbar that allows for panning. Holding\r\n\t//\t\tthe space bar is a shortcut to that action. The canvas will\r\n\t//\t\tonly pan and scroll if there are objects out of the viewable\r\n\t//\t\tarea.\r\n\t// example:\r\n\t//\t\t|\t<div dojoType=\"dojox.drawing.Toolbar\" drawingId=\"drawingNode\" class=\"drawingToolbar vertical\">\r\n\t//\t\t|\t\t<div tool=\"dojox.drawing.tools.Line\" selected=\"true\">Line</div>\r\n\t//\t\t|\t\t<div plugin=\"dojox.drawing.ui.dom.Pan\" options=\"{}\">Pan</div>\r\n\t//\t\t|\t</div>\r\n\r\n\tPlugin,\r\n\tfunction(options){\r\n\t\t\r\n\t\tthis.domNode = options.node;\r\n\t\tvar _scrollTimeout;\r\n\t\tdojo.connect(this.domNode, \"click\", this, \"onSetPan\");\r\n\t\tdojo.connect(this.keys, \"onKeyUp\", this, \"onKeyUp\");\r\n\t\tdojo.connect(this.keys, \"onKeyDown\", this, \"onKeyDown\");\r\n\t\tdojo.connect(this.anchors, \"onAnchorUp\", this, \"checkBounds\");\r\n\t\tdojo.connect(this.stencils, \"register\", this, \"checkBounds\");\r\n\t\tdojo.connect(this.canvas, \"resize\", this, \"checkBounds\");\r\n\t\tdojo.connect(this.canvas, \"setZoom\", this, \"checkBounds\");\r\n\t\tdojo.connect(this.canvas, \"onScroll\", this, function(){\r\n\t\t\tif(this._blockScroll){\r\n\t\t\t\tthis._blockScroll = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t_scrollTimeout && clearTimeout(_scrollTimeout);\r\n\t\t\t_scrollTimeout = setTimeout(dojo.hitch(this, \"checkBounds\"), 200);\r\n\t\t});\r\n\t\tthis._mouseHandle = this.mouse.register(this);\r\n\t\t// This HAS to be called after setting initial objects or things get screwy.\r\n\t\t//this.checkBounds();\r\n\t},{\r\n\t\tselected:false,\r\n\t\ttype:\"dojox.drawing.ui.dom.Pan\",\r\n\t\t\r\n\t\tonKeyUp: function(evt){\r\n\t\t\tif(evt.keyCode == 32){\r\n\t\t\t\tthis.onSetPan(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tonKeyDown: function(evt){\r\n\t\t\tif(evt.keyCode == 32){\r\n\t\t\t\tthis.onSetPan(true);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tonSetPan: function(/*Boolean|Event*/ bool){\r\n\t\t\tif(bool === true || bool === false){\r\n\t\t\t\tthis.selected = !bool;\r\n\t\t\t}\r\n\t\t\tif(this.selected){\r\n\t\t\t\tthis.selected = false;\r\n\t\t\t\tdojo.removeClass(this.domNode, \"selected\");\r\n\t\t\t}else{\r\n\t\t\t\tthis.selected = true;\r\n\t\t\t\tdojo.addClass(this.domNode, \"selected\");\r\n\t\t\t}\r\n\t\t\tthis.mouse.setEventMode(this.selected ? \"pan\" : \"\");\r\n\t\t},\r\n\t\t\r\n\t\tonPanDrag: function(obj){\r\n\t\t\tvar x = obj.x - obj.last.x;\r\n\t\t\tvar y = obj.y - obj.last.y;\r\n\t\t\tthis.canvas.domNode.parentNode.scrollTop -= obj.move.y;\r\n\t\t\tthis.canvas.domNode.parentNode.scrollLeft -= obj.move.x;\r\n\t\t\tthis.canvas.onScroll();\r\n\t\t},\r\n\t\t\r\n\t\tonStencilUp: function(obj){\r\n\t\t\t// this gets called even on click-off because of the\r\n\t\t\t// issues with TextBlock deselection\r\n\t\t\tthis.checkBounds();\r\n\t\t},\r\n\t\tonStencilDrag: function(obj){\r\n\t\t\t// this gets called even on click-off because of the\r\n\t\t\t// issues with TextBlock deselection\r\n\t\t\t//this.checkBounds();\r\n\t\t},\r\n\t\t\r\n\t\tcheckBounds: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tScans all items on the canvas and checks if they are out of\r\n\t\t\t//\t\tbounds. If so, a scroll bar (in Canvas) is shown. If the position\r\n\t\t\t//\t\tis left or top, the canvas is scrolled all items are relocated\r\n\t\t\t//\t\tthe distance of the scroll. Ideally, it should look as if the\r\n\t\t\t//\t\titems do not move.\r\n\r\n\t\t\t//watch(\"CHECK BOUNDS DISABLED\", true); return;\r\n\r\n\r\n\t\t\t// logging stuff here so it can be turned on and off. This method is\r\n\t\t\t// very high maintenance.\r\n\t\t\tvar log = function(){\r\n\t\t\t\t///console.log.apply(console, arguments);\r\n\t\t\t};\r\n\t\t\tvar warn = function(){\r\n\t\t\t\t//console.warn.apply(console, arguments);\r\n\t\t\t};\r\n\t\t\t//console.clear();\r\n\t\t\t//console.time(\"check bounds\");\r\n\t\t\tvar t=Infinity, r=-Infinity, b=-Infinity, l=Infinity,\r\n\t\t\t\tsx=0, sy=0, dy=0, dx=0,\r\n\t\t\t\tmx = this.stencils.group ? this.stencils.group.getTransform() : {dx:0, dy:0},\r\n\t\t\t\tsc = this.mouse.scrollOffset(),\r\n\t\t\t\t// scY, scX: the scrollbar creates the need for extra dimension\r\n\t\t\t\tscY = sc.left ? 10 : 0,\r\n\t\t\t\tscX = sc.top ? 10 : 0,\r\n\t\t\t\t// ch, cw: the current size of the canvas\r\n\t\t\t\tch = this.canvas.height,\r\n\t\t\t\tcw = this.canvas.width,\r\n\t\t\t\tz = this.canvas.zoom,\r\n\t\t\t\t// pch, pcw: the normal size of the canvas (not scrolled)\r\n\t\t\t\t// these could change if the container resizes.\r\n\t\t\t\tpch = this.canvas.parentHeight,\r\n\t\t\t\tpcw = this.canvas.parentWidth;\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tthis.stencils.withSelected(function(m){\r\n\t\t\t\tvar o = m.getBounds();\r\n\t\t\t\twarn(\"SEL BOUNDS:\", o);\r\n\t\t\t\tt = Math.min(o.y1 + mx.dy, t);\r\n\t\t\t\tr = Math.max(o.x2 + mx.dx, r);\r\n\t\t\t\tb = Math.max(o.y2 + mx.dy, b);\r\n\t\t\t\tl = Math.min(o.x1 + mx.dx, l);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.stencils.withUnselected(function(m){\r\n\t\t\t\tvar o = m.getBounds();\r\n\t\t\t\twarn(\"UN BOUNDS:\", o);\r\n\t\t\t\tt = Math.min(o.y1, t);\r\n\t\t\t\tr = Math.max(o.x2, r);\r\n\t\t\t\tb = Math.max(o.y2, b);\r\n\t\t\t\tl = Math.min(o.x1, l);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tb *= z;\r\n\t\t\tvar xscroll = 0, yscroll = 0;\r\n\t\t\tlog(\"Bottom test\", \"b:\", b, \"z:\", z, \"ch:\", ch, \"pch:\", pch, \"top:\", sc.top, \"sy:\", sy);\r\n\t\t\tif(b > pch || sc.top ){\r\n\t\t\t\tlog(\"*bottom scroll*\");\r\n\t\t\t\t// item off bottom\r\n\t\t\t\tch = Math.max(b, pch + sc.top);\r\n\t\t\t\tsy = sc.top;\r\n\t\t\t\txscroll += this.canvas.getScrollWidth();\r\n\t\t\t}else if(!sy && ch>pch){\r\n\t\t\t\tlog(\"*bottom remove*\");\r\n\t\t\t\t// item moved from bottom\r\n\t\t\t\tch = pch;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tr *= z;\r\n\t\t\tif(r > pcw || sc.left){\r\n\t\t\t\t//log(\"*right scroll*\");\r\n\t\t\t\t// item off right\r\n\t\t\t\tcw = Math.max(r, pcw + sc.left);\r\n\t\t\t\tsx = sc.left;\r\n\t\t\t\tyscroll += this.canvas.getScrollWidth();\r\n\t\t\t}else if(!sx && cw>pcw){\r\n\t\t\t\t//log(\"*right remove*\");\r\n\t\t\t\t// item moved from right\r\n\t\t\t\tcw = pcw;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// add extra space for scrollbars\r\n\t\t\t// double it to give some breathing room\r\n\t\t\tcw += xscroll*2;\r\n\t\t\tch += yscroll*2;\r\n\t\t\t\r\n\t\t\tthis._blockScroll = true;\r\n\t\t\t\r\n\t\t\t// selected items are not transformed. The selection itself is\r\n\t\t\t// and the items are on de-select\r\n\t\t\tthis.stencils.group && this.stencils.group.applyTransform({dx:dx, dy:dy});\r\n\t\t\t\r\n\t\t\t// non-selected items are transformed\r\n\t\t\tthis.stencils.withUnselected(function(m){\r\n\t\t\t\tm.transformPoints({dx:dx, dy:dy});\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.canvas.setDimensions(cw, ch, sx, sy);\r\n\t\t\t\r\n\t\t\t//console.timeEnd(\"check bounds\");\r\n\t\t}\r\n\t}\r\n);\r\n\r\ndojo.setObject(\"dojox.drawing.ui.dom.Pan\", Pan);\r\nPan.setup = {\r\n\tname:\"dojox.drawing.ui.dom.Pan\",\r\n\ttooltip:\"Pan Tool\",\r\n\ticonClass:\"iconPan\"\r\n};\r\n\r\nregistry.register(Pan.setup, \"plugin\");\r\n\r\nreturn Pan;\r\n});\r\n"]}