{"version":3,"sources":["drawing/ui/dom/Toolbar.js"],"names":["define","dojo","commonUtil","deprecated","declare","baseClass","buttonClass","iconClass","constructor","props","node","addOnLoad","this","domNode","byId","addClass","parse","createIcon","constr","setup","icon","tip","tooltip","iNode","create","title","connect","evt","stopEvent","removeClass","createTool","innerHTML","type","attr","toolNodes","getObject","drawing","registerTool","onClick","drawingId","_sel","console","error","forEach","childNodes","i","nodeType","className","tool","action","plugin","p","name","options","opt","eval","addPlugin","initPlugins","setTool","onSetTool","n","blur"],"mappings":"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","file":"../../../../drawing/ui/dom/Toolbar.js","sourcesContent":["define([\"dojo\", \"../../util/common\"], function(dojo, commonUtil){\r\ndojo.deprecated(\"dojox.drawing.ui.dom.Toolbar\", \"It may not even make it to the 1.4 release.\", 1.4);\r\n\r\nreturn dojo.declare(\"dojox.drawing.ui.dom.Toolbar\", [], {\r\n\t\t// NOTE:\r\n\t\t//\t\tdojox.drawing.Toolbar is DEPRECATED.\r\n\t\t//\t\tThe intention never was to use HTML as buttons for a Drawing.\r\n\t\t//\t\tThis was implemented in order to finish the project for which\r\n\t\t//\t\tDrawing was developed.\r\n\t\t//\t\tInstead use: drawing/ui/Toolbar.js\r\n\r\n\t\t// summary:\r\n\t\t//\t\tCreates a Toolbar to be used with a DojoX Drawing.\r\n\t\t// description:\r\n\t\t//\t\tCurrently works in markup only. A class is required with\r\n\t\t//\t\teither horizontal or vertical as a class (IE prevented using\r\n\t\t//\t\teither as a default). Assign an attribute of 'drawingId' with\r\n\t\t//\t\tthe id of the DojoX Drawing to which this is assigned.\r\n\t\t//\t\tThe node children will be assigned as the Tools in the toolbar.\r\n\t\t//\t\tPlugins can also be assigned.\r\n\t\t//\t\tThe Toolbar is largely self contained and has no real public\r\n\t\t//\t\tmethods or events. the Drawing object should be used.\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\t<div dojoType=\"dojox.drawing.Toolbar\" drawingId=\"drawing\" class=\"drawingToolbar vertical\">\r\n\t\t//\t|\t\t<div tool=\"dojox.drawing.tools.Line\" \t\t\t\tselected=\"false\">\tLine</div>\r\n\t\t//\t|\t\t<div tool=\"dojox.drawing.tools.Rect\" \t\t\t\tselected=\"true\">\tRect</div>\r\n\t\t//\t|\t\t<div plugin=\"dojox.drawing.plugins.tools.Zoom\" options=\"{zoomInc:.1,minZoom:.5,maxZoom:2}\">Zoom</div>\r\n\t\t//\t|\t</div>\r\n\r\n\t\t// TODO: Toolbar works in markup only. Need programmatic.\r\n\t\t// NOTE: There are plans to make the toolbar out of dojox.gfx vectors.\r\n\t\t//\t\t This may change the APIs in the future.\r\n\r\n\t\t// baseClass:String\r\n\t\t//\t\tThe CSS style to apply to the toolbar node\r\n\t\tbaseClass:\"drawingToolbar\",\r\n\r\n\t\t// buttonClass:String\r\n\t\t//\t\tThe CSS style to apply to each button node\r\n\t\tbuttonClass:\"drawingButton\",\r\n\r\n\t\t// iconClass:String\r\n\t\t//\t\tThe CSS style to apply to each button icon node\r\n\t\ticonClass:\"icon\",\r\n\r\n\t\tconstructor: function(props, node){\r\n\t\t\t// props is null from markup\r\n\t\t\tdojo.addOnLoad(this, function(){\r\n\t\t\t\tthis.domNode = dojo.byId(node);\r\n\t\t\t\tdojo.addClass(this.domNode, this.baseClass);\r\n\t\t\t\tthis.parse();\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\tcreateIcon: function(/*HTMLNode*/node, /*Function?*/constr){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal. Creates an icon node for each button.\r\n\t\t\t// node:\r\n\t\t\t//\t\tThe button node.\r\n\t\t\t// constr:\r\n\t\t\t//\t\tOptional. If not supplied, an icon is not created.\r\n\t\t\t//\t\tInformation for each icon is derived from\r\n\t\t\t//\t\tthe ToolsSetup object defined at the end\r\n\t\t\t//\t\tof each tool. See: stencil._Base\r\n\r\n\t\t\tvar setup = constr && constr.setup ? constr.setup : {};\r\n\t\t\tif(setup.iconClass){\r\n\t\t\t\tvar icon = setup.iconClass ? setup.iconClass : \"iconNone\";\r\n\t\t\t\tvar tip = setup.tooltip ? setup.tooltip : \"Tool\";\r\n\t\t\t\t\r\n\t\t\t\tvar iNode = dojo.create(\"div\", {title:tip}, node);\r\n\t\t\t\tdojo.addClass(iNode, this.iconClass);\r\n\t\t\t\tdojo.addClass(iNode, icon);\r\n\t\t\t\r\n\t\t\t\tdojo.connect(node, \"mouseup\", function(evt){\r\n\t\t\t\t\tdojo.stopEvent(evt);\r\n\t\t\t\t\tdojo.removeClass(node, \"active\");\r\n\t\t\t\t});\r\n\t\t\t\tdojo.connect(node, \"mouseover\", function(evt){\r\n\t\t\t\t\tdojo.stopEvent(evt);\r\n\t\t\t\t\tdojo.addClass(node, \"hover\");\r\n\t\t\t\t});\r\n\t\t\t\tdojo.connect(node, \"mousedown\", this, function(evt){\r\n\t\t\t\t\tdojo.stopEvent(evt);\r\n\t\t\t\t\tdojo.addClass(node, \"active\");\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tdojo.connect(node, \"mouseout\", this, function(evt){\r\n\t\t\t\t\tdojo.stopEvent(evt);\r\n\t\t\t\t\tdojo.removeClass(node, \"hover\");\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tcreateTool: function(/*HTMLNode*/node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates a button on the Toolbar that is\r\n\t\t\t//\t\ta Tool, not a Plugin. Tools draw Stencils,\r\n\t\t\t//\t\tPlugins do actions.\r\n\t\t\t// node: HTMLNode\r\n\t\t\t//\t\tThe button node.\r\n\r\n\t\t\tnode.innerHTML = \"\";\r\n\t\t\tvar type = dojo.attr(node, \"tool\");\r\n\t\t\tthis.toolNodes[type] = node;\r\n\t\t\tdojo.attr(node, \"tabIndex\", 1);\r\n\t\t\tvar constr = dojo.getObject(type);\r\n\t\t\t\r\n\t\t\tthis.createIcon(node, constr);\r\n\t\t\t\r\n\t\t\tthis.drawing.registerTool(type, constr);\r\n\t\t\tdojo.connect(node, \"mouseup\", this, function(evt){\r\n\t\t\t\tdojo.stopEvent(evt);\r\n\t\t\t\tdojo.removeClass(node, \"active\");\r\n\t\t\t\tthis.onClick(type);\r\n\t\t\t});\r\n\t\t\tdojo.connect(node, \"mouseover\", function(evt){\r\n\t\t\t\tdojo.stopEvent(evt);\r\n\t\t\t\tdojo.addClass(node, \"hover\");\r\n\t\t\t});\r\n\t\t\tdojo.connect(node, \"mousedown\", this, function(evt){\r\n\t\t\t\tdojo.stopEvent(evt);\r\n\t\t\t\tdojo.addClass(node, \"active\");\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tdojo.connect(node, \"mouseout\", this, function(evt){\r\n\t\t\t\tdojo.stopEvent(evt);\r\n\t\t\t\tdojo.removeClass(node, \"hover\");\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\tparse: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInitializing method that reads the dom node and its\r\n\t\t\t//\t\tchildren for tools and plugins.\r\n\r\n\t\t\tvar drawingId = dojo.attr(this.domNode, \"drawingId\");\r\n\t\t\tthis.drawing = commonUtil.byId(drawingId);\r\n\t\t\t!this.drawing && console.error(\"Drawing not found based on 'drawingId' in Toolbar. \");\r\n\t\t\tthis.toolNodes = {};\r\n\t\t\tvar _sel;\r\n\t\t\tdojo.forEach(this.domNode.childNodes, function(node, i){\r\n\t\t\t\tif(node.nodeType!==1){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tnode.className = this.buttonClass;\r\n\t\t\t\tvar tool = dojo.attr(node, \"tool\");\r\n\t\t\t\tvar action = dojo.attr(node, \"action\");\r\n\t\t\t\tvar plugin = dojo.attr(node, \"plugin\");\r\n\t\t\t\tif(tool){\r\n\t\t\t\t\tif(i==0 || dojo.attr(node, \"selected\")==\"true\"){\r\n\t\t\t\t\t\t_sel = tool;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.createTool(node);\r\n\t\t\t\t\t\r\n\t\t\t\t}else if(plugin){\r\n\t\t\t\t\tvar p = {name:plugin, options:{}},\r\n\t\t\t\t\t\topt = dojo.attr(node, \"options\");\r\n\t\t\t\t\tif(opt){\r\n\t\t\t\t\t\tp.options = eval(\"(\"+opt+\")\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tp.options.node = node;\r\n\t\t\t\t\tnode.innerHTML = \"\";\r\n\t\t\t\t\tthis.drawing.addPlugin(p);\r\n\t\t\t\t\tthis.createIcon(node, dojo.getObject(dojo.attr(node, \"plugin\")));\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}, this);\r\n\t\t\tthis.drawing.initPlugins();\r\n\t\t\tdojo.connect(this.drawing, \"setTool\", this, \"onSetTool\");\r\n\t\t\tthis.drawing.setTool(_sel);\r\n\t\t},\r\n\t\tonClick: function(/*String*/type){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEvent fired from clicking a Tool, not a PLugin.\r\n\t\t\t//\t\tPlugin clicks are handled within the plugin's class.\r\n\t\t\t// type:\r\n\t\t\t//\t\tFully qualified name of class. ex: dojox.drawing.tools.Ellipse\r\n\r\n\t\t\tthis.drawing.setTool(type);\r\n\t\t},\r\n\t\tonSetTool: function(/*String*/type){\r\n\t\t\t// summary:\r\n\t\t\t//\t\thandles buttons clicks and selects or deselects\r\n\t\t\tfor(var n in this.toolNodes){\r\n\t\t\t\tif(n == type){\r\n\t\t\t\t\tdojo.addClass(this.toolNodes[type], \"selected\");\r\n\t\t\t\t\tthis.toolNodes[type].blur();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdojo.removeClass(this.toolNodes[n], \"selected\");\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\t\r\n});\r\n"]}