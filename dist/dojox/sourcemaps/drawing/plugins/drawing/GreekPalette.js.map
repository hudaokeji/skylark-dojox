{"version":3,"sources":["drawing/plugins/drawing/GreekPalette.js"],"names":["define","dojo","popup","greek","focus","Widget","TemplatedMixin","PaletteMixin","latinEntities","Greeks","declare","constructor","alias","this","_alias","getValue","fillCell","cell","innerHTML","postMixInProperties","entityKey","choices","numChoices","numRows","Math","floor","sqrt","currChoiceIdx","rows","row","push","length","_palette","show","obj","mixin","open","onChange","val","textBlock","_textBlock","hide","insertText","_pushChangeTo","_dropMode","onCancel","closeAll","templateString","baseClass","showPreview","dyeClass","paletteClass","cellClass","buildRendering","inherited","arguments","i18n","_preparePalette","cells","query","gridNode","forEach","cellNode","connect","_onCellMouseEnter","e","_displayDetails","target","_onCellClick","evt","type","currentTarget","_currentFocus","value","_getDye","_setCurrent","setTimeout","hitch","_setValueAttr","removeClass","stopEvent","postCreate","style","previewNode","moveOffScreen","node","attr","tabIndex","addClass","dye","ehtml","descNode","titles","_cells","url","_blankGif","dyeClassObj","getObject","rowNode","create","col","cellObject","class","title","_trackMouseState","place","idx","_xDim","_yDim","_navigateByArrow","increment","38","40","39","isLeftToRight","37","keyCode","newFocusIndex","focusNode"],"mappings":"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","file":"../../../../drawing/plugins/drawing/GreekPalette.js","sourcesContent":["define([\"dojo\",\"dijit/popup\",\"../../library/greek\",\"dijit/focus\",\"dijit/_Widget\",\"dijit/_TemplatedMixin\",\r\n\"dijit/_PaletteMixin\",\"dojo/i18n!dojox/editor/plugins/nls/latinEntities\"],\r\nfunction(dojo, popup, greek, focus, Widget, TemplatedMixin, PaletteMixin, latinEntities){\r\n\r\n//dojo.requireLocalization(\"dojox.editor.plugins\", \"latinEntities\");\r\n\r\nvar Greeks = dojo.declare(null,\r\n{\r\n\t// summary:\r\n\t//\t\tRepresents a character.\r\n\t//\t\tInitialized using an alias for the character (like cent) rather\r\n\t//\t\tthan with the character itself.\r\n\r\n\tconstructor: function(/*String*/ alias){\r\n\t\t// summary:\r\n\t\t//\t Construct JS object representing an entity (associated w/a cell\r\n\t\t//\t\tin the palette)\r\n\t\t// value: String\r\n\t\t//\t\talias name: 'cent', 'pound' ..\r\n\t\tthis._alias = alias;\r\n\t},\r\n\r\n\tgetValue: function(){\r\n\t\t// summary:\r\n\t\t//\t\tReturns HTML representing the character, like &amp;\r\n\r\n\t\treturn this._alias;\r\n\t},\r\n\r\n\tfillCell: function(/*DOMNode*/ cell){\r\n\t\t// Deal with entities that have keys which are reserved words.\r\n\t\tcell.innerHTML = \"&\"+this._alias+\";\";\r\n\t}\r\n});\r\n\r\nreturn dojo.declare(\"dojox.drawing.plugins.drawing.GreekPalette\",\r\n  [Widget, TemplatedMixin, PaletteMixin],\r\n\t{\r\n\t// summary:\r\n\t//\t\tThis plugin uses the palette dijit in order to give tips for\r\n\t//\t\tnon-english (mostly greek for now) letters.\r\n\t//\r\n\t//\t\tIMPORTANT!  Because it is a full blown dijit it is NOT loaded\r\n\t//\t\tlike the other plugins.  INSTEAD currently it is instantiated\r\n\t//\t\tin markup.  TextBlock LOOKS FOR IT by ID - \"greekPalette\"\r\n\t//\t\tand if it finds it does the necessary initialization/connections.\r\n\t// description:\r\n\t//\t\tGrid showing all available entity options which the\r\n\t//\t\tuser can pick from.  The library loaded for use by the picker\r\n\t//\t\tis found in dojox.drawing.library.greek.  Adding characters\r\n\t//\t\tthere will automatically add them to the palette.\r\n\t//\r\n\t//\t\tThis works as a popup and as such its onChange and onCancel\r\n\t//\t\tclose it.  TextBlock manages it, since it's what uses the assist\r\n\t//\t\tso it calls show (all actual popup management happens here).\r\n\t//\t\tIn order to activate the plugin require it and then include the\r\n\t//\t\tmarkup in the example:\r\n\t// example:\r\n\t// |\t<!--Because this is a widget it is included in markup and NOT like the other plugins-->\r\n\t// |\t<div dojoType=\"dojox.drawing.plugins.drawing.GreekPalette\" id=\"greekPalette\"></div>\r\n\t\r\n\tpostMixInProperties: function(){\r\n\t\t// Convert hash of entities into two-dimensional rows/columns table (array of arrays)\r\n\t\tvar choices = greek;//dojox.drawing.library.greek;\r\n\t\tvar numChoices = 0;\r\n\t\tvar entityKey;\r\n\t\tfor(entityKey in choices){numChoices++;}\r\n\t\tvar choicesPerRow = Math.floor(Math.sqrt(numChoices));\r\n\t\tvar numRows = choicesPerRow;\r\n\t\tvar currChoiceIdx = 0;\r\n\t\tvar rows = [];\r\n\t\tvar row = [];\r\n\t\tfor(entityKey in choices){\r\n\t\t\tcurrChoiceIdx++;\r\n\t\t\trow.push(entityKey);\r\n\t\t\tif(currChoiceIdx % numRows === 0){\r\n\t\t\t\trows.push(row);\r\n\t\t\t\trow = [];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(row.length > 0){\r\n\t\t\trows.push(row);\r\n\t\t}\r\n\t\tthis._palette = rows;\r\n\t},\r\n\t\r\n\tshow: function(obj){\r\n\t\tdojo.mixin(obj, {popup: this});\r\n\t\tpopup.open(obj);\r\n\t},\r\n\t\r\n\tonChange: function(val){\r\n\t\tvar textBlock = this._textBlock;\r\n\t\tpopup.hide(this);\r\n\t\ttextBlock.insertText(this._pushChangeTo,val);\r\n\t\ttextBlock._dropMode = false;\r\n\t},\r\n\t\r\n\tonCancel: function(/*Boolean*/ closeAll){\r\n\t\t// summary:\r\n\t\t//\t\tattach point for notification about when the user cancels the current menu\r\n\t\tpopup.hide(this);\r\n\t\tthis._textBlock._dropMode = false;\r\n\t},\r\n\r\n\t// templateString: String\r\n\t//\t\tThe template of this widget.  Using dojoxEntityPalette classes\r\n\t//\t\tin order to allow easy transfer of css\r\n\ttemplateString: '<div class=\"dojoxEntityPalette\">\\n' +\r\n\t\t\t'\t<table>\\n' +\r\n\t\t\t'\t\t<tbody>\\n' +\r\n\t\t\t'\t\t\t<tr>\\n' +\r\n\t\t\t'\t\t\t\t<td>\\n' +\r\n\t\t\t'\t\t\t\t\t<table class=\"dijitPaletteTable\">\\n' +\r\n\t\t\t'\t\t\t\t\t\t<tbody dojoAttachPoint=\"gridNode\"></tbody>\\n' +\r\n\t\t\t'\t\t\t\t   </table>\\n' +\r\n\t\t\t'\t\t\t\t</td>\\n' +\r\n\t\t\t'\t\t\t</tr>\\n' +\r\n\t\t\t'\t\t\t<tr>\\n' +\r\n\t\t\t'\t\t\t\t<td>\\n'+\r\n\t\t\t'\t\t\t\t\t<table dojoAttachPoint=\"previewPane\" class=\"dojoxEntityPalettePreviewTable\">\\n' +\r\n\t\t\t'\t\t\t\t\t\t<tbody>\\n' +\r\n\t\t\t'\t\t\t\t\t\t\t<tr>\\n' +\r\n\t\t\t'\t\t\t\t\t\t\t\t<td class=\"dojoxEntityPalettePreviewDetailEntity\">Type: <span class=\"dojoxEntityPalettePreviewDetail\" dojoAttachPoint=\"previewNode\"></span></td>\\n' +\r\n\t\t\t'\t\t\t\t\t\t\t</tr>\\n' +\r\n\t\t\t'\t\t\t\t\t\t</tbody>\\n' +\r\n\t\t\t'\t\t\t\t\t</table>\\n' +\r\n\t\t\t'\t\t\t\t</td>\\n' +\r\n\t\t\t'\t\t\t</tr>\\n' +\r\n\t\t\t'\t\t</tbody>\\n' +\r\n\t\t\t'\t</table>\\n' +\r\n\t\t\t'</div>',\r\n\r\n\r\n\tbaseClass: \"dojoxEntityPalette\",\r\n        \r\n        // showPreview: [public] Boolean\r\n\t//\t  Whether the preview pane will be displayed, to show details about the selected entity.\r\n\tshowPreview: true,\r\n\r\n\tdyeClass: Greeks, //'dojox.drawing.plugins.Greeks',\r\n\r\n\t// domNodeClass [protected] String\r\n\tpaletteClass: 'editorLatinEntityPalette',\r\n\r\n\tcellClass: \"dojoxEntityPaletteCell\",\r\n\r\n\tbuildRendering: function(){\r\n\t\tthis.inherited(arguments);\r\n\r\n\t\tvar i18n = latinEntities;//dojo.i18n.getLocalization(\"dojox.editor.plugins\", \"latinEntities\");\r\n\r\n\t\tthis._preparePalette(\r\n\t\t\tthis._palette,\r\n\t\t\ti18n\r\n\t\t);\r\n\t\t\r\n\t\tvar cells = dojo.query(\".dojoxEntityPaletteCell\", this.gridNode);\r\n\t\tdojo.forEach(cells, function(cellNode){\r\n\t\t\tthis.connect(cellNode, \"onmouseenter\", \"_onCellMouseEnter\");\r\n\t\t}, this);\r\n\t},\r\n\t\r\n        _onCellMouseEnter: function(e){\r\n\t\t// summary:\r\n\t\t//\t\tSimple function to handle updating the display at the bottom of\r\n\t\t//\t\tthe palette.\r\n\t\t// e:\r\n\t\t//\t\tThe event.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tif(this.showPreview){\r\n\t\t\tthis._displayDetails(e.target);\r\n\t\t}\r\n\t},\r\n\t\r\n\t_onCellClick: function(/*Event*/ evt){\r\n\t\t// summary:\r\n\t\t//\t\tHandler for click, enter key & space key. Selects the cell.\r\n\t\t// evt:\r\n\t\t//\t\tThe event.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar target = evt.type == \"click\" ? evt.currentTarget : this._currentFocus,\r\n\t\t\tvalue = this._getDye(target).getValue();\r\n\r\n\t\t// First focus the clicked cell, and then send onChange() notification.\r\n\t\t// onChange() (via _setValueAttr) must be after the focus call, because\r\n\t\t// it may trigger a refocus to somewhere else (like the Editor content area), and that\r\n\t\t// second focus should win.\r\n\t\t// Use setTimeout because IE doesn't like changing focus inside of an event handler.\r\n\t\tthis._setCurrent(target);\r\n\t\tsetTimeout(dojo.hitch(this, function(){\r\n\t\t\tfocus(target);\r\n\t\t\tthis._setValueAttr(value, true);\r\n\t\t}));\r\n\r\n\t\t// workaround bug where hover class is not removed on popup because the popup is\r\n\t\t// closed and then there's no onblur event on the cell\r\n\t\tdojo.removeClass(target, \"dijitPaletteCellHover\");\r\n\r\n\t\tdojo.stopEvent(evt);\r\n\t},\r\n\r\n\tpostCreate: function(){\r\n\t\tthis.inherited(arguments);\r\n\r\n\t\tif(!this.showPreview){\r\n\t\t\tdojo.style(this.previewNode,\"display\",\"none\");\r\n\t\t}\r\n\t\tpopup.moveOffScreen(this);\r\n\t},\r\n\r\n\t_setCurrent: function(/*DOMNode*/ node){\r\n\t\t// summary:\r\n\t\t//\t\tSets which node is the focused cell.\r\n\t\t// description:\r\n   \t\t//\t\tAt any point in time there's exactly one\r\n\t\t//\t\tcell with tabIndex != -1.   If focus is inside the palette then\r\n\t\t//\t\tfocus is on that cell.\r\n\t\t//\r\n\t\t//\t\tAfter calling this method, arrow key handlers and mouse click handlers\r\n\t\t//\t\tshould focus the cell in a setTimeout().\r\n\t\t// tags:\r\n\t\t//\t\tprotected\r\n\t\tif(\"_currentFocus\" in this){\r\n\t\t\t// Remove tabIndex on old cell\r\n\t\t\tdojo.attr(this._currentFocus, \"tabIndex\", \"-1\");\r\n\t\t\tdojo.removeClass(this._currentFocus,\"dojoxEntityPaletteCellHover\");\r\n\t\t}\r\n\r\n\t\t// Set tabIndex of new cell\r\n\t\tthis._currentFocus = node;\r\n\t\tif(node){\r\n\t\t\tdojo.attr(node, \"tabIndex\", this.tabIndex);\r\n\t\t\tdojo.addClass(this._currentFocus,\"dojoxEntityPaletteCellHover\");\r\n\t\t}\r\n\t\tif(this.showPreview){\r\n\t\t\tthis._displayDetails(node);\r\n\t\t}\r\n\t},\r\n\r\n\t_displayDetails: function(/*DOMNode*/ cell){\r\n\t\t// summary:\r\n\t\t//\t  Display the details of the currently focused entity in the preview pane\r\n\t\tvar dye = this._getDye(cell);\r\n\t\tif(dye){\r\n\t\t\tvar ehtml = dye.getValue();\r\n\t\t\tvar ename = dye._alias;\r\n                        //console.warn(\"Greek help: \",dye._alias);\r\n\t\t\tthis.previewNode.innerHTML=ehtml;\r\n\t\t}else{\r\n\t\t\tthis.previewNode.innerHTML=\"\";\r\n\t\t\tthis.descNode.innerHTML=\"\";\r\n\t\t}\r\n\t},\r\n\t\r\n\t_preparePalette: function(choices, titles) {\r\n\t\t// summary:\r\n\t\t//\t\tSubclass must call _preparePalette() from postCreate(), passing in the tooltip\r\n\t\t//\t\tfor each cell\r\n\t\t// choices: String[][]\r\n\t\t//\t\tid's for each cell of the palette, used to create Dye JS object for each cell\r\n\t\t// titles: String[]\r\n\t\t//\t\tLocalized tooltip for each cell\r\n\r\n\t\tthis._cells = [];\r\n\t\tvar url = this._blankGif;\r\n\t\t\r\n\t\tvar dyeClassObj = typeof this.dyeClass === 'string' ? dojo.getObject(this.dyeClass) : this.dyeClass;\r\n\r\n\t\tfor(var row=0; row < choices.length; row++){\r\n\t\t\tvar rowNode = dojo.create(\"tr\", {tabIndex: \"-1\"}, this.gridNode);\r\n\t\t\tfor(var col=0; col < choices[row].length; col++){\r\n\t\t\t\tvar value = choices[row][col];\r\n\t\t\t\tif(value){\r\n\t\t\t\t\tvar cellObject = new dyeClassObj(value);\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar cellNode = dojo.create(\"td\", {\r\n\t\t\t\t\t\t\"class\": this.cellClass,\r\n\t\t\t\t\t\ttabIndex: \"-1\",\r\n\t\t\t\t\t\ttitle: titles[value]\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// prepare cell inner structure\r\n\t\t\t\t\tcellObject.fillCell(cellNode, url);\r\n\r\n\t\t\t\t\tthis.connect(cellNode, \"ondijitclick\", \"_onCellClick\");\r\n\t\t\t\t\tthis._trackMouseState(cellNode, this.cellClass);\r\n\r\n\t\t\t\t\tdojo.place(cellNode, rowNode);\r\n\r\n\t\t\t\t\tcellNode.idx = this._cells.length;\r\n\r\n\t\t\t\t\t// save cell info into _cells\r\n\t\t\t\t\tthis._cells.push({node:cellNode, dye:cellObject});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._xDim = choices[0].length;\r\n\t\tthis._yDim = choices.length;\r\n\t\t\r\n\t},\r\n\t\r\n\t_navigateByArrow: function(evt){\r\n\t\t// summary:\r\n\t\t// \t  \tThis is a departure from the dijit, the textBlock needs\r\n\t\t//\t\tnavigation without losing focus, this allows that\r\n\t\t// increment:\r\n\t\t//\t\tHow much the key is navigated.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar keyIncrementMap = {\r\n\t\t\t38: -this._xDim,\r\n\t\t\t// The down key the index is increase by the x dimension.\r\n\t\t\t40: this._xDim,\r\n\t\t\t// Right and left move the index by 1.\r\n\t\t\t39: this.isLeftToRight() ? 1 : -1,\r\n\t\t\t37: this.isLeftToRight() ? -1 : 1\r\n\t\t};\r\n\t\t\r\n\t\tvar increment = keyIncrementMap[evt.keyCode];\r\n\t\tvar newFocusIndex = this._currentFocus.idx + increment;\r\n\t\tif(newFocusIndex < this._cells.length && newFocusIndex > -1){\r\n\t\t\tvar focusNode = this._cells[newFocusIndex].node;\r\n\t\t\tthis._setCurrent(focusNode);\r\n\t\t}\r\n\t}\r\n});\r\n\r\n});\r\n"]}