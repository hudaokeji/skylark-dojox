{"version":3,"sources":["drawing/tools/Path.js"],"names":["define","lang","oo","registry","StencilPath","Path","declare","this","pathMode","currentPathMode","_started","oddEvenClicks","draws","onDown","obj","onStartPath","makeSubPath","_closePath","points","push","x","y","t","render","revertRenderHit","renderHit","closePath","mouse","setEventMode","closePoint","_kc1","connect","keys","onCompletePath","_kc2","evt","letter","remove","closeGuide","guide","box","getBounds","w","minimumSize","h","hit","shape","setPoints","renderedOnce","onRender","disconnect","onUp","withinCanvas","length","closeRadius","util","distance","p","createGuide","realPoints","concat","pt","dist","c","cx","cy","rx","ry","container","createEllipse","setFill","closeColor","onMove","onDrag","setObject","setup","name","tooltip","iconClass","register"],"mappings":"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","file":"../../../drawing/tools/Path.js","sourcesContent":["define([\"dojo/_base/lang\", \"../util/oo\", \"../manager/_registry\", \"../stencil/Path\"],\r\nfunction(lang, oo, registry, StencilPath){\r\n\r\n//dojox.drawing.tools.Path\r\nvar Path = oo.declare(\r\n\tStencilPath,\r\n\tfunction(){\r\n\t\t// summary:\r\n\t\t//\t\tconstructor\r\n\t\t\r\n\t\tthis.pathMode = \"\";\r\n\t\tthis.currentPathMode = \"\";\r\n\t\tthis._started = false;\r\n\t\tthis.oddEvenClicks = 0;\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t// summary:\r\n\t\t//\t\tClass for a drawable Path\r\n\r\n\t\tdraws:true,\r\n\t\tonDown: function(obj){\r\n\t\t\tif(!this._started){\r\n\t\t\t\tthis.onStartPath(obj);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t},\r\n\t\t\r\n\t\tmakeSubPath: function(_closePath){\r\n\t\t\tif(_closePath){\r\n\t\t\t\tif(this.currentPathMode==\"Q\"){\r\n\t\t\t\t\tthis.points.push({\r\n\t\t\t\t\t\tx:this.points[0].x,\r\n\t\t\t\t\t\ty:this.points[0].y\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tthis.points.push({t:\"Z\"});\r\n\t\t\t\tthis.render();\r\n\t\t\t}\r\n\t\t\tthis.currentPathMode = \"\";\r\n\t\t\tthis.pathMode = \"M\";\r\n\t\t},\r\n\t\t\r\n\t\tonStartPath: function(obj){\r\n\t\t\tthis._started = true;\r\n\t\t\tthis.revertRenderHit = this.renderHit;\r\n\t\t\tthis.renderHit = false;\r\n\t\t\tthis.closePath = false;\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tthis.mouse.setEventMode(\"PathEdit\");\r\n\t\t\t\r\n\t\t\tthis.closePoint = {x:obj.x, y:obj.y};\r\n\t\t\t\r\n\t\t\tthis._kc1 = this.connect(this.keys, \"onEsc\", this, function(){\r\n\t\t\t\tthis.onCompletePath(false);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis._kc2 = this.connect(this.keys, \"onKeyUp\", this, function(evt){\r\n\t\t\t\t\r\n\t\t\t\tswitch(evt.letter){\r\n\t\t\t\t\tcase \"c\":\r\n\t\t\t\t\t\tthis.onCompletePath(true); break;\r\n\t\t\t\t\tcase \"l\": this.pathMode = \"L\"; break;\r\n\t\t\t\t\tcase \"m\": this.makeSubPath(false); break;\r\n\t\t\t\t\tcase \"q\": this.pathMode = \"Q\"; break;\r\n\t\t\t\t\tcase \"s\": this.pathMode = \"S\"; break;\r\n\t\t\t\t\tcase \"z\": this.makeSubPath(true); break;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t//console.log(\"KEY:\", evt.letter);\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\tonCompletePath:function(_closePath){\r\n\t\t\tthis.remove(this.closeGuide, this.guide);\r\n\t\t\tvar box = this.getBounds();\r\n\t\t\tif(box.w<this.minimumSize && box.h<this.minimumSize){\r\n\t\t\t\tthis.remove(this.hit, this.shape, this.closeGuide);\r\n\t\t\t\tthis._started = false;\r\n\t\t\t\tthis.mouse.setEventMode(\"\");\r\n\t\t\t\tthis.setPoints([]);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif(_closePath){\r\n\t\t\t\tif(this.currentPathMode==\"Q\"){\r\n\t\t\t\t\tthis.points.push({\r\n\t\t\t\t\t\tx:this.points[0].x,\r\n\t\t\t\t\t\ty:this.points[0].y\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tthis.closePath = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tthis.renderHit = this.revertRenderHit;\r\n\t\t\tthis.renderedOnce = true;\r\n\t\t\tthis.onRender(this);\r\n\t\t\tthis.disconnect([this._kc1, this._kc2]);\r\n\t\t\tthis.mouse.setEventMode(\"\");\r\n\t\t\tthis.render();\r\n\t\t\t//console.log(this.stringPath);\r\n\t\t},\r\n\t\t\r\n\t\tonUp: function(/*EventObject*/obj){\r\n\t\t\t//console.log(\"   Path UP\", obj.mid, \"within:\", obj.withinCanvas)\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\tif(!this._started || !obj.withinCanvas){ return; }\r\n\t\t\t\r\n\t\t\r\n\t\t\tif(this.points.length>2 && this.closeRadius>this.util.distance(obj.x, obj.y, this.closePoint.x, this.closePoint.y)){\r\n\t\t\t\tthis.onCompletePath(true);\r\n\t\t\t\t\r\n\t\t\t}else {\r\n\t\t\t\tvar p = {\r\n\t\t\t\t\tx:obj.x,\r\n\t\t\t\t\ty:obj.y\r\n\t\t\t\t};\r\n\t\t\t\tthis.oddEvenClicks++;\r\n\t\t\t\tif(this.currentPathMode != this.pathMode){\r\n\t\t\t\t\tif(this.pathMode==\"Q\"){\r\n\t\t\t\t\t\tp.t = \"Q\";\r\n\t\t\t\t\t\tthis.oddEvenClicks = 0;\r\n\t\t\t\t\t}else if(this.pathMode==\"L\"){\r\n\t\t\t\t\t\tp.t = \"L\";\r\n\t\t\t\t\t}else if(this.pathMode==\"M\"){\r\n\t\t\t\t\t\tp.t = \"M\";\r\n\t\t\t\t\t\tthis.closePoint = {x:obj.x, y:obj.y};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.currentPathMode = this.pathMode;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tthis.points.push(p);\r\n\t\t\t\tif(this.points.length>1){\r\n\t\t\t\t\tthis.remove(this.guide);\r\n\t\t\t\t\tthis.render();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//console.log(this.stringPath);\r\n\t\t},\r\n\t\tcreateGuide: function(obj){\r\n\t\t\tif(!this.points.length){ return; }\r\n\t\t\tvar realPoints = [].concat(this.points);\r\n\t\t\t\r\n\t\t\tvar pt = {\r\n\t\t\t\tx:obj.x,\r\n\t\t\t\ty:obj.y\r\n\t\t\t};\r\n\t\t\tif(this.currentPathMode==\"Q\" && this.oddEvenClicks % 2){\r\n\t\t\t\t// On a Q curve, every other click needs to be a\r\n\t\t\t\t// straight line - the inbetween Q coords don't render\r\n\t\t\t\tpt.t = \"L\"; // this is not permanent\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.points.push(pt);\r\n\t\t\t\r\n\t\t\tthis.render();\r\n\t\t\tthis.points = realPoints;\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tvar dist = this.util.distance(obj.x, obj.y, this.closePoint.x, this.closePoint.y);\r\n\t\t\tif(this.points.length>1){\r\n\t\t\t\tif(dist<this.closeRadius && !this.closeGuide){\r\n\t\t\t\t\tvar c = {\r\n\t\t\t\t\t\tcx:this.closePoint.x,\r\n\t\t\t\t\t\tcy:this.closePoint.y,\r\n\t\t\t\t\t\trx:this.closeRadius,\r\n\t\t\t\t\t\try:this.closeRadius\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.closeGuide = this.container.createEllipse(c)\r\n\t\t\t\t\t\t.setFill(this.closeColor);\r\n\t\t\t\t\t\t\r\n\t\t\t\t}else if(dist>this.closeRadius && this.closeGuide){\r\n\t\t\t\t\tthis.remove(this.closeGuide);\r\n\t\t\t\t\tthis.closeGuide = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t},\r\n\t\t\r\n\t\tonMove: function(obj){\r\n\t\t\tif(!this._started){ return; }\r\n\t\t\tthis.createGuide(obj);\r\n\t\t},\r\n\t\tonDrag: function(obj){\r\n\t\t\tif(!this._started){ return; }\r\n\t\t\tthis.createGuide(obj);\r\n\t\t}\r\n\t}\r\n);\r\n\r\nlang.setObject(\"dojox.drawing.tools.Path\", Path);\r\nPath.setup = {\r\n\tname:\"dojox.drawing.tools.Path\",\r\n\ttooltip:\"Path Tool\",\r\n\ticonClass:\"iconLine\"\r\n};\r\n\r\nregistry.register(Path.setup, \"tool\");\r\n\r\nreturn Path;\r\n});\r\n"]}