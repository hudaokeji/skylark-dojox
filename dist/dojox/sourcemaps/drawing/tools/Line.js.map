{"version":3,"sources":["drawing/tools/Line.js"],"names":["define","lang","oo","registry","StencilLine","Line","declare","draws","showAngle","onTransformEnd","anchor","this","_toggleSelected","getRadius","minimumSize","p","points","setPoints","x","y","d","data","obj","start","x1","y1","x2","y2","pt","util","snapAngle","angleSnap","_isBeingModified","onModify","onDrag","created","keys","shift","alt","dx","dy","render","onUp","_downOnCanvas","shape","remove","hit","s","e","renderedOnce","onRender","setObject","setup","name","tooltip","iconClass","register"],"mappings":";;;;;;;AAAAA,QAAQ,kBAAmB,aAAc,uBAAwB,mBACjE,SAASC,EAAMC,EAAIC,EAAUC,GAG7B,IAAIC,EAAOH,EAAGI,QACbF,EACA,cAQCG,OAAM,EACNC,WAAU,EACVC,eAAgB,SAA2BC,GAE1C,GADAC,KAAKC,kBACFD,KAAKE,YAAYF,KAAKG,YAAY,CACpC,IAAIC,EAAIJ,KAAKK,OACbL,KAAKM,YACHC,EAAEH,EAAE,GAAGG,EAAGC,EAAEJ,EAAE,GAAGI,IACjBD,EAAEH,EAAE,GAAGG,EAAGC,EAAEJ,EAAE,GAAGI,SAEf,CACJ,IAAIC,EAAIT,KAAKU,KACTC,GAAOC,OAAOL,EAAEE,EAAEI,GAAGL,EAAEC,EAAEK,IAAIP,EAAEE,EAAEM,GAAGP,EAAEC,EAAEO,IACxCC,EAAKjB,KAAKkB,KAAKC,UAAUR,EAAKX,KAAKoB,UAAU,KACjDpB,KAAKM,YACHC,EAAEE,EAAEI,GAAIL,EAAEC,EAAEK,KACZP,EAAEU,EAAGV,EAAGC,EAAES,EAAGT,KAGfR,KAAKqB,kBAAmB,EACxBrB,KAAKsB,SAAStB,QAIhBuB,OAAQ,SAAwBZ,GAC/B,IAAGX,KAAKwB,QAAR,CACA,IAAIX,EAAKF,EAAIC,MAAML,EAClBO,EAAKH,EAAIC,MAAMJ,EACfO,EAAKJ,EAAIJ,EACTS,EAAKL,EAAIH,EAEV,GAAGR,KAAKyB,KAAKC,MAAM,CAClB,IAAIT,EAAKjB,KAAKkB,KAAKC,UAAUR,EAAK,KAClCI,EAAKE,EAAGV,EACRS,EAAKC,EAAGT,EAGT,GAAGR,KAAKyB,KAAKE,IAAI,CAMhB,IAAIC,EAAKb,EAAGF,GAAOE,EAAGF,GAAI,GAAOA,EAAGE,IAAK,EACrCc,EAAKb,EAAGF,GAAOE,EAAGF,GAAI,GAAOA,EAAGE,IAAK,EACzCH,GAAMe,EACNb,GAAMa,EACNd,GAAMe,EACNb,GAAMa,EAGP7B,KAAKM,YACHC,EAAEM,EAAIL,EAAEM,IACRP,EAAEQ,EAAIP,EAAEQ,KAEVhB,KAAK8B,WAGNC,KAAM,SAAwBpB,GAC7B,IAAGX,KAAKwB,SAAYxB,KAAKgC,cAAzB,CAGA,GAFAhC,KAAKgC,eAAgB,EAEjBhC,KAAKiC,OAWR,GAAGjC,KAAKE,YAAYF,KAAKG,YAExB,YADAH,KAAKkC,OAAOlC,KAAKiC,MAAOjC,KAAKmC,SAZhB,CACd,IAAIC,EAAIzB,EAAIC,MAAOyB,EAAqB,EAAjBrC,KAAKG,YAC5BH,KAAKM,YACHC,EAAE6B,EAAE7B,EAAGC,EAAE4B,EAAE5B,EAAE6B,IACb9B,EAAE6B,EAAE7B,EAAGC,EAAE4B,EAAE5B,KAEbR,KAAK8B,SAWN,IAAIb,EAAKjB,KAAKkB,KAAKC,UAAUR,EAAKX,KAAKoB,UAAU,KAC7ChB,EAAIJ,KAAKK,OACbL,KAAKM,YACHC,EAAEH,EAAE,GAAGG,EAAGC,EAAEJ,EAAE,GAAGI,IACjBD,EAAEU,EAAGV,EAAGC,EAAES,EAAGT,KAGfR,KAAKsC,cAAe,EACpBtC,KAAKuC,SAASvC,UAcjB,OATAV,EAAKkD,UAAU,2BAA4B9C,GAC3CA,EAAK+C,OACJC,KAAK,2BACLC,QAAQ,YACRC,UAAU,YAGXpD,EAASqD,SAASnD,EAAK+C,MAAO,QAEvB/C","file":"../../../drawing/tools/Line.js","sourcesContent":["define([\"dojo/_base/lang\", \"../util/oo\", \"../manager/_registry\", \"../stencil/Line\"],\r\nfunction(lang, oo, registry, StencilLine){\r\n\r\n//dojox.drawing.tools.Line \r\nvar Line = oo.declare(\r\n\tStencilLine,\r\n\tfunction(){\r\n\t\t// summary:\r\n\t\t//\t\tconstructor\r\n\t},\r\n\t{\r\n\t\t// summary:\r\n\t\t//\t\tClass for a drawable Line\r\n\r\n\t\tdraws:true,\r\n\t\tshowAngle:true,\r\n\t\tonTransformEnd: function(/*manager.Anchor*/anchor){\r\n\t\t\tthis._toggleSelected();\r\n\t\t\tif(this.getRadius()<this.minimumSize){\r\n\t\t\t\tvar p = this.points;\r\n\t\t\t\tthis.setPoints([\r\n\t\t\t\t\t{x:p[0].x, y:p[0].y},\r\n\t\t\t\t\t{x:p[0].x, y:p[0].y}\r\n\t\t\t\t]);\r\n\t\t\t}else{\r\n\t\t\t\tvar d = this.data;\r\n\t\t\t\tvar obj = {start:{x:d.x1,y:d.y1},x:d.x2,y:d.y2};\r\n\t\t\t\tvar pt = this.util.snapAngle(obj, this.angleSnap/180);\r\n\t\t\t\tthis.setPoints([\r\n\t\t\t\t\t{x:d.x1, y:d.y1},\r\n\t\t\t\t\t{x:pt.x, y:pt.y}\r\n\t\t\t\t]);\r\n\t\t\t\t\r\n\t\t\t\tthis._isBeingModified = false;\r\n\t\t\t\tthis.onModify(this);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tonDrag: function(/*EventObject*/obj){\r\n\t\t\tif(this.created){ return; }\r\n\t\t\tvar x1 = obj.start.x,\r\n\t\t\t\ty1 = obj.start.y,\r\n\t\t\t\tx2 = obj.x,\r\n\t\t\t\ty2 = obj.y;\r\n\t\t\t\r\n\t\t\tif(this.keys.shift){\r\n\t\t\t\tvar pt = this.util.snapAngle(obj, 45/180);\r\n\t\t\t\tx2 = pt.x;\r\n\t\t\t\ty2 = pt.y;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this.keys.alt){\r\n\t\t\t\t// FIXME:\r\n\t\t\t\t//\tshould double the length of the line\r\n\t\t\t\t// FIXME:\r\n\t\t\t\t//\tif alt dragging past ZERO it seems to work\r\n\t\t\t\t//\tbut select/deselect shows bugs\r\n\t\t\t\tvar dx = x2>x1 ? ((x2-x1)/2) : ((x1-x2)/-2);\r\n\t\t\t\tvar dy = y2>y1 ? ((y2-y1)/2) : ((y1-y2)/-2);\r\n\t\t\t\tx1 -= dx;\r\n\t\t\t\tx2 -= dx;\r\n\t\t\t\ty1 -= dy;\r\n\t\t\t\ty2 -= dy;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.setPoints([\r\n\t\t\t\t{x:x1, y:y1},\r\n\t\t\t\t{x:x2, y:y2}\r\n\t\t\t]);\r\n\t\t\tthis.render();\r\n\t\t},\r\n\t\t\r\n\t\tonUp: function(/*EventObject*/obj){\r\n\t\t\tif(this.created || !this._downOnCanvas){ return; }\r\n\t\t\tthis._downOnCanvas = false;\r\n\t\t\t//Default shape on single click\r\n\t\t\tif(!this.shape){\r\n\t\t\t\tvar s = obj.start, e = this.minimumSize*4;\r\n\t\t\t\tthis.setPoints([\r\n\t\t\t\t\t{x:s.x, y:s.y+e},\r\n\t\t\t\t\t{x:s.x, y:s.y}\r\n\t\t\t\t]);\r\n\t\t\t\tthis.render();\r\n\t\t\t\t\r\n\t\t\t}else{\r\n\t\t\t\t// if too small, need to reset\r\n\t\t\t\t\r\n\t\t\t\tif(this.getRadius()<this.minimumSize){\r\n\t\t\t\t\tthis.remove(this.shape, this.hit);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar pt = this.util.snapAngle(obj, this.angleSnap/180);\r\n\t\t\tvar p = this.points;\r\n\t\t\tthis.setPoints([\r\n\t\t\t\t{x:p[0].x, y:p[0].y},\r\n\t\t\t\t{x:pt.x, y:pt.y}\r\n\t\t\t]);\r\n\t\t\t\r\n\t\t\tthis.renderedOnce = true;\r\n\t\t\tthis.onRender(this);\r\n\t\t}\r\n\t}\r\n);\r\n\r\nlang.setObject(\"dojox.drawing.tools.Line\", Line);\r\nLine.setup = {\r\n\tname:\"dojox.drawing.tools.Line\",\r\n\ttooltip:\"Line Tool\",\r\n\ticonClass:\"iconLine\"\r\n};\r\n\r\nregistry.register(Line.setup, \"tool\");\r\n\r\nreturn Line;\r\n});\r\n"]}