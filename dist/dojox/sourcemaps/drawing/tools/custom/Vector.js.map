{"version":3,"sources":["drawing/tools/custom/Vector.js"],"names":["define","dojo","oo","registry","positioning","Arrow","Vector","declare","options","this","minimumSize","style","arrows","length","addShadow","size","mult","draws","type","showAngle","changeAxis","cosphi","undefined","zAxis","data","p","points","pt","zPoint","setPoints","x","y","render","_createZeroVector","shp","d","sty","s","f","fill","cx","x1","cy","y1","rx","ry","remove","container","createEllipse","setStroke","setFill","util","attr","_create","createLine","_setNodeAtts","onDrag","obj","created","start","x2","y2","keys","shift","snapAngle","alt","dx","dy","pts","onTransform","anchor","_isBeingModified","onTransformBegin","anchorConstrain","radians","zAngle","Math","PI","test","tan","pointsToData","radius","angle","oppAngle","pointOnCircle","dataToPoints","o","onBeforeRender","getRadius","currentHit","current","onUp","_downOnCanvas","shape","angleSnap","renderedOnce","onRender","setObject","setup","name","tooltip","iconClass","register"],"mappings":";;;;;;;AAAAA,QAAQ,OAAQ,gBAAiB,0BAA2B,yBAA0B,YACtF,SAASC,EAAMC,EAAIC,EAAUC,EAAaC,GAE1C,IAAIC,EAASJ,EAAGK,QACfF,EACA,SAASG,GACRC,KAAKC,YAAcD,KAAKE,MAAMC,OAAOC,OACrCJ,KAAKK,WAAWC,KAAK,EAAGC,KAAK,MAU7BC,OAAM,EACNC,KAAK,oCACLR,YAAY,GACZS,WAAU,EAIVC,WAAY,SAASC,GAMpB,GAAa,IADbA,OAAkBC,IAATD,EAAmBA,EAAOZ,KAAKE,MAAMY,MAAO,EAAI,GAExDd,KAAKE,MAAMY,OAAQ,EACnBd,KAAKe,KAAKH,OAAS,MACf,CACJZ,KAAKE,MAAMY,OAAQ,EACnB,IAAIE,EAAIhB,KAAKiB,OACTC,EAAKlB,KAAKmB,SACdnB,KAAKoB,YACHC,EAAEL,EAAE,GAAGK,EAAGC,EAAEN,EAAE,GAAGM,IACjBD,EAAEH,EAAGG,EAAGC,EAAEJ,EAAGI,KAGhBtB,KAAKuB,UAGNC,kBAAmB,SAASC,EAAKC,EAAGC,GAInC,IAAIC,EAAS,OAALH,EAAazB,KAAKC,YAAcD,KAAKC,YAAY,EACrD4B,EAAS,OAALJ,EAAaE,EAAIG,KAAO,KAChCJ,GACCK,GAAG/B,KAAKe,KAAKiB,GACbC,GAAGjC,KAAKe,KAAKmB,GACbC,GAAGP,EACHQ,GAAGR,GAGJ5B,KAAKqC,OAAOrC,KAAKyB,IACjBzB,KAAKyB,GAAOzB,KAAKsC,UAAUC,cAAcb,GACvCc,UAAUb,GACVc,QAAQZ,GACV7B,KAAK0C,KAAKC,KAAK3C,KAAKyB,GAAM,cAAe,YAG1CmB,QAAS,SAAmBnB,EAAoBC,EAAaC,GAM5D3B,KAAKqC,OAAOrC,KAAKyB,IACjBzB,KAAKyB,GAAOzB,KAAKsC,UAAUO,WAAWnB,GACpCc,UAAUb,GACZ3B,KAAK8C,aAAa9C,KAAKyB,KAGxBsB,OAAQ,SAAwBC,GAI/B,IAAGhD,KAAKiD,QAAR,CAEA,IAAIjB,EAAKgB,EAAIE,MAAM7B,EAClBa,EAAKc,EAAIE,MAAM5B,EACf6B,EAAKH,EAAI3B,EACT+B,EAAKJ,EAAI1B,EAEV,GAAGtB,KAAKqD,KAAKC,QAAUtD,KAAKE,MAAMY,MAAM,CACvC,IAAII,EAAKlB,KAAK0C,KAAKa,UAAUP,EAAK,KAClCG,EAAKjC,EAAGG,EACR+B,EAAKlC,EAAGI,EAGT,GAAGtB,KAAKqD,KAAKG,IAAI,CAMhB,IAAIC,EAAKN,EAAGnB,GAAOmB,EAAGnB,GAAI,GAAOA,EAAGmB,IAAK,EACrCO,EAAKN,EAAGlB,GAAOkB,EAAGlB,GAAI,GAAOA,EAAGkB,IAAK,EACzCpB,GAAMyB,EACNN,GAAMM,EACNvB,GAAMwB,EACNN,GAAMM,EAGP,GAAG1D,KAAKE,MAAMY,MAAM,CACnB,IAAI6C,EAAM3D,KAAKmB,OAAO6B,GACtBG,EAAKQ,EAAItC,EACT+B,EAAKO,EAAIrC,EAGVtB,KAAKoB,YACHC,EAAEW,EAAIV,EAAEY,IACRb,EAAE8B,EAAI7B,EAAE8B,KAEVpD,KAAKuB,WAGNqC,YAAa,SAA+BC,GAIvC7D,KAAK8D,kBACR9D,KAAK+D,mBAKN/D,KAAKoB,UAAUpB,KAAKiB,QACpBjB,KAAKuB,UAGNyC,gBAAiB,SAAS3C,EAAGC,GAG5B,IAAItB,KAAKE,MAAMY,MAAQ,OAAO,KAC9B,IAAImD,EAAUjE,KAAKE,MAAMgE,OAAOC,KAAKC,GAAG,IAEpCC,EAAOhD,EAAE,EAAIA,GAAGC,EAAID,GAAGC,EAG3B,OAAQD,EAFCgD,EAAOhD,GAAKC,EAAE6C,KAAKG,IAAIL,GAElB3C,EADJ+C,GAAYF,KAAKG,IAAIL,GAAS5C,EAAvBC,IAIlBH,OAAQ,SAAS6B,GAIhB,QAASnC,IAANmC,EAAgB,CAClB,IAAIhD,KAAKiB,OAAO,GAAK,OAAO,KAC5B,IAAIS,EAAI1B,KAAKuE,eACbvB,GACCE,OACC7B,EAAEK,EAAEM,GACJV,EAAEI,EAAEQ,IAELb,EAAEK,EAAEyB,GACJ7B,EAAEI,EAAE0B,IAGN,IAAIoB,EAASxE,KAAK0C,KAAKtC,OAAO4C,GAC1ByB,EAAQ9E,EAAY8E,MAAMzB,EAAIE,MAAOF,GAKzC,OAJAyB,EAAM,IAAIA,EAAQ,IAAMA,GAExBA,EAAQA,EAAQ,KAAOA,EAAQ,IAAMzE,KAAKE,MAAMgE,OAASlE,KAAK0C,KAAKgC,SAAS1E,KAAKE,MAAMgE,QAEhFlE,KAAK0C,KAAKiC,cAAc3B,EAAIE,MAAM7B,EAAG2B,EAAIE,MAAM5B,EAAGkD,EAAQC,IAGlEF,aAAc,SAASvD,GAItB,IAAIJ,EAAS,EACToC,GAAOE,OAAO7B,GAFlBL,EAAIA,GAAKhB,KAAKiB,QAEQ,GAAGI,EAAGC,EAAEN,EAAE,GAAGM,GAAID,EAAEL,EAAE,GAAGK,EAAGC,EAAEN,EAAE,GAAGM,GACxD,GAAGtB,KAAKE,MAAMY,OAAUd,KAAK0C,KAAKtC,OAAO4C,GAAKhD,KAAKC,YAAa,CAE/D,IAAIwE,EAAQ9E,EAAY8E,MAAMzB,EAAIE,MAAOF,GACzCyB,EAAM,IAAIA,EAAQ,IAAMA,GACxB7D,EAAS6D,EAAQ,KAAOA,EAAQ,IAAM,GAAK,EAS5C,OAPAzE,KAAKe,MACJiB,GAAIhB,EAAE,GAAGK,EACTa,GAAIlB,EAAE,GAAGM,EACT6B,GAAInC,EAAE,GAAGK,EACT+B,GAAIpC,EAAE,GAAGM,EACTV,OAAQA,GAEFZ,KAAKe,MAGb6D,aAAc,SAASC,GAItB,IADAA,EAAIA,GAAK7E,KAAKe,MACTyD,QAAUK,EAAEJ,MAAM,CAGtB,IAAI7D,EAAS,EACTM,EAAKlB,KAAK0C,KAAKiC,cAAcE,EAAExD,EAAEwD,EAAEvD,EAAEuD,EAAEL,OAAOK,EAAEJ,QACjDzE,KAAKE,MAAMY,OAAU+D,EAAEjE,QAAoB,GAAViE,EAAEjE,UACrCZ,KAAKE,MAAMY,OAAQ,EACnBF,EAASiE,EAAEJ,MAAQ,KAAOI,EAAEJ,MAAQ,IAAM,GAAK,GAGhDzE,KAAKe,KAAO8D,GACX7C,GAAG6C,EAAExD,EACLa,GAAG2C,EAAEvD,EACL6B,GAAGjC,EAAGG,EACN+B,GAAGlC,EAAGI,EACNV,OAAOA,GAQT,OAJAZ,KAAKiB,SACHI,EAAEwD,EAAE7C,GAAIV,EAAEuD,EAAE3C,KACZb,EAAEwD,EAAE1B,GAAI7B,EAAEuD,EAAEzB,KAEPpD,KAAKiB,QAGbM,OAAQ,WAOPvB,KAAK8E,eAAe9E,MACjBA,KAAK+E,aAAe/E,KAAKC,aAC3BD,KAAK4C,QAAQ,MAAO5C,KAAKe,KAAMf,KAAKE,MAAM8E,YAC1ChF,KAAK4C,QAAQ,QAAS5C,KAAKe,KAAMf,KAAKE,MAAM+E,WAG5CjF,KAAKe,KAAKH,OAAS,EACnBZ,KAAKwB,kBAAkB,MAAOxB,KAAKe,KAAMf,KAAKE,MAAM8E,YACpDhF,KAAKwB,kBAAkB,QAASxB,KAAKe,KAAMf,KAAKE,MAAM+E,WAGxDC,KAAM,SAAwBlC,GAI7B,IAAGhD,KAAKiD,SAAYjD,KAAKmF,cAAzB,CAGA,GAFAnF,KAAKmF,eAAgB,GAEjBnF,KAAKoF,MAAM,CAEdpC,EAAIE,MAAM7B,EAAIrB,KAAKE,MAAMY,MAAQkC,EAAIE,MAAM7B,EADnC,IAC2C2B,EAAIE,MAAM7B,EAC7D2B,EAAI1B,EAAI0B,EAAI1B,EAFJ,IAGRtB,KAAKoB,YACHC,EAAE2B,EAAIE,MAAM7B,EAAGC,EAAE0B,EAAIE,MAAM5B,IAC3BD,EAAE2B,EAAI3B,EAAGC,EAAE0B,EAAI1B,KAEjBtB,KAAKuB,SAIN,GAAGvB,KAAK+E,YAAY/E,KAAKC,YAAY,CACpC,IAAIe,EAAIhB,KAAKiB,OACbjB,KAAKoB,YACHC,EAAEL,EAAE,GAAGK,EAAGC,EAAEN,EAAE,GAAGM,IACjBD,EAAEL,EAAE,GAAGK,EAAGC,EAAEN,EAAE,GAAGM,SAEf,CAEAN,EAAIhB,KAAKiB,OAAb,IACIC,EAAKlB,KAAKE,MAAMY,MAAQd,KAAKmB,OAAO6B,GAAOhD,KAAK0C,KAAKa,UAAUP,EAAKhD,KAAKqF,UAAU,KACvFrF,KAAKoB,YACHC,EAAEL,EAAE,GAAGK,EAAGC,EAAEN,EAAE,GAAGM,IACjBD,EAAEH,EAAGG,EAAGC,EAAEJ,EAAGI,KAGhBtB,KAAKsF,cAAe,EACpBtF,KAAKuF,SAASvF,UAkHjB,OA5GAR,EAAKgG,UAAU,oCAAqC3F,GACpDA,EAAO4F,OAINC,KAAK,oCACLC,QAAQ,cACRC,UAAU,cAoGXlG,EAASmG,SAAShG,EAAO4F,MAAO,QACzB5F","file":"../../../../drawing/tools/custom/Vector.js","sourcesContent":["define([\"dojo\", \"../../util/oo\", \"../../manager/_registry\", \"../../util/positioning\", \"../Arrow\"],\r\nfunction(dojo, oo, registry, positioning, Arrow){\r\n\r\nvar Vector = oo.declare(\r\n\tArrow,\r\n\tfunction(options){\r\n\t\tthis.minimumSize = this.style.arrows.length;\r\n\t\tthis.addShadow({size:3, mult:2});\r\n\t},\r\n\t{\r\n\t\t// summary:\r\n\t\t//\t\tCreates a Vector Stencil.\r\n\t\t// description:\r\n\t\t//\t\tGenerally the same as an arrow, except that the arrow\r\n\t\t//\t\thead is only at the end. There is additionaly functionality\r\n\t\t//\t\tto allow for a 'zero vector' - one with no length.\r\n\r\n\t\tdraws:true,\r\n\t\ttype:\"dojox.drawing.tools.custom.Vector\",\r\n\t\tminimumSize:30,\r\n\t\tshowAngle:true,\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tchangeAxis: function(cosphi){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConverts a vector to and from the z axis.\r\n\t\t\t//\t\tIf passed a cosphi value that is used to set\r\n\t\t\t//\t\tthe axis, otherwise it is the opp of what it is.\r\n\t\t\tcosphi = cosphi!==undefined?cosphi:this.style.zAxis? 0 : 1;\r\n\t\t\tif(cosphi == 0){\r\n\t\t\t\tthis.style.zAxis = false;\r\n\t\t\t\tthis.data.cosphi = 0;\r\n\t\t\t}else{\r\n\t\t\t\tthis.style.zAxis = true;\r\n\t\t\t\tvar p = this.points;\r\n\t\t\t\tvar pt = this.zPoint();\r\n\t\t\t\tthis.setPoints([\r\n\t\t\t\t\t{x:p[0].x, y:p[0].y},\r\n\t\t\t\t\t{x:pt.x, y:pt.y}\r\n\t\t\t\t]);\r\n\t\t\t}\r\n\t\t\tthis.render();\r\n\t\t},\r\n\t\t\r\n\t\t_createZeroVector: function(shp, d, sty){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSpecial creation function for the zero-vector shape\r\n\r\n\t\t\tvar s = shp==\"hit\" ? this.minimumSize : this.minimumSize/6;\r\n\t\t\tvar f = shp==\"hit\" ? sty.fill : null;\r\n\t\t\td = {\r\n\t\t\t\tcx:this.data.x1,\r\n\t\t\t\tcy:this.data.y1,\r\n\t\t\t\trx:s,\r\n\t\t\t\try:s\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tthis.remove(this[shp]);\r\n\t\t\tthis[shp] = this.container.createEllipse(d)\r\n\t\t\t\t.setStroke(sty)\r\n\t\t\t\t.setFill(f);\r\n\t\t\tthis.util.attr(this[shp], \"drawingType\", \"stencil\");\r\n\t\t},\r\n\t\t\r\n\t\t_create: function(/*String*/shp, /*StencilData*/d, /*Object*/sty){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates a dojox.gfx.shape based on passed arguments.\r\n\t\t\t//\t\tCan be called many times by implementation to create\r\n\t\t\t//\t\tmultiple shapes in one stencil.\r\n\r\n\t\t\tthis.remove(this[shp]);\r\n\t\t\tthis[shp] = this.container.createLine(d)\r\n\t\t\t\t.setStroke(sty);\r\n\t\t\tthis._setNodeAtts(this[shp]);\r\n\t\t},\r\n\t\t\r\n\t\tonDrag: function(/*EventObject*/obj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSee stencil._Base.onDrag\r\n\r\n\t\t\tif(this.created){ return; }\r\n\t\t\t\r\n\t\t\tvar x1 = obj.start.x,\r\n\t\t\t\ty1 = obj.start.y,\r\n\t\t\t\tx2 = obj.x,\r\n\t\t\t\ty2 = obj.y;\r\n\t\t\t\r\n\t\t\tif(this.keys.shift && !this.style.zAxis){\r\n\t\t\t\tvar pt = this.util.snapAngle(obj, 45/180);\r\n\t\t\t\tx2 = pt.x;\r\n\t\t\t\ty2 = pt.y;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this.keys.alt){\r\n\t\t\t\t// FIXME:\r\n\t\t\t\t// should double the length of the line\r\n\t\t\t\t// FIXME:\r\n\t\t\t\t//\tif alt dragging past ZERO it seems to work\r\n\t\t\t\t//\tbut select/deselect shows bugs\r\n\t\t\t\tvar dx = x2>x1 ? ((x2-x1)/2) : ((x1-x2)/-2);\r\n\t\t\t\tvar dy = y2>y1 ? ((y2-y1)/2) : ((y1-y2)/-2);\r\n\t\t\t\tx1 -= dx;\r\n\t\t\t\tx2 -= dx;\r\n\t\t\t\ty1 -= dy;\r\n\t\t\t\ty2 -= dy;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this.style.zAxis){\r\n\t\t\t\tvar pts = this.zPoint(obj);\r\n\t\t\t\tx2 = pts.x;\r\n\t\t\t\ty2 = pts.y;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.setPoints([\r\n\t\t\t\t{x:x1, y:y1},\r\n\t\t\t\t{x:x2, y:y2}\r\n\t\t\t]);\r\n\t\t\tthis.render();\r\n\t\t},\r\n\t\t\r\n\t\tonTransform: function(/* ? manager.Anchor */anchor){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled from anchor point mouse drag\r\n\t\t\t//\t\talso called from plugins.Pan.checkBounds\r\n\t\t\tif(!this._isBeingModified){\r\n\t\t\t\tthis.onTransformBegin();\r\n\t\t\t}\r\n\t\t\t// this is not needed for anchor moves, but it\r\n\t\t\t// is for stencil move:\r\n\t\t\t\r\n\t\t\tthis.setPoints(this.points);\r\n\t\t\tthis.render();\r\n\t\t},\r\n\t\t\r\n\t\tanchorConstrain: function(x, y){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled from anchor point mouse drag\r\n\t\t\tif(!this.style.zAxis){ return null; }\r\n\t\t\tvar radians = this.style.zAngle*Math.PI/180;\r\n\t\t\t//Constrain to angle\r\n\t\t\tvar test = x<0 ? x>-y : x<-y;\r\n\t\t\tvar dx = test ? x : -y/Math.tan(radians);\r\n\t\t\tvar dy = !test ? y : -Math.tan(radians)*x;\r\n\t\t\treturn {x:dx, y:dy}\r\n\t\t},\r\n\t\t\r\n\t\tzPoint: function(obj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTakes any point and converts it to\r\n\t\t\t//\t\tbe on the z-axis.\r\n\t\t\tif(obj===undefined){\r\n\t\t\t\tif(!this.points[0]){ return null; };\r\n\t\t\t\tvar d = this.pointsToData();\r\n\t\t\t\tobj = {\r\n\t\t\t\t\tstart:{\r\n\t\t\t\t\t\tx:d.x1,\r\n\t\t\t\t\t\ty:d.y1\r\n\t\t\t\t\t},\r\n\t\t\t\t\tx:d.x2,\r\n\t\t\t\t\ty:d.y2\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tvar radius = this.util.length(obj);\r\n\t\t\tvar angle = positioning.angle(obj.start, obj);\r\n\t\t\tangle<0 ? angle = 360 + angle : angle;\r\n\t\t\t\r\n\t\t\tangle = angle > 135 && angle < 315 ? this.style.zAngle : this.util.oppAngle(this.style.zAngle);\r\n\t\t\t\r\n\t\t\treturn this.util.pointOnCircle(obj.start.x, obj.start.y, radius, angle);\r\n\t\t},\r\n\t\t\r\n\t\tpointsToData: function(p){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConverts points to data\r\n\t\t\tp = p || this.points;\r\n\t\t\tvar cosphi = 0;\r\n\t\t\tvar obj = {start:{x:p[0].x, y:p[0].y}, x:p[1].x, y:p[1].y};\r\n\t\t\tif(this.style.zAxis && (this.util.length(obj)>this.minimumSize)){\r\n\t\t\t\t\r\n\t\t\t\tvar angle = positioning.angle(obj.start, obj);\r\n\t\t\t\tangle<0 ? angle = 360 + angle : angle;\r\n\t\t\t\tcosphi = angle > 135 && angle < 315 ? 1 : -1;\r\n\t\t\t}\r\n\t\t\tthis.data = {\r\n\t\t\t\tx1: p[0].x,\r\n\t\t\t\ty1: p[0].y,\r\n\t\t\t\tx2: p[1].x,\r\n\t\t\t\ty2: p[1].y,\r\n\t\t\t\tcosphi: cosphi\r\n\t\t\t};\r\n\t\t\treturn this.data;\r\n\t\t},\r\n\t\t\r\n\t\tdataToPoints: function(o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConverts data to points.\r\n\t\t\to = o || this.data;\r\n\t\t\tif(o.radius || o.angle){\r\n\t\t\t\t// instead of using x1,x2,y1,y1,\r\n\t\t\t\t// it's been set as x,y,angle,radius\r\n\t\t\t\tvar cosphi = 0;\r\n\t\t\t\tvar pt = this.util.pointOnCircle(o.x,o.y,o.radius,o.angle);\r\n\t\t\t\tif(this.style.zAxis || (o.cosphi && o.cosphi!=0)){\r\n\t\t\t\t\tthis.style.zAxis = true;\r\n\t\t\t\t\tcosphi = o.angle > 135 && o.angle < 315 ? 1 : -1;\r\n\t\t\t\t}\r\n\t\t\t\t//console.log(\" ---- pts:\", pt.x, pt.y);\r\n\t\t\t\tthis.data = o = {\r\n\t\t\t\t\tx1:o.x,\r\n\t\t\t\t\ty1:o.y,\r\n\t\t\t\t\tx2:pt.x,\r\n\t\t\t\t\ty2:pt.y,\r\n\t\t\t\t\tcosphi:cosphi\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tthis.points = [\r\n\t\t\t\t{x:o.x1, y:o.y1},\r\n\t\t\t\t{x:o.x2, y:o.y2}\r\n\t\t\t];\r\n\t\t\treturn this.points;\r\n\t\t},\r\n\t\t\r\n\t\trender: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRenders the 'hit' object (the shape used for an expanded\r\n\t\t\t//\t\thit area and for highlighting) and the'shape' (the actual\r\n\t\t\t//\t\tdisplay object). Additionally checks if Vector should be\r\n\t\t\t//\t\tdrawn as an arrow or a circle (zero-length)\r\n\r\n\t\t\tthis.onBeforeRender(this);\r\n\t\t\tif(this.getRadius() >= this.minimumSize){\r\n\t\t\t\tthis._create(\"hit\", this.data, this.style.currentHit);\r\n\t\t\t\tthis._create(\"shape\", this.data, this.style.current);\r\n\t\t\t\r\n\t\t\t}else{\r\n\t\t\t\tthis.data.cosphi = 0;\r\n\t\t\t\tthis._createZeroVector(\"hit\", this.data, this.style.currentHit);\r\n\t\t\t\tthis._createZeroVector(\"shape\", this.data, this.style.current);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUp: function(/*EventObject*/obj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSee stencil._Base.onUp\r\n\r\n\t\t\tif(this.created || !this._downOnCanvas){ return; }\r\n\t\t\tthis._downOnCanvas = false;\r\n\t\t\t//Default vector for single click\r\n\t\t\tif(!this.shape){\r\n\t\t\t\tvar d = 100;\r\n\t\t\t\tobj.start.x = this.style.zAxis ? obj.start.x + d : obj.start.x;\r\n\t\t\t\tobj.y = obj.y+d;\r\n\t\t\t\tthis.setPoints([\r\n\t\t\t\t\t{x:obj.start.x, y:obj.start.y},\r\n\t\t\t\t\t{x:obj.x, y:obj.y}\r\n\t\t\t\t]);\r\n\t\t\t\tthis.render();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// When within minimum size this sets zero vector length to zero\r\n\t\t\tif(this.getRadius()<this.minimumSize){\r\n\t\t\t\tvar p = this.points;\r\n\t\t\t\tthis.setPoints([\r\n\t\t\t\t\t{x:p[0].x, y:p[0].y},\r\n\t\t\t\t\t{x:p[0].x, y:p[0].y}\r\n\t\t\t\t]);\r\n\t\t\t}else{\r\n\t\t\t\t//SnapAngle fails for the zero length vector\r\n\t\t\t\tvar p = this.points;\r\n\t\t\t\tvar pt = this.style.zAxis ? this.zPoint(obj) : this.util.snapAngle(obj, this.angleSnap/180);\r\n\t\t\t\tthis.setPoints([\r\n\t\t\t\t\t{x:p[0].x, y:p[0].y},\r\n\t\t\t\t\t{x:pt.x, y:pt.y}\r\n\t\t\t\t]);\r\n\t\t\t}\r\n\t\t\tthis.renderedOnce = true;\r\n\t\t\tthis.onRender(this);\r\n\t\t}\r\n\t}\r\n\t\r\n);\r\n\r\ndojo.setObject(\"dojox.drawing.tools.custom.Vector\", Vector);\r\nVector.setup = {\r\n\t// summary:\r\n\t//\t\tSee stencil._Base ToolsSetup\r\n\r\n\tname:\"dojox.drawing.tools.custom.Vector\",\r\n\ttooltip:\"Vector Tool\",\r\n\ticonClass:\"iconVector\"\r\n};\r\n\r\n//TODO\r\nif(0 && dojox.drawing.defaults.zAxisEnabled){\r\n\tdojox.drawing.tools.custom.Vector.setup.secondary = {\r\n\t\t// summary:\r\n\t\t//\t\tCreates a secondary tool for the Vector Stencil.\r\n\t\t// description:\r\n\t\t//\t\tSee Toolbar.js makeButtons function.  The toolbar\r\n\t\t//\t\tchecks Vector.setup for a secondary tool and requires\r\n\t\t//\t\tname, label, and funct.  Currently it doesn't accept icon\r\n\t\t//\t\tand only uses text from label for the button.  Funct is the\r\n\t\t//\t\tfunction that fires when the button is clicked.\r\n\t\t//\r\n\t\t//\t\tSetup and postSetup are optional\r\n\t\t//\t\tand allow tool specific functions to be added to the\r\n\t\t//\t\tToolbar object as if they were written there.\r\n\t\tname: \"vectorSecondary\",\r\n\t\tlabel: \"z-axis\",\r\n\t\tfunct: function(button){\r\n\t\t\tbutton.selected ? this.zDeselect(button) : this.zSelect(button);\r\n\t\t\t\r\n\t\t\tvar stencils = this.drawing.stencils.selectedStencils;\r\n\t\t\tfor(var nm in stencils){\r\n\t\t\t\tif(stencils[nm].shortType == \"vector\" && (stencils[nm].style.zAxis != dojox.drawing.defaults.zAxis)){\r\n\t\t\t\t\tvar s = stencils[nm];\r\n\t\t\t\t\ts.changeAxis();\r\n\t\t\t\t\t//Reset anchors\r\n\t\t\t\t\tif(s.style.zAxis){ s.deselect(); s.select(); }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t},\r\n\t\tsetup: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAll functions, variables and connections defined here\r\n\t\t\t//\t\tare treated as if they were added directly to toolbar.\r\n\t\t\t//\t\tThey are included with the tool because secondary buttons\r\n\t\t\t//\t\tare tool specific.\r\n\t\t\tvar zAxis = dojox.drawing.defaults.zAxis;\r\n\t\t\tthis.zSelect = function(button){\r\n\t\t\t\tif(!button.enabled){ return; }\r\n\t\t\t\tzAxis = true;\r\n\t\t\t\tdojox.drawing.defaults.zAxis = true;\r\n\t\t\t\tbutton.select();\r\n\t\t\t\tthis.vectorTest();\r\n\t\t\t\tthis.zSelected = button;\r\n\t\t\t};\r\n\t\t\tthis.zDeselect = function(button){\r\n\t\t\t\tif(!button.enabled){ return; }\r\n\t\t\t\tzAxis = false;\r\n\t\t\t\tdojox.drawing.defaults.zAxis = false;\r\n\t\t\t\tbutton.deselect();\r\n\t\t\t\tthis.vectorTest();\r\n\t\t\t\tthis.zSelected = null;\r\n\t\t\t};\r\n\t\t\tthis.vectorTest = function(){\r\n\t\t\t\tdojo.forEach(this.buttons, function(b){\r\n\t\t\t\t\tif(b.toolType==\"vector\" && b.selected){\r\n\t\t\t\t\t\tthis.drawing.currentStencil.style.zAxis = zAxis;\r\n\t\t\t\t\t}\r\n\t\t\t\t},this);\r\n\t\t\t};\r\n\t\t\tdojo.connect(this, \"onRenderStencil\", this, function(){ if(this.zSelected){ this.zDeselect(this.zSelected)}});\r\n\t\t\tvar c = dojo.connect(this.drawing, \"onSurfaceReady\", this, function(){\r\n\t\t\t\tdojo.disconnect(c);\r\n\t\t\t\tdojo.connect(this.drawing.stencils, \"onSelect\", this, function(stencil){\r\n\t\t\t\t\tif(stencil.shortType == \"vector\"){\r\n\t\t\t\t\t\tif(stencil.style.zAxis){\r\n\t\t\t\t\t\t\t//If stencil is on the z-axis, update button to reflect that\r\n\t\t\t\t\t\t\tdojo.forEach(this.buttons, function(b){\r\n\t\t\t\t\t\t\t\tif(b.toolType==\"vectorSecondary\"){\r\n\t\t\t\t\t\t\t\t\tthis.zSelect(b);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},this);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t//Update button to not be z-axis\r\n\t\t\t\t\t\t\tdojo.forEach(this.buttons, function(b){\r\n\t\t\t\t\t\t\t\tif(b.toolType==\"vectorSecondary\"){\r\n\t\t\t\t\t\t\t\t\tthis.zDeselect(b);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},this);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\t\tpostSetup: function(btn){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDepending on the secondary tool, it may need\r\n\t\t\t//\t\textra functionality for some of the basic functions.\r\n\t\t\t//\t\tPost is passed the button so those connections can\r\n\t\t\t//\t\tbe made.\r\n\t\t\tdojo.connect(btn, \"enable\", function(){ dojox.drawing.defaults.zAxisEnabled = true; });\r\n\t\t\tdojo.connect(btn, \"disable\", function(){ dojox.drawing.defaults.zAxisEnabled = false; });\r\n\t\t}\r\n\t};\r\n}\r\nregistry.register(Vector.setup, \"tool\");\r\nreturn Vector;\r\n});\r\n"]}