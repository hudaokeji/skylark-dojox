{"version":3,"sources":["mobile/_ComboBoxMenu.js"],"names":["define","dojo","declare","domClass","domConstruct","ComboBoxMenuMixin","WidgetBase","ListTouchMixin","Scrollable","has","BidiComboBoxMenu","_ComboBoxMenu","baseClass","buildRendering","this","domNode","focusNode","create","class","containerNode","style","position","top","left","previousButton","role","nextButton","inherited","arguments","_createMenuItem","isLeftToRight","onSelect","node","add","onDeselect","remove","onOpen","scrollable","init","scrollTo","x","y","onClose","cleanup","postCreate","resize","self"],"mappings":";;;;;;;AAAAA,QACC,oBACA,qBACA,iBACA,qBACA,gCACA,oBACA,oBACA,eACA,WACA,sDAEA,SAASC,EAAMC,EAASC,EAAUC,EAAcC,EAAmBC,EAAYC,EAAgBC,EAAYC,EAAKC,GAIhH,IAAIC,EAAgBT,EAAQO,EAAI,aAAe,oCAAsC,8BAA+BH,EAAYC,EAAgBF,IAY/IO,UAAW,kBAEXC,eAAgB,WACfC,KAAKC,QAAUD,KAAKE,UAAYZ,EAAaa,OAAO,OAASC,MAAQ,aACrEJ,KAAKK,cAAgBf,EAAaa,OAAO,OAASG,OAASC,SAAS,WAAYC,IAAI,EAAGC,KAAK,IAAOT,KAAKC,SACxGD,KAAKU,eAAiBpB,EAAaa,OAAO,OAASC,MAAQ,6DAA8DO,KAAK,UAAYX,KAAKK,eAC/IL,KAAKY,WAAatB,EAAaa,OAAO,OAASC,MAAQ,yDAA0DO,KAAK,UAAYX,KAAKK,eACvIL,KAAKa,UAAUC,YAGhBC,gBAAiB,WAEhB,OAAOzB,EAAaa,OAAO,OAC1BC,MAAS,gCAAiCJ,KAAKgB,gBAAkB,GAAK,2BACtEL,KAAM,YAIRM,SAAU,SAAqBC,GAG9B7B,EAAS8B,IAAID,EAAM,gCAGpBE,WAAY,SAAqBF,GAGhC7B,EAASgC,OAAOH,EAAM,gCAGvBI,OAAQ,WAGPtB,KAAKuB,WAAWC,MACfvB,QAASD,KAAKC,QACdI,cAAeL,KAAKK,gBAErBL,KAAKuB,WAAWE,UAAUC,EAAE,EAAGC,EAAE,KAGlCC,QAAS,WAGR5B,KAAKuB,WAAWM,WAGjBC,WAAY,WACX9B,KAAKa,UAAUC,WACfd,KAAKuB,WAAa,IAAI7B,EACtBM,KAAKuB,WAAWQ,OAAS,aAEzB,IAAIC,EAAOhC,KACXA,KAAKuB,WAAWP,cAAgB,WAC/B,OAAOgB,EAAKhB,oBAIf,OAAOrB,EAAI,aAAeP,EAAQ,8BAA+BS,EAAeD,IAAqBC","file":"../../mobile/_ComboBoxMenu.js","sourcesContent":["define([\r\n\t\"dojo/_base/kernel\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/dom-class\",\r\n\t\"dojo/dom-construct\",\r\n\t\"dijit/form/_ComboBoxMenuMixin\",\r\n\t\"dijit/_WidgetBase\",\r\n\t\"./_ListTouchMixin\",\r\n\t\"./scrollable\",\r\n\t\"dojo/has\",\r\n\t\"dojo/has!dojo-bidi?dojox/mobile/bidi/_ComboBoxMenu\"\r\n],\r\n\tfunction(dojo, declare, domClass, domConstruct, ComboBoxMenuMixin, WidgetBase, ListTouchMixin, Scrollable, has, BidiComboBoxMenu){\r\n\t// module:\r\n\t//\t\tdojox/mobile/_ComboBoxMenu\r\n\r\n\tvar _ComboBoxMenu = declare(has(\"dojo-bidi\") ? \"dojox.mobile._NonBidiComboBoxMenu\" : \"dojox.mobile._ComboBoxMenu\", [WidgetBase, ListTouchMixin, ComboBoxMenuMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tFocus-less menu for internal use in dojox/mobile/ComboBox.\r\n\t\t//\t\tAbstract methods that must be defined externally:\r\n\t\t//\r\n\t\t//\t\t- onChange: item was explicitly chosen (mousedown somewhere on the menu and mouseup somewhere on the menu);\r\n\t\t//\t\t- onPage: next(1) or previous(-1) button pressed.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\r\n\t\t// baseClass: String\r\n\t\t//\t\tThe name of the CSS class of this widget.\r\n\t\tbaseClass: \"mblComboBoxMenu\",\r\n\t\t\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.domNode = this.focusNode = domConstruct.create(\"div\", { \"class\":\"mblReset\" });\r\n\t\t\tthis.containerNode = domConstruct.create(\"div\", { style: { position:\"absolute\", top:0, left:0 } }, this.domNode); // needed for scrollable\r\n\t\t\tthis.previousButton = domConstruct.create(\"div\", { \"class\":\"mblReset mblComboBoxMenuItem mblComboBoxMenuPreviousButton\", role:\"option\" }, this.containerNode);\r\n\t\t\tthis.nextButton = domConstruct.create(\"div\", { \"class\":\"mblReset mblComboBoxMenuItem mblComboBoxMenuNextButton\", role:\"option\" }, this.containerNode);\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_createMenuItem: function(){\r\n\t\t\t// override of the method from dijit/form/_ComboBoxMenu.\r\n\t\t\treturn domConstruct.create(\"div\", {\r\n\t\t\t\t\"class\": \"mblReset mblComboBoxMenuItem\" +(this.isLeftToRight() ? \"\" : \" mblComboBoxMenuItemRtl\"),\r\n\t\t\t\trole: \"option\"\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tonSelect: function(/*DomNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdd selected CSS.\r\n\t\t\tdomClass.add(node, \"mblComboBoxMenuItemSelected\");\r\n\t\t},\r\n\r\n\t\tonDeselect: function(/*DomNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRemove selected CSS.\r\n\t\t\tdomClass.remove(node, \"mblComboBoxMenuItemSelected\");\r\n\t\t},\r\n\r\n\t\tonOpen: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the menu opens.\r\n\t\t\tthis.scrollable.init({\r\n\t\t\t\tdomNode: this.domNode,\r\n\t\t\t\tcontainerNode: this.containerNode\r\n\t\t\t});\r\n\t\t\tthis.scrollable.scrollTo({x:0, y:0});\r\n\t\t},\r\n\r\n\t\tonClose: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the menu closes.\r\n\t\t\tthis.scrollable.cleanup();\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.scrollable = new Scrollable();\r\n\t\t\tthis.scrollable.resize = function(){}; // resize changes the height rudely\r\n\t\t\t// #18000\r\n\t\t\tvar self = this;\r\n\t\t\tthis.scrollable.isLeftToRight = function(){\r\n\t\t\t\treturn self.isLeftToRight();\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n\treturn has(\"dojo-bidi\") ? declare(\"dojox.mobile._ComboBoxMenu\", [_ComboBoxMenu, BidiComboBoxMenu]) : _ComboBoxMenu;\r\n});\r\n"]}