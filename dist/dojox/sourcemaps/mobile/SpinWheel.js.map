{"version":3,"sources":["mobile/SpinWheel.js"],"names":["define","declare","array","domConstruct","PickerBase","baseClass","buildRendering","this","inherited","arguments","create","className","domNode","startup","_started","centerPos","Math","round","offsetHeight","resize","forEach","getChildren","child","addChild","widget","insertIndex","setInitialValue"],"mappings":";;;;;;;AAAAA,QACC,qBACA,mBACA,qBACA,gBACA,mBACE,SAASC,EAASC,EAAOC,EAAcC,GAKzC,OAAOH,EAAQ,yBAA0BG,GASxCC,UAAW,eAEXC,eAAgB,WACfC,KAAKC,UAAUC,WACfN,EAAaO,OAAO,OAAQC,UAAW,mBAAoBJ,KAAKK,UAGjEC,QAAS,WACLN,KAAKO,WACRP,KAAKQ,UAAYC,KAAKC,MAAMV,KAAKK,QAAQM,aAAe,GACxDX,KAAKC,UAAUC,aAGhBU,OAAQ,WACPZ,KAAKQ,UAAYC,KAAKC,MAAMV,KAAKK,QAAQM,aAAe,GACxDhB,EAAMkB,QAAQb,KAAKc,cAAe,SAASC,GAC1CA,EAAMH,QAAUG,EAAMH,YAIxBI,SAAU,SAAoBC,EAAiBC,GAC9ClB,KAAKC,UAAUC,WACZF,KAAKO,UACPU,EAAOE","file":"../../mobile/SpinWheel.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/dom-construct\",\r\n\t\"./_PickerBase\",\r\n\t\"./SpinWheelSlot\" // to load SpinWheelSlot for you (no direct references)\r\n], function(declare, array, domConstruct, PickerBase){\r\n\r\n\t// module:\r\n\t//\t\tdojox/mobile/SpinWheel\r\n\r\n\treturn declare(\"dojox.mobile.SpinWheel\", PickerBase, {\r\n\t\t// summary:\r\n\t\t//\t\tA value picker widget that has spin wheels.\r\n\t\t// description:\r\n\t\t//\t\tSpinWheel is a value picker component. It is a sectioned wheel\r\n\t\t//\t\tthat can be used to pick up some values from the wheel slots by\r\n\t\t//\t\tspinning them.\r\n\r\n\t\t/* internal properties */\t\r\n\t\tbaseClass: \"mblSpinWheel\",\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tdomConstruct.create(\"div\", {className: \"mblSpinWheelBar\"}, this.domNode);\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\tif(this._started){ return; }\r\n\t\t\tthis.centerPos = Math.round(this.domNode.offsetHeight / 2);\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tresize: function() {\r\n\t\t\tthis.centerPos = Math.round(this.domNode.offsetHeight / 2);\r\n\t\t\tarray.forEach(this.getChildren(), function(child){\r\n\t\t\t\tchild.resize && child.resize();\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\taddChild: function(/*Widget*/ widget, /*int?*/ insertIndex){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(this._started){\r\n\t\t\t\twidget.setInitialValue();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n"]}