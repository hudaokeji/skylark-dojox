{"version":3,"sources":["mobile/TextBox.js"],"names":["define","declare","domConstruct","WidgetBase","FormValueMixin","TextBoxMixin","has","BidiTextBox","TextBox","baseClass","_setTypeAttr","_setPlaceHolderAttr","value","this","_cv","_set","textbox","setAttribute","buildRendering","srcNodeRef","create","type","inherited","arguments","focusNode","domNode","postCreate","connect","_mouseIsDown","e","_onFocus"],"mappings":";;;;;;;AAAAA,QACC,qBACA,qBACA,oBACA,6BACA,2BACA,WACA,gDACE,SAASC,EAASC,EAAcC,EAAYC,EAAgBC,EAAcC,EAAKC,GAEjF,IAAIC,EAAUP,EAAQK,EAAI,aAAe,8BAAgC,wBAAyBH,EAAYC,EAAgBC,IAI7HI,UAAW,aAIXC,aAAc,KAGdC,oBAAqB,SAAmBC,GACvCA,EAAQC,KAAKC,IAAMD,KAAKC,IAAIF,GAASA,EACrCC,KAAKE,KAAK,cAAeH,GACzBC,KAAKG,QAAQC,aAAa,cAAeL,IAG1CM,eAAgB,WACXL,KAAKM,aACRN,KAAKM,WAAajB,EAAakB,OAAO,SAAUC,KAAOR,KAAKQ,QAE7DR,KAAKS,UAAUC,WACfV,KAAKG,QAAUH,KAAKW,UAAYX,KAAKY,SAGtCC,WAAY,WACXb,KAAKS,UAAUC,WACfV,KAAKc,QAAQd,KAAKG,QAAS,YAAa,WAAYH,KAAKe,cAAe,IACxEf,KAAKc,QAAQd,KAAKG,QAAS,cAAe,WAAYH,KAAKe,cAAe,IAC1Ef,KAAKc,QAAQd,KAAKG,QAAS,UAAW,SAASa,GAC9ChB,KAAKiB,SAASjB,KAAKe,aAAe,QAAUC,GAC5ChB,KAAKe,cAAe,IAErBf,KAAKc,QAAQd,KAAKG,QAAS,SAAU,cAGvC,OAAOV,EAAI,aAAeL,EAAQ,wBAAyBO,EAASD,IAAgBC","file":"../../mobile/TextBox.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/dom-construct\",\r\n\t\"dijit/_WidgetBase\",\r\n\t\"dijit/form/_FormValueMixin\",\r\n\t\"dijit/form/_TextBoxMixin\",\r\n\t\"dojo/has\",\r\n\t\"dojo/has!dojo-bidi?dojox/mobile/bidi/TextBox\"\r\n], function(declare, domConstruct, WidgetBase, FormValueMixin, TextBoxMixin, has, BidiTextBox){\r\n\r\n\tvar TextBox = declare(has(\"dojo-bidi\") ? \"dojox.mobile.NonBidiTextBox\" : \"dojox.mobile.TextBox\", [WidgetBase, FormValueMixin, TextBoxMixin],{\r\n\t\t// summary:\r\n\t\t//\t\tA non-templated base class for textbox form inputs\r\n\r\n\t\tbaseClass: \"mblTextBox\",\r\n\r\n\t\t// Override automatic assigning type --> node, it causes exception on IE8.\r\n\t\t// Instead, type must be specified as this.type when the node is created, as part of the original DOM\r\n\t\t_setTypeAttr: null,\r\n\r\n\t\t// Map widget attributes to DOMNode attributes.\r\n\t\t_setPlaceHolderAttr: function(/*String*/value){\r\n\t\t\tvalue = this._cv ? this._cv(value) : value;\r\n\t\t\tthis._set(\"placeHolder\", value);\r\n\t\t\tthis.textbox.setAttribute(\"placeholder\", value);\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tif(!this.srcNodeRef){\r\n\t\t\t\tthis.srcNodeRef = domConstruct.create(\"input\", {\"type\":this.type});\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.textbox = this.focusNode = this.domNode;\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.connect(this.textbox, \"onmouseup\", function(){ this._mouseIsDown = false; });\r\n\t\t\tthis.connect(this.textbox, \"onmousedown\", function(){ this._mouseIsDown = true; });\r\n\t\t\tthis.connect(this.textbox, \"onfocus\", function(e){\r\n\t\t\t\tthis._onFocus(this._mouseIsDown ? \"mouse\" : e);\r\n\t\t\t\tthis._mouseIsDown = false;\r\n\t\t\t});\r\n\t\t\tthis.connect(this.textbox, \"onblur\", \"_onBlur\");\r\n\t\t}\r\n\t});\r\n\treturn has(\"dojo-bidi\") ? declare(\"dojox.mobile.TextBox\", [TextBox, BidiTextBox]) : TextBox;\t\r\n});\r\n"]}