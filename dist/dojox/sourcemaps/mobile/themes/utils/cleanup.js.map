{"version":3,"sources":["mobile/themes/utils/cleanup.js"],"names":["fs","require","clean","folder","cssFiles","getFiles","lessFiles","i","length","replace","console","log","unlink","err","pattern","dest","readdirSync","map","file","test","Array","push"],"mappings":";;;;;;;AAAA,IAAIA,GAAKC,QAAQ,MAmBjB,SAASC,MAAMC,GACd,IAAIC,KACJC,SAASF,EAAQ,UAAWC,GAC5B,IAAIE,KACJD,SAAS,aAAc,WAAYC,GACnCD,SAASF,EAAQ,WAAYG,GAE7B,IAAI,IAAIC,EAAE,EAAGA,EAAIH,EAASI,OAAQD,IAC9BD,EAAUF,EAASG,GAAGE,QAAQ,OAAQ,YACxCC,QAAQC,IAAI,WAAYR,EAAS,IAAMC,EAASG,IAChDP,GAAGY,OAAOT,EAAS,IAAMC,EAASG,GAAI,SAASM,GAAQA,GAAKH,QAAQC,IAAIE,MAM3E,SAASR,SAASF,EAAQW,EAASC,GAClCf,GAAGgB,YAAYb,GAAQc,IAAI,SAASC,GAChCJ,EAAQK,KAAKD,KACZH,aAAgBK,MAClBL,EAAKM,KAAKH,GAEVH,EAAKG,IAAQ,KAvCjBhB,MAAM,cACNA,MAAM,oBACNA,MAAM,aACNA,MAAM,mBACNA,MAAM,iBACNA,MAAM,uBACNA,MAAM,eACNA,MAAM,qBACNA,MAAM,cACNA,MAAM,oBACNA,MAAM,aACNA,MAAM,mBAENA,MAAM,yBACNA,MAAM","file":"../../../../mobile/themes/utils/cleanup.js","sourcesContent":["var fs = require(\"fs\");\r\n\r\nclean(\"../android\");\r\nclean(\"../android/dijit\");\r\nclean(\"../iphone\");\r\nclean(\"../iphone/dijit\");\r\nclean(\"../blackberry\");\r\nclean(\"../blackberry/dijit\");\r\nclean(\"../holodark\");\r\nclean(\"../holodark/dijit\");\r\nclean(\"../windows\");\r\nclean(\"../windows/dijit\");\r\nclean(\"../custom\");\r\nclean(\"../custom/dijit\");\r\n\r\nclean(\"../common/transitions\");\r\nclean(\"../common/domButtons\");\r\n\r\n// Remove css files that have a matching less file in the same folder or in common folder\r\nfunction clean(folder){ \t\r\n\tvar cssFiles = [];\r\n\tgetFiles(folder, /.*.css$/, cssFiles);\r\n\tvar lessFiles = {};\r\n\tgetFiles(\"../common/\", /.*.less$/, lessFiles);\r\n\tgetFiles(folder, /.*.less$/, lessFiles);\r\n\t\r\n\tfor(var i=0; i < cssFiles.length; i++){\r\n\t\tif(lessFiles[cssFiles[i].replace(\".css\", \".less\")]){ \r\n\t\t\tconsole.log(\"deleting\", folder + \"/\" + cssFiles[i]);\r\n\t\t\tfs.unlink(folder + \"/\" + cssFiles[i], function(err){if(err){console.log(err);}});\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n}\r\n\r\nfunction getFiles(folder, pattern, dest){\r\n\tfs.readdirSync(folder).map(function(file){\r\n\t\tif(pattern.test(file)){\r\n\t\t\tif(dest instanceof Array){\r\n\t\t\t\tdest.push(file);\r\n\t\t\t}else{\r\n\t\t\t\tdest[file] = true;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n"]}