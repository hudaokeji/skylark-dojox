{"version":3,"sources":["mobile/Icon.js"],"names":["define","declare","lang","domClass","domConstruct","iconUtils","has","BidiIcon","Icon","icon","iconPos","alt","tag","constructor","args","node","mixin","this","domNode","create","createIcon","_setCustomTransform"],"mappings":";;;;;;;AAAAA,QACC,qBACA,kBACA,iBACA,qBACA,cACA,WACA,6CACE,SAASC,EAASC,EAAMC,EAAUC,EAAcC,EAAWC,EAAKC,GAKlE,IAAIC,EAAOP,EAAQK,EAAI,aAAe,2BAA6B,oBAAqB,MA2BvFG,KAAM,GAONC,QAAS,GAMTC,IAAK,GAILC,IAAK,MAELC,YAAa,SAAoBC,EAAkBC,GAO/CD,GACFZ,EAAKc,MAAMC,KAAMH,GAElBG,KAAKC,QAAUH,GAAQX,EAAae,OAAOF,KAAKL,KAChDP,EAAUe,WAAWH,KAAKR,KAAMQ,KAAKP,QAAS,KAAMO,KAAKN,IAAKM,KAAKC,SACnED,KAAKI,uBAENA,oBAAqB,eAKtB,OAAOf,EAAI,aAAeL,EAAQ,qBAAsBO,EAAMD,IAAaC","file":"../../mobile/Icon.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/dom-class\",\r\n\t\"dojo/dom-construct\",\r\n\t\"./iconUtils\",\r\n\t\"dojo/has\",\r\n\t\"dojo/has!dojo-bidi?dojox/mobile/bidi/Icon\"\r\n], function(declare, lang, domClass, domConstruct, iconUtils, has, BidiIcon){\r\n\r\n\t// module:\r\n\t//\t\tdojox/mobile/Icon\r\n\r\n\tvar Icon = declare(has(\"dojo-bidi\") ? \"dojox.mobile.NonBidiIcon\" : \"dojox.mobile.Icon\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tA wrapper for image icon, CSS sprite icon, or DOM Button.\r\n\t\t// description:\r\n\t\t//\t\tIcon is a simple utility class for creating an image icon, a CSS sprite icon, \r\n\t\t//\t\tor a DOM Button. It calls dojox/mobile/iconUtils.createIcon() with the \r\n\t\t//\t\tappropriate parameters to create an icon. \r\n\t\t//\t\tNote that this module is not a widget, that is it does not inherit \r\n\t\t//\t\tfrom dijit/_WidgetBase.\r\n\t\t// example:\r\n\t\t//\t\tImage icon:\r\n\t\t//\t|\t<div data-dojo-type=\"dojox.mobile.Icon\"\r\n\t\t//\t|\t\tdata-dojo-props='icon:\"images/tab-icon-12h.png\"'></div>\r\n\t\t//\r\n\t\t//\t\tCSS sprite icon:\r\n\t\t//\t|\t<div data-dojo-type=\"dojox.mobile.Icon\"\r\n\t\t//\t|\t\tdata-dojo-props='icon:\"images/tab-icons.png\",iconPos:\"29,116,29,29\"'></div>\r\n\t\t//\r\n\t\t//\t\tDOM Button:\r\n\t\t//\t|\t<div data-dojo-type=\"dojox.mobile.Icon\"\r\n\t\t//\t|\t\tdata-dojo-props='icon:\"mblDomButtonBlueCircleArrow\"'></div>\r\n\r\n\t\t// icon: [const] String\r\n\t\t//\t\tAn icon to display. The value can be either a path for an image\r\n\t\t//\t\tfile or a class name of a DOM button.\r\n\t\t//\t\tNote that changing the value of the property after the icon\r\n\t\t//\t\tcreation has no effect.\r\n\t\ticon: \"\",\r\n\r\n\t\t// iconPos: [const] String\r\n\t\t//\t\tThe position of an aggregated icon. IconPos is comma separated\r\n\t\t//\t\tvalues like top,left,width,height (ex. \"0,0,29,29\").\r\n\t\t//\t\tNote that changing the value of the property after the icon\r\n\t\t//\t\tcreation has no effect.\r\n\t\ticonPos: \"\",\r\n\r\n\t\t// alt: [const] String\r\n\t\t//\t\tAn alt text for the icon image.\r\n\t\t//\t\tNote that changing the value of the property after the icon\r\n\t\t//\t\tcreation has no effect.\r\n\t\talt: \"\",\r\n\r\n\t\t// tag: String\r\n\t\t//\t\tThe name of the HTML tag to create as this.domNode.\r\n\t\ttag: \"div\",\r\n\r\n\t\tconstructor: function(/*Object?*/args, /*DomNode?*/node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates a new instance of the class.\r\n\t\t\t// args:\r\n\t\t\t//\t\tContains properties to be set.\r\n\t\t\t// node:\r\n\t\t\t//\t\tThe DOM node. If none is specified, it is automatically created. \r\n\t\t\tif(args){\r\n\t\t\t\tlang.mixin(this, args);\r\n\t\t\t}\r\n\t\t\tthis.domNode = node || domConstruct.create(this.tag);\r\n\t\t\ticonUtils.createIcon(this.icon, this.iconPos, null, this.alt, this.domNode);\r\n\t\t\tthis._setCustomTransform();\r\n\t\t},\r\n\t\t_setCustomTransform: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTo be implemented in bidi/Icon.js.\r\n\t\t}\r\n\t});\r\n\treturn has(\"dojo-bidi\") ? declare(\"dojox.mobile.Icon\", [Icon, BidiIcon]) : Icon;\r\n});\r\n"]}