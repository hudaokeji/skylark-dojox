{"version":3,"sources":["mobile/Button.js"],"names":["define","array","declare","win","dom","domClass","domConstruct","touch","on","common","WidgetBase","ButtonMixin","FormWidgetMixin","has","BidiButton","Button","baseClass","_setTypeAttr","isFocusable","buildRendering","this","srcNodeRef","_cv","n","firstChild","nodeType","nodeValue","create","type","inherited","arguments","focusNode","domNode","postCreate","dojoClick","_this","press","e","preventDefault","disabled","_press","isFirstMoveDone","_moveh","doc","move","isDescendant","target","_endh","release","remove","setSelectable","connect","pressed","_pressed","button","newStateClasses","split","map","c","toggle","_setLabelAttr","content"],"mappings":";;;;;;;AAAAA,QACC,mBACA,qBACA,oBACA,WACA,iBACA,qBACA,aACA,UACA,WACA,oBACA,0BACA,8BACA,WACA,+CAEA,SAASC,EAAOC,EAASC,EAAKC,EAAKC,EAAUC,EAAcC,EAAOC,EAAIC,EAAQC,EAAYC,EAAaC,EAAiBC,EAAKC,GAE7H,IAAIC,EAASb,EAAQW,EAAI,aAAe,6BAA+B,uBAAwBH,EAAYE,EAAiBD,IAa3HK,UAAW,YAMXC,aAAc,KASdC,YAAa,WAEZ,OAAO,GAGRC,eAAgB,WACf,GAAIC,KAAKC,YAEH,GAAGD,KAAKE,IAAI,CACjB,IAAIC,EAAIH,KAAKC,WAAWG,WACrBD,GAAoB,IAAfA,EAAEE,WACTF,EAAEG,UAAYN,KAAKE,IAAIC,EAAEG,kBAJ1BN,KAAKC,WAAaf,EAAaqB,OAAO,UAAWC,KAAQR,KAAKQ,OAO/DR,KAAKS,UAAUC,WACfV,KAAKW,UAAYX,KAAKY,SAGvBC,WAAY,WACXb,KAAKS,UAAUC,WAKfV,KAAKY,QAAQE,UAAY,YAEzB,IAAIC,EAAQf,KACZA,KAAKZ,GAAGD,EAAM6B,MAAO,SAASC,GAG7B,GAFAA,EAAEC,kBAECH,EAAMH,QAAQO,SAAjB,CACAJ,EAAMK,QAAO,GAGb,IAAIC,GAAkB,EACtBN,EAAMO,OAASlC,EAAGL,EAAIwC,IAAKpC,EAAMqC,KAAM,SAASP,GAC3CI,IAMHJ,EAAEC,iBACFG,GAAkB,GAEnBN,EAAMK,OAAOpC,EAAIyC,aAAaR,EAAES,OAAQX,EAAMH,YAI/CG,EAAMY,MAAQvC,EAAGL,EAAIwC,IAAKpC,EAAMyC,QAAS,SAASX,GACjDF,EAAMK,QAAO,GACbL,EAAMO,OAAOO,SACbd,EAAMY,MAAME,cAIdxC,EAAOyC,cAAc9B,KAAKW,WAAW,GACrCX,KAAK+B,QAAQ/B,KAAKY,QAAS,UAAW,aAGvCQ,OAAQ,SAASY,GAGhB,GAAGA,GAAWhC,KAAKiC,SAAS,CAC3BjC,KAAKiC,SAAWD,EAChB,IAAIE,EAASlC,KAAKW,WAAaX,KAAKY,QAChCuB,GAAmBnC,KAAKJ,UAAY,IAAMI,KAAY,OAAGoC,MAAM,KACnED,EAAkBtD,EAAMwD,IAAIF,EAAiB,SAASG,GACrD,OAAOA,EAAI,aAEZrD,EAASsD,OAAOL,EAAQC,EAAiBH,KAI3CQ,cAAe,SAAoBC,GAGlCzC,KAAKS,UAAUC,WAAYV,KAAKE,IAAMF,KAAKE,IAAIuC,GAAWA,OAI5D,OAAOhD,EAAI,aAAeX,EAAQ,uBAAwBa,EAAQD,IAAeC","file":"../../mobile/Button.js","sourcesContent":["define([\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/window\",\r\n\t\"dojo/dom\",\r\n\t\"dojo/dom-class\",\r\n\t\"dojo/dom-construct\",\r\n\t\"dojo/touch\",\r\n\t\"dojo/on\",\r\n\t\"./common\",\r\n\t\"dijit/_WidgetBase\",\r\n\t\"dijit/form/_ButtonMixin\",\r\n\t\"dijit/form/_FormWidgetMixin\",\r\n\t\"dojo/has\",\r\n\t\"dojo/has!dojo-bidi?dojox/mobile/bidi/Button\"\r\n\t],\r\n\tfunction(array, declare, win, dom, domClass, domConstruct, touch, on, common, WidgetBase, ButtonMixin, FormWidgetMixin, has, BidiButton){\r\n\r\n\tvar Button = declare(has(\"dojo-bidi\") ? \"dojox.mobile.NonBidiButton\" : \"dojox.mobile.Button\", [WidgetBase, FormWidgetMixin, ButtonMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tNon-templated BUTTON widget with a thin API wrapper for click \r\n\t\t//\t\tevents and for setting the label.\r\n\t\t//\r\n\t\t//\t\tButtons can display a label, an icon, or both.\r\n\t\t//\t\tA label should always be specified (through innerHTML) or the label\r\n\t\t//\t\tattribute.  It can be hidden via showLabel=false.\r\n\t\t// example:\r\n\t\t//\t|\t<button data-dojo-type=\"dojox/mobile/Button\" onClick=\"...\">Hello world</button>\r\n\r\n\t\t// baseClass: String\r\n\t\t//\t\tThe name of the CSS class of this widget.\r\n\t\tbaseClass: \"mblButton\",\r\n\r\n\t\t// _setTypeAttr: [private] Function \r\n\t\t//\t\tOverrides the automatic assignment of type to nodes, because it causes\r\n\t\t//\t\texception on IE. Instead, the type must be specified as this.type\r\n\t\t//\t\twhen the node is created, as part of the original DOM.\r\n\t\t_setTypeAttr: null,\r\n\r\n\t\t/*=====\r\n\t\t// label: String\r\n\t\t//\t\tThe label of the button.\r\n\t\tlabel: \"\",\r\n\t\t=====*/\r\n\t\t\r\n\r\n\t\tisFocusable: function(){ \r\n\t\t\t// Override of the method of dijit/_WidgetBase.\r\n\t\t\treturn false; \r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tif(!this.srcNodeRef){\r\n\t\t\t\tthis.srcNodeRef = domConstruct.create(\"button\", {\"type\": this.type});\r\n\t\t\t}else if(this._cv){\r\n\t\t\t\tvar n = this.srcNodeRef.firstChild;\r\n\t\t\t\tif(n && n.nodeType === 3){\r\n\t\t\t\t\tn.nodeValue = this._cv(n.nodeValue);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.focusNode = this.domNode;\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// we need to ensure the synthetic click is emitted by \r\n\t\t\t// touch.doClicks even if we moved (inside or outside) before we \r\n\t\t\t// released in the button area.\r\n\t\t\tthis.domNode.dojoClick = \"useTarget\";\r\n\t\t\t// handle touch.press event\r\n\t\t\tvar _this = this;\r\n\t\t\tthis.on(touch.press, function(e){\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tif(_this.domNode.disabled){return;}\r\n\t\t\t\t_this._press(true);\r\n\r\n\t\t\t\t// change button state depending on where we are\r\n\t\t\t\tvar isFirstMoveDone = false;\r\n\t\t\t\t_this._moveh = on(win.doc, touch.move, function(e){\r\n\t\t\t\t\tif(!isFirstMoveDone){\r\n\t\t\t\t\t\t// #17220: preventDefault may not have any effect.\r\n\t\t\t\t\t\t// causing minor impact on some android \r\n\t\t\t\t\t\t// (Galaxy Tab 2 with stock browser 4.1.1) where button\r\n\t\t\t\t\t\t// display does not reflect the actual button state \r\n\t\t\t\t\t\t// when user moves back and forth from the button area.\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tisFirstMoveDone = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t_this._press(dom.isDescendant(e.target, _this.domNode));\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// handle touch.release \r\n\t\t\t\t_this._endh = on(win.doc, touch.release, function(e){\r\n\t\t\t\t\t_this._press(false);\r\n\t\t\t\t\t_this._moveh.remove();\r\n\t\t\t\t\t_this._endh.remove();\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tcommon.setSelectable(this.focusNode, false);\r\n\t\t\tthis.connect(this.domNode, \"onclick\", \"_onClick\");\r\n\t\t},\r\n\r\n\t\t_press: function(pressed){\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(pressed != this._pressed){\r\n\t\t\t\tthis._pressed = pressed;\r\n\t\t\t\tvar button = this.focusNode || this.domNode;\r\n\t\t\t\tvar newStateClasses = (this.baseClass + ' ' + this[\"class\"]).split(\" \");\r\n\t\t\t\tnewStateClasses = array.map(newStateClasses, function(c){\r\n\t\t\t\t\treturn c + \"Selected\";\r\n\t\t\t\t});\r\n\t\t\t\tdomClass.toggle(button, newStateClasses, pressed);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setLabelAttr: function(/*String*/ content){\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tthis.inherited(arguments, [this._cv ? this._cv(content) : content]);\r\n\t\t}\r\n\t});\r\n\r\n\treturn has(\"dojo-bidi\") ? declare(\"dojox.mobile.Button\", [Button, BidiButton]) : Button;\r\n});\r\n"]}