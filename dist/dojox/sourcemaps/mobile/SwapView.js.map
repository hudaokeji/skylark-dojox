{"version":3,"sources":["mobile/SwapView.js"],"names":["define","array","connect","declare","dom","domClass","registry","View","ScrollableMixin","has","css3","BidiSwapView","SwapView","scrollDir","weight","_endOfTransitionTimeoutHandle","buildRendering","this","inherited","arguments","add","domNode","setSelectable","containerNode","subscribe","noResize","startup","_started","resize","forEach","getChildren","child","onTouchStart","e","_siblingViewsInMotion","propagatable","preventDefault","event","stop","fromTop","offsetTop","nextView","stopAnimation","style","paddingTop","prevView","previousView","_setSiblingViewsInMotion","onTouchEnd","_moved","defer","handleNextPage","w","refNode","refId","byId","parentNode","getShowingView","goTo","handlePrevPage","dir","moveTo","view","_isShowing","performTransition","id","publish","isSwapView","node","nodeType","contains","n","nextSibling","byNode","previousSibling","scrollTo","to","newView","x","_beingFlipped","offsetWidth","display","findDisp","nodes","childNodes","i","length","slideTo","duration","easing","fake_pos","newX","pos","getPos","onAnimationEnd","target","onFlickAnimationEnd","remove","c","name","left","inMotion","inMotionAttributeValue","parent","setAttribute","getAttribute"],"mappings":"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","file":"../../mobile/SwapView.js","sourcesContent":["define([\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/connect\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/dom\",\r\n\t\"dojo/dom-class\",\r\n\t\"dijit/registry\",\r\n\t\"./View\",\r\n\t\"./_ScrollableMixin\",\r\n\t\"./sniff\",\r\n\t\"./_css3\",\r\n\t\"dojo/has!dojo-bidi?dojox/mobile/bidi/SwapView\"\r\n], function(array, connect, declare, dom, domClass, registry, View, ScrollableMixin, has, css3, BidiSwapView){\r\n\r\n\t// module:\r\n\t//\t\tdojox/mobile/SwapView\r\n\r\n\tvar SwapView = declare(has(\"dojo-bidi\") ? \"dojox.mobile.NonBidiSwapView\" : \"dojox.mobile.SwapView\", [View, ScrollableMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tA container that can be swiped horizontally.\r\n\t\t// description:\r\n\t\t//\t\tSwapView is a container widget which can be swiped horizontally. \r\n\t\t//\t\tSwapView is a subclass of dojox/mobile/View. It allows the user to \r\n\t\t//\t\tswipe the screen left or right to move between the views. When \r\n\t\t//\t\tSwapView is swiped, it finds an adjacent SwapView to open. When \r\n\t\t//\t\tthe transition is done, a topic \"/dojox/mobile/viewChanged\" is \r\n\t\t//\t\tpublished. Note that, to behave properly, the SwapView needs to \r\n\t\t//\t\toccupy the entire width of the screen.\r\n\r\n\t\t/* internal properties */\t\r\n\t\t// scrollDir: [private] String\r\n\t\t//\t\tScroll direction, used by dojox/mobile/scrollable (always \"f\" for this class).\r\n\t\tscrollDir: \"f\",\r\n\t\t// weight: [private] Number\r\n\t\t//\t\tFrictional weight used to compute scrolling speed.\r\n\t\tweight: 1.2,\r\n\r\n\t\t// _endOfTransitionTimeoutHandle: [private] Object\r\n\t\t//\t\tThe handle (returned by _WidgetBase.defer) for the timeout set on touchEnd in case\r\n\t\t//      the end of transition event is not fired by the browser.\r\n\t\t_endOfTransitionTimeoutHandle: null,\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tdomClass.add(this.domNode, \"mblSwapView\");\r\n\t\t\tthis.setSelectable(this.domNode, false);\r\n\t\t\tthis.containerNode = this.domNode;\r\n\t\t\tthis.subscribe(\"/dojox/mobile/nextPage\", \"handleNextPage\");\r\n\t\t\tthis.subscribe(\"/dojox/mobile/prevPage\", \"handlePrevPage\");\r\n\t\t\tthis.noResize = true; // not to call resize() from scrollable#init\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\tif(this._started){ return; }\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tresize: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalls resize() of each child widget.\r\n\t\t\tthis.inherited(arguments); // scrollable#resize() will be called\r\n\t\t\tarray.forEach(this.getChildren(), function(child){\r\n\t\t\t\tif(child.resize){ child.resize(); }\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tonTouchStart: function(/*Event*/e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal function to handle touchStart events.\r\n\t\t\tif(this._siblingViewsInMotion()){  // Ignore touchstart if the views are already in motion\r\n\t\t\t\tthis.propagatable ? e.preventDefault() : event.stop(e);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar fromTop = this.domNode.offsetTop;\r\n\t\t\tvar nextView = this.nextView(this.domNode);\r\n\t\t\tif(nextView){\r\n\t\t\t\tnextView.stopAnimation();\r\n\t\t\t\tdomClass.add(nextView.domNode, \"mblIn\");\r\n\t\t\t\t// Temporarily add padding to align with the fromNode while transition\r\n\t\t\t\tnextView.containerNode.style.paddingTop = fromTop + \"px\";\r\n\t\t\t}\r\n\t\t\tvar prevView = this.previousView(this.domNode);\r\n\t\t\tif(prevView){\r\n\t\t\t\tprevView.stopAnimation();\r\n\t\t\t\tdomClass.add(prevView.domNode, \"mblIn\");\r\n\t\t\t\t// Temporarily add padding to align with the fromNode while transition\r\n\t\t\t\tprevView.containerNode.style.paddingTop = fromTop + \"px\";\r\n\t\t\t}\r\n\t\t\tthis._setSiblingViewsInMotion(true);\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tonTouchEnd: function(/*Event*/e){\r\n\t\t\tif(e){\r\n\t\t\t\tif(!this._moved){ // No transition / animation following touchend in this case\r\n\t\t\t\t\tthis._setSiblingViewsInMotion(false);\r\n\t\t\t\t}else{ // There might be a transition / animation following touchend\r\n\t\t\t\t\t// As the webkitTransitionEndEvent is not always fired, make sure we call this._setSiblingViewsInMotion(false) even\r\n\t\t\t\t\t// if the event is not fired (and onFlickAnimationEnd is not called as a result)\r\n\t\t\t\t\tthis._endOfTransitionTimeoutHandle = this.defer(function(){\r\n\t\t\t\t\t\tthis._setSiblingViewsInMotion(false);\r\n\t\t\t\t\t}, 1000);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\thandleNextPage: function(/*Widget*/w){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the \"/dojox/mobile/nextPage\" topic is published.\r\n\t\t\tvar refNode = w.refId && dom.byId(w.refId) || w.domNode;\r\n\t\t\tif(this.domNode.parentNode !== refNode.parentNode){ return; }\r\n\t\t\tif(this.getShowingView() !== this){ return; }\r\n\t\t\tthis.goTo(1);\r\n\t\t},\r\n\r\n\t\thandlePrevPage: function(/*Widget*/w){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the \"/dojox/mobile/prevPage\" topic is published.\r\n\t\t\tvar refNode = w.refId && dom.byId(w.refId) || w.domNode;\r\n\t\t\tif(this.domNode.parentNode !== refNode.parentNode){ return; }\r\n\t\t\tif(this.getShowingView() !== this){ return; }\r\n\t\t\tthis.goTo(-1);\r\n\t\t},\r\n\r\n\t\tgoTo: function(/*Number*/dir, /*String?*/moveTo){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMoves to the next or previous view.\r\n\t\t\tvar view = moveTo ? registry.byId(moveTo) :\r\n\t\t\t\t((dir == 1) ? this.nextView(this.domNode) : this.previousView(this.domNode));\r\n\t\t\tif(view && view !== this){\r\n\t\t\t\tthis.stopAnimation(); // clean-up animation states\r\n\t\t\t\tview.stopAnimation();\r\n\t\t\t\tthis.domNode._isShowing = false; // update isShowing flag\r\n\t\t\t\tview.domNode._isShowing = true;\r\n\t\t\t\tthis.performTransition(view.id, dir, \"slide\", null, function(){\r\n\t\t\t\t\tconnect.publish(\"/dojox/mobile/viewChanged\", [view]);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tisSwapView: function(/*DomNode*/node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns true if the given node is a SwapView widget.\r\n\t\t\treturn (node && node.nodeType === 1 && domClass.contains(node, \"mblSwapView\"));\r\n\t\t},\r\n\r\n\t\tnextView: function(/*DomNode*/node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the next view.\r\n\t\t\tfor(var n = node.nextSibling; n; n = n.nextSibling){\r\n\t\t\t\tif(this.isSwapView(n)){ return registry.byNode(n); }\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\r\n\t\tpreviousView: function(/*DomNode*/node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the previous view.\r\n\t\t\tfor(var n = node.previousSibling; n; n = n.previousSibling){\r\n\t\t\t\tif(this.isSwapView(n)){ return registry.byNode(n); }\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\r\n\t\tscrollTo: function(/*Object*/to){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverrides dojox/mobile/scrollable.scrollTo().\r\n\t\t\tif(!this._beingFlipped){\r\n\t\t\t\tvar newView, x;\r\n\t\t\t\tif(to.x){\r\n\t\t\t\t\tif(to.x < 0){\r\n\t\t\t\t\t\tnewView = this.nextView(this.domNode);\r\n\t\t\t\t\t\tx = to.x + this.domNode.offsetWidth;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tnewView = this.previousView(this.domNode);\r\n\t\t\t\t\t\tx = to.x - this.domNode.offsetWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(newView){\r\n\t\t\t\t\tif(newView.domNode.style.display === \"none\"){\r\n\t\t\t\t\t\tnewView.domNode.style.display = \"\";\r\n\t\t\t\t\t\tnewView.resize();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnewView._beingFlipped = true;\r\n\t\t\t\t\tnewView.scrollTo({x:x});\r\n\t\t\t\t\tnewView._beingFlipped = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tfindDisp: function(/*DomNode*/node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverrides dojox/mobile/scrollable.findDisp().\r\n\t\t\t// description:\r\n\t\t\t//\t\tWhen this function is called from scrollable.js, there are\r\n\t\t\t//\t\ttwo visible views, one is the current view, the other is the\r\n\t\t\t//\t\tnext view. This function returns the current view, not the\r\n\t\t\t//\t\tnext view, which has the mblIn class.\r\n\t\t\tif(!domClass.contains(node, \"mblSwapView\")){\r\n\t\t\t\treturn this.inherited(arguments);\r\n\t\t\t}\r\n\t\t\tif(!node.parentNode){ return null; }\r\n\t\t\tvar nodes = node.parentNode.childNodes;\r\n\t\t\tfor(var i = 0; i < nodes.length; i++){\r\n\t\t\t\tvar n = nodes[i];\r\n\t\t\t\tif(n.nodeType === 1 && domClass.contains(n, \"mblSwapView\")\r\n\t\t\t\t    && !domClass.contains(n, \"mblIn\") && n.style.display !== \"none\"){\r\n\t\t\t\t\treturn n;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn node;\r\n\t\t},\r\n\r\n\t\tslideTo: function(/*Object*/to, /*Number*/duration, /*String*/easing, /*Object?*/fake_pos){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverrides dojox/mobile/scrollable.slideTo().\r\n\t\t\tif(!this._beingFlipped){\r\n\t\t\t\tvar w = this.domNode.offsetWidth;\r\n\t\t\t\tvar pos = fake_pos || this.getPos();\r\n\t\t\t\tvar newView, newX;\r\n\t\t\t\tif(pos.x < 0){ // moving to left\r\n\t\t\t\t\tnewView = this.nextView(this.domNode);\r\n\t\t\t\t\tif(pos.x < -w/4){ // slide to next\r\n\t\t\t\t\t\tif(newView){\r\n\t\t\t\t\t\t\tto.x = -w;\r\n\t\t\t\t\t\t\tnewX = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{ // go back\r\n\t\t\t\t\t\tif(newView){\r\n\t\t\t\t\t\t\tnewX = w;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{ // moving to right\r\n\t\t\t\t\tnewView = this.previousView(this.domNode);\r\n\t\t\t\t\tif(pos.x > w/4){ // slide to previous\r\n\t\t\t\t\t\tif(newView){\r\n\t\t\t\t\t\t\tto.x = w;\r\n\t\t\t\t\t\t\tnewX = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{ // go back\r\n\t\t\t\t\t\tif(newView){\r\n\t\t\t\t\t\t\tnewX = -w;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(newView){\r\n\t\t\t\t\tnewView._beingFlipped = true;\r\n\t\t\t\t\tnewView.slideTo({x:newX}, duration, easing);\r\n\t\t\t\t\tnewView._beingFlipped = false;\r\n\t\t\t\t\tnewView.domNode._isShowing = (newView && newX === 0);\r\n\t\t\t\t}\r\n\t\t\t\tthis.domNode._isShowing = !(newView && newX === 0);\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tonAnimationEnd: function(/*Event*/e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverrides dojox/mobile/View.onAnimationEnd().\r\n\t\t\tif(e && e.target && domClass.contains(e.target, \"mblScrollableScrollTo2\")){ return; }\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tonFlickAnimationEnd: function(/*Event*/e){\r\n\t\t\tif(this._endOfTransitionTimeoutHandle){\r\n\t\t\t\tthis._endOfTransitionTimeoutHandle = this._endOfTransitionTimeoutHandle.remove();\r\n\t\t\t}\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverrides dojox/mobile/scrollable.onFlickAnimationEnd().\r\n\t\t\tif(e && e.target && !domClass.contains(e.target, \"mblScrollableScrollTo2\")){ return; }\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tif(this.domNode._isShowing){\r\n\t\t\t\t// Hide all the views other than the currently showing one.\r\n\t\t\t\t// Otherwise, when the orientation is changed, other views\r\n\t\t\t\t// may appear unexpectedly.\r\n\t\t\t\tarray.forEach(this.domNode.parentNode.childNodes, function(c){\r\n\t\t\t\t\tif(this.isSwapView(c)){\r\n\t\t\t\t\t\tdomClass.remove(c, \"mblIn\");\r\n\t\t\t\t\t\tif(!c._isShowing){\r\n\t\t\t\t\t\t\tc.style.display = \"none\";\r\n\t\t\t\t\t\t\tc.style[css3.name(\"transform\")] = \"\";\r\n\t\t\t\t\t\t\tc.style.left = \"0px\"; // top/left mode needs this\r\n\t\t\t\t\t\t\t// reset the temporaty padding on the container node\r\n\t\t\t\t\t\t\tc.style.paddingTop = \"\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\t\t\t\tconnect.publish(\"/dojox/mobile/viewChanged\", [this]);\r\n\t\t\t\t// Reset the temporary padding\r\n\t\t\t\tthis.containerNode.style.paddingTop = \"\";\r\n\t\t\t}else if(!has(\"css3-animations\")){\r\n\t\t\t\tthis.containerNode.style.left = \"0px\"; // compat mode needs this\r\n\t\t\t}\r\n\t\t\tthis._setSiblingViewsInMotion(false);\r\n\t\t},\r\n\r\n\t\t_setSiblingViewsInMotion: function(/*Boolean*/inMotion){\r\n\t\t\tvar inMotionAttributeValue = inMotion ? \"true\" : false;\r\n\t\t\tvar parent = this.domNode.parentNode;\r\n\t\t\tif(parent){\r\n\t\t\t\tparent.setAttribute(\"data-dojox-mobile-swapview-inmotion\", inMotionAttributeValue);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_siblingViewsInMotion: function(){\r\n\t\t\tvar parent = this.domNode.parentNode;\r\n\t\t\tif(parent){\r\n\t\t\t\treturn parent.getAttribute(\"data-dojox-mobile-swapview-inmotion\") == \"true\";\r\n\t\t\t}else{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\treturn has(\"dojo-bidi\") ? declare(\"dojox.mobile.SwapView\", [SwapView, BidiSwapView]) : SwapView;\r\n});\r\n"]}