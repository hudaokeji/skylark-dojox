{"version":3,"sources":["mobile/IconContainer.js"],"names":["define","array","declare","lang","win","domConstruct","Contained","Container","WidgetBase","IconItem","Heading","View","defaultIcon","transition","pressedIconOpacity","iconBase","iconPos","back","label","single","editable","tag","baseClass","editableMixinClass","iconItemPaneContainerClass","iconItemPaneContainerProps","iconItemPaneClass","iconItemPaneProps","buildRendering","this","domNode","containerNode","srcNodeRef","create","_terminator","className","inherited","arguments","postCreate","startEdit","require","hitch","module","safeMixin","set","startup","_started","paneContainerWidget","place","view","appView","id","_this","onAfterTransitionIn","moveTo","dir","context","method","_opening","_open_1","style","visibility","target","heading","_heading","_cv","parentNode","addChild","w","getParent","body","appendChild","closeAll","forEach","getChildren","close","widget","insertIndex","paneWidget","removeChild","index","getIndexInParent","_setLabelAttr","text","s"],"mappings":"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","file":"../../mobile/IconContainer.js","sourcesContent":["define([\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/window\",\r\n\t\"dojo/dom-construct\",\r\n\t\"dijit/_Contained\",\r\n\t\"dijit/_Container\",\r\n\t\"dijit/_WidgetBase\",\r\n\t\"./IconItem\", // to load IconItem for you (no direct references)\r\n\t\"./Heading\",\r\n\t\"./View\"\r\n], function(array, declare, lang, win, domConstruct, Contained, Container, WidgetBase, IconItem, Heading, View){\r\n\r\n\t// module:\r\n\t//\t\tdojox/mobile/IconContainer\r\n\r\n\treturn declare(\"dojox.mobile.IconContainer\", [WidgetBase, Container, Contained],{\r\n\t\t// summary:\r\n\t\t//\t\tA container widget which can hold multiple icons.\r\n\t\t// description:\r\n\t\t//\t\tIconContainer is a container widget which can hold multiple\r\n\t\t//\t\ticons. Each icon must be a subclass of dojox/mobile/IconItem\r\n\t\t//\t\tand can be associated with a panel which opens when touching\r\n\t\t//\t\tthe icon.\r\n\r\n\t\t// defaultIcon: String\r\n\t\t//\t\tThe default fallback icon, which is displayed only when the\r\n\t\t//\t\tspecified icon has failed to load.\r\n\t\tdefaultIcon: \"\",\r\n\r\n\t\t// transition: [const] String\r\n\t\t//\t\tA type of animated transition effect. You can choose from the\r\n\t\t//\t\tstandard transition types: \"slide\", \"fade\", \"flip\", or from the\r\n\t\t//\t\textended transition types: \"cover\", \"coverv\", \"dissolve\",\r\n\t\t//\t\t\"reveal\", \"revealv\", \"scaleIn\", \"scaleOut\", \"slidev\",\r\n\t\t//\t\t\"swirl\", \"zoomIn\", \"zoomOut\", \"cube\", and \"swap\". If \"none\" is\r\n\t\t//\t\tspecified, the transition occurs immediately without animation. If\r\n\t\t//\t\t\"below\" is specified, the application contents are displayed\r\n\t\t//\t\tbelow the icons. The default value is \"below\". Note that changing \r\n\t\t//\t\tthe value of the property after the widget creation has no effect.\r\n\t\ttransition: \"below\",\r\n\r\n\t\t// pressedIconOpacity: Number\r\n\t\t//\t\tThe opacity of the pressed icon image. The default value is 0.4.\r\n\t\tpressedIconOpacity: 0.4,\r\n\r\n\t\t// iconBase: String\r\n\t\t//\t\tThe default icon path for child items.\r\n\t\ticonBase: \"\",\r\n\r\n\t\t// iconPos: String\r\n\t\t//\t\tThe default icon position for child items.\r\n\t\ticonPos: \"\",\r\n\r\n\t\t// back: String\r\n\t\t//\t\tA label for the navigational control.\r\n\t\tback: \"Home\",\r\n\r\n\t\t// label: String\r\n\t\t//\t\tA title text of the heading.\r\n\t\tlabel: \"My Application\",\r\n\r\n\t\t// single: Boolean\r\n\t\t//\t\tIf true, only one icon content can be opened at a time.\r\n\t\tsingle: false,\r\n\r\n\t\t// editable: [const] Boolean\r\n\t\t//\t\tIf true, the icons can be removed or reordered. You can enter\r\n\t\t//\t\tinto edit mode by pressing on a child IconItem until it starts shaking.\r\n\t\t//\t\tThe default value is false. Note that changing the value of the property after\r\n\t\t//\t\tthe widget creation has no effect.\r\n\t\teditable: false,\r\n\r\n\t\t// tag: String\r\n\t\t//\t\tA name of html tag to create as domNode.\r\n\t\ttag: \"ul\",\r\n\r\n\t\t/* internal properties */\t\r\n\t\tbaseClass: \"mblIconContainer\",\r\n\t\teditableMixinClass: \"dojox/mobile/_EditableIconMixin\",\r\n\t\ticonItemPaneContainerClass: \"dojox/mobile/Container\",\r\n\t\ticonItemPaneContainerProps: null,\r\n\t\ticonItemPaneClass: \"dojox/mobile/_IconItemPane\",\r\n\t\ticonItemPaneProps: null,\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.domNode = this.containerNode = this.srcNodeRef || domConstruct.create(this.tag);\r\n\t\t\t// _terminator is used to apply the clear:both style to terminate floating icons.\r\n\t\t\tthis._terminator = domConstruct.create(this.tag === \"ul\" ? \"li\" : \"div\",\r\n\t\t\t\t{className:\"mblIconItemTerminator\"}, this.domNode);\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tif(this.editable && !this.startEdit){ // if editable is true but editableMixinClass is not inherited\r\n\t\t\t\trequire([this.editableMixinClass], lang.hitch(this, function(module){\r\n\t\t\t\t\tdeclare.safeMixin(this, new module());\r\n\t\t\t\t\tthis.set(\"editable\", this.editable);\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\tif(this._started){ return; }\r\n\r\n\t\t\trequire([this.iconItemPaneContainerClass], lang.hitch(this, function(module){\r\n\t\t\t\tthis.paneContainerWidget = new module(this.iconItemPaneContainerProps);\r\n\t\t\t\tif(this.transition === \"below\"){\r\n\t\t\t\t\tdomConstruct.place(this.paneContainerWidget.domNode, this.domNode, \"after\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar view = this.appView = new View({id:this.id+\"_mblApplView\"});\r\n\t\t\t\t\tvar _this = this;\r\n\t\t\t\t\tview.onAfterTransitionIn = function(moveTo, dir, transition, context, method){\r\n\t\t\t\t\t\t_this._opening._open_1();\r\n\t\t\t\t\t};\r\n\t\t\t\t\tview.domNode.style.visibility = \"hidden\";\r\n\t\t\t\t\tvar heading = view._heading\r\n\t\t\t\t\t\t= new Heading({back: this._cv ? this._cv(this.back) : this.back,\r\n\t\t\t\t\t\t\t\t\t\tlabel: this._cv ? this._cv(this.label) : this.label,\r\n\t\t\t\t\t\t\t\t\t\tmoveTo: this.domNode.parentNode.id,\r\n\t\t\t\t\t\t\t\t\t\ttransition: this.transition == \"zoomIn\" ? \"zoomOut\" : this.transition});\r\n\t\t\t\t\tview.addChild(heading);\r\n\t\t\t\t\tview.addChild(this.paneContainerWidget);\r\n\r\n\t\t\t\t\tvar target;\r\n\t\t\t\t\tfor(var w = this.getParent(); w; w = w.getParent()){\r\n\t\t\t\t\t\tif(w instanceof View){\r\n\t\t\t\t\t\t\ttarget = w.domNode.parentNode;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!target){ target = win.body(); }\r\n\t\t\t\t\ttarget.appendChild(view.domNode);\r\n\r\n\t\t\t\t\tview.startup();\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tcloseAll: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCloses all the icon items.\r\n\t\t\tarray.forEach(this.getChildren(), function(w){\r\n\t\t\t\tw.close(true); // disables closing animation\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\taddChild: function(widget, /*Number?*/insertIndex){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\t// #16597: if removeChild(item) was called to remove the item, it also removes the paneWidget from its container,\r\n\t\t\t// But then calling addChild(item) again does not re-add it as it should: it was added the first time through startup\r\n\t\t\t// called by addChild, but startup is not called any more the subsequent times.\r\n\t\t\t// So we add the pane explicitly if it is orphan.\r\n\t\t\tif(this._started && widget.paneWidget && !widget.paneWidget.getParent()){\r\n\t\t\t\tthis.paneContainerWidget.addChild(widget.paneWidget, insertIndex);\r\n\t\t\t}\r\n\t\t\tthis.domNode.appendChild(this._terminator); // to ensure that _terminator is always the last node\r\n\t\t},\r\n\r\n\t\tremoveChild: function(/*Widget|Number*/widget){\r\n\t\t\tvar index = (typeof widget == \"number\") ? widget : widget.getIndexInParent();\r\n\t\t\tthis.paneContainerWidget.removeChild(index);\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\t\r\n\r\n\t\t_setLabelAttr: function(/*String*/text){\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(!this.appView){ return; }\r\n\t\t\tthis.label = text;\r\n\t\t\tvar s = this._cv ? this._cv(text) : text;\r\n\t\t\tthis.appView._heading.set(\"label\", s);\r\n\t\t}\r\n\t});\r\n});\r\n"]}