{"version":3,"sources":["mobile/ProgressIndicator.js"],"names":["define","config","declare","lang","domClass","domConstruct","domGeometry","domStyle","has","Contained","WidgetBase","css3","BidiProgressIndicator","cls","interval","size","removeOnStop","startSpinning","center","colors","baseClass","constructor","this","_bars","buildRendering","inherited","arguments","add","domNode","containerNode","create","className","spinnerNode","i","div","push","scale","start","set","transform","transformOrigin","setMarginBox","w","h","imageNode","img","l","Math","round","offsetWidth","t","offsetHeight","style","margin","cntr","_this","timer","setInterval","n","c","idx","backgroundColor","replace","stop","clearInterval","parentNode","removeChild","setImage","file","src","display","destroy","_instance","getInstance","props"],"mappings":"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","file":"../../mobile/ProgressIndicator.js","sourcesContent":["define([\r\n\t\"dojo/_base/config\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/dom-class\",\r\n\t\"dojo/dom-construct\",\r\n\t\"dojo/dom-geometry\",\r\n\t\"dojo/dom-style\",\r\n\t\"dojo/has\",\r\n\t\"dijit/_Contained\",\r\n\t\"dijit/_WidgetBase\",\r\n\t\"./_css3\",\r\n\t\"dojo/has!dojo-bidi?dojox/mobile/bidi/ProgressIndicator\"\r\n], function(config, declare, lang, domClass, domConstruct, domGeometry, domStyle, has, Contained, WidgetBase, css3, BidiProgressIndicator){\r\n\r\n\t// module:\r\n\t//\t\tdojox/mobile/ProgressIndicator\r\n\r\n\tvar cls = declare(\"dojox.mobile.ProgressIndicator\", [WidgetBase, Contained], {\r\n\t\t// summary:\r\n\t\t//\t\tA progress indication widget.\r\n\t\t// description:\r\n\t\t//\t\tProgressIndicator is a round spinning graphical representation\r\n\t\t//\t\tthat indicates the current task is ongoing.\r\n\r\n\t\t// interval: Number\r\n\t\t//\t\tThe time interval in milliseconds for updating the spinning\r\n\t\t//\t\tindicator.\r\n\t\tinterval: 100,\r\n\r\n\t\t// size: [const] Number\r\n\t\t//\t\tThe size of the indicator in pixels.\r\n\t\t//\t\tNote that changing the value of the property after the widget\r\n\t\t//\t\tcreation has no effect.\r\n\t\tsize: 40,\r\n\r\n\t\t// removeOnStop: Boolean\r\n\t\t//\t\tIf true, this widget is removed from the parent node\r\n\t\t//\t\twhen stop() is called.\r\n\t\tremoveOnStop: true,\r\n\r\n\t\t// startSpinning: Boolean\r\n\t\t//\t\tIf true, calls start() to run the indicator at startup.\r\n\t\tstartSpinning: false,\r\n\r\n\t\t// center: Boolean\r\n\t\t//\t\tIf true, the indicator is displayed as center aligned.\r\n\t\tcenter: true,\r\n\r\n\t\t// colors: String[]\r\n\t\t//\t\tAn array of indicator colors. 12 colors have to be given.\r\n\t\t//\t\tIf colors are not specified, CSS styles\r\n\t\t//\t\t(mblProg0Color - mblProg11Color) are used.\r\n\t\tcolors: null,\r\n\r\n\t\t/* internal properties */\r\n\t\t\r\n\t\t// baseClass: String\r\n\t\t//\t\tThe name of the CSS class of this widget.\t\r\n\t\tbaseClass: \"mblProgressIndicator\",\r\n\r\n\t\tconstructor: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates a new instance of the class.\r\n\t\t\tthis.colors = [];\r\n\t\t\tthis._bars = [];\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(this.center){\r\n\t\t\t\tdomClass.add(this.domNode, \"mblProgressIndicatorCenter\");\r\n\t\t\t}\r\n\t\t\tthis.containerNode = domConstruct.create(\"div\", {className:\"mblProgContainer\"}, this.domNode);\r\n\t\t\tthis.spinnerNode = domConstruct.create(\"div\", null, this.containerNode);\r\n\t\t\tfor(var i = 0; i < 12; i++){\r\n\t\t\t\tvar div = domConstruct.create(\"div\", {className:\"mblProg mblProg\"+i}, this.spinnerNode);\r\n\t\t\t\tthis._bars.push(div);\r\n\t\t\t}\r\n\t\t\tthis.scale(this.size);\r\n\t\t\tif(this.startSpinning){\r\n\t\t\t\tthis.start();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tscale: function(/*Number*/size){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tChanges the size of the indicator.\r\n\t\t\t// size:\r\n\t\t\t//\t\tThe size of the indicator in pixels.\r\n\t\t\tvar scale = size / 40;\r\n\t\t\tdomStyle.set(this.containerNode, css3.add({}, {\r\n\t\t\t\ttransform: \"scale(\" + scale + \")\",\r\n\t\t\t\ttransformOrigin: \"0 0\"\r\n\t\t\t}));\r\n\t\t\tdomGeometry.setMarginBox(this.domNode, {w:size, h:size});\r\n\t\t\tdomGeometry.setMarginBox(this.containerNode, {w:size / scale, h:size / scale});\r\n\t\t},\r\n\r\n\t\tstart: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStarts the spinning of the ProgressIndicator.\r\n\t\t\tif(this.imageNode){\r\n\t\t\t\tvar img = this.imageNode;\r\n\t\t\t\tvar l = Math.round((this.containerNode.offsetWidth - img.offsetWidth) / 2);\r\n\t\t\t\tvar t = Math.round((this.containerNode.offsetHeight - img.offsetHeight) / 2);\r\n\t\t\t\timg.style.margin = t+\"px \"+l+\"px\";\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar cntr = 0;\r\n\t\t\tvar _this = this;\r\n\t\t\tvar n = 12;\r\n\t\t\tthis.timer = setInterval(function(){\r\n\t\t\t\tcntr--;\r\n\t\t\t\tcntr = cntr < 0 ? n - 1 : cntr;\r\n\t\t\t\tvar c = _this.colors;\r\n\t\t\t\tfor(var i = 0; i < n; i++){\r\n\t\t\t\t\tvar idx = (cntr + i) % n;\r\n\t\t\t\t\tif(c[idx]){\r\n\t\t\t\t\t\t_this._bars[i].style.backgroundColor = c[idx];\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tdomClass.replace(_this._bars[i],\r\n\t\t\t\t\t\t\t\t\t\t \"mblProg\" + idx + \"Color\",\r\n\t\t\t\t\t\t\t\t\t\t \"mblProg\" + (idx === n - 1 ? 0 : idx + 1) + \"Color\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, this.interval);\r\n\t\t},\r\n\r\n\t\tstop: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStops the spinning of the ProgressIndicator.\r\n\t\t\tif(this.timer){\r\n\t\t\t\tclearInterval(this.timer);\r\n\t\t\t}\r\n\t\t\tthis.timer = null;\r\n\t\t\tif(this.removeOnStop && this.domNode && this.domNode.parentNode){\r\n\t\t\t\tthis.domNode.parentNode.removeChild(this.domNode);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetImage: function(/*String*/file){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets an indicator icon image file (typically animated GIF).\r\n\t\t\t//\t\tIf null is specified, restores the default spinner.\r\n\t\t\tif(file){\r\n\t\t\t\tthis.imageNode = domConstruct.create(\"img\", {src:file}, this.containerNode);\r\n\t\t\t\tthis.spinnerNode.style.display = \"none\";\r\n\t\t\t}else{\r\n\t\t\t\tif(this.imageNode){\r\n\t\t\t\t\tthis.containerNode.removeChild(this.imageNode);\r\n\t\t\t\t\tthis.imageNode = null;\r\n\t\t\t\t}\r\n\t\t\t\tthis.spinnerNode.style.display = \"\";\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(this === cls._instance){\r\n\t\t\t\tcls._instance = null;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tcls = has(\"dojo-bidi\") ? declare(\"dojox.mobile.ProgressIndicator\", [cls, BidiProgressIndicator]) : cls;\r\n\tcls._instance = null;\r\n\tcls.getInstance = function(props){\r\n\t\tif(!cls._instance){\r\n\t\t\tcls._instance = new cls(props);\r\n\t\t}\r\n\t\treturn cls._instance;\r\n\t};\r\n\r\n\treturn cls;\r\n});\r\n"]}