{"version":3,"sources":["mobile/app/_event.js"],"names":["dojo","provide","experimental","mixin","dojox","mobile","app","eventMap","connectFlick","target","context","method","startX","startY","currentX","currentY","connMove","connUp","direction","time","isFlick","onMove","connect","event","targetTouches","clientX","clientY","Date","getTime","onUp","stopEvent","Math","abs","disconnect","flickEvt","duration","isIPhone","isSafari","navigator","userAgent","indexOf","isWebOS","isAndroid","toLowerCase","onmousedown","mousedown","onmouseup","mouseup","onmousemove","mousemove","_oldConnect","_connect","obj","dontFix","global","Mojo","Event","flick"],"mappings":";;;;;;;AAAAA,KAAKC,QAAQ,2BACbD,KAAKE,aAAa,8BAElBF,KAAKG,MAAMC,MAAMC,OAAOC,KACvBC,YAEAC,aAAc,SAASC,EAAQC,EAASC,GAavC,IAAIC,EACAC,EAGAC,EACAC,EAEAC,EACAC,EAEAC,EAEAC,EAVAC,GAAU,EAyBVC,GAZWrB,KAAKsB,QAAQ,cAAeb,EAAQ,SAASc,GAC3DH,GAAU,EACVR,EAASW,EAAMC,cAAgBD,EAAMC,cAAc,GAAGC,QAAUF,EAAME,QACtEZ,EAASU,EAAMC,cAAgBD,EAAMC,cAAc,GAAGE,QAAUH,EAAMG,QAEtEP,GAAO,IAAKQ,MAAQC,UAEpBZ,EAAWhB,KAAKsB,QAAQb,EAAQ,cAAeY,GAC/CJ,EAASjB,KAAKsB,QAAQb,EAAQ,YAAaoB,KAI/B,SAASN,GACrBvB,KAAK8B,UAAUP,GAEfT,EAAWS,EAAMC,cAAgBD,EAAMC,cAAc,GAAGC,QAAUF,EAAME,QACxEV,EAAWQ,EAAMC,cAAgBD,EAAMC,cAAc,GAAGE,QAAUH,EAAMG,QACrEK,KAAKC,IAAID,KAAKC,IAAIlB,GAAYiB,KAAKC,IAAIpB,IAAW,IACpDQ,GAAU,EAEVF,EAAaJ,EAAWF,EAAU,MAAQ,OAClCmB,KAAKC,IAAID,KAAKC,IAAIjB,GAAYgB,KAAKC,IAAInB,IAAW,KAC1DO,GAAU,EAEVF,EAAaH,EAAWF,EAAU,MAAQ,SAIxCgB,EAAO,SAASN,GAMnB,GALAvB,KAAK8B,UAAUP,GAEfP,GAAYhB,KAAKiC,WAAWjB,GAC5BC,GAAUjB,KAAKiC,WAAWhB,GAEvBG,EAAQ,CACV,IAAIc,GACHzB,OAAQA,EACRS,UAAWA,EACXiB,UAAU,IAAKR,MAAQC,UAAYT,GAEjCT,GAAWC,EACbD,EAAQC,GAAQuB,GAEhBvB,EAAOuB,QAQZ9B,MAAMC,OAAOC,IAAI8B,SAAYpC,KAAKqC,WAC7BC,UAAUC,UAAUC,QAAQ,WAAa,GAC5CF,UAAUC,UAAUC,QAAQ,SAAW,GAEzCpC,MAAMC,OAAOC,IAAImC,QAAWH,UAAUC,UAAUC,QAAQ,UAAY,EACpEpC,MAAMC,OAAOC,IAAIoC,UAAaJ,UAAUC,UAAUI,cAAcH,QAAQ,YAAc,GAEnFpC,MAAMC,OAAOC,IAAI8B,UAAYhC,MAAMC,OAAOC,IAAIoC,aAIhDtC,MAAMC,OAAOC,IAAIC,UAChBqC,YAAa,eACbC,UAAW,eACXC,UAAW,aACXC,QAAS,aACTC,YAAa,cACbC,UAAW,gBAIbjD,KAAKkD,YAAclD,KAAKmD,SACxBnD,KAAKmD,SAAW,SAASC,EAAK7B,EAAOb,EAASC,EAAQ0C,GAErD,GAAY,UADZ9B,EAAQnB,MAAMC,OAAOC,IAAIC,SAASgB,IAAUA,IACZ,WAATA,EAAmB,CACzC,IAAGvB,KAAKsD,OAAa,KAGpB,OAAOlD,MAAMC,OAAOC,IAAIE,aAAa4C,EAAK1C,EAASC,GAFnDY,EAAQgC,KAAKC,MAAMC,MAMrB,OAAOzD,KAAKkD,YAAYE,EAAK7B,EAAOb,EAASC,EAAQ0C","file":"../../../mobile/app/_event.js","sourcesContent":["dojo.provide(\"dojox.mobile.app._event\");\r\ndojo.experimental(\"dojox.mobile.app._event.js\");\r\n\r\ndojo.mixin(dojox.mobile.app, {\r\n\teventMap: {},\r\n\r\n\tconnectFlick: function(target, context, method){\r\n\t\t// summary:\r\n\t\t//\t\tListens for a flick event on a DOM node.  If the mouse/touch\r\n\t\t//\t\tmoves more than 15 pixels in any given direction it is a flick.\r\n\t\t//\t\tThe synthetic event fired specifies the direction as:\r\n\t\t//\r\n\t\t//\t\t- ltr - Left to Right\r\n\t\t//\t\t- rtl - Right to Left\r\n\t\t//\t\t- ttb - Top To Bottom\r\n\t\t//\t\t- btt - Bottom To top\r\n\t\t// target: Node\r\n\t\t//\t\tThe DOM node to connect to\r\n\r\n\t\tvar startX;\r\n\t\tvar startY;\r\n\t\tvar isFlick = false;\r\n\r\n\t\tvar currentX;\r\n\t\tvar currentY;\r\n\r\n\t\tvar connMove;\r\n\t\tvar connUp;\r\n\r\n\t\tvar direction;\r\n\r\n\t\tvar time;\r\n\r\n\t\t// Listen to to the mousedown/touchstart event\r\n\t\tvar connDown = dojo.connect(\"onmousedown\", target, function(event){\r\n\t\t\tisFlick = false;\r\n\t\t\tstartX = event.targetTouches ? event.targetTouches[0].clientX : event.clientX;\r\n\t\t\tstartY = event.targetTouches ? event.targetTouches[0].clientY : event.clientY;\r\n\r\n\t\t\ttime = (new Date()).getTime();\r\n\r\n\t\t\tconnMove = dojo.connect(target, \"onmousemove\", onMove);\r\n\t\t\tconnUp = dojo.connect(target, \"onmouseup\", onUp);\r\n\t\t});\r\n\r\n\t\t// The function that handles the mousemove/touchmove event\r\n\t\tvar onMove = function(event){\r\n\t\t\tdojo.stopEvent(event);\r\n\r\n\t\t\tcurrentX = event.targetTouches ? event.targetTouches[0].clientX : event.clientX;\r\n\t\t\tcurrentY = event.targetTouches ? event.targetTouches[0].clientY : event.clientY;\r\n\t\t\tif(Math.abs(Math.abs(currentX) - Math.abs(startX)) > 15){\r\n\t\t\t\tisFlick = true;\r\n\r\n\t\t\t\tdirection = (currentX > startX) ? \"ltr\" : \"rtl\";\r\n\t\t\t}else if(Math.abs(Math.abs(currentY) - Math.abs(startY)) > 15){\r\n\t\t\t\tisFlick = true;\r\n\r\n\t\t\t\tdirection = (currentY > startY) ? \"ttb\" : \"btt\";\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tvar onUp = function(event){\r\n\t\t\tdojo.stopEvent(event);\r\n\r\n\t\t\tconnMove && dojo.disconnect(connMove);\r\n\t\t\tconnUp && dojo.disconnect(connUp);\r\n\r\n\t\t\tif(isFlick){\r\n\t\t\t\tvar flickEvt = {\r\n\t\t\t\t\ttarget: target,\r\n\t\t\t\t\tdirection: direction,\r\n\t\t\t\t\tduration: (new Date()).getTime() - time\r\n\t\t\t\t};\r\n\t\t\t\tif(context && method){\r\n\t\t\t\t\tcontext[method](flickEvt);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tmethod(flickEvt);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t}\r\n});\r\n\r\ndojox.mobile.app.isIPhone = (dojo.isSafari\r\n\t&& (navigator.userAgent.indexOf(\"iPhone\") > -1 ||\r\n\t\tnavigator.userAgent.indexOf(\"iPod\") > -1\r\n\t));\r\ndojox.mobile.app.isWebOS = (navigator.userAgent.indexOf(\"webOS\") > -1);\r\ndojox.mobile.app.isAndroid = (navigator.userAgent.toLowerCase().indexOf(\"android\") > -1);\r\n\r\nif(dojox.mobile.app.isIPhone || dojox.mobile.app.isAndroid){\r\n\t// We are touchable.\r\n\t// Override the dojo._connect function to replace mouse events with touch events\r\n\r\n\tdojox.mobile.app.eventMap = {\r\n\t\tonmousedown: \"ontouchstart\",\r\n\t\tmousedown: \"ontouchstart\",\r\n\t\tonmouseup: \"ontouchend\",\r\n\t\tmouseup: \"ontouchend\",\r\n\t\tonmousemove: \"ontouchmove\",\r\n\t\tmousemove: \"ontouchmove\"\r\n\t};\r\n\r\n}\r\ndojo._oldConnect = dojo._connect;\r\ndojo._connect = function(obj, event, context, method, dontFix){\r\n\tevent = dojox.mobile.app.eventMap[event] || event;\r\n\tif(event == \"flick\" || event == \"onflick\"){\r\n\t\tif(dojo.global[\"Mojo\"]){\r\n\t\t\tevent = Mojo.Event.flick;\r\n\t\t} else{\r\n\t\t\treturn dojox.mobile.app.connectFlick(obj, context, method);\r\n\t\t}\r\n\t}\r\n\r\n\treturn dojo._oldConnect(obj, event, context, method, dontFix);\r\n};"]}