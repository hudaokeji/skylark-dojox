{"version":3,"sources":["mobile/app/SceneController.js"],"names":["dojo","provide","experimental","require","app","dojox","mobile","templates","declare","View","stageController","keepScrollPos","init","sceneName","params","this","templateUrl","resolveTemplate","_deferredInit","Deferred","_setContents","xhrGet","url","handleAs","addCallback","hitch","templateHtml","domNode","innerHTML","sceneAssistantName","nameParts","split","i","length","substring","toUpperCase","_this","loadResourcesForScene","console","log","global","_initAssistant","assistantUrl","resolveAssistant","text","eval","e","cls","getObject","Error","assistant","controller","firstChild","setup","callback","query","selector","node","parse","widgets","_widgets","parser","set","getWindowSize","w","innerWidth","h","innerHeight","showAlertDialog","props","marginBox","dialog","AlertDialog","mixin","appendChild","show","popupSubMenu","info","widget","ListSelector","destroyOnHide","onChoose","choices","fromNode"],"mappings":"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","file":"../../../mobile/app/SceneController.js","sourcesContent":["dojo.provide(\"dojox.mobile.app.SceneController\");\r\ndojo.experimental(\"dojox.mobile.app.SceneController\");\r\ndojo.require(\"dojox.mobile._base\");\r\n\r\n(function(){\r\n\r\n\tvar app = dojox.mobile.app;\r\n\r\n\tvar templates = {};\r\n\r\n\tdojo.declare(\"dojox.mobile.app.SceneController\", dojox.mobile.View, {\r\n\r\n\t\tstageController: null,\r\n\r\n\t\tkeepScrollPos: false,\r\n\r\n\t\tinit: function(sceneName, params){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInitializes the scene by loading the HTML template and code, if it has\r\n\t\t\t//\t\tnot already been loaded\r\n\r\n\t\t\tthis.sceneName = sceneName;\r\n\t\t\tthis.params = params;\r\n\t\t\tvar templateUrl = app.resolveTemplate(sceneName);\r\n\r\n\t\t\tthis._deferredInit = new dojo.Deferred();\r\n\r\n\t\t\tif(templates[sceneName]){\r\n\t\t\t\t// If the template has been cached, do not load it again.\r\n\t\t\t\tthis._setContents(templates[sceneName]);\r\n\t\t\t}else{\r\n\t\t\t\t// Otherwise load the template\r\n\t\t\t\tdojo.xhrGet({\r\n\t\t\t\t\turl: templateUrl,\r\n\t\t\t\t\thandleAs: \"text\"\r\n\t\t\t\t}).addCallback(dojo.hitch(this, this._setContents));\r\n\t\t\t}\r\n\r\n\t\t\treturn this._deferredInit;\r\n\t\t},\r\n\r\n\t\t_setContents: function(templateHtml){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets the content of the View, and invokes either the loading or\r\n\t\t\t//\t\tinitialization of the scene assistant.\r\n\t\t\ttemplates[this.sceneName] = templateHtml;\r\n\r\n\t\t\tthis.domNode.innerHTML = \"<div>\" + templateHtml + \"</div>\";\r\n\r\n\t\t\tvar sceneAssistantName = \"\";\r\n\r\n\t\t\tvar nameParts = this.sceneName.split(\"-\");\r\n\r\n\t\t\tfor(var i = 0; i < nameParts.length; i++){\r\n\t\t\t\tsceneAssistantName += nameParts[i].substring(0, 1).toUpperCase()\r\n\t\t\t\t\t\t\t+ nameParts[i].substring(1);\r\n\t\t\t}\r\n\t\t\tsceneAssistantName += \"Assistant\";\r\n\t\t\tthis.sceneAssistantName = sceneAssistantName;\r\n\r\n\t\t\tvar _this = this;\r\n\r\n\t\t\tdojox.mobile.app.loadResourcesForScene(this.sceneName, function(){\r\n\r\n\t\t\t\tconsole.log(\"All resources for \",_this.sceneName,\" loaded\");\r\n\r\n\t\t\t\tvar assistant;\r\n\t\t\t\tif(typeof(dojo.global[sceneAssistantName]) != \"undefined\"){\r\n\t\t\t\t\t_this._initAssistant();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar assistantUrl = app.resolveAssistant(_this.sceneName);\r\n\r\n\t\t\t\t\tdojo.xhrGet({\r\n\t\t\t\t\t\turl: assistantUrl,\r\n\t\t\t\t\t\thandleAs: \"text\"\r\n\t\t\t\t\t}).addCallback(function(text){\r\n\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\tdojo.eval(text);\r\n\t\t\t\t\t\t}catch(e){\r\n\t\t\t\t\t\t\tconsole.log(\"Error initializing code for scene \" + _this.sceneName\r\n\t\t\t\t\t\t\t+ '. Please check for syntax errors');\r\n\t\t\t\t\t\t\tthrow e;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t_this._initAssistant();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t_initAssistant: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInitializes the scene assistant. At this point, the View is\r\n\t\t\t//\t\tpopulated with the HTML template, and the scene assistant type\r\n\t\t\t//\t\tis declared.\r\n\r\n\t\t\tconsole.log(\"Instantiating the scene assistant \" + this.sceneAssistantName);\r\n\r\n\t\t\tvar cls = dojo.getObject(this.sceneAssistantName);\r\n\r\n\t\t\tif(!cls){\r\n\t\t\t\tthrow Error(\"Unable to resolve scene assistant \"\r\n\t\t\t\t\t\t\t+ this.sceneAssistantName);\r\n\t\t\t}\r\n\r\n\t\t\tthis.assistant = new cls(this.params);\r\n\r\n\t\t\tthis.assistant.controller = this;\r\n\t\t\tthis.assistant.domNode = this.domNode.firstChild;\r\n\r\n\t\t\tthis.assistant.setup();\r\n\r\n\t\t\tthis._deferredInit.callback();\r\n\t\t},\r\n\r\n\t\tquery: function(selector, node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tQueries for DOM nodes within either the node passed in as an argument\r\n\t\t\t//\t\tor within this view.\r\n\r\n\t\t\treturn dojo.query(selector, node || this.domNode)\r\n\t\t},\r\n\r\n\t\tparse: function(node){\r\n\t\t\tvar widgets = this._widgets =\r\n\t\t\t\tdojox.mobile.parser.parse(node || this.domNode, {\r\n\t\t\t\t\tcontroller: this\r\n\t\t\t\t});\r\n\r\n\t\t\t// Tell all widgets what their controller is.\r\n\t\t\tfor(var i = 0; i < widgets.length; i++){\r\n\t\t\t\twidgets[i].set(\"controller\", this);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetWindowSize: function(){\r\n\t\t\t// TODO, this needs cross browser testing\r\n\r\n\t\t\treturn {\r\n\t\t\t\tw: dojo.global.innerWidth,\r\n\t\t\t\th: dojo.global.innerHeight\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tshowAlertDialog: function(props){\r\n\r\n\t\t\tvar size = dojo.marginBox(this.assistant.domNode);\r\n\t\t\tvar dialog = new dojox.mobile.app.AlertDialog(\r\n\t\t\t\t\tdojo.mixin(props, {controller: this}));\r\n\t\t\tthis.assistant.domNode.appendChild(dialog.domNode);\r\n\r\n\t\t\tconsole.log(\"Appended \" , dialog.domNode, \" to \", this.assistant.domNode);\r\n\t\t\tdialog.show();\r\n\t\t},\r\n\r\n\t\tpopupSubMenu: function(info){\r\n\t\t\tvar widget = new dojox.mobile.app.ListSelector({\r\n\t\t\t\tcontroller: this,\r\n\t\t\t\tdestroyOnHide: true,\r\n\t\t\t\tonChoose: info.onChoose\r\n\t\t\t});\r\n\r\n\t\t\tthis.assistant.domNode.appendChild(widget.domNode);\r\n\r\n\t\t\twidget.set(\"data\", info.choices);\r\n\t\t\twidget.show(info.fromNode);\r\n\t\t}\r\n\t});\r\n\r\n})();"]}