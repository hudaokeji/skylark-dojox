{"version":3,"sources":["mobile/app/_base.js"],"names":["dojo","provide","experimental","require","stageController","appInfo","rootNode","loadedResources","sceneResources","loadResources","resources","callback","resource","url","pop","source","module","console","log","toJson","moduleUrl","length","xhrGet","sync","addCallbacks","text","pushFirstScene","dojox","mobile","app","StageController","defaultInfo","id","version","initialScene","global","mixin","info","title","query","create","document","pushScene","init","node","hasNativeBack","body","STAGE_CONTROLLER_ACTIVE","subscribe","popScene","params","getActiveSceneController","showAlertDialog","sceneName","load","data","fromJson","i","scene","push","error","BackButton","override","connect","e","publish","Mojo","addClass","getStageController","loadResourcesForScene","resolveTemplate","resolveAssistant"],"mappings":"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","file":"../../../mobile/app/_base.js","sourcesContent":["dojo.provide(\"dojox.mobile.app._base\");\r\ndojo.experimental(\"dojox.mobile.app._base\");\r\n\r\ndojo.require(\"dijit._base\");\r\ndojo.require(\"dijit._WidgetBase\");\r\ndojo.require(\"dojox.mobile\");\r\ndojo.require(\"dojox.mobile.parser\");\r\ndojo.require(\"dojox.mobile.Button\");\r\n\r\ndojo.require(\"dojox.mobile.app._event\");\r\ndojo.require(\"dojox.mobile.app._Widget\");\r\ndojo.require(\"dojox.mobile.app.StageController\");\r\ndojo.require(\"dojox.mobile.app.SceneController\");\r\ndojo.require(\"dojox.mobile.app.SceneAssistant\");\r\ndojo.require(\"dojox.mobile.app.AlertDialog\");\r\ndojo.require(\"dojox.mobile.app.List\");\r\ndojo.require(\"dojox.mobile.app.ListSelector\");\r\ndojo.require(\"dojox.mobile.app.TextBox\");\r\ndojo.require(\"dojox.mobile.app.ImageView\");\r\ndojo.require(\"dojox.mobile.app.ImageThumbView\");\r\n\r\n(function(){\r\n\r\n\tvar stageController;\r\n\tvar appInfo;\r\n\r\n\tvar jsDependencies = [\r\n\t\t\"dojox.mobile\",\r\n\t\t\"dojox.mobile.parser\"\r\n\t];\r\n\r\n\tvar loadedResources = {};\r\n\tvar loadingDependencies;\r\n\r\n\tvar rootNode;\r\n\r\n\tvar sceneResources = [];\r\n\r\n\t// Load the required resources asynchronously, since not all mobile OSes\r\n\t// support dojo.require and sync XHR\r\n\tfunction loadResources(resources, callback){\r\n\t\t// summary:\r\n\t\t//\t\tLoads one or more JavaScript files asynchronously. When complete,\r\n\t\t//\t\tthe first scene is pushed onto the stack.\r\n\t\t// resources:\r\n\t\t//\t\tAn array of module names, e.g. 'dojox.mobile.AlertDialog'\r\n\r\n\t\tvar resource;\r\n\t\tvar url;\r\n\r\n\t\tdo {\r\n\t\t\tresource = resources.pop();\r\n\t\t\tif (resource.source) {\r\n\t\t\t\turl = resource.source;\r\n\t\t\t}else if (resource.module) {\r\n\t\t\t\turl= dojo.moduleUrl(resource.module)+\".js\";\r\n\t\t\t}else {\r\n\t\t\t\tconsole.log(\"Error: invalid JavaScript resource \" + dojo.toJson(resource));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}while (resources.length > 0 && loadedResources[url]);\r\n\r\n\t\tif(resources.length < 1 && loadedResources[url]){\r\n\t\t\t// All resources have already been loaded\r\n\t\t\tcallback();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tdojo.xhrGet({\r\n\t\t\turl: url,\r\n\t\t\tsync: false\r\n\t\t}).addCallbacks(function(text){\r\n\t\t\tdojo[\"eval\"](text);\r\n\t\t\tloadedResources[url] = true;\r\n\t\t\tif(resources.length > 0){\r\n\t\t\t\tloadResources(resources, callback);\r\n\t\t\t}else{\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t},\r\n\t\tfunction(){\r\n\t\t\tconsole.log(\"Failed to load resource \" + url);\r\n\t\t});\r\n\t}\r\n\r\n\tvar pushFirstScene = function(){\r\n\t\t// summary:\r\n\t\t//\t\tPushes the first scene onto the stack.\r\n\r\n\t\tstageController = new dojox.mobile.app.StageController(rootNode);\r\n\t\tvar defaultInfo = {\r\n\t\t\tid: \"com.test.app\",\r\n\t\t\tversion: \"1.0.0\",\r\n\t\t\tinitialScene: \"main\"\r\n\t\t};\r\n\r\n\t\t// If the application info has been defined, as it should be,\r\n\t\t// use it.\r\n\t\tif(dojo.global[\"appInfo\"]){\r\n\t\t\tdojo.mixin(defaultInfo, dojo.global[\"appInfo\"]);\r\n\t\t}\r\n\t\tappInfo = dojox.mobile.app.info = defaultInfo;\r\n\r\n\t\t// Set the document title from the app info title if it exists\r\n\t\tif(appInfo.title){\r\n\t\t\tvar titleNode = dojo.query(\"head title\")[0] ||\r\n\t\t\t\t\t\t\tdojo.create(\"title\", {},dojo.query(\"head\")[0]);\r\n\t\t\tdocument.title = appInfo.title;\r\n\t\t}\r\n\r\n\t\tstageController.pushScene(appInfo.initialScene);\r\n\t};\r\n\r\n\tvar initBackButton = function(){\r\n\t\tvar hasNativeBack = false;\r\n\t\tif(dojo.global.BackButton){\r\n\t\t\t// Android phonegap support\r\n\t\t\tBackButton.override();\r\n\t\t\tdojo.connect(document, 'backKeyDown', function(e) {\r\n\t\t\t\tdojo.publish(\"/dojox/mobile/app/goback\");\r\n\t\t\t});\r\n\t\t\thasNativeBack = true;\r\n\t\t}else if(dojo.global.Mojo){\r\n\t\t\t// TODO: add webOS support\r\n\t\t}\r\n\t\tif(hasNativeBack){\r\n\t\t\tdojo.addClass(dojo.body(), \"mblNativeBack\");\r\n\t\t}\r\n\t};\r\n\r\n\tdojo.mixin(dojox.mobile.app, {\r\n\t\tinit: function(node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInitializes the mobile app. Creates the\r\n\r\n\t\t\trootNode = node || dojo.body();\r\n\t\t\tdojox.mobile.app.STAGE_CONTROLLER_ACTIVE = true;\r\n\r\n\t\t\tdojo.subscribe(\"/dojox/mobile/app/goback\", function(){\r\n\t\t\t\tstageController.popScene();\r\n\t\t\t});\r\n\r\n\t\t\tdojo.subscribe(\"/dojox/mobile/app/alert\", function(params){\r\n\t\t\t\tdojox.mobile.app.getActiveSceneController().showAlertDialog(params);\r\n\t\t\t});\r\n\r\n\t\t\tdojo.subscribe(\"/dojox/mobile/app/pushScene\", function(sceneName, params){\r\n\t\t\t\tstageController.pushScene(sceneName, params || {});\r\n\t\t\t});\r\n\r\n\t\t\t// Get the list of files to load per scene/view\r\n\t\t\tdojo.xhrGet({\r\n\t\t\t\turl: \"view-resources.json\",\r\n\t\t\t\tload: function(data){\r\n\t\t\t\t\tvar resources = [];\r\n\r\n\t\t\t\t\tif(data){\r\n\t\t\t\t\t\t// Should be an array\r\n\t\t\t\t\t\tsceneResources = data = dojo.fromJson(data);\r\n\r\n\t\t\t\t\t\t// Get the list of files to load that have no scene\r\n\t\t\t\t\t\t// specified, and therefore should be loaded on\r\n\t\t\t\t\t\t// startup\r\n\t\t\t\t\t\tfor(var i = 0; i < data.length; i++){\r\n\t\t\t\t\t\t\tif(!data[i].scene){\r\n\t\t\t\t\t\t\t\tresources.push(data[i]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(resources.length > 0){\r\n\t\t\t\t\t\tloadResources(resources, pushFirstScene);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tpushFirstScene();\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terror: pushFirstScene\r\n\t\t\t});\r\n\r\n\t\t\tinitBackButton();\r\n\t\t},\r\n\r\n\t\tgetActiveSceneController: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGets the controller for the active scene.\r\n\r\n\t\t\treturn stageController.getActiveSceneController();\r\n\t\t},\r\n\r\n\t\tgetStageController: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGets the stage controller.\r\n\t\t\treturn stageController;\r\n\t\t},\r\n\r\n\t\tloadResources: function(resources, callback){\r\n\t\t\tloadResources(resources, callback);\r\n\t\t},\r\n\r\n\t\tloadResourcesForScene: function(sceneName, callback){\r\n\t\t\tvar resources = [];\r\n\r\n\t\t\t// Get the list of files to load that have no scene\r\n\t\t\t// specified, and therefore should be loaded on\r\n\t\t\t// startup\r\n\t\t\tfor(var i = 0; i < sceneResources.length; i++){\r\n\t\t\t\tif(sceneResources[i].scene == sceneName){\r\n\t\t\t\t\tresources.push(sceneResources[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(resources.length > 0){\r\n\t\t\t\tloadResources(resources, callback);\r\n\t\t\t}else{\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tresolveTemplate: function(sceneName){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGiven the name of a scene, returns the path to it's template\r\n\t\t\t//\t\tfile.  For example, for a scene named 'main', the file\r\n\t\t\t//\t\treturned is 'app/views/main/main-scene.html'\r\n\t\t\t//\t\tThis function can be overridden if it is desired to have\r\n\t\t\t//\t\ta different name to file mapping.\r\n\t\t\treturn \"app/views/\" + sceneName + \"/\" + sceneName + \"-scene.html\";\r\n\t\t},\r\n\r\n\t\tresolveAssistant: function(sceneName){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGiven the name of a scene, returns the path to it's assistant\r\n\t\t\t//\t\tfile.  For example, for a scene named 'main', the file\r\n\t\t\t//\t\treturned is 'app/assistants/main-assistant.js'\r\n\t\t\t//\t\tThis function can be overridden if it is desired to have\r\n\t\t\t//\t\ta different name to file mapping.\r\n\t\t\treturn \"app/assistants/\" + sceneName + \"-assistant.js\";\r\n\t\t}\r\n\t});\r\n})();"]}