{"version":3,"sources":["mobile/app/SceneAssistant.js"],"names":["dojo","provide","experimental","declare","constructor","setup","activate","params","deactivate","destroy","children","query","this","containerNode","map","dijit","byNode","forEach","child","destroyRecursive","disconnect","connect","obj","method","callback","_connects","push"],"mappings":";;;;;;;AAAAA,KAAKC,QAAQ,mCACbD,KAAKE,aAAa,mCAElBF,KAAKG,QAAQ,kCAAmC,MAI/CC,YAAa,aAIbC,MAAO,aAMPC,SAAU,SAASC,KAUnBC,WAAY,aAOZC,QAAS,WAER,IAAIC,EACHV,KAAKW,MAAM,eAAgBC,KAAKC,eAAeC,IAAIC,MAAMC,QAC1DhB,KAAKiB,QAAQP,EAAU,SAASQ,GAAQA,EAAMC,qBAE9CP,KAAKQ,cAGNC,QAAS,SAASC,EAAKC,EAAQC,GAC1BZ,KAAKa,YACRb,KAAKa,cAENb,KAAKa,UAAUC,KAAK1B,KAAKqB,QAAQC,EAAKC,EAAQC,KAG/CJ,WAAY,WACXpB,KAAKiB,QAAQL,KAAKa,UAAWzB,KAAKoB,YAClCR,KAAKa","file":"../../../mobile/app/SceneAssistant.js","sourcesContent":["dojo.provide(\"dojox.mobile.app.SceneAssistant\");\r\ndojo.experimental(\"dojox.mobile.app.SceneAssistant\");\r\n\r\ndojo.declare(\"dojox.mobile.app.SceneAssistant\", null, {\r\n\t// summary:\r\n\t//\t\tThe base class for all scene assistants.\r\n\r\n\tconstructor: function(){\r\n\r\n\t},\r\n\r\n\tsetup: function(){\r\n\t\t// summary:\r\n\t\t//\t\tCalled to set up the widget.  The UI is not visible at this time\r\n\r\n\t},\r\n\r\n\tactivate: function(params){\r\n\t\t// summary:\r\n\t\t//\t\tCalled each time the scene becomes visible.  This can be as a result\r\n\t\t//\t\tof a new scene being created, or a subsequent scene being destroyed\r\n\t\t//\t\tand control transferring back to this scene assistant.\r\n\t\t// params:\r\n\t\t//\t\tOptional parameters, only passed when a subsequent scene pops itself\r\n\t\t//\t\toff the stack and passes back data.\r\n\t},\r\n\r\n\tdeactivate: function(){\r\n\t\t// summary:\r\n\t\t//\t\tCalled each time the scene becomes invisible.  This can be as a result\r\n\t\t//\t\tof it being popped off the stack and destroyed,\r\n\t\t//\t\tor another scene being created and pushed on top of it on the stack\r\n\t},\r\n\r\n\tdestroy: function(){\r\n\t\r\n\t\tvar children =\r\n\t\t\tdojo.query(\"> [widgetId]\", this.containerNode).map(dijit.byNode);\r\n\t\tdojo.forEach(children, function(child){ child.destroyRecursive(); });\r\n\t\r\n\t\tthis.disconnect();\r\n\t},\r\n\r\n\tconnect: function(obj, method, callback){\r\n\t\tif(!this._connects){\r\n\t\t\tthis._connects = [];\r\n\t\t}\r\n\t\tthis._connects.push(dojo.connect(obj, method, callback));\r\n\t},\r\n\r\n\tdisconnect: function(){\r\n\t\tdojo.forEach(this._connects, dojo.disconnect);\r\n\t\tthis._connects = [];\r\n\t}\r\n});\r\n\r\n"]}