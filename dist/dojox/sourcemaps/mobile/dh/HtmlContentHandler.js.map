{"version":3,"sources":["mobile/dh/HtmlContentHandler.js"],"names":["define","dojo","array","declare","Deferred","domClass","domConstruct","registry","lazyLoadUtils","parse","content","target","refNode","this","execScript","container","create","innerHTML","style","visibility","insertBefore","when","instantiateLazyWidgets","view","i","len","childNodes","length","n","firstChild","nodeType","byNode","removeChild","contains","domNode","id","console","log"],"mappings":";;;;;;;AAAAA,QACC,oBACA,mBACA,qBACA,sBACA,iBACA,qBACA,iBACA,oBACE,SAASC,EAAMC,EAAOC,EAASC,EAAUC,EAAUC,EAAcC,EAAUC,GAK7E,OAAOL,EAAQ,qCAAsC,MAQpDM,MAAO,SAAoBC,EAAqBC,EAAqBC,GASjEC,KAAKC,aACPJ,EAAUG,KAAKC,WAAWJ,IAE3B,IAAIK,EAAYT,EAAaU,OAAO,OACnCC,UAAWP,EACXQ,OAAQC,WAAY,YAIrB,OAFAR,EAAOS,aAAaL,EAAWH,GAExBR,EAASiB,KAAKb,EAAcc,uBAAuBP,GAAY,WAGrE,IAAIQ,EAAMC,EAAGC,EACb,IAAID,EAAI,EAAGC,EAAMV,EAAUW,WAAWC,OAAQH,EAAIC,EAAKD,IAAI,CAC1D,IAAII,EAAIb,EAAUc,WACdN,GAAuB,IAAfK,EAAEE,WACbP,EAAOhB,EAASwB,OAAOH,IAExBjB,EAAOS,aAAaL,EAAUc,WAAYjB,GAG3C,OADAD,EAAOqB,YAAYjB,GACfQ,GAASlB,EAAS4B,SAASV,EAAKW,QAAS,WAItCX,EAAKY,IAHXC,QAAQC,IAAI,kDACL","file":"../../../mobile/dh/HtmlContentHandler.js","sourcesContent":["define([\r\n\t\"dojo/_base/kernel\",\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/Deferred\",\r\n\t\"dojo/dom-class\",\r\n\t\"dojo/dom-construct\",\r\n\t\"dijit/registry\",\r\n\t\"../lazyLoadUtils\"\r\n], function(dojo, array, declare, Deferred, domClass, domConstruct, registry, lazyLoadUtils){\r\n\r\n\t// module:\r\n\t//\t\tdojox/mobile/dh/HtmlContentHandler\r\n\r\n\treturn declare(\"dojox.mobile.dh.HtmlContentHandler\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tA HTML content handler.\r\n\t\t// description:\r\n\t\t//\t\tThis module is a content handler that creates a view from HTML\r\n\t\t//\t\tdata. If widgets used in the HTML data are not available, they\r\n\t\t//\t\tare loaded automatically before instantiation.\r\n\r\n\t\tparse: function(/*String*/ content, /*DomNode*/ target, /*DomNode?*/ refNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tParses the given data and creates a new view at the given position.\r\n\t\t\t// content:\r\n\t\t\t//\t\tContent data for a new view.\r\n\t\t\t// target:\r\n\t\t\t//\t\tA DOM node under which a new view is created.\r\n\t\t\t// refNode:\r\n\t\t\t//\t\tAn optional reference DOM node before which a new view is created.\r\n\t\t\tif(this.execScript){\r\n\t\t\t\tcontent = this.execScript(content);\r\n\t\t\t}\r\n\t\t\tvar container = domConstruct.create(\"div\", {\r\n\t\t\t\tinnerHTML: content,\r\n\t\t\t\tstyle: {visibility: \"hidden\"}\r\n\t\t\t});\r\n\t\t\ttarget.insertBefore(container, refNode);\r\n\r\n\t\t\treturn Deferred.when(lazyLoadUtils.instantiateLazyWidgets(container), function(){\r\n\t\t\t\t// allows multiple root nodes in the fragment,\r\n\t\t\t\t// but transition will be performed to the 1st view.\r\n\t\t\t\tvar view, i, len;\r\n\t\t\t\tfor(i = 0, len = container.childNodes.length; i < len; i++){\r\n\t\t\t\t\tvar n = container.firstChild;\r\n\t\t\t\t\tif(!view && n.nodeType === 1){\r\n\t\t\t\t\t\tview = registry.byNode(n);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttarget.insertBefore(container.firstChild, refNode); // reparent\r\n\t\t\t\t}\r\n\t\t\t\ttarget.removeChild(container);\r\n\t\t\t\tif(!view || !domClass.contains(view.domNode, \"mblView\")){\r\n\t\t\t\t\tconsole.log(\"HtmlContentHandler.parse: invalid view content\");\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\treturn view.id;\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n});\r\n"]}