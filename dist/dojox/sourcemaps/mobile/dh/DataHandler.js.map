{"version":3,"sources":["mobile/dh/DataHandler.js"],"names":["define","declare","lang","Deferred","ContentTypeMap","ds","target","refNode","constructor","this","processData","contentType","callback","ch","getHandlerClass","require","hitch","ContentHandler","when","getData","parse","text","id"],"mappings":";;;;;;;AAAAA,QACC,qBACA,kBACA,sBACA,oBACE,SAASC,EAASC,EAAMC,EAAUC,GAKpC,OAAOH,EAAQ,8BAA+B,MAS7CI,GAAI,KAIJC,OAAQ,KAIRC,QAAS,KAETC,YAAa,SAAwBH,EAAgBC,EAAqBC,GAGzEE,KAAKJ,GAAKA,EACVI,KAAKH,OAASA,EACdG,KAAKF,QAAUA,GAGhBG,YAAa,SAAoBC,EAA0BC,GAS1D,IAAIC,EAAKT,EAAeU,gBAAgBH,GACxCI,SAASF,GAAKX,EAAKc,MAAMP,KAAM,SAASQ,GACvCd,EAASe,KAAKT,KAAKJ,GAAGc,UAAWjB,EAAKc,MAAMP,KAAM,WACjDN,EAASe,MAAK,IAAID,GAAiBG,MAAMX,KAAKJ,GAAGgB,KAAMZ,KAAKH,OAAQG,KAAKF,SAAU,SAASe,GAC3FV,EAASU","file":"../../../mobile/dh/DataHandler.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/Deferred\",\r\n\t\"./ContentTypeMap\"\r\n], function(declare, lang, Deferred, ContentTypeMap){\r\n\r\n\t// module:\r\n\t//\t\tdojox/mobile/dh/DataHandler\r\n\r\n\treturn declare(\"dojox.mobile.dh.DataHandler\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tA component that provides an interface between data and handlers.\r\n\t\t// description:\r\n\t\t//\t\tThis module fetches data through DataSource and calls a\r\n\t\t//\t\tContentHandler to parse the content data and create a new view.\r\n\r\n\t\t// ds: Object\r\n\t\t//\t\tA DataSource instance.\r\n\t\tds: null,\r\n\r\n\t\t// target: DomNode\r\n\t\t//\t\tA DOM node under which a new view is created.\r\n\t\ttarget: null,\r\n\r\n\t\t// refNode: DomNode\r\n\t\t//\t\tAn optional reference DOM node before which a new view is created.\r\n\t\trefNode: null,\r\n\r\n\t\tconstructor: function(/*DataSource*/ ds, /*DomNode*/ target, /*DomNode?*/ refNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates a new instance of the class.\r\n\t\t\tthis.ds = ds;\r\n\t\t\tthis.target = target;\r\n\t\t\tthis.refNode = refNode;\r\n\t\t},\r\n\r\n\t\tprocessData: function(/*String*/ contentType, /*Function*/ callback){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFetches data through DataSource and passes it to a content\r\n\t\t\t//\t\thandler.\r\n\t\t\t// contentType:\r\n\t\t\t//\t\tThe type of the content. (ex. \"html\")\r\n\t\t\t//\t\tIt is used to determine what content handler to use.\r\n\t\t\t// callback:\r\n\t\t\t//\t\tA function to be called after creating a new view.\r\n\t\t\tvar ch = ContentTypeMap.getHandlerClass(contentType);\r\n\t\t\trequire([ch], lang.hitch(this, function(ContentHandler){\r\n\t\t\t\tDeferred.when(this.ds.getData(), lang.hitch(this, function(){\r\n\t\t\t\t\tDeferred.when(new ContentHandler().parse(this.ds.text, this.target, this.refNode), function(id){\r\n\t\t\t\t\t\tcallback(id);\r\n\t\t\t\t\t});\r\n\t\t\t\t}))\r\n\t\t\t}));\r\n\t\t}\r\n\t});\r\n});\r\n"]}