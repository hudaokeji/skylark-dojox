{"version":3,"sources":["mobile/SimpleDialog.js"],"names":["define","declare","win","domClass","domAttr","domConstruct","on","touch","registry","Pane","iconUtils","has","BidiSimpleDialog","SimpleDialog","top","left","modal","closeButton","closeButtonClass","tabIndex","_setTabIndexAttr","baseClass","_cover","buildRendering","this","containerNode","create","className","srcNodeRef","i","len","childNodes","length","appendChild","removeChild","firstChild","inherited","arguments","set","domNode","getElementsByClassName","titleNode","id","getUniqueId","textNode","add","style","display","closeButtonNode","createDomButton","connect","startup","_started","body","addCover","own","press","removeCover","_onCloseButtonClick","e","onCloseButtonClick","hide","_onKeyDown","keyCode","refresh","h","n","b","s","Math","round","offsetHeight","offsetWidth","global","innerHeight","doc","documentElement","clientHeight","innerWidth","clientWidth","show","diaglogButton","resize","focusNode","defer","focus"],"mappings":";;;;;;;AAAAA,QACC,qBACA,oBACA,iBACA,gBACA,qBACA,UACA,aACA,iBACA,SACA,cACA,WACA,qDACE,SAASC,EAASC,EAAKC,EAAUC,EAASC,EAAcC,EAAIC,EAAOC,EAAUC,EAAMC,EAAWC,EAAKC,GAIrG,IAAIC,EAAeZ,EAAQU,EAAI,aAAe,mCAAqC,4BAA6BF,GAqB/GK,IAAK,OAMLC,KAAM,OAKNC,OAAO,EAOPC,aAAa,EAIbC,iBAAkB,mCAKlBC,SAAU,IAIVC,iBAAkB,GAMlBC,UAAW,kBAIXC,UAEAC,eAAgB,WAEf,GADAC,KAAKC,cAAgBpB,EAAaqB,OAAO,OAAQC,UAAU,6BACxDH,KAAKI,WAEP,IAAI,IAAIC,EAAI,EAAGC,EAAMN,KAAKI,WAAWG,WAAWC,OAAQH,EAAIC,EAAKD,IAChEL,KAAKC,cAAcQ,YAAYT,KAAKI,WAAWM,YAAYV,KAAKI,WAAWO,aAM7E,GAHAX,KAAKY,UAAUC,WACfjC,EAAQkC,IAAId,KAAKe,QAAS,OAAQ,UAE/Bf,KAAKC,cAAce,uBAAuB,CACnC,IAAIC,EAAYjB,KAAKC,cAAce,uBAAuB,wBAAwB,GAC9EC,IACHA,EAAUC,GAAKD,EAAUC,IAAMlC,EAASmC,YAAY,oCACpDvC,EAAQkC,IAAId,KAAKe,QAAS,kBAAmBE,EAAUC,KAExD,IAAIE,EAAWpB,KAAKC,cAAce,uBAAuB,uBAAuB,GAC5EI,IACAA,EAASF,GAAKE,EAASF,IAAMlC,EAASmC,YAAY,mCAClDvC,EAAQkC,IAAId,KAAKe,QAAS,mBAAoBK,EAASF,KAGrEvC,EAAS0C,IAAIrB,KAAKe,QAAS,6BAC3Bf,KAAKe,QAAQO,MAAMC,QAAU,OAC7BvB,KAAKe,QAAQN,YAAYT,KAAKC,eAC3BD,KAAKP,cACPO,KAAKwB,gBAAkB3C,EAAaqB,OAAO,OAC1CC,UAAW,2BAA2BH,KAAKN,kBACzCM,KAAKe,SACR7B,EAAUuC,gBAAgBzB,KAAKwB,iBAC/BxB,KAAK0B,QAAQ1B,KAAKwB,gBAAiB,UAAW,wBAE/CxB,KAAK0B,QAAQ1B,KAAKe,QAAS,YAAa,eAGzCY,QAAS,WACL3B,KAAK4B,WACR5B,KAAKY,UAAUC,WACfnC,EAAImD,OAAOpB,YAAYT,KAAKe,WAG7Be,SAAU,WAGL9B,KAAKF,OAAO,GAKfE,KAAKF,OAAO,GAAGwB,MAAMC,QAAU,GAJ/BvB,KAAKF,OAAO,GAAKjB,EAAaqB,OAAO,OACpCC,UAAW,wBACTzB,EAAImD,QAKL1C,EAAI,kBAENa,KAAK+B,IAAIjD,EAAGkB,KAAKF,OAAO,GAAIf,EAAMiD,MAAO,gBAI3CC,YAAa,WAGZjC,KAAKF,OAAO,GAAGwB,MAAMC,QAAU,QAGhCW,oBAAqB,SAASC,IAGK,IAA/BnC,KAAKoC,mBAAmBD,IAC3BnC,KAAKqC,QAGND,mBAAoB,aAOpBE,WAAY,SAASH,GAGJ,IAAbA,EAAEI,SACJvC,KAAKqC,QAIPG,QAAS,WAGR,IACIC,EADAC,EAAI1C,KAAKe,QAEb,GAAGf,KAAKP,YAAY,CACnB,IAAIkD,EAAI3C,KAAKwB,gBACToB,EAAIC,KAAKC,MAAMH,EAAEI,aAAe,GACpCJ,EAAErB,MAAMhC,KAAOsD,EAAI,KACnBD,EAAErB,MAAM/B,KAAOmD,EAAEM,YAAcJ,EAAI,KAEpB,SAAb5C,KAAKV,KACPmD,EAAI/D,EAAIuE,OAAOC,aAAexE,EAAIyE,IAAIC,gBAAgBC,aACtDX,EAAEpB,MAAMhC,IAAMuD,KAAKC,OAAOL,EAAIC,EAAEK,cAAgB,GAAK,MAErDL,EAAEpB,MAAMhC,IAAMU,KAAKV,IAEH,SAAdU,KAAKT,MACPkD,EAAI/D,EAAIuE,OAAOK,YAAc5E,EAAIyE,IAAIC,gBAAgBG,YACrDb,EAAEpB,MAAM/B,KAAOsD,KAAKC,OAAOL,EAAIC,EAAEM,aAAe,GAAK,MAErDN,EAAEpB,MAAM/B,KAAOS,KAAKT,MAItBiE,KAAM,WAGL,GAAkC,KAA/BxD,KAAKe,QAAQO,MAAMC,QAAtB,CAOA,IAAIkC,EANDzD,KAAKR,OACPQ,KAAK8B,WAEN9B,KAAKe,QAAQO,MAAMC,QAAU,GAC7BvB,KAAK0D,SACL1D,KAAKwC,UAEFxC,KAAKe,QAAQC,yBACfyC,EAAgBzD,KAAKe,QAAQC,uBAAuB,yBAAyB,IAE9E,IAAI2C,EAAYF,GAAiBzD,KAAKwB,iBAAmBxB,KAAKe,QAE9Df,KAAK4D,MAAM,WAAYD,EAAUE,SAAW,OAG7CxB,KAAM,WAG6B,SAA/BrC,KAAKe,QAAQO,MAAMC,UACtBvB,KAAKe,QAAQO,MAAMC,QAAU,OAC1BvB,KAAKR,OACPQ,KAAKiC,kBAIR,OAAO9C,EAAI,aAAeV,EAAQ,6BAA8BY,EAAcD,IAAqBC","file":"../../mobile/SimpleDialog.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/window\",\r\n\t\"dojo/dom-class\",\r\n\t\"dojo/dom-attr\",\r\n\t\"dojo/dom-construct\",\r\n\t\"dojo/on\",\r\n\t\"dojo/touch\",\r\n\t\"dijit/registry\",\r\n\t\"./Pane\",\r\n\t\"./iconUtils\",\r\n\t\"dojo/has\",\r\n\t\"dojo/has!dojo-bidi?dojox/mobile/bidi/SimpleDialog\"\r\n], function(declare, win, domClass, domAttr, domConstruct, on, touch, registry, Pane, iconUtils, has, BidiSimpleDialog){\r\n\t// module:\r\n\t//\t\tdojox/mobile/SimpleDialog\r\n\r\n\tvar SimpleDialog = declare(has(\"dojo-bidi\") ? \"dojox.mobile.NonBidiSimpleDialog\" : \"dojox.mobile.SimpleDialog\", Pane, {\r\n\t\t// summary:\r\n\t\t//\t\tA dialog box for mobile.\r\n\t\t// description:\r\n\t\t//\t\tSimpleDialog is a dialog box for mobile.\r\n\t\t//\t\tWhen a SimpleDialog is created, it is initially hidden \r\n\t\t//\t\t(display=\"none\"). To show the dialog box, you need to\r\n\t\t//\t\tget a reference to the widget and to call its show() method.\r\n\t\t//\r\n\t\t//\t\tThe contents can be arbitrary HTML, text, or widgets. Note,\r\n\t\t//\t\thowever, that the widget is initially hidden. You need to be\r\n\t\t//\t\tcareful when you place in a SimpleDialog elements that cannot \r\n\t\t//\t\tbe initialized in hidden state.\r\n\t\t//\r\n\t\t//\t\tThis widget has much less functionalities than dijit/Dialog, \r\n\t\t//\t\tbut it has the advantage of a much smaller code size.\r\n\r\n\t\t// top: String\r\n\t\t//\t\tThe top edge position of the widget. If \"auto\", the widget is\r\n\t\t//\t\tplaced at the middle of the screen. Otherwise, the value\r\n\t\t//\t\t(ex. \"20px\") is used as the top style of widget's domNode.\r\n\t\ttop: \"auto\",\r\n\r\n\t\t// left: String\r\n\t\t//\t\tThe left edge position of the widget. If \"auto\", the widget is\r\n\t\t//\t\tplaced at the center of the screen. Otherwise, the value\r\n\t\t//\t\t(ex. \"20px\") is used as the left style of widget's domNode.\r\n\t\tleft: \"auto\",\r\n\r\n\t\t// modal: Boolean\r\n\t\t//\t\tIf true, a translucent cover is added over the entire page to\r\n\t\t//\t\tprevent the user from interacting with elements on the page.\r\n\t\tmodal: true,\r\n\r\n\t\t// closeButton: [const] Boolean\r\n\t\t//\t\tIf true, a button to close the dialog box is displayed at the\r\n\t\t//\t\ttop-right corner.\r\n\t\t//\t\tNote that changing the value of the property after the widget\r\n\t\t//\t\tcreation has no effect.\r\n\t\tcloseButton: false,\r\n\r\n\t\t// closeButtonClass: String\r\n\t\t//\t\tA class name of a DOM button to be used as a close button.\r\n\t\tcloseButtonClass: \"mblDomButtonSilverCircleRedCross\",\r\n\r\n\t\t// tabIndex: String\r\n\t\t//\t\tTabindex setting for the item so users can hit the tab key to\r\n\t\t//\t\tfocus on it.\r\n\t\ttabIndex: \"0\",\r\n\t\t\r\n\t\t// _setTabIndexAttr: [private] String\r\n\t\t//\t\tSets tabIndex to domNode.\r\n\t\t_setTabIndexAttr: \"\",\r\n\r\n\t\t/* internal properties */\t\r\n\t\t\r\n\t\t// baseClass: String\r\n\t\t//\t\tThe name of the CSS class of this widget.\r\n\t\tbaseClass: \"mblSimpleDialog\",\r\n\t\t\r\n\t\t// _cover: [private] Array\r\n\t\t//\t\tArray for sharing the cover instances.\r\n\t\t_cover: [],\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.containerNode = domConstruct.create(\"div\", {className:\"mblSimpleDialogContainer\"});\r\n\t\t\tif(this.srcNodeRef){\r\n\t\t\t\t// reparent\r\n\t\t\t\tfor(var i = 0, len = this.srcNodeRef.childNodes.length; i < len; i++){\r\n\t\t\t\t\tthis.containerNode.appendChild(this.srcNodeRef.removeChild(this.srcNodeRef.firstChild));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tdomAttr.set(this.domNode, \"role\", \"dialog\");\r\n\t\t\t\r\n\t\t\tif(this.containerNode.getElementsByClassName){ //TODO: Do we need to support IE8 a11y?\r\n\t            var titleNode = this.containerNode.getElementsByClassName(\"mblSimpleDialogTitle\")[0];\r\n\t            if (titleNode){\r\n\t            \ttitleNode.id = titleNode.id || registry.getUniqueId(\"dojo_mobile_mblSimpleDialogTitle\");\r\n\t            \tdomAttr.set(this.domNode, \"aria-labelledby\", titleNode.id);\r\n\t            }\r\n\t            var textNode = this.containerNode.getElementsByClassName(\"mblSimpleDialogText\")[0];\r\n\t            if (textNode){\r\n\t                textNode.id = textNode.id || registry.getUniqueId(\"dojo_mobile_mblSimpleDialogText\");\r\n\t                domAttr.set(this.domNode, \"aria-describedby\", textNode.id);\r\n\t            }\r\n\t\t\t}\r\n\t\t\tdomClass.add(this.domNode, \"mblSimpleDialogDecoration\");\r\n\t\t\tthis.domNode.style.display = \"none\";\r\n\t\t\tthis.domNode.appendChild(this.containerNode);\r\n\t\t\tif(this.closeButton){\r\n\t\t\t\tthis.closeButtonNode = domConstruct.create(\"div\", {\r\n\t\t\t\t\tclassName: \"mblSimpleDialogCloseBtn \"+this.closeButtonClass\r\n\t\t\t\t}, this.domNode);\r\n\t\t\t\ticonUtils.createDomButton(this.closeButtonNode);\r\n\t\t\t\tthis.connect(this.closeButtonNode, \"onclick\", \"_onCloseButtonClick\");\r\n\t\t\t}\r\n\t\t\tthis.connect(this.domNode, \"onkeydown\", \"_onKeyDown\"); // for desktop browsers\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\tif(this._started){ return; }\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\twin.body().appendChild(this.domNode);\r\n\t\t},\r\n\r\n\t\taddCover: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdds the transparent DIV cover.\r\n\t\t\tif(!this._cover[0]){\r\n\t\t\t\tthis._cover[0] = domConstruct.create(\"div\", {\r\n\t\t\t\t\tclassName: \"mblSimpleDialogCover\"\r\n\t\t\t\t}, win.body());\r\n\t\t\t}else{\r\n\t\t\t\tthis._cover[0].style.display = \"\";\r\n\t\t\t}\r\n\r\n\t\t\tif(has(\"windows-theme\")) {\r\n\t\t\t\t// Hack to prevent interaction with elements placed under cover div.\r\n\t\t\t\tthis.own(on(this._cover[0], touch.press, function() {}));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tremoveCover: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRemoves the transparent DIV cover.\r\n\t\t\tthis._cover[0].style.display = \"none\";\r\n\t\t},\r\n\r\n\t\t_onCloseButtonClick: function(e){\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(this.onCloseButtonClick(e) === false){ return; } // user's click action\r\n\t\t\tthis.hide();\r\n\t\t},\r\n\r\n\t\tonCloseButtonClick: function(/*Event*/ /*===== e =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUser-defined function to handle clicks.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\t_onKeyDown: function(e){\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(e.keyCode == 27){ // ESC\r\n\t\t\t\tthis.hide();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\trefresh: function(){ // TODO: should we call refresh on resize?\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRefreshes the layout of the dialog.\r\n\t\t\tvar n = this.domNode;\r\n\t\t\tvar h;\r\n\t\t\tif(this.closeButton){\r\n\t\t\t\tvar b = this.closeButtonNode;\r\n\t\t\t\tvar s = Math.round(b.offsetHeight / 2);\r\n\t\t\t\tb.style.top = -s + \"px\";\r\n\t\t\t\tb.style.left = n.offsetWidth - s + \"px\";\r\n\t\t\t}\r\n\t\t\tif(this.top === \"auto\"){\r\n\t\t\t\th = win.global.innerHeight || win.doc.documentElement.clientHeight;\r\n\t\t\t\tn.style.top = Math.round((h - n.offsetHeight) / 2) + \"px\";\r\n\t\t\t}else{\r\n\t\t\t\tn.style.top = this.top;\r\n\t\t\t}\r\n\t\t\tif(this.left === \"auto\"){\r\n\t\t\t\th = win.global.innerWidth || win.doc.documentElement.clientWidth;\r\n\t\t\t\tn.style.left = Math.round((h - n.offsetWidth) / 2) + \"px\";\r\n\t\t\t}else{\r\n\t\t\t\tn.style.left = this.left;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tshow: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tShows the dialog.\r\n\t\t\tif(this.domNode.style.display === \"\"){ return; }\r\n\t\t\tif(this.modal){\r\n\t\t\t\tthis.addCover();\r\n\t\t\t}\r\n\t\t\tthis.domNode.style.display = \"\";\r\n\t\t\tthis.resize(); // #15628\r\n\t\t\tthis.refresh();\r\n\t\t\tvar diaglogButton;\r\n\t\t\tif(this.domNode.getElementsByClassName){\r\n\t\t\t\tdiaglogButton = this.domNode.getElementsByClassName(\"mblSimpleDialogButton\")[0];\r\n\t\t\t}\r\n\t\t\tvar focusNode = diaglogButton || this.closeButtonNode || this.domNode; // Focus preference is: user supplied button, close button, entire dialog\r\n\t\t\t/// on Safari iOS the focus is not taken without a timeout\r\n\t\t\tthis.defer(function(){ focusNode.focus();}, 1000);\r\n\t\t},\r\n\r\n\t\thide: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHides the dialog.\r\n\t\t\tif(this.domNode.style.display === \"none\"){ return; }\r\n\t\t\tthis.domNode.style.display = \"none\";\r\n\t\t\tif(this.modal){\r\n\t\t\t\tthis.removeCover();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\treturn has(\"dojo-bidi\") ? declare(\"dojox.mobile.SimpleDialog\", [SimpleDialog, BidiSimpleDialog]) : SimpleDialog;\r\n});\r\n"]}