{"version":3,"sources":["mobile/lazyLoadUtils.js"],"names":["define","dojo","array","config","win","Deferred","ready","this","_lazyNodes","_this","parseOnLoad","i","j","nodes","n","lazyNodes","filter","body","getElementsByTagName","getAttribute","match","length","forEach","a","setAttribute","removeAttribute","push","instantiateLazyWidgets","root","requires","callback","d","req","split","len","s","m","mixins","concat","require","c","parser","parse","map","replace","resolve"],"mappings":";;;;;;;AAAAA,QACC,oBACA,mBACA,oBACA,oBACA,sBACA,cACE,SAASC,EAAMC,EAAOC,EAAQC,EAAKC,EAAUC,GAsF/C,OAAO,IAjFa,WAInBC,KAAKC,cACL,IAAIC,EAAQF,KACTJ,EAAOO,aACTJ,EAAM,GAAI,WACT,IAEIK,EAAGC,EAAGC,EAAUC,EAFhBC,EAAYb,EAAMc,OAAOZ,EAAIa,OAAOC,qBAAqB,KAC5D,SAASJ,GAAI,MAAkC,SAA3BA,EAAEK,aAAa,UAAuBL,EAAEK,aAAa,oBAAoB,IAAIC,MAAM,qBAExG,IAAIT,EAAI,EAAGA,EAAII,EAAUM,OAAQV,IAChCT,EAAMoB,SAAS,WAAY,kBAAmB,SAASC,GAGtD,IAFAV,EAAQX,EAAMc,OAAOD,EAAUJ,GAAGO,qBAAqB,KAClD,SAASJ,GAAI,OAAOA,EAAEK,aAAaI,KACpCX,EAAI,EAAGA,EAAIC,EAAMQ,OAAQT,KAC5BE,EAAID,EAAMD,IACRY,aAAa,KAAOD,EAAGT,EAAEK,aAAaI,IACxCT,EAAEW,gBAAgBF,GAClBd,EAAMD,WAAWkB,KAAKZ,OAO3BR,EAAM,WACL,IAAI,IAAIK,EAAI,EAAGA,EAAIF,EAAMD,WAAWa,OAAQV,IAAI,CAC/C,IAAIG,EAAIL,EAAMD,WAAWG,GACzBT,EAAMoB,SAAS,WAAY,kBAAmB,SAASC,GACnDT,EAAEK,aAAa,KAAOI,KACxBT,EAAEU,aAAaD,EAAGT,EAAEK,aAAa,KAAOI,IACxCT,EAAEW,gBAAgB,KAAOF,aAIrBd,EAAMD,aAIdD,KAAKoB,uBAAyB,SAASC,EAAMC,EAAUC,GAUtD,IAJA,IAAIC,EAAI,IAAI1B,EACR2B,EAAMH,EAAWA,EAASI,MAAM,QAChCpB,EAAQe,EAAKV,qBAAqB,KAClCgB,EAAMrB,EAAMQ,OACRV,EAAI,EAAGA,EAAIuB,EAAKvB,IAAI,CAC3B,IAAIwB,EAAItB,EAAMF,GAAGQ,aAAa,aAAeN,EAAMF,GAAGQ,aAAa,kBACnE,GAAGgB,EAAE,CACJH,EAAIN,KAAKS,GACT,IAAIC,EAAIvB,EAAMF,GAAGQ,aAAa,oBAC7BkB,EAASD,EAAIA,EAAEH,MAAM,UACtBD,EAAMA,EAAIM,OAAOD,IAGnB,OAAkB,IAAfL,EAAIX,SAEJpB,EAAKsC,SACPrC,EAAMoB,QAAQU,EAAK,SAASQ,GAC3BvC,EAAc,QAAEuC,KAEjBvC,EAAKwC,OAAOC,MAAMd,GACfE,GAAWA,EAASF,IAChB,IAEPI,EAAM9B,EAAMyC,IAAIX,EAAK,SAASG,GAAI,OAAOA,EAAES,QAAQ,MAAO,OAC1DL,QAAQP,EAAK,WACZ/B,EAAKwC,OAAOC,MAAMd,GACfE,GAAWA,EAASF,GACvBG,EAAEc,SAAQ,KAGLd","file":"../../mobile/lazyLoadUtils.js","sourcesContent":["define([\r\n\t\"dojo/_base/kernel\",\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/config\",\r\n\t\"dojo/_base/window\",\r\n\t\"dojo/_base/Deferred\",\r\n\t\"dojo/ready\"\r\n], function(dojo, array, config, win, Deferred, ready){\r\n\r\n\t// module:\r\n\t//\t\tdojox/mobile/lazyLoadUtils\r\n\r\n\tvar LazyLoadUtils = function(){\r\n\t\t// summary:\r\n\t\t//\t\tUtilities to lazy-loading of Dojo widgets.\r\n\r\n\t\tthis._lazyNodes = [];\r\n\t\tvar _this = this;\r\n\t\tif(config.parseOnLoad){\r\n\t\t\tready(90, function(){\r\n\t\t\t\tvar lazyNodes = array.filter(win.body().getElementsByTagName(\"*\"), // avoid use of dojo.query\r\n\t\t\t\t\tfunction(n){ return n.getAttribute(\"lazy\") === \"true\" || (n.getAttribute(\"data-dojo-props\")||\"\").match(/lazy\\s*:\\s*true/); });\r\n\t\t\t\tvar i, j, nodes, s, n;\r\n\t\t\t\tfor(i = 0; i < lazyNodes.length; i++){\r\n\t\t\t\t\tarray.forEach([\"dojoType\", \"data-dojo-type\"], function(a){\r\n\t\t\t\t\t\tnodes = array.filter(lazyNodes[i].getElementsByTagName(\"*\"),\r\n\t\t\t\t\t\t\t\t\t\t\tfunction(n){ return n.getAttribute(a); });\r\n\t\t\t\t\t\tfor(j = 0; j < nodes.length; j++){\r\n\t\t\t\t\t\t\tn = nodes[j];\r\n\t\t\t\t\t\t\tn.setAttribute(\"__\" + a, n.getAttribute(a));\r\n\t\t\t\t\t\t\tn.removeAttribute(a);\r\n\t\t\t\t\t\t\t_this._lazyNodes.push(n);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tready(function(){\r\n\t\t\tfor(var i = 0; i < _this._lazyNodes.length; i++){ /* 1.8 */\r\n\t\t\t\tvar n = _this._lazyNodes[i];\r\n\t\t\t\tarray.forEach([\"dojoType\", \"data-dojo-type\"], function(a){\r\n\t\t\t\t\tif(n.getAttribute(\"__\" + a)){\r\n\t\t\t\t\t\tn.setAttribute(a, n.getAttribute(\"__\" + a));\r\n\t\t\t\t\t\tn.removeAttribute(\"__\" + a);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tdelete _this._lazyNodes;\r\n\r\n\t\t});\r\n\r\n\t\tthis.instantiateLazyWidgets = function(root, requires, callback){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInstantiates dojo widgets under the root node.\r\n\t\t\t// description:\r\n\t\t\t//\t\tFinds DOM nodes that have the dojoType or data-dojo-type attributes,\r\n\t\t\t//\t\trequires the found Dojo modules, and runs the parser.\r\n\t\t\tvar d = new Deferred();\r\n\t\t\tvar req = requires ? requires.split(/,/) : [];\r\n\t\t\tvar nodes = root.getElementsByTagName(\"*\"); // avoid use of dojo.query\r\n\t\t\tvar len = nodes.length;\r\n\t\t\tfor(var i = 0; i < len; i++){\r\n\t\t\t\tvar s = nodes[i].getAttribute(\"dojoType\") || nodes[i].getAttribute(\"data-dojo-type\");\r\n\t\t\t\tif(s){\r\n\t\t\t\t\treq.push(s);\r\n\t\t\t\t\tvar m = nodes[i].getAttribute(\"data-dojo-mixins\"),\r\n\t\t\t\t\t\tmixins = m ? m.split(/, */) : [];\r\n\t\t\t\t\treq = req.concat(mixins);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(req.length === 0){ return true; }\r\n\r\n\t\t\tif(dojo.require){\r\n\t\t\t\tarray.forEach(req, function(c){\r\n\t\t\t\t\tdojo[\"require\"](c);\r\n\t\t\t\t});\r\n\t\t\t\tdojo.parser.parse(root);\r\n\t\t\t\tif(callback){ callback(root); }\r\n\t\t\t\treturn true;\r\n\t\t\t}else{\r\n\t\t\t\treq = array.map(req, function(s){ return s.replace(/\\./g, \"/\"); });\r\n\t\t\t\trequire(req, function(){\r\n\t\t\t\t\tdojo.parser.parse(root);\r\n\t\t\t\t\tif(callback){ callback(root); }\r\n\t\t\t\t\td.resolve(true);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn d;\r\n\t\t}\t\r\n\t};\r\n\r\n\t// Return singleton.  (TODO: can we replace LazyLoadUtils class and singleton w/a simple hash of functions?)\r\n\treturn new LazyLoadUtils();\r\n});\r\n\r\n"]}