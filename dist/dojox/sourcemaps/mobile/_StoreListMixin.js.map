{"version":3,"sources":["mobile/_StoreListMixin.js"],"names":["define","array","declare","StoreMixin","ListItem","has","BidiStoreListMixin","_StoreListMixin","append","itemMap","itemRenderer","buildRendering","this","inherited","arguments","store","setStore","query","queryOptions","createListItem","item","_createItemProperties","props","name","labelProperty","isLeftToRight","_setDirAttr","generateList","items","forEach","getChildren","child","destroyRecursive","index","addChild","childrenProperty","onComplete","onError","onAdd","insertedInto","onUpdate","set","onDelete","removedFrom"],"mappings":";;;;;;;AAAAA,QACC,mBACA,qBACA,gBACA,aACA,WACA,wDACE,SAASC,EAAOC,EAASC,EAAYC,EAAUC,EAAKC,GAKtD,IAAIC,EAAkBL,EAAQG,EAAI,aAAe,sCAAwC,+BAAgCF,GAaxHK,QAAQ,EAKRC,QAAS,KAITC,aAAcN,EAEdO,eAAgB,WAEf,GADAC,KAAKC,UAAUC,WACXF,KAAKG,MAAT,CACA,IAAIA,EAAQH,KAAKG,MACjBH,KAAKG,MAAQ,KACbH,KAAKI,SAASD,EAAOH,KAAKK,MAAOL,KAAKM,gBAGvCC,eAAgB,SAAmBC,GAGlC,OAAO,IAAIR,KAAKF,aAAaE,KAAKS,sBAAsBD,KAGzDC,sBAAuB,SAAmBD,GAGzC,IAAIE,KAUJ,IAAI,IAAIC,KATJH,EAAY,QACfE,EAAa,MAAIF,EAAKR,KAAKY,gBAKzBnB,EAAI,mBAAuC,IAAhBiB,EAAW,MACxCA,EAAW,IAAIV,KAAKa,gBAAkB,MAAQ,OAE/BL,EACfE,EAAOV,KAAKH,SAAWG,KAAKH,QAAQc,IAAUA,GAAQH,EAAKG,GAE5D,OAAOD,GAGRI,YAAa,SAASJ,GAIrB,OAAOA,GAERK,aAAc,SAAkBC,GAG3BhB,KAAKJ,QACRP,EAAM4B,QAAQjB,KAAKkB,cAAe,SAASC,GAC1CA,EAAMC,qBAGR/B,EAAM4B,QAAQD,EAAO,SAASR,EAAMa,GACnCrB,KAAKsB,SAAStB,KAAKO,eAAeC,IAC/BA,EAAKR,KAAKuB,mBACZlC,EAAM4B,QAAQT,EAAKR,KAAKuB,kBAAmB,SAASJ,EAAOE,GAC1DrB,KAAKsB,SAAStB,KAAKO,eAAeY,KAChCnB,OAEFA,OAGJwB,WAAY,SAAkBR,GAG7BhB,KAAKe,aAAaC,IAGnBS,QAAS,aAKTC,MAAO,SAAmBlB,EAAgBmB,GAGzC3B,KAAKsB,SAAStB,KAAKO,eAAeC,GAAOmB,IAG1CC,SAAU,SAAmBpB,EAAgBmB,GAG5C3B,KAAKkB,cAAcS,GAAcE,IAAI7B,KAAKS,sBAAsBD,KAGjEsB,SAAU,SAAmBtB,EAAgBuB,GAG5C/B,KAAKkB,cAAca,GAAaX,sBAGlC,OAAO3B,EAAI,aAAeH,EAAQ,gCAAiCK,EAAiBD,IAAuBC","file":"../../mobile/_StoreListMixin.js","sourcesContent":["define([\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/declare\",\r\n\t\"./_StoreMixin\",\r\n\t\"./ListItem\",\r\n\t\"dojo/has\",\r\n\t\"dojo/has!dojo-bidi?dojox/mobile/bidi/_StoreListMixin\"\r\n], function(array, declare, StoreMixin, ListItem, has, BidiStoreListMixin){\r\n\r\n\t// module:\r\n\t//\t\tdojox/mobile/_StoreListMixin\r\n\r\n\tvar _StoreListMixin = declare(has(\"dojo-bidi\") ? \"dojox.mobile._NonBidiStoreListMixin\" : \"dojox.mobile._StoreListMixin\", StoreMixin, {\r\n\t\t// summary:\r\n\t\t//\t\tMixin for widgets to generate the list items corresponding to\r\n\t\t//\t\tthe dojo/store data provider object.\r\n\t\t// description:\r\n\t\t//\t\tMixin for widgets to generate the list items corresponding to\r\n\t\t//\t\tthe dojo/store data provider object.\r\n\t\t//\t\tBy mixing this class into the widgets, the list item nodes are\r\n\t\t//\t\tgenerated as the child nodes of the widget and automatically\r\n\t\t//\t\tregenerated whenever the corresponding data items are modified.\r\n\r\n\t\t// append: Boolean\r\n\t\t//\t\tIf true, refresh() does not clear the existing items.\r\n\t\tappend: false,\r\n\r\n\t\t// itemMap: Object\r\n\t\t//\t\tAn optional parameter mapping field names from the store to ItemList names.\r\n\t\t//\t\tExample: itemMap:{text:'label', profile_image_url:'icon'}\r\n\t\titemMap: null,\r\n\r\n\t\t// itemRenderer: ListItem class or subclass\r\n\t\t//\t\tThe class used to create list items. Default is dojox/mobile/ListItem.\r\n\t\titemRenderer: ListItem,\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(!this.store){ return; }\r\n\t\t\tvar store = this.store;\r\n\t\t\tthis.store = null;\r\n\t\t\tthis.setStore(store, this.query, this.queryOptions);\r\n\t\t},\r\n\r\n\t\tcreateListItem: function(/*Object*/item){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates a list item widget.\r\n\t\t\treturn new this.itemRenderer(this._createItemProperties(item));\r\n\t\t},\r\n\t\t\r\n\t\t_createItemProperties: function(/*Object*/item){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates list item properties.\r\n\t\t\tvar props = {};\r\n\t\t\tif(!item[\"label\"]){\r\n\t\t\t\tprops[\"label\"] = item[this.labelProperty];\r\n\t\t\t}\r\n\t\t\t// TODO this code should be like for textDir in the bidi mixin createListItem method\r\n\t\t\t// however for that dynamic set/get of the dir property must be supported first\r\n\t\t\t// that is why for now as a workaround we keep the code here\r\n\t\t\tif(has(\"dojo-bidi\") && typeof props[\"dir\"] == \"undefined\"){\r\n\t\t\t\tprops[\"dir\"] = this.isLeftToRight() ? \"ltr\" : \"rtl\";\r\n\t\t\t}\r\n\t\t\tfor(var name in item){\r\n\t\t\t\tprops[(this.itemMap && this.itemMap[name]) || name] = item[name];\r\n\t\t\t}\r\n\t\t\treturn props;\r\n\t\t},\r\n\t\t\r\n\t\t_setDirAttr: function(props){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet the 'dir' attribute to support Mirroring.\r\n\t\t\t//\t\tTo be implemented by the bidi/_StoreLisMixin.js\r\n\t\t\treturn props;\r\n\t\t},\r\n\t\tgenerateList: function(/*Array*/items){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGiven the data, generates a list of items.\r\n\t\t\tif(!this.append){\r\n\t\t\t\tarray.forEach(this.getChildren(), function(child){\r\n\t\t\t\t\tchild.destroyRecursive();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tarray.forEach(items, function(item, index){\r\n\t\t\t\tthis.addChild(this.createListItem(item));\r\n\t\t\t\tif(item[this.childrenProperty]){\r\n\t\t\t\t\tarray.forEach(item[this.childrenProperty], function(child, index){\r\n\t\t\t\t\t\tthis.addChild(this.createListItem(child));\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\tonComplete: function(/*Array*/items){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tA handler that is called after the fetch completes.\r\n\t\t\tthis.generateList(items);\r\n\t\t},\r\n\r\n\t\tonError: function(/*Object*/ /*===== errorData =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAn error handler.\r\n\t\t},\r\n\r\n\t\tonAdd: function(/*Object*/item, /*Number*/insertedInto){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalls createListItem and adds the new list item when a new data item has been added to the store.\r\n\t\t\tthis.addChild(this.createListItem(item), insertedInto);\r\n\t\t},\r\n\r\n\t\tonUpdate: function(/*Object*/item, /*Number*/insertedInto){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUpdates an existing list item when a data item has been modified.\r\n\t\t\tthis.getChildren()[insertedInto].set(this._createItemProperties(item));\r\n\t\t},\r\n\r\n\t\tonDelete: function(/*Object*/item, /*Number*/removedFrom){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeletes an existing item.\r\n\t\t\tthis.getChildren()[removedFrom].destroyRecursive();\r\n\t\t}\r\n\t});\r\n\treturn has(\"dojo-bidi\") ? declare(\"dojox.mobile._StoreListMixin\", [_StoreListMixin, BidiStoreListMixin]) : _StoreListMixin;\t\r\n});\r\n"]}