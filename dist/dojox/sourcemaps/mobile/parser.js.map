{"version":3,"sources":["mobile/parser.js"],"names":["define","dojo","array","config","lang","win","ready","dm","getObject","Parser","_ctorMap","getCtor","type","mixins","t","replace","createSubclass","map","split","require","_eval","js","eval","this","instantiate","nodes","mixin","options","i","ws","length","n","_type","ctor","getAttribute","proto","prototype","params","prop","v","call","propsThis","defaults","getAttributeNode","nodeValue","isArray","Function","removeAttribute","className","style","cssText","dojoAttachPoint","dojoAttachEvent","instance","push","jsId","setObject","w","noStart","startup","_started","parse","rootNode","body","j","getElementsByTagName","list","_skip","stopParser","template","arr","parser","parseOnLoad","e"],"mappings":"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","file":"../../mobile/parser.js","sourcesContent":["define([\r\n\t\"dojo/_base/kernel\",\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/config\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/window\",\r\n\t\"dojo/ready\"\r\n], function(dojo, array, config, lang, win, ready){\r\n\r\n\t// module:\r\n\t//\t\tdojox/mobile/parser\r\n\r\n\tvar dm = lang.getObject(\"dojox.mobile\", true);\r\n\r\n\tvar Parser = function(){\r\n\t\t// summary:\r\n\t\t//\t\tA lightweight parser.\r\n\t\t// description:\r\n\t\t//\t\tdojox/mobile/parser is an extremely small subset of dojo/parser.\r\n\t\t//\t\tIt has no additional features over dojo/parser, so there is no\r\n\t\t//\t\tbenefit in terms of features by using dojox/mobile/parser instead \r\n\t\t//\t\tof dojo/parser.\tHowever, if dojox/mobile/parser's capabilities are\r\n\t\t//\t\tenough for your\tapplication, using it could reduce the total code size.\r\n\r\n\t\tvar _ctorMap = {};\r\n\t\tvar getCtor = function(type, mixins){\r\n\t\t\tif(typeof(mixins) === \"string\"){\r\n\t\t\t\tvar t = type + \":\" + mixins.replace(/ /g, \"\");\r\n\t\t\t\treturn _ctorMap[t] ||\r\n\t\t\t\t\t(_ctorMap[t] = getCtor(type).createSubclass(array.map(mixins.split(/, */), getCtor)));\r\n\t\t\t}\r\n\t\t\treturn _ctorMap[type] || (_ctorMap[type] = lang.getObject(type) || require(type));\r\n\t\t};\r\n\t\tvar _eval = function(js){ return eval(js); };\r\n\r\n\t\tthis.instantiate = function(/* DomNode[] */nodes, /* Object? */mixin, /* Object? */options){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction for instantiating a list of widget nodes.\r\n\t\t\t// nodes:\r\n\t\t\t//\t\tThe list of DomNodes to walk and instantiate widgets on.\r\n\t\t\tmixin = mixin || {};\r\n\t\t\toptions = options || {};\r\n\t\t\tvar i, ws = [];\r\n\t\t\tif(nodes){\r\n\t\t\t\tfor(i = 0; i < nodes.length; i++){\r\n\t\t\t\t\tvar n = nodes[i],\r\n\t\t\t\t\t\ttype = n._type,\r\n\t\t\t\t\t\tctor = getCtor(type, n.getAttribute(\"data-dojo-mixins\")),\r\n\t\t\t\t\t\tproto = ctor.prototype,\r\n\t\t\t\t\t\tparams = {}, prop, v, t;\r\n\t\t\t\t\tlang.mixin(params, _eval.call(options.propsThis, '({'+(n.getAttribute(\"data-dojo-props\")||\"\")+'})'));\r\n\t\t\t\t\tlang.mixin(params, options.defaults);\r\n\t\t\t\t\tlang.mixin(params, mixin);\r\n\t\t\t\t\tfor(prop in proto){\r\n\t\t\t\t\t\tv = n.getAttributeNode(prop);\r\n\t\t\t\t\t\tv = v && v.nodeValue;\r\n\t\t\t\t\t\tt = typeof proto[prop];\r\n\t\t\t\t\t\tif(!v && (t !== \"boolean\" || v !== \"\")){ continue; }\r\n\t\t\t\t\t\tif(lang.isArray(proto[prop])){\r\n\t\t\t\t\t\t\tparams[prop] = v.split(/\\s*,\\s*/);\r\n\t\t\t\t\t\t}else if(t === \"string\"){\r\n\t\t\t\t\t\t\tparams[prop] = v;\r\n\t\t\t\t\t\t}else if(t === \"number\"){\r\n\t\t\t\t\t\t\tparams[prop] = v - 0;\r\n\t\t\t\t\t\t}else if(t === \"boolean\"){\r\n\t\t\t\t\t\t\tparams[prop] = (v !== \"false\");\r\n\t\t\t\t\t\t}else if(t === \"object\"){\r\n\t\t\t\t\t\t\tparams[prop] = eval(\"(\" + v + \")\");\r\n\t\t\t\t\t\t}else if(t === \"function\"){\r\n\t\t\t\t\t\t\tparams[prop] = lang.getObject(v, false) || new Function(v);\r\n\t\t\t\t\t\t\tn.removeAttribute(prop);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tparams[\"class\"] = n.className;\r\n\t\t\t\t\tif(!params.style){ params.style = n.style.cssText; }\r\n\t\t\t\t\tv = n.getAttribute(\"data-dojo-attach-point\");\r\n\t\t\t\t\tif(v){ params.dojoAttachPoint = v; }\r\n\t\t\t\t\tv = n.getAttribute(\"data-dojo-attach-event\");\r\n\t\t\t\t\tif(v){ params.dojoAttachEvent = v; }\r\n\t\t\t\t\tvar instance = new ctor(params, n);\r\n\t\t\t\t\tws.push(instance);\r\n\t\t\t\t\tvar jsId = n.getAttribute(\"jsId\") || n.getAttribute(\"data-dojo-id\");\r\n\t\t\t\t\tif(jsId){\r\n\t\t\t\t\t\tlang.setObject(jsId, instance);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor(i = 0; i < ws.length; i++){\r\n\t\t\t\t\tvar w = ws[i];\r\n\t\t\t\t\t!options.noStart && w.startup && !w._started && w.startup();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn ws;\r\n\t\t};\r\n\r\n\t\tthis.parse = function(/* DomNode */ rootNode, /* Object? */ options){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to handle parsing for widgets in the current document.\r\n\t\t\t//\t\tIt is not as powerful as the full parser, but it will handle basic\r\n\t\t\t//\t\tuse cases fine.\r\n\t\t\t// rootNode:\r\n\t\t\t//\t\tThe root node in the document to parse from\r\n\t\t\tif(!rootNode){\r\n\t\t\t\trootNode = win.body();\r\n\t\t\t}else if(!options && rootNode.rootNode){\r\n\t\t\t\t// Case where 'rootNode' is really a params object.\r\n\t\t\t\toptions = rootNode;\r\n\t\t\t\trootNode = rootNode.rootNode;\r\n\t\t\t}\r\n\r\n\t\t\tvar nodes = rootNode.getElementsByTagName(\"*\");\r\n\t\t\tvar i, j, list = [];\r\n\t\t\tfor(i = 0; i < nodes.length; i++){\r\n\t\t\t\tvar n = nodes[i],\r\n\t\t\t\t\ttype = (n._type = n.getAttribute(\"dojoType\") || n.getAttribute(\"data-dojo-type\"));\r\n\t\t\t\tif(type){\r\n\t\t\t\t\tif(n._skip){\r\n\t\t\t\t\t\tn._skip = \"\";\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(getCtor(type).prototype.stopParser && !(options && options.template)){\r\n\t\t\t\t\t\tvar arr = n.getElementsByTagName(\"*\");\r\n\t\t\t\t\t\tfor(j = 0; j < arr.length; j++){\r\n\t\t\t\t\t\t\tarr[j]._skip = \"1\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(n);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar mixin = options && options.template ? {template: true} : null;\r\n\t\t\treturn this.instantiate(list, mixin, options);\r\n\t\t};\r\n\t};\r\n\r\n\t// Singleton.   (TODO: replace parser class and singleton w/a simple hash of functions)\r\n\tvar parser = new Parser();\r\n\r\n\tif(config.parseOnLoad){\r\n\t\tready(100, function(){\r\n\t\t\t// Now that all the modules are loaded, check if the app loaded dojo/parser too.\r\n\t\t\t// If it did, let dojo/parser handle the parseOnLoad flag instead of me.\r\n\t\t\ttry{\r\n\t\t\t\tif(!require(\"dojo/parser\")){\r\n\t\t\t\t\t// IE6 takes this path when dojo/parser unavailable, rather than catch() block below,\r\n\t\t\t\t\t// due to http://support.microsoft.com/kb/944397\r\n\t\t\t\t\tparser.parse();\r\n\t\t\t\t}\r\n\t\t\t}catch(e){\r\n\t\t\t\t// Other browsers (and later versions of IE) take this path when dojo/parser unavailable\r\n\t\t\t\tparser.parse();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tdm.parser = parser; // for backward compatibility\r\n\tdojo.parser = dojo.parser || parser; // in case user application calls dojo.parser\r\n\r\n\treturn parser;\r\n});\r\n"]}