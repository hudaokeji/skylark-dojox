{"version":3,"sources":["mobile/FixedSplitter.js"],"names":["define","array","declare","win","domClass","domGeometry","Contained","Container","WidgetBase","has","orientation","variablePane","screenSizeAware","screenSizeAwareClass","baseClass","startup","this","_started","add","domNode","f","parent","getParent","resize","_this","defer","require","module","getInstance","inherited","arguments","i","c","h","paddingTop","getPadExtents","t","wh","tl","props1","props2","a","offset","total","children","filter","childNodes","node","nodeType","idx","length","getMarginBox","parentNode","tagName","body","global","innerHeight","doc","documentElement","clientHeight","l","setMarginBox","style","isLeftToRight","top","left","forEach","getChildren","child","_setOrientationAttr","s","replace"],"mappings":"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","file":"../../mobile/FixedSplitter.js","sourcesContent":["define([\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/window\",\r\n\t\"dojo/dom-class\",\r\n\t\"dojo/dom-geometry\",\r\n\t\"dijit/_Contained\",\r\n\t\"dijit/_Container\",\r\n\t\"dijit/_WidgetBase\",\r\n\t\"dojo/has\"\r\n], function(array, declare, win, domClass, domGeometry, Contained, Container, WidgetBase, has){\r\n\r\n\t// module:\r\n\t//\t\tdojox/mobile/FixedSplitter\r\n\r\n\treturn declare(\"dojox.mobile.FixedSplitter\", [WidgetBase, Container, Contained], {\r\n\t\t// summary:\r\n\t\t//\t\tA layout container that splits the window horizontally or\r\n\t\t//\t\tvertically.\r\n\t\t// description:\r\n\t\t//\t\tFixedSplitter is a very simple container widget that layouts its\r\n\t\t//\t\tchild DOM nodes side by side either horizontally or\r\n\t\t//\t\tvertically. An example usage of this widget would be to realize\r\n\t\t//\t\tthe split view on iPad. There is no visual splitter between the\r\n\t\t//\t\tchildren, and there is no function to resize the child panes\r\n\t\t//\t\twith drag-and-drop. If you need a visual splitter, you can\r\n\t\t//\t\tspecify a border of a child DOM node with CSS.\r\n\t\t//\r\n\t\t//\t\tFixedSplitter has no knowledge of its child widgets.\r\n\t\t//\t\tdojox/mobile/Container, dojox/mobile/Pane, or dojox/mobile/ContentPane \r\n\t\t//\t\tcan be used as a child widget of FixedSplitter.\r\n\t\t//\r\n\t\t//\t\t- Use dojox/mobile/Container if your content consists of ONLY\r\n\t\t//\t\t  Dojo widgets.\r\n\t\t//\t\t- Use dojox/mobile/Pane if your content is an inline HTML\r\n\t\t//\t\t  fragment (may or may not include Dojo widgets).\r\n\t\t//\t\t- Use dojox/mobile/ContentPane if your content is an external\r\n\t\t//\t\t  HTML fragment (may or may not include Dojo widgets).\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\t<div data-dojo-type=\"dojox.mobile.FixedSplitter\" orientation=\"H\">\r\n\t\t//\t|\t\t<div data-dojo-type=\"dojox.mobile.Pane\"\r\n\t\t//\t|\t\t\tstyle=\"width:200px;border-right:1px solid black;\">\r\n\t\t//\t|\t\t\tpane #1 (width=200px)\r\n\t\t//\t|\t\t</div>\r\n\t\t//\t|\t\t<div data-dojo-type=\"dojox.mobile.Pane\">\r\n\t\t//\t|\t\t\tpane #2\r\n\t\t//\t|\t\t</div>\r\n\t\t//\t|\t</div>\r\n\r\n\t\t// orientation: String\r\n\t\t//\t\tThe direction of split. If \"H\" is specified, panes are split\r\n\t\t//\t\thorizontally. If \"V\" is specified, panes are split vertically.\r\n\t\torientation: \"H\",\r\n\r\n\t\t// variablePane: Number\r\n\t\t//\t\tThe index of a pane that fills the remainig space.\r\n\t\t//\t\tIf -1, the last child pane fills the remaining space.\r\n\t\tvariablePane: -1,\r\n\r\n\t\t// screenSizeAware: Boolean\r\n\t\t//\t\tIf true, dynamically load a screen-size-aware module.\r\n\t\tscreenSizeAware: false,\r\n\r\n\t\t// screenSizeAwareClass: String\r\n\t\t//\t\tA screen-size-aware module to load.\r\n\t\tscreenSizeAwareClass: \"dojox/mobile/ScreenSizeAware\",\r\n\r\n\t\t/* internal properties */\r\n\t\t\r\n\t\t// baseClass: String\r\n\t\t//\t\tThe name of the CSS class of this widget.\r\n\t\tbaseClass: \"mblFixedSplitter\",\r\n\r\n\t\tstartup: function(){\r\n\t\t\tif(this._started){ return; }\r\n\t\t\tdomClass.add(this.domNode, this.baseClass + this.orientation);\r\n\r\n\t\t\tvar parent = this.getParent(), f;\r\n\t\t\tif(!parent || !parent.resize){ // top level widget\r\n\t\t\t\tvar _this = this;\r\n\t\t\t\tf = function(){\r\n\t\t\t\t\t_this.defer(function(){\r\n\t\t\t\t\t\t_this.resize();\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tif(this.screenSizeAware){\r\n\t\t\t\trequire([this.screenSizeAwareClass], function(module){\r\n\t\t\t\t\tmodule.getInstance();\r\n\t\t\t\t\tf && f();\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\tf && f();\r\n\t\t\t}\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tresize: function(){\r\n\t\t\tvar paddingTop = domGeometry.getPadExtents(this.domNode).t;\r\n\t\t\tvar wh = this.orientation === \"H\" ? \"w\" : \"h\", // width/height\r\n\t\t\t\ttl = this.orientation === \"H\" ? \"l\" : \"t\", // top/left\r\n\t\t\t\tprops1 = {}, props2 = {},\r\n\t\t\t\ti, c, h,\r\n\t\t\t\ta = [], offset = 0, total = 0,\r\n\t\t\t\tchildren = array.filter(this.domNode.childNodes, function(node){ return node.nodeType == 1; }),\r\n\t\t\t\tidx = this.variablePane == -1 ? children.length - 1 : this.variablePane;\r\n\t\t\tfor(i = 0; i < children.length; i++){\r\n\t\t\t\tif(i != idx){\r\n\t\t\t\t\ta[i] = domGeometry.getMarginBox(children[i])[wh];\r\n\t\t\t\t\ttotal += a[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(this.orientation == \"V\"){\r\n\t\t\t\tif(this.domNode.parentNode.tagName == \"BODY\"){\r\n\t\t\t\t\tif(array.filter(win.body().childNodes, function(node){ return node.nodeType == 1; }).length == 1){\r\n\t\t\t\t\t\th = (win.global.innerHeight||win.doc.documentElement.clientHeight);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar l = (h || domGeometry.getMarginBox(this.domNode)[wh]) - total;\r\n\t\t\tif(this.orientation === \"V\"){\r\n\t\t\t\tl -= paddingTop;\r\n\t\t\t}\r\n\t\t\tprops2[wh] = a[idx] = l;\r\n\t\t\tc = children[idx];\r\n\t\t\tdomGeometry.setMarginBox(c, props2);\r\n\t\t\tc.style[this.orientation === \"H\" ? \"height\" : \"width\"] = \"\";\r\n\t\t\t// dojox.mobile mirroring support\r\n\t\t\tif(has(\"dojo-bidi\") && (this.orientation==\"H\" && !this.isLeftToRight())){\r\n\t\t\t\toffset = l;\r\n\t\t\t\tfor(i = children.length - 1; i >= 0; i--){\r\n\t\t\t\t\tc = children[i];\r\n\t\t\t\t\tprops1[tl] = l - offset;\r\n\t\t\t\t\tdomGeometry.setMarginBox(c, props1);\r\n\t\t\t\t\tif(this.orientation === \"H\"){\r\n\t\t\t\t\t\tc.style.top = paddingTop +\"px\";\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tc.style.left = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\toffset -= a[i];\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(this.orientation === \"V\"){\r\n\t\t\t\t\toffset = offset ? offset + paddingTop : paddingTop;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor(i = 0; i < children.length; i++){\r\n\t\t\t\t\tc = children[i];\r\n\t\t\t\t\tprops1[tl] = offset;\r\n\r\n\t\t\t\t\tdomGeometry.setMarginBox(c, props1);\r\n\t\t\t\t\tif(this.orientation === \"H\"){\r\n\t\t\t\t\t\tc.style.top = paddingTop +\"px\";\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tc.style.left = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\toffset += a[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tarray.forEach(this.getChildren(), function(child){\r\n\t\t\t\tif(child.resize){ child.resize(); }\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_setOrientationAttr: function(/*String*/orientation){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets the direction of split.\r\n\t\t\t// description:\r\n\t\t\t//\t\tThe value must be either \"H\" or \"V\".\r\n\t\t\t//\t\tIf \"H\" is specified, panes are split horizontally.\r\n\t\t\t//\t\tIf \"V\" is specified, panes are split vertically.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar s = this.baseClass;\r\n\t\t\tdomClass.replace(this.domNode, s + orientation, s + this.orientation);\r\n\t\t\tthis.orientation = orientation;\r\n\t\t\tif(this._started){\r\n\t\t\t\tthis.resize();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n"]}