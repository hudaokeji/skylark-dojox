{"version":3,"sources":["mobile/_css3.js"],"names":["define","win","arr","has","cnames","hnames","style","doc","createElement","prefixes","add","global","document","element","undefined","some","p","window","css3","name","hyphen","n","test","idx","length","match","s","substr","pp","this","toLowerCase","pk","replace","cn","p1","toUpperCase","charAt","slice","prefix","styles","css3Styles","hasOwnProperty"],"mappings":";;;;;;;AAAAA,QACC,oBACA,mBACA,YACE,SAASC,EAAKC,EAAKC,GAGrB,IAAIC,KAAaC,KAGbC,EAAQL,EAAIM,IAAIC,cAAc,OAAOF,MAKrCG,GAAY,UAGhBN,EAAIO,IAAI,kBAAmB,SAASC,EAAQC,EAAUC,GACrD,IAAIP,EAAQO,EAAQP,MACpB,YAA+BQ,IAAvBR,EAAiB,gBAA2CQ,IAAxBR,EAAkB,YAC7DJ,EAAIa,KAAKN,EAAU,SAASO,GAC3B,YAAgCF,IAAzBR,EAAMU,EAAE,mBAAwDF,IAA1BR,EAAMU,EAAE,kBAOxDb,EAAIO,IAAI,SAAU,SAASC,EAAQC,EAAUC,GAC5C,YAAwCC,IAAhCD,EAAQP,MAAkB,cAAsB,oBAAqBW,UAG9E,IAAIC,GAIHC,KAAM,SAAmBH,EAAeI,GAYvC,IAAIC,GAAKD,EAAOf,EAAOD,GAAQY,GAC/B,IAAIK,EAAE,CAEL,GAAG,YAAYC,KAAKN,GAAG,CAGtB,IAAIO,EAAMP,EAAEQ,QAAUR,EAAES,MAAM,OAAS,EAAI,GACvCC,EAAIV,EAAEW,OAAO,EAAGJ,GAChBK,EAAKC,KAAKV,KAAKO,GAGlBL,EAFEO,GAAMF,EAEJV,EAAEc,cAGFF,EAAKZ,EAAEW,OAAOJ,QAEd,GAAQ,aAALP,EAAiB,CAEzB,IAAIe,EAAKF,KAAKV,KAAK,YAAaC,GAE/BC,EADQ,aAANU,EACEf,EACII,EACJW,EAAGC,QAAQ,YAAa,aAExBD,EAAGC,QAAQ,YAAa,iBAEzB,CAEJ,IAAIC,EAAKb,EAASJ,EAAEgB,QAAQ,QAAS,SAASP,EAAOS,GACjD,OAAOA,EAAGC,gBACTnB,OACYF,IAAdR,EAAM2B,IAAsB9B,EAAI,WAKlC8B,EAAKA,EAAGG,OAAO,GAAGD,cAAgBF,EAAGI,MAAM,GAC3CnC,EAAIa,KAAKN,EAAU,SAAS6B,QACHxB,IAArBR,EAAMgC,EAAOL,KAEdZ,EADED,EACE,IAAMkB,EAAS,IAAMtB,EAErBsB,EAASL,MAThBZ,EAAIL,EAgBFK,IAEHA,EAAIL,IAGJI,EAAOf,EAAOD,GAAQY,GAAKK,EAE7B,OAAOA,GAGRX,IAAK,SAAmB6B,EAAkBC,GAgBzC,IAAI,IAAIxB,KAAKwB,EACTA,EAAWC,eAAezB,KAC5BuB,EAAOrB,EAAKC,KAAKH,IAAMwB,EAAWxB,IAGpC,OAAOuB,IAIT,OAAOrB","file":"../../mobile/_css3.js","sourcesContent":["define([\r\n\t\"dojo/_base/window\",\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/has\"\r\n], function(win, arr, has){\r\n\r\n\t// caches for capitalized names and hypen names\r\n\tvar cnames = [], hnames = [];\r\n\r\n\t// element style used for feature testing\r\n\tvar style = win.doc.createElement(\"div\").style;\r\n\r\n\t// We just test webkit prefix for now since our themes only have standard and webkit\r\n\t// (see dojox/mobile/themes/common/css3.less)\r\n\t// More prefixes can be added if/when we add them to css3.less.\r\n\tvar prefixes = [\"webkit\"];\r\n\r\n\t// Does the browser support CSS3 animations?\r\n\thas.add(\"css3-animations\", function(global, document, element){\r\n\t\tvar style = element.style;\r\n\t\treturn (style[\"animation\"] !== undefined && style[\"transition\"] !== undefined) ||\r\n\t\t\tarr.some(prefixes, function(p){\r\n\t\t\t\treturn style[p+\"Animation\"] !== undefined && style[p+\"Transition\"] !== undefined;\r\n\t\t\t});\r\n\t});\r\n\r\n\t// Indicates whether style 'transition' returns empty string instead of\r\n\t// undefined, although TransitionEvent is not supported.\r\n\t// Reported on Android 4.1.x on some devices: https://bugs.dojotoolkit.org/ticket/17164\r\n\thas.add(\"t17164\", function(global, document, element){\r\n\t\treturn (element.style[\"transition\"] !== undefined) && !('TransitionEvent' in window);\r\n\t});\r\n\r\n\tvar css3 = {\r\n\t\t// summary:\r\n\t\t//\t\tThis module provide some cross-browser support for CSS3 properties.\r\n\r\n\t\tname: function(/*String*/p, /*Boolean?*/hyphen){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the name of a CSS3 property with the correct prefix depending on the browser.\r\n\t\t\t// p:\r\n\t\t\t//\t\tThe (non-prefixed) property name. The property name is assumed to be consistent with\r\n\t\t\t//\t\tthe hyphen argument, for example \"transition-property\" if hyphen is true, or \"transitionProperty\"\r\n\t\t\t//\t\tif hyphen is false. If the browser supports the non-prefixed property, the property name will be\r\n\t\t\t//\t\treturned unchanged.\r\n\t\t\t// hyphen:\r\n\t\t\t//\t\tOptional, true if hyphen notation should be used (for example \"transition-property\" or \"-webkit-transition-property\"),\r\n\t\t\t//\t\tfalse for camel-case notation (for example \"transitionProperty\" or \"webkitTransitionProperty\").\r\n\r\n\t\t\tvar n = (hyphen?hnames:cnames)[p];\r\n\t\t\tif(!n){\r\n\r\n\t\t\t\tif(/End|Start/.test(p)){\r\n\t\t\t\t\t// event names: no good way to feature-detect, so we\r\n\t\t\t\t\t// assume they have the same prefix as the corresponding style property\r\n\t\t\t\t\tvar idx = p.length - (p.match(/End/) ? 3 : 5);\r\n\t\t\t\t\tvar s = p.substr(0, idx);\r\n\t\t\t\t\tvar pp = this.name(s);\r\n\t\t\t\t\tif(pp == s){\r\n\t\t\t\t\t\t// no prefix, standard event names are all lowercase\r\n\t\t\t\t\t\tn = p.toLowerCase();\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t// prefix, e.g. webkitTransitionEnd (camel case)\r\n\t\t\t\t\t\tn = pp + p.substr(idx);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else if(p == \"keyframes\"){\r\n\t\t\t\t\t// special case for keyframes, we also rely on consistency between 'animation' and 'keyframes'\r\n\t\t\t\t\tvar pk = this.name(\"animation\", hyphen);\r\n\t\t\t\t\tif(pk == \"animation\"){\r\n\t\t\t\t\t\tn = p;\r\n\t\t\t\t\t}else if(hyphen){\r\n\t\t\t\t\t\tn = pk.replace(/animation/, \"keyframes\");\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tn = pk.replace(/Animation/, \"Keyframes\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// convert name to camel-case for feature test\r\n\t\t\t\t\tvar cn = hyphen ? p.replace(/-(.)/g, function(match, p1){\r\n    \t\t\t\t\treturn p1.toUpperCase();\r\n\t\t\t\t\t}) : p;\r\n\t\t\t\t\tif(style[cn] !== undefined && !has('t17164')){\r\n\t\t\t\t\t\t// standard non-prefixed property is supported\r\n\t\t\t\t\t\tn = p;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t// try prefixed versions\r\n\t\t\t\t\t\tcn = cn.charAt(0).toUpperCase() + cn.slice(1);\r\n\t\t\t\t\t\tarr.some(prefixes, function(prefix){\r\n\t\t\t\t\t\t\tif(style[prefix+cn] !== undefined){\r\n\t\t\t\t\t\t\t\tif(hyphen){\r\n\t\t\t\t\t\t\t\t\tn = \"-\" + prefix + \"-\" + p;\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\tn = prefix + cn;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(!n){\r\n\t\t\t\t\t// The property is not supported, just return it unchanged, it will be ignored.\r\n\t\t\t\t\tn = p;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t(hyphen?hnames:cnames)[p] = n;\r\n\t\t\t}\r\n\t\t\treturn n;\r\n\t\t},\r\n\r\n\t\tadd: function(/*Object*/styles, /*Object*/css3Styles){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPrefixes all property names in \"css3Styles\" and adds the prefixed properties in \"styles\".\r\n\t\t\t//\t\tUsed as a convenience when an object is passed to domStyle.set to set multiple styles.\r\n\t\t\t// example:\r\n\t\t\t//\t\tdomStyle.set(bar, css3.add({\r\n\t\t\t//\t\t\topacity: 0.6,\r\n\t\t\t//\t\t\tposition: \"absolute\",\r\n\t\t\t//\t\t\tbackgroundColor: \"#606060\"\r\n\t\t\t//\t\t}, {\r\n\t\t\t//\t\t\tborderRadius: \"2px\",\r\n\t\t\t//\t\t\ttransformOrigin: \"0 0\"\r\n\t\t\t//\t\t}));\r\n\t\t\t// returns:\r\n\t\t\t//\t\tThe \"styles\" argument where the CSS3 styles have been added.\r\n\r\n\t\t\tfor(var p in css3Styles){\r\n\t\t\t\tif(css3Styles.hasOwnProperty(p)){\r\n\t\t\t\t\tstyles[css3.name(p)] = css3Styles[p];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn styles;\r\n\t\t}\r\n\t};\r\n\r\n\treturn css3;\r\n});\r\n"]}