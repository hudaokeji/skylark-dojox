{"version":3,"sources":["mobile/TabBarButton.js"],"names":["define","connect","declare","event","lang","dom","domClass","domConstruct","domStyle","domAttr","common","View","iconUtils","ItemBase","Badge","has","BidiTabBarButton","TabBarButton","icon1","icon2","iconPos1","iconPos2","selected","transition","tag","badge","badgeClass","baseClass","closeIcon","_selStartMethod","_selEndMethod","_moveTo","destroy","this","badgeObj","inherited","arguments","inheritParams","icon","parent","getParent","iconBase","charAt","length","iconPos","closable","add","domNode","buildRendering","srcNodeRef","create","label","trim","innerHTML","labelNode","box","className","set","_getMoveToId","tabPanelNode","byId","id","startup","_started","_dragstartHandle","stop","_clickCloseHandler","iconDivNode","_keydownCloseHandler","tabIndex","_isOnLine","undefined","_pendingIcon","setSelectable","onClose","e","publish","onCloseButtonClick","_onCloseButtonClick","type","keyCode","_onClick","onClick","defaultClickAction","_setIcon","n","_set","setIcon","alt","toggle","moveTo","toId","prototype","convertToId","_setIcon1Attr","_setIcon2Attr","_getBadgeAttr","parentNode","nodeType","getValue","_setBadgeAttr","value","fontSize","position","top","right","setValue","appendChild","removeChild","_setSelectedAttr"],"mappings":"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","file":"../../mobile/TabBarButton.js","sourcesContent":["define([\r\n\t\"dojo/_base/connect\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/event\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/dom\",\r\n\t\"dojo/dom-class\",\r\n\t\"dojo/dom-construct\",\r\n\t\"dojo/dom-style\",\r\n\t\"dojo/dom-attr\",\r\n\t\"./common\",\r\n\t\"./View\",\r\n\t\"./iconUtils\",\r\n\t\"./_ItemBase\",\r\n\t\"./Badge\",\r\n\t\"./sniff\",\r\n\t\"dojo/has!dojo-bidi?dojox/mobile/bidi/TabBarButton\"\r\n], function(connect, declare, event, lang, dom, domClass, domConstruct, domStyle, domAttr, common, View, iconUtils, ItemBase, Badge, has, BidiTabBarButton){\r\n\r\n\t// module:\r\n\t//\t\tdojox/mobile/TabBarButton\r\n\r\n\tvar TabBarButton = declare(has(\"dojo-bidi\") ? \"dojox.mobile.NonBidiTabBarButton\" : \"dojox.mobile.TabBarButton\", ItemBase,{\r\n\t\t// summary:\r\n\t\t//\t\tA button widget that is placed in the TabBar widget.\r\n\t\t// description:\r\n\t\t//\t\tTabBarButton is a button that is placed in the TabBar widget. It\r\n\t\t//\t\tis a subclass of dojox/mobile/_ItemBase just like ListItem or\r\n\t\t//\t\tIconItem. So, unlike Button, it has similar capability as\r\n\t\t//\t\tListItem or IconItem, such as icon support, transition, etc.\r\n\r\n\t\t// icon1: String\r\n\t\t//\t\tA path for the unselected (typically dark) icon. If icon is not\r\n\t\t//\t\tspecified, the iconBase parameter of the parent widget is used.\r\n\t\ticon1: \"\",\r\n\r\n\t\t// icon2: String\r\n\t\t//\t\tA path for the selected (typically highlight) icon. If icon is\r\n\t\t//\t\tnot specified, the iconBase parameter of the parent widget or\r\n\t\t//\t\ticon1 is used.\r\n\t\ticon2: \"\",\r\n\r\n\t\t// iconPos1: String\r\n\t\t//\t\tThe position of an aggregated unselected (typically dark)\r\n\t\t//\t\ticon. IconPos1 is a comma-separated list of values like\r\n\t\t//\t\ttop,left,width,height (ex. \"0,0,29,29\"). If iconPos1 is not\r\n\t\t//\t\tspecified, the iconPos parameter of the parent widget is used.\r\n\t\ticonPos1: \"\",\r\n\r\n\t\t// iconPos2: String\r\n\t\t//\t\tThe position of an aggregated selected (typically highlight)\r\n\t\t//\t\ticon. IconPos2 is a comma-separated list of values like\r\n\t\t//\t\ttop,left,width,height (ex. \"0,0,29,29\"). If iconPos2 is not\r\n\t\t//\t\tspecified, the iconPos parameter of the parent widget or\r\n\t\t//\t\ticonPos1 is used.\r\n\t\ticonPos2: \"\",\r\n\r\n\t\t// selected: Boolean\r\n\t\t//\t\tIf true, the button is in the selected state.\r\n\t\tselected: false,\r\n\r\n\t\t// transition: String\r\n\t\t//\t\tA type of animated transition effect.\r\n\t\ttransition: \"none\",\r\n\r\n\t\t// tag: String\r\n\t\t//\t\tA name of html tag to create as domNode.\r\n\t\ttag: \"li\",\r\n\r\n\t\t// badge: String\r\n\t\t//\t\tA string to show on a badge. (ex. \"12\")\r\n\t\tbadge: \"\",\r\n\t\t\r\n\t\t// badgeClass: [const] String\r\n\t\t//\t\tA CSS class name of a badge DOM node.\r\n\t\tbadgeClass: \"mblDomButtonRedBadge\",\r\n\r\n\t\t/* internal properties */\t\r\n\t\tbaseClass: \"mblTabBarButton\",\r\n\t\t// closeIcon: [private] String\r\n\t\t//\t\tCSS class for the close icon.\r\n\t\tcloseIcon: \"mblDomButtonWhiteCross\",\r\n\r\n\t\t_selStartMethod: \"touch\",\r\n\t\t_selEndMethod: \"touch\",\r\n\t\t\r\n\t\t// _moveTo: String\r\n\t\t//\t\tid of destination view\r\n\t\t_moveTo: \"\",\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tif(this.badgeObj){\r\n\t\t\t\tdelete this.badgeObj;\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tinheritParams: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverrides dojox/mobile/_ItemBase.inheritParams().\r\n\t\t\tif(this.icon && !this.icon1){ this.icon1 = this.icon; }\r\n\t\t\tvar parent = this.getParent();\r\n\t\t\tif(parent){\r\n\t\t\t\tif(!this.transition){ this.transition = parent.transition; }\r\n\t\t\t\tif(this.icon1 && parent.iconBase &&\r\n\t\t\t\t\tparent.iconBase.charAt(parent.iconBase.length - 1) === '/'){\r\n\t\t\t\t\tthis.icon1 = parent.iconBase + this.icon1;\r\n\t\t\t\t}\r\n\t\t\t\tif(!this.icon1){ this.icon1 = parent.iconBase; }\r\n\t\t\t\tif(!this.iconPos1){ this.iconPos1 = parent.iconPos; }\r\n\t\t\t\tif(this.icon2 && parent.iconBase &&\r\n\t\t\t\t\tparent.iconBase.charAt(parent.iconBase.length - 1) === '/'){\r\n\t\t\t\t\tthis.icon2 = parent.iconBase + this.icon2;\r\n\t\t\t\t}\r\n\t\t\t\tif(!this.icon2){ this.icon2 = parent.iconBase || this.icon1; }\r\n\t\t\t\tif(!this.iconPos2){ this.iconPos2 = parent.iconPos || this.iconPos1; }\r\n\r\n\t\t\t\tif(parent.closable){\r\n\t\t\t\t\tif(!this.icon1){\r\n\t\t\t\t\t\tthis.icon1 = this.closeIcon;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!this.icon2){\r\n\t\t\t\t\t\tthis.icon2 = this.closeIcon;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdomClass.add(this.domNode, \"mblTabBarButtonClosable\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.domNode = this.srcNodeRef || domConstruct.create(this.tag);\r\n\t\t\tif(this.srcNodeRef){\r\n\t\t\t\tif(!this.label){\r\n\t\t\t\t\tthis.label = lang.trim(this.srcNodeRef.innerHTML);\r\n\t\t\t\t}\r\n\t\t\t\tthis.srcNodeRef.innerHTML = \"\";\r\n\t\t\t}\r\n\r\n\t\t\tthis.labelNode = this.box = domConstruct.create(\"div\", {className:\"mblTabBarButtonLabel\"}, this.domNode);\r\n\t\t\t\r\n\t\t\tdomAttr.set(this.domNode, \"role\", \"tab\");\r\n\t\t\tdomAttr.set(this.domNode, \"aria-selected\", \"false\");\r\n\t\t\tthis._moveTo = this._getMoveToId();\r\n\t\t\tif(this._moveTo){\r\n\t\t\t\tvar tabPanelNode = dom.byId(this._moveTo);\r\n\t\t\t\tif(tabPanelNode){\r\n\t\t\t\t\tdomAttr.set(this.domNode, \"aria-controls\", this._moveTo);\r\n\t\t\t\t\tdomAttr.set(tabPanelNode, \"role\", \"tabpanel\");\r\n\t\t\t\t\tdomAttr.set(tabPanelNode, \"aria-labelledby\", this.id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\tif(this._started){ return; }\r\n\r\n\t\t\tthis._dragstartHandle = this.connect(this.domNode, \"ondragstart\", event.stop);\r\n\t\t\tthis.connect(this.domNode, \"onkeydown\", \"_onClick\"); // for desktop browsers\r\n\t\t\tvar parent = this.getParent();\r\n\t\t\tif(parent && parent.closable){\r\n\t\t\t\tthis._clickCloseHandler = this.connect(this.iconDivNode, \"onclick\", \"_onCloseButtonClick\");\r\n\t\t\t\tthis._keydownCloseHandler = this.connect(this.iconDivNode, \"onkeydown\", \"_onCloseButtonClick\"); // for desktop browsers\r\n\t\t\t\tthis.iconDivNode.tabIndex = \"0\";\r\n\t\t\t}\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(!this._isOnLine){\r\n\t\t\t\tthis._isOnLine = true;\r\n\t\t\t\t// retry applying the attribute for which the custom setter delays the actual \r\n\t\t\t\t// work until _isOnLine is true. \r\n\t\t\t\tthis.set({\r\n\t\t\t\t\ticon: this._pendingIcon !== undefined ? this._pendingIcon : this.icon,\r\n\t\t\t\t\ticon1:this.icon1,\r\n\t\t\t\t\ticon2:this.icon2});\r\n\t\t\t\t// Not needed anymore (this code executes only once per life cycle):\r\n\t\t\t\tdelete this._pendingIcon; \r\n\t\t\t}\r\n\t\t\tcommon.setSelectable(this.domNode, false);\r\n\t\t},\r\n\r\n\t\tonClose: function(e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the parent is a dojox/mobile/TabBar whose closable property is true, and the user clicked the close button.\r\n\t\t\tconnect.publish(\"/dojox/mobile/tabClose\", [this]);\r\n\t\t\treturn this.getParent().onCloseButtonClick(this);\r\n\t\t},\r\n\r\n\t\t_onCloseButtonClick: function(e){\r\n\t\t\tif(e && e.type === \"keydown\" && e.keyCode !== 13){ return; }\r\n\t\t\tif(this.onCloseButtonClick(e) === false){ return; } // user's click action\r\n\t\t\tif(this.onClose()){\r\n\t\t\t\tthis.destroy();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonCloseButtonClick: function(/*Event*/ /*===== e =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUser defined function to handle clicks\r\n\t\t\t//\t\twhen the parent is a dojox/mobile/TabBar whose closable property is true.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\t_onClick: function(e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal handler for click events.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(e && e.type === \"keydown\" && e.keyCode !== 13){ return; }\r\n\t\t\tif(this.onClick(e) === false){ return; } // user's click action\r\n\t\t\tthis.defaultClickAction(e);\r\n\t\t},\r\n\r\n\t\tonClick: function(/*Event*/ /*===== e =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUser defined function to handle clicks\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\t_setIcon: function(icon, n){\r\n\t\t\tif(!this.getParent()){ return; } // icon may be invalid because inheritParams is not called yet\r\n\t\t\tthis._set(\"icon\" + n, icon);\r\n\t\t\tif(!this.iconDivNode){\r\n\t\t\t\tthis.iconDivNode = domConstruct.create(\"div\", {className:\"mblTabBarButtonIconArea\"}, this.domNode, \"first\");\r\n\t\t\t\t// mblTabBarButtonDiv -> mblTabBarButtonIconArea\r\n\t\t\t}\r\n\t\t\tif(!this[\"iconParentNode\" + n]){\r\n\t\t\t\tthis[\"iconParentNode\" + n] = domConstruct.create(\"div\", {className:\"mblTabBarButtonIconParent mblTabBarButtonIconParent\" + n}, this.iconDivNode);\r\n\t\t\t\t// mblTabBarButtonIcon -> mblTabBarButtonIconParent\r\n\t\t\t}\r\n\t\t\tthis[\"iconNode\" + n] = iconUtils.setIcon(icon, this[\"iconPos\" + n],\r\n\t\t\t\tthis[\"iconNode\" + n], this.alt, this[\"iconParentNode\" + n]);\r\n\t\t\tthis[\"icon\" + n] = icon;\r\n\t\t\tdomClass.toggle(this.domNode, \"mblTabBarButtonHasIcon\", icon && icon !== \"none\");\r\n\t\t},\r\n\t\t\r\n\t\t_getMoveToId: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn the id of the destination view.\r\n\t\t\t//\t\tIf there is no id, return an empty string.\r\n\t\t\tif(this.moveTo){\r\n\t\t\t\tif(this.moveTo === \"#\"){ return \"\"; }\r\n\t\t\t\tvar toId = \"\";\r\n\t\t\t\tif(typeof(this.moveTo) === \"object\" && this.moveTo.moveTo){\r\n\t\t\t\t\ttoId = this.moveTo.moveTo;\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttoId = this.moveTo;\r\n\t\t\t\t}\r\n\t\t\t\tif(toId){\r\n\t\t\t\t\ttoId = View.prototype.convertToId(toId);\r\n\t\t\t\t}\r\n\t\t\t\treturn toId;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setIcon1Attr: function(icon){\r\n\t\t\tthis._setIcon(icon, 1);\r\n\t\t},\r\n\r\n\t\t_setIcon2Attr: function(icon){\r\n\t\t\tthis._setIcon(icon, 2);\r\n\t\t},\r\n\r\n\t\t_getBadgeAttr: function(){\r\n\t\t\treturn this.badgeObj && this.badgeObj.domNode.parentNode &&\r\n\t\t\t\tthis.badgeObj.domNode.parentNode.nodeType == 1 ? this.badgeObj.getValue() : null;\r\n\t\t},\r\n\r\n\t\t_setBadgeAttr: function(/*String*/value){\r\n\t\t\tif(!this.badgeObj){\r\n\t\t\t\tthis.badgeObj = new Badge({\r\n\t\t\t\t\tfontSize: 11,\r\n\t\t\t\t\tclassName: this.badgeClass\r\n\t\t\t\t});\r\n\t\t\t\tdomStyle.set(this.badgeObj.domNode, {\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\ttop: \"0px\",\r\n\t\t\t\t\tright: \"0px\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tthis.badgeObj.setValue(value);\r\n\t\t\tif(value){\r\n\t\t\t\tthis.domNode.appendChild(this.badgeObj.domNode);\r\n\t\t\t}else{\r\n\t\t\t\tif(this.domNode === this.badgeObj.domNode.parentNode){\r\n\t\t\t\t\tthis.domNode.removeChild(this.badgeObj.domNode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setSelectedAttr: function(/*Boolean*/selected){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMakes this widget in the selected or unselected state.\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tdomClass.toggle(this.domNode, \"mblTabBarButtonSelected\", selected);\r\n\t\t\tdomAttr.set(this.domNode, \"aria-selected\", selected ? \"true\" : \"false\");\r\n\t\t\tif(this._moveTo){\r\n\t\t\t\tvar tabPanelNode = dom.byId(this._moveTo);\r\n\t\t\t\tif(tabPanelNode){\r\n\t\t\t\t\tdomAttr.set(tabPanelNode, \"aria-hidden\", selected ? \"false\" : \"true\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn has(\"dojo-bidi\")?declare(\"dojox.mobile.TabBarButton\", [TabBarButton, BidiTabBarButton]):TabBarButton;\r\n});\r\n"]}