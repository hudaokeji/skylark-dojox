{"version":3,"sources":["mobile/_ContentPaneMixin.js"],"names":["define","declare","Deferred","lang","win","xhr","ExecScriptMixin","ProgressIndicator","lazyLoadUtils","href","lazy","content","parseOnLoad","prog","executeScripts","constructor","this","_p","getInstance","loadHandler","response","set","errorHandler","err","stop","load","onLoad","_setHrefAttr","_loaded","p","body","appendChild","domNode","start","_set","get","url","handleAs","hitch","error","_setContentAttr","data","destroyDescendants","containerNode","execScript","innerHTML","_this","when","instantiateLazyWidgets"],"mappings":";;;;;;;AAAAA,QACC,qBACA,sBACA,kBACA,oBACA,iBACA,qBACA,sBACA,mBACE,SAASC,EAASC,EAAUC,EAAMC,EAAKC,EAAKC,EAAiBC,EAAmBC,GAKlF,OAAOP,EAAQ,iCAAkCK,GAShDG,KAAM,GAKNC,MAAM,EAINC,QAAS,GAITC,aAAa,EAKbC,MAAM,EAINC,gBAAgB,EAEhBC,YAAa,WAKTC,KAAKH,OACPG,KAAKC,GAAKV,EAAkBW,gBAI9BC,YAAa,SAAmBC,GAG/BJ,KAAKK,IAAI,UAAWD,IAGrBE,aAAc,SAASC,GAGnBP,KAAKC,IAAKD,KAAKC,GAAGO,QAGtBC,KAAM,WAGLT,KAAKN,MAAO,EACZM,KAAKK,IAAI,OAAQL,KAAKP,OAGvBiB,OAAQ,WAKP,OAAO,GAGRC,aAAc,SAAmBlB,GAGhC,GAAGO,KAAKN,OAASD,GAAQA,IAASO,KAAKY,QAEtC,OADAZ,KAAKN,MAAO,EACL,KAER,IAAImB,EAAIb,KAAKC,GAOb,OANGY,IACFzB,EAAI0B,OAAOC,YAAYF,EAAEG,SACzBH,EAAEI,SAEHjB,KAAKkB,KAAK,OAAQzB,GAClBO,KAAKY,QAAUnB,EACRJ,EAAI8B,KACVC,IAAK3B,EACL4B,SAAU,OACVZ,KAAMtB,EAAKmC,MAAMtB,KAAM,eACvBuB,MAAOpC,EAAKmC,MAAMtB,KAAM,mBAI1BwB,gBAAiB,SAA2BC,GAY3C,GATAzB,KAAK0B,qBACc,iBAATD,EACTzB,KAAK2B,cAAcZ,YAAYU,IAE5BzB,KAAKF,iBACP2B,EAAOzB,KAAK4B,WAAWH,IAExBzB,KAAK2B,cAAcE,UAAYJ,GAE7BzB,KAAKJ,YAAY,CACnB,IAAIkC,EAAQ9B,KACZ,OAAOd,EAAS6C,KAAKvC,EAAcwC,uBAAuBF,EAAMH,eAAgB,WAE/E,OADGG,EAAM7B,IAAK6B,EAAM7B,GAAGO,OAChBsB,EAAMpB,WAIf,OADGV,KAAKC,IAAKD,KAAKC,GAAGO,OACdR,KAAKU","file":"../../mobile/_ContentPaneMixin.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/Deferred\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/window\",\r\n\t\"dojo/_base/xhr\",\r\n\t\"./_ExecScriptMixin\",\r\n\t\"./ProgressIndicator\",\r\n\t\"./lazyLoadUtils\"\r\n], function(declare, Deferred, lang, win, xhr, ExecScriptMixin, ProgressIndicator, lazyLoadUtils){\r\n\r\n\t// module:\r\n\t//\t\tdojox/mobile/_ContentPaneMixin\r\n\r\n\treturn declare(\"dojox.mobile._ContentPaneMixin\", ExecScriptMixin, {\r\n\t\t// summary:\r\n\t\t//\t\tMixin for a very simple content pane to embed an HTML fragment.\r\n\t\t// description:\r\n\t\t//\t\tBy mixing this class into a widget, the widget can have the ability\r\n\t\t//\t\tto embed an external HTML fragment and to run the parser.\r\n\r\n\t\t// href: String\r\n\t\t//\t\tURL of the content to embed.\r\n\t\thref: \"\",\r\n\r\n\t\t// lazy: String\r\n\t\t//\t\tIf true, external content specified with the href property is\r\n\t\t//\t\tnot loaded at startup time. It can be loaded by calling load().\r\n\t\tlazy: false,\r\n\r\n\t\t// content: String\r\n\t\t//\t\tAn HTML fragment to embed.\r\n\t\tcontent: \"\",\r\n\r\n\t\t// parseOnLoad: Boolean\r\n\t\t//\t\tIf true, runs the parser when the load completes.\r\n\t\tparseOnLoad: true,\r\n\r\n\t\t// prog: Boolean\r\n\t\t//\t\tIf true, shows progress indicator while loading an HTML fragment\r\n\t\t//\t\tspecified by href.\r\n\t\tprog: true,\r\n\r\n\t\t// executeScripts: Boolean\r\n\t\t//\t\tIf true, executes scripts that is found in the content.\r\n\t\texecuteScripts: true,\r\n\r\n\t\tconstructor: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates a new instance of the class.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(this.prog){\r\n\t\t\t\tthis._p = ProgressIndicator.getInstance();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tloadHandler: function(/*String*/response){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tA handler called when load completes.\r\n\t\t\tthis.set(\"content\", response);\r\n\t\t},\r\n\r\n\t\terrorHandler: function(err){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAn error handler called when load fails.\r\n\t\t\tif(this._p){ this._p.stop(); }\r\n\t\t},\r\n\r\n\t\tload: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tLoads external content specified with href.\r\n\t\t\tthis.lazy = false;\r\n\t\t\tthis.set(\"href\", this.href);\r\n\t\t},\r\n\r\n\t\tonLoad: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStub method to allow the application to connect to the\r\n\t\t\t//\t\tloading of external content (see load()).\r\n\t\t\t//\t\tCalled when parsing is done and the content is ready.\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\t_setHrefAttr: function(/*String*/href){\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(this.lazy || !href || href === this._loaded){\r\n\t\t\t\tthis.lazy = false;\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tvar p = this._p;\r\n\t\t\tif(p){\r\n\t\t\t\twin.body().appendChild(p.domNode);\r\n\t\t\t\tp.start();\r\n\t\t\t}\r\n\t\t\tthis._set(\"href\", href);\r\n\t\t\tthis._loaded = href;\r\n\t\t\treturn xhr.get({\r\n\t\t\t\turl: href,\r\n\t\t\t\thandleAs: \"text\",\r\n\t\t\t\tload: lang.hitch(this, \"loadHandler\"),\r\n\t\t\t\terror: lang.hitch(this, \"errorHandler\")\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_setContentAttr: function(/*String|DomNode*/data){\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\t\t\t\r\n\t\t\tthis.destroyDescendants();\r\n\t\t\tif(typeof data === \"object\"){\r\n\t\t\t\tthis.containerNode.appendChild(data);\r\n\t\t\t}else{\r\n\t\t\t\tif(this.executeScripts){\r\n\t\t\t\t\tdata = this.execScript(data);\r\n\t\t\t\t}\r\n\t\t\t\tthis.containerNode.innerHTML = data;\r\n\t\t\t}\r\n\t\t\tif(this.parseOnLoad){\r\n\t\t\t\tvar _this = this;\r\n\t\t\t\treturn Deferred.when(lazyLoadUtils.instantiateLazyWidgets(_this.containerNode), function(){\r\n\t\t\t\t\tif(_this._p){ _this._p.stop(); }\r\n\t\t\t\t\treturn _this.onLoad();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif(this._p){ this._p.stop(); }\r\n\t\t\treturn this.onLoad();\r\n\t\t}\r\n\t});\r\n});\r\n"]}