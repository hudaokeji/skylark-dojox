{"version":3,"sources":["mobile/tests/doh/fixedsplitter/FixedSplitterTests.js"],"names":["timeoutInterval","FIXEDSPLITER_CLASSNAME","FIXEDSPLITERPANE_CLASSNAME1","FIXEDSPLITERPANE_CLASSNAME2","FIXEDSPLITERPANE_CLASSNAME3","HEIGHT_RATIO1","HEIGHT_RATIO2","WIDTH_RATIO1","WIDTH_RATIO2","WIDGET_PROPS","style","width","height","orientation","backgroundColor","WIDGET_INNERHTML","innerHTML","WIDGET_IDS","id","require","connect","lang","domConst","domClass","domGeometry","window","ready","registry","runner","FixedSplitter","Container","_assertCorrectFixedSplitter","widget","className","_assertCorrectFixedSplitterHW","assertTrue","contains","domNode","_assertCorrectContainer","assertNotEqual","offsetHeight","offsetWidth","widget1","WIDGET_PROGRAMMATICALLY","placeHolderId","mixin","place","startup","pane1","widget2","pane2","pane3","addChild","_createFixedSplitterProgrammatically","register","name","timeout","runTest","d","Deferred","setTimeout","getTestCallback","box","getBox","byId","widget3","widget4","widget5","box2","getMarginBox","assertEqual","h","w","Math","round","errorMsg","errorCounter","onerror","msg","url","lineNumber","console","log","destroyRecursive","run"],"mappings":"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","file":"../../../../../mobile/tests/doh/fixedsplitter/FixedSplitterTests.js","sourcesContent":["var timeoutInterval = 1500;\r\n\r\nvar FIXEDSPLITER_CLASSNAME = \"mblFixedSplitter\";\r\nvar FIXEDSPLITERPANE_CLASSNAME1 = \"mblContainer\";\r\nvar FIXEDSPLITERPANE_CLASSNAME2 = \"mblFixedSplitterV\";\r\nvar FIXEDSPLITERPANE_CLASSNAME3 = \"mblFixedSplitterH\";\r\n\r\nvar HEIGHT_RATIO1 = 0.2;\r\nvar HEIGHT_RATIO2 = 1 - HEIGHT_RATIO1;\r\nvar WIDTH_RATIO1 = 0.2;\r\nvar WIDTH_RATIO2 = 1 - WIDTH_RATIO1;\r\nvar WIDGET_PROPS = [{style:{width:\"100%\", height:\"100%\"}, orientation:\"V\"},\r\n\t\t\t\t\t{style:{backgroundColor:\"yellow\", height:\"20%\"}},\r\n\t\t\t\t\t{style:{width:\"100%\", height:\"100%\"}, orientation:\"H\"},\r\n\t\t\t\t\t{style:{backgroundColor:\"pink\", width:\"20%\"}},\r\n\t\t\t\t\t{style:{backgroundColor:\"cyan\"}}];\r\nvar WIDGET_INNERHTML = [{},\r\n\t\t\t\t\t\t{innerHTML:\"pane #1\"},\r\n\t\t\t\t\t\t{},\r\n\t\t\t\t\t\t{innerHTML:\"pane #2\"},\r\n\t\t\t\t\t\t{innerHTML:\"pane #3\"}];\r\nvar WIDGET_IDS = [{id:\"dojox_mobile_FixedSplitter_0\"},\r\n\t\t\t\t  {id:\"dojox_mobile_Container_0\"},\r\n\t\t\t\t  {id:\"dojox_mobile_FixedSplitter_1\"},\r\n\t\t\t\t  {id:\"dojox_mobile_Container_1\"},\r\n\t\t\t\t  {id:\"dojox_mobile_Container_2\"}];\r\n\r\nrequire([\r\n\t\"dojo/_base/connect\",\r\n\t\"dojo/_base/lang\", // dojo.mixin\r\n\t\"dojo/dom-construct\", // dojo.place\r\n\t\"dojo/dom-class\", // dojo.hasClass\r\n\t\"dojo/dom-geometry\",\r\n\t\"dojo/window\", // dojo.window.getBox\r\n\t\"dojo/ready\", // dojo.ready\r\n\t\"dijit/registry\",  // dijit.byId\r\n\t\"doh/runner\",\t//doh functions\r\n\t\"dojox/mobile/FixedSplitter\",\r\n\t\"dojox/mobile/Container\",\r\n\t\"dojox/mobile/parser\"\t\t// This mobile app uses declarative programming with fast mobile parser\r\n], function(connect, lang, domConst, domClass, domGeometry, window, ready, registry, runner, FixedSplitter, Container){\r\n\tfunction _createFixedSplitterDeclaratively(widgetId) {\r\n\t\treturn registry.byId(widgetId);\r\n\t}\r\n\tfunction _createFixedSplitterProgrammatically(placeHolderId){\r\n\t\t// Create FixedSplitter\r\n\t\tvar widget1 = new FixedSplitter(lang.mixin(WIDGET_IDS[0], WIDGET_PROPS[0], WIDGET_INNERHTML[0]));\r\n\t\trunner.assertNotEqual(null, widget1);\r\n\t\tdomConst.place(widget1.domNode, placeHolderId, \"replace\");\r\n\t\twidget1.startup();\r\n\r\n\t\tvar pane1 = new Container(lang.mixin(WIDGET_IDS[1], WIDGET_PROPS[1], WIDGET_INNERHTML[1]));\r\n\t\tvar widget2 = new FixedSplitter(lang.mixin(WIDGET_IDS[2], WIDGET_PROPS[2], WIDGET_INNERHTML[2]));\r\n\t\tvar pane2 = new Container(lang.mixin(WIDGET_IDS[3], WIDGET_PROPS[3], WIDGET_INNERHTML[3]));\r\n\t\tvar pane3 = new Container(lang.mixin(WIDGET_IDS[4], WIDGET_PROPS[4], WIDGET_INNERHTML[4]));\r\n\r\n\t\twidget1.addChild(pane1);\r\n\t\twidget1.addChild(widget2);\r\n\t\twidget2.addChild(pane2);\r\n\t\twidget2.addChild(pane3);\r\n\r\n\t\treturn widget1;\r\n\t}\r\n\tfunction _createFixedSplitterProgrammaticallyWithSourceNodeReference(){\r\n\t\t// Create FixedSplitter\r\n\t\tvar widget1 = new FixedSplitter(WIDGET_PROPS[0], WIDGET_IDS[0].id);\r\n\t\trunner.assertNotEqual(null, widget1);\r\n\r\n\t\tvar pane1 = new Container(WIDGET_PROPS[1], WIDGET_IDS[1].id);\r\n\t\tvar widget2 = new FixedSplitter(WIDGET_PROPS[2], WIDGET_IDS[2].id);\r\n\t\tvar pane2 = new Container(WIDGET_PROPS[3], WIDGET_IDS[3].id);\r\n\t\tvar pane3 = new Container(WIDGET_PROPS[4], WIDGET_IDS[4].id);\r\n\t\twidget1.startup();\r\n\r\n\t\treturn widget1;\r\n\t}\r\n\tfunction _assertCorrectFixedSplitter(widget, height, width, className){\r\n\t\t_assertCorrectFixedSplitterHW(widget, height, width);\r\n\t\trunner.assertTrue(domClass.contains(widget.domNode, FIXEDSPLITER_CLASSNAME), FIXEDSPLITER_CLASSNAME);\r\n\t\tif(className){\r\n\t\t\trunner.assertTrue(domClass.contains(widget.domNode, className),  \"expected: \" + className + \" but got \" + widget.domNode.className);\r\n\t\t}\r\n\t}\r\n\tfunction _assertCorrectContainer(widget, height, width, className){\r\n\t\t_assertCorrectFixedSplitterHW(widget, height, width);\r\n\t\trunner.assertTrue(domClass.contains(widget.domNode, FIXEDSPLITERPANE_CLASSNAME1), FIXEDSPLITERPANE_CLASSNAME1);\r\n\t\tif(className){\r\n\t\t\trunner.assertTrue(domClass.contains(widget.domNode, className), className);\r\n\t\t}\r\n\t}\r\n\tfunction _assertCorrectFixedSplitterHW(widget, height, width){\r\n\t\trunner.assertNotEqual(null, widget, \"FixedSplitter: Did not instantiate.\");\r\n\t\trunner.assertTrue( (height - 2) < widget.domNode.offsetHeight && widget.domNode.offsetHeight < (height + 2), \"expected: \" +height + \"+-2 but got \" + widget.domNode.offsetHeight + \"height: id = \" + widget.domNode.id);\r\n\t\trunner.assertTrue( (width - 2) < widget.domNode.offsetWidth && widget.domNode.offsetWidth < (width + 2), \"expected: \" +width + \"+-2 but got \" + widget.domNode.offsetWidth + \"offsetWidth: id = \" + widget.domNode.id);\r\n\t}\r\n\tready(function(){\r\n\t\tif(WIDGET_PROGRAMMATICALLY === 1){\r\n\t\t\t_createFixedSplitterProgrammatically(\"FixedSplitterPlace\");\r\n\t\t}else if(WIDGET_PROGRAMMATICALLY === 2){\r\n\t\t\t_createFixedSplitterProgrammaticallyWithSourceNodeReference();\r\n\t\t}\r\n\r\n\t\trunner.register(\"dojox.mobile.test.doh.FixedSplitter\", [\r\n\t\t\t{\r\n\t\t\t\tname: \"FixedSplitter Verification\",\r\n\t\t\t\ttimeout: 4000,\r\n\t\t\t\trunTest: function(){\r\n\t\t\t\t\tvar d = new runner.Deferred();\r\n\t\t\t\t\tsetTimeout(d.getTestCallback(function(){\r\n\t\t\t\t\t\tvar box = window.getBox();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar widget1 = registry.byId(\"dojox_mobile_FixedSplitter_0\");\r\n\t\t\t\t\t\tvar widget2 = registry.byId(\"dojox_mobile_Container_0\");\r\n\t\t\t\t\t\tvar widget3 = registry.byId(\"dojox_mobile_FixedSplitter_1\");\r\n\t\t\t\t\t\tvar widget4 = registry.byId(\"dojox_mobile_Container_1\");\r\n\t\t\t\t\t\tvar widget5 = registry.byId(\"dojox_mobile_Container_2\");\r\n\r\n\t\t\t\t\t\tvar box2 = domGeometry.getMarginBox(widget1.domNode);\r\n\r\n\t\t\t\t\t\trunner.assertEqual(box.h, widget2.domNode.offsetHeight + widget5.domNode.offsetHeight);\r\n\t\t\t\t\t\trunner.assertEqual(box.w, widget4.domNode.offsetWidth + widget5.domNode.offsetWidth);\r\n\r\n\t\t\t\t\t\t_assertCorrectFixedSplitter(widget1, 0, box2.w);\r\n\t\t\t\t\t\t_assertCorrectContainer(widget2, Math.round(box.h * HEIGHT_RATIO1), box.w);\r\n\t\t\t\t\t\t_assertCorrectFixedSplitter(widget3, Math.round(box.h * HEIGHT_RATIO2), box.w, FIXEDSPLITERPANE_CLASSNAME3);\r\n\t\t\t\t\t\t_assertCorrectContainer(widget4, Math.round(box.h * HEIGHT_RATIO2), Math.round(box.w * WIDTH_RATIO1));\r\n\t\t\t\t\t\t_assertCorrectContainer(widget5, Math.round(box.h * HEIGHT_RATIO2), Math.round(box.w * WIDTH_RATIO2));\r\n\t\t\t\t\t}), timeoutInterval);\r\n\t\t\t\t\treturn d;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"FixedSplitter Verification 2\",\r\n\t\t\t\ttimeout: 4000,\r\n\t\t\t\trunTest: function(){\r\n\t\t\t\t\tvar widget = new FixedSplitter();\r\n\t\t\t\t\tvar d = new runner.Deferred();\r\n\t\t\t\t\tvar errorCounter = 0;\r\n\t\t\t\t\tvar errorMsg;\r\n\t\t\t\t\t// Before the fix of #15064, there used to be an error thrown when destroying \r\n\t\t\t\t\t// right after startup(). To test it, we cannot use a simple try-catch, because\r\n\t\t\t\t\t// this is about an error thrown by the setTimeout function which used to be set \r\n\t\t\t\t\t// FixedSplitter's startup(). Hence:\r\n\t\t\t\t\twindow.onerror = function(msg, url, lineNumber){\r\n\t\t\t\t\t\terrorCounter++;\r\n\t\t\t\t\t\terrorMsg = \"After destroy: \" + msg + \"\\nURL: \" + url + \r\n\t\t\t\t\t\t\t\"\\nLine number: \" + lineNumber;\r\n\t\t\t\t\t\tconsole.log(errorMsg);\r\n\t\t\t\t\t};\r\n\t\t\t\t\twidget.startup();\r\n\t\t\t\t\twidget.destroyRecursive(false/*preserveDom*/);\r\n\t\t\t\t\t// Check that no error has been thrown\r\n\t\t\t\t\tsetTimeout(d.getTestCallback(function(){\r\n\t\t\t\t\t\trunner.assertEqual(0, errorCounter, errorMsg);\r\n\t\t\t\t\t}), 2000); // smaller than the total timeout of the test case\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn d;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t]);\r\n\t\trunner.run();\r\n\t});\r\n})\r\n\r\n"]}