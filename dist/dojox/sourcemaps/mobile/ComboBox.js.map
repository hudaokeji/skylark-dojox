{"version":3,"sources":["mobile/ComboBox.js"],"names":["define","kernel","declare","lang","win","domGeometry","domStyle","domAttr","windowUtils","touch","AutoCompleterMixin","popup","ComboBoxMenu","TextBox","has","experimental","dropDownClass","selectOnClick","autoComplete","dropDown","maxHeight","dropDownPosition","_throttleOpenClose","this","_throttleHandler","remove","defer","_onFocus","inherited","arguments","_opened","_startSearchAll","domNode","blur","onInput","e","charCode","_onKey","_setListAttr","v","_set","closeDropDown","endHandler","disconnect","startHandler","moveHandler","clearInterval","repositionTimer","set","close","disabled","removeAttribute","openDropDown","wasClosed","ddNode","aroundNode","self","id","global","scrollBy","position","y","_preparedNode","style","width","_explicitDDWidth","height","_explicitDDHeight","myStyle","display","overflow","visibility","viewport","getBox","Math","floor","max","h","moveOffScreen","startup","_started","mb","containerNode","w","offsetWidth","setMarginBox","retVal","open","parent","around","orient","onExecute","onCancel","onClose","isGesture","skipReposition","active","wrapper","parentNode","aroundNodePos","popupPos","deltaX","x","deltaY","startX","startY","connect","doc","documentElement","press","clientX","clientY","move","touches","clickHandler","release","setInterval","hitch","currentAroundNodePos","currentPopupPos","currentDeltaX","currentDeltaY","abs","left","parseInt","get","top","setAttribute","postCreate","destroy","_onClick","opened"],"mappings":"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","file":"../../mobile/ComboBox.js","sourcesContent":["define([\r\n\t\"dojo/_base/kernel\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/window\",\r\n\t\"dojo/dom-geometry\",\r\n\t\"dojo/dom-style\",\r\n\t\"dojo/dom-attr\",\r\n\t\"dojo/window\",\r\n\t\"dojo/touch\",\r\n\t\"dijit/form/_AutoCompleterMixin\",\r\n\t\"dijit/popup\",\r\n\t\"./_ComboBoxMenu\",\r\n\t\"./TextBox\",\r\n\t\"./sniff\"\r\n], function(kernel, declare, lang, win, domGeometry, domStyle, domAttr, windowUtils, touch, AutoCompleterMixin, popup, ComboBoxMenu, TextBox, has){\r\n\tkernel.experimental(\"dojox.mobile.ComboBox\"); // should be using a more native search-type UI\r\n\r\n\treturn declare(\"dojox.mobile.ComboBox\", [TextBox, AutoCompleterMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tA non-templated auto-completing text box widget.\r\n\r\n\t\t// dropDownClass: [protected extension] String\r\n\t\t//\t\tName of the drop-down widget class used to select a date/time.\r\n\t\t//\t\tShould be specified by subclasses.\r\n\t\tdropDownClass: \"dojox.mobile._ComboBoxMenu\",\r\n\r\n\t\t// initially disable selection since iphone displays selection handles\r\n\t\t// that makes it hard to pick from the list\r\n\t\t\r\n\t\t// selectOnClick: Boolean\r\n\t\t//\t\tFlag which enables the selection on click.\r\n\t\tselectOnClick: false,\r\n\t\t\r\n\t\t// autoComplete: Boolean\r\n\t\t//\t\tFlag which enables the auto-completion.\r\n\t\tautoComplete: false,\r\n\r\n\t\t// dropDown: [protected] Widget\r\n\t\t//\t\tThe widget to display as a popup. This widget *must* be\r\n\t\t//\t\tdefined before the startup function is called.\r\n\t\tdropDown: null,\r\n\r\n\t\t// maxHeight: [protected] int\r\n\t\t//\t\tThe maximum height for the drop-down.\r\n\t\t//\t\tAny drop-down taller than this value will have scrollbars.\r\n\t\t//\t\tSet to -1 to limit the height to the available space in the viewport.\r\n\t\tmaxHeight: -1,\r\n\r\n\t\t// dropDownPosition: [const] String[]\r\n\t\t//\t\tThis variable controls the position of the drop-down.\r\n\t\t//\t\tIt is an array of strings with the following values:\r\n\t\t//\r\n\t\t//\t\t- before: places drop down to the left of the target node/widget, or to the right in\r\n\t\t//\t\t  the case of RTL scripts like Hebrew and Arabic\r\n\t\t//\t\t- after: places drop down to the right of the target node/widget, or to the left in\r\n\t\t//\t\t  the case of RTL scripts like Hebrew and Arabic\r\n\t\t//\t\t- above: drop down goes above target node\r\n\t\t//\t\t- below: drop down goes below target node\r\n\t\t//\r\n\t\t//\t\tThe list is positions is tried, in order, until a position is found where the drop down fits\r\n\t\t//\t\twithin the viewport.\r\n\t\tdropDownPosition: [\"below\",\"above\"],\r\n\r\n\t\t_throttleOpenClose: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPrevents the open/close in rapid succession.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(this._throttleHandler){\r\n\t\t\t\tthis._throttleHandler.remove();\r\n\t\t\t}\r\n\t\t\tthis._throttleHandler = this.defer(function(){ this._throttleHandler = null; }, 500);\r\n\t\t},\r\n\r\n\t\t_onFocus: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tShows drop-down if the user is selecting Next/Previous from the virtual keyboard.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(!this._opened && !this._throttleHandler){\r\n\t\t\t\tthis._startSearchAll(); \r\n\t\t\t}\r\n\r\n\t\t\tif(has(\"windows-theme\")) {\r\n\t\t\t\tthis.domNode.blur();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonInput: function(e){\r\n\t\t\tif(!e || e.charCode !== 0){ // #18047\r\n\t\t\t\tthis._onKey(e);\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setListAttr: function(v){\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tthis._set('list', v); // needed for Firefox 4+ to prevent HTML5 mode\r\n\t\t},\r\n\r\n\t\tcloseDropDown: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCloses the drop down on this widget\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tthis._throttleOpenClose();\r\n\t\t\tif(this.endHandler){\r\n\t\t\t\tthis.disconnect(this.startHandler);\r\n\t\t\t\tthis.disconnect(this.endHandler);\r\n\t\t\t\tthis.disconnect(this.moveHandler);\r\n\t\t\t\tclearInterval(this.repositionTimer);\r\n\t\t\t\tthis.repositionTimer = this.endHandler = null;\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tdomAttr.remove(this.domNode, \"aria-owns\");\r\n\t\t\tdomAttr.set(this.domNode, \"aria-expanded\", \"false\");\r\n\t\t\tpopup.close(this.dropDown);\r\n\t\t\tthis._opened = false;\r\n\r\n\t\t\t// Remove disable attribute to make input element clickable after context menu closed\r\n\t\t\tif(has(\"windows-theme\") && this.domNode.disabled){\r\n\t\t\t\tthis.defer(function(){\r\n\t\t\t\t\tthis.domNode.removeAttribute(\"disabled\");\r\n\t\t\t\t}, 300);\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\topenDropDown: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOpens the dropdown for this widget. To be called only when this.dropDown\r\n\t\t\t//\t\thas been created and is ready to display (that is, its data is loaded).\r\n\t\t\t// returns:\r\n\t\t\t//\t\tReturns the value of popup.open().\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tvar wasClosed = !this._opened;\r\n\t\t\tvar dropDown = this.dropDown,\r\n\t\t\t\tddNode = dropDown.domNode,\r\n\t\t\t\taroundNode = this.domNode,\r\n\t\t\t\tself = this;\r\n\t\t\t\t\r\n\t\t\tdomAttr.set(dropDown.domNode, \"role\", \"listbox\");\r\n\t\t\tdomAttr.set(this.domNode, \"aria-expanded\", \"true\");\r\n\t\t\tif(dropDown.id){\r\n\t\t\t\tdomAttr.set(this.domNode, \"aria-owns\", dropDown.id);\r\n\t\t\t}\r\n\r\n\t\t\tif(has(\"touch\") && (!has(\"ios\") || has(\"ios\") < 8)){\r\n\t\t\t\twin.global.scrollBy(0, domGeometry.position(aroundNode, false).y); // don't call scrollIntoView since it messes up ScrollableView\r\n\t\t\t}\r\n\r\n\t\t\t// TODO: isn't maxHeight dependent on the return value from popup.open(),\r\n\t\t\t// i.e., dependent on how much space is available (BK)\r\n\r\n\t\t\tif(!this._preparedNode){\r\n\t\t\t\tthis._preparedNode = true;\r\n\t\t\t\t// Check if we have explicitly set width and height on the dropdown widget dom node\r\n\t\t\t\tif(ddNode.style.width){\r\n\t\t\t\t\tthis._explicitDDWidth = true;\r\n\t\t\t\t}\r\n\t\t\t\tif(ddNode.style.height){\r\n\t\t\t\t\tthis._explicitDDHeight = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Code for resizing dropdown (height limitation, or increasing width to match my width)\r\n\t\t\tvar myStyle = {\r\n\t\t\t\tdisplay: \"\",\r\n\t\t\t\toverflow: \"hidden\",\r\n\t\t\t\tvisibility: \"hidden\"\r\n\t\t\t};\r\n\t\t\tif(!this._explicitDDWidth){\r\n\t\t\t\tmyStyle.width = \"\";\r\n\t\t\t}\r\n\t\t\tif(!this._explicitDDHeight){\r\n\t\t\t\tmyStyle.height = \"\";\r\n\t\t\t}\r\n\t\t\tdomStyle.set(ddNode, myStyle);\r\n\r\n\t\t\t// Figure out maximum height allowed (if there is a height restriction)\r\n\t\t\tvar maxHeight = this.maxHeight;\r\n\t\t\tif(maxHeight == -1){\r\n\t\t\t\t// limit height to space available in viewport either above or below my domNode\r\n\t\t\t\t// (whichever side has more room)\r\n\t\t\t\tvar viewport = windowUtils.getBox(),\r\n\t\t\t\t\tposition = domGeometry.position(aroundNode, false);\r\n\t\t\t\tmaxHeight = Math.floor(Math.max(position.y, viewport.h - (position.y + position.h)));\r\n\t\t\t}\r\n\r\n\t\t\t// Attach dropDown to DOM and make make visibility:hidden rather than display:none\r\n\t\t\t// so we call startup() and also get the size\r\n\t\t\tpopup.moveOffScreen(dropDown);\r\n\r\n\t\t\tif(dropDown.startup && !dropDown._started){\r\n\t\t\t\tdropDown.startup(); // this has to be done after being added to the DOM\r\n\t\t\t}\r\n\t\t\t// Get size of drop down, and determine if vertical scroll bar needed\r\n\t\t\tvar mb = domGeometry.position(this.dropDown.containerNode, false);\r\n\t\t\tvar overHeight = (maxHeight && mb.h > maxHeight);\r\n\t\t\tif(overHeight){\r\n\t\t\t\tmb.h = maxHeight;\r\n\t\t\t}\r\n\r\n\t\t\t// Adjust dropdown width to match or be larger than my width\r\n\t\t\tmb.w = Math.max(mb.w, aroundNode.offsetWidth);\r\n\t\t\tdomGeometry.setMarginBox(ddNode, mb);\r\n\r\n\t\t\tvar retVal = popup.open({\r\n\t\t\t\tparent: this,\r\n\t\t\t\tpopup: dropDown,\r\n\t\t\t\taround: aroundNode,\r\n\t\t\t\torient: has(\"windows-theme\") ? [\"above\"] : this.dropDownPosition,\r\n\t\t\t\tonExecute: function(){\r\n\t\t\t\t\tself.closeDropDown();\r\n\t\t\t\t},\r\n\t\t\t\tonCancel: function(){\r\n\t\t\t\t\tself.closeDropDown();\r\n\t\t\t\t},\r\n\t\t\t\tonClose: function(){\r\n\t\t\t\t\tself._opened = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis._opened=true;\r\n\r\n\t\t\tif(wasClosed){\r\n\t\t\t\tvar\tisGesture = false,\r\n\t\t\t\t\tskipReposition = false,\r\n\t\t\t\t\tactive = false,\r\n\t\t\t\t\twrapper = dropDown.domNode.parentNode,\r\n\t\t\t\t\taroundNodePos = domGeometry.position(aroundNode, false),\r\n\t\t\t\t\tpopupPos = domGeometry.position(wrapper, false),\r\n\t\t\t\t\tdeltaX = popupPos.x - aroundNodePos.x,\r\n\t\t\t\t\tdeltaY = popupPos.y - aroundNodePos.y,\r\n\t\t\t\t\tstartX = -1, startY = -1;\r\n\r\n\t\t\t\t// touchstart isn't really needed since touchmove implies touchstart, but\r\n\t\t\t\t// mousedown is needed since mousemove doesn't know if the left button is down or not\r\n\t\t\t\tthis.startHandler = this.connect(win.doc.documentElement, touch.press,\r\n\t\t\t\t\tfunction(e){\r\n\t\t\t\t\t\tskipReposition = true;\r\n\t\t\t\t\t\tactive = true;\r\n\t\t\t\t\t\tisGesture = false;\r\n\t\t\t\t\t\tstartX = e.clientX;\r\n\t\t\t\t\t\tstartY = e.clientY;\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\tthis.moveHandler = this.connect(win.doc.documentElement, touch.move,\r\n\t\t\t\t\tfunction(e){\r\n\t\t\t\t\t\tskipReposition = true;\r\n\t\t\t\t\t\tif(e.touches){\r\n\t\t\t\t\t\t\tactive = isGesture = true; // touchmove implies touchstart\r\n\t\t\t\t\t\t}else if(active && (e.clientX != startX || e.clientY != startY)){\r\n\t\t\t\t\t\t\tisGesture = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\tthis.clickHandler = this.connect(dropDown.domNode, \"onclick\",\r\n\t\t\t\t\tfunction(){\r\n\t\t\t\t\t\tskipReposition = true;\r\n\t\t\t\t\t\tactive = isGesture = false; // click implies no gesture movement\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\tthis.endHandler = this.connect(win.doc.documentElement, touch.release,\r\n\t\t\t\t\tfunction(){\r\n\t\t\t\t\t\tthis.defer(function(){ // allow onclick to go first\r\n\t\t\t\t\t\t\tskipReposition = true;\r\n\t\t\t\t\t\t\tif(!isGesture && active){ // if click without move, then close dropdown\r\n\t\t\t\t\t\t\t\tthis.closeDropDown();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tactive = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\tthis.repositionTimer = setInterval(lang.hitch(this, function(){\r\n\t\t\t\t\tif(skipReposition){ // don't reposition if busy\r\n\t\t\t\t\t\tskipReposition = false;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar\tcurrentAroundNodePos = domGeometry.position(aroundNode, false),\r\n\t\t\t\t\t\tcurrentPopupPos = domGeometry.position(wrapper, false),\r\n\t\t\t\t\t\tcurrentDeltaX = currentPopupPos.x - currentAroundNodePos.x,\r\n\t\t\t\t\t\tcurrentDeltaY = currentPopupPos.y - currentAroundNodePos.y;\r\n\t\t\t\t\t// if the popup is no longer placed correctly, relocate it\r\n\t\t\t\t\tif(Math.abs(currentDeltaX - deltaX) >= 1 || Math.abs(currentDeltaY - deltaY) >= 1){ // Firefox plays with partial pixels\r\n\t\t\t\t\t\tdomStyle.set(wrapper, { left: parseInt(domStyle.get(wrapper, \"left\")) + deltaX - currentDeltaX + 'px', top: parseInt(domStyle.get(wrapper, \"top\")) + deltaY - currentDeltaY + 'px' });\r\n\t\t\t\t\t}\r\n\t\t\t\t}), 50); // yield a short time to allow for consolidation for better CPU throughput\r\n\t\t\t}\r\n\r\n\t\t\t// We need to disable input control in order to prevent opening the soft keyboard in IE\r\n\t\t\tif(has(\"windows-theme\")){\r\n\t\t\t\tthis.domNode.setAttribute(\"disabled\", true);\r\n\t\t\t}\r\n\r\n\t\t\treturn retVal;\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.connect(this.domNode, \"onclick\", \"_onClick\");\r\n\t\t\tdomAttr.set(this.domNode, \"role\", \"combobox\");\r\n\t\t\tdomAttr.set(this.domNode, \"aria-expanded\", \"false\");\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tif(this.repositionTimer){\r\n\t\t\t\tclearInterval(this.repositionTimer);\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_onClick: function(/*Event*/ e){\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\t\r\n\t\t\t// throttle clicks to prevent double click from doing double actions\r\n\t\t\tif(!this._throttleHandler){\r\n\t\t\t\tif(this.opened){\r\n\t\t\t\t\tthis.closeDropDown();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis._startSearchAll();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n"]}