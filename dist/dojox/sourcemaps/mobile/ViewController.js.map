{"version":3,"sources":["mobile/ViewController.js"],"names":["define","dojo","array","connect","declare","lang","win","Deferred","dom","domClass","domConstruct","on","ready","registry","ProgressIndicator","TransitionEvent","viewRegistry","Controller","dataHandlerClass","dataSourceClass","fileTypeMapClass","constructor","this","viewMap","hitch","body","findTransitionViews","moveTo","match","params","RegExp","$2","view","byId","$1","v","getParent","isVisible","sv","getShowingView","id","show","openExternalView","transOpts","target","d","url","noTransition","hide","dispatch","resolve","refNode","i","childNodes","length","c","nodeType","getAttribute","byNode","fixed","dh","ds","ft","require","DataHandler","DataSource","FileTypeMap","handler","data","contentType","getContentType","processData","reject","onStartTransition","evt","preventDefault","detail","href","scene","urlTarget","w","containerNode","getEnclosingView","domNode","parentNode","src","getEnclosingWidget","callback","context","method","hrefTarget","global","open","getParentView","performTransition","transitionDir","transition","location","publish","arr","fromView","toView","hash","hashchange","initialView","charAt","replace","_instance","getInstance"],"mappings":"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","file":"../../mobile/ViewController.js","sourcesContent":["define([\r\n\t\"dojo/_base/kernel\",\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/connect\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/window\",\r\n\t\"dojo/_base/Deferred\",\r\n\t\"dojo/dom\",\r\n\t\"dojo/dom-class\",\r\n\t\"dojo/dom-construct\",\r\n\t\"dojo/on\",\r\n\t\"dojo/ready\",\r\n\t\"dijit/registry\",\r\n\t\"./ProgressIndicator\",\r\n\t\"./TransitionEvent\",\r\n\t\"./viewRegistry\"\r\n], function(dojo, array, connect, declare, lang, win, Deferred, dom, domClass, domConstruct, on, ready, registry, ProgressIndicator, TransitionEvent, viewRegistry){\r\n\r\n\t// module:\r\n\t//\t\tdojox/mobile/ViewController\r\n\r\n\tvar Controller = declare(\"dojox.mobile.ViewController\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tA singleton class that controls view transition.\r\n\t\t// description:\r\n\t\t//\t\tThis class listens to the \"startTransition\" events and performs\r\n\t\t//\t\tview transitions. If the transition destination is an external\r\n\t\t//\t\tview specified with the url parameter, the view content is\r\n\t\t//\t\tretrieved and parsed to create a new target view.\r\n\r\n\t\t// dataHandlerClass: Object\r\n\t\t//\t\tThe data handler class used to load external views,\r\n\t\t//\t\tby default \"dojox/mobile/dh/DataHandler\"\r\n\t\t//\t\t(see the Data Handlers page in the reference documentation).\r\n\t\tdataHandlerClass: \"dojox/mobile/dh/DataHandler\",\r\n\t\t// dataSourceClass: Object\r\n\t\t//\t\tThe data source class used to load external views,\r\n\t\t//\t\tby default \"dojox/mobile/dh/UrlDataSource\"\r\n\t\t//\t\t(see the Data Handlers page in the reference documentation).\r\n\t\tdataSourceClass: \"dojox/mobile/dh/UrlDataSource\",\r\n\t\t// fileTypeMapClass: Object\r\n\t\t//\t\tThe file type map class used to load external views,\r\n\t\t//\t\tby default \"dojox/mobile/dh/SuffixFileTypeMap\"\r\n\t\t//\t\t(see the Data Handlers page in the reference documentation).\r\n\t\tfileTypeMapClass: \"dojox/mobile/dh/SuffixFileTypeMap\",\r\n\r\n\t\tconstructor: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates a new instance of the class.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tthis.viewMap = {};\r\n\t\t\tready(lang.hitch(this, function(){\r\n\t\t\t\ton(win.body(), \"startTransition\", lang.hitch(this, \"onStartTransition\"));\r\n\t\t\t}));\r\n\t\t},\r\n\r\n\t\tfindTransitionViews: function(/*String*/moveTo){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tParses the moveTo argument and determines a starting view and a destination view.\r\n\t\t\t// returns: Array\r\n\t\t\t//\t\tAn array containing the currently showing view, the destination view\r\n\t\t\t//\t\tand the transition parameters, or an empty array if the moveTo argument\r\n\t\t\t//\t\tcould not be parsed. \r\n\t\t\tif(!moveTo){ return []; }\r\n\t\t\t// removes a leading hash mark (#) and params if exists\r\n\t\t\t// ex. \"#bar&myParam=0003\" -> \"bar\"\r\n\t\t\tmoveTo.match(/^#?([^&?]+)(.*)/);\r\n\t\t\tvar params = RegExp.$2;\r\n\t\t\tvar view = registry.byId(RegExp.$1);\r\n\t\t\tif(!view){ return []; }\r\n\t\t\tfor(var v = view.getParent(); v; v = v.getParent()){ // search for the topmost invisible parent node\r\n\t\t\t\tif(v.isVisible && !v.isVisible()){\r\n\t\t\t\t\tvar sv = view.getShowingView();\r\n\t\t\t\t\tif(sv && sv.id !== view.id){\r\n\t\t\t\t\t\tview.show();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tview = v;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn [view.getShowingView(), view, params]; // fromView, toView, params\r\n\t\t},\r\n\r\n\t\topenExternalView: function(/*Object*/ transOpts, /*DomNode*/ target){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tLoads an external view and performs a transition to it.\r\n\t\t\t// returns: dojo/_base/Deferred\r\n\t\t\t//\t\tDeferred object that resolves when the external view is\r\n\t\t\t//\t\tready and a transition starts. Note that it resolves before\r\n\t\t\t//\t\tthe transition is complete.\r\n\t\t\t// description:\r\n\t\t\t//\t\tThis method loads external view content through the\r\n\t\t\t//\t\tdojox/mobile data handlers, creates a new View instance with\r\n\t\t\t//\t\tthe loaded content, and performs a view transition to the\r\n\t\t\t//\t\tnew view. The external view content can be specified with\r\n\t\t\t//\t\tthe url property of transOpts. The new view is created under\r\n\t\t\t//\t\ta DOM node specified by target.\r\n\t\t\t//\r\n\t\t\t// example:\r\n\t\t\t//\t\tThis example loads view1.html, creates a new view under\r\n\t\t\t//\t\t`<body>`, and performs a transition to the new view with the\r\n\t\t\t//\t\tslide animation.\r\n\t\t\t//\t\t\r\n\t\t\t//\t|\tvar vc = ViewController.getInstance();\r\n\t\t\t//\t|\tvc.openExternalView({\r\n\t\t\t//\t|\t    url: \"view1.html\", \r\n\t\t\t//\t|\t    transition: \"slide\"\r\n\t\t\t//\t|\t}, win.body());\r\n\t\t\t//\r\n\t\t\t//\r\n\t\t\t// example:\r\n\t\t\t//\t\tIf you want to perform a view transition without animation,\r\n\t\t\t//\t\tyou can give transition:\"none\" to transOpts.\r\n\t\t\t//\r\n\t\t\t//\t|\tvar vc = ViewController.getInstance();\r\n\t\t\t//\t|\tvc.openExternalView({\r\n\t\t\t//\t|\t    url: \"view1.html\", \r\n\t\t\t//\t|\t    transition: \"none\"\r\n\t\t\t//\t|\t}, win.body());\r\n\t\t\t//\r\n\t\t\t// example:\r\n\t\t\t//\t\tIf you want to dynamically create an external view, but do\r\n\t\t\t//\t\tnot want to perform a view transition to it, you can give noTransition:true to transOpts.\r\n\t\t\t//\t\tThis may be useful when you want to preload external views before the user starts using them.\r\n\t\t\t//\r\n\t\t\t//\t|\tvar vc = ViewController.getInstance();\r\n\t\t\t//\t|\tvc.openExternalView({\r\n\t\t\t//\t|\t    url: \"view1.html\", \r\n\t\t\t//\t|\t    noTransition: true\r\n\t\t\t//\t|\t}, win.body());\r\n\t\t\t//\r\n\t\t\t// example:\r\n\t\t\t//\t\tTo do something when the external view is ready:\r\n\t\t\t//\r\n\t\t\t//\t|\tvar vc = ViewController.getInstance();\r\n\t\t\t//\t|\tDeferred.when(vc.openExternalView({...}, win.body()), function(){\r\n\t\t\t//\t|\t    doSomething();\r\n\t\t\t//\t|\t});\r\n\r\n\t\t\tvar d = new Deferred();\r\n\t\t\tvar id = this.viewMap[transOpts.url];\r\n\t\t\tif(id){\r\n\t\t\t\ttransOpts.moveTo = id;\r\n\t\t\t\tif(transOpts.noTransition){\r\n\t\t\t\t\tregistry.byId(id).hide();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tnew TransitionEvent(win.body(), transOpts).dispatch();\r\n\t\t\t\t}\r\n\t\t\t\td.resolve(true);\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\r\n\t\t\t// if a fixed bottom bar exists, a new view should be placed before it.\r\n\t\t\tvar refNode = null;\r\n\t\t\tfor(var i = target.childNodes.length - 1; i >= 0; i--){\r\n\t\t\t\tvar c = target.childNodes[i];\r\n\t\t\t\tif(c.nodeType === 1){\r\n\t\t\t\t\tvar fixed = c.getAttribute(\"fixed\") // TODO: Remove the non-HTML5-compliant attribute in 2.0\r\n\t\t\t\t\t\t|| c.getAttribute(\"data-mobile-fixed\")\r\n\t\t\t\t\t\t|| (registry.byNode(c) && registry.byNode(c).fixed);\r\n\t\t\t\t\tif(fixed === \"bottom\"){\r\n\t\t\t\t\t\trefNode = c;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar dh = transOpts.dataHandlerClass || this.dataHandlerClass;\r\n\t\t\tvar ds = transOpts.dataSourceClass || this.dataSourceClass;\r\n\t\t\tvar ft = transOpts.fileTypeMapClass || this.fileTypeMapClass;\r\n\t\t\trequire([dh, ds, ft], lang.hitch(this, function(DataHandler, DataSource, FileTypeMap){\r\n\t\t\t\tvar handler = new DataHandler(new DataSource(transOpts.data || transOpts.url), target, refNode);\r\n\t\t\t\tvar contentType = transOpts.contentType || FileTypeMap.getContentType(transOpts.url) || \"html\";\r\n\t\t\t\thandler.processData(contentType, lang.hitch(this, function(id){\r\n\t\t\t\t\tif(id){\r\n\t\t\t\t\t\tthis.viewMap[transOpts.url] = transOpts.moveTo = id;\r\n\t\t\t\t\t\tif(transOpts.noTransition){\r\n\t\t\t\t\t\t\tregistry.byId(id).hide();\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tnew TransitionEvent(win.body(), transOpts).dispatch();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\td.resolve(true);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\td.reject(\"Failed to load \"+transOpts.url);\r\n\t\t\t\t\t}\r\n\t\t\t\t}));\r\n\t\t\t}));\r\n\t\t\treturn d;\r\n\t\t},\r\n\r\n\t\tonStartTransition: function(evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tA handler that performs view transition.\r\n\t\t\tevt.preventDefault();\r\n\t\t\tif(!evt.detail){ return; }\r\n\t\t\tvar detail = evt.detail;\r\n\t\t\tif(!detail.moveTo && !detail.href && !detail.url && !detail.scene){ return; }\r\n\r\n\t\t\tif(detail.url && !detail.moveTo){\r\n\t\t\t\tvar urlTarget = detail.urlTarget;\r\n\t\t\t\tvar w = registry.byId(urlTarget);\r\n\t\t\t\tvar target = w && w.containerNode || dom.byId(urlTarget);\r\n\t\t\t\tif(!target){\r\n\t\t\t\t\tw = viewRegistry.getEnclosingView(evt.target);\r\n\t\t\t\t\ttarget = w && w.domNode.parentNode || win.body();\r\n\t\t\t\t}\r\n\t\t\t\tvar src = registry.getEnclosingWidget(evt.target);\r\n\t\t\t\tif(src && src.callback){\r\n\t\t\t\t\tdetail.context = src;\r\n\t\t\t\t\tdetail.method = src.callback;\r\n\t\t\t\t}\r\n\t\t\t\tthis.openExternalView(detail, target);\r\n\t\t\t\treturn;\r\n\t\t\t}else if(detail.href){\r\n\t\t\t\tif(detail.hrefTarget && detail.hrefTarget != \"_self\"){\r\n\t\t\t\t\twin.global.open(detail.href, detail.hrefTarget);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar view; // find top level visible view\r\n\t\t\t\t\tfor(var v = viewRegistry.getEnclosingView(evt.target); v; v = viewRegistry.getParentView(v)){\r\n\t\t\t\t\t\tview = v;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(view){\r\n\t\t\t\t\t\tview.performTransition(null, detail.transitionDir, detail.transition, evt.target, function(){location.href = detail.href;});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}else if(detail.scene){\r\n\t\t\t\tconnect.publish(\"/dojox/mobile/app/pushScene\", [detail.scene]);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar arr = this.findTransitionViews(detail.moveTo),\r\n\t\t\t\tfromView = arr[0],\r\n\t\t\t\ttoView = arr[1],\r\n\t\t\t\tparams = arr[2];\r\n\t\t\tif(!location.hash && !detail.hashchange){\r\n\t\t\t\tviewRegistry.initialView = fromView;\r\n\t\t\t}\r\n\t\t\tif(detail.moveTo && toView){\r\n\t\t\t\tdetail.moveTo = (detail.moveTo.charAt(0) === '#' ? '#' + toView.id : toView.id) + params;\r\n\t\t\t}\r\n\t\t\tif(!fromView || (detail.moveTo && fromView === registry.byId(detail.moveTo.replace(/^#?([^&?]+).*/, \"$1\")))){ return; }\r\n\t\t\tsrc = registry.getEnclosingWidget(evt.target);\r\n\t\t\tif(src && src.callback){\r\n\t\t\t\tdetail.context = src;\r\n\t\t\t\tdetail.method = src.callback;\r\n\t\t\t}\r\n\t\t\tfromView.performTransition(detail);\r\n\t\t}\r\n\t});\r\n\tController._instance = new Controller(); // singleton\r\n\tController.getInstance = function(){\r\n\t\treturn Controller._instance;\r\n\t};\r\n\treturn Controller;\r\n});\r\n\r\n"]}