{"version":3,"sources":["mobile/PageIndicator.js"],"names":["define","connect","declare","dom","domClass","domConstruct","registry","Contained","WidgetBase","messages","refId","baseClass","buildRendering","this","inherited","arguments","domNode","setAttribute","_tblNode","create","className","insertRow","subscribe","view","reset","startup","_this","defer","i","c","dot","r","rows","a","value","children","byId","parentNode","childNodes","length","isView","push","cells","empty","insertCell","appendChild","currentView","byNode","getShowingView","firstChild","add","remove","replace","removeAttribute","node","nodeType","contains","_onClick","e","onClick","target","layerX","offsetLeft","publish","offsetWidth"],"mappings":";;;;;;;AAAAA,QACC,qBACA,qBACA,WACA,iBACA,qBACA,iBACA,mBACA,oBACA,uCACE,SAASC,EAASC,EAASC,EAAKC,EAAUC,EAAcC,EAAUC,EAAWC,EAAYC,GAK3F,OAAOP,EAAQ,8BAA+BM,EAAYD,IAazDG,MAAO,GAIPC,UAAW,mBAEXC,eAAgB,WACfC,KAAKC,UAAUC,WACfF,KAAKG,QAAQC,aAAa,OAAQ,OAClCJ,KAAKK,SAAWb,EAAac,OAAO,SAAUC,UAAU,6BAA8BP,KAAKG,SAC3FH,KAAKK,SAASG,WAAW,GACzBR,KAAKZ,QAAQY,KAAKG,QAAS,UAAW,YACtCH,KAAKS,UAAU,4BAA6B,SAASC,GACpDV,KAAKW,WAIPC,QAAS,WACR,IAAIC,EAAQb,KACZa,EAAMC,MAAM,WACXD,EAAMF,WAIRA,MAAO,WAGN,IACII,EAAGC,EAAWC,EADdC,EAAIlB,KAAKK,SAASc,KAAK,GACjBC,KAAaC,EAAQ,EAE3BC,GADWtB,KAAKH,OAASP,EAAIiC,KAAKvB,KAAKH,QAAWG,KAAKG,SACpCqB,WAAWC,WAClC,IAAIV,EAAI,EAAGA,EAAIO,EAASI,OAAQX,IAC/BC,EAAIM,EAASP,GACVf,KAAK2B,OAAOX,IACdI,EAAEQ,KAAKZ,GAGT,GAAGE,EAAEW,MAAMH,SAAWN,EAAEM,OAEvB,IADAlC,EAAasC,MAAMZ,GACfH,EAAI,EAAGA,EAAIK,EAAEM,OAAQX,IACxBC,EAAII,EAAEL,GACNE,EAAMzB,EAAac,OAAO,OAAQC,UAAU,wBAC5CW,EAAEa,YAAY,GAAGC,YAAYf,GAG/B,GAAgB,IAAbG,EAAEM,OAAL,CACA,IAAIO,EAAcxC,EAASyC,OAAOd,EAAE,IAAIe,iBACxC,IAAIpB,EAAI,EAAGA,EAAIG,EAAEW,MAAMH,OAAQX,IAC9BE,EAAMC,EAAEW,MAAMd,GAAGqB,WACdhB,EAAEL,KAAOkB,EAAY9B,SACvBkB,EAAQN,EAAI,EACZxB,EAAS8C,IAAIpB,EAAK,gCAElB1B,EAAS+C,OAAOrB,EAAK,+BAGnBC,EAAEW,MAAMH,OACX1B,KAAKG,QAAQC,aAAa,MAAOR,EAA6B,mBAAE2C,QAAQ,KAAMlB,GAAOkB,QAAQ,KAAMrB,EAAEW,MAAMH,SAE3G1B,KAAKG,QAAQqC,gBAAgB,SAI/Bb,OAAQ,SAASc,GAGhB,OAAQA,GAA0B,IAAlBA,EAAKC,UAAkBnD,EAASoD,SAASF,EAAM,YAGhEG,SAAU,SAASC,IAKK,IAApB7C,KAAK8C,QAAQD,IACbA,EAAEE,SAAW/C,KAAKG,UAClB0C,EAAEG,OAAShD,KAAKK,SAAS4C,WAC3B7D,EAAQ8D,QAAQ,0BAA2BlD,OACnC6C,EAAEG,OAAShD,KAAKK,SAAS4C,WAAajD,KAAKK,SAAS8C,aAC5D/D,EAAQ8D,QAAQ,0BAA2BlD,SAI7C8C,QAAS","file":"../../mobile/PageIndicator.js","sourcesContent":["define([\r\n\t\"dojo/_base/connect\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/dom\",\r\n\t\"dojo/dom-class\",\r\n\t\"dojo/dom-construct\",\r\n\t\"dijit/registry\",\r\n\t\"dijit/_Contained\",\r\n\t\"dijit/_WidgetBase\",\r\n\t\"dojo/i18n!dojox/mobile/nls/messages\"\r\n], function(connect, declare, dom, domClass, domConstruct, registry, Contained, WidgetBase, messages){\r\n\r\n\t// module:\r\n\t//\t\tdojox/mobile/PageIndicator\r\n\r\n\treturn declare(\"dojox.mobile.PageIndicator\", [WidgetBase, Contained],{\r\n\t\t// summary:\r\n\t\t//\t\tA current page indicator.\r\n\t\t// description:\r\n\t\t//\t\tPageIndicator displays a series of gray and white dots to\r\n\t\t//\t\tindicate which page is currently being viewed. It can typically\r\n\t\t//\t\tbe used with dojox/mobile/SwapView. It is also internally used\r\n\t\t//\t\tin dojox/mobile/Carousel.\r\n\r\n\t\t// refId: String\r\n\t\t//\t\tAn ID of a DOM node to be searched. Siblings of the reference\r\n\t\t//\t\tnode will be searched for views. If not specified, this.domNode\r\n\t\t//\t\twill be the reference node.\r\n\t\trefId: \"\",\r\n\r\n\t\t// baseClass: String\r\n\t\t//\t\tThe name of the CSS class of this widget.\r\n\t\tbaseClass: \"mblPageIndicator\",\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.domNode.setAttribute(\"role\", \"img\");\r\n\t\t\tthis._tblNode = domConstruct.create(\"table\", {className:\"mblPageIndicatorContainer\"}, this.domNode);\r\n\t\t\tthis._tblNode.insertRow(-1);\r\n\t\t\tthis.connect(this.domNode, \"onclick\", \"_onClick\");\r\n\t\t\tthis.subscribe(\"/dojox/mobile/viewChanged\", function(view){\r\n\t\t\t\tthis.reset();\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\tvar _this = this;\r\n\t\t\t_this.defer(function(){ // to wait until views' visibility is determined\r\n\t\t\t\t_this.reset();\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\treset: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUpdates the indicator.\r\n\t\t\tvar r = this._tblNode.rows[0];\r\n\t\t\tvar i, c, a = [], dot, value = 0;\r\n\t\t\tvar refNode = (this.refId && dom.byId(this.refId)) || this.domNode;\r\n\t\t\tvar children = refNode.parentNode.childNodes;\r\n\t\t\tfor(i = 0; i < children.length; i++){\r\n\t\t\t\tc = children[i];\r\n\t\t\t\tif(this.isView(c)){\r\n\t\t\t\t\ta.push(c);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(r.cells.length !== a.length){\r\n\t\t\t\tdomConstruct.empty(r);\r\n\t\t\t\tfor(i = 0; i < a.length; i++){\r\n\t\t\t\t\tc = a[i];\r\n\t\t\t\t\tdot = domConstruct.create(\"div\", {className:\"mblPageIndicatorDot\"});\r\n\t\t\t\t\tr.insertCell(-1).appendChild(dot);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(a.length === 0){ return; }\r\n\t\t\tvar currentView = registry.byNode(a[0]).getShowingView();\r\n\t\t\tfor(i = 0; i < r.cells.length; i++){\r\n\t\t\t\tdot = r.cells[i].firstChild;\r\n\t\t\t\tif(a[i] === currentView.domNode){\r\n\t\t\t\t\tvalue = i + 1;\r\n\t\t\t\t\tdomClass.add(dot, \"mblPageIndicatorDotSelected\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdomClass.remove(dot, \"mblPageIndicatorDotSelected\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (r.cells.length)  {\r\n\t\t\t\tthis.domNode.setAttribute(\"alt\", messages[\"PageIndicatorLabel\"].replace(\"$0\", value).replace(\"$1\", r.cells.length));\r\n\t\t\t} else {\r\n\t\t\t\tthis.domNode.removeAttribute(\"alt\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tisView: function(node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns true if the given node is a view.\r\n\t\t\treturn (node && node.nodeType === 1 && domClass.contains(node, \"mblView\")); // Boolean\r\n\t\t},\r\n\r\n\t\t_onClick: function(e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal handler for click events.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(this.onClick(e) === false){ return; } // user's click action\r\n\t\t\tif(e.target !== this.domNode){ return; }\r\n\t\t\tif(e.layerX < this._tblNode.offsetLeft){\r\n\t\t\t\tconnect.publish(\"/dojox/mobile/prevPage\", [this]);\r\n\t\t\t}else if(e.layerX > this._tblNode.offsetLeft + this._tblNode.offsetWidth){\r\n\t\t\t\tconnect.publish(\"/dojox/mobile/nextPage\", [this]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonClick: function(/*Event*/ /*===== e =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUser-defined function to handle clicks.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t}\r\n\t});\r\n});\r\n"]}