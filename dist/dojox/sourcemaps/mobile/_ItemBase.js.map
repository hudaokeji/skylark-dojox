{"version":3,"sources":["mobile/_ItemBase.js"],"names":["define","array","declare","lang","win","domClass","touch","registry","Contained","Container","WidgetBase","TransitionEvent","iconUtils","has","viewRegistry","BidiItemBase","_ItemBase","icon","iconPos","alt","href","hrefTarget","moveTo","scene","clickable","url","urlTarget","back","transition","transitionDir","transitionOptions","callback","label","toggle","selected","tabIndex","_setTabIndexAttr","paramsToInherit","_selStartMethod","_selEndMethod","_delayedSelection","_duration","_handleClick","buildRendering","this","inherited","arguments","_isOnLine","inheritParams","startup","_started","_updateHandles","parent","getParent","forEach","split","p","match","base","pos","charAt","length","_onTouchStartHandle","connect","domNode","press","disconnect","getTransOpts","opts","userClickAction","defaultClickAction","e","handleSelection","makeTransition","set","_onTouchEndHandle","_currentSel","selectOne","defer","history","global","open","_onNewWindowOpened","doTransition","target","_prepareForTransition","setTransitionPos","dispatch","transOpts","_onTouchStart","isEditing","onTouchStart","enclosingScrollable","getEnclosingScrollable","contains","containerNode","_onTouchMoveHandle","body","move","release","touchStartX","touches","pageX","clientX","touchStartY","pageY","clientY","_selTimer","_onTouchMove","x","y","Math","abs","cancel","_prevSel","_disconnect","remove","_onTouchEnd","_onClick","w","clickedPosX","clickedPosY","transitionTo","_setIconAttr","_set","iconNode","setIcon","iconParentNode","refNode","position","_pendingIcon","_setLabelAttr","text","labelNode","innerHTML","_cv","_setSelectedAttr","arr","filter","getChildren","c"],"mappings":"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","file":"../../mobile/_ItemBase.js","sourcesContent":["define([\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/_base/window\",\r\n\t\"dojo/dom-class\",\r\n\t\"dojo/touch\",\r\n\t\"dijit/registry\",\r\n\t\"dijit/_Contained\",\r\n\t\"dijit/_Container\",\r\n\t\"dijit/_WidgetBase\",\r\n\t\"./TransitionEvent\",\r\n\t\"./iconUtils\",\r\n\t\"./sniff\",\r\n\t\"./viewRegistry\",\r\n\t\"dojo/has!dojo-bidi?dojox/mobile/bidi/_ItemBase\"\r\n], function(array, declare, lang, win, domClass, touch, registry, Contained, Container, \r\n\tWidgetBase, TransitionEvent, iconUtils, has, viewRegistry, BidiItemBase){\r\n\r\n\t// module:\r\n\t//\t\tdojox/mobile/_ItemBase\r\n\r\n\tvar _ItemBase = declare(has(\"dojo-bidi\") ? \"dojox.mobile._NonBidiItemBase\" : \"dojox.mobile._ItemBase\", [WidgetBase, Container, Contained], {\r\n\t\t// summary:\r\n\t\t//\t\tA base class for item classes (e.g. ListItem, IconItem, etc.).\r\n\t\t// description:\r\n\t\t//\t\t_ItemBase is a base class for widgets that have capability to\r\n\t\t//\t\tmake a view transition when clicked.\r\n\r\n\t\t// icon: String\r\n\t\t//\t\tAn icon image to display. The value can be either a path for an\r\n\t\t//\t\timage file or a class name of a DOM button. If icon is not\r\n\t\t//\t\tspecified, the iconBase parameter of the parent widget is used.\r\n\t\ticon: \"\",\r\n\r\n\t\t// iconPos: String\r\n\t\t//\t\tThe position of an aggregated icon. IconPos is comma separated\r\n\t\t//\t\tvalues like top,left,width,height (ex. \"0,0,29,29\"). If iconPos\r\n\t\t//\t\tis not specified, the iconPos parameter of the parent widget is\r\n\t\t//\t\tused.\r\n\t\ticonPos: \"\", // top,left,width,height (ex. \"0,0,29,29\")\r\n\r\n\t\t// alt: String\r\n\t\t//\t\tAn alternate text for the icon image.\r\n\t\talt: \"\",\r\n\r\n\t\t// href: String\r\n\t\t//\t\tA URL of another web page to go to.\r\n\t\thref: \"\",\r\n\r\n\t\t// hrefTarget: String\r\n\t\t//\t\tA target that specifies where to open a page specified by\r\n\t\t//\t\thref. The value will be passed to the 2nd argument of\r\n\t\t//\t\twindow.open().\r\n\t\threfTarget: \"\",\r\n\r\n\t\t// moveTo: String\r\n\t\t//\t\tThe id of the transition destination view which resides in the\r\n\t\t//\t\tcurrent page.\r\n\t\t//\r\n\t\t//\t\tIf the value has a hash sign ('#') before the id (e.g. #view1)\r\n\t\t//\t\tand the dojo/hash module is loaded by the user application, the\r\n\t\t//\t\tview transition updates the hash in the browser URL so that the\r\n\t\t//\t\tuser can bookmark the destination view. In this case, the user\r\n\t\t//\t\tcan also use the browser's back/forward button to navigate\r\n\t\t//\t\tthrough the views in the browser history.\r\n\t\t//\r\n\t\t//\t\tIf null, transitions to a blank view.\r\n\t\t//\t\tIf '#', returns immediately without transition.\r\n\t\tmoveTo: \"\",\r\n\r\n\t\t// scene: String\r\n\t\t//\t\tThe name of a scene. Used from dojox/mobile/app.\r\n\t\tscene: \"\",\r\n\r\n\t\t// clickable: Boolean\r\n\t\t//\t\tIf true, this item becomes clickable even if a transition\r\n\t\t//\t\tdestination (moveTo, etc.) is not specified.\r\n\t\tclickable: false,\r\n\r\n\t\t// url: String\r\n\t\t//\t\tA URL of an html fragment page or JSON data that represents a\r\n\t\t//\t\tnew view content. The view content is loaded with XHR and\r\n\t\t//\t\tinserted in the current page. Then a view transition occurs to\r\n\t\t//\t\tthe newly created view. The view is cached so that subsequent\r\n\t\t//\t\trequests would not load the content again.\r\n\t\turl: \"\",\r\n\r\n\t\t// urlTarget: String\r\n\t\t//\t\tNode id under which a new view will be created according to the\r\n\t\t//\t\turl parameter. If not specified, The new view will be created as\r\n\t\t//\t\ta sibling of the current view.\r\n\t\turlTarget: \"\",\r\n\r\n\t\t// back: Boolean\r\n\t\t//\t\tIf true, history.back() is called when clicked.\r\n\t\tback: false,\r\n\r\n\t\t// transition: String\r\n\t\t//\t\tA type of animated transition effect. You can choose from the\r\n\t\t//\t\tstandard transition types, \"slide\", \"fade\", \"flip\", or from the\r\n\t\t//\t\textended transition types, \"cover\", \"coverv\", \"dissolve\",\r\n\t\t//\t\t\"reveal\", \"revealv\", \"scaleIn\", \"scaleOut\", \"slidev\",\r\n\t\t//\t\t\"swirl\", \"zoomIn\", \"zoomOut\", \"cube\", and \"swap\". If \"none\" is\r\n\t\t//\t\tspecified, transition occurs immediately without animation.\r\n\t\ttransition: \"\",\r\n\r\n\t\t// transitionDir: Number\r\n\t\t//\t\tThe transition direction. If 1, transition forward. If -1,\r\n\t\t//\t\ttransition backward. For example, the slide transition slides\r\n\t\t//\t\tthe view from right to left when dir == 1, and from left to\r\n\t\t//\t\tright when dir == -1.\r\n\t\ttransitionDir: 1,\r\n\r\n\t\t// transitionOptions: Object\r\n\t\t//\t\tA hash object that holds transition options.\r\n\t\ttransitionOptions: null,\r\n\r\n\t\t// callback: Function|String\r\n\t\t//\t\tA callback function that is called when the transition has been\r\n\t\t//\t\tfinished. A function reference, or name of a function in\r\n\t\t//\t\tcontext.\r\n\t\tcallback: null,\r\n\r\n\t\t// label: String\r\n\t\t//\t\tA label of the item. If the label is not specified, innerHTML is\r\n\t\t//\t\tused as a label.\r\n\t\tlabel: \"\",\r\n\r\n\t\t// toggle: Boolean\r\n\t\t//\t\tIf true, the item acts like a toggle button.\r\n\t\ttoggle: false,\r\n\r\n\t\t// selected: Boolean\r\n\t\t//\t\tIf true, the item is highlighted to indicate it is selected.\r\n\t\tselected: false,\r\n\r\n\t\t// tabIndex: String\r\n\t\t//\t\tTabindex setting for the item so users can hit the tab key to\r\n\t\t//\t\tfocus on it.\r\n\t\ttabIndex: \"0\",\r\n\t\t\r\n\t\t// _setTabIndexAttr: [private] String\r\n\t\t//\t\tSets tabIndex to domNode.\r\n\t\t_setTabIndexAttr: \"\",\r\n\r\n\t\t/* internal properties */\t\r\n\r\n\t\t// paramsToInherit: String\r\n\t\t//\t\tComma separated parameters to inherit from the parent.\r\n\t\tparamsToInherit: \"transition,icon\",\r\n\r\n\t\t// _selStartMethod: String\r\n\t\t//\t\tSpecifies how the item enters the selected state.\r\n\t\t//\r\n\t\t//\t\t- \"touch\": Use touch events to enter the selected state.\r\n\t\t//\t\t- \"none\": Do not change the selected state.\r\n\t\t_selStartMethod: \"none\", // touch or none\r\n\r\n\t\t// _selEndMethod: String\r\n\t\t//\t\tSpecifies how the item leaves the selected state.\r\n\t\t//\r\n\t\t//\t\t- \"touch\": Use touch events to leave the selected state.\r\n\t\t//\t\t- \"timer\": Use setTimeout to leave the selected state.\r\n\t\t//\t\t- \"none\": Do not change the selected state.\r\n\t\t_selEndMethod: \"none\", // touch, timer, or none\r\n\r\n\t\t// _delayedSelection: Boolean\r\n\t\t//\t\tIf true, selection is delayed 100ms and canceled if dragged in\r\n\t\t//\t\torder to avoid selection when flick operation is performed.\r\n\t\t_delayedSelection: false,\r\n\r\n\t\t// _duration: Number\r\n\t\t//\t\tDuration of selection, milliseconds.\r\n\t\t_duration: 800,\r\n\r\n\t\t// _handleClick: Boolean\r\n\t\t//\t\tIf true, this widget listens to touch events.\r\n\t\t_handleClick: true,\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._isOnLine = this.inheritParams();\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\tif(this._started){ return; }\r\n\t\t\tif(!this._isOnLine){\r\n\t\t\t\tthis.inheritParams();\r\n\t\t\t}\r\n\t\t\tthis._updateHandles();\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tinheritParams: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCopies from the parent the values of parameters specified \r\n\t\t\t//\t\tby the property paramsToInherit.\r\n\t\t\tvar parent = this.getParent();\r\n\t\t\tif(parent){\r\n\t\t\t\tarray.forEach(this.paramsToInherit.split(/,/), function(p){\r\n\t\t\t\t\tif(p.match(/icon/i)){\r\n\t\t\t\t\t\tvar base = p + \"Base\", pos = p + \"Pos\";\r\n\t\t\t\t\t\tif(this[p] && parent[base] &&\r\n\t\t\t\t\t\t\tparent[base].charAt(parent[base].length - 1) === '/'){\r\n\t\t\t\t\t\t\tthis[p] = parent[base] + this[p];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!this[p]){ this[p] = parent[base]; }\r\n\t\t\t\t\t\tif(!this[pos]){ this[pos] = parent[pos]; }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!this[p]){ this[p] = parent[p]; }\r\n\t\t\t\t}, this);\r\n\t\t\t}\r\n\t\t\treturn !!parent;\r\n\t\t},\r\n\r\n\t\t_updateHandles: function(){\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(this._handleClick && this._selStartMethod === \"touch\"){\r\n\t\t\t\tif(!this._onTouchStartHandle){\r\n\t\t\t\t\tthis._onTouchStartHandle = this.connect(this.domNode, touch.press, \"_onTouchStart\");\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(this._onTouchStartHandle){\r\n\t\t\t\t\tthis.disconnect(this._onTouchStartHandle);\r\n\t\t\t\t\tthis._onTouchStartHandle = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tgetTransOpts: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCopies from the parent and returns the values of parameters  \r\n\t\t\t//\t\tspecified by the property paramsToInherit.\r\n\t\t\tvar opts = this.transitionOptions || {};\r\n\t\t\tarray.forEach([\"moveTo\", \"href\", \"hrefTarget\", \"url\", \"target\",\r\n\t\t\t\t\"urlTarget\", \"scene\", \"transition\", \"transitionDir\"], function(p){\r\n\t\t\t\topts[p] = opts[p] || this[p];\r\n\t\t\t}, this);\r\n\t\t\treturn opts; // Object\r\n\t\t},\r\n\r\n\t\tuserClickAction: function(/*Event*/ /*===== e =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUser-defined click action.\r\n\t\t},\r\n\r\n\t\tdefaultClickAction: function(/*Event*/e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThe default action of this item.\r\n\t\t\tthis.handleSelection(e);\r\n\t\t\tif(this.userClickAction(e) === false){ return; } // user's click action\r\n\t\t\tthis.makeTransition(e);\r\n\t\t},\r\n\r\n\t\thandleSelection: function(/*Event*/e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandles this items selection state.\r\n\r\n\t\t\t// Before transitioning, we want the visual effect of selecting the item.\r\n\t\t\t// To ensure this effect happens even if _delayedSelection is true:\r\n\t\t\tif(this._delayedSelection){\r\n\t\t\t\tthis.set(\"selected\", true);\r\n\t\t\t} // the item will be deselected after transition.\r\n\r\n\t\t\tif(this._onTouchEndHandle){\r\n\t\t\t\tthis.disconnect(this._onTouchEndHandle);\r\n\t\t\t\tthis._onTouchEndHandle = null;\r\n\t\t\t}\r\n\r\n\t\t\tvar p = this.getParent();\r\n\t\t\tif(this.toggle){\r\n\t\t\t\tthis.set(\"selected\", !this._currentSel);\r\n\t\t\t}else if(p && p.selectOne){\r\n\t\t\t\tthis.set(\"selected\", true);\r\n\t\t\t}else{\r\n\t\t\t\tif(this._selEndMethod === \"touch\"){\r\n\t\t\t\t\tthis.set(\"selected\", false);\r\n\t\t\t\t}else if(this._selEndMethod === \"timer\"){\r\n\t\t\t\t\tthis.defer(function(){\r\n\t\t\t\t\t\tthis.set(\"selected\", false);\r\n\t\t\t\t\t}, this._duration);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tmakeTransition: function(/*Event*/e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMakes a transition.\r\n\t\t\tif(this.back && history){\r\n\t\t\t\thistory.back();\t\r\n\t\t\t\treturn;\r\n\t\t\t}\t\r\n\t\t\tif (this.href && this.hrefTarget && this.hrefTarget != \"_self\") {\r\n\t\t\t\twin.global.open(this.href, this.hrefTarget || \"_blank\");\r\n\t\t\t\tthis._onNewWindowOpened(e);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar opts = this.getTransOpts();\r\n\t\t\tvar doTransition = \r\n\t\t\t\t!!(opts.moveTo || opts.href || opts.url || opts.target || opts.scene);\r\n\t\t\tif(this._prepareForTransition(e, doTransition ? opts : null) === false){ return; }\r\n\t\t\tif(doTransition){\r\n\t\t\t\tthis.setTransitionPos(e);\r\n\t\t\t\tnew TransitionEvent(this.domNode, opts, e).dispatch();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onNewWindowOpened: function(/*Event*/ /*===== e =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSubclasses may want to implement it.\r\n\t\t},\r\n\r\n\t\t_prepareForTransition: function(/*Event*/e, /*Object*/transOpts){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSubclasses may want to implement it.\r\n\t\t},\r\n\r\n\t\t_onTouchStart: function(e){\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(this.getParent().isEditing || this.onTouchStart(e) === false){ return; } // user's touchStart action\r\n\t\t\tvar enclosingScrollable = viewRegistry.getEnclosingScrollable(this.domNode);\r\n\t\t\tif(enclosingScrollable &&\r\n\t\t\t\tdomClass.contains(enclosingScrollable.containerNode, \"mblScrollableScrollTo2\")){\r\n\t\t\t\t// #17165: do not select the item during scroll animation\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(!this._onTouchEndHandle && this._selStartMethod === \"touch\"){\r\n\t\t\t\t// Connect to the entire window. Otherwise, fail to receive\r\n\t\t\t\t// events if operation is performed outside this widget.\r\n\t\t\t\t// Expose both connect handlers in case the user has interest.\r\n\t\t\t\tthis._onTouchMoveHandle = this.connect(win.body(), touch.move, \"_onTouchMove\");\r\n\t\t\t\tthis._onTouchEndHandle = this.connect(win.body(), touch.release, \"_onTouchEnd\");\r\n\t\t\t}\r\n\t\t\tthis.touchStartX = e.touches ? e.touches[0].pageX : e.clientX;\r\n\t\t\tthis.touchStartY = e.touches ? e.touches[0].pageY : e.clientY;\r\n\t\t\tthis._currentSel = this.selected;\r\n\r\n\t\t\tif(this._delayedSelection){\r\n\t\t\t\t// so as not to make selection when the user flicks on ScrollableView\r\n\t\t\t\tthis._selTimer = this.defer(function(){\r\n\t\t\t\t\tthis.set(\"selected\", true);\r\n\t\t\t\t}, 100);\r\n\t\t\t}else{\r\n\t\t\t\tthis.set(\"selected\", true);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonTouchStart: function(/*Event*/ /*===== e =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUser-defined function to handle touchStart events.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\t_onTouchMove: function(e){\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar x = e.touches ? e.touches[0].pageX : e.clientX;\r\n\t\t\tvar y = e.touches ? e.touches[0].pageY : e.clientY;\r\n\t\t\tif(Math.abs(x - this.touchStartX) >= 4 ||\r\n\t\t\t   Math.abs(y - this.touchStartY) >= 4){ // dojox/mobile/scrollable.threshold\r\n\t\t\t\tthis.cancel();\r\n\t\t\t\tvar p = this.getParent();\r\n\t\t\t\tif(p && p.selectOne){\r\n\t\t\t\t\tthis._prevSel && this._prevSel.set(\"selected\", true);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.set(\"selected\", false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_disconnect: function(){\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tthis.disconnect(this._onTouchMoveHandle);\r\n\t\t\tthis.disconnect(this._onTouchEndHandle);\r\n\t\t\tthis._onTouchMoveHandle = this._onTouchEndHandle = null;\r\n\t\t},\r\n\r\n\t\tcancel: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCancels an ongoing selection (if any).\r\n\t\t\tif(this._selTimer){\r\n\t\t\t\tthis._selTimer.remove(); \r\n\t\t\t\tthis._selTimer = null;\r\n\t\t\t}\r\n\t\t\tthis._disconnect();\r\n\t\t},\r\n\r\n\t\t_onTouchEnd: function(e){\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(!this._selTimer && this._delayedSelection){ return; }\r\n\t\t\tthis.cancel();\r\n\t\t\tthis._onClick(e);\r\n\t\t},\r\n\r\n\t\tsetTransitionPos: function(e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStores the clicked position for later use.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSome of the transition animations (e.g. ScaleIn) need the\r\n\t\t\t//\t\tclicked position.\r\n\t\t\tvar w = this;\r\n\t\t\twhile(true){\r\n\t\t\t\tw = w.getParent();\r\n\t\t\t\tif(!w || domClass.contains(w.domNode, \"mblView\")){ break; }\r\n\t\t\t}\r\n\t\t\tif(w){\r\n\t\t\t\tw.clickedPosX = e.clientX;\r\n\t\t\t\tw.clickedPosY = e.clientY;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttransitionTo: function(/*String|Object*/moveTo, /*String*/href, /*String*/url, /*String*/scene){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPerforms a view transition.\r\n\t\t\t// description:\r\n\t\t\t//\t\tGiven a transition destination, this method performs a view\r\n\t\t\t//\t\ttransition. This method is typically called when this item\r\n\t\t\t//\t\tis clicked.\r\n\t\t\tvar opts = (moveTo && typeof(moveTo) === \"object\") ? moveTo :\r\n\t\t\t\t{moveTo: moveTo, href: href, url: url, scene: scene,\r\n\t\t\t\t transition: this.transition, transitionDir: this.transitionDir};\r\n\t\t\tnew TransitionEvent(this.domNode, opts).dispatch();\r\n\t\t},\r\n\r\n\t\t_setIconAttr: function(icon){\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(!this._isOnLine){\r\n\t\t\t\t// record the value to be able to reapply it (see the code in the startup method)\r\n\t\t\t\tthis._pendingIcon = icon;  \r\n\t\t\t\treturn; \r\n\t\t\t} // icon may be invalid because inheritParams is not called yet\r\n\t\t\tthis._set(\"icon\", icon);\r\n\t\t\tthis.iconNode = iconUtils.setIcon(icon, this.iconPos, this.iconNode, this.alt, this.iconParentNode, this.refNode, this.position);\r\n\t\t},\r\n\r\n\t\t_setLabelAttr: function(/*String*/text){\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tthis._set(\"label\", text);\r\n\t\t\tthis.labelNode.innerHTML = this._cv ? this._cv(text) : text;\r\n\t\t},\r\n\r\n\t\t_setSelectedAttr: function(/*Boolean*/selected){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMakes this widget in the selected or unselected state.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSubclass should override.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(selected){\r\n\t\t\t\tvar p = this.getParent();\r\n\t\t\t\tif(p && p.selectOne){\r\n\t\t\t\t\t// deselect the currently selected item\r\n\t\t\t\t\tvar arr = array.filter(p.getChildren(), function(w){\r\n\t\t\t\t\t\treturn w.selected;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tarray.forEach(arr, function(c){\r\n\t\t\t\t\t\tthis._prevSel = c;\r\n\t\t\t\t\t\tc.set(\"selected\", false);\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._set(\"selected\", selected);\r\n\t\t}\r\n\t});\r\n\treturn has(\"dojo-bidi\") ? declare(\"dojox.mobile._ItemBase\", [_ItemBase, BidiItemBase]) : _ItemBase;\r\n});\r\n"]}