{"version":3,"sources":["mobile/_DatePickerMixin.js"],"names":["define","array","declare","lang","ddate","datelocale","datestamp","slotMixin","format","d","datePattern","this","pattern","selector","yearSlotMixin","mixin","initLabels","labels","labelFrom","labelTo","i","idx","Date","setFullYear","push","monthSlotMixin","setMonth","daySlotMixin","setDate","yearPattern","monthPattern","dayPattern","initSlots","c","slotClasses","p","slotProps","reorderSlots","slotOrder","length","a","_parseInfo","bundle","toLowerCase","split","map","pat","y","m","charAt","reset","now","v","slots","w","set","_disableEndDaysOfMonth","value","values","_onYearSet","slot","newValue","get","_previousValue","_set","onYearSet","_onMonthSet","onMonthSet","_onDaySet","onDaySet","date","parse","daysInMonth","getDaysInMonth","changedDay","_spinToValue","disableValues","_getDateAttr","s","_setValuesAttr","forEach","getSlots","arr","splice","_setValueAttr","fromISOString","_getValueAttr","toISOString"],"mappings":"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","file":"../../mobile/_DatePickerMixin.js","sourcesContent":["define([\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/declare\",\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/date\",\r\n\t\"dojo/date/locale\",\r\n\t\"dojo/date/stamp\"\r\n], function(array, declare, lang, ddate, datelocale, datestamp){\r\n\r\n\t// module:\r\n\t//\t\tdojox/mobile/_DatePickerMixin\r\n\r\n\tvar slotMixin = {\r\n\t\tformat: function(/*Date*/d){\r\n\t\t\treturn datelocale.format(d, {datePattern:this.pattern, selector:\"date\"});\r\n\t\t}\r\n\t};\r\n\r\n\tvar yearSlotMixin = lang.mixin({\r\n\t\tinitLabels: function(){\r\n\t\t\tthis.labels = [];\r\n\t\t\tif(this.labelFrom !== this.labelTo){\r\n\t\t\t\tvar d = new Date(this.labelFrom, 0, 1);\r\n\t\t\t\tvar i, idx;\r\n\t\t\t\tfor(i = this.labelFrom, idx = 0; i <= this.labelTo; i++, idx++){\r\n\t\t\t\t\td.setFullYear(i);\r\n\t\t\t\t\tthis.labels.push(this.format(d));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}, slotMixin);\r\n\r\n\tvar monthSlotMixin = lang.mixin({\r\n\t\tinitLabels: function(){\r\n\t\t\tthis.labels = [];\r\n\t\t\t// On certain BlackBerry devices, we need to init to 16 not 1 to avoid some devices bugs (see #15677)\r\n\t\t\tvar d = new Date(2000, 0, 16);\r\n\t\t\tfor(var i = 0; i < 12; i++){\r\n\t\t\t\td.setMonth(i);\r\n\t\t\t\tthis.labels.push(this.format(d));\r\n\t\t\t}\r\n\t\t}\r\n\t}, slotMixin);\r\n\r\n\tvar daySlotMixin = lang.mixin({\r\n\t\tinitLabels: function(){\r\n\t\t\tthis.labels = [];\r\n\t\t\tvar d = new Date(2000, 0, 1);\r\n\t\t\tfor(var i = 1; i <= 31; i++){\r\n\t\t\t\td.setDate(i);\r\n\t\t\t\tthis.labels.push(this.format(d));\r\n\t\t\t}\r\n\t\t}\r\n\t}, slotMixin);\r\n\r\n\treturn declare(\"dojox.mobile._DatePickerMixin\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tA mixin for date picker widget.\r\n\r\n\t\t// yearPattern: String\r\n\t\t//\t\tA pattern to be used to format year.\r\n\t\tyearPattern: \"yyyy\",\r\n\r\n\t\t// monthPattern: String\r\n\t\t//\t\tA pattern to be used to format month.\r\n\t\tmonthPattern: \"MMM\",\r\n\r\n\t\t// dayPattern: String\r\n\t\t//\t\tA pattern to be used to format day.\r\n\t\tdayPattern: \"d\",\r\n\t\t\r\n\t\t/*=====\r\n\t\t// value: String\r\n\t\t//\t\tA string representing the date value.\r\n\t\t//\t\tThe setter of this property first converts the value argument by calling \r\n\t\t//\t\tthe fromISOString method of the dojo/date/stamp module, then sets the \r\n\t\t//\t\tvalues of the picker according to the resulting\tDate object. \r\n\t\t//\t\tIf the string cannot be parsed by fromISOString, the method does nothing.\r\n\t\t//\t\tExample: set(\"value\", \"2012-1-20\"); // January 20, 2012\r\n\t\t//\t\tThe getter returns the string formatted as described in the dojo/date/stamp \r\n\t\t//\t\tmodule.\r\n\t\tvalue: \"\",\r\n\t\t=====*/\r\n\t\t\r\n\t\tinitSlots: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInitializes the slots.\r\n\t\t\tvar c = this.slotClasses, p = this.slotProps;\r\n\t\t\tc[0] = declare(c[0], yearSlotMixin);\r\n\t\t\tc[1] = declare(c[1], monthSlotMixin);\r\n\t\t\tc[2] = declare(c[2], daySlotMixin);\r\n\t\t\tp[0].pattern = this.yearPattern;\r\n\t\t\tp[1].pattern = this.monthPattern;\r\n\t\t\tp[2].pattern = this.dayPattern;\r\n\t\t\tthis.reorderSlots();\r\n\t\t},\r\n\r\n\t\treorderSlots: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReorders the slots.\t\t\t\r\n\t\t\tif(this.slotOrder.length){ return; }\r\n\t\t\tvar a = datelocale._parseInfo().bundle[\"dateFormat-short\"].toLowerCase().split(/[^ymd]+/, 3);\r\n\t\t\tthis.slotOrder = array.map(a, function(pat){\r\n\t\t\t\treturn {y:0, m:1, d:2}[pat.charAt(0)];\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\treset: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGoes to today.\r\n\t\t\tvar now = new Date();\r\n\t\t\tvar v = array.map(this.slots, function(w){ return w.format(now); });\r\n\t\t\tthis.set(\"colors\", v);\r\n\t\t\tthis._disableEndDaysOfMonth();\r\n\t\t\tif(this.value){\r\n\t\t\t\tthis.set(\"value\", this.value);\r\n\t\t\t\tthis.value = null;\r\n\t\t\t}else if(this.values){\r\n\t\t\t\tthis.set(\"values\", this.values);\r\n\t\t\t\tthis.values = null;\r\n\t\t\t}else{\r\n\t\t\t\tthis.set(\"values\", v);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onYearSet: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAn internal handler called when the year value is changed.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar slot = this.slots[0];\r\n\t\t\tvar newValue = slot.get(\"value\");\r\n\t\t\tif(!(slot._previousValue && newValue == slot._previousValue)){ // do nothing if the value is unchanged\r\n\t\t\t\tthis._disableEndDaysOfMonth();\r\n\t\t\t\tslot._previousValue = newValue;\r\n\t\t\t\tslot._set(\"value\", newValue);\r\n\t\t\t\tthis.onYearSet();\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tonYearSet: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tA handler called when the year value is changed.\r\n\t\t},\r\n\r\n\t\t_onMonthSet: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAn internal handler called when the month value is changed.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar slot = this.slots[1];\r\n\t\t\tvar newValue = slot.get(\"value\");\r\n\t\t\tif(!(slot._previousValue && newValue == slot._previousValue)){ // do nothing if the value is unchanged\r\n\t\t\t\tthis._disableEndDaysOfMonth();\r\n\t\t\t\tslot._previousValue = newValue;\r\n\t\t\t\tslot._set(\"value\", newValue); // notify watches\r\n\t\t\t\tthis.onMonthSet();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonMonthSet: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tA handler called when the month value is changed.\r\n\t\t},\r\n\r\n\t\t_onDaySet: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAn internal handler called when the day value is changed.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar slot = this.slots[2];\r\n\t\t\tvar newValue = slot.get(\"value\");\r\n\t\t\tif(!(slot._previousValue && newValue == slot._previousValue)){ // do nothing if the value is unchanged\r\n\t\t\t\tif(!this._disableEndDaysOfMonth()){\r\n\t\t\t\t\t// If _disableEndDaysOfMonth has changed the day value,\r\n\t\t\t\t\t// skip notifications till next call of _onDaySet, to\r\n\t\t\t\t\t// avoid the extra notification for the (invalid)\r\n\t\t\t\t\t// intermediate value of the day.\r\n\t\t\t\t\tslot._previousValue = newValue;\r\n\t\t\t\t\tslot._set(\"value\", newValue); // notify watches\r\n\t\t\t\t\tthis.onDaySet();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonDaySet: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tA handler called when the day value is changed.\r\n\t\t},\r\n\r\n\t\t_disableEndDaysOfMonth: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDisables the end days of the month to match the specified\r\n\t\t\t//\t\tnumber of days of the month. Returns true if the day value is changed.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar pat = this.slots[0].pattern + \"/\" + this.slots[1].pattern,\r\n\t\t\t\tv = this.get(\"values\"),\r\n\t\t\t\tdate = datelocale.parse(v[0] + \"/\" + v[1], {datePattern:pat, selector:\"date\"}),\r\n\t\t\t\tdaysInMonth = ddate.getDaysInMonth(date);\r\n\t\t\tvar changedDay = false;\r\n\t\t\tif(daysInMonth < v[2]){\r\n\t\t\t\t// day value is invalid for this month, change it\r\n\t\t\t\tchangedDay = true;\r\n\t\t\t\tthis.slots[2]._spinToValue(daysInMonth, false/*applyValue*/);\r\n\t\t\t}\r\n\t\t\tthis.disableValues(daysInMonth);\r\n\t\t\treturn changedDay;\r\n\t\t},\r\n\r\n\t\t_getDateAttr: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns a Date object for the current values.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar v = this.get(\"values\"), // [year, month, day]\r\n\t\t\t\ts = this.slots,\r\n\t\t\t\tpat = s[0].pattern + \"/\" + s[1].pattern + \"/\" + s[2].pattern;\r\n\t\t\t\treturn datelocale.parse(v[0] + \"/\" + v[1] + \"/\" + v[2], {datePattern:pat, selector:\"date\"});\r\n\t\t},\r\n\r\n\t\t_setValuesAttr: function(/*Array*/values){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets the current date as an array of values.\r\n\t\t\t// description:\r\n\t\t\t//\t\tThis method takes an array that consists of three values,\r\n\t\t\t//\t\tyear, month, and day. If the values are integer, they are\r\n\t\t\t//\t\tformatted to locale-specific strings before setting them to\r\n\t\t\t//\t\tthe slots. Month starts from 1 to 12 (Ex. 1 - Jan, 2 - Feb, etc.)\r\n\t\t\t//\t\tIf the values are NOT integer, they are directly\r\n\t\t\t//\t\tpassed to the setter of the slots without formatting.\r\n\t\t\t//\r\n\t\t\t// example:\r\n\t\t\t//\t|\tset(\"values\", [2012, 1, 20]); // January 20, 2012\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tarray.forEach(this.getSlots(), function(w, i){\r\n\t\t\t\tvar v = values[i];\r\n\t\t\t\tif(typeof v == \"number\"){\r\n\t\t\t\t\tvar arr = [1970, 1, 1];\r\n\t\t\t\t\tarr.splice(i, 1, v - 0);\r\n\t\t\t\t\tv = w.format(new Date(arr[0], arr[1] - 1, arr[2]));\r\n\t\t\t\t}\r\n\t\t\t\tw.set(\"value\", v);\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\t_setValueAttr: function(/*String*/value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets the current date as an String formatted according to a subset of the ISO-8601 standard.\r\n\t\t\t// description:\r\n\t\t\t//\t\tThis method first converts the value argument by calling the fromISOString method of\r\n\t\t\t//\t\tthe dojo/date/stamp module, then sets the values of the picker according to the resulting\r\n\t\t\t//\t\tDate object. If the string cannot be parsed by fromISOString, the method does nothing.\r\n\t\t\t// value:\r\n\t\t\t//\t\tA string formatted as described in the dojo/date/stamp module.\r\n\t\t\t// example:\r\n\t\t\t//\t|\tset(\"value\", \"2012-1-20\"); // January 20, 2012\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\t\t\t\r\n\t\t\tvar date = datestamp.fromISOString(value);\r\n\t\t\tthis.set(\"values\", array.map(this.slots, function(w){ return w.format(date); }));\r\n\t\t},\r\n\t\t\r\n\t\t_getValueAttr: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGets the current date as a String formatted according to a subset of the ISO-8601 standard.\r\n\t\t\t// returns: String\r\n\t\t\t//\t\tA string formatted as described in the dojo/date/stamp module.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\t\t\t\r\n\t\t\treturn datestamp.toISOString(this.get(\"date\"), { selector: \"date\" });\r\n\t\t}\t\t\r\n\t});\r\n});\r\n"]}