/**
 * dojox - A version of dojox.js framework that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/dojox/
 * @license MIT
 */
define(["dojo","dojox"],function(t,h){return t.getObject("math.curves",!0,h),t.mixin(h.math.curves,{Line:function(t,h){this.start=t,this.end=h,this.dimensions=t.length;for(var i=0;i<t.length;i++)t[i]=Number(t[i]);for(i=0;i<h.length;i++)h[i]=Number(h[i]);return this.getValue=function(t){for(var h=new Array(this.dimensions),i=0;i<this.dimensions;i++)h[i]=(this.end[i]-this.start[i])*t+this.start[i];return h},this},Bezier:function(t){return this.getValue=function(t){if(t>=1)return this.p[this.p.length-1];if(t<=0)return this.p[0];for(var i=new Array(this.p[0].length),e=0;r<this.p[0].length;e++)i[e]=0;for(var r=0;r<this.p[0].length;r++){for(var n=0,s=0,a=0;a<this.p.length;a++)n+=this.p[a][r]*this.p[this.p.length-1][0]*h.math.bernstein(t,this.p.length,a);for(var o=0;o<this.p.length;o++)s+=this.p[this.p.length-1][0]*h.math.bernstein(t,this.p.length,o);i[r]=n/s}return i},this.p=t,this},CatmullRom:function(t,h){return this.getValue=function(t){var h=t*(this.p.length-1),i=Math.floor(h),e=h-i,r=i-1;r<0&&(r=0);var n=i,s=i+1;s>=this.p.length&&(s=this.p.length-1);var a=i+2;a>=this.p.length&&(a=this.p.length-1);for(var o=e,u=e*e,c=e*e*e,l=new Array(this.p[0].length),p=0;p<this.p[0].length;p++){var g=-this.c*this.p[r][p]+(2-this.c)*this.p[n][p]+(this.c-2)*this.p[s][p]+this.c*this.p[a][p],f=2*this.c*this.p[r][p]+(this.c-3)*this.p[n][p]+(3-2*this.c)*this.p[s][p]+-this.c*this.p[a][p],v=-this.c*this.p[r][p]+this.c*this.p[s][p],d=this.p[n][p];l[p]=g*c+f*u+v*o+d}return l},this.c=h||.7,this.p=t,this},Arc:function(t,i,e){var r=h.math.midpoint(t,i),n=function(t,h){for(var i=new Array(t.length),e=0;e<t.length;e++)i[e]=t[e]+h[e];return i}(function(t){for(var h=new Array(t.length),i=0;i<t.length;i++)h[i]=-t[i];return h}(r),t),s=Math.sqrt(Math.pow(n[0],2)+Math.pow(n[1],2)),a=h.math.radiansToDegrees(Math.atan(n[1]/n[0]));n[0]<0?a-=90:a+=90,h.math.curves.CenteredArc.call(this,r,s,a,a+(e?-180:180))},CenteredArc:function(t,i,e,r){return this.center=t,this.radius=i,this.start=e||0,this.end=r,this.getValue=function(t){var i=new Array(2),e=h.math.degreesToRadians(this.start+(this.end-this.start)*t);return i[0]=this.center[0]+this.radius*Math.sin(e),i[1]=this.center[1]-this.radius*Math.cos(e),i},this},Circle:function(t,i){return h.math.curves.CenteredArc.call(this,t,i,0,360),this},Path:function(){var t=[],i=[],e=[],r=0;function n(){for(var t=0,h=0;h<i.length;h++){var n=t+i[h]/r,s=n-t;e[h]=[t,n,s],t=n}}return this.add=function(h,e){e<0&&console.error("dojox.math.curves.Path.add: weight cannot be less than 0"),t.push(h),i.push(e),r+=e,n()},this.remove=function(h){for(var e=0;e<t.length;e++)if(t[e]==h){t.splice(e,1),r-=i.splice(e,1)[0];break}n()},this.removeAll=function(){t=[],i=[],r=0},this.getValue=function(i){for(var r=!1,n=0,s=0;s<e.length;s++){var a=e[s];if(i>=a[0]&&i<a[1]){var o=(i-a[0])/a[2];n=t[s].getValue(o),r=!0;break}}r||(n=t[t.length-1].getValue(1));for(var u=0;u<s;u++)n=h.math.points.translate(n,t[u].getValue(1));return n},this}}),h.math.curves});
//# sourceMappingURL=../sourcemaps/math/curves.js.map
