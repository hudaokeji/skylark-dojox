/**
 * dojox - A version of dojox.js framework that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/dojox/
 * @license MIT
 */
define(["dojo/_base/declare","dojo/_base/lang","dojo/_base/connect","dojo/_base/fx","./AnalogIndicatorBase"],function(t,s,e,h,i){return t("dojox.gauges.AnalogArcIndicator",[i],{_createArc:function(t){if(this.shape){var s=this._gauge._mod360(this._gauge.startAngle),e=this._gauge._getRadians(this._gauge._getAngle(t)),h=this._gauge._getRadians(s);if("cclockwise"==this._gauge.orientation){var i=e;e=h,h=i}var a=0;(h<=e?e-h:2*Math.PI+e-h)>Math.PI&&(a=1);var o=Math.cos(e),c=Math.sin(e),n=Math.cos(h),u=Math.sin(h),r=this.offset+this.width,g=["M"];g.push(this._gauge.cx+this.offset*u),g.push(this._gauge.cy-this.offset*n),g.push("A",this.offset,this.offset,0,a,1),g.push(this._gauge.cx+this.offset*c),g.push(this._gauge.cy-this.offset*o),g.push("L"),g.push(this._gauge.cx+r*c),g.push(this._gauge.cy-r*o),g.push("A",r,r,0,a,0),g.push(this._gauge.cx+r*u),g.push(this._gauge.cy-r*n),g.push("z"),this.shape.setShape(g.join(" ")),this.currentValue=t}},draw:function(t,i){var a=this.value;if(a<this._gauge.min&&(a=this._gauge.min),a>this._gauge.max&&(a=this._gauge.max),this.shape)if(i)this._createArc(a);else{var o=new h.Animation({curve:[this.currentValue,a],duration:this.duration,easing:this.easing});e.connect(o,"onAnimate",s.hitch(this,this._createArc)),o.play()}else{var c=this.color?this.color:"black",n={color:this.strokeColor?this.strokeColor:c,width:1};this.color.type&&!this.strokeColor&&(n.color=this.color.colors[0].color),this.shape=t.createPath().setStroke(n).setFill(c),this._createArc(a),this.shape.connect("onmouseover",this,this.handleMouseOver),this.shape.connect("onmouseout",this,this.handleMouseOut),this.shape.connect("onmousedown",this,this.handleMouseDown),this.shape.connect("touchstart",this,this.handleTouchStart)}}})});
//# sourceMappingURL=../sourcemaps/gauges/AnalogArcIndicator.js.map
