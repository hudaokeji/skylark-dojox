/**
 * dojox - A version of dojox.js framework that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/dojox/
 * @license MIT
 */
define(["dojo/_base/lang","dojo/_base/declare","dojo/_base/connect","dojo/_base/fx","dojox/gfx","./_Indicator"],function(t,e,s,a,h,i){return e("dojox.gauges.AnalogIndicatorBase",[i],{draw:function(t,e){if(this.shape)this._move(e);else{this.text&&(this.text.parent.remove(this.text),this.text=null);var s=this._gauge._getAngle(Math.min(Math.max(this.value,this._gauge.min),this._gauge.max));this.color=this.color||"#000000",this.length=this.length||this._gauge.radius,this.width=this.width||1,this.offset=this.offset||0,this.highlight=this.highlight||"#D0D0D0";var a=this._getShapes(t,this._gauge,this);if(a){if(a.length>1){this.shape=t.createGroup();for(var i=0;i<a.length;i++)this.shape.add(a[i])}else this.shape=a[0];this.shape.setTransform([{dx:this._gauge.cx,dy:this._gauge.cy},h.matrix.rotateg(s)]),this.shape.connect("onmouseover",this,this.handleMouseOver),this.shape.connect("onmouseout",this,this.handleMouseOut),this.shape.connect("onmousedown",this,this.handleMouseDown),this.shape.connect("touchstart",this,this.handleTouchStart)}if(this.label){var n,o=this.direction;o||(o="outside"),n="inside"==o?-this.length+this.offset-5:this.length+this.offset+5;var g=this._gauge._getRadians(90-s);this._layoutLabel(t,this.label+"",this._gauge.cx,this._gauge.cy,n,g,o)}this.currentValue=this.value}},_layoutLabel:function(t,e,s,a,i,n,o){var g,r,u=this.font?this.font:h.defaultFont,l=h._base._getTextBox(e,{font:h.makeFontString(h.makeParameters(h.defaultFont,u))}).w,c=u.size,d=h.normalizedLength(c),f=s+Math.cos(n)*i-l/2,_=a-Math.sin(n)*i-d/2,x=[],m=g=f,M=-Math.tan(n)*g+a+Math.tan(n)*s;if(M>=_&&M<=_+d&&x.push({x:m,y:M}),m=g=f+l,(M=-Math.tan(n)*g+a+Math.tan(n)*s)>=_&&M<=_+d&&x.push({x:m,y:M}),M=g=_,(m=-1/Math.tan(n)*g+s+1/Math.tan(n)*a)>=f&&m<=f+l&&x.push({x:m,y:M}),M=g=_+d,(m=-1/Math.tan(n)*g+s+1/Math.tan(n)*a)>=f&&m<=f+l&&x.push({x:m,y:M}),"inside"==o)for(var v=0;v<x.length;v++){var p=x[v];if((r=this._distance(p.x,p.y,s,a)-i)>=0){f=s+Math.cos(n)*(i-r)-l/2,_=a-Math.sin(n)*(i-r)-d/2;break}}else for(v=0;v<x.length;v++)if(p=x[v],(r=this._distance(p.x,p.y,s,a)-i)<=0){f=s+Math.cos(n)*(i-r)-l/2,_=a-Math.sin(n)*(i-r)-d/2;break}this.text=this._gauge.drawText(t,e,f+l/2,_+d,"middle",this.color,this.font)},_distance:function(t,e,s,a){return Math.sqrt((s-t)*(s-t)+(a-e)*(a-e))},_move:function(e){var i=Math.min(Math.max(this.value,this._gauge.min),this._gauge.max),n=this.currentValue;if(e){var o=this._gauge._getAngle(i);this.shape.setTransform([{dx:this._gauge.cx,dy:this._gauge.cy},h.matrix.rotateg(o)]),this.currentValue=i}else if(n!=i){var g=new a.Animation({curve:[n,i],duration:this.duration,easing:this.easing});s.connect(g,"onAnimate",t.hitch(this,function(t){this.shape.setTransform([{dx:this._gauge.cx,dy:this._gauge.cy},h.matrix.rotateg(this._gauge._getAngle(t))]),this.currentValue=t})),g.play()}}})});
//# sourceMappingURL=../sourcemaps/gauges/AnalogIndicatorBase.js.map
