/**
 * dojox - A version of dojox.js framework that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/dojox/
 * @license MIT
 */
define(["intern!object","intern/chai!assert","../db/has!indexeddb?../db/IndexedDB","../db/SQL","dojo/promise/all","dojo/sniff"],function(e,n,o,t,r,a){var m=[{id:1,name:"one",prime:!1,mappedTo:"E",words:["banana"]},{id:2,name:"two",even:!0,prime:!0,mappedTo:"D",words:["banana","orange"]},{id:3,name:"three",prime:!0,mappedTo:"C",words:["apple","orange"]},{id:4,name:"four",even:!0,prime:!1,mappedTo:null},{id:5,name:"five",prime:!0,mappedTo:"A"}],i={version:5,stores:{test:{name:10,even:{},id:{autoIncrement:!0,preference:20},words:{multiEntry:!0,preference:5},mappedTo:{indexed:!1}}}};function d(e,o){i.available=null;var t=new o({dbConfig:i,storeName:"test"});function d(e,o,r){return r||(r=o,o=void 0),function(){if(!(o&&o.multi&&a("trident"))){var m=0,i=t.query(e,o);i.total;return i.forEach(function(e){n.strictEqual(r[m++],e.id)}).then(function(){if(n.strictEqual(r.length,m),!o)return i.total.then(function(e){n.strictEqual(r.length,e)})})}}}return{name:e,setup:function(){var e=[];return t.query({}).forEach(function(n){e.push(t.remove(n.id))}).then(function(){return r(e)}).then(function(){e=[];for(var n=0;n<m.length;n++)e.push(t.put(m[n]));return r(e)})},"{id: 2}":d({id:2},[2]),"{name: 'four'}":d({name:"four"},[4]),"{name: 'two'}":d({name:"two"},[2]),"{even: true}":d({even:!0},[2,4]),"{even: true, name: 'two'}":d({even:!0,name:"two"},[2]),"{mappedTo: 'C'}":d({mappedTo:"C"},[3]),"[{name: 'two'}, {mappedTo: 'C'}, {mappedTo: 'D'}]":d([{name:"two"},{mappedTo:"C"},{mappedTo:"D"}],[2,3]),"{id: {from: 1, to: 3}}":d({id:{from:1,to:3}},[1,2,3]),"{name: {from: 'm', to: 'three'}}":d({name:{from:"m",to:"three"}},[1,3]),"{name: {from: 'one', to: 'three'}}":d({name:{from:"m",to:"three"}},[1,3]),"{name: {from: 'one', excludeFrom: true, to: 'three'}}":d({name:{from:"one",excludeFrom:!0,to:"three"}},[3]),"{name: {from: 'one', to: 'three', excludeTo: true}}":d({name:{from:"one",to:"three",excludeTo:!0}},[1]),"{name: {from: 'one', excludeFrom: true, to: 'three', excludeTo: true}}":d({name:{from:"one",excludeFrom:!0,to:"three",excludeTo:!0}},[]),"{name: 't*'}":d({name:"t*"},{sort:[{attribute:"name"}]},[3,2]),"{name: 'not a number'}":d({name:"not a number"},[]),"{words: {contains: ['orange']}}":d({words:{contains:["orange"]}},{multi:!0},[2,3]),"{words: {contains: ['or*']}}":d({words:{contains:["or*"]}},{multi:!0},[2,3]),"{words: {contains: ['apple', 'banana']}}":d({words:{contains:["apple","banana"]}},{multi:!0},[]),"{words: {contains: ['orange', 'banana']}}":d({words:{contains:["orange","banana"]}},{multi:!0},[2]),"{id: {from: 0, to: 4}, words: {contains: ['orange', 'banana']}}":d({id:{from:0,to:4},words:{contains:["orange","banana"]}},{multi:!0},[2]),"{id: {from: 1, to: 3}}, sort by name +":d({id:{from:1,to:3}},{sort:[{attribute:"name"}]},[1,3,2]),"{id: {from: 1, to: 3}}, sort by name -":d({id:{from:1,to:3}},{sort:[{attribute:"name",descending:!0}]},[2,3,1]),"{id: {from: 0, to: 4}}, paged":d({id:{from:0,to:4}},{start:1,count:2},[2,3]),"db interaction":function(e){return t.get(1).then(function(e){return n.strictEqual(e.id,1),n.strictEqual(e.name,"one"),n.strictEqual(e.prime,!1),n.strictEqual(e.mappedTo,"E"),r([t.remove(2),t.remove(4),t.add({id:6,name:"six",prime:!1,words:["pineapple","orange juice"]})]).then(function(){return r([d({name:{from:"s",to:"u"}},[6,3])(),d({words:{contains:["orange*"]}},{multi:!0},[3,6])()])})})}}}o&&e(d("dojox/store/db/IndexedDB",o)),window.openDatabase&&e(d("dojox/store/db/SQL",t))});
//# sourceMappingURL=../../sourcemaps/store/tests/LocalStorage.js.map
