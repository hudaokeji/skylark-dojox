/**
 * dojox - A version of dojox.js framework that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/dojox/
 * @license MIT
 */
dojo.provide("dojox.data.tests.stores.AndOrWriteStore"),dojo.require("dojox.data.AndOrWriteStore"),dojo.require("dojo.data.api.Read"),dojo.require("dojo.data.api.Identity"),dojo.require("dojo.date"),dojo.require("dojo.date.stamp"),dojo.require("dojo.data.api.Write"),dojo.require("dojo.data.api.Notification"),dojox.data.tests.stores.AndOrWriteStore.getTestData=function(e){var t=null;return"countries"===e?t=dojo.isBrowser?{url:require.toUrl("dojo/tests/data/countries.json").toString()}:{data:{identifier:"abbr",label:"name",items:[{abbr:"ec",name:"Ecuador",capital:"Quito"},{abbr:"eg",name:"Egypt",capital:"Cairo"},{abbr:"sv",name:"El Salvador",capital:"San Salvador"},{abbr:"gq",name:"Equatorial Guinea",capital:"Malabo"},{abbr:"er",name:"Eritrea",capital:"Asmara"},{abbr:"ee",name:"Estonia",capital:"Tallinn"},{abbr:"et",name:"Ethiopia",capital:"Addis Ababa"}]}}:"countries_withNull"===e?t={data:{identifier:"abbr",items:[{abbr:"ec",name:null,capital:"Quito"},{abbr:"eg",name:null,capital:"Cairo"},{abbr:"sv",name:"El Salvador",capital:"San Salvador"},{abbr:"gq",name:"Equatorial Guinea",capital:"Malabo"},{abbr:"er",name:"Eritrea",capital:"Asmara"},{abbr:"ee",name:null,capital:"Tallinn"},{abbr:"et",name:"Ethiopia",capital:"Addis Ababa"}]}}:"countries_withoutid"===e?t={data:{label:"name",items:[{abbr:"ec",name:null,capital:"Quito"},{abbr:"eg",name:null,capital:"Cairo"},{abbr:"sv",name:"El Salvador",capital:"San Salvador"},{abbr:"gq",name:"Equatorial Guinea",capital:"Malabo"},{abbr:"er",name:"Eritrea",capital:"Asmara"},{abbr:"ee",name:null,capital:"Tallinn"},{abbr:"et",name:"Ethiopia",capital:"Addis Ababa"}]}}:"countries_withBoolean"===e?t={data:{identifier:"abbr",items:[{abbr:"ec",name:"Ecuador",capital:"Quito",real:!0},{abbr:"eg",name:"Egypt",capital:"Cairo",real:!0},{abbr:"sv",name:"El Salvador",capital:"San Salvador",real:!0},{abbr:"gq",name:"Equatorial Guinea",capital:"Malabo",real:!0},{abbr:"er",name:"Eritrea",capital:"Asmara",real:!0},{abbr:"ee",name:"Estonia",capital:"Tallinn",real:!0},{abbr:"et",name:"Ethiopia",capital:"Addis Ababa",real:!0},{abbr:"ut",name:"Utopia",capital:"Paradise",real:!1}]}}:"countries_withDates"===e?t={data:{identifier:"abbr",items:[{abbr:"ec",name:"Ecuador",capital:"Quito"},{abbr:"eg",name:"Egypt",capital:"Cairo"},{abbr:"sv",name:"El Salvador",capital:"San Salvador"},{abbr:"gq",name:"Equatorial Guinea",capital:"Malabo"},{abbr:"er",name:"Eritrea",capital:"Asmara",independence:{_type:"Date",_value:"1993-05-24T00:00:00Z"}},{abbr:"ee",name:"Estonia",capital:"Tallinn",independence:{_type:"Date",_value:"1991-08-20T00:00:00Z"}},{abbr:"et",name:"Ethiopia",capital:"Addis Ababa"}]}}:"geography_hierarchy_small"===e?t={data:{items:[{name:"Africa",countries:[{name:"Egypt",capital:"Cairo"},{name:"Kenya",capital:"Nairobi"},{name:"Sudan",capital:"Khartoum"}]},{name:"Australia",capital:"Canberra"},{name:"North America",countries:[{name:"Canada",population:"33 million",cities:[{name:"Toronto",population:"2.5 million"},{name:"Alberta",population:"1 million"}]},{name:"United States of America",capital:"Washington DC",states:[{name:"Missouri"},{name:"Arkansas"}]}]}]}}:"data_multitype"===e?t={data:{identifier:"count",label:"count",items:[{count:1,value:"true"},{count:2,value:!0},{count:3,value:"false"},{count:4,value:!1},{count:5,value:!0},{count:6,value:!0},{count:7,value:"true"},{count:8,value:"true"},{count:9,value:"false"},{count:10,value:!1},{count:11,value:[!1,!1]},{count:"12",value:[!1,"true"]}]}}:"countries_references"===e?t={data:{identifier:"name",label:"name",items:[{name:"Africa",type:"continent",children:[{_reference:"Egypt"},{_reference:"Kenya"},{_reference:"Sudan"}]},{name:"Egypt",type:"country"},{name:"Kenya",type:"country",children:[{_reference:"Nairobi"},{_reference:"Mombasa"}]},{name:"Nairobi",type:"city"},{name:"Mombasa",type:"city"},{name:"Sudan",type:"country",children:{_reference:"Khartoum"}},{name:"Khartoum",type:"city"},{name:"Asia",type:"continent",children:[{_reference:"China"},{_reference:"India"},{_reference:"Russia"},{_reference:"Mongolia"}]},{name:"China",type:"country"},{name:"India",type:"country"},{name:"Russia",type:"country"},{name:"Mongolia",type:"country"},{name:"Australia",type:"continent",population:"21 million",children:{_reference:"Commonwealth of Australia"}},{name:"Commonwealth of Australia",type:"country",population:"21 million"},{name:"Europe",type:"continent",children:[{_reference:"Germany"},{_reference:"France"},{_reference:"Spain"},{_reference:"Italy"}]},{name:"Germany",type:"country"},{name:"France",type:"country"},{name:"Spain",type:"country"},{name:"Italy",type:"country"},{name:"North America",type:"continent",children:[{_reference:"Mexico"},{_reference:"Canada"},{_reference:"United States of America"}]},{name:"Mexico",type:"country",population:"108 million",area:"1,972,550 sq km",children:[{_reference:"Mexico City"},{_reference:"Guadalajara"}]},{name:"Mexico City",type:"city",population:"19 million",timezone:"-6 UTC"},{name:"Guadalajara",type:"city",population:"4 million",timezone:"-6 UTC"},{name:"Canada",type:"country",population:"33 million",area:"9,984,670 sq km",children:[{_reference:"Ottawa"},{_reference:"Toronto"}]},{name:"Ottawa",type:"city",population:"0.9 million",timezone:"-5 UTC"},{name:"Toronto",type:"city",population:"2.5 million",timezone:"-5 UTC"},{name:"United States of America",type:"country"},{name:"South America",type:"continent",children:[{_reference:"Brazil"},{_reference:"Argentina"}]},{name:"Brazil",type:"country",population:"186 million"},{name:"Argentina",type:"country",population:"40 million"}]}}:"reference_integrity"===e&&(t={data:{identifier:"id",label:"name",items:[{id:1,name:"Item 1"},{id:2,name:"Item 2"},{id:3,name:"Item 3"},{id:4,name:"Item 4"},{id:5,name:"Item 5"},{id:6,name:"Item 6"},{id:7,name:"Item 7"},{id:8,name:"Item 8"},{id:9,name:"Item 9"},{id:10,name:"Item 10",friends:[{_reference:1},{_reference:3},{_reference:5}]},{id:11,name:"Item 11",friends:[{_reference:10}],siblings:[{_reference:10}]},{id:12,name:"Item 12",friends:[{_reference:3},{_reference:7}],enemies:[{_reference:10}]},{id:13,name:"Item 13",friends:[{_reference:10}]},{id:14,name:"Item 14",friends:[{_reference:11}]},{id:15,name:"item 15",friends:[{id:16,name:"Item 16"}]}]}}),t},dojox.data.tests.stores.AndOrWriteStore.getTests=function(){return dojox.data.tests.stores.AndOrWriteStore.tests=[{name:"Identity API: fetchItemByIdentity()",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;return t.fetchItemByIdentity({identity:"sv",onItem:function(a){if(e.assertTrue(null!==a),null!==a){var n=t.getValue(a,"name");e.assertEqual(n,"El Salvador")}r.callback(!0)},onError:function(t){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Identity API: fetchItemByIdentity() notFound",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;return t.fetchItemByIdentity({identity:"sv_not",onItem:function(t){e.assertTrue(null===t),r.callback(!0)},onError:function(t){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Identity API: getIdentityAttributes()",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;return t.fetchItemByIdentity({identity:"sv",onItem:function(a){e.assertTrue(null!==a);var n=t.getIdentityAttributes(a);e.assertTrue(dojo.isArray(n)),e.assertEqual(1,n.length),e.assertEqual("abbr",n[0]),r.callback(!0)},onError:function(t){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Identity API: fetchItemByIdentity() commentFilteredJson",runTest:function(e){if(dojo.isBrowser){var t=new dojox.data.AndOrWriteStore({url:require.toUrl("dojo/tests/data/countries_commentFiltered.json").toString()}),r=new doh.Deferred;return t.fetchItemByIdentity({identity:"sv",onItem:function(a){e.assertTrue(null!==a);var n=t.getValue(a,"name");e.assertEqual(n,"El Salvador"),r.callback(!0)},onError:function(t){e.assertTrue(!1),r.errback(t)}}),r}}},{name:"Identity API: fetchItemByIdentity() nullValue",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries_withNull")),r=new doh.Deferred;return t.fetchItemByIdentity({identity:"ec",onItem:function(a){e.assertTrue(null!==a);var n=t.getValue(a,"name");e.assertEqual(n,null),r.callback(!0)},onError:function(t){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Identity API: fetchItemByIdentity() booleanValue",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries_withBoolean")),r=new doh.Deferred;return t.fetchItemByIdentity({identity:"ut",onItem:function(a){e.assertTrue(null!==a);var n=t.getValue(a,"name");e.assertEqual(n,"Utopia");var o=t.getValue(a,"real");e.assertEqual(o,!1),r.callback(!0)},onError:function(t){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Identity API: fetchItemByIdentity() withoutSpecifiedIdInData",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries_withoutid")),r=new doh.Deferred;return t.fetchItemByIdentity({identity:"2",onItem:function(a){e.assertTrue(null!==a);var n=t.getValue(a,"name");e.assertEqual(n,"El Salvador"),r.callback(!0)},onError:function(t){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Identity API: getIdentity()",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;return t.fetchItemByIdentity({identity:"sv",onItem:function(a){e.assertTrue(null!==a),e.assertTrue("sv"===t.getIdentity(a)),r.callback(!0)},onError:function(t){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Identity API: getIdentity() withoutSpecifiedId",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries_withoutid")),r=new doh.Deferred;return t.fetch({query:{abbr:"sv"},onItem:function(a,n){e.assertTrue(null!==a),e.assertTrue(2===t.getIdentity(a)),r.callback(!0)},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Identity API: getIdentity() withoutSpecifiedId, complex",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries_withoutid")),r=new doh.Deferred;return t.fetch({query:'abbr: "sv"',onItem:function(a,n){e.assertTrue(null!==a),e.assertTrue(2===t.getIdentity(a)),r.callback(!0)},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: fetch() all",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;return t.fetch({onComplete:function(t,a){e.is(7,t.length),r.callback(!0)},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: fetch() abort",runTest:function(e){if(dojo.isBrowser){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred,a=!1;var n=t.fetch({onComplete:function(t,n){e.is(7,t.length),a?(console.log("Made it to complete callback and abort was called.  Problem."),r.errback(new Error("Should not be here."))):(console.log("in onComplete and abort has not been called.  Timing.  This is okay."),r.callback(!0))},onError:function(t,a){e.assertTrue(!0),r.callback(!0)}});return a=!0,console.log("Calling abort."),n.abort(),r}}},{name:"Read API: fetch() one",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;return t.fetch({query:{abbr:"ec"},onComplete:function(t,a){e.assertEqual(t.length,1),r.callback(!0)},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: fetch() one, complex",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;return t.fetch({query:'abbr: "ec"',onComplete:function(t,a){e.assertEqual(t.length,1),r.callback(!0)},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: fetch() shallow",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("geography_hierarchy_small")),r=new doh.Deferred;return t.fetch({query:{name:"A*"},onComplete:function(t,a){e.assertEqual(t.length,2),r.callback(!0)},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: fetch() shallow, complex",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("geography_hierarchy_small")),r=new doh.Deferred;return t.fetch({query:'name: "A*"',onComplete:function(t,a){e.assertEqual(t.length,2),r.callback(!0)},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: fetch() Multiple",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("geography_hierarchy_small")),r=new doh.Deferred,a=[!1,!1],n=function(t,a){e.assertTrue(!1),r.errback(t)};return t.fetch({query:{name:"A*"},onComplete:function(t,n){a[0]=!0,e.assertEqual(t.length,2),a[0]&&a[1]&&r.callback(!0)},onError:n}),t.fetch({query:{name:"N*"},onComplete:function(e,t){a[1]=!0,a[0]&&a[1]&&r.callback(!0)},onError:n}),r}},{name:"Read API: fetch() Multiple, complex",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("geography_hierarchy_small")),r=new doh.Deferred,a=[!1,!1],n=function(t,a){e.assertTrue(!1),r.errback(t)};return t.fetch({query:'name: "A*"',onComplete:function(t,n){a[0]=!0,e.assertEqual(t.length,2),a[0]&&a[1]&&r.callback(!0)},onError:n}),t.fetch({query:'name: "N*"',onComplete:function(e,t){a[1]=!0,a[0]&&a[1]&&r.callback(!0)},onError:n}),r}},{name:"Read API: fetch() MultipleMixedFetch",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred,a=[!1,!1],n=function(t){e.assertTrue(!1),r.errback(t)};return t.fetch({query:{name:"El*"},onComplete:function(t,n){a[0]=!0,e.assertEqual(t.length,1),a[0]&&a[1]&&r.callback(!0)},onError:n}),t.fetchItemByIdentity({identity:"sv",onItem:function(n){a[1]=!0,e.assertTrue(null!==n);var o=t.getValue(n,"name");e.assertEqual(o,"El Salvador"),a[0]&&a[1]&&r.callback(!0)},onError:n}),r}},{name:"Read API: fetch() MultipleMixedFetch, complex",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred,a=[!1,!1],n=function(t){e.assertTrue(!1),r.errback(t)};return t.fetch({query:'name: "El*"',onComplete:function(t,n){a[0]=!0,e.assertEqual(t.length,1),a[0]&&a[1]&&r.callback(!0)},onError:n}),t.fetchItemByIdentity({identity:"sv",onItem:function(n){a[1]=!0,e.assertTrue(null!==n);var o=t.getValue(n,"name");e.assertEqual(o,"El Salvador"),a[0]&&a[1]&&r.callback(!0)},onError:n}),r}},{name:"Read API: fetch() deep",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("geography_hierarchy_small")),r=new doh.Deferred;return t.fetch({query:{name:"A*"},onComplete:function(t,a){e.assertEqual(t.length,4),r.callback(!0)},onError:function(t,a){e.assertTrue(!1),r.errback(t)},queryOptions:{deep:!0}}),r}},{name:"Read API: fetch() deep, complex",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("geography_hierarchy_small")),r=new doh.Deferred;return t.fetch({query:'name: "A*"',onComplete:function(t,a){e.assertEqual(t.length,4),r.callback(!0)},onError:function(t,a){e.assertTrue(!1),r.errback(t)},queryOptions:{deep:!0}}),r}},{name:"Read API: fetch() hierarchy off",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("geography_hierarchy_small"));t.hierarchical=!1;var r=new doh.Deferred;return t.fetch({query:{name:"A*"},onComplete:function(a,n){var o;e.assertEqual(2,a.length);var u=!0;for(o=0;o<a.length;o++){var i,s=t.getValues(a[o],"countries");if(s)for(i=0;i<s.length&&(u=!t.isItem(s[i]));i++);if(!u)break}u?r.callback(!0):r.errback(new Error("Located a child item with hierarchy off and no references in the data.  Error."))},onError:function(e,t){r.errback(e)},queryOptions:{deep:!0}}),r}},{name:"Read API: fetch() hierarchy off refs still parse",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries_references"));t.hierarchical=!1;var r=new doh.Deferred;return t.fetch({query:{name:"A*"},onComplete:function(a,n){var o;e.assertEqual(a.length,4);var u=!0;for(o=0;o<a.length;o++){var i,s=t.getValues(a[o],"children");if(s)for(i=0;i<s.length&&(u=t.isItem(s[i]));i++);if(!u)break}u?r.callback(!0):r.errback(new Error("Found a non-child item in a reference list in a references based input.  Error."))},onError:function(t,a){e.assertTrue(!1),r.errback(t)},queryOptions:{deep:!0}}),r}},{name:"Read API: fetch() one_commentFilteredJson",runTest:function(e){if(dojo.isBrowser){var t=new dojox.data.AndOrWriteStore({url:require.toUrl("dojo/tests/data/countries_commentFiltered.json").toString()}),r=new doh.Deferred;return t.fetch({query:{abbr:"ec"},onComplete:function(t,a){e.assertEqual(t.length,1),r.callback(!0)},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}}},{name:"Read API: fetch() one_commentFilteredJson, complex",runTest:function(e){if(dojo.isBrowser){var t=new dojox.data.AndOrWriteStore({url:require.toUrl("dojo/tests/data/countries_commentFiltered.json").toString()}),r=new doh.Deferred;return t.fetch({query:'abbr: "ec"',onComplete:function(t,a){e.assertEqual(t.length,1),r.callback(!0)},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}}},{name:"Read API: fetch() withNull",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries_withNull")),r=new doh.Deferred;return t.fetch({query:{name:"E*"},onComplete:function(t,a){e.assertEqual(4,t.length),r.callback(!0)},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: fetch() withNull, complex",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries_withNull")),r=new doh.Deferred;return t.fetch({query:'name: "E*"',onComplete:function(t,a){e.assertEqual(4,t.length),r.callback(!0)},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: fetch() all_streaming",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred,a=0;return t.fetch({onBegin:function(t,r){e.assertEqual(t,7)},onItem:function(r,n){e.assertTrue(t.isItem(r)),a++},onComplete:function(t,n){e.assertEqual(a,7),e.assertTrue(null===t),r.callback(!0)},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: fetch() paging",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred,a=function(t,a){e.assertEqual(t.length,5),r.callback(!0)},n=function(r,n){e.assertEqual(r.length,0),n.start=2,n.count=20,n.onComplete=a,t.fetch(n)},o=function(r,a){e.assertEqual(r.length,5),a.start=9,a.count=100,a.onComplete=n,t.fetch(a)},u=function(r,a){e.assertEqual(r.length,5),a.start=2,a.count=20,a.onComplete=o,t.fetch(a)},i=function(r,a){e.assertEqual(r.length,1),a.start=0,a.count=5,a.onComplete=u,t.fetch(a)},s=function(r,a){e.assertEqual(r.length,5),a.start=3,a.count=1,a.onComplete=i,t.fetch(a)};return t.fetch({onComplete:function(r,a){e.assertEqual(r.length,7),a.start=1,a.count=5,a.onComplete=s,t.fetch(a)},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: fetch() with MultiType Match",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("data_multitype")),r=new doh.Deferred;return t.fetch({query:{count:"1*"},onComplete:function(t,a){e.assertEqual(4,t.length),r.callback(!0)},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: fetch() with MultiType Match, complex",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("data_multitype")),r=new doh.Deferred;return t.fetch({query:'count: "1*"',onComplete:function(t,a){e.assertEqual(4,t.length),r.callback(!0)},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: fetch() with MultiType, MultiValue Match",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("data_multitype")),r=new doh.Deferred;return t.fetch({query:{value:"true"},onComplete:function(t,a){e.assertEqual(7,t.length),r.callback(!0)},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: fetch() with MultiType, MultiValue Match, complex",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("data_multitype")),r=new doh.Deferred;return t.fetch({query:'value: "true"',onComplete:function(t,a){e.assertEqual(7,t.length),r.callback(!0)},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: getLabel()",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;return t.fetch({query:{abbr:"ec"},onComplete:function(a,n){e.assertEqual(a.length,1);var o=t.getLabel(a[0]);e.assertTrue(null!==o),e.assertEqual("Ecuador",o),r.callback(!0)},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: getLabel(), complex",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;return t.fetch({query:'abbr: "ec"',onComplete:function(a,n){e.assertEqual(a.length,1);var o=t.getLabel(a[0]);e.assertTrue(null!==o),e.assertEqual("Ecuador",o),r.callback(!0)},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: getLabelAttributes()",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;return t.fetch({query:{abbr:"ec"},onComplete:function(a,n){e.assertEqual(a.length,1);var o=t.getLabelAttributes(a[0]);e.assertTrue(dojo.isArray(o)),e.assertEqual("name",o[0]),r.callback(!0)},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: getLabelAttributes(), complex",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;return t.fetch({query:'abbr: "ec"',onComplete:function(a,n){e.assertEqual(a.length,1);var o=t.getLabelAttributes(a[0]);e.assertTrue(dojo.isArray(o)),e.assertEqual("name",o[0]),r.callback(!0)},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: getValue()",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;return t.fetchItemByIdentity({identity:"sv",onItem:function(a){e.assertTrue(null!==a);var n=t.getValue(a,"name");e.assertTrue("El Salvador"===n),r.callback(!0)},onError:function(t){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: getValues()",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;return t.fetchItemByIdentity({identity:"sv",onItem:function(a){e.assertTrue(null!==a);var n=t.getValues(a,"name");e.assertTrue(dojo.isArray(n)),e.assertEqual(n.length,1),e.assertEqual(n[0],"El Salvador"),r.callback(!0)},onError:function(t){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: isItem()",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;return t.fetchItemByIdentity({identity:"sv",onItem:function(a){e.assertTrue(null!==a),e.assertTrue(t.isItem(a)),e.assertTrue(!t.isItem({})),r.callback(!0)},onError:function(t){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: isItem() multistore",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),a=new doh.Deferred,n=function(t){e.assertTrue(!1),a.errback(t)};return t.fetchItemByIdentity({identity:"sv",onItem:function(o){e.assertTrue(null!==o);r.fetchItemByIdentity({identity:"sv",onItem:function(n){e.assertTrue(null!==o),e.assertTrue(null!==n),e.assertTrue(t.isItem(o)),e.assertTrue(r.isItem(n)),e.assertTrue(!t.isItem(n)),e.assertTrue(!r.isItem(o)),a.callback(!0)},onError:n})},onError:n}),a}},{name:"Read API: hasAttribute()",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;return t.fetchItemByIdentity({identity:"sv",onItem:function(a){e.assertTrue(null!==a),e.assertTrue(t.hasAttribute(a,"abbr")),e.assertTrue(!t.hasAttribute(a,"abbr_not"));var n=!1;try{t.hasAttribute(a,null)}catch(e){n=!0}e.assertTrue(n),r.callback(!0)},onError:function(t){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: containsValue()",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;return t.fetchItemByIdentity({identity:"sv",onItem:function(a){e.assertTrue(null!==a),e.assertTrue(t.containsValue(a,"abbr","sv")),e.assertTrue(!t.containsValue(a,"abbr","sv1")),e.assertTrue(!t.containsValue(a,"abbr",null));var n=!1;try{t.containsValue(a,null,"foo")}catch(e){n=!0}e.assertTrue(n),r.callback(!0)},onError:function(t){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: getAttributes()",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;return t.fetchItemByIdentity({identity:"sv",onItem:function(a){e.assertTrue(null!==a),e.assertTrue(t.isItem(a));var n=t.getAttributes(a);e.assertEqual(n.length,3);for(var o=0;o<n.length;o++)e.assertTrue("name"===n[o]||"abbr"===n[o]||"capital"===n[o]);r.callback(!0)},onError:function(t){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: getFeatures()",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")).getFeatures();e.assertTrue(null!==t["dojo.data.api.Read"]),e.assertTrue(null!==t["dojo.data.api.Identity"])}},{name:"Read API: fetch() patternMatch0",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;return t.fetch({query:{abbr:"e*"},onComplete:function(a,n){e.assertEqual(a.length,5);for(var o=!0,u=0;u<a.length;u++){var i=t.getValue(a[u],"abbr");if("ec"!==i&&"eg"!==i&&"er"!==i&&"ee"!==i&&"et"!==i){o=!1;break}}e.assertTrue(o),o?r.callback(!0):r.errback(new Error("Unexpected abbreviation found, match failure."))},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: fetch() patternMatch0, complex",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;return t.fetch({query:'abbr: "e*"',onComplete:function(a,n){e.assertEqual(a.length,5);for(var o=!0,u=0;u<a.length;u++){var i=t.getValue(a[u],"abbr");if("ec"!==i&&"eg"!==i&&"er"!==i&&"ee"!==i&&"et"!==i){o=!1;break}}e.assertTrue(o),o?r.callback(!0):r.errback(new Error("Unexpected abbreviation found, match failure."))},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: fetch() patternMatch1",runTest:function(e){var t=new dojox.data.AndOrWriteStore({data:{identifier:"uniqueId",items:[{uniqueId:1,value:"foo*bar"},{uniqueId:2,value:"bar*foo"},{uniqueId:3,value:"boomBam"},{uniqueId:4,value:"bit$Bite"},{uniqueId:5,value:"ouagadogou"},{uniqueId:6,value:"BaBaMaSaRa***Foo"},{uniqueId:7,value:"squawl"},{uniqueId:8,value:"seaweed"},{uniqueId:9,value:"jfq4@#!$!@Rf14r14i5u"}]}}),r=new doh.Deferred;return t.fetch({query:{value:"*$*"},onComplete:function(a,n){e.assertEqual(a.length,2);for(var o=!0,u=0;u<a.length;u++){var i=t.getValue(a[u],"value");if("bit$Bite"!==i&&"jfq4@#!$!@Rf14r14i5u"!==i){o=!1;break}}e.assertTrue(o),o?r.callback(!0):r.errback(new Error("Unexpected pattern matched.  Filter failure."))},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: fetch() patternMatch1, complex",runTest:function(e){var t=new dojox.data.AndOrWriteStore({data:{identifier:"uniqueId",items:[{uniqueId:1,value:"foo*bar"},{uniqueId:2,value:"bar*foo"},{uniqueId:3,value:"boomBam"},{uniqueId:4,value:"bit$Bite"},{uniqueId:5,value:"ouagadogou"},{uniqueId:6,value:"BaBaMaSaRa***Foo"},{uniqueId:7,value:"squawl"},{uniqueId:8,value:"seaweed"},{uniqueId:9,value:"jfq4@#!$!@Rf14r14i5u"}]}}),r=new doh.Deferred;return t.fetch({query:'value: "*$*"',onComplete:function(a,n){e.assertEqual(a.length,2);for(var o=!0,u=0;u<a.length;u++){var i=t.getValue(a[u],"value");if("bit$Bite"!==i&&"jfq4@#!$!@Rf14r14i5u"!==i){o=!1;break}}e.assertTrue(o),o?r.callback(!0):r.errback(new Error("Unexpected pattern matched.  Filter failure."))},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: fetch() patternMatch2",runTest:function(e){var t=new dojox.data.AndOrWriteStore({data:{identifier:"uniqueId",items:[{uniqueId:1,value:"foo*bar"},{uniqueId:2,value:"bar*foo"},{uniqueId:3,value:"boomBam"},{uniqueId:4,value:"bit$Bite"},{uniqueId:5,value:"ouagadogou"},{uniqueId:6,value:"BaBaMaSaRa***Foo"},{uniqueId:7,value:"squawl"},{uniqueId:8,value:"seaweed"},{uniqueId:9,value:"jfq4@#!$!@Rf14r14i5u"}]}}),r=new doh.Deferred;return t.fetch({query:{value:"bar\\*foo"},onComplete:function(a,n){e.assertEqual(a.length,1);for(var o=!0,u=0;u<a.length;u++)if("bar*foo"!==t.getValue(a[u],"value")){o=!1;break}e.assertTrue(o),o?r.callback(!0):r.errback(new Error("Unexpected abbreviation found, match failure."))},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: fetch() patternMatch2, complex",runTest:function(e){var t=new dojox.data.AndOrWriteStore({data:{identifier:"uniqueId",items:[{uniqueId:1,value:"foo*bar"},{uniqueId:2,value:"bar*foo"},{uniqueId:3,value:"boomBam"},{uniqueId:4,value:"bit$Bite"},{uniqueId:5,value:"ouagadogou"},{uniqueId:6,value:"BaBaMaSaRa***Foo"},{uniqueId:7,value:"squawl"},{uniqueId:8,value:"seaweed"},{uniqueId:9,value:"jfq4@#!$!@Rf14r14i5u"}]}}),r=new doh.Deferred;return t.fetch({query:'value: "bar\\*foo"',onComplete:function(a,n){e.assertEqual(a.length,1);for(var o=!0,u=0;u<a.length;u++)if("bar*foo"!==t.getValue(a[u],"value")){o=!1;break}e.assertTrue(o),o?r.callback(!0):r.errback(new Error("Unexpected abbreviation found, match failure."))},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: fetch() patternMatch_caseSensitive",runTest:function(e){var t=new dojox.data.AndOrWriteStore({data:{identifier:"uniqueId",items:[{uniqueId:1,value:"foo*bar"},{uniqueId:2,value:"bar*foo"},{uniqueId:3,value:"BAR*foo"},{uniqueId:4,value:"BARBananafoo"}]}}),r=new doh.Deferred;return t.fetch({query:{value:"bar\\*foo"},queryOptions:{ignoreCase:!1},onComplete:function(a,n){e.assertEqual(1,a.length);for(var o=!0,u=0;u<a.length;u++)if("bar*foo"!==t.getValue(a[u],"value")){o=!1;break}e.assertTrue(o),o?r.callback(!0):r.errback(new Error("Unexpected pattern matched.  Filter failure."))},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: fetch() patternMatch_caseSensitive, complex",runTest:function(e){var t=new dojox.data.AndOrWriteStore({data:{identifier:"uniqueId",items:[{uniqueId:1,value:"foo*bar"},{uniqueId:2,value:"bar*foo"},{uniqueId:3,value:"BAR*foo"},{uniqueId:4,value:"BARBananafoo"}]}}),r=new doh.Deferred;return t.fetch({query:'value: "bar\\*foo"',queryOptions:{ignoreCase:!1},onComplete:function(a,n){e.assertEqual(1,a.length);for(var o=!0,u=0;u<a.length;u++)if("bar*foo"!==t.getValue(a[u],"value")){o=!1;break}e.assertTrue(o),o?r.callback(!0):r.errback(new Error("Unexpected pattern matched.  Filter failure."))},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: fetch() patternMatch_caseInsensitive",runTest:function(e){var t=new dojox.data.AndOrWriteStore({data:{identifier:"uniqueId",items:[{uniqueId:1,value:"foo*bar"},{uniqueId:2,value:"bar*foo"},{uniqueId:3,value:"BAR*foo"},{uniqueId:4,value:"BARBananafoo"}]}}),r=new doh.Deferred;return t.fetch({query:{value:"bar\\*foo"},queryOptions:{ignoreCase:!0},onComplete:function(a,n){e.assertEqual(a.length,2);for(var o=!0,u=0;u<a.length;u++){var i=t.getValue(a[u],"value");if("BAR*foo"!==i&&"bar*foo"!==i){o=!1;break}}e.assertTrue(o),o?r.callback(!0):r.errback(new Error("Unexpected pattern matched.  Filter failure."))},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: fetch() patternMatch_caseInsensitive, complex",runTest:function(e){var t=new dojox.data.AndOrWriteStore({data:{identifier:"uniqueId",items:[{uniqueId:1,value:"foo*bar"},{uniqueId:2,value:"bar*foo"},{uniqueId:3,value:"BAR*foo"},{uniqueId:4,value:"BARBananafoo"}]}}),r=new doh.Deferred;return t.fetch({query:'value: "bar\\*foo"',queryOptions:{ignoreCase:!0},onComplete:function(a,n){e.assertEqual(a.length,2);for(var o=!0,u=0;u<a.length;u++){var i=t.getValue(a[u],"value");if("BAR*foo"!==i&&"bar*foo"!==i){o=!1;break}}e.assertTrue(o),o?r.callback(!0):r.errback(new Error("Unexpected pattern matched.  Filter failure."))},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: fetch() sortNumeric",runTest:function(e){var t=new dojox.data.AndOrWriteStore({data:{identifier:"uniqueId",items:[{uniqueId:0,value:"fo|o*b.ar"},{uniqueId:1,value:"ba|r*foo"},{uniqueId:2,value:"boomBam"},{uniqueId:3,value:"bit$Bite"},{uniqueId:4,value:"ouagadogou"},{uniqueId:5,value:"jfq4@#!$!@|f1.$4r14i5u"},{uniqueId:6,value:"BaB{aMa|SaRa***F}oo"},{uniqueId:7,value:"squawl"},{uniqueId:9,value:"seaweed"},{uniqueId:10,value:"zulu"},{uniqueId:8,value:"seaweed"}]}}),r=new doh.Deferred;return t.fetch({onComplete:function(a,n){e.assertEqual(a.length,11);for(var o=!0,u=0;u<a.length;u++)if(t.getValue(a[u],"value"),t.getValue(a[u],"uniqueId")!==u){o=!1;break}e.assertTrue(o),o?r.callback(!0):r.errback(new Error("Unexpected sorting order found, sort failure."))},onError:function(t,a){e.assertTrue(!1),r.errback(t)},sort:[{attribute:"uniqueId"}]}),r}},{name:"Read API: fetch() sortNumericDescending",runTest:function(e){var t=new dojox.data.AndOrWriteStore({data:{identifier:"uniqueId",items:[{uniqueId:0,value:"fo|o*b.ar"},{uniqueId:1,value:"ba|r*foo"},{uniqueId:2,value:"boomBam"},{uniqueId:3,value:"bit$Bite"},{uniqueId:4,value:"ouagadogou"},{uniqueId:5,value:"jfq4@#!$!@|f1.$4r14i5u"},{uniqueId:6,value:"BaB{aMa|SaRa***F}oo"},{uniqueId:7,value:"squawl"},{uniqueId:9,value:"seaweed"},{uniqueId:10,value:"zulu"},{uniqueId:8,value:"seaweed"}]}}),r=new doh.Deferred;return t.fetch({onComplete:function(a,n){e.assertEqual(a.length,11);for(var o=!0,u=0;u<a.length;u++)if(t.getValue(a[u],"value"),a.length-(t.getValue(a[u],"uniqueId")+1)!==u){o=!1;break}e.assertTrue(o),o?r.callback(!0):r.errback(new Error("Unexpected sorting order found, sort failure."))},onError:function(t,a){e.assertTrue(!1),r.errback(t)},sort:[{attribute:"uniqueId",descending:!0}]}),r}},{name:"Read API: fetch() sortNumericWithCount",runTest:function(e){var t=new dojox.data.AndOrWriteStore({data:{identifier:"uniqueId",items:[{uniqueId:0,value:"fo|o*b.ar"},{uniqueId:1,value:"ba|r*foo"},{uniqueId:2,value:"boomBam"},{uniqueId:3,value:"bit$Bite"},{uniqueId:4,value:"ouagadogou"},{uniqueId:5,value:"jfq4@#!$!@|f1.$4r14i5u"},{uniqueId:6,value:"BaB{aMa|SaRa***F}oo"},{uniqueId:7,value:"squawl"},{uniqueId:9,value:"seaweed"},{uniqueId:10,value:"zulu"},{uniqueId:8,value:"seaweed"}]}}),r=new doh.Deferred;return t.fetch({onComplete:function(a,n){e.assertEqual(a.length,5);for(var o=10,u=!0,i=0;i<a.length;i++){if(t.getValue(a[i],"value"),t.getValue(a[i],"uniqueId")!==o){u=!1;break}o--}e.assertTrue(u),u?r.callback(!0):r.errback(new Error("Unexpected sorting order found, sort failure."))},onError:function(t,a){e.assertTrue(!1),r.errback(t)},sort:[{attribute:"uniqueId",descending:!0}],count:5}),r}},{name:"Read API: fetch() sortAlphabetic",runTest:function(e){var t=new dojox.data.AndOrWriteStore({data:{identifier:"uniqueId",items:[{uniqueId:0,value:"abc"},{uniqueId:1,value:"bca"},{uniqueId:2,value:"abcd"},{uniqueId:3,value:"abcdefg"},{uniqueId:4,value:"lmnop"},{uniqueId:5,value:"foghorn"},{uniqueId:6,value:"qberty"},{uniqueId:7,value:"qwerty"},{uniqueId:8,value:""},{uniqueId:9,value:"seaweed"},{uniqueId:10,value:"123abc"}]}}),r=new doh.Deferred;return t.fetch({onComplete:function(a,n){var o=["","123abc","abc","abcd","abcdefg","bca","foghorn","lmnop","qberty","qwerty","seaweed"];e.assertEqual(a.length,11);for(var u=!0,i=0;i<a.length;i++)if(t.getValue(a[i],"value"),t.getValue(a[i],"value")!==o[i]){u=!1;break}e.assertTrue(u),u?r.callback(!0):r.errback(new Error("Unexpected sorting order found, sort failure."))},onError:function(t,a){e.assertTrue(!1),r.errback(t)},sort:[{attribute:"value"}]}),r}},{name:"Read API: fetch() sortAlphabeticDescending",runTest:function(e){var t=new dojox.data.AndOrWriteStore({data:{identifier:"uniqueId",items:[{uniqueId:0,value:"abc"},{uniqueId:1,value:"bca"},{uniqueId:2,value:"abcd"},{uniqueId:3,value:"abcdefg"},{uniqueId:4,value:"lmnop"},{uniqueId:5,value:"foghorn"},{uniqueId:6,value:"qberty"},{uniqueId:7,value:"qwerty"},{uniqueId:8,value:""},{uniqueId:9,value:"seaweed"},{uniqueId:10,value:"123abc"}]}}),r=new doh.Deferred;return t.fetch({onComplete:function(a,n){var o=["","123abc","abc","abcd","abcdefg","bca","foghorn","lmnop","qberty","qwerty","seaweed"];o=o.reverse(),e.assertEqual(a.length,11);for(var u=!0,i=0;i<a.length;i++)if(t.getValue(a[i],"value"),t.getValue(a[i],"value")!==o[i]){u=!1;break}e.assertTrue(u),u?r.callback(!0):r.errback(new Error("Unexpected sorting order found, sort failure."))},onError:function(t,a){e.assertTrue(!1),r.errback(t)},sort:[{attribute:"value",descending:!0}]}),r}},{name:"Read API: fetch() sortDate",runTest:function(e){var t=new dojox.data.AndOrWriteStore({data:{identifier:"uniqueId",items:[{uniqueId:0,value:new Date(0)},{uniqueId:1,value:new Date(100)},{uniqueId:2,value:new Date(1e3)},{uniqueId:3,value:new Date(2e3)},{uniqueId:4,value:new Date(3e3)},{uniqueId:5,value:new Date(4e3)},{uniqueId:6,value:new Date(5e3)},{uniqueId:7,value:new Date(6e3)},{uniqueId:8,value:new Date(7e3)},{uniqueId:9,value:new Date(8e3)},{uniqueId:10,value:new Date(9e3)}]}}),r=new doh.Deferred;return t.fetch({onComplete:function(a,n){var o=[0,100,1e3,2e3,3e3,4e3,5e3,6e3,7e3,8e3,9e3];e.assertEqual(a.length,11);for(var u=!0,i=0;i<a.length;i++)if(t.getValue(a[i],"value"),t.getValue(a[i],"value").getTime()!==o[i]){u=!1;break}e.assertTrue(u),u?r.callback(!0):r.errback(new Error("Unexpected sorting order found, sort failure."))},onError:function(t,a){e.assertTrue(!1),r.errback(t)},sort:[{attribute:"value"}]}),r}},{name:"Read API: fetch() sortDateDescending",runTest:function(e){var t=new dojox.data.AndOrWriteStore({data:{identifier:"uniqueId",items:[{uniqueId:0,value:new Date(0)},{uniqueId:1,value:new Date(100)},{uniqueId:2,value:new Date(1e3)},{uniqueId:3,value:new Date(2e3)},{uniqueId:4,value:new Date(3e3)},{uniqueId:5,value:new Date(4e3)},{uniqueId:6,value:new Date(5e3)},{uniqueId:7,value:new Date(6e3)},{uniqueId:8,value:new Date(7e3)},{uniqueId:9,value:new Date(8e3)},{uniqueId:10,value:new Date(9e3)}]}}),r=new doh.Deferred;return t.fetch({onComplete:function(a,n){var o=[0,100,1e3,2e3,3e3,4e3,5e3,6e3,7e3,8e3,9e3];o=o.reverse(),e.assertEqual(a.length,11);for(var u=!0,i=0;i<a.length;i++)if(t.getValue(a[i],"value"),t.getValue(a[i],"value").getTime()!==o[i]){u=!1;break}e.assertTrue(u),u?r.callback(!0):r.errback(new Error("Unexpected sorting order found, sort failure."))},onError:function(t,a){e.assertTrue(!1),r.errback(t)},sort:[{attribute:"value",descending:!0}]}),r}},{name:"Read API: fetch() sortMultiple",runTest:function(e){var t=new dojox.data.AndOrWriteStore({data:{identifier:"uniqueId",items:[{uniqueId:1,value:"fo|o*b.ar"},{uniqueId:2,value:"ba|r*foo"},{uniqueId:3,value:"boomBam"},{uniqueId:4,value:"bit$Bite"},{uniqueId:5,value:"ouagadogou"},{uniqueId:6,value:"jfq4@#!$!@|f1.$4r14i5u"},{uniqueId:7,value:"BaB{aMa|SaRa***F}oo"},{uniqueId:8,value:"squawl"},{uniqueId:10,value:"seaweed"},{uniqueId:12,value:"seaweed"},{uniqueId:11,value:"zulu"},{uniqueId:9,value:"seaweed"}]}}),r=new doh.Deferred;return t.fetch({onComplete:function(a,n){for(var o=[7,2,4,3,1,6,5,12,10,9,8,11],u=["BaB{aMa|SaRa***F}oo","ba|r*foo","bit$Bite","boomBam","fo|o*b.ar","jfq4@#!$!@|f1.$4r14i5u","ouagadogou","seaweed","seaweed","seaweed","squawl","zulu"],i=!0,s=0;s<a.length;s++)if(t.getValue(a[s],"value"),t.getValue(a[s],"uniqueId")!==o[s]||t.getValue(a[s],"value")!==u[s]){i=!1;break}e.assertTrue(i),i?r.callback(!0):r.errback(new Error("Unexpected sorting order found, sort failure."))},onError:function(t,a){e.assertTrue(!1),r.errback(t)},sort:[{attribute:"value"},{attribute:"uniqueId",descending:!0}]}),r}},{name:"Read API: fetch() sortMultipleSpecialComparator",runTest:function(e){var t=new dojox.data.AndOrWriteStore({data:{identifier:"uniqueId",items:[{uniqueId:1,status:"CLOSED"},{uniqueId:2,status:"OPEN"},{uniqueId:3,status:"PENDING"},{uniqueId:4,status:"BLOCKED"},{uniqueId:5,status:"CLOSED"},{uniqueId:6,status:"OPEN"},{uniqueId:7,status:"PENDING"},{uniqueId:8,status:"PENDING"},{uniqueId:10,status:"BLOCKED"},{uniqueId:12,status:"BLOCKED"},{uniqueId:11,status:"OPEN"},{uniqueId:9,status:"CLOSED"}]}});t.comparatorMap={},t.comparatorMap.status=function(e,t){var r=0,a={OPEN:3,BLOCKED:2,PENDING:1,CLOSED:0};return a[e]>a[t]&&(r=1),a[e]<a[t]&&(r=-1),r};var r=new doh.Deferred;return t.fetch({onComplete:function(a,n){for(var o=[11,6,2,12,10,4,8,7,3,9,5,1],u=!0,i=0;i<a.length;i++)if(t.getValue(a[i],"value"),t.getValue(a[i],"uniqueId")!==o[i]){u=!1;break}e.assertTrue(u),u?r.callback(!0):r.errback(new Error("Unexpected sorting order found, sort failure."))},onError:function(t,a){e.assertTrue(!1),r.errback(t)},sort:[{attribute:"status",descending:!0},{attribute:"uniqueId",descending:!0}]}),r}},{name:"Read API: fetch() sortAlphabeticWithUndefined",runTest:function(e){var t=new dojox.data.AndOrWriteStore({data:{identifier:"uniqueId",items:[{uniqueId:0,value:"abc"},{uniqueId:1,value:"bca"},{uniqueId:2,value:"abcd"},{uniqueId:3,value:"abcdefg"},{uniqueId:4,value:"lmnop"},{uniqueId:5,value:"foghorn"},{uniqueId:6,value:"qberty"},{uniqueId:7,value:"qwerty"},{uniqueId:8},{uniqueId:9,value:"seaweed"},{uniqueId:10,value:"123abc"}]}}),r=new doh.Deferred;return t.fetch({onComplete:function(a,n){var o=[10,0,2,3,1,5,4,6,7,9,8];e.assertEqual(a.length,11);for(var u=!0,i=0;i<a.length;i++)if(t.getValue(a[i],"uniqueId")!==o[i]){u=!1;break}e.assertTrue(u),u?r.callback(!0):r.errback(new Error("Unexpected sorting order found, sort failure."))},onError:function(t,a){e.assertTrue(!1),r.errback(t)},sort:[{attribute:"value"}]}),r}},{name:"Read API: errorCondition_idCollision_inMemory",runTest:function(e){var t=new dojox.data.AndOrWriteStore({data:{identifier:"uniqueId",items:[{uniqueId:12345,value:"foo"},{uniqueId:123456,value:"bar"},{uniqueId:12345,value:"boom"},{uniqueId:123457,value:"bit"}]}}),r=new doh.Deferred;return t.fetch({onComplete:function(t,a){e.assertTrue(!1),r.callback(!1)},onError:function(t,a){e.assertTrue(!0),r.callback(!0)}}),r}},{name:"Read API: errorCondition_idCollision_xhr",runTest:function(e){if(dojo.isBrowser){var t=new dojox.data.AndOrWriteStore({url:require.toUrl("dojo/tests/data/countries_idcollision.json").toString()}),r=new doh.Deferred;return t.fetch({onComplete:function(t,a){e.assertTrue(!1),r.callback(!1)},onError:function(t,a){e.assertTrue(!0),r.callback(!0)}}),r}}},{name:"Read API: Date_datatype",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries_withDates")),r=new doh.Deferred;return t.fetchItemByIdentity({identity:"er",onItem:function(a){e.assertTrue(null!==a);var n=t.getValue(a,"independence");e.assertTrue(n instanceof Date),e.assertTrue("1993-05-24T00:00:00Z"===dojo.date.stamp.toISOString(n,{zulu:!0})),r.callback(!0)},onError:function(t){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: custom_datatype_Color_SimpleMapping",runTest:function(e){var t=new dojox.data.AndOrWriteStore({data:{identifier:"name",items:[{name:"Kermit",species:"frog",color:{_type:"Color",_value:"green"}},{name:"Beaker",hairColor:{_type:"Color",_value:"red"}}]},typeMap:{Color:dojo.Color}}),r=new doh.Deferred;return t.fetchItemByIdentity({identity:"Beaker",onItem:function(a){e.assertTrue(null!==a);var n=a,o=t.getValue(n,"hairColor");e.assertTrue(o instanceof dojo.Color),e.assertTrue("#ff0000"==o.toHex()),r.callback(!0)},onError:function(e){r.errback(e)}}),r}},{name:"Read API: custom_datatype_Color_GeneralMapping",runTest:function(e){var t=new dojox.data.AndOrWriteStore({data:{identifier:"name",items:[{name:"Kermit",species:"frog",color:{_type:"Color",_value:"green"}},{name:"Beaker",hairColor:{_type:"Color",_value:"red"}}]},typeMap:{Color:{type:dojo.Color,deserialize:function(e){return new dojo.Color(e)}}}}),r=new doh.Deferred;return t.fetchItemByIdentity({identity:"Beaker",onItem:function(a){e.assertTrue(null!==a);var n=a,o=t.getValue(n,"hairColor");e.assertTrue(o instanceof dojo.Color),e.assertTrue("#ff0000"==o.toHex()),r.callback(!0)},onError:function(e){r.errback(e)}}),r}},{name:"Read API: hierarchical_data",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("geography_hierarchy_small")),r=new doh.Deferred;return t.fetch({query:{name:"North America"},onComplete:function(a,n){e.assertEqual(a.length,1);var o=a[0],u=t.getValue(o,"countries"),i=t.getValue(u,"cities");e.assertEqual(t.getValue(u,"name"),"Canada"),e.assertEqual(t.getValue(i,"name"),"Toronto"),r.callback(!0)},onError:function(e){r.errback(e)}}),r}},{name:"Read API: hierarchical_data, complex",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("geography_hierarchy_small")),r=new doh.Deferred;return t.fetch({query:'name: "North America"',onComplete:function(a,n){e.assertEqual(a.length,1);var o=a[0],u=t.getValue(o,"countries"),i=t.getValue(u,"cities");e.assertEqual(t.getValue(u,"name"),"Canada"),e.assertEqual(t.getValue(i,"name"),"Toronto"),r.callback(!0)},onError:function(e){r.errback(e)}}),r}},{name:"Identity API: no_identifier_specified",runTest:function(e){var t=new dojox.data.AndOrWriteStore({data:{items:[{name:"Kermit",color:"green"},{name:"Miss Piggy",likes:"Kermit"},{name:"Beaker",hairColor:"red"}]}}),r=new doh.Deferred;return t.fetch({onComplete:function(a,n){var o=t.getFeatures(),u=Boolean(o["dojo.data.api.Identity"]);e.assertTrue(u);for(var i=0;i<a.length;++i){var s=a[i],d=t.getIdentityAttributes(s);e.assertTrue(null===d);var l=t.getIdentity(s);e.assertTrue("number"==typeof l)}r.callback(!0)},onError:function(e,t){r.errback(!0)}}),r}},{name:"Identity API: hierarchical_data",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("geography_hierarchy_small")),r=new doh.Deferred;return t.fetch({onComplete:function(a,n){var o=t.getFeatures(),u=Boolean(o["dojo.data.api.Identity"]);e.assertTrue(u);for(var i=0;i<a.length;++i){var s=a[i],d=t.getIdentityAttributes(s);e.assertTrue(null===d);var l=t.getIdentity(s);e.assertTrue("number"==typeof l)}r.callback(!0)},onError:function(e,t){r.errback(!0)}}),r}},{name:"Read API: functionConformance",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new dojo.data.api.Read,a=!0;for(var n in r){if("_"!==n.toString().charAt(0))if("function"==typeof r[n])if("function"!=typeof t[n]){a=!1;break}}e.assertTrue(a)}},{name:"Identity API: functionConformance",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new dojo.data.api.Identity,a=!0;for(var n in r){if("_"!==n.toString().charAt(0))if("function"==typeof r[n])if("function"!=typeof t[n]){a=!1;break}}e.assertTrue(a)}},{name:"Read API: fetch() multiple, OR, complex",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;return t.fetch({query:'abbr: "s*" || capital:"A*"',onComplete:function(t,a){e.assertEqual(t.length,3),r.callback(!0)},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: fetch() multiple, AND(OR, complex",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;return t.fetch({query:'abbr: "e*" AND (capital:"A*" or capital: "Q*")',onComplete:function(t,a){e.assertEqual(t.length,3),r.callback(!0)},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: fetch() multiple, AND/OR, as json object, complex",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;return t.fetch({query:{complexQuery:'abbr: "e*" AND (capital:"A*" or capital: "Q*")'},onComplete:function(t,a){e.assertEqual(t.length,3),r.callback(!0)},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: fetch() multiple, AND/OR, as json object, complex, with extra attrs",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;return t.fetch({query:{complexQuery:'abbr: "e*" AND (capital:"A*" or capital: "Q*")',name:"Ec*"},onComplete:function(t,a){e.assertEqual(t.length,1),r.callback(!0)},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: fetch() multiple, AND/OR, as json object, complex, with extra attrs and spaces",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;return t.fetch({query:{complexQuery:'abbr: "g*" AND (capital:"A*" or capital: "M*")',name:"Equatorial G*"},onComplete:function(a,n){try{e.assertEqual(a.length,1),e.assertEqual("Equatorial Guinea",t.getValue(a[0],"name")),r.callback(!0)}catch(e){r.errback(e)}},onError:function(e,t){r.errback(e)}}),r}},{name:"Read API: fetch() multiple, AND/OR, as quoted json object, complex",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;return t.fetch({query:'{complexQuery:\'abbr: "e*" AND (capital:"A*" or capital: "Q*")\'}',onComplete:function(t,a){e.assertEqual(t.length,3),r.callback(!0)},onError:function(t,a){e.assertTrue(!1),r.errback(t)}}),r}},{name:"Read API: close (clearOnClose: true, reset url.)",runTest:function(e){if(dojo.isBrowser){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries"));t.clearOnClose=!0,t.urlPreventCache=!0;var r=new doh.Deferred;function a(e){r.errback(e)}return t.fetchItemByIdentity({identity:"ec",onItem:function(n){var o=null;try{e.assertTrue(null!==n);var u=n,i=t.getValue(u,"name");e.assertEqual("Ecuador",i),t.close(),e.assertTrue(0===t._arrayOfAllItems.length),e.assertTrue(!1===t._loadFinished),t.url=require.toUrl("dojo/tests/data/countries_withNull.json").toString(),t.fetchItemByIdentity({identity:"ec",onItem:function(a){var n;try{e.assertTrue(null!==a);var o=t.getValue(a,"name");e.assertEqual(null,o)}catch(e){n=e}n?r.errback(n):r.callback(!0)},onError:a})}catch(e){o=e}o&&r.errback(o)},onError:a}),r}}},{name:"Read API: fetch, close (clearOnClose: true, reset url.)",runTest:function(e){if(dojo.isBrowser){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries"));t.clearOnClose=!0,t.urlPreventCache=!0;var r=new doh.Deferred;function a(e){r.errback(e)}return t.fetchItemByIdentity({identity:"ec",onItem:function(n){var o=null;try{e.assertTrue(null!==n);var u=n,i=t.getValue(u,"name");e.assertEqual("Ecuador",i),t.close(),e.assertTrue(0===t._arrayOfAllItems.length),e.assertTrue(!1===t._loadFinished),t.url=require.toUrl("dojo/tests/data/countries_withNull.json").toString(),t.fetch({query:{abbr:"ec"},onComplete:function(a){var n;try{e.assertEqual(1,a.length);var o=a[0];e.assertTrue(null!==o);var u=t.getValue(o,"name");e.assertEqual(null,u)}catch(e){n=e}n?r.errback(n):r.callback(!0)},onError:a})}catch(e){o=e}o&&r.errback(o)},onError:a}),r}}},{name:"Read API: close (clearOnClose: true, reset _jsonFileUrl.)",runTest:function(e){if(dojo.isBrowser){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries"));t.clearOnClose=!0,t.urlPreventCache=!0;var r=new doh.Deferred;function a(e){r.errback(e)}return t.fetchItemByIdentity({identity:"ec",onItem:function(n){var o=null;try{e.assertTrue(null!==n);var u=n,i=t.getValue(u,"name");e.assertEqual("Ecuador",i),t.close(),e.assertTrue(0===t._arrayOfAllItems.length),e.assertTrue(!1===t._loadFinished),t._jsonFileUrl=require.toUrl("dojo/tests/data/countries_withNull.json").toString(),t.fetchItemByIdentity({identity:"ec",onItem:function(a){var n;try{e.assertTrue(null!==a);var o=t.getValue(a,"name");e.assertEqual(null,o)}catch(e){n=e}n?r.errback(n):r.callback(!0)},onError:a})}catch(e){o=e}o&&r.errback(o)},onError:a}),r}}},{name:"Read API: close (clearOnClose: true, reset data.)",runTest:function(e){var t=new dojox.data.AndOrWriteStore({data:{identifier:"uniqueId",items:[{uniqueId:1,value:"foo*bar"},{uniqueId:2,value:"bar*foo"},{uniqueId:3,value:"boomBam"},{uniqueId:4,value:"bit$Bite"},{uniqueId:5,value:"ouagadogou"},{uniqueId:6,value:"BaBaMaSaRa***Foo"},{uniqueId:7,value:"squawl"},{uniqueId:8,value:"seaweed"},{uniqueId:9,value:"jfq4@#!$!@Rf14r14i5u"}]}}),r=new doh.Deferred;function a(t,a){e.assertTrue(!1),r.errback(t)}return t.fetch({query:{value:"bar*foo"},onComplete:function(n,o){e.assertEqual(n.length,1);var u=n[0];t.clearOnClose=!0,t.data={identifier:"uniqueId",items:[{uniqueId:1,value:"foo*bar"},{uniqueId:2,value:"bar*foo"},{uniqueId:3,value:"boomBam"},{uniqueId:4,value:"bit$Bite"},{uniqueId:5,value:"ouagadogou"},{uniqueId:6,value:"BaBaMaSaRa***Foo"},{uniqueId:7,value:"squawl"},{uniqueId:8,value:"seaweed"},{uniqueId:9,value:"jfq4@#!$!@Rf14r14i5u"}]},t.close();t.fetch({query:{value:"bar*foo"},onComplete:function(t,a){try{e.assertEqual(t.length,1);var n=t[0];e.assertTrue(null!=u),e.assertTrue(null!=n),e.assertTrue(u!=n),r.callback(!0)}catch(e){r.errback(e)}},onError:a})},onError:a}),r}},{name:"Write API:  getFeatures",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")).getFeatures();e.assertTrue(null!==t["dojo.data.api.Read"]),e.assertTrue(null!==t["dojo.data.api.Identity"]),e.assertTrue(null!==t["dojo.data.api.Write"]),e.assertTrue(null!==t["dojo.data.api.Notification"]),e.assertFalse(t.iggy);var r=0;for(var a in t)e.assertTrue("dojo.data.api.Read"===a||"dojo.data.api.Identity"===a||"dojo.data.api.Write"===a||"dojo.data.api.Notification"===a),r++;e.assertEqual(r,4)}},{name:"Write API:  setValue",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;return t.fetch({query:{name:"Egypt"},onComplete:function(a,n){e.assertEqual(1,a.length);var o=a[0];e.assertTrue(t.containsValue(o,"capital","Cairo")),e.assertEqual(t.isDirty(o),!1),e.assertTrue(!1===t.isDirty(o)),e.assertFalse(t.isDirty()),e.assertTrue(!1===t.isDirty(o)),e.assertTrue(!t.isDirty()),t.setValue(o,"capital","New Cairo"),e.assertTrue(t.isDirty(o)),e.assertTrue(t.isDirty()),e.assertEqual(t.getValue(o,"capital").toString(),"New Cairo"),r.callback(!0)},onError:function(e,t){r.errback(e)}}),r}},{name:"Write API: setValues",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;return t.fetch({query:{name:"Egypt"},onComplete:function(a,n){e.assertEqual(1,a.length);var o=a[0];e.assertTrue(t.containsValue(o,"name","Egypt")),e.assertTrue(!1===t.isDirty(o)),e.assertTrue(!t.isDirty()),t.setValues(o,"name",["Egypt 1","Egypt 2"]),e.assertTrue(t.isDirty(o)),e.assertTrue(t.isDirty());var u=t.getValues(o,"name");e.assertTrue("Egypt 1"==u[0]),e.assertTrue("Egypt 2"==u[1]),r.callback(!0)},onError:function(e,t){r.errback(e)}}),r}},{name:"Write API: unsetAttribute",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;return t.fetch({query:{name:"Egypt"},onComplete:function(a,n){e.assertEqual(1,a.length);var o=a[0];e.assertTrue(t.containsValue(o,"name","Egypt")),e.assertTrue(!1===t.isDirty(o)),e.assertTrue(!t.isDirty()),t.unsetAttribute(o,"name"),e.assertTrue(t.isDirty(o)),e.assertTrue(t.isDirty()),e.assertTrue(!t.hasAttribute(o,"name")),r.callback(!0)},onError:function(e,t){r.errback(e)}}),r}},{name:"Write API: newItem",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;e.assertTrue(!t.isDirty());var a=!1;t.onNew=function(r,n){e.assertTrue(null!==r),e.assertTrue(null===n),e.assertTrue(t.isItem(r)),a=!0};var n=t.newItem({name:"Canada",abbr:"ca",capital:"Ottawa"});e.assertTrue(a),e.assertTrue(t.isDirty(n)),e.assertTrue(t.isDirty()),e.assertTrue("Canada"==t.getValues(n,"name"));return t.fetch({query:{name:"Canada"},onComplete:function(a,n){e.assertEqual(1,a.length);var o=a[0];e.assertTrue(t.containsValue(o,"name","Canada")),r.callback(!0)},onError:function(e,t){r.errback(e)}}),r}},{name:"Write API: newItem with a parent assignment",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;e.assertTrue(!t.isDirty());var a=function(e,t){r.errback(e)};return t.fetch({query:{name:"Egypt"},onComplete:function(n,o){e.assertEqual(1,n.length);var u=n[0];e.assertTrue(t.containsValue(u,"name","Egypt"));var i=!1;t.onNew=function(t,r){e.assertEqual(u,r.item),e.assertEqual("cities",r.attribute),e.assertTrue(void 0===r.oldValue),e.assertTrue(r.newValue===t),i=!0},t.onSet=function(t,r,a,n){e.assertTrue(!1)};t.newItem({name:"Cairo",abbr:"Cairo"},{parent:u,attribute:"cities"});e.assertTrue(i);t.fetch({query:{name:"Cairo"},onComplete:function(n,o){e.assertEqual(0,n.length),t.fetch({query:{name:"Cairo"},onComplete:function(a,n){e.assertEqual(1,a.length);var o=a[0];e.assertEqual("Cairo",t.getValue(o,"name")),r.callback(!0)},onError:a,queryOptions:{deep:!0}})},onError:a})},onError:a}),r}},{name:"Write API: newItem with a parent assignment multiple times",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;e.assertTrue(!t.isDirty());return t.fetch({query:{name:"Egypt"},onComplete:function(a,n){e.assertEqual(1,a.length);var o=a[0];e.assertTrue(t.containsValue(o,"name","Egypt")),t.onNew=function(t,r){e.assertEqual(o,r.item),e.assertEqual("cities",r.attribute),e.assertTrue(void 0===r.oldValue),e.assertTrue(r.newValue===t)};var u=t.newItem({name:"Cairo",abbr:"Cairo"},{parent:o,attribute:"cities"});t.onNew=function(t,r){e.assertEqual(o,r.item),e.assertEqual("cities",r.attribute),console.log(r.oldValue),e.assertTrue(r.oldValue==u),e.assertTrue(r.newValue[0]==u),e.assertTrue(r.newValue[1]==t)};var i=t.newItem({name:"Banha",abbr:"Banha"},{parent:o,attribute:"cities"});t.onNew=function(t,r){e.assertEqual(o,r.item),e.assertEqual("cities",r.attribute),e.assertTrue(r.oldValue[0]==u),e.assertTrue(r.oldValue[1]==i),e.assertTrue(r.newValue[0]==u),e.assertTrue(r.newValue[1]==i),e.assertTrue(r.newValue[2]==t)};t.newItem({name:"Damanhur",abbr:"Damanhur"},{parent:o,attribute:"cities"});r.callback(!0)},onError:function(e,t){r.errback(e)}}),r}},{name:"Write API: deleteItem",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred,a=function(e,t){r.errback(e)};return t.fetch({query:{name:"Egypt"},onComplete:function(n,o){e.assertEqual(1,n.length);var u=n[0];e.assertTrue(t.containsValue(u,"name","Egypt")),e.assertTrue(!1===t.isDirty(u)),e.assertTrue(!t.isDirty()),t.deleteItem(u),e.assertTrue(t.isDirty(u)),e.assertTrue(t.isDirty());t.fetch({query:{name:"Egypt"},onComplete:function(t,a){e.assertEqual(0,t.length),r.callback(!0)},onError:a})},onError:a}),r}},{name:"Write API: isDirty",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;return t.fetch({query:{name:"Egypt"},onComplete:function(a,n){e.assertEqual(1,a.length);var o=a[0];e.assertTrue(t.containsValue(o,"name","Egypt")),t.setValue(o,"name","Egypt 2"),e.assertTrue("Egypt 2"==t.getValue(o,"name")),e.assertTrue(t.isDirty(o)),r.callback(!0)},onError:function(e,t){r.errback(e)}}),r}},{name:"Write API: revert",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred,a=function(e,t){r.errback(e)};return t.fetch({query:{name:"Egypt"},onComplete:function(n,o){e.assertEqual(1,n.length);var u=n[0];e.assertTrue(t.containsValue(u,"name","Egypt")),e.assertTrue(!1===t.isDirty(u)),e.assertTrue(!t.isDirty()),t.setValue(u,"name","Egypt 2"),e.assertTrue("Egypt 2"==t.getValue(u,"name")),e.assertTrue(t.isDirty(u)),e.assertTrue(t.isDirty()),t.revert();t.fetch({query:{name:"Egypt"},onComplete:function(a,n){e.assertEqual(1,a.length);var o=a[0];e.assertTrue(t.containsValue(o,"name","Egypt")),r.callback(!0)},onError:a})},onError:a}),r}},{name:"Write API: save",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred,a=function(e){r.errback(e)};return t.fetchItemByIdentity({identity:"eg",onItem:function(e){t.setValue(e,"capital","New Cairo");t.save({onComplete:function(){r.callback(!0)},onError:a})},onError:a}),r}},{name:"Write API: save, verify state",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred,a=function(e){r.errback(e)};return t.fetchItemByIdentity({identity:"eg",onItem:function(n){t.setValue(n,"capital","New Cairo");t.save({onComplete:function(){e.assertTrue(!t._saveInProgress),r.callback(!0)},onError:a})},onError:a}),r}},{name:"Write API: saveEverything",runTest:function(e){var t,r=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),a=new doh.Deferred,n=function(e){a.errback(e)};r._saveEverything=function(a,o,u){var i=dojo.fromJson(u);e.assertEqual(i.identifier,r.getIdentityAttributes(t)[0]),e.assertEqual(i.label,r.getLabelAttributes(t)[0]),e.assertEqual(i.items.length,7);var s=new dojox.data.AndOrWriteStore({data:i});s.fetchItemByIdentity({identity:"eg",onItem:function(a){var n=a;e.assertEqual(r.getIdentityAttributes(t)[0],s.getIdentityAttributes(n)[0]),e.assertEqual(r.getLabelAttributes(t)[0],s.getLabelAttributes(n)[0]),e.assertEqual(r.getValue(t,"name"),s.getValue(n,"name"))},onError:n}),a()};return r.fetchItemByIdentity({identity:"eg",onItem:function(e){t=e;r.setValue(t,"capital","New Cairo"),r.save({onComplete:function(){a.callback(!0)},onError:n})},onError:n}),a}},{name:"Write API: saveEverything with Date type",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;t._saveEverything=function(t,a,n){var o=dojo.fromJson(n),u=new dojox.data.AndOrWriteStore({data:o});u.fetchItemByIdentity({identity:"eg",onItem:function(r){var a=u.getValue(r,"independence");e.assertTrue(a instanceof Date),e.assertTrue(0===dojo.date.compare(new Date(1993,4,24),a,"date")),t()},onError:function(e,t){r.errback(e),a()}})};var a=function(e){r.errback(e)};return t.fetchItemByIdentity({identity:"eg",onItem:function(e){t.setValue(e,"independence",new Date(1993,4,24)),t.save({onComplete:function(){r.callback(!0)},onError:a})},onError:a}),r}},{name:"Write API: saveEverything, with custom color simple type",runTest:function(e){var t={Color:dojo.Color},r=new dojox.data.AndOrWriteStore({data:{identifier:"name",items:[{name:"Kermit",species:"frog",color:{_type:"Color",_value:"green"}},{name:"Beaker",hairColor:{_type:"Color",_value:"red"}}]},typeMap:t}),a=new doh.Deferred;r._saveEverything=function(r,n,o){var u=dojo.fromJson(o),i=new dojox.data.AndOrWriteStore({data:u,typeMap:t});i.fetchItemByIdentity({identity:"Animal",onItem:function(t){var a=i.getValue(t,"hairColor");e.assertTrue(a instanceof dojo.Color),e.assertEqual("rgba(255, 255, 0, 1)",a.toString()),r()},onError:function(e,t){a.errback(e),n()}})};r.newItem({name:"Animal",hairColor:new dojo.Color("yellow")});return r.save({onComplete:function(){a.callback(!0)},onError:function(e){a.errback(e)}}),a}},{name:"Write API: saveEverything, with custom color type general",runTest:function(e){var t={Color:{type:dojo.Color,deserialize:function(e){return new dojo.Color(e)},serialize:function(e){return e.toString()}}},r=new dojox.data.AndOrWriteStore({data:{identifier:"name",items:[{name:"Kermit",species:"frog",color:{_type:"Color",_value:"green"}},{name:"Beaker",hairColor:{_type:"Color",_value:"red"}}]},typeMap:t}),a=new doh.Deferred;r._saveEverything=function(r,n,o){var u=dojo.fromJson(o),i=new dojox.data.AndOrWriteStore({data:u,typeMap:t});i.fetchItemByIdentity({identity:"Animal",onItem:function(t){var a=i.getValue(t,"hairColor");e.assertTrue(a instanceof dojo.Color),e.assertEqual("rgba(255, 255, 0, 1)",a.toString()),r()},onError:function(e,t){a.errback(e),n()}})};r.newItem({name:"Animal",hairColor:new dojo.Color("yellow")});return r.save({onComplete:function(){a.callback(!0)},onError:function(e){a.errback(e)}}),a}},{name:"Write API: newItem, revert",runTest:function(e){var t=new dojox.data.AndOrWriteStore({data:{label:"name",items:[{name:"Ecuador",capital:"Quito"},{name:"Egypt",capital:"Cairo"},{name:"El Salvador",capital:"San Salvador"},{name:"Equatorial Guinea",capital:"Malabo"},{name:"Eritrea",capital:"Asmara"},{name:"Estonia",capital:"Tallinn"},{name:"Ethiopia",capital:"Addis Ababa"}]}}),r=t.newItem({name:"Utopia",capitol:"Perfect"}),a=r[t._itemNumPropName];e.assertTrue(t._arrayOfAllItems[a]===r),t.revert(),e.assertTrue(null===t._arrayOfAllItems[a])}},{name:"Write API: newItem, modify revert",runTest:function(){var e=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),t=new doh.Deferred;doh.assertTrue(!e.isDirty());var r=function(e,r){t.errback(e)};return e.fetch({onComplete:function(a,n){var o=a.length,u=e.newItem({name:"Canada",abbr:"ca",capital:"Ottawa"});e.setValue(u,"someattribute","modified a new item!");e.fetch({onComplete:function(a,n){var u=a.length;doh.assertEqual(u,o+1),e.revert(),e.fetch({onComplete:function(e,r){var a=e.length;doh.assertEqual(a,o),t.callback(!0)},onError:r})},onError:r})},onError:r}),t}},{name:"Write API: newItem, modify, delete, revert",runTest:function(){var e,t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=!1,a=new doh.Deferred;doh.assertTrue(!t.isDirty());var n=function(e,t){a.errback(e)};return t.fetch({onComplete:function(o,u){var i=o.length,s=t.newItem({name:"Canada",abbr:"ca",capital:"Ottawa"});t.setValue(s,"someattribute","modified a new item!");t.fetch({onComplete:function(o,u){var d=o.length;doh.assertEqual(d,i+1),t.deleteItem(s),t.fetch({onComplete:function(o,u){var s=o.length;for(doh.assertEqual(i,s),e=0;e<o.length&&!(r="ca"===t.getIdentity(o[e]));e++);r?a.errback(new Error("Error: Found the supposedly deleted item!")):(t.revert(),t.fetch({onComplete:function(n,o){var u=n.length;for(doh.assertEqual(u,i),e=0;e<n.length&&!(r="ca"===t.getIdentity(n[e]));e++);r?a.errback(new Error("Error: Found the 'new' item after revert!")):a.callback(!0)},onError:n}))},onError:n})},onError:n})},onError:n}),a}},{name:"Write API: onSet notification",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;t.fetchItemByIdentity({identity:"eg",onItem:function(a){var n=a,o=null;o=dojo.connect(t,"onSet",function(a,u,i,s){e.assertTrue(t.isItem(a)),e.assertTrue(a==n),e.assertTrue("capital"==u),e.assertTrue("Cairo"==i),e.assertTrue("New Cairo"==s),r.callback(!0),dojo.disconnect(o)}),t.setValue(n,"capital","New Cairo")},onError:function(e){r.errback(e)}})}},{name:"Write API: onNew notification",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred,a=null;a=dojo.connect(t,"onNew",function(n){e.assertTrue(t.isItem(n)),e.assertTrue("Canada"==t.getValue(n,"name")),r.callback(!0),dojo.disconnect(a)});t.newItem({name:"Canada",abbr:"ca",capital:"Ottawa"})}},{name:"Write API: onDelete notification",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new doh.Deferred;t.fetchItemByIdentity({identity:"eg",onItem:function(a){var n=a,o=null;o=dojo.connect(t,"onDelete",function(a){e.assertTrue(!1===t.isItem(a)),e.assertTrue(a==n),r.callback(!0),dojo.disconnect(o)}),t.deleteItem(n)},onError:function(e){r.errback(e)}})}},{name:"Write API: Read API conformance",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new dojo.data.api.Read,a=!0;for(var n in r){if("function"==typeof r[n])if("function"!=typeof t[n]){a=!1;break}}e.assertTrue(a)}},{name:"Write API: Write API conformance",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new dojo.data.api.Write,a=!0;for(var n in r){if("function"==typeof r[n])if("function"!=typeof t[n]){a=!1;break}}e.assertTrue(a)}},{name:"Write API: Notification API conformance",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries")),r=new dojo.data.api.Notification,a=!0;for(var n in r){if("function"==typeof r[n])if("function"!=typeof t[n]){a=!1;break}}e.assertTrue(a)}},{name:"Write API: Identity, auto-creation when missing",runTest:function(e){var t=new dojox.data.AndOrWriteStore({data:{label:"name",items:[{name:"Ecuador",capital:"Quito"},{name:"Egypt",capital:"Cairo"},{name:"El Salvador",capital:"San Salvador"},{name:"Equatorial Guinea",capital:"Malabo"},{name:"Eritrea",capital:"Asmara"},{name:"Estonia",capital:"Tallinn"},{name:"Ethiopia",capital:"Addis Ababa"}]}}),r=new doh.Deferred,a=function(e,t){r.errback(e)};return t.fetch({onComplete:function(n,o){e.assertEqual(7,n.length);var u=n[n.length-1];t.getIdentity(u);t.deleteItem(u),t.newItem({name:"Canada",capital:"Ottawa"});t.fetch({onComplete:function(a,n){e.assertEqual(7,a.length);for(var o={},u=0;u<a.length;++u){var i=a[u],s=t.getIdentity(i);o.hasOwnProperty(s)?e.assertTrue(!1):o[s]=i}r.callback(!0)},onError:a})},onError:a}),r}},{name:"Write API: Identity, auto-creation when missing, revert",runTest:function(e){var t=new dojox.data.AndOrWriteStore({data:{label:"name",items:[{name:"Ecuador",capital:"Quito"},{name:"Egypt",capital:"Cairo"},{name:"El Salvador",capital:"San Salvador"},{name:"Equatorial Guinea",capital:"Malabo"},{name:"Eritrea",capital:"Asmara"},{name:"Estonia",capital:"Tallinn"},{name:"Ethiopia",capital:"Addis Ababa"}]}}),r=new doh.Deferred,a=function(e,t){r.errback(e)};return t.fetch({onComplete:function(n,o){e.assertEqual(7,n.length);var u=n[n.length-1];t.getIdentity(u);t.deleteItem(u),t.newItem({name:"Canada",capital:"Ottawa"});t.fetch({onComplete:function(n,o){e.assertEqual(7,n.length);for(var u={},i=0;i<n.length;++i){var s=n[i],d=t.getIdentity(s);u.hasOwnProperty(d)?e.assertTrue(!1):u[d]=s}t.revert(),t.fetch({onComplete:function(t,a){e.assertEqual(7,t.length),r.callback(!0)},onError:a})},onError:a})},onError:a}),r}},{name:"Write API: reference integrity, check references",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("reference_integrity")),r=new doh.Deferred;return t.fetch({onError:function(e,t){r.errback(e)},onComplete:function(a,n){var o,u=null,i=null,s=null,d=null;for(o=0;o<a.length;o++){var l=t.getIdentity(a[o]);10===l?u=a[o]:1===l?i=a[o]:3===l?s=a[o]:5===l&&(d=a[o])}var c=t.getValues(u,"friends");e.assertTrue(null!==c),e.assertTrue(void 0!==c),e.assertTrue(t.isItem(u)),e.assertTrue(t.isItem(i)),e.assertTrue(t.isItem(s)),e.assertTrue(t.isItem(d));var f=0;try{for(o=0;o<c.length;o++)0===o?(e.assertTrue(t.isItem(c[o])),e.assertEqual(c[o],i),e.assertEqual(t.getIdentity(c[o]),1),f++):1===o?(e.assertTrue(t.isItem(c[o])),e.assertEqual(c[o],s),e.assertEqual(t.getIdentity(c[o]),3),f++):2===o&&(e.assertTrue(t.isItem(c[o])),e.assertEqual(c[o],d),e.assertEqual(t.getIdentity(c[o]),5),f++)}catch(e){doh.errback(e)}e.assertEqual(3,f),r.callback(!0)}}),r}},{name:"Write API: reference integrity, delete referenced item",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("reference_integrity")),r=new doh.Deferred,a=function(e,t){r.errback(e)};return t.fetchItemByIdentity({identity:10,onError:a,onItem:function(e,n){try{console.log("Before delete map state is: "+dojo.toJson(e[t._reverseRefMap])),t.deleteItem(e),console.log("After delete map state is: "+dojo.toJson(e[t._reverseRefMap])),t.fetch({onComplete:function(e,a){for(var n=!0,o=0;o<e.length;o++)for(var u=e[o],i=t.getAttributes(u),s=0;s<i.length;s++){for(var d=t.getValues(u,i[s]),l=!1,c=0;c<d.length;c++){var f=d[c];try{if(10==t.getIdentity(f)){l=!0;break}}catch(e){}}if(l){r.errback(new Error("Found a reference remaining to a deleted item.  Failure.")),n=!1;break}}n&&r.callback(!0)},onError:a})}catch(e){r.errback(e)}}}),r}},{name:"Write API: reference integrity, delete referenced item, then revert",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("reference_integrity")),r=new doh.Deferred,a=!0;return t.fetchItemByIdentity({identity:10,onError:function(e,t){r.errback(e)},onItem:function(n,o){try{console.log("Map before delete:"),t._dumpReferenceMap();var u=dojo.toJson(n[t._reverseRefMap]);t.deleteItem(n),console.log("Map after delete:"),t._dumpReferenceMap(),dojo.toJson(n[t._reverseRefMap]),t.revert(),console.log("Map after revert:"),t._dumpReferenceMap();var i=dojo.toJson(n[t._reverseRefMap]);e.assertTrue(i===u)}catch(e){r.errback(e),a=!1}a&&r.callback(!0)}}),r}},{name:"Write API: reference integrity, delete multiple items with references and revert",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("countries_references")),r=new doh.Deferred,a=function(t,a){r.errback(t),e.assertTrue(!1)};return t.fetchItemByIdentity({identity:"Egypt",onError:a,onItem:function(n,o){e.assertTrue(t.isItem(n));var u=n;t.fetchItemByIdentity({identity:"Nairobi",onError:a,onItem:function(n,o){e.assertTrue(t.isItem(n));var i=n;t.deleteItem(u),t.deleteItem(i);try{t.revert(),t.fetch({query:{name:"*"},start:0,count:20,onComplete:function(e,t){r.callback(!0)},onError:a})}catch(e){r.errback(e)}}})}}),r}},{name:"Write API: reference integrity, remove reference from attribute",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("reference_integrity")),r=new doh.Deferred,a=function(t,a){r.errback(t),e.assertTrue(!1)};return t.fetchItemByIdentity({identity:11,onError:a,onItem:function(n,o){try{t.setValues(n,"friends",[null]),t.fetchItemByIdentity({identity:10,onError:a,onItem:function(a,o){var u=a[t._reverseRefMap];t._dumpReferenceMap(),console.log("MAP for Item 10 is: "+dojo.toJson(u)),e.assertTrue(!u[11].friends),t.setValues(n,"siblings",[0,1,2]),e.assertTrue(!u[11]),r.callback(!0)}})}catch(t){console.debug(t),r.errback(t),e.assertTrue(!1)}}}),r}},{name:"Write API: reference integrity, delete referenced item non-parent",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("reference_integrity")),r=new doh.Deferred,a=function(e,t){r.errback(e)};return t.fetchItemByIdentity({identity:16,onError:a,onItem:function(e,n){try{console.log("Reference state for item 16 is: "+dojo.toJson(e[t._reverseRefMap])),t.deleteItem(e),t.fetch({onComplete:function(e,a){for(var n=!0,o=0;o<e.length;o++)for(var u=e[o],i=t.getAttributes(u),s=0;s<i.length;s++){for(var d=t.getValues(u,i[s]),l=!1,c=0;c<d.length;c++){var f=d[c];try{if(16==t.getIdentity(f)){l=!0;break}}catch(e){}}if(l){r.errback(new Error("Found a reference remaining to a deleted item.  Failure.")),n=!1;break}}n&&r.callback(!0)},onError:a})}catch(e){r.errback(e)}}}),r}},{name:"Write API: reference integrity, add reference to attribute",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("reference_integrity")),r=new doh.Deferred;return t.fetch({onError:function(t,a){r.errback(t),e.assertTrue(!1)},onComplete:function(a,n){e.assertTrue(a.length>2);var o=a[0],u=a[1];console.log("Map state for Item 1 is: "+dojo.toJson(o[t._reverseRefMap])),console.log("Map state for Item 2 is: "+dojo.toJson(u[t._reverseRefMap])),t.setValue(o,"siblings",u),console.log("Map state for Item 1 is: "+dojo.toJson(o[t._reverseRefMap])),console.log("Map state for Item 2 is: "+dojo.toJson(u[t._reverseRefMap])),e.assertTrue(null!==u[t._reverseRefMap]),e.assertTrue(u[t._reverseRefMap][t.getIdentity(o)].siblings),r.callback(!0)}}),r}},{name:"Write API: reference integrity, new item with parent reference",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("reference_integrity")),r=new doh.Deferred,a=!0;return t.fetchItemByIdentity({identity:10,onError:function(t,a){r.errback(t),e.assertTrue(!1)},onItem:function(n,o){try{var u=t.newItem({id:17,name:"Item 17"},{parent:n,attribute:"uncles"})[t._reverseRefMap];e.assertTrue(u[10].uncles),console.log("State of map of item 17 after newItem: "+dojo.toJson(u))}catch(t){console.debug(t),r.errback(t),e.assertTrue(!1),a=!1}a&&r.callback(!0)}}),r}},{name:"Write API: reference integrity, new item with reference to existing item",runTest:function(e){var t=new dojox.data.AndOrWriteStore(dojox.data.tests.stores.AndOrWriteStore.getTestData("reference_integrity")),r=new doh.Deferred,a=!0;return t.fetchItemByIdentity({identity:10,onError:function(t,a){r.errback(t),e.assertTrue(!1)},onItem:function(n,o){try{console.log("State of reference map to item 10 before newItem: "+dojo.toJson(n[t._reverseRefMap])),t.newItem({id:17,name:"Item 17",friends:[n]});var u=n[t._reverseRefMap];e.assertTrue(u[17].friends),console.log("State of reference map to item 10 after newItem: "+dojo.toJson(u))}catch(t){console.debug(t),r.errback(t),e.assertTrue(!1),a=!1}a&&r.callback(!0)}}),r}},{name:"Write API: reference integrity, disable reference integrity",runTest:function(e){var t=dojox.data.tests.stores.AndOrWriteStore.getTestData("reference_integrity");t.referenceIntegrity=!1;var r=new dojox.data.AndOrWriteStore(t),a=new doh.Deferred;return r.fetchItemByIdentity({identity:10,onError:function(t,r){a.errback(t),e.assertTrue(!1)},onItem:function(e,t){void 0===e[r._reverseRefMap]?a.callback(!0):a.errback(new Error("Disabling of reference integrity failed."))}}),a}}],dojox.data.tests.stores.AndOrWriteStore.tests},doh.register("dojox.data.tests.stores.AndOrWriteStore",dojox.data.tests.stores.AndOrWriteStore.getTests());
//# sourceMappingURL=../../../sourcemaps/data/tests/stores/AndOrWriteStore.js.map
