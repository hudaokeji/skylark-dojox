/**
 * dojox - A version of dojox.js framework that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/dojox/
 * @license MIT
 */
dojo.provide("dojox.data.tests.stores.QueryReadStore"),dojo.require("dojox.data.QueryReadStore"),dojo.require("dojo.data.api.Read"),dojox.data.tests.stores.QueryReadStore.getStore=function(){return new dojox.data.QueryReadStore({url:require.toUrl("dojox/data/tests/stores/QueryReadStore.php").toString()})},tests.register("dojox.data.tests.stores.QueryReadStore",[function(e){var t=dojox.data.tests.stores.QueryReadStore.getStore(),a=new doh.Deferred;return t.fetch({query:{q:"Alabama"},onComplete:a.getTestCallback(function(a,r){var o=a[0];e.assertEqual("Alabama",t.getValue(o,"name")),e.assertEqual("<img src='images/Alabama.jpg'/>Alabama",t.getValue(o,"label")),e.assertEqual("AL",t.getValue(o,"abbreviation")),e.assertEqual("default value",t.getValue(o,"NAME","default value")),e.assertError(Error,t,"getValue",["not an item","NOT THERE"]),e.assertError(Error,t,"getValue",[o,{}])})}),a},function(e){var t=dojox.data.tests.stores.QueryReadStore.getStore(),a=new doh.Deferred;return t.fetch({query:{q:"Alabama"},onComplete:a.getTestCallback(function(a,r){var o=a[0];e.assertEqual(["Alabama"],t.getValues(o,"name")),e.assertEqual(["<img src='images/Alabama.jpg'/>Alabama"],t.getValues(o,"label")),e.assertEqual(["AL"],t.getValues(o,"abbreviation")),e.assertEqual([],t.getValues(o,"NOT THERE"));var s=!1;try{t.getValues("not an item","NOT THERE")}catch(e){s=!0}e.assertTrue(s)})}),a},function(e){var t=dojox.data.tests.stores.QueryReadStore.getStore(),a=new doh.Deferred;return t.fetch({query:{q:"Alabama"},onComplete:a.getTestCallback(function(a,r){var o=a[0];e.assertEqual(["id","name","label","abbreviation","capital"],t.getAttributes(o)),e.assertError(Error,t,"getAttributes",[{}])})}),a},function(e){var t=dojox.data.tests.stores.QueryReadStore.getStore(),a=new doh.Deferred;return t.fetch({query:{q:"Alabama"},onComplete:a.getTestCallback(function(a,r){var o=a[0];e.assertEqual(["<img src='images/Alabama.jpg'/>Alabama"],t.getLabel(o))})}),a},function(e){var t=dojox.data.tests.stores.QueryReadStore.getStore(),a=new doh.Deferred;return t.fetch({query:{q:"Alaska"},onComplete:a.getTestCallback(function(a,r){var o=a[0];e.assertEqual(!0,t.hasAttribute(o,"name")),e.assertEqual(!0,t.hasAttribute(o,"label")),e.assertEqual(!0,t.hasAttribute(o,"abbreviation")),e.assertEqual(!1,t.hasAttribute(o,"NAME")),e.assertEqual(!1,t.hasAttribute(o,"Name")),e.assertEqual(!1,t.hasAttribute(o,"Label")),e.assertEqual(!1,t.hasAttribute({},"abbreviation")),e.assertEqual(!1,t.hasAttribute({name:"yo"},"name"))})}),a},function(e){var t=dojox.data.tests.stores.QueryReadStore.getStore(),a=new doh.Deferred;return t.fetch({query:{q:"Alaska"},onComplete:a.getTestCallback(function(a,r){var o=a[0];e.assertTrue(t.containsValue(o,"name","Alaska"))})}),a},function(e){var t=dojox.data.tests.stores.QueryReadStore.getStore(),a=new doh.Deferred;return t.fetch({query:{q:"Alaska"},onComplete:a.getTestCallback(function(a,r){e.assertEqual(!0,t.isItem(a[0])),e.assertEqual(!1,t.isItem({})),e.assertEqual(!1,t.isItem({name:"Alaska",label:"Alaska",abbreviation:"AK"}))})}),a},function(e){var t=dojox.data.tests.stores.QueryReadStore.getStore(),a=new doh.Deferred;return t.fetch({query:{q:"Alabama"},onComplete:a.getTestCallback(function(a,r){var o=a[0];e.assertTrue(t.isItemLoaded(o))})}),a},function(e){var t=dojox.data.tests.stores.QueryReadStore.getStore(),a=new doh.Deferred;return t.fetch({query:{q:"m*"},onComplete:a.getTestCallback(function(t,a){e.assertEqual(9,t.length)}),onError:a.getTestErrback(function(e,t){throw new Error(e)})}),a},function(e){var t=dojox.data.tests.stores.QueryReadStore.getStore(),a=new doh.Deferred;return t.fetch({query:{q:"m*"},start:0,count:5,onBegin:a.getTestErrback(function(t,a){e.assertEqual(9,t)}),onComplete:a.getTestCallback(function(t,a){e.assertEqual(5,t.length)}),onError:a.getTestErrback(function(e,t){throw new Error(e)})}),a},function(e){var t=dojox.data.tests.stores.QueryReadStore.getStore(),a=new doh.Deferred,r=!1;return t.fetch({query:{q:"m*"},start:5,count:5,onBegin:a.getTestErrback(function(t,a){e.assertEqual(9,t),r=!0}),onComplete:a.getTestCallback(function(t,a){e.t(r,"onBegin was called"),e.assertEqual(4,t.length)}),onError:a.getTestErrback(function(e,t){throw new Error(e)})}),a},function(e){var t=dojox.data.tests.stores.QueryReadStore.getStore();t.doClientPaging=!0;var a=new doh.Deferred;return t.fetch({query:{q:"m*"},start:0,count:5,onBegin:a.getTestErrback(function(t,a){e.assertEqual(9,t)}),onComplete:a.getTestCallback(function(t,a){e.assertEqual(5,t.length)}),onError:a.getTestErrback(function(e,t){throw new Error(e)})}),a},function(e){var t=dojox.data.tests.stores.QueryReadStore.getStore(),a=new doh.Deferred;return t.fetch({query:{q:"Alaska"},onComplete:a.getTestCallback(function(t,a){e.assertEqual(1,t.length)}),onError:a.getTestErrback(function(e,t){throw new Error(e)})}),a},function(e){var t=dojox.data.tests.stores.QueryReadStore.getStore();t.doClientPaging=!0;var a=null,r=[],o=new doh.Deferred;var s={query:{q:"m*"},start:0,count:5,onComplete:o.getTestErrback(function(n,u){e.assertEqual(5,n.length,"length of first fetch"),a=t.lastRequestHash,r=n,s.start=1,s.onComplete=o.getTestCallback(function(o,s){e.assertEqual(5,o.length,"length of second fetch"),e.assertEqual(a,t.lastRequestHash,"lastRequestHash"),e.assertEqual(r[1],o[0],"items[0]")}),t.fetch(s)}),onError:o.getTestErrback(function(e,t){throw new Error(e)})};return t.fetch(s),o},function(e){var t=dojox.data.tests.stores.QueryReadStore.getStore(),a=null,r=new doh.Deferred;function o(e,t){throw new Error(e)}return t.fetch({query:{},start:0,count:10,onComplete:r.getTestCallback(function(r,s){e.assertEqual(10,r.length),a=t.lastRequestHash,firstItems=r,t.doClientPaging=!1,t.fetch({start:5,count:5,onComplete:function(r,o){e.assertEqual(5,r.length),e.assertTrue(a!=t.lastRequestHash),e.assertEqual(t.getValue(firstItems[5],"name"),t.getValue(r[0],"name")),e.assertEqual(t.getValue(firstItems[6],"name"),t.getValue(r[1],"name")),e.assertEqual(t.getValue(firstItems[7],"name"),t.getValue(r[2],"name")),e.assertEqual(t.getValue(firstItems[8],"name"),t.getValue(r[3],"name")),e.assertEqual(t.getValue(firstItems[9],"name"),t.getValue(r[4],"name"))},onError:o})}),onError:r.getTestErrback(o)}),r},function(e){var t=dojox.data.tests.stores.QueryReadStore.getStore().getFeatures();e.assertTrue(t["dojo.data.api.Read"]),e.assertTrue(t["dojo.data.api.Identity"]);var a=0;for(i in t)a++;e.assertEqual(2,a)},function(e){var t=dojox.data.tests.stores.QueryReadStore.getStore(),a=new dojo.data.api.Read,r=!0;for(i in a){if("function"==typeof a[i])if("function"!=typeof t[i]){console.log("Problem with function: ["+i+"]"),r=!1;break}}e.assertTrue(r)}]);
//# sourceMappingURL=../../../sourcemaps/data/tests/stores/QueryReadStore.js.map
