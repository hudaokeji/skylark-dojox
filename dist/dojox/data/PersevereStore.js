/**
 * dojox - A version of dojox.js framework that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/dojox/
 * @license MIT
 */
define(["dojo","dojox","require","dojox/data/JsonQueryRestStore","dojox/rpc/Client","dojo/_base/url"],function(e,r,require){r.json.ref.serializeFunctions=!0;var t=e.declare("dojox.data.PersevereStore",r.data.JsonQueryRestStore,{useFullIdInQueries:!0,jsonQueryPagination:!1});return t.getStores=function(t,o){(t=t&&(t.match(/\/$/)?t:t+"/")||"/").match(/^\w*:\/\//)&&(require("dojox/io/xhrScriptPlugin"),r.io.xhrScriptPlugin(t,"callback",r.io.xhrPlugins.fullHttpAdapter));var n=e.xhr;e.xhr=function(r,t){return(t.headers=t.headers||{})["Server-Methods"]="false",n.apply(e,arguments)};var s=r.rpc.Rest(t,!0);r.rpc._sync=o;var a,i=s("Class/"),d={},p=0;return i.addCallback(function(o){function n(t){t.extends&&t.extends.prototype&&(t.prototype&&t.prototype.isPrototypeOf(t.extends.prototype)||(n(t.extends),r.rpc.Rest._index[t.prototype.__id]=t.prototype=e.mixin(e.delegate(t.extends.prototype),t.prototype)))}function s(t,o){if(t&&o)for(var n in t){"client"==t[n].runAt||o[n]||(o[n]=function(t){return function(){var o=e.rawXhrPost({url:this.__id,postData:r.json.ref.toJson({method:t,id:p++,params:e._toArray(arguments)}),handleAs:"json"});return o.addCallback(function(e){return e.error?new Error(e.error):e.result}),o}}(n))}}for(var i in r.json.ref.resolveJson(o,{index:r.rpc.Rest._index,idPrefix:"/Class/",assignAbsoluteIds:!0}),o)if("object"==typeof o[i]){var u=o[i];n(u),s(u.methods,u.prototype=u.prototype||{}),s(u.staticMethods,u),d[o[i].id]=new r.data.PersevereStore({target:new e._Url(t,o[i].id)+"/",schema:u})}return a=d}),e.xhr=n,o?a:i},t.addProxy=function(){require("dojox/io/xhrPlugins"),r.io.xhrPlugins.addProxy("/proxy/")},t});
//# sourceMappingURL=../sourcemaps/data/PersevereStore.js.map
