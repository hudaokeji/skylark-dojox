/**
 * dojox - A version of dojox.js framework that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/dojox/
 * @license MIT
 */
var timeoutInterval=1500,FIXEDSPLITER_CLASSNAME="mblFixedSplitter",FIXEDSPLITERPANE_CLASSNAME1="mblContainer",FIXEDSPLITERPANE_CLASSNAME2="mblFixedSplitterV",FIXEDSPLITERPANE_CLASSNAME3="mblFixedSplitterH",HEIGHT_RATIO1=.2,HEIGHT_RATIO2=1-HEIGHT_RATIO1,WIDTH_RATIO1=.2,WIDTH_RATIO2=1-WIDTH_RATIO1,WIDGET_PROPS=[{style:{width:"100%",height:"100%"},orientation:"V"},{style:{backgroundColor:"yellow",height:"20%"}},{style:{width:"100%",height:"100%"},orientation:"H"},{style:{backgroundColor:"pink",width:"20%"}},{style:{backgroundColor:"cyan"}}],WIDGET_INNERHTML=[{},{innerHTML:"pane #1"},{},{innerHTML:"pane #2"},{innerHTML:"pane #3"}],WIDGET_IDS=[{id:"dojox_mobile_FixedSplitter_0"},{id:"dojox_mobile_Container_0"},{id:"dojox_mobile_FixedSplitter_1"},{id:"dojox_mobile_Container_1"},{id:"dojox_mobile_Container_2"}];require(["dojo/_base/connect","dojo/_base/lang","dojo/dom-construct","dojo/dom-class","dojo/dom-geometry","dojo/window","dojo/ready","dijit/registry","doh/runner","dojox/mobile/FixedSplitter","dojox/mobile/Container","dojox/mobile/parser"],function(e,o,t,i,d,n,r,I,T,a,_){function E(e,o,t,d){s(e,o,t),T.assertTrue(i.contains(e.domNode,FIXEDSPLITER_CLASSNAME),FIXEDSPLITER_CLASSNAME),d&&T.assertTrue(i.contains(e.domNode,d),"expected: "+d+" but got "+e.domNode.className)}function l(e,o,t,d){s(e,o,t),T.assertTrue(i.contains(e.domNode,FIXEDSPLITERPANE_CLASSNAME1),FIXEDSPLITERPANE_CLASSNAME1),d&&T.assertTrue(i.contains(e.domNode,d),d)}function s(e,o,t){T.assertNotEqual(null,e,"FixedSplitter: Did not instantiate."),T.assertTrue(o-2<e.domNode.offsetHeight&&e.domNode.offsetHeight<o+2,"expected: "+o+"+-2 but got "+e.domNode.offsetHeight+"height: id = "+e.domNode.id),T.assertTrue(t-2<e.domNode.offsetWidth&&e.domNode.offsetWidth<t+2,"expected: "+t+"+-2 but got "+e.domNode.offsetWidth+"offsetWidth: id = "+e.domNode.id)}r(function(){var e;1===WIDGET_PROGRAMMATICALLY?function(e){var i=new a(o.mixin(WIDGET_IDS[0],WIDGET_PROPS[0],WIDGET_INNERHTML[0]));T.assertNotEqual(null,i),t.place(i.domNode,e,"replace"),i.startup();var d=new _(o.mixin(WIDGET_IDS[1],WIDGET_PROPS[1],WIDGET_INNERHTML[1])),n=new a(o.mixin(WIDGET_IDS[2],WIDGET_PROPS[2],WIDGET_INNERHTML[2])),r=new _(o.mixin(WIDGET_IDS[3],WIDGET_PROPS[3],WIDGET_INNERHTML[3])),I=new _(o.mixin(WIDGET_IDS[4],WIDGET_PROPS[4],WIDGET_INNERHTML[4]));i.addChild(d),i.addChild(n),n.addChild(r),n.addChild(I)}("FixedSplitterPlace"):2===WIDGET_PROGRAMMATICALLY&&(e=new a(WIDGET_PROPS[0],WIDGET_IDS[0].id),T.assertNotEqual(null,e),new _(WIDGET_PROPS[1],WIDGET_IDS[1].id),new a(WIDGET_PROPS[2],WIDGET_IDS[2].id),new _(WIDGET_PROPS[3],WIDGET_IDS[3].id),new _(WIDGET_PROPS[4],WIDGET_IDS[4].id),e.startup()),T.register("dojox.mobile.test.doh.FixedSplitter",[{name:"FixedSplitter Verification",timeout:4e3,runTest:function(){var e=new T.Deferred;return setTimeout(e.getTestCallback(function(){var e=n.getBox(),o=I.byId("dojox_mobile_FixedSplitter_0"),t=I.byId("dojox_mobile_Container_0"),i=I.byId("dojox_mobile_FixedSplitter_1"),r=I.byId("dojox_mobile_Container_1"),a=I.byId("dojox_mobile_Container_2"),_=d.getMarginBox(o.domNode);T.assertEqual(e.h,t.domNode.offsetHeight+a.domNode.offsetHeight),T.assertEqual(e.w,r.domNode.offsetWidth+a.domNode.offsetWidth),E(o,0,_.w),l(t,Math.round(e.h*HEIGHT_RATIO1),e.w),E(i,Math.round(e.h*HEIGHT_RATIO2),e.w,FIXEDSPLITERPANE_CLASSNAME3),l(r,Math.round(e.h*HEIGHT_RATIO2),Math.round(e.w*WIDTH_RATIO1)),l(a,Math.round(e.h*HEIGHT_RATIO2),Math.round(e.w*WIDTH_RATIO2))}),timeoutInterval),e}},{name:"FixedSplitter Verification 2",timeout:4e3,runTest:function(){var e,o=new a,t=new T.Deferred,i=0;return n.onerror=function(o,t,d){i++,e="After destroy: "+o+"\nURL: "+t+"\nLine number: "+d,console.log(e)},o.startup(),o.destroyRecursive(!1),setTimeout(t.getTestCallback(function(){T.assertEqual(0,i,e)}),2e3),t}}]),T.run()})});
//# sourceMappingURL=../../../../sourcemaps/mobile/tests/doh/fixedsplitter/FixedSplitterTests.js.map
