/**
 * dojox - A version of dojox.js framework that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/dojox/
 * @license MIT
 */
define(["dojo/_base/kernel","dojo/_base/xhr","dojo/AdapterRegistry"],function(t,r,e){var n,o,u;function i(){return o=dojox.io.xhrPlugins.plainXhr=o||t._defaultXhr||r}return t.getObject("io.xhrPlugins",!0,dojox),dojox.io.xhrPlugins.register=function(){var r=i();return n||(n=new e,t[t._defaultXhr?"_defaultXhr":"xhr"]=function(t,r,e){return n.match.apply(n,arguments)},n.register("xhr",function(t,r){if(!r.url.match(/^\w*:\/\//))return!0;var e=window.location.href.match(/^.*?\/\/.*?\//)[0];return r.url.substring(0,e.length)==e},r)),n.register.apply(n,arguments)},dojox.io.xhrPlugins.addProxy=function(r){var e=i();dojox.io.xhrPlugins.register("proxy",function(t,r){return!0},function(n,o,u){return o.url=r+encodeURIComponent(o.url),e.call(t,n,o,u)})},dojox.io.xhrPlugins.addCrossSiteXhr=function(r,e){var n=i();if(void 0===u&&window.XMLHttpRequest)try{(new XMLHttpRequest).open("GET","http://testing-cross-domain-capability.com",!0),u=!0,t.config.noRequestedWithHeaders=!0}catch(t){u=!1}dojox.io.xhrPlugins.register("cs-xhr",function(t,n){return(u||window.XDomainRequest&&!0!==n.sync&&("GET"==t||"POST"==t||e))&&n.url.substring(0,r.length)==r},u?n:function(){var r=t._xhrObj;t._xhrObj=function(){var t=new XDomainRequest;function r(r,e){return function(){t.readyState=e,t.status=r}}return t.readyState=1,t.setRequestHeader=function(){},t.getResponseHeader=function(r){return"Content-Type"==r?t.contentType:null},t.onload=r(200,4),t.onprogress=r(200,3),t.onerror=r(404,4),t};var n=(e?e(i()):i()).apply(t,arguments);return t._xhrObj=r,n})},dojox.io.xhrPlugins.fullHttpAdapter=function(r,e){return function(n,o,u){var i={},a={};for(var s in"GET"!=n&&(a["http-method"]=n,o.putData&&e&&(i["http-content"]=o.putData,delete o.putData,u=!1),o.postData&&e&&(i["http-content"]=o.postData,delete o.postData,u=!1),n="POST"),o.headers){a[s.match(/^X-/)?s.substring(2).replace(/-/g,"_").toLowerCase():"http-"+s]=o.headers[s]}return o.query=t.objectToQuery(a),t._ioAddQueryToUrl(o),o.content=t.mixin(o.content||{},i),r.call(t,n,o,u)}},dojox.io.xhrPlugins});
//# sourceMappingURL=../sourcemaps/io/xhrPlugins.js.map
