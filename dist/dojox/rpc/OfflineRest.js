/**
 * dojox - A version of dojox.js framework that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/dojox/
 * @license MIT
 */
define("dojox/rpc/OfflineRest",["dojo","dojox","dojox/data/ClientFilter","dojox/rpc/Rest","dojox/storage"],function(e,t){var n,r,o,a=t.rpc.Rest,s="dojox_rpc_OfflineRest",c=a._index;function i(e){return e.replace(/[^0-9A-Za-z_]/g,"_")}function u(e,o){n&&!r&&(o||e&&e.__id)&&t.storage.put(i(o||e.__id),"object"==typeof e?t.json.ref.toJson(e):e,function(){},s)}function d(e){return e instanceof Error&&(503==e.status||e.status>12e3||!e.status)}function f(){if(n){var e=t.storage.get("dirty",s);if(e)for(var r in e)h(r,e)}}function l(){o.sendChanges(),o.downloadChanges()}t.storage.manager.addOnLoad(function(){for(var e in n=t.storage.manager.available,c)u(c[e],e)});var g=setInterval(l,15e3);e.connect(document,"ononline",l),(o=t.rpc.OfflineRest={turnOffAutoSync:function(){clearInterval(g)},sync:l,sendChanges:f,downloadChanges:function(){},addStore:function(e,t){o.stores.push(e),e.fetch({queryOptions:{cache:!0},query:t,onComplete:function(t,n){e._localBaseResults=t,e._localBaseFetch=n}})}}).stores=[];var v=a._get;function p(e,n,r,o,a){"delete"==e?t.storage.remove(i(n),s):t.storage.put(i(r),o,function(){},s);var c=a&&a._store;c&&(c.updateResultSet(c._localBaseResults,c._localBaseFetch),t.storage.put(i(a._getRequest(c._localBaseFetch.query).url),t.json.ref.toJson(c._localBaseResults),function(){},s))}a._get=function(o,a){try{if(f(),window.navigator&&!1===navigator.onLine)throw new Error;var c=v(o,a)}catch(t){(c=new e.Deferred).errback(t)}var l=t.rpc._sync;return c.addCallback(function(e){return u(e,o._getRequest(a).url),e}),c.addErrback(function(u){if(n){if(d(u)){var f={},g=function(n,r){if(f[n])return r;var o=e.fromJson(t.storage.get(i(n),s))||r;for(var a in f[n]=o,o){var c=o[a];(n=c&&c.$ref)&&(n.substring&&"cid:"==n.substring(0,4)&&(n=n.substring(4)),o[a]=g(n,c))}if(o instanceof Array)for(a=0;a<o.length;a++)void 0===o[a]&&o.splice(a--,1);return o};r=!0;var v=g(o._getRequest(a).url);return v?(r=!1,v):u}return u}return l?new Error("Storage manager not loaded, can not continue"):((c=new e.Deferred).addCallback(arguments.callee),t.storage.manager.addOnLoad(function(){c.callback()}),c)}),c},e.addOnLoad(function(){e.connect(t.data,"restListener",function(n){var r=n.channel,o=n.event.toLowerCase(),a=t.rpc.JsonRest&&t.rpc.JsonRest.getServiceAndId(r).service;p(o,r,"post"==o?r+n.result.id:r,e.toJson(n.result),a)})});var _=a._change;function h(e,n){var r=n[e],o=t.rpc.JsonRest.getServiceAndId(r.id),a=_(r.method,o.service,o.id,r.content);return n[e]=r,t.storage.put("dirty",n,function(){},s),a.addBoth(function(n){if(d(n))return null;var r=t.storage.get("dirty",s)||{};return delete r[e],t.storage.put("dirty",r,function(){},s),n}),a}return a._change=function(e,r,o,a){if(!n)return _.apply(this,arguments);var c=r._getRequest(o).url;p(e,c,t.rpc.JsonRest._contentId,a,r);var i=t.storage.get("dirty",s)||{};if("put"==e||"delete"==e)var u=c;else{for(var d in u=0,i)isNaN(parseInt(d))||(u=d);u++}return i[u]={method:e,id:c,content:a},h(u,i)},e.connect(c,"onLoad",u),e.connect(c,"onUpdate",u),o});
//# sourceMappingURL=../sourcemaps/rpc/OfflineRest.js.map
