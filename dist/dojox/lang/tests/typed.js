/**
 * dojox - A version of dojox.js framework that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/dojox/
 * @license MIT
 */
dojo.provide("dojox.lang.tests.typed"),dojo.config.typeCheckAllClasses=!0,dojo.require("dojox.lang.typed"),function(){dojox.lang.typed(dojo.declare("dojox.lang.tests.TypedClass",null,{constructor:function(t){t&&(this.aString="start",this.self=this)},add:function(t,n){return t+n},withCallback:function(t,n){t(n)}}));var t=dojox.lang.tests.TypedClass;t.properties={aString:String,self:t,anInt:{type:"integer",maximum:100,optional:!0}},t.methods={add:{parameters:[{type:"number"},{type:"number"}],returns:{type:"string"}},withCallback:{parameters:[{type:"function",parameters:[Number]}]}};var n={}.__defineGetter__;function e(t){try{t()}catch(t){return}throw new Error("No exception was thrown where an exception was required")}n||console.warn("This platform does not support getters, property type checking will not be tested"),tests.register("dojox.lang.tests.typed",[function(){e(function(){typedInstance=new t})},function(a){typedInstance=new t(!0),a.is(typedInstance.aString,"start"),typedInstance.aString="hi",n&&e(function(){typedInstance.aString=44}),typedInstance.anInt=22,n&&e(function(){typedInstance.anInt="hello"}),n&&e(function(){typedInstance.anInt=44.33}),n&&e(function(){typedInstance.anInt=144}),typedInstance.self=typedInstance,n&&e(function(){typedInstance.self={}})},function(){typedInstance=new t(!0),e(function(){typedInstance.add("hi",33)}),e(function(){typedInstance.add(22,33)}),e(function(){typedInstance.withCallback(22,33)}),e(function(){typedInstance.withCallback(function(){},"hi")}),t.methods.add.returns.type="number",typedInstance.add(22,33),typedInstance.withCallback(function(){},44)},function(){dojo.declare("dojox.lang.tests.AutoTypedClass",null,{constructor:function(){this.foo="bar"},subtract:function(t,n){return t-n}});var t=dojox.lang.tests.AutoTypedClass;t.properties={foo:{type:"string"}},t.methods={subtract:{parameters:[{type:"number"},{type:"number"}]}},typedInstance=new t(!0),n&&e(function(){typedInstance.foo=33}),typedInstance.foo="baz",e(function(){typedInstance.subtract("hi",33)}),typedInstance.subtract(22,33)}])}();
//# sourceMappingURL=../../sourcemaps/lang/tests/typed.js.map
