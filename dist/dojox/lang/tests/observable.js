/**
 * dojox - A version of dojox.js framework that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/dojox/
 * @license MIT
 */
dojo.provide("dojox.lang.tests.observable"),dojo.require("dojox.lang.observable"),tests.register("dojox.lang.tests.observable",[function(o){console.log("start");var e=[],n=new dojox.lang.makeObservable(function(o,n){return e.push("onRead "+n),o[n]},function(o,n,t){e.push("onWrite "+n),o[n]=t},function(o,n,t,r){return e.push("onInvoke "+t),n[t].apply(o,r)}),t=n({foo:"bar",test:function(){return this.foo}});e.push("returned "+t.test()),t.foo="new",e.push(t.foo),o.assertEqual("onInvoke test,onRead foo,returned bar,onWrite foo,onRead foo,new",e.join(","))},function(o){var e=[],n=dojox.lang.observable({foo:"bar",test:function(){return this.foo}},function(o,n){return e.push("onRead "+n),o[n]},function(o,n,t){e.push("onWrite "+n),o[n]=t},function(o,n,t,r){return e.push("onInvoke "+t),n[t].apply(o,r)});e.push("returned "+n.test()),n.foo="new",e.push(n.foo),o.assertEqual("onInvoke test,onRead foo,returned bar,onWrite foo,onRead foo,new",e.join(","))},function(o){console.log("start");var e=[],n={foo:"bar"},t=dojox.lang.ReadOnlyProxy(n);e.push(t.foo),t.foo="illegal",e.push(t.foo),n.foo="new",e.push(t.foo),o.assertEqual("bar,bar,new",e.join(","))},function(o){for(var e=new dojox.lang.makeObservable(function(o,e){return o[e]},function(o,e,n){o[e]=n},function(o,e,n,t){return e[n].apply(o,t)}),n={foo:"bar",bar:"foo"},t=(e(n),(new Date).getTime()),r=0;r<1e5;r++);var a=function(o,e,n){var t=o[e];return t instanceof dojo.Deferred?(dojox.rpc._sync=!n,t.addCallback(function(o){return t=o,n&&n(t),t}),delete dojox.rpc._sync):n&&n(t),t};for(console.log((new Date).getTime()-t),t=(new Date).getTime(),r=0;r<1e5;r++)a(n,"foo"),a(n,"bar");for(console.log((new Date).getTime()-t),t=(new Date).getTime(),r=0;r<1e6;r++);console.log((new Date).getTime()-t)}]);
//# sourceMappingURL=../../sourcemaps/lang/tests/observable.js.map
