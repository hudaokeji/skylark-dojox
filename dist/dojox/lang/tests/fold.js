/**
 * dojox - A version of dojox.js framework that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/dojox/
 * @license MIT
 */
dojo.provide("dojox.lang.tests.fold"),dojo.require("dojox.lang.functional.fold"),dojo.require("dojox.lang.functional.scan"),dojo.require("dojox.lang.functional.curry"),dojo.require("dojox.lang.functional.sequence"),dojo.require("dojox.lang.functional.listcomp"),dojo.require("dojox.lang.functional.object"),function(){var a=dojox.lang.functional,n=a.arg,t={a:1,b:2,c:3},o=function(a){this.array=a,this.position=a.length-1};dojo.extend(o,{hasNext:a.lambda("this.position >= 0"),next:a.lambda("this.array[this.position--]")}),tests.register("dojox.lang.tests.fold",[function(n){n.assertEqual(a.foldl([1,2,3],"+",0),6)},function(n){n.assertEqual(a.foldl1([1,2,3],"*"),6)},function(n){n.assertEqual(a.foldl1([1,2,3],"/"),1/6)},function(t){t.assertEqual(a.foldl1([1,2,3],a.partial(Math.max,n,n)),3)},function(t){t.assertEqual(a.foldl1([1,2,3],a.partial(Math.min,n,n)),1)},function(n){var t=new o([1,2,3]);n.assertEqual(a.foldl(t,"+",0),6)},function(n){var t=new o([1,2,3]);n.assertEqual(a.foldl1(t,"/"),1.5)},function(n){n.assertEqual(a.foldl(t,"*",2),12)},function(n){n.assertEqual(a.foldl1(t,"+"),6)},function(n){n.assertEqual(a.foldr([1,2,3],"+",0),6)},function(n){n.assertEqual(a.foldr1([1,2,3],"*"),6)},function(n){n.assertEqual(a.foldr1([1,2,3],"/"),1.5)},function(t){t.assertEqual(a.foldr1([1,2,3],a.partial(Math.max,n,n)),3)},function(t){t.assertEqual(a.foldr1([1,2,3],a.partial(Math.min,n,n)),1)},function(n){n.assertEqual(a.repeat(10,"2*",1),a.unfold("x[0] >= 10","x[1]","[x[0] + 1, 2 * x[1]]",[0,1]))},function(n){n.assertEqual(a.until(">1024","2*",1),a.unfold(">1024","x","2*",1))},function(n){n.assertEqual(a.scanl([1,2,3],"+",0),[0,1,3,6])},function(n){n.assertEqual(a.scanl1([1,2,3],"*"),[1,2,6])},function(t){t.assertEqual(a.scanl1([1,2,3],a.partial(Math.max,n,n)),[1,2,3])},function(t){t.assertEqual(a.scanl1([1,2,3],a.partial(Math.min,n,n)),[1,1,1])},function(n){var t=new o([1,2,3]);n.assertEqual(a.scanl(t,"+",0),[0,3,5,6])},function(n){var t=new o([1,2,3]);n.assertEqual(a.scanl1(t,"*"),[3,6,6])},function(n){n.assertEqual(a.scanl(t,"+",0),a.scanl(a.values(t),"+",0))},function(n){n.assertEqual(a.scanl1(t,"*"),a.scanl1(a.values(t),"*"))},function(n){n.assertEqual(a.scanr([1,2,3],"+",0),[6,5,3,0])},function(n){n.assertEqual(a.scanr1([1,2,3],"*"),[6,6,3])},function(t){t.assertEqual(a.scanr1([1,2,3],a.partial(Math.max,n,n)),[3,3,3])},function(t){t.assertEqual(a.scanr1([1,2,3],a.partial(Math.min,n,n)),[1,2,3])}])}();
//# sourceMappingURL=../../sourcemaps/lang/tests/fold.js.map
